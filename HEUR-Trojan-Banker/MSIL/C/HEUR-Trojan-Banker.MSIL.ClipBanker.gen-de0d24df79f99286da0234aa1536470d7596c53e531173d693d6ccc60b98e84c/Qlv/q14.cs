// Decompiled with JetBrains decompiler
// Type: Qlv.q14
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u0031r7;
using \u0031Y3;
using \u003254;
using \u0032Zv;
using \u003312;
using \u003362;
using \u0033wQ;
using \u0034gV;
using \u0034i2;
using \u0034ke;
using \u0034p7;
using \u00353F;
using \u00357a;
using \u0035H3;
using \u0037q5;
using \u0037yC;
using \u003812;
using \u0038Gu;
using \u00392b;
using A6y;
using A7B;
using B15;
using G28;
using g5V;
using hyS;
using k35;
using N83;
using Nf3;
using O8M;
using OT8;
using pN7;
using Q8f;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using t28;
using u2y;
using UsF;
using x95;

namespace Qlv
{
  [ComVisible(true)]
  [Guid("ebc25cf6-9120-4283-b972-0e5520d00004")]
  public sealed class q14
  {
    private short \u0033I3;
    private short \u0035N2;
    private int C8x;
    private short \u0031Z1;
    private short X1z;
    private short W16;
    private \u00331g \u0035QU;
    private \u0039T3 l86;
    private GCG b72;
    private Encoding \u0039O9;
    private Encoding \u00326B;
    private VR4 YO4;
    private H85 Jf3;
    private H85 ftz;
    private \u0035N5 z45;
    private \u0035N5 K4b;
    private short h1P;
    internal DateTime \u00394A;
    private bool u1u;
    private DateTime \u0034k9;
    private DateTime \u0032Tx;
    private DateTime \u0032uM;
    private bool \u0034h3;
    private bool \u00392c = true;
    private bool \u003437;
    private bool \u00311P = true;
    internal string \u00321u;
    private string \u00365g;
    internal short S1g;
    internal short O48;
    internal short z18;
    private short m1i;
    private PIJ z35;
    internal string i9M;
    private bool \u003965;
    private byte[] \u003854;
    internal long h1c;
    internal long \u003814;
    internal long \u003378;
    internal int \u0035U7;
    private bool \u0036VU;
    internal int l2q;
    internal byte[] eGK;
    private bool \u00388u;
    private bool \u00318k;
    private bool \u0038Mh;
    private bool L55;
    private uint \u0039rK;
    private static Encoding DFl = Encoding.GetEncoding("IBM437");
    private Encoding k4G;
    internal \u0033rn \u0039tG;
    private long x4p = -1;
    private byte[] G81;
    internal long h4e;
    private long u7h;
    private long t5I;
    private int \u0033et;
    private int \u0037f1;
    internal bool \u003832;
    private uint H37;
    internal string \u0036Ug;
    internal fGj r98;
    internal \u0031p6 I82;
    internal \u0031p6 \u003397;
    internal byte[] K8w;
    internal Stream \u0034c3;
    private Stream iWJ;
    private long? iD3;
    private bool \u0039hF;
    private bool jm6;
    private bool K4E;
    private bool? vn6;
    private bool? \u0033vC;
    private bool \u0031jb;
    private \u00375n \u0032xE;
    private static DateTime inQ = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
    private static DateTime sd7 = DateTime.FromFileTimeUtc(0L);
    private static DateTime \u0037WW = new DateTime(1, 1, 1, 0, 0, 0, DateTimeKind.Utc);
    private I7i X4Q;
    private i3h kQ8;
    private VXm BP2;
    private Stream v8d;
    private int Jm1;
    private object \u003356 = new object();

    internal bool t54 => this.\u0035N2 == (short) 0 && (this.C8x & 16) == 16;

    internal void \u0037o7()
    {
      this.x4p = -1L;
      this.\u0033et = 0;
      q14.\u0033O6.\u0032v7();
    }

    public string y2q
    {
      get
      {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.Append(string.Format("          ZipEntry: {0}\n", (object) this.L83)).Append(string.Format("   Version Made By: {0}\n", (object) this.\u0033I3)).Append(string.Format(" Needed to extract: {0}\n", (object) this.O31));
        if (this.\u003965)
          stringBuilder.Append("        Entry type: directory\n");
        else
          stringBuilder.Append(string.Format("         File type: {0}\n", this.\u0031jb ? (object) "text" : (object) "binary")).Append(string.Format("       Compression: {0}\n", (object) this.UQ3)).Append(string.Format("        Compressed: 0x{0:X}\n", (object) this.\u0037qg)).Append(string.Format("      Uncompressed: 0x{0:X}\n", (object) this.\u0039MP)).Append(string.Format("             CRC32: 0x{0:X8}\n", (object) this.l2q));
        stringBuilder.Append(string.Format("       Disk Number: {0}\n", (object) this.\u0039rK));
        if (this.h4e > (long) uint.MaxValue)
          stringBuilder.Append(string.Format("   Relative Offset: 0x{0:X16}\n", (object) this.h4e));
        else
          stringBuilder.Append(string.Format("   Relative Offset: 0x{0:X8}\n", (object) this.h4e));
        stringBuilder.Append(string.Format("         Bit Field: 0x{0:X4}\n", (object) this.O48)).Append(string.Format("        Encrypted?: {0}\n", (object) this.\u0038Mh)).Append(string.Format("          Timeblob: 0x{0:X8}\n", (object) this.\u0035U7)).Append(string.Format("              Time: {0}\n", (object) To4.\u003162(this.\u0035U7)));
        stringBuilder.Append(string.Format("         Is Zip64?: {0}\n", (object) this.\u003832));
        if (!string.IsNullOrEmpty(this.i9M))
          stringBuilder.Append(string.Format("           Comment: {0}\n", (object) this.i9M));
        stringBuilder.Append("\n");
        return stringBuilder.ToString();
      }
    }

    internal static q14 \u00353N([In] \u0032f3 obj0, [In] Dictionary<string, object> obj1)
    {
      Stream stream = obj0.\u00394k;
      Encoding encoding = obj0.\u0033B3 == VR4.\u0023d ? obj0.QT1 : \u0032f3.l79;
      q14 q14_1;
      do
      {
        int num1 = To4.\u00352s(stream);
        if (q14.\u0032P3(num1))
        {
          stream.Seek(-4L, SeekOrigin.Current);
          if (num1 != 101010256 && num1 != 101075792 && num1 != 67324752)
            throw new e1T(string.Format("  Bad signature (0x{0:X8}) at position 0x{1:X8}", (object) num1, (object) stream.Position));
          return (q14) null;
        }
        int num2 = 46;
        byte[] buffer1 = new byte[42];
        if (stream.Read(buffer1, 0, buffer1.Length) != buffer1.Length)
          return (q14) null;
        int num3 = 0;
        q14_1 = new q14();
        q14_1.SG2 = encoding;
        q14_1.r98 = fGj.\u0023d;
        q14_1.\u0039tG = new \u0033rn((object) obj0);
        q14 q14_2 = q14_1;
        byte[] numArray1 = buffer1;
        int index1 = num3;
        int num4 = index1 + 1;
        int num5 = (int) numArray1[index1];
        byte[] numArray2 = buffer1;
        int index2 = num4;
        int num6 = index2 + 1;
        int num7 = (int) numArray2[index2] * 256;
        int num8 = (int) (short) (num5 + num7);
        q14_2.\u0033I3 = (short) num8;
        q14 q14_3 = q14_1;
        byte[] numArray3 = buffer1;
        int index3 = num6;
        int num9 = index3 + 1;
        int num10 = (int) numArray3[index3];
        byte[] numArray4 = buffer1;
        int index4 = num9;
        int num11 = index4 + 1;
        int num12 = (int) numArray4[index4] * 256;
        int num13 = (int) (short) (num10 + num12);
        q14_3.S1g = (short) num13;
        q14 q14_4 = q14_1;
        byte[] numArray5 = buffer1;
        int index5 = num11;
        int num14 = index5 + 1;
        int num15 = (int) numArray5[index5];
        byte[] numArray6 = buffer1;
        int index6 = num14;
        int num16 = index6 + 1;
        int num17 = (int) numArray6[index6] * 256;
        int num18 = (int) (short) (num15 + num17);
        q14_4.O48 = (short) num18;
        q14 q14_5 = q14_1;
        byte[] numArray7 = buffer1;
        int index7 = num16;
        int num19 = index7 + 1;
        int num20 = (int) numArray7[index7];
        byte[] numArray8 = buffer1;
        int index8 = num19;
        int num21 = index8 + 1;
        int num22 = (int) numArray8[index8] * 256;
        int num23 = (int) (short) (num20 + num22);
        q14_5.z18 = (short) num23;
        q14 q14_6 = q14_1;
        byte[] numArray9 = buffer1;
        int index9 = num21;
        int num24 = index9 + 1;
        int num25 = (int) numArray9[index9];
        byte[] numArray10 = buffer1;
        int index10 = num24;
        int num26 = index10 + 1;
        int num27 = (int) numArray10[index10] * 256;
        int num28 = num25 + num27;
        byte[] numArray11 = buffer1;
        int index11 = num26;
        int num29 = index11 + 1;
        int num30 = (int) numArray11[index11] * 256 * 256;
        int num31 = num28 + num30;
        byte[] numArray12 = buffer1;
        int index12 = num29;
        int num32 = index12 + 1;
        int num33 = (int) numArray12[index12] * 256 * 256 * 256;
        int num34 = num31 + num33;
        q14_6.\u0035U7 = num34;
        q14_1.\u00394A = To4.\u003162(q14_1.\u0035U7);
        q14_1.\u0032xE |= \u00375n.\u0023b;
        q14 q14_7 = q14_1;
        byte[] numArray13 = buffer1;
        int index13 = num32;
        int num35 = index13 + 1;
        int num36 = (int) numArray13[index13];
        byte[] numArray14 = buffer1;
        int index14 = num35;
        int num37 = index14 + 1;
        int num38 = (int) numArray14[index14] * 256;
        int num39 = num36 + num38;
        byte[] numArray15 = buffer1;
        int index15 = num37;
        int num40 = index15 + 1;
        int num41 = (int) numArray15[index15] * 256 * 256;
        int num42 = num39 + num41;
        byte[] numArray16 = buffer1;
        int index16 = num40;
        int num43 = index16 + 1;
        int num44 = (int) numArray16[index16] * 256 * 256 * 256;
        int num45 = num42 + num44;
        q14_7.l2q = num45;
        q14 q14_8 = q14_1;
        byte[] numArray17 = buffer1;
        int index17 = num43;
        int num46 = index17 + 1;
        int num47 = (int) numArray17[index17];
        byte[] numArray18 = buffer1;
        int index18 = num46;
        int num48 = index18 + 1;
        int num49 = (int) numArray18[index18] * 256;
        int num50 = num47 + num49;
        byte[] numArray19 = buffer1;
        int index19 = num48;
        int num51 = index19 + 1;
        int num52 = (int) numArray19[index19] * 256 * 256;
        int num53 = num50 + num52;
        byte[] numArray20 = buffer1;
        int index20 = num51;
        int num54 = index20 + 1;
        int num55 = (int) numArray20[index20] * 256 * 256 * 256;
        long num56 = (long) (uint) (num53 + num55);
        q14_8.h1c = num56;
        q14 q14_9 = q14_1;
        byte[] numArray21 = buffer1;
        int index21 = num54;
        int num57 = index21 + 1;
        int num58 = (int) numArray21[index21];
        byte[] numArray22 = buffer1;
        int index22 = num57;
        int num59 = index22 + 1;
        int num60 = (int) numArray22[index22] * 256;
        int num61 = num58 + num60;
        byte[] numArray23 = buffer1;
        int index23 = num59;
        int num62 = index23 + 1;
        int num63 = (int) numArray23[index23] * 256 * 256;
        int num64 = num61 + num63;
        byte[] numArray24 = buffer1;
        int index24 = num62;
        int num65 = index24 + 1;
        int num66 = (int) numArray24[index24] * 256 * 256 * 256;
        long num67 = (long) (uint) (num64 + num66);
        q14_9.\u003378 = num67;
        q14_1.m1i = q14_1.z18;
        q14 q14_10 = q14_1;
        byte[] numArray25 = buffer1;
        int index25 = num65;
        int num68 = index25 + 1;
        int num69 = (int) numArray25[index25];
        byte[] numArray26 = buffer1;
        int index26 = num68;
        int num70 = index26 + 1;
        int num71 = (int) numArray26[index26] * 256;
        int num72 = (int) (short) (num69 + num71);
        q14_10.\u0031Z1 = (short) num72;
        q14 q14_11 = q14_1;
        byte[] numArray27 = buffer1;
        int index27 = num70;
        int num73 = index27 + 1;
        int num74 = (int) numArray27[index27];
        byte[] numArray28 = buffer1;
        int index28 = num73;
        int num75 = index28 + 1;
        int num76 = (int) numArray28[index28] * 256;
        int num77 = (int) (short) (num74 + num76);
        q14_11.X1z = (short) num77;
        q14 q14_12 = q14_1;
        byte[] numArray29 = buffer1;
        int index29 = num75;
        int num78 = index29 + 1;
        int num79 = (int) numArray29[index29];
        byte[] numArray30 = buffer1;
        int index30 = num78;
        int num80 = index30 + 1;
        int num81 = (int) numArray30[index30] * 256;
        int num82 = (int) (short) (num79 + num81);
        q14_12.W16 = (short) num82;
        q14 q14_13 = q14_1;
        byte[] numArray31 = buffer1;
        int index31 = num80;
        int num83 = index31 + 1;
        int num84 = (int) numArray31[index31];
        byte[] numArray32 = buffer1;
        int index32 = num83;
        int num85 = index32 + 1;
        int num86 = (int) numArray32[index32] * 256;
        int num87 = num84 + num86;
        q14_13.\u0039rK = (uint) num87;
        q14 q14_14 = q14_1;
        byte[] numArray33 = buffer1;
        int index33 = num85;
        int num88 = index33 + 1;
        int num89 = (int) numArray33[index33];
        byte[] numArray34 = buffer1;
        int index34 = num88;
        int num90 = index34 + 1;
        int num91 = (int) numArray34[index34] * 256;
        int num92 = (int) (short) (num89 + num91);
        q14_14.\u0035N2 = (short) num92;
        q14 q14_15 = q14_1;
        byte[] numArray35 = buffer1;
        int index35 = num90;
        int num93 = index35 + 1;
        int num94 = (int) numArray35[index35];
        byte[] numArray36 = buffer1;
        int index36 = num93;
        int num95 = index36 + 1;
        int num96 = (int) numArray36[index36] * 256;
        int num97 = num94 + num96;
        byte[] numArray37 = buffer1;
        int index37 = num95;
        int num98 = index37 + 1;
        int num99 = (int) numArray37[index37] * 256 * 256;
        int num100 = num97 + num99;
        byte[] numArray38 = buffer1;
        int index38 = num98;
        int num101 = index38 + 1;
        int num102 = (int) numArray38[index38] * 256 * 256 * 256;
        int num103 = num100 + num102;
        q14_15.C8x = num103;
        q14 q14_16 = q14_1;
        byte[] numArray39 = buffer1;
        int index39 = num101;
        int num104 = index39 + 1;
        int num105 = (int) numArray39[index39];
        byte[] numArray40 = buffer1;
        int index40 = num104;
        int num106 = index40 + 1;
        int num107 = (int) numArray40[index40] * 256;
        int num108 = num105 + num107;
        byte[] numArray41 = buffer1;
        int index41 = num106;
        int num109 = index41 + 1;
        int num110 = (int) numArray41[index41] * 256 * 256;
        int num111 = num108 + num110;
        byte[] numArray42 = buffer1;
        int index42 = num109;
        int num112 = index42 + 1;
        int num113 = (int) numArray42[index42] * 256 * 256 * 256;
        long num114 = (long) (uint) (num111 + num113);
        q14_16.h4e = num114;
        q14_1.t8S = ((int) q14_1.\u0035N2 & 1) == 1;
        byte[] buffer2 = new byte[(int) q14_1.\u0031Z1];
        int num115 = stream.Read(buffer2, 0, buffer2.Length);
        int num116 = num2 + num115;
        q14_1.\u00365g = ((int) q14_1.O48 & 2048) != 2048 ? To4.U74(buffer2, encoding) : To4.\u0035Kw(buffer2);
        while (!obj0.\u0039U2 && obj1.ContainsKey(q14_1.\u00365g))
        {
          q14_1.\u00365g = q14.\u0033O6.V8z(q14_1.\u00365g);
          q14_1.\u00388u = true;
        }
        if (q14_1.t54)
          q14_1.\u0034d1();
        else if (q14_1.\u00365g.EndsWith("/"))
          q14_1.\u0034d1();
        q14_1.\u003814 = q14_1.h1c;
        if (((int) q14_1.O48 & 1) == 1)
        {
          q14_1.\u003397 = q14_1.I82 = \u0031p6.\u0023b;
          q14_1.\u0038Mh = true;
        }
        if (q14_1.X1z > (short) 0)
        {
          q14_1.\u003832 = q14_1.h1c == (long) uint.MaxValue || q14_1.\u003378 == (long) uint.MaxValue || q14_1.h4e == (long) uint.MaxValue;
          num116 += q14_1.\u0036S5(stream, q14_1.X1z);
          q14_1.\u003814 = q14_1.h1c;
        }
        if (q14_1.I82 == \u0031p6.\u0023b)
          q14_1.\u003814 -= 12L;
        else if (q14_1.\u0038w8 == \u0031p6.\u0023c || q14_1.\u0038w8 == \u0031p6.\u0023d)
        {
          q14_1.\u003814 = q14_1.\u0037qg - (long) (q14.\u003427(q14_1.\u0038w8) + 10);
          q14_1.\u0037f1 = 10;
        }
        if (((int) q14_1.O48 & 8) == 8)
        {
          if (q14_1.\u003832)
            q14_1.\u0037f1 += 24;
          else
            q14_1.\u0037f1 += 16;
        }
        q14_1.SG2 = ((int) q14_1.O48 & 2048) == 2048 ? Encoding.UTF8 : encoding;
        q14_1.oLx = VR4.\u0023d;
        if (q14_1.W16 > (short) 0)
        {
          byte[] buffer3 = new byte[(int) q14_1.W16];
          int num117 = stream.Read(buffer3, 0, buffer3.Length);
          int num118 = num116 + num117;
          q14_1.i9M = ((int) q14_1.O48 & 2048) != 2048 ? To4.U74(buffer3, encoding) : To4.\u0035Kw(buffer3);
        }
      }
      while (obj0.\u0039U2 && obj1.ContainsKey(q14_1.\u00365g));
      return q14_1;
    }

    internal static bool \u0032P3([In] int obj0) => obj0 != 33639248;

    public q14()
    {
      this.z18 = (short) 8;
      this.z35 = PIJ.\u0023i;
      this.I82 = \u0031p6.\u0023a;
      this.r98 = fGj.\u0023a;
      this.SG2 = Encoding.GetEncoding("IBM437");
      this.oLx = VR4.\u0023a;
    }

    public DateTime S1N
    {
      get => this.\u00394A.ToLocalTime();
      [param: In] set
      {
        this.\u00394A = value.Kind == DateTimeKind.Unspecified ? DateTime.SpecifyKind(value, DateTimeKind.Local) : value.ToLocalTime();
        this.\u0034k9 = To4.\u0032Gy(this.\u00394A).ToUniversalTime();
        this.\u00388u = true;
      }
    }

    public bool s5Q
    {
      get => this.u1u;
      [param: In] set => this.u1u = value;
    }

    private int zt7 => this.\u0039tG.\u003966();

    public DateTime \u0032Ci
    {
      get => this.\u0034k9;
      [param: In] set => this.T23(this.\u0032uM, this.\u0032Tx, value);
    }

    public DateTime VPO
    {
      get => this.\u0032Tx;
      [param: In] set => this.T23(this.\u0032uM, value, this.\u0034k9);
    }

    public DateTime \u00367O
    {
      get => this.\u0032uM;
      [param: In] set => this.T23(value, this.\u0032Tx, this.\u0034k9);
    }

    public void T23([In] DateTime obj0, [In] DateTime obj1, [In] DateTime obj2)
    {
      this.\u0034h3 = true;
      if (obj0 == q14.\u0037WW && obj0.Kind == q14.\u0037WW.Kind)
        obj0 = q14.sd7;
      if (obj1 == q14.\u0037WW && obj1.Kind == q14.\u0037WW.Kind)
        obj1 = q14.sd7;
      if (obj2 == q14.\u0037WW && obj2.Kind == q14.\u0037WW.Kind)
        obj2 = q14.sd7;
      this.\u0032uM = obj0.ToUniversalTime();
      this.\u0032Tx = obj1.ToUniversalTime();
      this.\u0034k9 = obj2.ToUniversalTime();
      this.\u00394A = this.\u0034k9;
      if (!this.\u003437 && !this.\u00392c)
        this.\u00392c = true;
      this.\u00388u = true;
    }

    public bool \u0034Hn
    {
      get => this.\u00392c;
      [param: In] set
      {
        this.\u00392c = value;
        this.\u00388u = true;
      }
    }

    public bool SU5
    {
      get => this.\u003437;
      [param: In] set
      {
        this.\u003437 = value;
        this.\u00388u = true;
      }
    }

    public \u00375n B3W => this.\u0032xE;

    public FileAttributes PAq
    {
      get => (FileAttributes) this.C8x;
      [param: In] set
      {
        this.C8x = (int) value;
        this.\u0033I3 = (short) 45;
        this.\u00388u = true;
      }
    }

    internal string Ye9 => this.\u00321u;

    public string L83
    {
      get => this.\u00365g;
      [param: In] set
      {
        if (this.\u0039tG != null && this.\u0039tG.b54() == null)
          throw new xZi("Cannot rename; this is not supported in ZipOutputStream/ZipInputStream.");
        string str = !string.IsNullOrEmpty(value) ? q14.\u00336Q(value, (string) null) : throw new xZi("The FileName must be non empty and non-null.");
        if (this.\u00365g == str)
          return;
        if (this.\u0039tG != null)
        {
          this.\u0039tG.b54().\u003681(this);
          this.\u0039tG.b54().\u0037B1(str, this);
        }
        this.\u00365g = str;
        if (this.\u0039tG != null)
          this.\u0039tG.b54().p1m();
        this.\u00388u = true;
      }
    }

    public Stream \u0035hc
    {
      get => this.iWJ;
      [param: In] set
      {
        if (this.r98 != fGj.\u0023c)
          throw new xZi("You must not set the input stream for this entry.");
        this.\u0039hF = true;
        this.iWJ = value;
      }
    }

    public bool \u003868 => this.\u0039hF;

    public fGj \u0034m2 => this.r98;

    public short O31 => this.S1g;

    public string \u003545
    {
      get => this.i9M;
      [param: In] set
      {
        this.i9M = value;
        this.\u00388u = true;
      }
    }

    public bool? \u0039BR => this.vn6;

    public bool? \u003551 => this.\u0033vC;

    public short \u003681 => this.O48;

    public d3U UQ3
    {
      get => (d3U) this.z18;
      [param: In] set
      {
        if (value == (d3U) this.z18)
          return;
        this.z18 = value == d3U.None || value == d3U.Deflate || value == d3U.BZip2 ? (short) value : throw new InvalidOperationException("Unsupported compression method.");
        if (this.z18 == (short) 0)
          this.z35 = PIJ.\u0023a;
        else if (this.\u0032Q2 == PIJ.\u0023a)
          this.z35 = PIJ.\u0023i;
        if (this.\u0039tG.b54() != null)
          this.\u0039tG.b54().p1m();
        this.\u00318k = true;
      }
    }

    public PIJ \u0032Q2
    {
      get => this.z35;
      [param: In] set
      {
        if (this.z18 != (short) 8 && this.z18 != (short) 0 || value == PIJ.\u0023i && this.z18 == (short) 8)
          return;
        this.z35 = value;
        if (value == PIJ.\u0023a && this.z18 == (short) 0)
          return;
        this.z18 = this.z35 != PIJ.\u0023a ? (short) 8 : (short) 0;
        if (this.\u0039tG.b54() != null)
          this.\u0039tG.b54().p1m();
        this.\u00318k = true;
      }
    }

    public long \u0037qg => this.h1c;

    public long \u0039MP => this.\u003378;

    public double P22 => this.\u0039MP == 0L ? 0.0 : 100.0 * (1.0 - 1.0 * (double) this.\u0037qg / (1.0 * (double) this.\u0039MP));

    public int t2X => this.l2q;

    public bool pT8 => this.\u003965;

    public bool egp => this.\u003397 != 0;

    public \u0031p6 \u0038w8
    {
      get => this.I82;
      [param: In] set
      {
        if (value == this.I82)
          return;
        this.I82 = value != \u0031p6.\u0023e ? value : throw new InvalidOperationException("You may not set Encryption to that value.");
        this.\u00318k = true;
        if (this.\u0039tG.b54() == null)
          return;
        this.\u0039tG.b54().p1m();
      }
    }

    public string K89
    {
      [param: In] set
      {
        this.\u0036Ug = value;
        if (this.\u0036Ug == null)
        {
          this.I82 = \u0031p6.\u0023a;
        }
        else
        {
          if (this.r98 == fGj.\u0023d && !this.\u0038Mh)
            this.\u00318k = true;
          if (this.\u0038w8 != \u0031p6.\u0023a)
            return;
          this.I82 = \u0031p6.\u0023b;
        }
      }
      private get => this.\u0036Ug;
    }

    internal bool n4I => this.\u00318k | this.\u00388u;

    public \u00331g \u0035PR
    {
      get => this.\u0035QU;
      [param: In] set => this.\u0035QU = value;
    }

    public \u0039T3 b7o
    {
      get => this.l86;
      [param: In] set => this.l86 = value;
    }

    public bool \u0032vs => !this.L55;

    public GCG \u00399X
    {
      get => this.b72;
      [param: In] set => this.b72 = value;
    }

    public bool \u003869
    {
      get => this.SG2 == Encoding.GetEncoding("UTF-8") && this.oLx == VR4.\u0023c;
      [param: In] set
      {
        if (value)
        {
          this.SG2 = Encoding.GetEncoding("UTF-8");
          this.oLx = VR4.\u0023c;
        }
        else
        {
          this.SG2 = \u0032f3.l79;
          this.oLx = VR4.\u0023a;
        }
      }
    }

    public Encoding GJ8
    {
      get => this.\u0039O9;
      [param: In] set => this.\u0039O9 = value;
    }

    public Encoding SG2
    {
      get => this.\u00326B;
      [param: In] set => this.\u00326B = value;
    }

    public VR4 oLx
    {
      get => this.YO4;
      [param: In] set => this.YO4 = value;
    }

    internal static string \u00336Q([In] string obj0, [In] string obj1) => To4.\u0037j4(obj1 != null ? (!string.IsNullOrEmpty(obj1) ? Path.Combine(obj1, Path.GetFileName(obj0)) : Path.GetFileName(obj0)) : obj0);

    internal static q14 g8w([In] string obj0) => q14.\u0038Hp(obj0, fGj.\u0023a, (object) null, (object) null);

    internal static q14 TTR([In] string obj0, [In] string obj1) => q14.\u0038Hp(obj1, fGj.\u0023b, (object) obj0, (object) null);

    internal static q14 g2a([In] string obj0, [In] Stream obj1) => q14.\u0038Hp(obj0, fGj.\u0023c, (object) obj1, (object) null);

    internal static q14 k24([In] string obj0, [In] I7i obj1) => q14.\u0038Hp(obj0, fGj.\u0023e, (object) obj1, (object) null);

    internal static q14 GA7([In] string obj0, [In] i3h obj1, [In] VXm obj2) => q14.\u0038Hp(obj0, fGj.\u0023f, (object) obj1, (object) obj2);

    internal static q14 z2w([In] string obj0) => q14.\u0038Hp(obj0, fGj.\u0023g, (object) null, (object) null);

    private static q14 \u0038Hp([In] string obj0, [In] fGj obj1, [In] object obj2, [In] object obj3)
    {
      if (string.IsNullOrEmpty(obj0))
        throw new xZi("The entry name must be non-null and non-empty.");
      q14 q14 = new q14() { \u0033I3 = 45, r98 = obj1 };
      q14.\u0034k9 = q14.\u0032Tx = q14.\u0032uM = DateTime.UtcNow;
      switch (obj1)
      {
        case fGj.\u0023a:
          q14.r98 = fGj.\u0023b;
          goto case fGj.\u0023g;
        case fGj.\u0023c:
          q14.iWJ = obj2 as Stream;
          goto case fGj.\u0023g;
        case fGj.\u0023e:
          q14.X4Q = obj2 as I7i;
          goto case fGj.\u0023g;
        case fGj.\u0023f:
          q14.kQ8 = obj2 as i3h;
          q14.BP2 = obj3 as VXm;
          goto case fGj.\u0023g;
        case fGj.\u0023g:
          q14.\u00394A = q14.\u0034k9;
          q14.\u00365g = To4.\u0037j4(obj0);
          return q14;
        default:
          string path = obj2 as string;
          if (string.IsNullOrEmpty(path))
            throw new xZi("The filename must be non-null and non-empty.");
          try
          {
            q14.\u0034k9 = File.GetLastWriteTime(path).ToUniversalTime();
            q14.\u0032uM = File.GetCreationTime(path).ToUniversalTime();
            q14.\u0032Tx = File.GetLastAccessTime(path).ToUniversalTime();
            if (File.Exists(path) || Directory.Exists(path))
              q14.C8x = (int) File.GetAttributes(path);
            q14.\u0034h3 = true;
            q14.\u00321u = Path.GetFullPath(path);
            goto case fGj.\u0023g;
          }
          catch (PathTooLongException ex)
          {
            throw new xZi(string.Format("The path is too long, filename={0}", (object) path), (Exception) ex);
          }
      }
    }

    public q14 \u0038zc([In] \u0032f3 obj0)
    {
      if (this.\u0034m2 != fGj.\u0023d)
        throw new InvalidOperationException("The entry you are trying to add wasn't loaded from a zip file.");
      if (this.n4I)
        throw new InvalidOperationException("The entry you are trying to add was modified.");
      if (this.pT8)
        throw new InvalidOperationException("The entry you are trying to add is a directory.");
      if (!this.UQ3.Equals((object) obj0.\u003218))
        throw new InvalidOperationException("The entry you are trying to add uses another compression method.");
      if (this.\u00317Q is \u0035yQ)
        throw new InvalidOperationException("The entry you are trying to add is from a multi-part zip.");
      return new q14()
      {
        x4p = this.x4p,
        k4G = this.k4G,
        \u0034c3 = this.\u0034c3,
        \u0032Tx = this.\u0032Tx,
        i9M = this.i9M,
        h1c = this.h1c,
        z35 = this.z35,
        z18 = this.z18,
        l2q = this.l2q,
        \u0032uM = this.\u0032uM,
        \u00392c = this.\u00392c,
        \u003437 = this.\u003437,
        I82 = this.I82,
        \u003397 = this.\u003397,
        vn6 = this.vn6,
        \u00365g = this.\u00365g,
        \u00394A = this.\u00394A,
        \u0033et = this.\u0033et,
        \u00388u = this.\u00388u,
        \u0034k9 = this.\u0034k9,
        \u0034h3 = this.\u0034h3,
        \u0036Ug = this.\u0036Ug,
        K4E = this.K4E,
        h4e = this.h4e,
        \u00318k = this.\u00318k,
        \u0038Mh = this.\u0038Mh,
        \u0035U7 = this.\u0035U7,
        \u0032xE = this.\u0032xE,
        \u003378 = this.\u003378,
        \u0033I3 = this.\u0033I3,
        S1g = this.S1g,
        SG2 = this.SG2,
        oLx = this.oLx,
        \u0035PR = this.\u0035PR,
        \u00399X = this.\u00399X,
        b7o = this.b7o,
        r98 = this.r98
      };
    }

    internal void \u0034d1()
    {
      this.\u003965 = true;
      if (this.\u00365g.EndsWith("/"))
        return;
      this.\u00365g += "/";
    }

    public bool t8S
    {
      get => this.\u0031jb;
      [param: In] set => this.\u0031jb = value;
    }

    string object.\u0031J2() => string.Format("ZipEntry::{0}", (object) this.L83);

    internal Stream \u00317Q
    {
      get
      {
        if (this.\u0034c3 == null)
        {
          if (this.\u0039tG.b54() != null)
          {
            \u0032f3 obj = this.\u0039tG.b54();
            obj.L2Y(false);
            this.\u0034c3 = obj.\u00323Q(this.\u0039rK);
          }
          else
            this.\u0034c3 = this.\u0039tG.\u003961().\u0033uJ();
        }
        return this.\u0034c3;
      }
    }

    private void v8d()
    {
      long position = this.\u00317Q.Position;
      try
      {
        this.\u00317Q.Seek(this.h4e, SeekOrigin.Begin);
      }
      catch (IOException ex)
      {
        throw new UW5(string.Format("Exception seeking  entry({0}) offset(0x{1:X8}) len(0x{2:X8})", (object) this.L83, (object) this.h4e, (object) this.\u00317Q.Length), (Exception) ex);
      }
      byte[] buffer = new byte[30];
      this.\u00317Q.Read(buffer, 0, buffer.Length);
      short num1 = (short) ((int) buffer[26] + (int) buffer[27] * 256);
      short num2 = (short) ((int) buffer[28] + (int) buffer[29] * 256);
      this.\u00317Q.Seek((long) ((int) num1 + (int) num2), SeekOrigin.Current);
      this.\u0033et = 30 + (int) num2 + (int) num1 + q14.\u003427(this.\u003397);
      this.x4p = this.h4e + (long) this.\u0033et;
      this.\u00317Q.Seek(position, SeekOrigin.Begin);
    }

    private static int t1J([In] \u0031p6 obj0)
    {
      if (obj0 == \u0031p6.\u0023d)
        return 256;
      return obj0 == \u0031p6.\u0023c ? 128 : -1;
    }

    internal static int \u003427([In] \u0031p6 obj0)
    {
      switch (obj0)
      {
        case \u0031p6.\u0023a:
          return 0;
        case \u0031p6.\u0023b:
          return 12;
        case \u0031p6.\u0023c:
        case \u0031p6.\u0023d:
          return q14.t1J(obj0) / 8 / 2 + 2;
        default:
          throw new xZi("internal error");
      }
    }

    internal long sEJ
    {
      get
      {
        if (this.x4p == -1L)
          this.v8d();
        return this.x4p;
      }
    }

    private int \u00391V
    {
      get
      {
        if (this.\u0033et == 0)
          this.v8d();
        return this.\u0033et;
      }
    }

    public void f2N() => this.D58(".", (string) null, this.\u0039tG, this.r98, this.L83);

    public void ow4([In] \u00331g obj0)
    {
      this.\u0035PR = obj0;
      this.D58(".", (string) null, this.\u0039tG, this.r98, this.L83);
    }

    public void X6M([In] Stream obj0) => this.\u00372i(obj0, (string) null, this.\u0039tG, this.r98, this.L83);

    public void qbX([In] string obj0) => this.D58(obj0, (string) null, this.\u0039tG, this.r98, this.L83);

    public void \u0034fB([In] string obj0, [In] \u00331g obj1)
    {
      this.\u0035PR = obj1;
      this.D58(obj0, (string) null, this.\u0039tG, this.r98, this.L83);
    }

    public void a37([In] string obj0) => this.D58(".", obj0, this.\u0039tG, this.r98, this.L83);

    public void \u00375s([In] string obj0, [In] string obj1) => this.D58(obj0, obj1, this.\u0039tG, this.r98, this.L83);

    public void \u0039lh([In] \u00331g obj0, [In] string obj1)
    {
      this.\u0035PR = obj0;
      this.D58(".", obj1, this.\u0039tG, this.r98, this.L83);
    }

    public void \u0033BM([In] string obj0, [In] \u00331g obj1, [In] string obj2)
    {
      this.\u0035PR = obj1;
      this.D58(obj0, obj2, this.\u0039tG, this.r98, this.L83);
    }

    public void H76([In] Stream obj0, [In] string obj1) => this.\u00372i(obj0, obj1, this.\u0039tG, this.r98, this.L83);

    public \u0039c4 \u003141() => this.\u0039tG.b54() != null ? this.nv8(this.\u0036Ug ?? this.\u0039tG.\u003919()) : throw new InvalidOperationException("Use OpenReader() only with ZipFile.");

    public \u0039c4 \u00313L([In] string obj0)
    {
      if (this.\u0039tG.b54() == null)
        throw new InvalidOperationException("Use OpenReader() only with ZipFile.");
      return this.nv8(obj0);
    }

    internal \u0039c4 nv8([In] string obj0)
    {
      q14.\u00393R(this.m1i, this.L83, q14.I4O(this.z18));
      q14.\u0032E7(this.\u0038w8, this.L83, this.H37);
      this.a44(obj0);
      if (this.r98 != fGj.\u0023d)
        throw new UW5("You must call ZipFile.Save before calling OpenReader");
      long num = this.m1i == (short) 0 ? this.\u003814 : this.\u0039MP;
      this.\u00317Q.Seek(this.sEJ, SeekOrigin.Begin);
      this.v8d = this.S4c(this.\u00317Q);
      return new \u0039c4(this.\u00339o(this.v8d), num);
    }

    private void \u00346t([In] long obj0, [In] long obj1)
    {
      if (this.\u0039tG.b54() == null)
        return;
      this.jm6 = this.\u0039tG.b54().e34(this, obj0, obj1);
    }

    private static void X33([In] q14 obj0, [In] string obj1, [In] \u0032f3 obj2)
    {
      if (obj2 == null || obj2.xOj)
        return;
      obj2.\u003133(obj0, obj1, true);
    }

    private void \u0032jo([In] string obj0)
    {
      if (this.\u0039tG.b54() == null || this.\u0039tG.b54().xOj)
        return;
      this.\u0039tG.b54().\u003133(this, obj0, false);
    }

    private void D5U([In] string obj0)
    {
      if (this.\u0039tG.b54() == null)
        return;
      this.jm6 = this.\u0039tG.b54().\u0034vE(this, obj0);
    }

    private static void \u003662([In] string obj0)
    {
      if ((File.GetAttributes(obj0) & FileAttributes.ReadOnly) == FileAttributes.ReadOnly)
        File.SetAttributes(obj0, FileAttributes.Normal);
      File.Delete(obj0);
    }

    private void Oq2([In] string obj0, [In] object[] obj1)
    {
      if (this.\u0039tG.b54() == null || !this.\u0039tG.b54().V7K)
        return;
      this.\u0039tG.b54().YY3.WriteLine(obj0, obj1);
    }

    private void D58([In] string obj0, [In] string obj1, [In] \u0033rn obj2, [In] fGj obj3, [In] string obj4)
    {
      if (obj0 == null)
        throw new ArgumentNullException("baseDir");
      if (obj2 == null)
        throw new UW5("This entry is an orphan");
      if (obj2.b54() == null)
        throw new InvalidOperationException("Use Extract() only with ZipFile.");
      obj2.b54().L2Y(false);
      if (obj3 != fGj.\u0023d)
        throw new UW5("You must call ZipFile.Save before calling any Extract method");
      q14.X33(this, obj0, obj2.b54());
      this.jm6 = false;
      bool flag1 = false;
      bool flag2 = false;
      string path = (string) null;
      try
      {
        q14.\u00393R(this.m1i, obj4, q14.I4O(this.z18));
        q14.\u0032E7(this.\u0038w8, obj4, this.H37);
        if (this.k3r(obj0, out path))
        {
          this.Oq2("extract dir {0}...", new object[1]
          {
            (object) path
          });
          this.\u0032jo(obj0);
        }
        else
        {
          if (File.Exists(path))
          {
            flag1 = true;
            switch (this.\u0033s2(obj0, path))
            {
              case 1:
                return;
              case 2:
                return;
            }
          }
          if (this.\u003397 != \u0031p6.\u0023a)
            this.\u0031G1(obj1);
          string path2 = To4.PE5();
          string str = Path.Combine(Path.GetDirectoryName(path), path2);
          this.Oq2("extract file {0}...", new object[1]
          {
            (object) path
          });
          using (Stream stream = this.h41(str, ref flag2))
          {
            if (this.Qf9(this.\u00317Q, stream, this.\u0038w8, this.l2q))
              return;
            stream.Close();
          }
          this.\u0035hl(flag1, path, str, flag2);
          this.\u0032jo(obj0);
        }
      }
      catch (Exception ex)
      {
        this.jm6 = true;
        throw;
      }
      finally
      {
        if (this.jm6 && path != null && File.Exists(path) && !flag1)
          File.Delete(path);
      }
    }

    private void \u00372i([In] Stream obj0, [In] string obj1, [In] \u0033rn obj2, [In] fGj obj3, [In] string obj4)
    {
      if (obj2 == null)
        throw new UW5("This entry is an orphan");
      if (obj2.b54() == null)
        throw new InvalidOperationException("Use Extract() only with ZipFile.");
      obj2.b54().L2Y(false);
      if (obj3 != fGj.\u0023d)
        throw new UW5("You must call ZipFile.Save before calling any Extract method");
      q14.X33(this, (string) null, obj2.b54());
      this.jm6 = false;
      try
      {
        q14.\u00393R(this.m1i, obj4, q14.I4O(this.z18));
        q14.\u0032E7(this.\u0038w8, obj4, this.H37);
        if (this.Dc7())
        {
          this.Oq2("extract dir {0}...", (object[]) null);
          this.\u0032jo((string) null);
        }
        else
        {
          if (this.\u003397 != \u0031p6.\u0023a)
            this.\u0031G1(obj1);
          this.Oq2("extract entry {0} to stream...", new object[1]
          {
            (object) obj4
          });
          if (this.Qf9(this.\u00317Q, obj0, this.\u0038w8, this.l2q))
            return;
          this.\u0032jo((string) null);
        }
      }
      catch (Exception ex)
      {
        this.jm6 = true;
        throw;
      }
    }

    private bool Qf9([In] Stream obj0, [In] Stream obj1, [In] \u0031p6 obj2, [In] int obj3)
    {
      if (this.jm6)
        return true;
      try
      {
        int num = this.\u0038O7(obj0, obj1, this.m1i, this.\u003814, this.\u0039MP);
        if (this.jm6)
          return true;
        this.R85(num, obj2, obj3, obj0, this.\u0039MP);
        return false;
      }
      finally
      {
        if (obj0 is \u0035yQ obj)
        {
          obj.Dispose();
          this.\u0034c3 = (Stream) null;
        }
      }
    }

    private void \u0035hl([In] bool obj0, [In] string obj1, [In] string obj2, [In] bool obj3)
    {
      string str = (string) null;
      if (obj0)
      {
        str = obj1 + Path.GetRandomFileName() + ".PendingOverwrite";
        File.Move(obj1, str);
      }
      File.Move(obj2, obj1);
      this.\u00399W(obj1, true);
      if (str != null && File.Exists(str))
        q14.\u003662(str);
      if (obj3 && this.L83.Contains("/"))
      {
        string directoryName = Path.GetDirectoryName(this.L83);
        if (this.\u0039tG.b54().\u0039XN(directoryName) == null)
          this.\u00399W(Path.GetDirectoryName(obj1), false);
      }
      if (((int) this.\u0033I3 & 65280) != 2560 && ((int) this.\u0033I3 & 65280) != 0)
        return;
      File.SetAttributes(obj1, (FileAttributes) this.C8x);
    }

    private void \u0031G1([In] string obj0) => this.a44((obj0 ?? this.\u0036Ug ?? this.\u0039tG.\u003919()) ?? throw new D2v());

    private Stream h41([In] string obj0, [In] ref bool obj1)
    {
      string directoryName = Path.GetDirectoryName(obj0);
      if (!Directory.Exists(directoryName))
        Directory.CreateDirectory(directoryName);
      else if (this.\u0039tG.b54() != null)
        obj1 = this.\u0039tG.b54().xOj;
      return (Stream) new FileStream(obj0, FileMode.CreateNew);
    }

    internal void R85([In] int obj0, [In] \u0031p6 obj1, [In] int obj2, [In] Stream obj3, [In] long obj4)
    {
      if (obj0 != obj2 && (obj1 != \u0031p6.\u0023c && obj1 != \u0031p6.\u0023d || this.h1P != (short) 2))
        throw new \u003659("CRC error: the file being extracted appears to be corrupted. " + string.Format("Expected 0x{0:X8}, Actual 0x{1:X8}", (object) obj2, (object) obj0));
      if (obj4 == 0L || obj1 != \u0031p6.\u0023c && obj1 != \u0031p6.\u0023d)
        return;
      \u003525 v8d = this.v8d as \u003525;
      byte[] buffer = new byte[256];
      ((Stream) v8d).Read(buffer, 0, 256);
      this.z45.\u0036aM = v8d.M41();
      this.z45.\u00369l(obj3);
    }

    private int \u0033s2([In] string obj0, [In] string obj1)
    {
      int num = 0;
      while (true)
      {
        switch (this.\u0035PR)
        {
          case \u00331g.\u0023b:
            goto label_2;
          case \u00331g.\u0023c:
            goto label_3;
          case \u00331g.\u0023d:
            if (num <= 0)
            {
              this.D5U(obj0);
              if (!this.jm6)
              {
                ++num;
                continue;
              }
              goto label_7;
            }
            else
              goto label_5;
          default:
            goto label_8;
        }
      }
label_2:
      this.Oq2("the file {0} exists; will overwrite it...", new object[1]
      {
        (object) obj1
      });
      return 0;
label_3:
      this.Oq2("the file {0} exists; not extracting entry...", new object[1]
      {
        (object) this.L83
      });
      this.\u0032jo(obj0);
      return 1;
label_5:
      throw new xZi(string.Format("The file {0} already exists.", (object) obj1));
label_7:
      return 2;
label_8:
      throw new xZi(string.Format("The file {0} already exists.", (object) obj1));
    }

    private void v5Z([In] int obj0)
    {
      if (obj0 == 0)
        throw new e1T(string.Format("bad read of entry {0} from compressed archive.", (object) this.L83));
    }

    private int \u0038O7([In] Stream obj0, [In] Stream obj1, [In] short obj2, [In] long obj3, [In] long obj4)
    {
      Stream stream1 = obj0;
      stream1.Seek(this.sEJ, SeekOrigin.Begin);
      byte[] buffer = new byte[this.zt7];
      long num1 = obj2 != (short) 0 ? obj4 : obj3;
      this.v8d = this.S4c(stream1);
      Stream stream2 = this.\u00339o(this.v8d);
      long num2 = 0;
      using (\u0039c4 obj = new \u0039c4(stream2))
      {
        while (num1 > 0L)
        {
          int count1 = num1 > (long) buffer.Length ? buffer.Length : (int) num1;
          int count2 = ((Stream) obj).Read(buffer, 0, count1);
          this.v5Z(count2);
          obj1.Write(buffer, 0, count2);
          num1 -= (long) count2;
          num2 += (long) count2;
          this.\u00346t(num2, obj4);
          if (this.jm6)
            break;
        }
        return obj.\u0036cy();
      }
    }

    private Stream \u00339o([In] Stream obj0)
    {
      if (obj0 == null)
        throw new ArgumentNullException("input2");
      switch (this.m1i)
      {
        case 0:
          return obj0;
        case 8:
          return (Stream) new \u0034T4(obj0, \u003212.\u0023b, true);
        case 12:
          return (Stream) new \u003841(obj0, true);
        default:
          throw new Exception(string.Format("Failed to find decompressor matching {0}", (object) this.m1i));
      }
    }

    private Stream S4c([In] Stream obj0)
    {
      if (obj0 == null)
        throw new ArgumentNullException("input");
      return this.\u003397 != \u0031p6.\u0023b ? (this.\u003397 == \u0031p6.\u0023c || this.\u003397 == \u0031p6.\u0023d ? (Stream) new \u003525(obj0, this.z45, this.\u003814, LzE.\u0023b) : obj0) : (Stream) new \u003744(obj0, this.Jf3, LzE.\u0023b);
    }

    internal void \u00399W([In] string obj0, [In] bool obj1)
    {
      try
      {
        if (this.\u0034h3)
        {
          if (obj1)
          {
            if (!File.Exists(obj0))
              return;
            File.SetCreationTimeUtc(obj0, this.\u0032uM);
            File.SetLastAccessTimeUtc(obj0, this.\u0032Tx);
            File.SetLastWriteTimeUtc(obj0, this.\u0034k9);
          }
          else
          {
            if (!Directory.Exists(obj0))
              return;
            Directory.SetCreationTimeUtc(obj0, this.\u0032uM);
            Directory.SetLastAccessTimeUtc(obj0, this.\u0032Tx);
            Directory.SetLastWriteTimeUtc(obj0, this.\u0034k9);
          }
        }
        else
        {
          DateTime lastWriteTime = To4.\u0032Gy(this.S1N);
          if (obj1)
            File.SetLastWriteTime(obj0, lastWriteTime);
          else
            Directory.SetLastWriteTime(obj0, lastWriteTime);
        }
      }
      catch (IOException ex)
      {
        this.Oq2("failed to set time on {0}: {1}", new object[2]
        {
          (object) obj0,
          (object) ex.Message
        });
      }
    }

    private static string \u0033u8([In] uint obj0)
    {
      string str;
      switch (obj0)
      {
        case 0:
          str = "--";
          break;
        case 26113:
          str = "DES";
          break;
        case 26114:
          str = "RC2";
          break;
        case 26115:
          str = "3DES-168";
          break;
        case 26121:
          str = "3DES-112";
          break;
        case 26126:
          str = "PKWare AES128";
          break;
        case 26127:
          str = "PKWare AES192";
          break;
        case 26128:
          str = "PKWare AES256";
          break;
        case 26370:
          str = "RC2";
          break;
        case 26400:
          str = "Blowfish";
          break;
        case 26401:
          str = "Twofish";
          break;
        case 26625:
          str = "RC4";
          break;
        default:
          str = string.Format("Unknown (0x{0:X4})", (object) obj0);
          break;
      }
      return str;
    }

    private static string I4O([In] short obj0)
    {
      string str;
      switch (obj0)
      {
        case 0:
          str = "Store";
          break;
        case 1:
          str = "Shrink";
          break;
        case 8:
          str = "DEFLATE";
          break;
        case 9:
          str = "Deflate64";
          break;
        case 12:
          str = "BZIP2";
          break;
        case 14:
          str = "LZMA";
          break;
        case 19:
          str = "LZ77";
          break;
        case 98:
          str = "PPMd";
          break;
        default:
          str = string.Format("Unknown (0x{0:X4})", (object) obj0);
          break;
      }
      return str;
    }

    private static void \u0032E7([In] \u0031p6 obj0, [In] string obj1, [In] uint obj2)
    {
      if (obj0 == \u0031p6.\u0023b || obj0 == \u0031p6.\u0023c || obj0 == \u0031p6.\u0023d || obj0 == \u0031p6.\u0023a)
        return;
      if (obj2 != 0U)
        throw new xZi(string.Format("Cannot extract: Entry {0} is encrypted with an algorithm not supported by DotNetZip: {1}", (object) obj1, (object) q14.\u0033u8(obj2)));
      throw new xZi(string.Format("Cannot extract: Entry {0} uses an unsupported encryption algorithm ({1:X2})", (object) obj1, (object) (int) obj0));
    }

    private static void \u00393R([In] short obj0, [In] string obj1, [In] string obj2)
    {
      if (obj0 != (short) 0 && obj0 != (short) 8 && obj0 != (short) 12)
        throw new xZi(string.Format("Entry {0} uses an unsupported compression method (0x{1:X2}, {2})", (object) obj1, (object) obj0, (object) obj2));
    }

    private void a44([In] string obj0)
    {
      if (this.\u003397 == \u0031p6.\u0023a)
        return;
      if (this.\u003397 == \u0031p6.\u0023b)
      {
        if (obj0 == null)
          throw new xZi("Missing password.");
        this.\u00317Q.Seek(this.sEJ - 12L, SeekOrigin.Begin);
        this.Jf3 = H85.L1w(obj0, this);
      }
      else
      {
        if (this.\u003397 != \u0031p6.\u0023c && this.\u003397 != \u0031p6.\u0023d)
          return;
        if (obj0 == null)
          throw new xZi("Missing password.");
        if (this.z45 != null)
        {
          this.z45.OP1(obj0);
        }
        else
        {
          this.\u00317Q.Seek(this.sEJ - (long) q14.\u003427(this.\u003397), SeekOrigin.Begin);
          int num = q14.t1J(this.\u003397);
          this.z45 = \u0035N5.ZhK(obj0, num, this.\u00317Q);
        }
      }
    }

    private bool k3r(string _param1, out string _param2)
    {
      if (_param1 == null)
        throw new ArgumentNullException("baseDir");
      string str1 = this.L83.Replace(Path.DirectorySeparatorChar, '/');
      if (str1.IndexOf(':') == 1)
        str1 = str1.Substring(2);
      if (str1.StartsWith("/"))
        str1 = str1.Substring(1);
      string str2 = To4.\u0033m7(str1);
      _param2 = this.\u0039tG.b54().\u00321i ? Path.Combine(_param1, str2.Contains("/") ? Path.GetFileName(str2) : str2) : Path.Combine(_param1, str2);
      _param2 = _param2.Replace('/', Path.DirectorySeparatorChar);
      if (!this.pT8 && !this.L83.EndsWith("/"))
        return false;
      if (!Directory.Exists(_param2))
      {
        Directory.CreateDirectory(_param2);
        this.\u00399W(_param2, false);
      }
      else if (this.\u0035PR == \u00331g.\u0023b)
        this.\u00399W(_param2, false);
      return true;
    }

    private bool Dc7() => this.pT8 || this.L83.EndsWith("/");

    private void \u003477()
    {
      ++this.Jm1;
      long position = this.\u00317Q.Position;
      this.\u00317Q.Seek(this.h4e, SeekOrigin.Begin);
      byte[] buffer = new byte[30];
      this.\u00317Q.Read(buffer, 0, buffer.Length);
      int num1 = 26;
      byte[] numArray1 = buffer;
      int index1 = num1;
      int num2 = index1 + 1;
      int num3 = (int) numArray1[index1];
      byte[] numArray2 = buffer;
      int index2 = num2;
      int num4 = index2 + 1;
      int num5 = (int) numArray2[index2] * 256;
      short offset = (short) (num3 + num5);
      byte[] numArray3 = buffer;
      int index3 = num4;
      int num6 = index3 + 1;
      int num7 = (int) numArray3[index3];
      byte[] numArray4 = buffer;
      int index4 = num6;
      int num8 = index4 + 1;
      int num9 = (int) numArray4[index4] * 256;
      short num10 = (short) (num7 + num9);
      this.\u00317Q.Seek((long) offset, SeekOrigin.Current);
      this.\u0036S5(this.\u00317Q, num10);
      this.\u00317Q.Seek(position, SeekOrigin.Begin);
      --this.Jm1;
    }

    private static bool \u003759([In] q14 obj0, [In] Encoding obj1)
    {
      int num1 = 0;
      obj0.h4e = obj0.\u00317Q.Position;
      int num2 = To4.\u003498(obj0.\u00317Q);
      int num3 = num1 + 4;
      if (q14.\u00312M(num2))
      {
        obj0.\u00317Q.Seek(-4L, SeekOrigin.Current);
        if (q14.\u0032P3(num2) && num2 != 101010256)
          throw new e1T(string.Format("  Bad signature (0x{0:X8}) at position  0x{1:X8}", (object) num2, (object) obj0.\u00317Q.Position));
        return false;
      }
      byte[] buffer1 = new byte[26];
      int num4 = obj0.\u00317Q.Read(buffer1, 0, buffer1.Length);
      if (num4 != buffer1.Length)
        return false;
      int num5 = num3 + num4;
      int num6 = 0;
      q14 q14_1 = obj0;
      byte[] numArray1 = buffer1;
      int index1 = num6;
      int num7 = index1 + 1;
      int num8 = (int) numArray1[index1];
      byte[] numArray2 = buffer1;
      int index2 = num7;
      int num9 = index2 + 1;
      int num10 = (int) numArray2[index2] * 256;
      int num11 = (int) (short) (num8 + num10);
      q14_1.S1g = (short) num11;
      q14 q14_2 = obj0;
      byte[] numArray3 = buffer1;
      int index3 = num9;
      int num12 = index3 + 1;
      int num13 = (int) numArray3[index3];
      byte[] numArray4 = buffer1;
      int index4 = num12;
      int num14 = index4 + 1;
      int num15 = (int) numArray4[index4] * 256;
      int num16 = (int) (short) (num13 + num15);
      q14_2.O48 = (short) num16;
      q14 q14_3 = obj0;
      q14 q14_4 = obj0;
      byte[] numArray5 = buffer1;
      int index5 = num14;
      int num17 = index5 + 1;
      int num18 = (int) numArray5[index5];
      byte[] numArray6 = buffer1;
      int index6 = num17;
      int num19 = index6 + 1;
      int num20 = (int) numArray6[index6] * 256;
      int num21;
      short num22 = (short) (num21 = (int) (short) (num18 + num20));
      q14_4.z18 = (short) num21;
      int num23 = (int) num22;
      q14_3.m1i = (short) num23;
      q14 q14_5 = obj0;
      byte[] numArray7 = buffer1;
      int index7 = num19;
      int num24 = index7 + 1;
      int num25 = (int) numArray7[index7];
      byte[] numArray8 = buffer1;
      int index8 = num24;
      int num26 = index8 + 1;
      int num27 = (int) numArray8[index8] * 256;
      int num28 = num25 + num27;
      byte[] numArray9 = buffer1;
      int index9 = num26;
      int num29 = index9 + 1;
      int num30 = (int) numArray9[index9] * 256 * 256;
      int num31 = num28 + num30;
      byte[] numArray10 = buffer1;
      int index10 = num29;
      int num32 = index10 + 1;
      int num33 = (int) numArray10[index10] * 256 * 256 * 256;
      int num34 = num31 + num33;
      q14_5.\u0035U7 = num34;
      obj0.\u00394A = To4.\u003162(obj0.\u0035U7);
      obj0.\u0032xE |= \u00375n.\u0023b;
      if (((int) obj0.O48 & 1) == 1)
      {
        obj0.\u003397 = obj0.I82 = \u0031p6.\u0023b;
        obj0.\u0038Mh = true;
      }
      q14 q14_6 = obj0;
      byte[] numArray11 = buffer1;
      int index11 = num32;
      int num35 = index11 + 1;
      int num36 = (int) numArray11[index11];
      byte[] numArray12 = buffer1;
      int index12 = num35;
      int num37 = index12 + 1;
      int num38 = (int) numArray12[index12] * 256;
      int num39 = num36 + num38;
      byte[] numArray13 = buffer1;
      int index13 = num37;
      int num40 = index13 + 1;
      int num41 = (int) numArray13[index13] * 256 * 256;
      int num42 = num39 + num41;
      byte[] numArray14 = buffer1;
      int index14 = num40;
      int num43 = index14 + 1;
      int num44 = (int) numArray14[index14] * 256 * 256 * 256;
      int num45 = num42 + num44;
      q14_6.l2q = num45;
      q14 q14_7 = obj0;
      byte[] numArray15 = buffer1;
      int index15 = num43;
      int num46 = index15 + 1;
      int num47 = (int) numArray15[index15];
      byte[] numArray16 = buffer1;
      int index16 = num46;
      int num48 = index16 + 1;
      int num49 = (int) numArray16[index16] * 256;
      int num50 = num47 + num49;
      byte[] numArray17 = buffer1;
      int index17 = num48;
      int num51 = index17 + 1;
      int num52 = (int) numArray17[index17] * 256 * 256;
      int num53 = num50 + num52;
      byte[] numArray18 = buffer1;
      int index18 = num51;
      int num54 = index18 + 1;
      int num55 = (int) numArray18[index18] * 256 * 256 * 256;
      long num56 = (long) (uint) (num53 + num55);
      q14_7.h1c = num56;
      q14 q14_8 = obj0;
      byte[] numArray19 = buffer1;
      int index19 = num54;
      int num57 = index19 + 1;
      int num58 = (int) numArray19[index19];
      byte[] numArray20 = buffer1;
      int index20 = num57;
      int num59 = index20 + 1;
      int num60 = (int) numArray20[index20] * 256;
      int num61 = num58 + num60;
      byte[] numArray21 = buffer1;
      int index21 = num59;
      int num62 = index21 + 1;
      int num63 = (int) numArray21[index21] * 256 * 256;
      int num64 = num61 + num63;
      byte[] numArray22 = buffer1;
      int index22 = num62;
      int num65 = index22 + 1;
      int num66 = (int) numArray22[index22] * 256 * 256 * 256;
      long num67 = (long) (uint) (num64 + num66);
      q14_8.\u003378 = num67;
      if ((uint) obj0.h1c == uint.MaxValue || (uint) obj0.\u003378 == uint.MaxValue)
        obj0.\u003832 = true;
      byte[] numArray23 = buffer1;
      int index23 = num65;
      int num68 = index23 + 1;
      int num69 = (int) numArray23[index23];
      byte[] numArray24 = buffer1;
      int index24 = num68;
      int num70 = index24 + 1;
      int num71 = (int) numArray24[index24] * 256;
      int length = (int) (short) (num69 + num71);
      byte[] numArray25 = buffer1;
      int index25 = num70;
      int num72 = index25 + 1;
      int num73 = (int) numArray25[index25];
      byte[] numArray26 = buffer1;
      int index26 = num72;
      int num74 = index26 + 1;
      int num75 = (int) numArray26[index26] * 256;
      short num76 = (short) (num73 + num75);
      byte[] numArray27 = new byte[length];
      int num77 = obj0.\u00317Q.Read(numArray27, 0, numArray27.Length);
      int num78 = num5 + num77;
      if (((int) obj0.O48 & 2048) == 2048)
      {
        obj0.SG2 = Encoding.UTF8;
        obj0.oLx = VR4.\u0023d;
      }
      obj0.\u00365g = obj0.SG2.GetString(numArray27);
      if (obj0.\u00365g.EndsWith("/"))
        obj0.\u0034d1();
      int num79 = num78 + obj0.\u0036S5(obj0.\u00317Q, num76);
      obj0.\u0037f1 = 0;
      if (!obj0.\u00365g.EndsWith("/") && ((int) obj0.O48 & 8) == 8)
      {
        long position = obj0.\u00317Q.Position;
        bool flag = true;
        long num80 = 0;
        int num81 = 0;
        while (flag)
        {
          ++num81;
          if (obj0.\u0039tG.b54() != null)
            obj0.\u0039tG.b54().\u003856(obj0);
          long num82 = To4.I5o(obj0.\u00317Q, 134695760);
          if (num82 == -1L)
            return false;
          num80 += num82;
          if (obj0.\u003832)
          {
            byte[] buffer2 = new byte[20];
            if (obj0.\u00317Q.Read(buffer2, 0, buffer2.Length) != 20)
              return false;
            int num83 = 0;
            q14 q14_9 = obj0;
            byte[] numArray28 = buffer2;
            int index27 = num83;
            int num84 = index27 + 1;
            int num85 = (int) numArray28[index27];
            byte[] numArray29 = buffer2;
            int index28 = num84;
            int num86 = index28 + 1;
            int num87 = (int) numArray29[index28] * 256;
            int num88 = num85 + num87;
            byte[] numArray30 = buffer2;
            int index29 = num86;
            int num89 = index29 + 1;
            int num90 = (int) numArray30[index29] * 256 * 256;
            int num91 = num88 + num90;
            byte[] numArray31 = buffer2;
            int index30 = num89;
            int startIndex1 = index30 + 1;
            int num92 = (int) numArray31[index30] * 256 * 256 * 256;
            int num93 = num91 + num92;
            q14_9.l2q = num93;
            obj0.h1c = BitConverter.ToInt64(buffer2, startIndex1);
            int startIndex2 = startIndex1 + 8;
            obj0.\u003378 = BitConverter.ToInt64(buffer2, startIndex2);
            num74 = startIndex2 + 8;
          }
          else
          {
            byte[] buffer3 = new byte[12];
            if (obj0.\u00317Q.Read(buffer3, 0, buffer3.Length) != 12)
              return false;
            int num94 = 0;
            q14 q14_10 = obj0;
            byte[] numArray32 = buffer3;
            int index31 = num94;
            int num95 = index31 + 1;
            int num96 = (int) numArray32[index31];
            byte[] numArray33 = buffer3;
            int index32 = num95;
            int num97 = index32 + 1;
            int num98 = (int) numArray33[index32] * 256;
            int num99 = num96 + num98;
            byte[] numArray34 = buffer3;
            int index33 = num97;
            int num100 = index33 + 1;
            int num101 = (int) numArray34[index33] * 256 * 256;
            int num102 = num99 + num101;
            byte[] numArray35 = buffer3;
            int index34 = num100;
            int num103 = index34 + 1;
            int num104 = (int) numArray35[index34] * 256 * 256 * 256;
            int num105 = num102 + num104;
            q14_10.l2q = num105;
            q14 q14_11 = obj0;
            byte[] numArray36 = buffer3;
            int index35 = num103;
            int num106 = index35 + 1;
            int num107 = (int) numArray36[index35];
            byte[] numArray37 = buffer3;
            int index36 = num106;
            int num108 = index36 + 1;
            int num109 = (int) numArray37[index36] * 256;
            int num110 = num107 + num109;
            byte[] numArray38 = buffer3;
            int index37 = num108;
            int num111 = index37 + 1;
            int num112 = (int) numArray38[index37] * 256 * 256;
            int num113 = num110 + num112;
            byte[] numArray39 = buffer3;
            int index38 = num111;
            int num114 = index38 + 1;
            int num115 = (int) numArray39[index38] * 256 * 256 * 256;
            long num116 = (long) (uint) (num113 + num115);
            q14_11.h1c = num116;
            q14 q14_12 = obj0;
            byte[] numArray40 = buffer3;
            int index39 = num114;
            int num117 = index39 + 1;
            int num118 = (int) numArray40[index39];
            byte[] numArray41 = buffer3;
            int index40 = num117;
            int num119 = index40 + 1;
            int num120 = (int) numArray41[index40] * 256;
            int num121 = num118 + num120;
            byte[] numArray42 = buffer3;
            int index41 = num119;
            int num122 = index41 + 1;
            int num123 = (int) numArray42[index41] * 256 * 256;
            int num124 = num121 + num123;
            byte[] numArray43 = buffer3;
            int index42 = num122;
            num74 = index42 + 1;
            int num125 = (int) numArray43[index42] * 256 * 256 * 256;
            long num126 = (long) (uint) (num124 + num125);
            q14_12.\u003378 = num126;
          }
          flag = num80 != obj0.h1c;
          if (flag)
          {
            obj0.\u00317Q.Seek(-12L, SeekOrigin.Current);
            num80 += 4L;
          }
        }
        obj0.\u00317Q.Seek(position, SeekOrigin.Begin);
        obj0.\u0037f1 += obj0.\u003832 ? 24 : 16;
      }
      obj0.\u003814 = obj0.h1c;
      if (((int) obj0.O48 & 1) == 1)
      {
        if (obj0.\u0038w8 == \u0031p6.\u0023c || obj0.\u0038w8 == \u0031p6.\u0023d)
        {
          int num127 = q14.t1J(obj0.\u003397);
          obj0.z45 = \u0035N5.ZhK((string) null, num127, obj0.\u00317Q);
          num79 += obj0.z45.\u0036B4() - 10;
          obj0.\u003814 -= (long) obj0.z45.\u0036B4();
          obj0.\u0037f1 += 10;
        }
        else
        {
          obj0.K8w = new byte[12];
          num79 += q14.T77(obj0.\u0034c3, obj0.K8w);
          obj0.\u003814 -= 12L;
        }
      }
      obj0.\u0033et = num79;
      obj0.t5I = (long) obj0.\u0033et + obj0.\u003814 + (long) obj0.\u0037f1;
      return true;
    }

    internal static int T77([In] Stream obj0, [In] byte[] obj1)
    {
      int num = obj0.Read(obj1, 0, 12);
      return num == 12 ? num : throw new xZi(string.Format("Unexpected end of data at position 0x{0:X8}", (object) obj0.Position));
    }

    private static bool \u00312M([In] int obj0) => obj0 != 67324752;

    internal static q14 ELI([In] \u0033rn obj0, [In] bool obj1)
    {
      \u0032f3 obj = obj0.b54();
      Stream stream = obj0.\u0035PG();
      Encoding encoding = obj0.q3M();
      q14 q14 = new q14();
      q14.r98 = fGj.\u0023d;
      q14.\u0039tG = obj0;
      q14.\u0034c3 = stream;
      obj?.Zab(true, (q14) null);
      if (obj1)
        q14.T9I(stream);
      if (!q14.\u003759(q14, encoding))
        return (q14) null;
      q14.x4p = q14.\u00317Q.Position;
      stream.Seek(q14.\u003814 + (long) q14.\u0037f1, SeekOrigin.Current);
      q14.a3T(q14);
      if (obj != null)
      {
        obj.\u003856(q14);
        obj.Zab(false, q14);
      }
      return q14;
    }

    internal static void T9I([In] Stream obj0)
    {
      if (To4.\u0038m2(obj0) == 808471376)
        return;
      obj0.Seek(-4L, SeekOrigin.Current);
    }

    private static void a3T([In] q14 obj0)
    {
      Stream stream = obj0.\u00317Q;
      if ((long) (uint) To4.\u0038m2(stream) == (long) obj0.l2q)
      {
        if ((long) To4.\u0038m2(stream) == obj0.h1c)
        {
          if ((long) To4.\u0038m2(stream) == obj0.\u003378)
            return;
          stream.Seek(-12L, SeekOrigin.Current);
        }
        else
          stream.Seek(-8L, SeekOrigin.Current);
      }
      else
        stream.Seek(-4L, SeekOrigin.Current);
    }

    internal static int loZ([In] byte[] obj0, [In] int obj1, [In] ushort obj2)
    {
      int num1;
      short num2;
      for (int index1 = obj1; index1 + 3 < obj0.Length; index1 = num1 + (int) num2)
      {
        byte[] numArray1 = obj0;
        int index2 = index1;
        int num3 = index2 + 1;
        int num4 = (int) numArray1[index2];
        byte[] numArray2 = obj0;
        int index3 = num3;
        int num5 = index3 + 1;
        int num6 = (int) numArray2[index3] * 256;
        if ((int) (ushort) (num4 + num6) == (int) obj2)
          return num5 - 2;
        byte[] numArray3 = obj0;
        int index4 = num5;
        int num7 = index4 + 1;
        int num8 = (int) numArray3[index4];
        byte[] numArray4 = obj0;
        int index5 = num7;
        num1 = index5 + 1;
        int num9 = (int) numArray4[index5] * 256;
        num2 = (short) (num8 + num9);
      }
      return -1;
    }

    internal int \u0036S5([In] Stream obj0, [In] short obj1)
    {
      int num1 = 0;
      if (obj1 > (short) 0)
      {
        byte[] buffer = this.eGK = new byte[(int) obj1];
        num1 = obj0.Read(buffer, 0, buffer.Length);
        long num2 = obj0.Position - (long) num1;
        int num3;
        ushort num4;
        for (int index1 = 0; index1 + 3 < buffer.Length; index1 = num3 + (int) num4 + 4)
        {
          num3 = index1;
          byte[] numArray1 = buffer;
          int index2 = index1;
          int num5 = index2 + 1;
          int num6 = (int) numArray1[index2];
          byte[] numArray2 = buffer;
          int index3 = num5;
          int num7 = index3 + 1;
          int num8 = (int) numArray2[index3] * 256;
          ushort num9 = (ushort) (num6 + num8);
          byte[] numArray3 = buffer;
          int index4 = num7;
          int num10 = index4 + 1;
          int num11 = (int) numArray3[index4];
          byte[] numArray4 = buffer;
          int index5 = num10;
          int num12 = index5 + 1;
          int num13 = (int) numArray4[index5] * 256;
          num4 = (ushort) (num11 + num13);
          int num14;
          switch (num9)
          {
            case 1:
              num14 = this.\u003676(buffer, num12, num4, num2);
              break;
            case 10:
              num14 = this.I22(buffer, num12, num4, num2);
              break;
            case 23:
              num14 = this.h4K(buffer, num12);
              break;
            case 21589:
              num14 = this.\u003312(buffer, num12, num4, num2);
              break;
            case 22613:
              num14 = this.F26(buffer, num12, num4, num2);
              break;
            case 39169:
              num14 = this.l3Y(buffer, num12, num4, num2);
              break;
          }
        }
      }
      return num1;
    }

    private int h4K([In] byte[] obj0, [In] int obj1)
    {
      obj1 += 2;
      this.H37 = (uint) (ushort) ((int) obj0[obj1++] + (int) obj0[obj1++] * 256);
      this.\u003397 = this.I82 = \u0031p6.\u0023e;
      return obj1;
    }

    private int l3Y([In] byte[] obj0, [In] int obj1, [In] ushort obj2, [In] long obj3)
    {
      if (this.z18 == (short) 99)
      {
        if (((int) this.O48 & 1) != 1)
          throw new e1T(string.Format("  Inconsistent metadata at position 0x{0:X16}", (object) obj3));
        this.\u0038Mh = true;
        if (obj2 != (ushort) 7)
          throw new e1T(string.Format("  Inconsistent size (0x{0:X4}) in WinZip AES field at position 0x{1:X16}", (object) obj2, (object) obj3));
        this.h1P = BitConverter.ToInt16(obj0, obj1);
        obj1 += 2;
        if (this.h1P != (short) 1 && this.h1P != (short) 2)
          throw new e1T(string.Format("  Unexpected vendor version number (0x{0:X4}) for WinZip AES metadata at position 0x{1:X16}", (object) this.h1P, (object) obj3));
        short int16 = BitConverter.ToInt16(obj0, obj1);
        obj1 += 2;
        if (int16 != (short) 17729)
          throw new e1T(string.Format("  Unexpected vendor ID (0x{0:X4}) for WinZip AES metadata at position 0x{1:X16}", (object) int16, (object) obj3));
        int num = obj0[obj1] == (byte) 1 ? 128 : (obj0[obj1] == (byte) 3 ? 256 : -1);
        if (num < 0)
          throw new e1T(string.Format("Invalid key strength ({0})", (object) num));
        this.\u003397 = this.I82 = num == 128 ? \u0031p6.\u0023c : \u0031p6.\u0023d;
        ++obj1;
        this.m1i = this.z18 = BitConverter.ToInt16(obj0, obj1);
        obj1 += 2;
      }
      return obj1;
    }

    private int \u003676([In] byte[] obj0, [In] int obj1, [In] ushort obj2, [In] long obj3)
    {
      q14.Ic3 ic3 = new q14.Ic3();
      ic3.\u003766 = obj3;
      ic3.Ii4 = obj0;
      ic3.\u0033z6 = obj1;
      this.\u003832 = true;
      ic3.\u0039I9 = obj2 <= (ushort) 28 ? (int) obj2 : throw new e1T(string.Format("  Inconsistent size (0x{0:X4}) for ZIP64 extra field at position 0x{1:X16}", (object) obj2, (object) ic3.\u003766));
      q14.Pp3<long> pp3 = new q14.Pp3<long>(ic3.\u00389C);
      if (this.\u003378 == (long) uint.MaxValue)
        this.\u003378 = pp3();
      if (this.h1c == (long) uint.MaxValue)
        this.h1c = pp3();
      if (this.h4e == (long) uint.MaxValue)
        this.h4e = pp3();
      if (this.\u0039rK == (uint) ushort.MaxValue && ic3.\u0039I9 >= 4)
      {
        this.\u0039rK = BitConverter.ToUInt32(ic3.Ii4, ic3.\u0033z6);
        ic3.\u0033z6 += 4;
        ic3.\u0039I9 -= 4;
      }
      return ic3.\u0033z6;
    }

    private int F26([In] byte[] obj0, [In] int obj1, [In] ushort obj2, [In] long obj3)
    {
      if (obj2 != (ushort) 12 && obj2 != (ushort) 8)
        throw new e1T(string.Format("  Unexpected size (0x{0:X4}) for InfoZip v1 extra field at position 0x{1:X16}", (object) obj2, (object) obj3));
      int int32_1 = BitConverter.ToInt32(obj0, obj1);
      this.\u0034k9 = q14.inQ.AddSeconds((double) int32_1);
      obj1 += 4;
      int int32_2 = BitConverter.ToInt32(obj0, obj1);
      this.\u0032Tx = q14.inQ.AddSeconds((double) int32_2);
      obj1 += 4;
      this.\u0032uM = DateTime.UtcNow;
      this.\u0034h3 = true;
      this.\u0032xE |= \u00375n.\u0023e;
      return obj1;
    }

    private int \u003312([In] byte[] obj0, [In] int obj1, [In] ushort obj2, [In] long obj3)
    {
      q14.i9L i9L = new q14.i9L();
      i9L.\u003329 = obj0;
      i9L.\u0037ST = obj1;
      i9L.\u0034K8 = obj2 == (ushort) 13 || obj2 == (ushort) 9 || obj2 == (ushort) 5 ? (int) obj2 : throw new e1T(string.Format("  Unexpected size (0x{0:X4}) for Extended Timestamp extra field at position 0x{1:X16}", (object) obj2, (object) obj3));
      q14.Pp3<DateTime> pp3 = new q14.Pp3<DateTime>(i9L.f2F);
      if (obj2 == (ushort) 13 || this.Jm1 > 0)
      {
        byte num = i9L.\u003329[i9L.\u0037ST++];
        i9L.\u0034K8--;
        if (((int) num & 1) != 0 && i9L.\u0034K8 >= 4)
          this.\u0034k9 = pp3();
        this.\u0032Tx = ((int) num & 2) == 0 || i9L.\u0034K8 < 4 ? DateTime.UtcNow : pp3();
        this.\u0032uM = ((int) num & 4) == 0 || i9L.\u0034K8 < 4 ? DateTime.UtcNow : pp3();
        this.\u0032xE |= \u00375n.\u0023d;
        this.\u0034h3 = true;
        this.\u003437 = true;
      }
      else
        this.\u003477();
      return i9L.\u0037ST;
    }

    private int I22([In] byte[] obj0, [In] int obj1, [In] ushort obj2, [In] long obj3)
    {
      if (obj2 != (ushort) 32)
        throw new e1T(string.Format("  Unexpected size (0x{0:X4}) for NTFS times extra field at position 0x{1:X16}", (object) obj2, (object) obj3));
      obj1 += 4;
      int num1 = (int) (short) ((int) obj0[obj1] + (int) obj0[obj1 + 1] * 256);
      short num2 = (short) ((int) obj0[obj1 + 2] + (int) obj0[obj1 + 3] * 256);
      obj1 += 4;
      if (num1 == 1 && num2 == (short) 24)
      {
        this.\u0034k9 = DateTime.FromFileTimeUtc(BitConverter.ToInt64(obj0, obj1));
        obj1 += 8;
        this.\u0032Tx = DateTime.FromFileTimeUtc(BitConverter.ToInt64(obj0, obj1));
        obj1 += 8;
        this.\u0032uM = DateTime.FromFileTimeUtc(BitConverter.ToInt64(obj0, obj1));
        obj1 += 8;
        this.\u0034h3 = true;
        this.\u0032xE |= \u00375n.\u0023c;
        this.\u00392c = true;
      }
      return obj1;
    }

    internal void \u0036Jb([In] Stream obj0)
    {
      byte[] numArray1 = new byte[8192];
      int num1 = 0;
      byte[] numArray2 = numArray1;
      int index1 = num1;
      int num2 = index1 + 1;
      numArray2[index1] = (byte) 80;
      byte[] numArray3 = numArray1;
      int index2 = num2;
      int num3 = index2 + 1;
      numArray3[index2] = (byte) 75;
      byte[] numArray4 = numArray1;
      int index3 = num3;
      int num4 = index3 + 1;
      numArray4[index3] = (byte) 1;
      byte[] numArray5 = numArray1;
      int index4 = num4;
      int num5 = index4 + 1;
      numArray5[index4] = (byte) 2;
      byte[] numArray6 = numArray1;
      int index5 = num5;
      int num6 = index5 + 1;
      int num7 = (int) (byte) ((uint) this.\u0033I3 & (uint) byte.MaxValue);
      numArray6[index5] = (byte) num7;
      byte[] numArray7 = numArray1;
      int index6 = num6;
      int num8 = index6 + 1;
      int num9 = (int) (byte) (((int) this.\u0033I3 & 65280) >> 8);
      numArray7[index6] = (byte) num9;
      short num10 = this.O31 != (short) 0 ? this.O31 : (short) 20;
      if (!this.\u0033vC.HasValue)
        this.\u0033vC = new bool?(this.\u0039tG.E6c() == \u0033RZ.\u0023d);
      short num11 = this.\u0033vC.Value ? (short) 45 : num10;
      if (this.UQ3 == d3U.BZip2)
        num11 = (short) 46;
      byte[] numArray8 = numArray1;
      int index7 = num8;
      int num12 = index7 + 1;
      int num13 = (int) (byte) ((uint) num11 & (uint) byte.MaxValue);
      numArray8[index7] = (byte) num13;
      byte[] numArray9 = numArray1;
      int index8 = num12;
      int num14 = index8 + 1;
      int num15 = (int) (byte) (((int) num11 & 65280) >> 8);
      numArray9[index8] = (byte) num15;
      byte[] numArray10 = numArray1;
      int index9 = num14;
      int num16 = index9 + 1;
      int num17 = (int) (byte) ((uint) this.O48 & (uint) byte.MaxValue);
      numArray10[index9] = (byte) num17;
      byte[] numArray11 = numArray1;
      int index10 = num16;
      int num18 = index10 + 1;
      int num19 = (int) (byte) (((int) this.O48 & 65280) >> 8);
      numArray11[index10] = (byte) num19;
      byte[] numArray12 = numArray1;
      int index11 = num18;
      int num20 = index11 + 1;
      int num21 = (int) (byte) ((uint) this.z18 & (uint) byte.MaxValue);
      numArray12[index11] = (byte) num21;
      byte[] numArray13 = numArray1;
      int index12 = num20;
      int num22 = index12 + 1;
      int num23 = (int) (byte) (((int) this.z18 & 65280) >> 8);
      numArray13[index12] = (byte) num23;
      if (this.\u0038w8 == \u0031p6.\u0023c || this.\u0038w8 == \u0031p6.\u0023d)
      {
        int num24 = num22 - 2;
        byte[] numArray14 = numArray1;
        int index13 = num24;
        int num25 = index13 + 1;
        numArray14[index13] = (byte) 99;
        byte[] numArray15 = numArray1;
        int index14 = num25;
        num22 = index14 + 1;
        numArray15[index14] = (byte) 0;
      }
      byte[] numArray16 = numArray1;
      int index15 = num22;
      int num26 = index15 + 1;
      int num27 = (int) (byte) (this.\u0035U7 & (int) byte.MaxValue);
      numArray16[index15] = (byte) num27;
      byte[] numArray17 = numArray1;
      int index16 = num26;
      int num28 = index16 + 1;
      int num29 = (int) (byte) ((this.\u0035U7 & 65280) >> 8);
      numArray17[index16] = (byte) num29;
      byte[] numArray18 = numArray1;
      int index17 = num28;
      int num30 = index17 + 1;
      int num31 = (int) (byte) ((this.\u0035U7 & 16711680) >> 16);
      numArray18[index17] = (byte) num31;
      byte[] numArray19 = numArray1;
      int index18 = num30;
      int num32 = index18 + 1;
      int num33 = (int) (byte) (((long) this.\u0035U7 & 4278190080L) >> 24);
      numArray19[index18] = (byte) num33;
      byte[] numArray20 = numArray1;
      int index19 = num32;
      int num34 = index19 + 1;
      int num35 = (int) (byte) (this.l2q & (int) byte.MaxValue);
      numArray20[index19] = (byte) num35;
      byte[] numArray21 = numArray1;
      int index20 = num34;
      int num36 = index20 + 1;
      int num37 = (int) (byte) ((this.l2q & 65280) >> 8);
      numArray21[index20] = (byte) num37;
      byte[] numArray22 = numArray1;
      int index21 = num36;
      int num38 = index21 + 1;
      int num39 = (int) (byte) ((this.l2q & 16711680) >> 16);
      numArray22[index21] = (byte) num39;
      byte[] numArray23 = numArray1;
      int index22 = num38;
      int num40 = index22 + 1;
      int num41 = (int) (byte) (((long) this.l2q & 4278190080L) >> 24);
      numArray23[index22] = (byte) num41;
      if (this.\u0033vC.Value)
      {
        for (int index23 = 0; index23 < 8; ++index23)
          numArray1[num40++] = byte.MaxValue;
      }
      else
      {
        byte[] numArray24 = numArray1;
        int index24 = num40;
        int num42 = index24 + 1;
        int num43 = (int) (byte) ((ulong) this.h1c & (ulong) byte.MaxValue);
        numArray24[index24] = (byte) num43;
        byte[] numArray25 = numArray1;
        int index25 = num42;
        int num44 = index25 + 1;
        int num45 = (int) (byte) ((this.h1c & 65280L) >> 8);
        numArray25[index25] = (byte) num45;
        byte[] numArray26 = numArray1;
        int index26 = num44;
        int num46 = index26 + 1;
        int num47 = (int) (byte) ((this.h1c & 16711680L) >> 16);
        numArray26[index26] = (byte) num47;
        byte[] numArray27 = numArray1;
        int index27 = num46;
        int num48 = index27 + 1;
        int num49 = (int) (byte) ((this.h1c & 4278190080L) >> 24);
        numArray27[index27] = (byte) num49;
        byte[] numArray28 = numArray1;
        int index28 = num48;
        int num50 = index28 + 1;
        int num51 = (int) (byte) ((ulong) this.\u003378 & (ulong) byte.MaxValue);
        numArray28[index28] = (byte) num51;
        byte[] numArray29 = numArray1;
        int index29 = num50;
        int num52 = index29 + 1;
        int num53 = (int) (byte) ((this.\u003378 & 65280L) >> 8);
        numArray29[index29] = (byte) num53;
        byte[] numArray30 = numArray1;
        int index30 = num52;
        int num54 = index30 + 1;
        int num55 = (int) (byte) ((this.\u003378 & 16711680L) >> 16);
        numArray30[index30] = (byte) num55;
        byte[] numArray31 = numArray1;
        int index31 = num54;
        num40 = index31 + 1;
        int num56 = (int) (byte) ((this.\u003378 & 4278190080L) >> 24);
        numArray31[index31] = (byte) num56;
      }
      byte[] src = this.\u003354();
      short length = (short) src.Length;
      byte[] numArray32 = numArray1;
      int index32 = num40;
      int num57 = index32 + 1;
      int num58 = (int) (byte) ((uint) length & (uint) byte.MaxValue);
      numArray32[index32] = (byte) num58;
      byte[] numArray33 = numArray1;
      int index33 = num57;
      int num59 = index33 + 1;
      int num60 = (int) (byte) (((int) length & 65280) >> 8);
      numArray33[index33] = (byte) num60;
      this.K4E = this.\u0033vC.Value;
      this.eGK = this.\u0037MP(true);
      short count1 = this.eGK == null ? (short) 0 : (short) this.eGK.Length;
      byte[] numArray34 = numArray1;
      int index34 = num59;
      int num61 = index34 + 1;
      int num62 = (int) (byte) ((uint) count1 & (uint) byte.MaxValue);
      numArray34[index34] = (byte) num62;
      byte[] numArray35 = numArray1;
      int index35 = num61;
      int num63 = index35 + 1;
      int num64 = (int) (byte) (((int) count1 & 65280) >> 8);
      numArray35[index35] = (byte) num64;
      int count2 = this.\u003854 == null ? 0 : this.\u003854.Length;
      int num65 = num63 + 2;
      int num66;
      if ((this.\u0039tG.b54() == null ? 0 : (this.\u0039tG.b54().n73 != 0L ? 1 : 0)) != 0)
      {
        if (this.K4E || this.\u0039rK > (uint) ushort.MaxValue)
        {
          byte[] numArray36 = numArray1;
          int index36 = num65;
          int num67 = index36 + 1;
          numArray36[index36] = byte.MaxValue;
          byte[] numArray37 = numArray1;
          int index37 = num67;
          num66 = index37 + 1;
          numArray37[index37] = byte.MaxValue;
        }
        else
        {
          byte[] numArray38 = numArray1;
          int index38 = num65;
          int num68 = index38 + 1;
          int num69 = (int) (byte) (this.\u0039rK & (uint) byte.MaxValue);
          numArray38[index38] = (byte) num69;
          byte[] numArray39 = numArray1;
          int index39 = num68;
          num66 = index39 + 1;
          int num70 = (int) (byte) ((this.\u0039rK & 65280U) >> 8);
          numArray39[index39] = (byte) num70;
        }
      }
      else
      {
        byte[] numArray40 = numArray1;
        int index40 = num65;
        int num71 = index40 + 1;
        numArray40[index40] = (byte) 0;
        byte[] numArray41 = numArray1;
        int index41 = num71;
        num66 = index41 + 1;
        numArray41[index41] = (byte) 0;
      }
      byte[] numArray42 = numArray1;
      int index42 = num66;
      int num72 = index42 + 1;
      int num73 = this.\u0031jb ? 1 : 0;
      numArray42[index42] = (byte) num73;
      byte[] numArray43 = numArray1;
      int index43 = num72;
      int num74 = index43 + 1;
      numArray43[index43] = (byte) 0;
      byte[] numArray44 = numArray1;
      int index44 = num74;
      int num75 = index44 + 1;
      int num76 = (int) (byte) (this.C8x & (int) byte.MaxValue);
      numArray44[index44] = (byte) num76;
      byte[] numArray45 = numArray1;
      int index45 = num75;
      int num77 = index45 + 1;
      int num78 = (int) (byte) ((this.C8x & 65280) >> 8);
      numArray45[index45] = (byte) num78;
      byte[] numArray46 = numArray1;
      int index46 = num77;
      int num79 = index46 + 1;
      int num80 = (int) (byte) ((this.C8x & 16711680) >> 16);
      numArray46[index46] = (byte) num80;
      byte[] numArray47 = numArray1;
      int index47 = num79;
      int num81 = index47 + 1;
      int num82 = (int) (byte) (((long) this.C8x & 4278190080L) >> 24);
      numArray47[index47] = (byte) num82;
      int dstOffset;
      if (this.K4E || this.h4e > (long) uint.MaxValue)
      {
        byte[] numArray48 = numArray1;
        int index48 = num81;
        int num83 = index48 + 1;
        numArray48[index48] = byte.MaxValue;
        byte[] numArray49 = numArray1;
        int index49 = num83;
        int num84 = index49 + 1;
        numArray49[index49] = byte.MaxValue;
        byte[] numArray50 = numArray1;
        int index50 = num84;
        int num85 = index50 + 1;
        numArray50[index50] = byte.MaxValue;
        byte[] numArray51 = numArray1;
        int index51 = num85;
        dstOffset = index51 + 1;
        numArray51[index51] = byte.MaxValue;
      }
      else
      {
        byte[] numArray52 = numArray1;
        int index52 = num81;
        int num86 = index52 + 1;
        int num87 = (int) (byte) ((ulong) this.h4e & (ulong) byte.MaxValue);
        numArray52[index52] = (byte) num87;
        byte[] numArray53 = numArray1;
        int index53 = num86;
        int num88 = index53 + 1;
        int num89 = (int) (byte) ((this.h4e & 65280L) >> 8);
        numArray53[index53] = (byte) num89;
        byte[] numArray54 = numArray1;
        int index54 = num88;
        int num90 = index54 + 1;
        int num91 = (int) (byte) ((this.h4e & 16711680L) >> 16);
        numArray54[index54] = (byte) num91;
        byte[] numArray55 = numArray1;
        int index55 = num90;
        dstOffset = index55 + 1;
        int num92 = (int) (byte) ((this.h4e & 4278190080L) >> 24);
        numArray55[index55] = (byte) num92;
      }
      Buffer.BlockCopy((Array) src, 0, (Array) numArray1, dstOffset, (int) length);
      int num93 = dstOffset + (int) length;
      if (this.eGK != null)
      {
        Buffer.BlockCopy((Array) this.eGK, 0, (Array) numArray1, num93, (int) count1);
        num93 += (int) count1;
      }
      if (count2 != 0)
      {
        if (count2 + num93 > numArray1.Length)
          count2 = numArray1.Length - num93;
        Buffer.BlockCopy((Array) this.\u003854, 0, (Array) numArray1, num93, count2);
        num93 += count2;
      }
      numArray1[32] = (byte) (count2 & (int) byte.MaxValue);
      numArray1[33] = (byte) ((count2 & 65280) >> 8);
      obj0.Write(numArray1, 0, num93);
    }

    private byte[] \u0037MP([In] bool obj0)
    {
      List<byte[]> numArrayList = new List<byte[]>();
      if (this.\u0039tG.E6c() == \u0033RZ.\u0023d || this.\u0039tG.E6c() == \u0033RZ.\u0023c && (!obj0 || this.vn6.Value))
      {
        int length = 4 + (obj0 ? 28 : 16);
        byte[] destinationArray = new byte[length];
        int num1 = 0;
        int num2;
        if (this.K4E | obj0)
        {
          byte[] numArray1 = destinationArray;
          int index1 = num1;
          int num3 = index1 + 1;
          numArray1[index1] = (byte) 1;
          byte[] numArray2 = destinationArray;
          int index2 = num3;
          num2 = index2 + 1;
          numArray2[index2] = (byte) 0;
        }
        else
        {
          byte[] numArray3 = destinationArray;
          int index3 = num1;
          int num4 = index3 + 1;
          numArray3[index3] = (byte) 153;
          byte[] numArray4 = destinationArray;
          int index4 = num4;
          num2 = index4 + 1;
          numArray4[index4] = (byte) 153;
        }
        byte[] numArray5 = destinationArray;
        int index5 = num2;
        int num5 = index5 + 1;
        int num6 = (int) (byte) (length - 4);
        numArray5[index5] = (byte) num6;
        byte[] numArray6 = destinationArray;
        int index6 = num5;
        int destinationIndex1 = index6 + 1;
        numArray6[index6] = (byte) 0;
        Array.Copy((Array) BitConverter.GetBytes(this.\u003378), 0, (Array) destinationArray, destinationIndex1, 8);
        int destinationIndex2 = destinationIndex1 + 8;
        Array.Copy((Array) BitConverter.GetBytes(this.h1c), 0, (Array) destinationArray, destinationIndex2, 8);
        int destinationIndex3 = destinationIndex2 + 8;
        if (obj0)
        {
          Array.Copy((Array) BitConverter.GetBytes(this.h4e), 0, (Array) destinationArray, destinationIndex3, 8);
          int destinationIndex4 = destinationIndex3 + 8;
          Array.Copy((Array) BitConverter.GetBytes(this.\u0039rK), 0, (Array) destinationArray, destinationIndex4, 4);
        }
        numArrayList.Add(destinationArray);
      }
      if (this.\u0038w8 == \u0031p6.\u0023c || this.\u0038w8 == \u0031p6.\u0023d)
      {
        byte[] numArray7 = new byte[11];
        int num7 = 0;
        byte[] numArray8 = numArray7;
        int index7 = num7;
        int num8 = index7 + 1;
        numArray8[index7] = (byte) 1;
        byte[] numArray9 = numArray7;
        int index8 = num8;
        int num9 = index8 + 1;
        numArray9[index8] = (byte) 153;
        byte[] numArray10 = numArray7;
        int index9 = num9;
        int num10 = index9 + 1;
        numArray10[index9] = (byte) 7;
        byte[] numArray11 = numArray7;
        int index10 = num10;
        int num11 = index10 + 1;
        numArray11[index10] = (byte) 0;
        byte[] numArray12 = numArray7;
        int index11 = num11;
        int num12 = index11 + 1;
        numArray12[index11] = (byte) 1;
        byte[] numArray13 = numArray7;
        int index12 = num12;
        int num13 = index12 + 1;
        numArray13[index12] = (byte) 0;
        byte[] numArray14 = numArray7;
        int index13 = num13;
        int num14 = index13 + 1;
        numArray14[index13] = (byte) 65;
        byte[] numArray15 = numArray7;
        int index14 = num14;
        int index15 = index14 + 1;
        numArray15[index14] = (byte) 69;
        switch (q14.t1J(this.\u0038w8))
        {
          case 128:
            numArray7[index15] = (byte) 1;
            break;
          case 256:
            numArray7[index15] = (byte) 3;
            break;
          default:
            numArray7[index15] = byte.MaxValue;
            break;
        }
        int num15 = index15 + 1;
        byte[] numArray16 = numArray7;
        int index16 = num15;
        int num16 = index16 + 1;
        int num17 = (int) (byte) ((uint) this.z18 & (uint) byte.MaxValue);
        numArray16[index16] = (byte) num17;
        byte[] numArray17 = numArray7;
        int index17 = num16;
        int num18 = index17 + 1;
        int num19 = (int) (byte) ((uint) this.z18 & 65280U);
        numArray17[index17] = (byte) num19;
        numArrayList.Add(numArray7);
      }
      if (this.\u0034h3 && this.\u00392c)
      {
        byte[] destinationArray = new byte[36];
        int num20 = 0;
        byte[] numArray18 = destinationArray;
        int index18 = num20;
        int num21 = index18 + 1;
        numArray18[index18] = (byte) 10;
        byte[] numArray19 = destinationArray;
        int index19 = num21;
        int num22 = index19 + 1;
        numArray19[index19] = (byte) 0;
        byte[] numArray20 = destinationArray;
        int index20 = num22;
        int num23 = index20 + 1;
        numArray20[index20] = (byte) 32;
        byte[] numArray21 = destinationArray;
        int index21 = num23;
        int num24 = index21 + 1;
        numArray21[index21] = (byte) 0;
        int num25 = num24 + 4;
        byte[] numArray22 = destinationArray;
        int index22 = num25;
        int num26 = index22 + 1;
        numArray22[index22] = (byte) 1;
        byte[] numArray23 = destinationArray;
        int index23 = num26;
        int num27 = index23 + 1;
        numArray23[index23] = (byte) 0;
        byte[] numArray24 = destinationArray;
        int index24 = num27;
        int num28 = index24 + 1;
        numArray24[index24] = (byte) 24;
        byte[] numArray25 = destinationArray;
        int index25 = num28;
        int destinationIndex5 = index25 + 1;
        numArray25[index25] = (byte) 0;
        Array.Copy((Array) BitConverter.GetBytes(this.\u0034k9.ToFileTime()), 0, (Array) destinationArray, destinationIndex5, 8);
        int destinationIndex6 = destinationIndex5 + 8;
        Array.Copy((Array) BitConverter.GetBytes(this.\u0032Tx.ToFileTime()), 0, (Array) destinationArray, destinationIndex6, 8);
        int destinationIndex7 = destinationIndex6 + 8;
        Array.Copy((Array) BitConverter.GetBytes(this.\u0032uM.ToFileTime()), 0, (Array) destinationArray, destinationIndex7, 8);
        int num29 = destinationIndex7 + 8;
        numArrayList.Add(destinationArray);
      }
      if (this.\u0034h3 && this.\u003437)
      {
        int length = 9;
        if (!obj0)
          length += 8;
        byte[] destinationArray = new byte[length];
        int num30 = 0;
        byte[] numArray26 = destinationArray;
        int index26 = num30;
        int num31 = index26 + 1;
        numArray26[index26] = (byte) 85;
        byte[] numArray27 = destinationArray;
        int index27 = num31;
        int num32 = index27 + 1;
        numArray27[index27] = (byte) 84;
        byte[] numArray28 = destinationArray;
        int index28 = num32;
        int num33 = index28 + 1;
        int num34 = (int) (byte) (length - 4);
        numArray28[index28] = (byte) num34;
        byte[] numArray29 = destinationArray;
        int index29 = num33;
        int num35 = index29 + 1;
        numArray29[index29] = (byte) 0;
        byte[] numArray30 = destinationArray;
        int index30 = num35;
        int destinationIndex8 = index30 + 1;
        numArray30[index30] = (byte) 7;
        Array.Copy((Array) BitConverter.GetBytes((int) (this.\u0034k9 - q14.inQ).TotalSeconds), 0, (Array) destinationArray, destinationIndex8, 4);
        int destinationIndex9 = destinationIndex8 + 4;
        if (!obj0)
        {
          Array.Copy((Array) BitConverter.GetBytes((int) (this.\u0032Tx - q14.inQ).TotalSeconds), 0, (Array) destinationArray, destinationIndex9, 4);
          int destinationIndex10 = destinationIndex9 + 4;
          Array.Copy((Array) BitConverter.GetBytes((int) (this.\u0032uM - q14.inQ).TotalSeconds), 0, (Array) destinationArray, destinationIndex10, 4);
          int num36 = destinationIndex10 + 4;
        }
        numArrayList.Add(destinationArray);
      }
      byte[] destinationArray1 = (byte[]) null;
      if (numArrayList.Count > 0)
      {
        int length = 0;
        int destinationIndex = 0;
        for (int index = 0; index < numArrayList.Count; ++index)
          length += numArrayList[index].Length;
        destinationArray1 = new byte[length];
        for (int index = 0; index < numArrayList.Count; ++index)
        {
          Array.Copy((Array) numArrayList[index], 0, (Array) destinationArray1, destinationIndex, numArrayList[index].Length);
          destinationIndex += numArrayList[index].Length;
        }
      }
      return destinationArray1;
    }

    private string XYB()
    {
      string str1 = this.L83.Replace("\\", "/");
      string str2;
      if (this.\u00311P && this.L83.Length >= 3 && this.L83[1] == ':' && str1[2] == '/')
        str2 = str1.Substring(3);
      else if (this.L83.Length >= 4 && str1[0] == '/' && str1[1] == '/')
      {
        int num = str1.IndexOf('/', 2);
        str2 = num != -1 ? str1.Substring(num + 1) : throw new ArgumentException("The path for that entry appears to be badly formatted");
      }
      else
        str2 = this.L83.Length < 3 || str1[0] != '.' || str1[1] != '/' ? str1 : str1.Substring(2);
      return str2;
    }

    private byte[] \u003354()
    {
      string s = this.XYB();
      switch (this.oLx)
      {
        case VR4.\u0023a:
          if (this.i9M != null && this.i9M.Length != 0)
            this.\u003854 = q14.DFl.GetBytes(this.i9M);
          this.k4G = q14.DFl;
          return q14.DFl.GetBytes(s);
        case VR4.\u0023d:
          if (this.i9M != null && this.i9M.Length != 0)
            this.\u003854 = this.SG2.GetBytes(this.i9M);
          this.k4G = this.SG2;
          return this.SG2.GetBytes(s);
        default:
          byte[] bytes1 = q14.DFl.GetBytes(s);
          string str1 = q14.DFl.GetString(bytes1);
          this.\u003854 = (byte[]) null;
          string str2 = s;
          if (str1 != str2)
          {
            byte[] bytes2 = this.SG2.GetBytes(s);
            if (this.i9M != null && this.i9M.Length != 0)
              this.\u003854 = this.SG2.GetBytes(this.i9M);
            this.k4G = this.SG2;
            return bytes2;
          }
          this.k4G = q14.DFl;
          if (this.i9M == null || this.i9M.Length == 0)
            return bytes1;
          byte[] bytes3 = q14.DFl.GetBytes(this.i9M);
          if (q14.DFl.GetString(bytes3, 0, bytes3.Length) != this.\u003545)
          {
            byte[] bytes4 = this.SG2.GetBytes(s);
            this.\u003854 = this.SG2.GetBytes(this.i9M);
            this.k4G = this.SG2;
            return bytes4;
          }
          this.\u003854 = bytes3;
          return bytes1;
      }
    }

    private bool \u0031M6() => this.\u003378 >= 16L && this.z18 != (short) 0 && this.\u0032Q2 != PIJ.\u0023a && this.h1c >= this.\u003378 && (this.r98 != fGj.\u0023c || this.iWJ.CanSeek) && (this.K4b == null || this.\u0037qg - (long) this.K4b.\u0036B4() > this.\u0039MP + 16L) && (this.ftz == null || this.\u0037qg - 12L > this.\u0039MP);

    private void Pq6([In] int obj0)
    {
      if (obj0 > 1)
        this.z18 = (short) 0;
      else if (this.pT8)
      {
        this.z18 = (short) 0;
      }
      else
      {
        if (this.r98 == fGj.\u0023d)
          return;
        if (this.r98 == fGj.\u0023c)
        {
          if (this.iWJ != null && this.iWJ.CanSeek && this.iWJ.Length == 0L)
          {
            this.z18 = (short) 0;
            return;
          }
        }
        else if (this.r98 == fGj.\u0023b && To4.wHY(this.Ye9) == 0L)
        {
          this.z18 = (short) 0;
          return;
        }
        if (this.\u00399X != null)
          this.\u0032Q2 = this.\u00399X(this.Ye9, this.\u00365g);
        if (this.\u0032Q2 != PIJ.\u0023a || this.UQ3 != d3U.Deflate)
          return;
        this.z18 = (short) 0;
      }
    }

    internal void Y63([In] Stream obj0, [In] int obj1)
    {
      this.u7h = obj0 is \u0036IA obj2 ? obj2.Kpw() : obj0.Position;
      int num1 = 0;
      byte[] src1 = new byte[30];
      byte[] numArray1 = src1;
      int index1 = num1;
      int num2 = index1 + 1;
      numArray1[index1] = (byte) 80;
      byte[] numArray2 = src1;
      int index2 = num2;
      int num3 = index2 + 1;
      numArray2[index2] = (byte) 75;
      byte[] numArray3 = src1;
      int index3 = num3;
      int num4 = index3 + 1;
      numArray3[index3] = (byte) 3;
      byte[] numArray4 = src1;
      int index4 = num4;
      int num5 = index4 + 1;
      numArray4[index4] = (byte) 4;
      this.K4E = this.\u0039tG.E6c() == \u0033RZ.\u0023d || this.\u0039tG.E6c() == \u0033RZ.\u0023c && !obj0.CanSeek;
      short num6 = this.K4E ? (short) 45 : (short) 20;
      if (this.UQ3 == d3U.BZip2)
        num6 = (short) 46;
      byte[] numArray5 = src1;
      int index5 = num5;
      int num7 = index5 + 1;
      int num8 = (int) (byte) ((uint) num6 & (uint) byte.MaxValue);
      numArray5[index5] = (byte) num8;
      byte[] numArray6 = src1;
      int index6 = num7;
      int num9 = index6 + 1;
      int num10 = (int) (byte) (((int) num6 & 65280) >> 8);
      numArray6[index6] = (byte) num10;
      byte[] src2 = this.\u003354();
      short length = (short) src2.Length;
      if (this.I82 == \u0031p6.\u0023a)
        this.O48 &= (short) -2;
      else
        this.O48 |= (short) 1;
      if (this.k4G.CodePage == Encoding.UTF8.CodePage)
        this.O48 |= (short) 2048;
      if (this.pT8 || obj1 == 99)
      {
        this.O48 &= (short) -9;
        this.O48 &= (short) -2;
        this.\u0038w8 = \u0031p6.\u0023a;
        this.K89 = (string) null;
      }
      else if (!obj0.CanSeek)
        this.O48 |= (short) 8;
      byte[] numArray7 = src1;
      int index7 = num9;
      int num11 = index7 + 1;
      int num12 = (int) (byte) ((uint) this.O48 & (uint) byte.MaxValue);
      numArray7[index7] = (byte) num12;
      byte[] numArray8 = src1;
      int index8 = num11;
      int num13 = index8 + 1;
      int num14 = (int) (byte) (((int) this.O48 & 65280) >> 8);
      numArray8[index8] = (byte) num14;
      if (this.x4p == -1L)
      {
        this.h1c = 0L;
        this.\u0036VU = false;
      }
      this.Pq6(obj1);
      byte[] numArray9 = src1;
      int index9 = num13;
      int num15 = index9 + 1;
      int num16 = (int) (byte) ((uint) this.z18 & (uint) byte.MaxValue);
      numArray9[index9] = (byte) num16;
      byte[] numArray10 = src1;
      int index10 = num15;
      int num17 = index10 + 1;
      int num18 = (int) (byte) (((int) this.z18 & 65280) >> 8);
      numArray10[index10] = (byte) num18;
      if (obj1 == 99)
        this.\u0038cU();
      else if (this.\u0038w8 == \u0031p6.\u0023c || this.\u0038w8 == \u0031p6.\u0023d)
      {
        int num19 = num17 - 2;
        byte[] numArray11 = src1;
        int index11 = num19;
        int num20 = index11 + 1;
        numArray11[index11] = (byte) 99;
        byte[] numArray12 = src1;
        int index12 = num20;
        num17 = index12 + 1;
        numArray12[index12] = (byte) 0;
      }
      this.\u0035U7 = !this.u1u ? To4.kr9(this.S1N) : 0;
      byte[] numArray13 = src1;
      int index13 = num17;
      int num21 = index13 + 1;
      int num22 = (int) (byte) (this.\u0035U7 & (int) byte.MaxValue);
      numArray13[index13] = (byte) num22;
      byte[] numArray14 = src1;
      int index14 = num21;
      int num23 = index14 + 1;
      int num24 = (int) (byte) ((this.\u0035U7 & 65280) >> 8);
      numArray14[index14] = (byte) num24;
      byte[] numArray15 = src1;
      int index15 = num23;
      int num25 = index15 + 1;
      int num26 = (int) (byte) ((this.\u0035U7 & 16711680) >> 16);
      numArray15[index15] = (byte) num26;
      byte[] numArray16 = src1;
      int index16 = num25;
      int num27 = index16 + 1;
      int num28 = (int) (byte) (((long) this.\u0035U7 & 4278190080L) >> 24);
      numArray16[index16] = (byte) num28;
      byte[] numArray17 = src1;
      int index17 = num27;
      int num29 = index17 + 1;
      int num30 = (int) (byte) (this.l2q & (int) byte.MaxValue);
      numArray17[index17] = (byte) num30;
      byte[] numArray18 = src1;
      int index18 = num29;
      int num31 = index18 + 1;
      int num32 = (int) (byte) ((this.l2q & 65280) >> 8);
      numArray18[index18] = (byte) num32;
      byte[] numArray19 = src1;
      int index19 = num31;
      int num33 = index19 + 1;
      int num34 = (int) (byte) ((this.l2q & 16711680) >> 16);
      numArray19[index19] = (byte) num34;
      byte[] numArray20 = src1;
      int index20 = num33;
      int num35 = index20 + 1;
      int num36 = (int) (byte) (((long) this.l2q & 4278190080L) >> 24);
      numArray20[index20] = (byte) num36;
      if (this.K4E)
      {
        for (int index21 = 0; index21 < 8; ++index21)
          src1[num35++] = byte.MaxValue;
      }
      else
      {
        byte[] numArray21 = src1;
        int index22 = num35;
        int num37 = index22 + 1;
        int num38 = (int) (byte) ((ulong) this.h1c & (ulong) byte.MaxValue);
        numArray21[index22] = (byte) num38;
        byte[] numArray22 = src1;
        int index23 = num37;
        int num39 = index23 + 1;
        int num40 = (int) (byte) ((this.h1c & 65280L) >> 8);
        numArray22[index23] = (byte) num40;
        byte[] numArray23 = src1;
        int index24 = num39;
        int num41 = index24 + 1;
        int num42 = (int) (byte) ((this.h1c & 16711680L) >> 16);
        numArray23[index24] = (byte) num42;
        byte[] numArray24 = src1;
        int index25 = num41;
        int num43 = index25 + 1;
        int num44 = (int) (byte) ((this.h1c & 4278190080L) >> 24);
        numArray24[index25] = (byte) num44;
        byte[] numArray25 = src1;
        int index26 = num43;
        int num45 = index26 + 1;
        int num46 = (int) (byte) ((ulong) this.\u003378 & (ulong) byte.MaxValue);
        numArray25[index26] = (byte) num46;
        byte[] numArray26 = src1;
        int index27 = num45;
        int num47 = index27 + 1;
        int num48 = (int) (byte) ((this.\u003378 & 65280L) >> 8);
        numArray26[index27] = (byte) num48;
        byte[] numArray27 = src1;
        int index28 = num47;
        int num49 = index28 + 1;
        int num50 = (int) (byte) ((this.\u003378 & 16711680L) >> 16);
        numArray27[index28] = (byte) num50;
        byte[] numArray28 = src1;
        int index29 = num49;
        num35 = index29 + 1;
        int num51 = (int) (byte) ((this.\u003378 & 4278190080L) >> 24);
        numArray28[index29] = (byte) num51;
      }
      byte[] numArray29 = src1;
      int index30 = num35;
      int num52 = index30 + 1;
      int num53 = (int) (byte) ((uint) length & (uint) byte.MaxValue);
      numArray29[index30] = (byte) num53;
      byte[] numArray30 = src1;
      int index31 = num52;
      int num54 = index31 + 1;
      int num55 = (int) (byte) (((int) length & 65280) >> 8);
      numArray30[index31] = (byte) num55;
      this.eGK = this.\u0037MP(false);
      short num56 = this.eGK == null ? (short) 0 : (short) this.eGK.Length;
      byte[] numArray31 = src1;
      int index32 = num54;
      int num57 = index32 + 1;
      int num58 = (int) (byte) ((uint) num56 & (uint) byte.MaxValue);
      numArray31[index32] = (byte) num58;
      byte[] numArray32 = src1;
      int index33 = num57;
      int num59 = index33 + 1;
      int num60 = (int) (byte) (((int) num56 & 65280) >> 8);
      numArray32[index33] = (byte) num60;
      byte[] numArray33 = new byte[num59 + (int) length + (int) num56];
      Buffer.BlockCopy((Array) src1, 0, (Array) numArray33, 0, num59);
      Buffer.BlockCopy((Array) src2, 0, (Array) numArray33, num59, src2.Length);
      int num61 = num59 + src2.Length;
      if (this.eGK != null)
      {
        Buffer.BlockCopy((Array) this.eGK, 0, (Array) numArray33, num61, this.eGK.Length);
        num61 += this.eGK.Length;
      }
      this.\u0033et = num61;
      if (obj0 is \u0035yQ obj3)
      {
        obj3.u61(true);
        uint num62 = obj3.\u003763(num61);
        this.u7h = (int) num62 == (int) obj3.\u0031pq() ? ((Stream) obj3).Position : 0L;
        this.\u0039rK = num62;
      }
      if (this.\u0039tG.E6c() == \u0033RZ.\u0023a && (uint) this.h4e >= uint.MaxValue)
        throw new xZi("Offset within the zip archive exceeds 0xFFFFFFFF. Consider setting the UseZip64WhenSaving property on the ZipFile instance.");
      obj0.Write(numArray33, 0, num61);
      obj3?.u61(false);
      this.G81 = numArray33;
    }

    private int \u0031h2()
    {
      if (!this.\u0036VU)
      {
        Stream stream = (Stream) null;
        if (this.r98 == fGj.\u0023e)
        {
          \u0039c4 obj = new \u0039c4(Stream.Null);
          this.X4Q(this.L83, (Stream) obj);
          this.l2q = obj.\u0036cy();
        }
        else if (this.r98 != fGj.\u0023d)
        {
          if (this.r98 == fGj.\u0023c)
          {
            this.ezU();
            stream = this.iWJ;
          }
          else if (this.r98 == fGj.\u0023f)
          {
            if (this.iWJ == null)
              this.iWJ = this.kQ8(this.L83);
            this.ezU();
            stream = this.iWJ;
          }
          else if (this.r98 != fGj.\u0023g)
            stream = (Stream) File.Open(this.Ye9, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
          this.l2q = new ov2().\u00337z(stream);
          if (this.iWJ == null)
            stream.Dispose();
        }
        this.\u0036VU = true;
      }
      return this.l2q;
    }

    private void ezU()
    {
      if (this.iWJ == null)
        throw new xZi(string.Format("The input stream is null for entry '{0}'.", (object) this.L83));
      if (this.iD3.HasValue)
        this.iWJ.Position = this.iD3.Value;
      else if (this.iWJ.CanSeek)
        this.iD3 = new long?(this.iWJ.Position);
      else if (this.\u0038w8 == \u0031p6.\u0023b && this.r98 != fGj.\u0023d && ((int) this.O48 & 8) != 8)
        throw new xZi("It is not possible to use PKZIP encryption on a non-seekable input stream");
    }

    internal void \u003196([In] q14 obj0)
    {
      this.x4p = obj0.x4p;
      this.UQ3 = obj0.UQ3;
      this.m1i = obj0.m1i;
      this.\u003814 = obj0.\u003814;
      this.\u003378 = obj0.\u003378;
      this.O48 = obj0.O48;
      this.r98 = obj0.r98;
      this.\u00394A = obj0.\u00394A;
      this.\u0034k9 = obj0.\u0034k9;
      this.\u0032Tx = obj0.\u0032Tx;
      this.\u0032uM = obj0.\u0032uM;
      this.\u0034h3 = obj0.\u0034h3;
      this.\u003437 = obj0.\u003437;
      this.\u00392c = obj0.\u00392c;
    }

    private void F9v([In] long obj0, [In] long obj1)
    {
      if (this.\u0039tG.b54() == null)
        return;
      this.jm6 = this.\u0039tG.b54().\u0034MX(this, obj0, obj1);
    }

    private void \u0034mx([In] Stream obj0)
    {
      Stream stream1 = (Stream) null;
      long num1 = -1;
      try
      {
        num1 = obj0.Position;
      }
      catch (Exception ex)
      {
      }
      try
      {
        long num2 = this.j56(ref stream1);
        \u0036IA obj1 = new \u0036IA(obj0);
        Stream stream2;
        Stream stream3;
        if (num2 != 0L)
        {
          stream2 = this.\u003887((Stream) obj1);
          stream3 = this.TLn(stream2, num2);
        }
        else
          stream2 = stream3 = (Stream) obj1;
        \u0039c4 obj2 = new \u0039c4(stream3, true);
        if (this.r98 == fGj.\u0023e)
        {
          this.X4Q(this.L83, (Stream) obj2);
        }
        else
        {
          byte[] buffer = new byte[this.zt7];
          int count;
          while ((count = To4.qdS(stream1, buffer, 0, buffer.Length, this.L83)) != 0)
          {
            ((Stream) obj2).Write(buffer, 0, count);
            this.F9v(obj2.cpa(), num2);
            if (this.jm6)
              break;
          }
        }
        this.TI6(obj0, obj1, stream2, stream3, obj2);
      }
      finally
      {
        if (this.r98 == fGj.\u0023f)
        {
          if (this.BP2 != null)
            this.BP2(this.L83, stream1);
          this.iWJ = (Stream) null;
        }
        else if (stream1 is FileStream)
          stream1.Dispose();
      }
      if (this.jm6)
        return;
      this.x4p = num1;
      this.R25(obj0);
    }

    private long j56([In] ref Stream obj0)
    {
      long num = -1;
      if (this.r98 == fGj.\u0023c)
      {
        this.ezU();
        obj0 = this.iWJ;
        try
        {
          num = this.iWJ.Length;
        }
        catch (NotSupportedException ex)
        {
        }
      }
      else if (this.r98 == fGj.\u0023d)
      {
        this.iWJ = (Stream) this.nv8(this.\u003397 == \u0031p6.\u0023a ? (string) null : this.\u0036Ug ?? this.\u0039tG.\u003919());
        this.ezU();
        obj0 = this.iWJ;
        num = this.iWJ.Length;
      }
      else if (this.r98 == fGj.\u0023f)
      {
        if (this.iWJ == null)
          this.iWJ = this.kQ8(this.L83);
        this.ezU();
        obj0 = this.iWJ;
        try
        {
          num = this.iWJ.Length;
        }
        catch (NotSupportedException ex)
        {
        }
      }
      else if (this.r98 == fGj.\u0023b)
      {
        FileShare share = FileShare.ReadWrite | FileShare.Delete;
        obj0 = (Stream) File.Open(this.Ye9, FileMode.Open, FileAccess.Read, share);
        num = obj0.Length;
      }
      return num;
    }

    internal void TI6([In] Stream obj0, [In] \u0036IA obj1, [In] Stream obj2, [In] Stream obj3, [In] \u0039c4 obj4)
    {
      if (obj4 == null)
        return;
      ((Stream) obj4).Close();
      switch (obj3)
      {
        case \u0034T4 _:
          obj3.Close();
          break;
        case M44 _:
          obj3.Close();
          break;
        case w65 _:
          obj3.Close();
          break;
        case A8K _:
          obj3.Close();
          break;
      }
      obj2.Flush();
      obj2.Close();
      this.\u0037f1 = 0;
      this.\u003378 = obj4.cpa();
      if (obj2 is \u003525 obj && this.\u003378 > 0L)
      {
        obj0.Write(obj.M41(), 0, 10);
        this.\u0037f1 += 10;
      }
      this.\u003814 = obj1.Dpr();
      this.h1c = this.\u003814;
      this.l2q = obj4.\u0036cy();
      this.\u00349w();
    }

    internal void R25([In] Stream obj0)
    {
      \u0036IA obj1 = obj0 as \u0036IA;
      if (this.\u003378 == 0L && this.h1c == 0L)
      {
        if (this.r98 == fGj.\u0023g)
          return;
        if (this.\u0036Ug != null)
        {
          int num1 = 0;
          if (this.\u0038w8 == \u0031p6.\u0023b)
            num1 = 12;
          else if (this.\u0038w8 == \u0031p6.\u0023c || this.\u0038w8 == \u0031p6.\u0023d)
            num1 = this.K4b.E45.Length + this.K4b.\u0039t3().Length;
          if (this.r98 == fGj.\u0023g && !obj0.CanSeek)
            throw new xZi("Zero bytes written, encryption in use, and non-seekable output.");
          if (this.\u0038w8 != \u0031p6.\u0023a)
          {
            obj0.Seek((long) (-1 * num1), SeekOrigin.Current);
            obj0.SetLength(obj0.Position);
            obj1?.\u003956((long) num1);
            this.\u0033et -= num1;
            this.x4p -= (long) num1;
          }
          this.\u0036Ug = (string) null;
          this.O48 &= (short) -2;
          int num2 = 6;
          byte[] g81_1 = this.G81;
          int index1 = num2;
          int num3 = index1 + 1;
          int num4 = (int) (byte) ((uint) this.O48 & (uint) byte.MaxValue);
          g81_1[index1] = (byte) num4;
          byte[] g81_2 = this.G81;
          int index2 = num3;
          int num5 = index2 + 1;
          int num6 = (int) (byte) (((int) this.O48 & 65280) >> 8);
          g81_2[index2] = (byte) num6;
          if (this.\u0038w8 == \u0031p6.\u0023c || this.\u0038w8 == \u0031p6.\u0023d)
          {
            int num7 = q14.loZ(this.G81, 30 + (int) (short) ((int) this.G81[26] + (int) this.G81[27] * 256), (ushort) 39169);
            if (num7 >= 0)
            {
              byte[] g81_3 = this.G81;
              int index3 = num7;
              int num8 = index3 + 1;
              g81_3[index3] = (byte) 153;
              byte[] g81_4 = this.G81;
              int index4 = num8;
              int num9 = index4 + 1;
              g81_4[index4] = (byte) 153;
            }
          }
        }
        this.UQ3 = d3U.None;
        this.\u0038w8 = \u0031p6.\u0023a;
      }
      else if (this.ftz != null || this.K4b != null)
      {
        if (this.\u0038w8 == \u0031p6.\u0023b)
          this.h1c += 12L;
        else if (this.\u0038w8 == \u0031p6.\u0023c || this.\u0038w8 == \u0031p6.\u0023d)
          this.h1c += (long) this.K4b.\u0036B4();
      }
      int num10 = 8;
      byte[] g81_5 = this.G81;
      int index5 = num10;
      int num11 = index5 + 1;
      int num12 = (int) (byte) ((uint) this.z18 & (uint) byte.MaxValue);
      g81_5[index5] = (byte) num12;
      byte[] g81_6 = this.G81;
      int index6 = num11;
      int num13 = index6 + 1;
      int num14 = (int) (byte) (((int) this.z18 & 65280) >> 8);
      g81_6[index6] = (byte) num14;
      int num15 = 14;
      byte[] g81_7 = this.G81;
      int index7 = num15;
      int num16 = index7 + 1;
      int num17 = (int) (byte) (this.l2q & (int) byte.MaxValue);
      g81_7[index7] = (byte) num17;
      byte[] g81_8 = this.G81;
      int index8 = num16;
      int num18 = index8 + 1;
      int num19 = (int) (byte) ((this.l2q & 65280) >> 8);
      g81_8[index8] = (byte) num19;
      byte[] g81_9 = this.G81;
      int index9 = num18;
      int num20 = index9 + 1;
      int num21 = (int) (byte) ((this.l2q & 16711680) >> 16);
      g81_9[index9] = (byte) num21;
      byte[] g81_10 = this.G81;
      int index10 = num20;
      int num22 = index10 + 1;
      int num23 = (int) (byte) (((long) this.l2q & 4278190080L) >> 24);
      g81_10[index10] = (byte) num23;
      this.\u0038cU();
      short num24 = (short) ((int) this.G81[26] + (int) this.G81[27] * 256);
      short num25 = (short) ((int) this.G81[28] + (int) this.G81[29] * 256);
      if (this.\u0033vC.Value)
      {
        this.G81[4] = (byte) 45;
        this.G81[5] = (byte) 0;
        for (int index11 = 0; index11 < 8; ++index11)
          this.G81[num22++] = byte.MaxValue;
        int num26 = 30 + (int) num24;
        byte[] g81_11 = this.G81;
        int index12 = num26;
        int num27 = index12 + 1;
        g81_11[index12] = (byte) 1;
        byte[] g81_12 = this.G81;
        int index13 = num27;
        int num28 = index13 + 1;
        g81_12[index13] = (byte) 0;
        int destinationIndex1 = num28 + 2;
        Array.Copy((Array) BitConverter.GetBytes(this.\u003378), 0, (Array) this.G81, destinationIndex1, 8);
        int destinationIndex2 = destinationIndex1 + 8;
        Array.Copy((Array) BitConverter.GetBytes(this.h1c), 0, (Array) this.G81, destinationIndex2, 8);
      }
      else
      {
        this.G81[4] = (byte) 20;
        this.G81[5] = (byte) 0;
        int num29 = 18;
        byte[] g81_13 = this.G81;
        int index14 = num29;
        int num30 = index14 + 1;
        int num31 = (int) (byte) ((ulong) this.h1c & (ulong) byte.MaxValue);
        g81_13[index14] = (byte) num31;
        byte[] g81_14 = this.G81;
        int index15 = num30;
        int num32 = index15 + 1;
        int num33 = (int) (byte) ((this.h1c & 65280L) >> 8);
        g81_14[index15] = (byte) num33;
        byte[] g81_15 = this.G81;
        int index16 = num32;
        int num34 = index16 + 1;
        int num35 = (int) (byte) ((this.h1c & 16711680L) >> 16);
        g81_15[index16] = (byte) num35;
        byte[] g81_16 = this.G81;
        int index17 = num34;
        int num36 = index17 + 1;
        int num37 = (int) (byte) ((this.h1c & 4278190080L) >> 24);
        g81_16[index17] = (byte) num37;
        byte[] g81_17 = this.G81;
        int index18 = num36;
        int num38 = index18 + 1;
        int num39 = (int) (byte) ((ulong) this.\u003378 & (ulong) byte.MaxValue);
        g81_17[index18] = (byte) num39;
        byte[] g81_18 = this.G81;
        int index19 = num38;
        int num40 = index19 + 1;
        int num41 = (int) (byte) ((this.\u003378 & 65280L) >> 8);
        g81_18[index19] = (byte) num41;
        byte[] g81_19 = this.G81;
        int index20 = num40;
        int num42 = index20 + 1;
        int num43 = (int) (byte) ((this.\u003378 & 16711680L) >> 16);
        g81_19[index20] = (byte) num43;
        byte[] g81_20 = this.G81;
        int index21 = num42;
        num13 = index21 + 1;
        int num44 = (int) (byte) ((this.\u003378 & 4278190080L) >> 24);
        g81_20[index21] = (byte) num44;
        if (num25 != (short) 0)
        {
          int num45 = 30 + (int) num24;
          if ((short) ((int) this.G81[num45 + 2] + (int) this.G81[num45 + 3] * 256) == (short) 16)
          {
            byte[] g81_21 = this.G81;
            int index22 = num45;
            int num46 = index22 + 1;
            g81_21[index22] = (byte) 153;
            byte[] g81_22 = this.G81;
            int index23 = num46;
            num13 = index23 + 1;
            g81_22[index23] = (byte) 153;
          }
        }
      }
      if (this.\u0038w8 == \u0031p6.\u0023c || this.\u0038w8 == \u0031p6.\u0023d)
      {
        int num47 = 8;
        byte[] g81_23 = this.G81;
        int index24 = num47;
        int num48 = index24 + 1;
        g81_23[index24] = (byte) 99;
        byte[] g81_24 = this.G81;
        int index25 = num48;
        num13 = index25 + 1;
        g81_24[index25] = (byte) 0;
        int index26 = 30 + (int) num24;
        do
        {
          int num49 = (int) (ushort) ((uint) this.G81[index26] + (uint) this.G81[index26 + 1] * 256U);
          short num50 = (short) ((int) this.G81[index26 + 2] + (int) this.G81[index26 + 3] * 256);
          if (num49 != 39169)
          {
            index26 += (int) num50 + 4;
          }
          else
          {
            int num51 = index26 + 9;
            byte[] g81_25 = this.G81;
            int index27 = num51;
            int num52 = index27 + 1;
            int num53 = (int) (byte) ((uint) this.z18 & (uint) byte.MaxValue);
            g81_25[index27] = (byte) num53;
            byte[] g81_26 = this.G81;
            int index28 = num52;
            index26 = index28 + 1;
            int num54 = (int) (byte) ((uint) this.z18 & 65280U);
            g81_26[index28] = (byte) num54;
          }
        }
        while (index26 < (int) num25 - 30 - (int) num24);
      }
      if (((int) this.O48 & 8) != 8 || this.r98 == fGj.\u0023g && obj0.CanSeek)
      {
        if (obj0 is \u0035yQ obj2 && (int) this.\u0039rK != (int) obj2.\u0031pq())
        {
          using (Stream stream = \u0035yQ.Zz6(this.\u0039tG.b54().\u0039Z1, this.\u0039rK))
          {
            stream.Seek(this.h4e, SeekOrigin.Begin);
            stream.Write(this.G81, 0, this.G81.Length);
          }
        }
        else
        {
          obj0.Seek(this.h4e, SeekOrigin.Begin);
          obj0.Write(this.G81, 0, this.G81.Length);
          obj1?.\u003956((long) this.G81.Length);
          obj0.Seek(this.h1c, SeekOrigin.Current);
        }
      }
      if (((int) this.O48 & 8) != 8 || this.pT8)
        return;
      byte[] numArray1 = new byte[16 + (this.\u0033vC.Value ? 8 : 0)];
      int destinationIndex3 = 0;
      Array.Copy((Array) BitConverter.GetBytes(134695760), 0, (Array) numArray1, destinationIndex3, 4);
      int destinationIndex4 = destinationIndex3 + 4;
      Array.Copy((Array) BitConverter.GetBytes(this.l2q), 0, (Array) numArray1, destinationIndex4, 4);
      int destinationIndex5 = destinationIndex4 + 4;
      if (this.\u0033vC.Value)
      {
        Array.Copy((Array) BitConverter.GetBytes(this.h1c), 0, (Array) numArray1, destinationIndex5, 8);
        int destinationIndex6 = destinationIndex5 + 8;
        Array.Copy((Array) BitConverter.GetBytes(this.\u003378), 0, (Array) numArray1, destinationIndex6, 8);
        num13 = destinationIndex6 + 8;
      }
      else
      {
        byte[] numArray2 = numArray1;
        int index29 = destinationIndex5;
        int num55 = index29 + 1;
        int num56 = (int) (byte) ((ulong) this.h1c & (ulong) byte.MaxValue);
        numArray2[index29] = (byte) num56;
        byte[] numArray3 = numArray1;
        int index30 = num55;
        int num57 = index30 + 1;
        int num58 = (int) (byte) ((this.h1c & 65280L) >> 8);
        numArray3[index30] = (byte) num58;
        byte[] numArray4 = numArray1;
        int index31 = num57;
        int num59 = index31 + 1;
        int num60 = (int) (byte) ((this.h1c & 16711680L) >> 16);
        numArray4[index31] = (byte) num60;
        byte[] numArray5 = numArray1;
        int index32 = num59;
        int num61 = index32 + 1;
        int num62 = (int) (byte) ((this.h1c & 4278190080L) >> 24);
        numArray5[index32] = (byte) num62;
        byte[] numArray6 = numArray1;
        int index33 = num61;
        int num63 = index33 + 1;
        int num64 = (int) (byte) ((ulong) this.\u003378 & (ulong) byte.MaxValue);
        numArray6[index33] = (byte) num64;
        byte[] numArray7 = numArray1;
        int index34 = num63;
        int num65 = index34 + 1;
        int num66 = (int) (byte) ((this.\u003378 & 65280L) >> 8);
        numArray7[index34] = (byte) num66;
        byte[] numArray8 = numArray1;
        int index35 = num65;
        int num67 = index35 + 1;
        int num68 = (int) (byte) ((this.\u003378 & 16711680L) >> 16);
        numArray8[index35] = (byte) num68;
        byte[] numArray9 = numArray1;
        int index36 = num67;
        num13 = index36 + 1;
        int num69 = (int) (byte) ((this.\u003378 & 4278190080L) >> 24);
        numArray9[index36] = (byte) num69;
      }
      obj0.Write(numArray1, 0, numArray1.Length);
      this.\u0037f1 += numArray1.Length;
    }

    private void \u0038cU()
    {
      this.vn6 = new bool?(this.h1c >= (long) uint.MaxValue || this.\u003378 >= (long) uint.MaxValue || this.h4e >= (long) uint.MaxValue);
      if (this.\u0039tG.E6c() == \u0033RZ.\u0023a && this.vn6.Value)
        throw new xZi("Compressed or Uncompressed size, or offset exceeds the maximum value. Consider setting the UseZip64WhenSaving property on the ZipFile instance.");
      this.\u0033vC = new bool?(this.\u0039tG.E6c() == \u0033RZ.\u0023d || this.vn6.Value);
    }

    internal void De6(
      Stream _param1,
      long _param2,
      out \u0036IA _param3,
      out Stream _param4,
      out Stream _param5,
      out \u0039c4 _param6)
    {
      _param3 = new \u0036IA(_param1);
      if (_param2 != 0L)
      {
        _param4 = this.\u003887((Stream) _param3);
        _param5 = this.TLn(_param4, _param2);
      }
      else
        _param4 = _param5 = (Stream) _param3;
      _param6 = new \u0039c4(_param5, true);
    }

    private Stream TLn([In] Stream obj0, [In] long obj1)
    {
      if (this.z18 == (short) 8 && this.\u0032Q2 != PIJ.\u0023a)
      {
        if (this.\u0039tG.\u0032XQ() == 0L || obj1 > this.\u0039tG.\u0032XQ() && this.\u0039tG.\u0032XQ() > 0L)
        {
          if (this.\u0039tG.\u0031Uz() == null)
          {
            this.\u0039tG.\u003599(new A8K(obj0, this.\u0032Q2, this.\u0039tG.a4y(), true));
            if (this.\u0039tG.l62() > 0)
              this.\u0039tG.\u0031Uz().WZ6(this.\u0039tG.l62());
            if (this.\u0039tG.\u003766() > 0)
              this.\u0039tG.\u0031Uz().\u00394C(this.\u0039tG.\u003766());
          }
          A8K a8K = this.\u0039tG.\u0031Uz();
          a8K.\u00324I(obj0);
          return (Stream) a8K;
        }
        \u0034T4 obj = new \u0034T4(obj0, \u003212.\u0023a, this.\u0032Q2, true);
        if (this.\u0039tG.l62() > 0)
          obj.\u003369(this.\u0039tG.l62());
        obj.\u003725(this.\u0039tG.a4y());
        return (Stream) obj;
      }
      if (this.z18 != (short) 12)
        return obj0;
      return this.\u0039tG.\u0032XQ() == 0L || obj1 > this.\u0039tG.\u0032XQ() && this.\u0039tG.\u0032XQ() > 0L ? (Stream) new w65(obj0, true) : (Stream) new M44(obj0, true);
    }

    private Stream \u003887([In] Stream obj0)
    {
      if (this.\u0038w8 == \u0031p6.\u0023b)
        return (Stream) new \u003744(obj0, this.ftz, LzE.\u0023a);
      return this.\u0038w8 == \u0031p6.\u0023c || this.\u0038w8 == \u0031p6.\u0023d ? (Stream) new \u003525(obj0, this.K4b, LzE.\u0023a) : obj0;
    }

    private void IdK([In] Exception obj0)
    {
      if (this.\u0039tG.b54() == null)
        return;
      this.jm6 = this.\u0039tG.b54().\u0034yx(this, obj0);
    }

    internal void \u0039ed([In] Stream obj0)
    {
      \u0036IA obj1 = obj0 as \u0036IA;
      \u0035yQ obj2 = obj0 as \u0035yQ;
      bool flag1 = false;
      do
      {
        try
        {
          if (this.r98 == fGj.\u0023d && !this.\u00318k)
          {
            this.fFA(obj0);
            break;
          }
          if (this.pT8)
          {
            this.Y63(obj0, 1);
            this.\u00349w();
            this.vn6 = new bool?(this.h4e >= (long) uint.MaxValue);
            this.\u0033vC = new bool?(this.\u0039tG.E6c() == \u0033RZ.\u0023d || this.vn6.Value);
            if (obj2 == null)
              break;
            this.\u0039rK = obj2.\u0031pq();
            break;
          }
          int num = 0;
          bool flag2;
          do
          {
            ++num;
            this.Y63(obj0, num);
            this.\u0032O3(obj0);
            this.\u0034mx(obj0);
            this.t5I = (long) this.\u0033et + this.\u003814 + (long) this.\u0037f1;
            flag2 = num <= 1 && obj0.CanSeek && this.\u0031M6();
            if (flag2)
            {
              if (obj2 != null)
                obj2.\u00396u(this.\u0039rK, this.h4e);
              else
                obj0.Seek(this.h4e, SeekOrigin.Begin);
              obj0.SetLength(obj0.Position);
              obj1?.\u003956(this.t5I);
            }
          }
          while (flag2);
          this.L55 = false;
          flag1 = true;
        }
        catch (Exception ex)
        {
          \u0039T3 b7o = this.b7o;
          int num1 = 0;
          while (this.b7o != \u0039T3.\u0023a)
          {
            if (this.b7o == \u0039T3.\u0023b || this.b7o == \u0039T3.\u0023c)
            {
              long num2 = obj1 != null ? obj1.Kpw() : obj0.Position;
              long offset = num2 - this.u7h;
              if (offset > 0L)
              {
                obj0.Seek(offset, SeekOrigin.Current);
                long position = obj0.Position;
                obj0.SetLength(obj0.Position);
                obj1?.\u003956(num2 - position);
              }
              if (this.b7o == \u0039T3.\u0023b)
              {
                this.Oq2("Skipping file {0} (exception: {1})", new object[2]
                {
                  (object) this.Ye9,
                  (object) ex.ToString()
                });
                this.L55 = true;
                flag1 = true;
                goto label_33;
              }
              else
              {
                this.b7o = b7o;
                goto label_33;
              }
            }
            else if (num1 > 0)
            {
              throw;
            }
            else
            {
              if (this.b7o == \u0039T3.\u0023d)
              {
                this.IdK(ex);
                if (this.jm6)
                {
                  flag1 = true;
                  goto label_33;
                }
              }
              ++num1;
            }
          }
          throw;
        }
label_33:;
      }
      while (!flag1);
    }

    internal void \u00349w() => this.h4e = this.u7h;

    internal void \u00392F()
    {
      this.\u003397 = this.I82;
      this.m1i = this.z18;
      this.\u00318k = false;
      this.\u00388u = false;
      this.r98 = fGj.\u0023d;
    }

    internal void \u0032O3([In] Stream obj0)
    {
      if (this.\u0038w8 == \u0031p6.\u0023a)
        return;
      string str = this.\u0036Ug;
      if (this.r98 == fGj.\u0023d && str == null)
        str = this.\u0039tG.\u003919();
      if (str == null)
      {
        this.ftz = (H85) null;
        this.K4b = (\u0035N5) null;
      }
      else if (this.\u0038w8 == \u0031p6.\u0023b)
      {
        this.ftz = H85.\u003594(str);
        Random random = new Random();
        byte[] numArray = new byte[12];
        byte[] buffer1 = numArray;
        random.NextBytes(buffer1);
        if (((int) this.O48 & 8) == 8)
        {
          this.\u0035U7 = !this.u1u ? To4.kr9(this.S1N) : 0;
          numArray[11] = (byte) (this.\u0035U7 >> 8 & (int) byte.MaxValue);
        }
        else
        {
          this.\u0031h2();
          numArray[11] = (byte) (this.l2q >> 24 & (int) byte.MaxValue);
        }
        byte[] buffer2 = this.ftz.\u0033Hx(numArray, numArray.Length);
        obj0.Write(buffer2, 0, buffer2.Length);
        this.\u0033et += buffer2.Length;
      }
      else
      {
        if (this.\u0038w8 != \u0031p6.\u0023c && this.\u0038w8 != \u0031p6.\u0023d)
          return;
        int num = q14.t1J(this.\u0038w8);
        this.K4b = \u0035N5.F5L(str, num);
        obj0.Write(this.K4b.\u0036Mp(), 0, this.K4b.E45.Length);
        obj0.Write(this.K4b.\u0039t3(), 0, this.K4b.\u0039t3().Length);
        this.\u0033et += this.K4b.E45.Length + this.K4b.\u0039t3().Length;
      }
    }

    private void fFA([In] Stream obj0)
    {
      if (this.\u00391V == 0)
        throw new UW5("Bad header length.");
      if ((this.\u00388u || this.\u00317Q is \u0035yQ || obj0 is \u0035yQ || this.\u003832 && this.\u0039tG.\u0033Yw() == \u0033RZ.\u0023a ? 1 : (this.\u003832 ? 0 : (this.\u0039tG.\u0033Yw() == \u0033RZ.\u0023d ? 1 : 0))) != 0)
        this.\u0035ej(obj0);
      else
        this.\u00322O(obj0);
      this.vn6 = new bool?(this.h1c >= (long) uint.MaxValue || this.\u003378 >= (long) uint.MaxValue || this.h4e >= (long) uint.MaxValue);
      this.\u0033vC = new bool?(this.\u0039tG.E6c() == \u0033RZ.\u0023d || this.vn6.Value);
    }

    private void \u0035ej([In] Stream obj0)
    {
      byte[] buffer1 = new byte[this.zt7];
      \u0036IA obj = new \u0036IA(this.\u00317Q);
      long h4e = this.h4e;
      int num1 = this.\u00391V;
      this.Y63(obj0, 0);
      this.\u00349w();
      if (!this.L83.EndsWith("/"))
      {
        long num2 = h4e + (long) num1;
        int num3 = q14.\u003427(this.\u003397);
        long offset = num2 - (long) num3;
        this.\u0033et += num3;
        ((Stream) obj).Seek(offset, SeekOrigin.Begin);
        long h1c = this.h1c;
        while (h1c > 0L)
        {
          int count1 = h1c > (long) buffer1.Length ? buffer1.Length : (int) h1c;
          int count2 = ((Stream) obj).Read(buffer1, 0, count1);
          this.v5Z(count2);
          obj0.Write(buffer1, 0, count2);
          h1c -= (long) count2;
          this.F9v(obj.uP7(), this.h1c);
          if (this.jm6)
            break;
        }
        if (((int) this.O48 & 8) == 8)
        {
          int count = 16;
          if (this.\u003832)
            count += 8;
          byte[] buffer2 = new byte[count];
          ((Stream) obj).Read(buffer2, 0, count);
          if (this.\u003832 && this.\u0039tG.\u0033Yw() == \u0033RZ.\u0023a)
          {
            obj0.Write(buffer2, 0, 8);
            if (this.h1c > (long) uint.MaxValue)
              throw new InvalidOperationException("ZIP64 is required");
            obj0.Write(buffer2, 8, 4);
            if (this.\u003378 > (long) uint.MaxValue)
              throw new InvalidOperationException("ZIP64 is required");
            obj0.Write(buffer2, 16, 4);
            this.\u0037f1 -= 8;
          }
          else if (!this.\u003832 && this.\u0039tG.\u0033Yw() == \u0033RZ.\u0023d)
          {
            byte[] buffer3 = new byte[4];
            obj0.Write(buffer2, 0, 8);
            obj0.Write(buffer2, 8, 4);
            obj0.Write(buffer3, 0, 4);
            obj0.Write(buffer2, 12, 4);
            obj0.Write(buffer3, 0, 4);
            this.\u0037f1 += 8;
          }
          else
            obj0.Write(buffer2, 0, count);
        }
      }
      this.t5I = (long) this.\u0033et + this.\u003814 + (long) this.\u0037f1;
    }

    private void \u00322O([In] Stream obj0)
    {
      byte[] buffer = new byte[this.zt7];
      \u0036IA obj1 = new \u0036IA(this.\u00317Q);
      ((Stream) obj1).Seek(this.h4e, SeekOrigin.Begin);
      if (this.t5I == 0L)
        this.t5I = (long) this.\u0033et + this.\u003814 + (long) this.\u0037f1;
      this.h4e = obj0 is \u0036IA obj2 ? obj2.Kpw() : obj0.Position;
      long t5I = this.t5I;
      while (t5I > 0L)
      {
        int count1 = t5I > (long) buffer.Length ? buffer.Length : (int) t5I;
        int count2 = ((Stream) obj1).Read(buffer, 0, count1);
        this.v5Z(count2);
        obj0.Write(buffer, 0, count2);
        t5I -= (long) count2;
        this.F9v(obj1.uP7(), this.t5I);
        if (this.jm6)
          break;
      }
    }

    private void \u0035Z6([In] string obj0, [In] object[] obj1)
    {
      lock (this.\u003356)
      {
        int hashCode = Thread.CurrentThread.GetHashCode();
        Console.ForegroundColor = (ConsoleColor) (hashCode % 8 + 8);
        Console.Write("{0:000} ZipEntry.Write ", (object) hashCode);
        Console.WriteLine(obj0, obj1);
        Console.ResetColor();
      }
    }

    private sealed class \u0033O6
    {
      private static Regex N2W = new Regex(" \\(copy (\\d+)\\)$");
      private static int H22 = 0;

      internal static void \u0032v7() => q14.\u0033O6.H22 = 0;

      internal static string V8z([In] string obj0)
      {
        ++q14.\u0033O6.H22;
        if (q14.\u0033O6.H22 > 25)
          throw new OverflowException("overflow while creating filename");
        int num1 = 1;
        int num2 = obj0.LastIndexOf(".");
        if (num2 == -1)
        {
          Match match = q14.\u0033O6.N2W.Match(obj0);
          if (match.Success)
          {
            string str = string.Format(" (copy {0})", (object) (int.Parse(match.Groups[1].Value) + 1));
            obj0 = obj0.Substring(0, match.Index) + str;
          }
          else
          {
            string str = string.Format(" (copy {0})", (object) num1);
            obj0 += str;
          }
        }
        else
        {
          Match match = q14.\u0033O6.N2W.Match(obj0.Substring(0, num2));
          if (match.Success)
          {
            string str = string.Format(" (copy {0})", (object) (int.Parse(match.Groups[1].Value) + 1));
            obj0 = obj0.Substring(0, match.Index) + str + obj0.Substring(num2);
          }
          else
          {
            string str = string.Format(" (copy {0})", (object) num1);
            obj0 = obj0.Substring(0, num2) + str + obj0.Substring(num2);
          }
        }
        return obj0;
      }
    }

    private delegate \u0001 Pp3<\u0001>();

    private sealed class Ic3
    {
      public int \u0039I9;
      public long \u003766;
      public byte[] Ii4;
      public int \u0033z6;

      internal long \u00389C()
      {
        if (this.\u0039I9 < 8)
          throw new e1T(string.Format("  Missing data for ZIP64 extra field, position 0x{0:X16}", (object) this.\u003766));
        long int64 = BitConverter.ToInt64(this.Ii4, this.\u0033z6);
        this.\u0033z6 += 8;
        this.\u0039I9 -= 8;
        return int64;
      }
    }

    private sealed class i9L
    {
      public byte[] \u003329;
      public int \u0037ST;
      public int \u0034K8;

      internal DateTime f2F()
      {
        int int32 = BitConverter.ToInt32(this.\u003329, this.\u0037ST);
        this.\u0037ST += 4;
        this.\u0034K8 -= 4;
        return q14.inQ.AddSeconds((double) int32);
      }
    }
  }
}
