// Decompiled with JetBrains decompiler
// Type: Ratchet.Math.vec2
// Assembly: FirstMatchCodeGr, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F6EA4DA3-79DC-4E24-BB6F-C97A77DCC118
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-4ece28a4229d41e763203acb8c66af294e5461b01de2c4e25daddab193dfe554.exe

namespace Ratchet.Math
{
  public struct vec2
  {
    public float x;
    public float y;

    public vec2(float x, float y)
    {
      this.x = x;
      this.y = y;
    }

    public static float Dot(vec2 a, vec2 b) => (float) ((double) a.x * (double) b.x + (double) a.y * (double) b.y);

    public float Norm() => (float) System.Math.Sqrt((double) this.x * (double) this.x + (double) this.y * (double) this.y);

    public vec2 Normalize()
    {
      float num = this.Norm();
      return new vec2(this.x / num, this.y / num);
    }

    public static vec2 operator +(vec2 a, vec2 b) => new vec2(a.x + b.x, a.y + b.y);

    public static vec2 operator -(vec2 a, vec2 b) => new vec2(a.x - b.x, a.y - b.y);

    public static vec2 operator *(vec2 a, vec2 b) => new vec2(a.x * b.x, a.y * b.y);

    public static vec2 operator /(vec2 a, vec2 b) => new vec2(a.x / b.x, a.y / b.y);

    public static vec2 operator *(vec2 a, float b) => new vec2(a.x * b, a.y * b);

    public static vec2 operator /(vec2 a, float b) => new vec2(a.x / b, a.y / b);

    public static vec2 operator *(float a, vec2 b) => new vec2(a * b.x, a * b.y);

    public static vec2 operator /(float a, vec2 b) => new vec2(a / b.x, a / b.y);

    public static vec2 operator -(vec2 a) => new vec2(-a.x, -a.y);
  }
}
