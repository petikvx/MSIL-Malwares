// Decompiled with JetBrains decompiler
// Type: .
// Assembly: yzalr14k, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73F4068F-A403-47FB-B5CB-C14B2659D9D3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jvnh-1a7b6e0d12ac2336ab057d2b6e6b7694d384e5bc974736cb0a175e5c77f3e4e4.exe

using \u0002;
using \u0006;
using \u0008;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Ⴐ;

namespace \u0002
{
  [HideModuleName]
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  [StandardModule]
  internal sealed class \u0001
  {
    private static readonly \u0001.ႰႷ<\u0001> Ⴐ;
    private static readonly \u0001.ႰႷ<\u0001> Ⴍ;
    private static readonly \u0001.ႰႷ<User> Ⴐ;
    private static readonly \u0001.ႰႷ<\u0001.ႰႥ> Ⴈ;

    static \u0001()
    {
      Ⴅ.Ⴓ();
      \u0001.Ⴐ = new \u0001.ႰႷ<\u0001>();
      \u0001.Ⴍ = new \u0001.ႰႷ<\u0001>();
      \u0001.Ⴐ = new \u0001.ႰႷ<User>();
      \u0001.Ⴈ = new \u0001.ႰႷ<\u0001.ႰႥ>();
    }

    [HelpKeyword("My.Computer")]
    internal static \u0001 Ⴍ
    {
      get
      {
label_3:
        int num1 = 8;
        int num2;
        \u0001 obj;
        while (true)
        {
          switch (num1)
          {
            case 1:
              int num3;
              switch (num2)
              {
                case 0:
                  num3 = 6;
                  break;
                case 1:
                  num3 = 8;
                  break;
                case 2:
                  num3 = 8;
                  break;
                case 3:
                  num3 = 8;
                  break;
                case 4:
                  num3 = 5;
                  break;
                default:
                  num3 = 5;
                  break;
              }
              num1 = num3;
              continue;
            case 2:
            case 7:
            case 8:
              obj = \u0001.Ⴐ.Ⴐ();
              num1 = 6;
              continue;
            case 3:
            case 4:
              goto label_3;
            case 5:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.Ⴓ);
              num2 = 2;
              num1 = 1;
              continue;
            case 6:
              goto label_14;
            default:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.Ⴓ);
              num1 = 3;
              continue;
          }
        }
label_14:
        return obj;
      }
    }

    [HelpKeyword("My.Application")]
    internal static \u0001 Ⴗ
    {
      get
      {
label_3:
        int num1 = 8;
        int num2;
        \u0001 obj;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
              goto label_14;
            case 1:
              int num3;
              switch (num2)
              {
                case 0:
                  num3 = 4;
                  break;
                case 1:
                  num3 = 0;
                  break;
                case 2:
                  num3 = 4;
                  break;
                case 3:
                  num3 = 8;
                  break;
                case 4:
                  num3 = 0;
                  break;
                default:
                  num3 = 4;
                  break;
              }
              num1 = num3;
              continue;
            case 2:
            case 8:
              obj = \u0001.Ⴍ.Ⴐ();
              num1 = 0;
              continue;
            case 4:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.Ⴓ);
              num2 = 3;
              num1 = 1;
              continue;
            case 7:
              goto label_3;
            default:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.Ⴓ);
              num1 = 7;
              continue;
          }
        }
label_14:
        return obj;
      }
    }

    [HelpKeyword("My.User")]
    internal static User Ⴈ
    {
      get
      {
label_3:
        int num1 = 4;
        int num2;
        User user;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
            case 6:
              goto label_3;
            case 4:
              user = \u0001.Ⴐ.Ⴐ();
              num1 = 7;
              continue;
            case 5:
              int num3;
              switch (num2)
              {
                case 0:
                  num3 = 7;
                  break;
                case 1:
                  num3 = 7;
                  break;
                case 2:
                  num3 = 4;
                  break;
                case 3:
                  num3 = 8;
                  break;
                case 4:
                  num3 = 8;
                  break;
                default:
                  num3 = 8;
                  break;
              }
              num1 = num3;
              continue;
            case 7:
              goto label_14;
            case 8:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.Ⴓ);
              num2 = 2;
              num1 = 5;
              continue;
            default:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.Ⴓ);
              num1 = 0;
              continue;
          }
        }
label_14:
        return user;
      }
    }

    [HelpKeyword("My.WebServices")]
    internal static \u0001.ႰႥ Ⴃ
    {
      get
      {
label_3:
        int num1 = 5;
        int num2;
        \u0001.ႰႥ ⴐⴅ;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 5:
              ⴐⴅ = \u0001.Ⴈ.Ⴐ();
              num1 = 4;
              continue;
            case 2:
            case 8:
              goto label_3;
            case 3:
              num1 = 6;
              continue;
            case 4:
              goto label_15;
            case 6:
              int num3;
              switch (num2)
              {
                case 0:
                  num3 = 4;
                  break;
                case 1:
                  num3 = 7;
                  break;
                case 2:
                  num3 = 7;
                  break;
                case 3:
                  num3 = 5;
                  break;
                case 4:
                  num3 = 5;
                  break;
                default:
                  num3 = 7;
                  break;
              }
              num1 = num3;
              continue;
            case 7:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.Ⴓ);
              num2 = 4;
              goto case 3;
            default:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.Ⴓ);
              num1 = 8;
              continue;
          }
        }
label_15:
        return ⴐⴅ;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    internal sealed class ႰႥ
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      bool object.Ⴀ(object Ⴐ)
      {
label_3:
        int num1 = 4;
        int num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.ႰႥ.Ⴀ);
              num2 = 4;
              num1 = 7;
              continue;
            case 3:
              goto label_3;
            case 4:
              goto label_13;
            case 6:
            case 7:
              int num3;
              switch (num2)
              {
                case 0:
                  num3 = 4;
                  break;
                case 1:
                  num3 = 0;
                  break;
                case 2:
                  num3 = 4;
                  break;
                case 3:
                  num3 = 0;
                  break;
                case 4:
                  num3 = 4;
                  break;
                default:
                  num3 = 0;
                  break;
              }
              num1 = num3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.ႰႥ.Ⴀ);
              num1 = 3;
              continue;
          }
        }
label_13:
        // ISSUE: explicit non-virtual call
        return __nonvirtual (((object) this).Equals(Ⴅ.ႨႭ(Ⴐ, 135, 185)));
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      int object.Ⴈ()
      {
label_3:
        int num1 = 4;
        int num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 7:
              num2 = 2;
              num1 = 1;
              continue;
            case 1:
              int num3;
              switch (num2)
              {
                case 0:
                  num3 = 4;
                  break;
                case 1:
                  num3 = 6;
                  break;
                case 2:
                  num3 = 4;
                  break;
                case 3:
                  num3 = 4;
                  break;
                case 4:
                  num3 = 4;
                  break;
                default:
                  num3 = 6;
                  break;
              }
              num1 = num3;
              continue;
            case 4:
              goto label_14;
            case 5:
              goto label_3;
            case 6:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.ႰႥ.Ⴈ);
              goto case 0;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.ႰႥ.Ⴈ);
              num1 = 5;
              continue;
          }
        }
label_14:
        // ISSUE: explicit non-virtual call
        return __nonvirtual (((object) this).GetHashCode());
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal Type Ⴈ()
      {
label_3:
        int num1 = 7;
        int num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              goto label_15;
            case 1:
              num2 = 1;
              num1 = 6;
              continue;
            case 2:
              goto label_3;
            case 3:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.ႰႥ.Ⴈ);
              goto case 1;
            case 4:
            case 6:
              int num3;
              switch (num2)
              {
                case 0:
                  num3 = 3;
                  break;
                case 1:
                  num3 = 7;
                  break;
                case 2:
                  num3 = 7;
                  break;
                case 3:
                  num3 = 3;
                  break;
                case 4:
                  num3 = 3;
                  break;
                default:
                  num3 = 3;
                  break;
              }
              num1 = num3;
              continue;
            case 7:
              goto label_14;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.ႰႥ.Ⴈ);
              num1 = 2;
              continue;
          }
        }
label_14:
        Type type = typeof (\u0001.ႰႥ);
label_15:
        return type;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      string object.Ⴈ()
      {
label_3:
        int num1 = 2;
        int num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 7:
              num1 = 6;
              continue;
            case 1:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.ႰႥ.Ⴈ);
              num2 = 3;
              goto case 0;
            case 2:
              goto label_14;
            case 3:
              goto label_15;
            case 5:
              goto label_3;
            case 6:
              int num3;
              switch (num2)
              {
                case 0:
                  num3 = 2;
                  break;
                case 1:
                  num3 = 2;
                  break;
                case 2:
                  num3 = 1;
                  break;
                case 3:
                  num3 = 2;
                  break;
                case 4:
                  num3 = 1;
                  break;
                default:
                  num3 = 1;
                  break;
              }
              num1 = num3;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.ႰႥ.Ⴈ);
              num1 = 5;
              continue;
          }
        }
label_14:
        // ISSUE: explicit non-virtual call
        string str = __nonvirtual (((object) this).ToString());
label_15:
        return str;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public ႰႥ()
      {
      }

      static ႰႥ() => Ⴅ.Ⴓ();
    }

    [ComVisible(false)]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class ႰႷ<ႰႭ> where ႰႭ : new()
    {
      [ThreadStatic]
      private static ႰႭ Ⴅ;

      [SpecialName]
      internal ႰႭ Ⴐ()
      {
label_3:
        int num1 = 8;
        while (true)
        {
          int num2;
          int num3;
          switch (num1)
          {
            case 0:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\u0001.ႰႷ<>.Ⴐ);
              num2 = 5;
              num1 = 3;
              continue;
            case 1:
              goto label_21;
            case 2:
              num3 = 6;
              break;
            case 3:
              int num4;
              switch (num2)
              {
                case 0:
                  num4 = 0;
                  break;
                case 1:
                  num4 = 8;
                  break;
                case 2:
                  num4 = 11;
                  break;
                case 3:
                  num4 = 1;
                  break;
                case 4:
                  num4 = 8;
                  break;
                case 5:
                  num4 = 8;
                  break;
                case 6:
                  num4 = 11;
                  break;
                default:
                  num4 = 0;
                  break;
              }
              num1 = num4;
              continue;
            case 5:
              num1 = 3;
              continue;
            case 6:
              goto label_3;
            case 7:
            case 10:
              num3 = 3;
              break;
            case 8:
              num1 = (object) \u0001.ႰႷ<ႰႭ>.Ⴅ != null ? 7 : 2;
              continue;
            case 11:
              \u0001.ႰႷ<ႰႭ>.Ⴅ = new ႰႭ();
              num2 = 3;
              goto case 5;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\u0001.ႰႷ<>.Ⴐ);
              num1 = 6;
              continue;
          }
          num2 = num3;
          num1 = 3;
        }
label_21:
        return \u0001.ႰႷ<ႰႭ>.Ⴅ;
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public ႰႷ()
      {
      }

      static ႰႷ() => Ⴅ.Ⴓ();
    }
  }
}
