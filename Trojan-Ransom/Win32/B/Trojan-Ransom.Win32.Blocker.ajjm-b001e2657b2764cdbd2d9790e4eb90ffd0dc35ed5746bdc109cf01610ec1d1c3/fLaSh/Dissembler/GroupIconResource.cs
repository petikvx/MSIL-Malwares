// Decompiled with JetBrains decompiler
// Type: fLaSh.Dissembler.GroupIconResource
// Assembly: Pass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B2D05123-D1EE-4E11-B4EC-79932D637F25
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.ajjm-b001e2657b2764cdbd2d9790e4eb90ffd0dc35ed5746bdc109cf01610ec1d1c3.exe

using In2aXkPRwyNprNdGJT;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace fLaSh.Dissembler
{
  public class GroupIconResource : Resource
  {
    private Kernel32.GRPICONDIR paP4uvR9Or;
    private List<IconResource> QNm4qQFeqZ;

    public GroupIconResource.GroupType GroupIconResourceType
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => (GroupIconResource.GroupType) this.paP4uvR9Or.wType;
      [MethodImpl(MethodImplOptions.NoInlining)] set => this.paP4uvR9Or.wType = (ushort) (byte) value;
    }

    public List<IconResource> Icons
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.QNm4qQFeqZ;
      [MethodImpl(MethodImplOptions.NoInlining)] set => this.QNm4qQFeqZ = value;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public GroupIconResource(
      IntPtr hModule,
      IntPtr hResource,
      IntPtr type,
      IntPtr name,
      ushort wIDLanguage,
      int size)
    {
      rbdjPoeaA1BgLlupgC.XYjXOJ9ztPdU4();
      this.paP4uvR9Or = new Kernel32.GRPICONDIR();
      this.QNm4qQFeqZ = new List<IconResource>();
      // ISSUE: explicit constructor call
      base.\u002Ector(hModule, hResource, type, name, wIDLanguage, size);
      IntPtr lpRes = Kernel32.LockResource(hResource);
      if (lpRes == IntPtr.Zero)
        throw new Win32Exception(Marshal.GetLastWin32Error());
      this.Read(hModule, lpRes);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public GroupIconResource()
    {
      rbdjPoeaA1BgLlupgC.XYjXOJ9ztPdU4();
      this.paP4uvR9Or = new Kernel32.GRPICONDIR();
      this.QNm4qQFeqZ = new List<IconResource>();
      // ISSUE: explicit constructor call
      base.\u002Ector(IntPtr.Zero, IntPtr.Zero, new IntPtr(14L), new IntPtr(1), (ushort) 1033, Marshal.SizeOf(typeof (Kernel32.GRPICONDIR)));
      this.GroupIconResourceType = GroupIconResource.GroupType.Icon;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void LoadFrom(string filename) => this.LoadFrom(filename, new IntPtr(1), new IntPtr(14L));

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void SaveTo(string filename)
    {
      this.SaveTo(filename, new IntPtr(int.Parse(this.Name)), new IntPtr(14L), this.Language);
      foreach (IconResource iconResource in this.QNm4qQFeqZ)
        iconResource.SaveIconTo(filename);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override IntPtr Read(IntPtr hModule, IntPtr lpRes)
    {
      this.QNm4qQFeqZ.Clear();
      this.paP4uvR9Or = (Kernel32.GRPICONDIR) Marshal.PtrToStructure(lpRes, typeof (Kernel32.GRPICONDIR));
      IntPtr lpRes1 = new IntPtr(lpRes.ToInt32() + Marshal.SizeOf((object) this.paP4uvR9Or));
      for (int index = 0; index < (int) this.paP4uvR9Or.wImageCount; ++index)
      {
        IconResource iconResource = new IconResource();
        lpRes1 = iconResource.Read(hModule, lpRes1);
        this.QNm4qQFeqZ.Add(iconResource);
      }
      return lpRes1;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override void Write(BinaryWriter w)
    {
      w.Write(this.paP4uvR9Or.wReserved);
      w.Write(this.paP4uvR9Or.wType);
      w.Write((ushort) this.QNm4qQFeqZ.Count);
      ResourceUtil.PadToWORD(w);
      foreach (Resource resource in this.QNm4qQFeqZ)
        resource.Write(w);
    }

    public enum GroupType
    {
      Icon = 1,
      Cursor = 2,
    }
  }
}
