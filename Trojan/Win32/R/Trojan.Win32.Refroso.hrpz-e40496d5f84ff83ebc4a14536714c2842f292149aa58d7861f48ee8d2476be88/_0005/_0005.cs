// Decompiled with JetBrains decompiler
// Type: .
// Assembly: C, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F25E1EAB-EB04-4ECD-A70E-0143E63DFF03
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Refroso.hrpz-e40496d5f84ff83ebc4a14536714c2842f292149aa58d7861f48ee8d2476be88.exe

using \u0003;
using \u0004;
using \u0005;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Principal;
using System.Text;
using System.Xml;

namespace \u0005
{
  internal sealed class \u0005 : \u0006
  {
    private \u0001 \u0001;
    private byte[] \u0001;

    public \u0005([In] \u0001 obj0)
    {
      try
      {
        this.\u0001 = obj0;
      }
      catch (Exception ex)
      {
        \u0001 obj = obj0;
        \u0008.\u0005.\u0002(ex, (object) this, (object) obj);
        throw;
      }
    }

    private void \u0002()
    {
      XmlWriter xmlWriter1;
      DateTime dateTime1;
      Guid guid1;
      WindowsIdentity windowsIdentity;
      SecurityIdentifier securityIdentifier;
      MD5CryptoServiceProvider cryptoServiceProvider;
      Guid guid2;
      string str1;
      \u0007 obj1;
      \u0007 obj2;
      int index;
      ulong[] numArray1;
      \u0007 obj3;
      Dictionary<string, ulong> dictionary1;
      KeyValuePair<string, ulong> keyValuePair1;
      ulong num;
      \u0007 obj4;
      MemoryStream w;
      try
      {
        if (this.\u0001 != null || this.\u0001.\u0002())
        {
          if (true)
            return;
        }
        else
        {
          ulong[] numArray2 = this.\u0001.\u0002();
          if (true)
            numArray1 = numArray2;
        }
        do
        {
          Dictionary<string, ulong> dictionary2 = this.\u0001.\u0002();
          if (true)
            goto label_46;
label_2:
          continue;
label_46:
          dictionary1 = dictionary2;
          goto label_2;
        }
        while (false);
        MemoryStream memoryStream = new MemoryStream();
        if (true)
          w = memoryStream;
        XmlTextWriter xmlTextWriter = new XmlTextWriter((Stream) w, (Encoding) new UTF8Encoding(false));
        if (true)
          goto label_48;
label_3:
        do
        {
          \u0014\u0003.\u007E\u0010((object) xmlWriter1);
          \u0007 obj5 = new \u0007(xmlWriter1, "UsageReport");
          if (true)
            goto label_49;
label_4:
          try
          {
            do
            {
              \u0015\u0003.\u007E\u0014((object) xmlWriter1, "AssemblyID", \u001E\u0003.\u007E\u001E\u0002((object) "{F25E1EAB-EB04-4ECD-A70E-0143E63DFF03}"));
              XmlWriter xmlWriter2 = xmlWriter1;
              DateTime dateTime2 = \u0002\u0004.\u009B\u0002();
              if (true)
                goto label_37;
label_5:
              string str2 = dateTime1.ToString("s");
              xmlWriter2.WriteAttributeString("DateTime", str2);
              \u0015\u0003 obj6 = \u0015\u0003.\u007E\u0014;
              XmlWriter xmlWriter3 = xmlWriter1;
              guid1 = \u001F\u0004.\u008B\u0003();
              string str3 = guid1.ToString("B");
              obj6((object) xmlWriter3, "ReportID", str3);
              windowsIdentity = \u001D\u0005.\u0091\u0006();
              securityIdentifier = \u001E\u0005.\u007E\u0092\u0006((object) windowsIdentity);
              cryptoServiceProvider = new MD5CryptoServiceProvider();
              try
              {
                guid2 = new Guid(\u0095\u0005.\u007E\u0099\u0007((object) cryptoServiceProvider, \u0014\u0005.\u007E\u0081\u0006((object) \u0013\u0005.\u0083\u0006(), \u001E\u0003.\u007E\u009A((object) securityIdentifier))));
                str1 = guid2.ToString();
              }
              finally
              {
                if (cryptoServiceProvider != null)
                  \u0014\u0003.\u007E\u0008\u0002((object) cryptoServiceProvider);
              }
              \u0015\u0003.\u007E\u0014((object) xmlWriter1, "UserID", str1);
              obj1 = new \u0007(xmlWriter1, "AssemblyIDs");
              try
              {
                \u0015\u0003.\u007E\u0014((object) xmlWriter1, "Count", "-1");
              }
              finally
              {
                if (obj1 != null)
                  \u0014\u0003.\u007E\u0008\u0002((object) obj1);
              }
              obj2 = new \u0007(xmlWriter1, "Features");
              try
              {
                for (index = 0; index < numArray1.Length; ++index)
                {
                  if (numArray1[index] > 0UL)
                  {
                    \u0010\u0003.\u007E\u0012((object) xmlWriter1, "Feature");
                    \u0015\u0003.\u007E\u0014((object) xmlWriter1, "Id", index.ToString());
                    \u0015\u0003.\u007E\u0014((object) xmlWriter1, "Count", numArray1[index].ToString());
                    \u0014\u0003.\u007E\u0013((object) xmlWriter1);
                  }
                }
              }
              finally
              {
                if (obj2 != null)
                  \u0014\u0003.\u007E\u0008\u0002((object) obj2);
              }
              continue;
label_37:
              dateTime1 = dateTime2;
              goto label_5;
            }
            while (false);
            obj3 = new \u0007(xmlWriter1, "DynamicFeatures");
            try
            {
              do
              {
                if (true)
                {
                  foreach (KeyValuePair<string, ulong> keyValuePair2 in dictionary1)
                  {
                    keyValuePair1 = keyValuePair2;
                    if (keyValuePair1.Value > 0UL)
                    {
                      \u0010\u0003.\u007E\u0012((object) xmlWriter1, "Feature");
                      \u0015\u0003.\u007E\u0014((object) xmlWriter1, "Name", keyValuePair1.Key);
                      \u0015\u0003 obj7 = \u0015\u0003.\u007E\u0014;
                      XmlWriter xmlWriter4 = xmlWriter1;
                      num = keyValuePair1.Value;
                      string str4 = num.ToString();
                      obj7((object) xmlWriter4, "Count", str4);
                      \u0014\u0003.\u007E\u0013((object) xmlWriter1);
                    }
                  }
                }
              }
              while (false);
            }
            finally
            {
              if (obj3 != null)
                \u0014\u0003.\u007E\u0008\u0002((object) obj3);
            }
          }
          finally
          {
            while (obj4 != null)
            {
              if (true)
              {
                \u0014\u0003.\u007E\u0008\u0002((object) obj4);
                break;
              }
            }
          }
          continue;
label_49:
          obj4 = obj5;
          goto label_4;
        }
        while (false);
        \u0014\u0003.\u007E\u0011((object) xmlWriter1);
        \u0014\u0003.\u007E\u0015((object) xmlWriter1);
        \u0014\u0003.\u007E\u009B\u0006((object) w);
        this.\u0001 = \u0003\u0005.\u007E\u0015\u0007((object) w);
        this.\u0001 = (\u0001) null;
        return;
label_48:
        xmlWriter1 = (XmlWriter) xmlTextWriter;
        goto label_3;
      }
      catch (Exception ex)
      {
        Dictionary<string, ulong>.Enumerator enumerator;
        object[] objArray = new object[20]
        {
          (object) numArray1,
          (object) dictionary1,
          (object) w,
          (object) xmlWriter1,
          (object) windowsIdentity,
          (object) securityIdentifier,
          (object) str1,
          (object) cryptoServiceProvider,
          (object) index,
          (object) keyValuePair1,
          (object) obj4,
          (object) dateTime1,
          (object) guid1,
          (object) guid2,
          (object) obj1,
          (object) obj2,
          (object) obj3,
          (object) enumerator,
          (object) num,
          (object) this
        };
        \u0008.\u0005.\u0002(ex, objArray);
        throw;
      }
    }

    public void \u0003()
    {
      try
      {
        this.\u0002();
        this.\u0002(this.\u0001, \u0006.\u0001.\u0001);
      }
      catch (Exception ex)
      {
        \u0008.\u0005.\u0002(ex, (object) this);
        throw;
      }
    }
  }
}
