// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: TypeLimitingDeserializationBind, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1D6D78DD-B812-498A-928B-6D9E4655E6A7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0f32fcee5fe0e98a2f219eac2c9b9c19cbb2f48660a676a0992bf38c59cdf153.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1095834880;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1744705953)) % 9U)
          {
            case 0:
              num1 = (int) num2 * 1797460522 ^ 55571641;
              continue;
            case 1:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1790239557 ^ 1284703562;
              continue;
            case 2:
              int num4 = !flag ? -407504110 : (num4 = -1370964480);
              num1 = num4 ^ (int) num2 * 1997138449;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -875667902 ^ 44638986;
              continue;
            case 4:
              num1 = (int) num2 * -1465742209 ^ 588383289;
              continue;
            case 6:
              goto label_1;
            case 7:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 8:
              jsonNode = this.m_List[aIndex];
              num1 = -334399243;
              continue;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = -731376299;
        }
label_13:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1116110640;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1448760589)) % 10U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1754032253 ^ 2001342473;
              continue;
            case 2:
              this.m_List[aIndex] = value;
              num1 = 1967006850;
              continue;
            case 3:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -1217530555 ^ -135168643;
              continue;
            case 4:
              int num4 = flag ? 1545678364 : (num4 = 924435007);
              num1 = num4 ^ (int) num2 * 1060432787;
              continue;
            case 5:
              goto label_3;
            case 6:
              num1 = (int) num2 * -843123562 ^ -18254603;
              continue;
            case 7:
              this.m_List.Add(value);
              num1 = (int) num2 * 1012773635 ^ -1640624786;
              continue;
            case 8:
              num1 = (int) num2 * 812906911 ^ 1743554998;
              continue;
            case 9:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            default:
              goto label_15;
          }
          flag = num3 != 0;
          num1 = 3441491;
        }
label_3:
        return;
label_15:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this);
      set
      {
        this.m_List.Add(value);
label_1:
        int num1 = -1223358806;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1965674038)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 1781650489 ^ 308767955;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -2012672977;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -807844211)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = this.m_List.Count;
              num1 = (int) num2 * 643311561 ^ 1676815517;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1035472060;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 37171170)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.m_List.Add(aItem);
            num1 = (int) num2 * -460703129 ^ -2066225074;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -695349984;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1926332516)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * 2075252320 ^ -817709550;
            continue;
          case 2:
            JSONNode jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            jsonNode1 = jsonNode2;
            num1 = -883003051;
            continue;
          case 3:
            num1 = (int) num2 * -400235579 ^ -248597960;
            continue;
          case 4:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1161358742 ^ 1155808917;
            continue;
          case 6:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -108540836 : (num4 = -570115377);
      }
label_11:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = 164508673;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 790446073)) % 5U)
        {
          case 1:
            num1 = (int) num2 * -1015590290 ^ -36027080;
            continue;
          case 2:
            goto label_1;
          case 3:
            this.m_List.Remove(aNode);
            num1 = (int) num2 * -242450824 ^ 751911937;
            continue;
          case 4:
            jsonNode = aNode;
            num1 = (int) num2 * 526192831 ^ -1592943958;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 871618754;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2084524940)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              getChildsD13.\u003C\u003E4__this = this;
              num1 = (int) num2 * -648163904 ^ 617825987;
              continue;
            case 3:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * -1159430246 ^ 1264137123;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "[ ";
label_1:
      int num1 = -658642875;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1814596064)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1220022076 ^ 1593402424;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_12:
        int num3 = enumerator.MoveNext() ? -732920487 : (num3 = -920121310);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1814596064)) % 8U)
          {
            case 0:
              int num5 = !flag ? -1766916571 : (num5 = -1831998645);
              num3 = num5 ^ (int) num4 * -436389655;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = -195004385;
              continue;
            case 3:
              str1 = JSONArray.\u206C‫⁬‫⁯‫​⁫⁬‎⁯‍⁫‎⁮⁪⁭‪‮‏‫‭‬⁭‬​‎‫‫‎⁫‌⁮‮⁫‏⁫‫‌‮‮(str1, ", ");
              num3 = (int) num4 * -833175147 ^ -1578741934;
              continue;
            case 4:
              goto label_12;
            case 5:
              str1 = JSONArray.\u206C‫⁬‫⁯‫​⁫⁬‎⁯‍⁫‎⁮⁪⁭‪‮‏‫‭‬⁭‬​‎‫‫‎⁫‌⁮‮⁫‏⁫‫‌‮‮(str1, JSONArray.\u202A​⁭‌‎​⁫⁫‎⁮⁬⁮‪‌⁬‌⁬‏⁫⁮​‭⁬⁭⁫​⁮‎‌⁬⁬​‌‮⁭⁭‍‎‫‫‮((object) current));
              num3 = -217554100;
              continue;
            case 6:
              num3 = -732920487;
              continue;
            case 7:
              flag = JSONArray.\u206A⁪⁭⁭‎​‌‏⁪⁬‍‮‭⁭⁯‭‬​‏⁪⁮​⁬⁪​⁬⁭‎⁯‍‌⁬⁬‮‫‍‬‍⁪‌‮(str1) > 2;
              num3 = (int) num4 * 414106910 ^ 1825423482;
              continue;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = -496698715;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -1814596064)) % 3U)
          {
            case 1:
              num6 = (int) num7 * 714825600 ^ -763374664;
              continue;
            case 2:
              goto label_15;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONArray.\u206C‫⁬‫⁯‫​⁫⁬‎⁯‍⁫‎⁮⁪⁭‪‮‏‫‭‬⁭‬​‎‫‫‎⁫‌⁮‮⁫‏⁫‫‌‮‮(str1, " ]");
label_20:
      int num8 = -578782736;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ -1814596064)) % 3U)
        {
          case 0:
            goto label_20;
          case 1:
            str3 = str2;
            num8 = (int) num9 * -1326375410 ^ -1879159676;
            continue;
          default:
            goto label_23;
        }
      }
label_23:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -66095202;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -351679681)) % 4U)
        {
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * 1287984186 ^ 1438944411;
            continue;
          case 2:
            num1 = (int) num2 * 1120802936 ^ 1663430723;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? -1942966843 : (num3 = -1605249762);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -351679681)) % 9U)
          {
            case 0:
              str1 = JSONArray.\u206C‫⁬‫⁯‫​⁫⁬‎⁯‍⁫‎⁮⁪⁭‪‮‏‫‭‬⁭‬​‎‫‫‎⁫‌⁮‮⁫‏⁫‫‌‮‮(str1, ", ");
              num3 = (int) num4 * -1944073177 ^ -1500832055;
              continue;
            case 1:
              int num5 = flag ? -1861738932 : (num5 = -1236033988);
              num3 = num5 ^ (int) num4 * -2124625075;
              continue;
            case 2:
              num3 = -1605249762;
              continue;
            case 3:
              num3 = (int) num4 * 504234533 ^ 837081164;
              continue;
            case 4:
              goto label_14;
            case 5:
              flag = JSONArray.\u206A⁪⁭⁭‎​‌‏⁪⁬‍‮‭⁭⁯‭‬​‏⁪⁮​⁬⁪​⁬⁭‎⁯‍‌⁬⁬‮‫‍‬‍⁪‌‮(str1) > 3;
              num3 = (int) num4 * 1186462138 ^ -220818427;
              continue;
            case 6:
              str1 = JSONArray.\u202B⁬⁯‏⁭‎‎‪⁫‫‎⁭‪‪⁭⁮‍‫‭⁯⁯‎‮‫‭⁭‫‮⁮⁬‍⁯⁯‌‬⁫⁪⁫‭⁫‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u206C‫⁬‫⁯‫​⁫⁬‎⁯‍⁫‎⁮⁪⁭‪‮‏‫‭‬⁭‬​‎‫‫‎⁫‌⁮‮⁫‏⁫‫‌‮‮(str1, current.ToString(JSONArray.\u206C‫⁬‫⁯‫​⁫⁬‎⁯‍⁫‎⁮⁪⁭‪‮‏‫‭‬⁭‬​‎‫‫‎⁫‌⁮‮⁫‏⁫‫‌‮‮(aPrefix, "   ")));
              num3 = -751671091;
              continue;
            case 7:
              current = enumerator.Current;
              num3 = -1691916366;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      string str2 = JSONArray.\u202B⁬⁯‏⁭‎‎‪⁫‫‎⁭‪‪⁭⁮‍‫‭⁯⁯‎‮‫‭⁭‫‮⁮⁬‍⁯⁯‌‬⁫⁪⁫‭⁫‮(str1, "\n", aPrefix, "]");
label_18:
      int num6 = -2019622141;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -351679681)) % 3U)
        {
          case 0:
            goto label_18;
          case 2:
            num6 = (int) num7 * -1252858753 ^ 1463768050;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 659927621;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 899278234)) % 12U)
        {
          case 0:
            int num3 = flag ? 1597922651 : (num3 = 1998428604);
            num1 = num3 ^ (int) num2 * -1799767987;
            continue;
          case 1:
            JSONArray.\u206B‌⁭‪‎‏​‏⁭‍‎‎‬‌⁮​⁮‌‍⁯⁬​⁭⁬‌‪‭⁭‫⁫‫⁬⁪​⁮⁭‫⁫⁮‬‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 1070648116 ^ 691961616;
            continue;
          case 2:
            num1 = (int) num2 * 576386249 ^ 1586533261;
            continue;
          case 3:
            flag = index < this.m_List.Count;
            num1 = 2068446442;
            continue;
          case 4:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * -151393095 ^ -246844684;
            continue;
          case 5:
            num1 = 209226474;
            continue;
          case 6:
            goto label_3;
          case 7:
            JSONArray.\u202A⁪⁮⁯‫‏⁬⁬‮‭‍‮​⁭⁮⁫‬⁭‍⁯‎⁪⁯⁭⁯‌‍‮‭‍⁮‪​‎‏⁬⁬‌‍⁯‮(aWriter, (byte) 1);
            num1 = (int) num2 * 666940614 ^ 2143643481;
            continue;
          case 8:
            goto label_1;
          case 9:
            ++index;
            num1 = (int) num2 * 1463462203 ^ 1273639246;
            continue;
          case 10:
            index = 0;
            num1 = (int) num2 * 2022795128 ^ -1566284519;
            continue;
          case 11:
            num1 = (int) num2 * 206902581 ^ 1710416098;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u206A⁪⁭⁭‎​‌‏⁪⁬‍‮‭⁭⁯‭‬​‏⁪⁮​⁬⁪​⁬⁭‎⁯‍‌⁬⁬‮‫‍‬‍⁪‌‮([In] string obj0) => obj0.Length;

    static string \u206C‫⁬‫⁯‫​⁫⁬‎⁯‍⁫‎⁮⁪⁭‪‮‏‫‭‬⁭‬​‎‫‫‎⁫‌⁮‮⁫‏⁫‫‌‮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202A​⁭‌‎​⁫⁫‎⁮⁬⁮‪‌⁬‌⁬‏⁫⁮​‭⁬⁭⁫​⁮‎‌⁬⁬​‌‮⁭⁭‍‎‫‫‮([In] object obj0) => obj0.ToString();

    static string \u202B⁬⁯‏⁭‎‎‪⁫‫‎⁭‪‪⁭⁮‍‫‭⁯⁯‎‮‫‭⁭‫‮⁮⁬‍⁯⁯‌‬⁫⁪⁫‭⁫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202A⁪⁮⁯‫‏⁬⁬‮‭‍‮​⁭⁮⁫‬⁭‍⁯‎⁪⁯⁭⁯‌‍‮‭‍⁮‪​‎‏⁬⁬‌‍⁯‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206B‌⁭‪‎‏​‏⁭‍‎‎‬‌⁮​⁮‌‍⁯⁬​⁭⁬‌‪‭⁭‫⁫‫⁬⁪​⁮⁭‫⁫⁮‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
