// Decompiled with JetBrains decompiler
// Type: ClassLibrary1.TaskFactory.GetFields
// Assembly: ClassLibrary1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BD89B5FB-ADA3-4778-A6F3-2882B72918D5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-0dfff5bbf6b08a68798117e7f9126d0fd9715dc6cd2b40a4e027d54f911ad0aa.exe

using System;
using System.Collections;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;

namespace ClassLibrary1
{
  internal sealed class TaskFactory\u002EGetFields
  {
    private static readonly byte[] \u003116;
    private static readonly Hashtable \u003116;

    [SecuritySafeCritical]
    static TaskFactory\u002EGetFields()
    {
      ResourceHelper\u002EThrowKeyNotFoundException.gpVIIatD();
      \u003CModule\u003E.Func`3\u002ESetCustomAttributeNoLock num1 = new \u003CModule\u003E.Func`3\u002ESetCustomAttributeNoLock();
      TaskFactory\u002EGetFields.\u003116 = new Hashtable();
      num1.Statics\u002EEnsureCapacityNamespace("95");
      byte[] numArray = new byte[\u003CModule\u003E.Func`3\u002ESetCustomAttributeNoLock.op_Addition(num1, 85)];
      // ISSUE: field reference
      RuntimeHelpers.InitializeArray((Array) numArray, __fieldref (IBindCtx\u002ECreateIterator.\u003131));
      TaskFactory\u002EGetFields.\u003116 = numArray;
    }

    internal static string fQrVhYdc([In] string obj0)
    {
      // ISSUE: unable to decompile the method.
    }

    static string \u00325(string _param0, double _param1)
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
