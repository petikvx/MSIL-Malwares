// Decompiled with JetBrains decompiler
// Type: i1J.j4H
// Assembly: n5H, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0E51B92D-37D5-4B5F-AC82-C1D8D3567DE2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.04-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-966f5fda32ac9ad436cdeb47d024fb831705d8e14fa83ee74a48483260871ec2.exe

using j3WH;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Pp27;
using Rx8m;
using System;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data.SqlClient;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security;
using System.Threading.Tasks;
using System.Windows.Forms;
using t1G;

namespace i1J
{
  [StandardModule]
  [HideModuleName]
  internal sealed class j4H
  {
    [HelpKeyword("My.Settings")]
    internal static r7N Settings => r7N.Default;

    [SecuritySafeCritical]
    internal static DataGridViewCell m8L<Km0, Gj8>(
      [In] Km0 obj0,
      [In] Gj8 obj1,
      [In] char obj2,
      [In] int obj3)
      where Km0 : DataGridViewCellCollection
      where Gj8 : string
    {
label_3:
      int num1 = 0;
      int num2 = 3;
      IDisposable disposable;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            int num4 = (int) obj2;
            int num5 = num4 * num4;
            num3 = (int) obj2 + num5;
            goto case 7;
          case 2:
            disposable = (IDisposable) null;
            goto case 4;
          case 3:
            int num6;
            switch ((obj3 ^ (int) obj2) - 107 ^ num1)
            {
              case 0:
                num6 = 5;
                break;
              default:
                num6 = 2;
                break;
            }
            num2 = num6;
            continue;
          case 4:
            num2 = 8;
            continue;
          case 5:
            disposable = (IDisposable) obj0[(string) obj1];
            num2 = 8;
            continue;
          case 6:
            num2 = num3 % 2 != 0 ? 3 : 11;
            continue;
          case 7:
            num2 = 6;
            continue;
          case 8:
            ++num1;
            goto case 0;
          case 9:
            num2 = 3;
            continue;
          case 10:
            goto label_3;
          case 11:
            goto label_15;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (j4H.m8L);
            num2 = 10;
            continue;
        }
      }
label_15:
      return (DataGridViewCell) disposable;
    }

    [SecuritySafeCritical]
    internal static bool k1X<Rs3>([In] Rs3 obj0, [In] short obj1, [In] short obj2) where Rs3 : CheckBox
    {
label_3:
      int num1 = 0;
      int num2 = 7;
      bool flag;
      int num3;
      int num4;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
            flag = false;
            goto case 6;
          case 2:
            num2 = 7;
            continue;
          case 3:
            flag = obj0.Checked;
            num2 = 8;
            continue;
          case 4:
            goto label_3;
          case 6:
            num2 = 8;
            continue;
          case 7:
            int num5;
            switch (((int) obj2 ^ (int) obj1) - 89 ^ num1)
            {
              case 0:
                num5 = 3;
                break;
              default:
                num5 = 5;
                break;
            }
            num2 = num5;
            continue;
          case 8:
            ++num1;
            num3 = 820;
            num4 = 65;
            goto case 9;
          case 9:
            num2 = 205 < num3 / 4 - num4 ? 7 : 10;
            continue;
          case 10:
            goto label_13;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (j4H.k1X);
            num2 = 4;
            continue;
        }
      }
label_13:
      return flag;
    }

    [SecuritySafeCritical]
    internal static void Mn0<Ca1, y5J>([In] y5J obj0, [In] Ca1 obj1, [In] char obj2, [In] char obj3)
      where Ca1 : EventHandler
      where y5J : Control
    {
      int num1 = 1;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 7:
            obj0.Click -= (EventHandler) obj1;
            num1 = 3;
            continue;
          case 2:
            goto label_13;
          case 3:
            ++num2;
            int num4 = (int) obj3;
            int num5 = num4 * num4;
            num3 = (int) obj3 + num5;
            num1 = 8;
            continue;
          case 4:
          case 9:
            obj0.TextChanged -= (EventHandler) obj1;
            goto case 3;
          case 5:
            int num6;
            switch (((int) obj2 ^ (int) obj3) - 96 ^ num2)
            {
              case 0:
                num6 = 0;
                break;
              case 1:
                num6 = 9;
                break;
              default:
                num6 = 10;
                break;
            }
            num1 = num6;
            continue;
          case 8:
            num1 = num3 % 2 != 0 ? 5 : 2;
            continue;
          case 10:
            num1 = 3;
            continue;
          default:
            num2 = 0;
            num1 = 5;
            continue;
        }
      }
label_13:;
    }

    [SecuritySafeCritical]
    internal static string Nb8<Ni4>([In] Ni4 obj0, [In] short obj1, [In] short obj2) where Ni4 : TextBox
    {
label_3:
      int num1 = 0;
      int num2 = 10;
      IComparable<string> comparable;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_12;
          case 2:
          case 3:
            comparable = (IComparable<string>) null;
            num2 = 5;
            continue;
          case 4:
            goto label_3;
          case 5:
          case 6:
            ++num1;
            num3 = 1458;
            goto case 9;
          case 7:
            num2 = 10;
            continue;
          case 8:
            comparable = (IComparable<string>) obj0.Text;
            num2 = 5;
            continue;
          case 9:
            int num4 = 459;
            num2 = 729 < num3 / 2 - num4 ? 10 : 1;
            continue;
          case 10:
            int num5 = ((int) obj1 ^ (int) obj2) - 34;
            int num6 = num1;
            Lp07.a[494] = (char) (((int) Lp07.a[494] | (int) obj1) & 200);
            int num7;
            switch (num5 ^ num6)
            {
              case 0:
                num7 = 8;
                break;
              default:
                num7 = 2;
                break;
            }
            num2 = num7;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (j4H.Nb8);
            num2 = 4;
            continue;
        }
      }
label_12:
      return comparable as string;
    }

    [SecuritySafeCritical]
    internal static void q8C<Kj4, j8W>([In] Kj4 obj0, [In] j8W obj1, [In] char obj2, [In] int obj3)
      where Kj4 : SqlConnection
      where j8W : string
    {
      char[] a = Lp07.a;
      int num1 = 1;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 5:
            obj0.ConnectionString = (string) obj1;
            goto case 6;
          case 2:
          case 3:
            num1 = 7;
            continue;
          case 4:
            num1 = 6;
            continue;
          case 6:
            ++num2;
            num1 = 927 > 103 - 30 * 9 ? 9 : (int) a[423] - 24280;
            continue;
          case 7:
          case 8:
            int num3;
            switch (((int) obj2 ^ obj3) - 44 ^ num2)
            {
              case 0:
                num3 = 0;
                break;
              default:
                num3 = 4;
                break;
            }
            num1 = num3;
            continue;
          case 9:
            goto label_11;
          default:
            num2 = 0;
            num1 = 7;
            continue;
        }
      }
label_11:;
    }

    [SecuritySafeCritical]
    internal static object Fg2([In] ref DictionaryEntry obj0, [In] char obj1, [In] char obj2)
    {
label_3:
      int num1 = 0;
      int num2 = 3;
      object obj;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            int num4 = 780;
            int num5 = num3 / 4 - num4;
            Dt07.Q[336] = (byte) ((int) Dt07.Q[336] - (int) Dt07.Q[229] & 253);
            num2 = 1011 < num5 ? 3 : 6;
            continue;
          case 1:
            obj = obj0.Value;
            num2 = 7;
            continue;
          case 2:
            num2 = 3;
            continue;
          case 3:
            int num6;
            switch (((int) obj1 ^ (int) obj2) - 78 ^ num1)
            {
              case 0:
                num6 = 11;
                break;
              case 1:
                num6 = 1;
                break;
              default:
                num6 = 8;
                break;
            }
            num2 = num6;
            continue;
          case 4:
          case 11:
            obj = obj0.Key;
            num2 = 7;
            continue;
          case 5:
            num3 = 4044;
            goto case 0;
          case 6:
            goto label_15;
          case 7:
            ++num1;
            goto case 5;
          case 8:
            obj = (object) null;
            num2 = 7;
            continue;
          case 9:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (j4H.Fg2);
            num2 = 9;
            continue;
        }
      }
label_15:
      return obj;
    }

    [SecuritySafeCritical]
    internal static Assembly j0D<Lt4>([In] Lt4 obj0, [In] int obj1, [In] short obj2) where Lt4 : System.Type
    {
      byte[] q = Dt07.Q;
label_3:
      int num1 = 0;
      int num2 = 5;
      object obj;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
          case 6:
          case 10:
            obj = (object) obj0.Assembly;
            num2 = 9;
            continue;
          case 2:
            obj = (object) null;
            goto case 7;
          case 3:
            goto label_12;
          case 5:
            int num3 = ((int) obj2 ^ obj1) - 92;
            int num4 = num1;
            Lp07.a[330] = (char) (((int) Lp07.a[330] ^ (int) obj2) & 189);
            int num5;
            switch (num3 ^ num4)
            {
              case 0:
                num5 = (int) q[353] - 44;
                break;
              default:
                num5 = 2;
                break;
            }
            num2 = num5;
            continue;
          case 7:
            num2 = 9;
            continue;
          case 8:
            num2 = (int) q[230] - 80;
            continue;
          case 9:
            ++num1;
            num2 = 175 < 700 / 4 - 111 ? 5 : 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (j4H.j0D);
            num2 = 0;
            continue;
        }
      }
label_12:
      return (Assembly) obj;
    }

    [SecuritySafeCritical]
    internal static Task t3M([In] int obj0, [In] short obj1, [In] short obj2)
    {
label_3:
      int num1 = 0;
      int num2 = 3;
      object obj;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 8:
          case 10:
            goto label_11;
          case 1:
            num2 = 3;
            continue;
          case 2:
          case 9:
            obj = (object) Task.Delay(obj0);
            num2 = 4;
            continue;
          case 3:
            int num3;
            switch (((int) obj1 ^ (int) obj2) - 17 ^ num1)
            {
              case 0:
                num3 = 2;
                break;
              default:
                num3 = 7;
                break;
            }
            num2 = num3;
            continue;
          case 4:
            int num4 = num1;
            Lp07.a[494] = (char) (((int) Lp07.a[494] | (int) obj1) & 246);
            num1 = num4 + 1;
            num2 = 812 < 2436 / 3 - 276 ? 3 : 8;
            continue;
          case 6:
            goto label_3;
          case 7:
            obj = (object) null;
            num2 = 4;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (j4H.t3M);
            num2 = 6;
            continue;
        }
      }
label_11:
      return obj as Task;
    }

    [SecuritySafeCritical]
    internal static void i1E<Fp3, d3B>([In] d3B obj0, [In] Fp3 obj1, [In] char obj2, [In] int obj3)
      where Fp3 : SqlCommand
      where d3B : SqlDataAdapter
    {
      int num1 = 6;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 7:
            int num4;
            switch ((obj3 ^ (int) obj2) - 48 ^ num2)
            {
              case 0:
                num4 = 5;
                break;
              default:
                num4 = 9;
                break;
            }
            num1 = num4;
            continue;
          case 1:
            goto label_12;
          case 2:
            num1 = 7;
            continue;
          case 3:
            num1 = 3275 > 655 - num3 * 5 ? 1 : 2;
            continue;
          case 4:
          case 8:
            ++num2;
            num3 = 280;
            goto case 3;
          case 5:
            obj0.SelectCommand = (SqlCommand) obj1;
            goto case 4;
          case 9:
            num1 = 4;
            continue;
          default:
            num2 = 0;
            num1 = 7;
            continue;
        }
      }
label_12:;
    }

    internal sealed class f7W
    {
      internal f1T9 E;
      internal bool I;
      internal IContainer v;
      internal Button m;
      internal Button X;
      internal Button h;
      internal CheckBox l;
      internal CheckBox U;
      internal Button b;
      internal Button C;

      internal f7W()
      {
      }
    }

    internal sealed class Bc9
    {
      internal Label R;
      internal Label P;
      internal TextBox g;
      internal TextBox F;
      internal Button M;
      internal Button v;

      internal Bc9()
      {
      }
    }

    internal sealed class p1N
    {
      internal IContainer g;
      internal Label R;
      internal DateTimePicker h;

      internal p1N()
      {
      }
    }
  }
}
