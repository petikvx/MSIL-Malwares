// Decompiled with JetBrains decompiler
// Type: Org.BouncyCastle.Utilities.Zlib.ZInputStream
// Assembly: Client, Version=1.4.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 73C3C7FC-0EA2-48C4-8CEF-33A8CFDA287C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.MSIL.Agent.anew-0b84e664c8b592aa0220d52841629b2accb41f1f624720331000ab5f2f0ed628.exe

using System.IO;

namespace Org.BouncyCastle.Utilities.Zlib
{
  internal class ZInputStream : Stream
  {
    private const int BufferSize = 4096;
    protected ZStream z;
    protected int flushLevel;
    protected byte[] buf;
    protected byte[] buf1;
    protected bool compress;
    protected Stream input;
    protected bool closed;
    private bool nomoreinput;
    private static ZStream GetDefaultZStream(bool nowrap);
    public ZInputStream(Stream input);
    public ZInputStream(Stream input, bool nowrap);
    public ZInputStream(Stream input, ZStream z);
    public ZInputStream(Stream input, int level);
    public ZInputStream(Stream input, int level, bool nowrap);
    public override sealed bool CanRead { get; }
    public override sealed bool CanSeek { get; }
    public override sealed bool CanWrite { get; }
    public override void Close();
    public override sealed void Flush();
    public virtual int FlushMode { get; set; }
    public override sealed long Length { get; }
    public override sealed long Position { get; set; }
    public override int Read(byte[] b, int off, int len);
    public override int ReadByte();
    public override sealed long Seek(long offset, SeekOrigin origin);
    public override sealed void SetLength(long value);
    public virtual long TotalIn { get; }
    public virtual long TotalOut { get; }
    public override sealed void Write(byte[] buffer, int offset, int count);
  }
}
