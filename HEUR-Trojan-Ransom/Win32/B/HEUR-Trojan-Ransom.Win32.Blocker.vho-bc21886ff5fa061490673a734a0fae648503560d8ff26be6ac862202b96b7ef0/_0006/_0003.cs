// Decompiled with JetBrains decompiler
// Type: .
// Assembly: w, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8101C3F8-A792-4EB9-952B-26F7AB9A4B5A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\HEUR-Trojan-Ransom.Win32.Blocker.vho-bc21886ff5fa061490673a734a0fae648503560d8ff26be6ac862202b96b7ef0.exe

using \u0006;
using System;
using System.Collections;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0006
{
  internal class \u0003
  {
    private static readonly string \u0001;
    private static readonly string \u0002;
    private static readonly byte[] \u0001;
    private static readonly Hashtable \u0001;
    private static readonly bool \u0001;
    private static readonly int \u0001;

    public static string \u0001([In] int obj0)
    {
      int num1;
      int num2;
      int num3;
      string str1;
      byte[] numArray1;
      string str2;
      string str3;
      try
      {
        int num4 = obj0;
        if (true)
        {
          int num5 = \u0003.\u0001;
          obj0 = num4 - num5;
          if (\u0003.\u0001)
          {
            str3 = (string) \u0090.\u007E\u0008\u0003((object) \u0003.\u0001, (object) obj0);
            switch (str3)
            {
              case null:
                break;
              default:
                str1 = str3;
                goto label_21;
            }
          }
          num3 = 0;
          num1 = obj0;
          int num6;
          int num7;
          do
          {
            num2 = (int) \u0003.\u0001[num1++];
            num6 = num2;
            num7 = 128;
            if (num7 != 0)
            {
              if ((num6 & num7) == 0)
              {
                num3 = num2;
                if (num3 == 0)
                  str1 = string.Empty;
                else
                  goto label_13;
              }
              else
                goto label_8;
            }
            else
              goto label_10;
          }
          while (false);
          goto label_21;
label_8:
          if ((num2 & 64) == 0)
          {
            int num8 = num2 & 63;
            num7 = 8;
            num6 = num8;
          }
          else
          {
            num4 = ((num2 & 31) << 24) + ((int) \u0003.\u0001[num1++] << 16) + ((int) \u0003.\u0001[num1++] << 8);
            goto label_12;
          }
label_10:
          num3 = (num6 << num7) + (int) \u0003.\u0001[num1++];
          goto label_13;
        }
label_12:
        int num9 = (int) \u0003.\u0001[num1++];
        num3 = num4 + num9;
label_13:
        string str4;
        try
        {
          numArray1 = \u0093.\u0014\u0003(\u0092.\u007E\u0013\u0003((object) \u0091.\u0010\u0003(), \u0003.\u0001, num1, num3));
          str2 = \u007F.\u001B\u0002(\u0092.\u007E\u0013\u0003((object) \u0091.\u0010\u0003(), numArray1, 0, numArray1.Length));
          if (\u0003.\u0001)
          {
            try
            {
              \u0094.\u007E\u0015\u0003((object) \u0003.\u0001, (object) obj0, (object) str2);
            }
            catch
            {
            }
          }
          str4 = str2;
        }
        catch
        {
          str4 = (string) null;
        }
        str1 = str4;
      }
      catch (Exception ex)
      {
        string str5 = str3;
        // ISSUE: variable of a boxed type
        __Boxed<int> local1 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> local2 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local3 = (ValueType) num2;
        byte[] numArray2 = numArray1;
        string str6 = str2;
        string str7;
        string str8 = str7;
        // ISSUE: variable of a boxed type
        __Boxed<int> local4 = (ValueType) obj0;
        \u0007.\u0001(ex, (object) str5, (object) local1, (object) local2, (object) local3, (object) numArray2, (object) str6, (object) str8, (object) local4);
        throw;
      }
label_21:
      return str1;
    }

    static \u0003()
    {
      int length;
      byte[] numArray1;
      Stream stream1;
      Assembly assembly1;
      try
      {
        if (true)
        {
          \u0003.\u0001 = "1";
          \u0003.\u0002 = "226";
          \u0003.\u0001 = (byte[]) null;
        }
        \u0003.\u0001 = (Hashtable) null;
        do
        {
          \u0003.\u0001 = false;
          \u0003.\u0001 = 0;
        }
        while (false);
        if (\u0095.\u0017\u0003(\u0003.\u0001, "1"))
        {
          \u0003.\u0001 = true;
          \u0003.\u0001 = new Hashtable();
        }
        \u0003.\u0001 = \u0096.\u0019\u0003(\u0003.\u0002);
        assembly1 = \u0097.\u001B\u0003();
        stream1 = \u0098.\u007E\u001C\u0003((object) assembly1, "{483cb4e5-5fda-44ff-9ad6-4ba3bfa65cb5}");
        try
        {
          length = \u0099.\u001D\u0003(\u0088.\u007E\u0098\u0002((object) stream1));
          numArray1 = new byte[length];
          int num = \u009A.\u007E\u001E\u0003((object) stream1, numArray1, 0, length);
          \u0003.\u0001 = \u0007.\u0001(numArray1);
          numArray1 = (byte[]) null;
          \u009B.\u007E\u001F\u0003((object) stream1);
        }
        finally
        {
          do
          {
            if (stream1 != null)
              \u009B.\u007E\u007F\u0003((object) stream1);
          }
          while (false);
        }
      }
      catch (Exception ex)
      {
        Assembly assembly2 = assembly1;
        Stream stream2 = stream1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local = (ValueType) length;
        byte[] numArray2 = numArray1;
        \u0007.\u0001(ex, (object) assembly2, (object) stream2, (object) local, (object) numArray2);
        throw;
      }
    }
  }
}
