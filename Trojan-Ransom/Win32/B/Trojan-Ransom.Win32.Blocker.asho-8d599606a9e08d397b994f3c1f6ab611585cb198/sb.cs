// Decompiled with JetBrains decompiler
// Type: SC_aio.sb
// Assembly: SCaio, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4039BEB0-723F-44D4-B6A2-6115173D2A3D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\Trojan-Ransom.Win32.Blocker.asho-8d599606a9e08d397b994f3c1f6ab611585cb198.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using SC_aio.My;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace SC_aio
{
  [DesignerGenerated]
  public class sb : Form
  {
    private IContainer components;
    [AccessedThroughProperty("content")]
    private ListBox _content;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("Button2")]
    private Button _Button2;
    [AccessedThroughProperty("shoutbox")]
    private TextBox _shoutbox;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("message")]
    private TextBox _message;
    [AccessedThroughProperty("Label2")]
    private Label _Label2;
    [AccessedThroughProperty("spamletters")]
    private CheckBox _spamletters;
    [AccessedThroughProperty("Button3")]
    private Button _Button3;
    [AccessedThroughProperty("spamprofanity")]
    private CheckBox _spamprofanity;
    [AccessedThroughProperty("randomuser")]
    private CheckBox _randomuser;
    private List<string> users;

    public sb()
    {
      this.Load += new EventHandler(this.sb_Load);
      this.users = new List<string>();
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.content = new ListBox();
      this.Button1 = new Button();
      this.Button2 = new Button();
      this.shoutbox = new TextBox();
      this.Label1 = new Label();
      this.message = new TextBox();
      this.Label2 = new Label();
      this.spamletters = new CheckBox();
      this.Button3 = new Button();
      this.spamprofanity = new CheckBox();
      this.randomuser = new CheckBox();
      this.SuspendLayout();
      this.content.FormattingEnabled = true;
      ListBox content1 = this.content;
      Point point1 = new Point(12, 12);
      Point point2 = point1;
      content1.Location = point2;
      this.content.Name = "content";
      this.content.SelectionMode = SelectionMode.MultiExtended;
      ListBox content2 = this.content;
      Size size1 = new Size(295, 277);
      Size size2 = size1;
      content2.Size = size2;
      this.content.TabIndex = 0;
      Button button1_1 = this.Button1;
      point1 = new Point(12, 403);
      Point point3 = point1;
      button1_1.Location = point3;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      size1 = new Size(209, 23);
      Size size3 = size1;
      button1_2.Size = size3;
      this.Button1.TabIndex = 1;
      this.Button1.Text = "Get Posts";
      this.Button1.UseVisualStyleBackColor = true;
      Button button2_1 = this.Button2;
      point1 = new Point(227, 403);
      Point point4 = point1;
      button2_1.Location = point4;
      this.Button2.Name = "Button2";
      Button button2_2 = this.Button2;
      size1 = new Size(80, 23);
      Size size4 = size1;
      button2_2.Size = size4;
      this.Button2.TabIndex = 2;
      this.Button2.Text = "Get Users";
      this.Button2.UseVisualStyleBackColor = true;
      TextBox shoutbox1 = this.shoutbox;
      point1 = new Point(72, 299);
      Point point5 = point1;
      shoutbox1.Location = point5;
      this.shoutbox.Name = "shoutbox";
      TextBox shoutbox2 = this.shoutbox;
      size1 = new Size(235, 20);
      Size size5 = size1;
      shoutbox2.Size = size5;
      this.shoutbox.TabIndex = 3;
      this.Label1.AutoSize = true;
      Label label1_1 = this.Label1;
      point1 = new Point(13, 302);
      Point point6 = point1;
      label1_1.Location = point6;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      size1 = new Size(53, 13);
      Size size6 = size1;
      label1_2.Size = size6;
      this.Label1.TabIndex = 4;
      this.Label1.Text = "shoutbox:";
      TextBox message1 = this.message;
      point1 = new Point(72, 325);
      Point point7 = point1;
      message1.Location = point7;
      this.message.Name = "message";
      TextBox message2 = this.message;
      size1 = new Size(235, 20);
      Size size7 = size1;
      message2.Size = size7;
      this.message.TabIndex = 5;
      this.Label2.AutoSize = true;
      Label label2_1 = this.Label2;
      point1 = new Point(12, 328);
      Point point8 = point1;
      label2_1.Location = point8;
      this.Label2.Name = "Label2";
      Label label2_2 = this.Label2;
      size1 = new Size(50, 13);
      Size size8 = size1;
      label2_2.Size = size8;
      this.Label2.TabIndex = 6;
      this.Label2.Text = "Message";
      this.spamletters.AutoSize = true;
      CheckBox spamletters1 = this.spamletters;
      point1 = new Point(12, 351);
      Point point9 = point1;
      spamletters1.Location = point9;
      this.spamletters.Name = "spamletters";
      CheckBox spamletters2 = this.spamletters;
      size1 = new Size(88, 17);
      Size size9 = size1;
      spamletters2.Size = size9;
      this.spamletters.TabIndex = 7;
      this.spamletters.Text = "Spam Letters";
      this.spamletters.UseVisualStyleBackColor = true;
      Button button3_1 = this.Button3;
      point1 = new Point(12, 374);
      Point point10 = point1;
      button3_1.Location = point10;
      this.Button3.Name = "Button3";
      Button button3_2 = this.Button3;
      size1 = new Size(295, 23);
      Size size10 = size1;
      button3_2.Size = size10;
      this.Button3.TabIndex = 8;
      this.Button3.Text = "Post";
      this.Button3.UseVisualStyleBackColor = true;
      this.spamprofanity.AutoSize = true;
      CheckBox spamprofanity1 = this.spamprofanity;
      point1 = new Point(210, 351);
      Point point11 = point1;
      spamprofanity1.Location = point11;
      this.spamprofanity.Name = "spamprofanity";
      CheckBox spamprofanity2 = this.spamprofanity;
      size1 = new Size(97, 17);
      Size size11 = size1;
      spamprofanity2.Size = size11;
      this.spamprofanity.TabIndex = 9;
      this.spamprofanity.Text = "Spam Profanity";
      this.spamprofanity.UseVisualStyleBackColor = true;
      this.randomuser.AutoSize = true;
      CheckBox randomuser1 = this.randomuser;
      point1 = new Point(104, 351);
      Point point12 = point1;
      randomuser1.Location = point12;
      this.randomuser.Name = "randomuser";
      CheckBox randomuser2 = this.randomuser;
      size1 = new Size(100, 17);
      Size size12 = size1;
      randomuser2.Size = size12;
      this.randomuser.TabIndex = 10;
      this.randomuser.Text = "Random @user";
      this.randomuser.UseVisualStyleBackColor = true;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(319, 433);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.randomuser);
      this.Controls.Add((Control) this.spamprofanity);
      this.Controls.Add((Control) this.Button3);
      this.Controls.Add((Control) this.spamletters);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.message);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.shoutbox);
      this.Controls.Add((Control) this.Button2);
      this.Controls.Add((Control) this.Button1);
      this.Controls.Add((Control) this.content);
      this.Name = nameof (sb);
      this.Text = "ShiftCode - Shoutbox Controller";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual ListBox content
    {
      get => this._content;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.content_KeyPress);
        if (this._content != null)
          this._content.KeyPress -= pressEventHandler;
        this._content = value;
        if (this._content == null)
          return;
        this._content.KeyPress += pressEventHandler;
      }
    }

    internal virtual Button Button1
    {
      get => this._Button1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual Button Button2
    {
      get => this._Button2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button2_Click);
        if (this._Button2 != null)
          this._Button2.Click -= eventHandler;
        this._Button2 = value;
        if (this._Button2 == null)
          return;
        this._Button2.Click += eventHandler;
      }
    }

    internal virtual TextBox shoutbox
    {
      get => this._shoutbox;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._shoutbox = value;
    }

    internal virtual Label Label1
    {
      get => this._Label1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual TextBox message
    {
      get => this._message;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._message = value;
    }

    internal virtual Label Label2
    {
      get => this._Label2;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label2 = value;
    }

    internal virtual CheckBox spamletters
    {
      get => this._spamletters;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._spamletters = value;
    }

    internal virtual Button Button3
    {
      get => this._Button3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button3_Click);
        if (this._Button3 != null)
          this._Button3.Click -= eventHandler;
        this._Button3 = value;
        if (this._Button3 == null)
          return;
        this._Button3.Click += eventHandler;
      }
    }

    internal virtual CheckBox spamprofanity
    {
      get => this._spamprofanity;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._spamprofanity = value;
    }

    internal virtual CheckBox randomuser
    {
      get => this._randomuser;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._randomuser = value;
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      this.content.Items.Clear();
      string str1 = Conversions.ToString(MyProject.Forms.aio.sendPost("http://" + MyProject.Forms.aio.domain + "/shout/shout_mod.html", ""));
      while (str1.Contains("<b>"))
      {
        string str2 = str1.Remove(0, checked (str1.IndexOf("<b>") + 3));
        string str3 = str2.Split('<')[0];
        str1 = str2.Remove(0, checked (str2.IndexOf("</a>") + 4));
        string str4 = str1.Split('<')[0];
        this.content.Items.Add((object) (str3 + str4));
      }
    }

    private void getusers()
    {
      this.users = new List<string>();
      string str1 = Conversions.ToString(MyProject.Forms.aio.sendPost("http://" + MyProject.Forms.aio.domain + "/shout/shout_mod.html", ""));
      while (str1.Contains("<b>"))
      {
        string str2 = str1.Remove(0, checked (str1.IndexOf("<b>") + 3));
        string str3 = str2.Split(':')[0];
        str1 = str2.Remove(0, checked (str2.IndexOf("</a>") + 4));
        string str4 = str1.Split('<')[0];
        if (!this.users.Contains(str3))
          this.users.Add(str3);
      }
    }

    private void Button2_Click(object sender, EventArgs e)
    {
      this.content.Items.Clear();
      this.getusers();
      if (this.users.Count > 0)
      {
        try
        {
          foreach (object user in this.users)
            this.content.Items.Add(user);
        }
        finally
        {
          List<string>.Enumerator enumerator;
          enumerator.Dispose();
        }
      }
      else
      {
        int num = (int) Interaction.MsgBox((object) "There were no users found!");
      }
    }

    private void content_KeyPress(object sender, KeyPressEventArgs e)
    {
      if (e.KeyChar != '\r')
        return;
      string text = "";
      try
      {
        foreach (object selectedItem in this.content.SelectedItems)
        {
          string str = Conversions.ToString(selectedItem);
          text = text + str + "\r\n";
        }
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
      }
      MyProject.Computer.Clipboard.SetText(text);
      int num = (int) Interaction.MsgBox((object) "Selected items copied to clipboard!");
    }

    private void sb_Load(object sender, EventArgs e)
    {
    }

    private void Button3_Click(object sender, EventArgs e)
    {
      string str1 = "";
      if (this.randomuser.Checked)
        this.getusers();
      if (this.spamletters.Checked)
      {
        int num = 10;
        while (num != 0)
        {
          MyProject.Forms.aio.sendPost("http://" + MyProject.Forms.aio.domain + "/shout/post.php?session=" + this.shoutbox.Text + "&name=name&msg=" + (!this.randomuser.Checked ? Conversions.ToString(MyProject.Forms.aio.randLetters((object) (int) byte.MaxValue, (object) (int) byte.MaxValue)) : Conversions.ToString(Operators.AddObject((object) ("@" + this.users[MyProject.Forms.aio.rand.Next(checked (this.users.Count - 1))] + " - "), MyProject.Forms.aio.randLetters((object) 240, (object) 250)))) + "&nocache=1338411754874", "");
          checked { --num; }
        }
      }
      else if (this.spamprofanity.Checked)
      {
        int num = 10;
        while (num != 0)
        {
          string str2;
          string str3;
          for (str2 = !this.randomuser.Checked ? "" : "@" + this.users[MyProject.Forms.aio.rand.Next(checked (this.users.Count - 1))] + " - "; str2.Length < 245; str2 += str3)
            str3 = MyProject.Forms.aio.randSelect(MyProject.Forms.aio.profanity) + " ";
          MyProject.Forms.aio.sendPost("http://" + MyProject.Forms.aio.domain + "/shout/post.php?session=" + this.shoutbox.Text + "&name=name&msg=" + str2 + "&nocache=1338411754874", "");
          checked { --num; }
        }
      }
      else
      {
        if (this.randomuser.Checked)
          str1 = "@" + this.users[MyProject.Forms.aio.rand.Next(checked (this.users.Count - 1))] + ": ";
        string str4 = Conversions.ToString(MyProject.Forms.aio.sendPost("http://" + MyProject.Forms.aio.domain + "/shout/post.php?session=" + this.shoutbox.Text + "&name=name&msg=" + str1 + this.message.Text + "&nocache=1338411754874", ""));
        if (Operators.CompareString(str4, "", false) == 0)
          return;
        int num = (int) Interaction.MsgBox((object) str4);
      }
    }
  }
}
