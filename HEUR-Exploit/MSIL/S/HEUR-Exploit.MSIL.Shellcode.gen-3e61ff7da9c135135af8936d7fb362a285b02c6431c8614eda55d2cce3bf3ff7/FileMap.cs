// Decompiled with JetBrains decompiler
// Type: PATH_F.FileMap
// Assembly: PATH_F, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 83C76E89-0EC0-4556-AC03-47BAF793022C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3e61ff7da9c135135af8936d7fb362a285b02c6431c8614eda55d2cce3bf3ff7.exe

using System.Collections.Generic;
using System.IO;
using System.Windows.Forms;

namespace PATH_F
{
  public class FileMap
  {
    public static void Save(List<string> maps, List<Cell> lista_cell, int rozmiar, string name)
    {
      bool flag = false;
      foreach (string map in maps)
      {
        char[] chArray = new char[1]{ ';' };
        string[] strArray = map.Split(chArray);
        if (name == strArray[0])
          flag = true;
      }
      if (!flag)
      {
        string path = "maps.txt";
        string str1 = "";
        string str2 = "";
        string str3 = "";
        string str4 = rozmiar.ToString();
        foreach (Cell cell in lista_cell)
        {
          if (cell.przeszkoda)
            str3 = str3 + cell.index.ToString() + ",";
          if (cell.start)
            str1 = cell.index.ToString();
          if (cell.end)
            str2 = cell.index.ToString();
        }
        string contents = name + ";" + str4 + ";" + str1 + ";" + str2 + ";" + str3 + ";\n";
        File.AppendAllText(path, contents);
      }
      else
      {
        int num = (int) MessageBox.Show("There is already a map with this name");
      }
    }

    public static List<string> Load(string nameFile)
    {
      List<string> stringList = new List<string>();
      using (StreamReader streamReader = new StreamReader(nameFile))
      {
        string str;
        while ((str = streamReader.ReadLine()) != null)
          stringList.Add(str);
      }
      return stringList;
    }
  }
}
