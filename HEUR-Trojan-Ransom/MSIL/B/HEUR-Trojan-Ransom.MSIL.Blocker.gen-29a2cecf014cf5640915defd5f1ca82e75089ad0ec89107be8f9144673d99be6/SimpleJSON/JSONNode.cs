// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: ConcurrentS, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: BBECA65A-DDC9-4285-A0F3-1DAD9BE0ED87
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-29a2cecf014cf5640915defd5f1ca82e75089ad0ec89107be8f9144673d99be6.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 281819051;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 798581525)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1650425144 ^ -1281582322;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 1010813366;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1617567674)) % 3U)
          {
            case 1:
              str = "";
              num1 = (int) num2 * 737650831 ^ 2085454107;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -712275240;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -901033083)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              count = 0;
              num1 = (int) num2 * -1340477317 ^ -1243286767;
              continue;
            case 3:
              num1 = (int) num2 * 2049131465 ^ 1332119312;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 368554326;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 404548936)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * -285369290 ^ 1999538343;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = 1398381295;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 798636413)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 743777389 ^ 1845790782;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -1402124800;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -701273881)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1745713398 ^ -801268490;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode) => aNode;

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -898288760;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -790591519)) % 3U)
          {
            case 1:
              getChildsD17.\u003C\u003E4__this = this;
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * 903373203 ^ 2136727410;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 2047145937;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 223557567)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 1435976872 ^ -1172228028;
              continue;
            case 2:
              getDeepChildsD19.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1837804040 ^ 463946602;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -2117242226;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -306150556)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1080039041 ^ -734013569;
            continue;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1315717976 ^ -773099599;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = -1524041733;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1591552285)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1422799289 ^ 1083740270;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 1854043363;
        int result;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 261696958)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -1496013169 ^ 2000230020;
              continue;
            case 1:
              asInt = result;
              num1 = (int) num2 * -1049463359 ^ -890436709;
              continue;
            case 2:
              asInt = 0;
              num1 = 1612685506;
              continue;
            case 3:
              result = 0;
              int num3 = !int.TryParse(this.Value, out result) ? 632998031 : (num3 = 391093820);
              num1 = num3 ^ (int) num2 * -1144069779;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 1013817036;
        float result;
        bool flag;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 404301077)) % 6U)
          {
            case 0:
              asFloat = 0.0f;
              num1 = 2048936241;
              continue;
            case 1:
              result = 0.0f;
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202C⁯‭‪‍‮‫⁯⁫⁯‪⁭‫⁪‪⁬‍‪⁮‮⁫‭‫‬⁪‬‏‭‮⁭‎‪​‍⁪⁫‍⁯‮‫‮(), out result);
              num1 = (int) num2 * -816929658 ^ -386383890;
              continue;
            case 3:
              goto label_1;
            case 4:
              asFloat = result;
              num1 = (int) num2 * -1656398914 ^ 542101165;
              continue;
            case 5:
              int num3 = !flag ? 71534022 : (num3 = 666542790);
              num1 = num3 ^ (int) num2 * 652576517;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 27350796;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1664523334)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -1968850130 ^ -2138349464;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -1231347794;
        double result;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1605224555)) % 8U)
          {
            case 0:
              num1 = (int) num2 * 58901534 ^ -196057735;
              continue;
            case 1:
              int num3 = !flag ? 1414640134 : (num3 = 502390387);
              num1 = num3 ^ (int) num2 * 926854148;
              continue;
            case 2:
              asDouble = result;
              num1 = (int) num2 * -397595530 ^ -1247449887;
              continue;
            case 3:
              result = 0.0;
              num1 = (int) num2 * -2017917860 ^ 1249354036;
              continue;
            case 5:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 1292298050 ^ -1791643906;
              continue;
            case 6:
              goto label_1;
            case 7:
              asDouble = 0.0;
              num1 = -1771690711;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 99209182;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1209515331)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1123150983 ^ 1688222559;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
        bool flag = bool.TryParse(this.Value, out result);
label_1:
        int num1 = 166214507;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1928700840)) % 5U)
          {
            case 0:
              asBool = !JSONNode.\u202A⁪‭⁭⁬‭⁯‮⁮‎‌‬⁮‏⁮‬‪‬⁭⁯‍​⁭‪⁭‬‬‬‬⁯‪‫‌⁯‍‬‭‮⁬⁭‮(this.Value);
              num1 = 804977962;
              continue;
            case 1:
              asBool = result;
              num1 = (int) num2 * -698954543 ^ 1876171424;
              continue;
            case 3:
              goto label_1;
            case 4:
              int num3 = !flag ? 1489553496 : (num3 = 257236126);
              num1 = num3 ^ (int) num2 * 1185016436;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 49594542;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1538336769)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -64051519 ^ 76210868;
              continue;
            case 2:
              goto label_1;
            case 3:
              asArray = this as JSONArray;
              num1 = (int) num2 * -934735101 ^ 834492560;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
        JSONClass asObject = this as JSONClass;
label_1:
        int num1 = 1595827630;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1301660386)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 624435347 ^ -1173047770;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
      JSONNode jsonNode = (JSONNode) new JSONData(s);
label_1:
      int num1 = 1499819698;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1740954491)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1037374292 ^ -2124804940;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -1670295153;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -2140062780)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            str2 = d.Value;
            break;
          case 3:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -1343035893 ^ -1458290173;
              continue;
            }
            str2 = (string) null;
            break;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = -1889524527;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_8;
label_1:
      int num1 = -340843027;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1176924264)) % 7U)
        {
          case 1:
            flag = true;
            num1 = (int) num2 * -1972445141 ^ 2013773563;
            continue;
          case 2:
            goto label_7;
          case 3:
            num1 = (int) num2 * -495978806 ^ -1501513962;
            continue;
          case 4:
            flag = (object) a == b;
            num1 = -1525390066;
            continue;
          case 5:
            num1 = (int) num2 * -1673025773 ^ 1490293882;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_10;
        }
      }
label_7:
      int num3 = a is JSONLazyCreator ? 1 : 0;
      goto label_9;
label_10:
      return flag;
label_8:
      num3 = 0;
label_9:
      num1 = num3 == 0 ? -614252226 : (num1 = -85649296);
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -351748920;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1240697657)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 2020649151 ^ -546382740;
            continue;
          case 3:
            flag = !(a == b);
            num1 = (int) num2 * 332321123 ^ 20155348;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -1739200209;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -249963307)) % 3U)
        {
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * -1984941594 ^ -1971833943;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u206D⁮⁮⁪⁪⁮‍‏‌‮‏‭‍‏‏‎‬‮‫⁫‎‌‍​⁮⁫​‏⁫⁫⁯‎⁯‪‮‌⁬‭‫⁪‮();
label_1:
      int num1 = -1713048866;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -204532298)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1728232518 ^ -1063545676;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 909763152;
      string str1;
      int num2;
      string str2;
      char ch1;
      char ch2;
      char ch3;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 762760363)) % 34U)
        {
          case 0:
label_24:
            str1 = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(str1, ch2.ToString());
            num1 = 859658752;
            continue;
          case 1:
            num1 = (int) num3 * 1355305429 ^ 1312987410;
            continue;
          case 2:
            num2 = 0;
            num1 = (int) num3 * -171112902 ^ -1600517384;
            continue;
          case 3:
            num1 = (int) num3 * 602599780 ^ 319832942;
            continue;
          case 4:
label_17:
            str1 = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(str1, "\\f");
            num1 = 191557205;
            continue;
          case 6:
            num1 = (int) num3 * -271113315 ^ 670130565;
            continue;
          case 7:
            ch2 = JSONNode.\u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮(str2, num2);
            num1 = 237752181;
            continue;
          case 8:
label_31:
            str1 = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(str1, "\\b");
            num1 = 191557205;
            continue;
          case 9:
            str2 = aText;
            num1 = (int) num3 * 636616308 ^ 1385334745;
            continue;
          case 10:
            str1 = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(str1, "\\\"");
            num1 = 327140299;
            continue;
          case 11:
            str3 = str1;
            num1 = (int) num3 * 617457336 ^ -934446385;
            continue;
          case 12:
            num1 = (int) num3 * -1638516906 ^ 955393045;
            continue;
          case 13:
            goto label_1;
          case 14:
            num1 = 1377563309;
            continue;
          case 15:
            num1 = (int) num3 * -2082584941 ^ -1415064876;
            continue;
          case 16:
            num1 = (int) num3 * -1743574656 ^ -555160542;
            continue;
          case 17:
            int num4;
            num1 = num4 = ch1 != '"' ? 1975784265 : (num4 = 670155541);
            continue;
          case 18:
            num1 = (int) num3 * -762647666 ^ 825039969;
            continue;
          case 19:
label_16:
            str1 = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(str1, "\\r");
            num1 = 2118695160;
            continue;
          case 20:
            num1 = (int) num3 * 710095629 ^ -1466228696;
            continue;
          case 21:
            num1 = (int) num3 * -1243207478 ^ -1469305045;
            continue;
          case 22:
            num1 = (int) num3 * 1373207881 ^ -1582494407;
            continue;
          case 23:
            int num5;
            num1 = num5 = num2 < JSONNode.\u202A‍⁮‎‮‬⁫‎‌⁮​‭​​‬⁮‭‎​‭⁬‍‏‎⁪⁯‍⁫⁫‭⁭​​‌‮‍‍⁯‬⁬‮(str2) ? 1079490202 : (num5 = 572514928);
            continue;
          case 24:
            switch (ch1)
            {
              case '\b':
                goto label_31;
              case '\t':
                goto label_13;
              case '\n':
                goto label_34;
              case '\v':
                goto label_24;
              case '\f':
                goto label_17;
              case '\r':
                goto label_16;
              default:
                num1 = (int) num3 * 1728105698 ^ 726314545;
                continue;
            }
          case 25:
label_13:
            str1 = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(str1, "\\t");
            num1 = 138609339;
            continue;
          case 26:
            str1 = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(str1, "\\\\");
            num1 = 202778032;
            continue;
          case 27:
label_34:
            str1 = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(str1, "\\n");
            num1 = 290987970;
            continue;
          case 28:
            int num6;
            num1 = num6 = ch1 != '\\' ? 949491941 : (num6 = 1599067295);
            continue;
          case 29:
            str1 = "";
            num1 = (int) num3 * -1601043166 ^ -115183854;
            continue;
          case 30:
            ch3 = ch2;
            num1 = (int) num3 * 1137578313 ^ 10457020;
            continue;
          case 31:
            num1 = (int) num3 * 1006994048 ^ -1866929963;
            continue;
          case 32:
            ++num2;
            num1 = (int) num3 * -854984938 ^ 1826087414;
            continue;
          case 33:
            ch1 = ch3;
            num1 = (int) num3 * -1467138235 ^ -411726756;
            continue;
          default:
            goto label_36;
        }
      }
label_36:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 132388496;
      JSONNode jsonNode1;
      string aKey;
      Stack<JSONNode> jsonNodeStack;
      bool flag1;
      bool flag2;
      string aItem;
      int num2;
      char ch1;
      JSONNode jsonNode2;
      bool flag3;
      bool flag4;
      bool flag5;
      bool flag6;
      char ch2;
      bool flag7;
      char ch3;
      string s;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      char ch4;
      bool flag12;
      bool flag13;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 11410451)) % 152U)
        {
          case 0:
            int num4 = flag10 ? 210967809 : (num4 = 422450493);
            num1 = num4 ^ (int) num3 * 1430808450;
            continue;
          case 1:
            flag12 = JSONNode.\u206E⁪⁯⁫‍‪‬‏⁫⁭‍‮‪⁫‍⁮‎⁯‎‍‏⁮‏‫⁭⁭‫‬‭‫‪⁬‫⁪​​⁪‏‍‭‮(aKey, "");
            num1 = 1038559747;
            continue;
          case 2:
            num1 = (int) num3 * -1639789029 ^ 309850211;
            continue;
          case 3:
            flag1 = false;
            num1 = (int) num3 * -1047351589 ^ -70320094;
            continue;
          case 4:
            int num5 = flag9 ? 957674145 : (num5 = 48209486);
            num1 = num5 ^ (int) num3 * 1661830512;
            continue;
          case 5:
            switch (ch3)
            {
              case 'r':
                goto label_137;
              case 's':
                goto label_63;
              case 't':
                goto label_57;
              case 'u':
                goto label_150;
              default:
                num1 = 294847833;
                continue;
            }
          case 6:
            aKey = JSONNode.\u202E⁯‌‎‏‬‫⁯‮‏‭‌‮‌⁬⁪‍‭⁬‍‌‭⁮‎‍⁫⁬‍​⁬​⁯⁪‏⁬​‬⁯‫‬‮(aKey);
            flag6 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -327736426 ^ -116999128;
            continue;
          case 7:
            num1 = (int) num3 * 29149900 ^ 755865699;
            continue;
          case 8:
            num1 = (int) num3 * 557547094 ^ 1712291632;
            continue;
          case 9:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1783886548 ^ -1112774608;
            continue;
          case 10:
            flag7 = JSONNode.\u206E⁪⁯⁫‍‪‬‏⁫⁭‍‮‪⁫‍⁮‎⁯‎‍‏⁮‏‫⁭⁭‫‬‭‫‪⁬‫⁪​​⁪‏‍‭‮(aKey, "");
            num1 = 609768510;
            continue;
          case 11:
            num1 = (int) num3 * 17003340 ^ 1678322561;
            continue;
          case 12:
            flag2 = flag1;
            num1 = 1064642402;
            continue;
          case 13:
            num1 = 728365931;
            continue;
          case 14:
            ch2 = JSONNode.\u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮(aJSON, num2);
            num1 = (int) num3 * 303039705 ^ -1683321877;
            continue;
          case 15:
            num1 = (int) num3 * 1823494243 ^ -1829853322;
            continue;
          case 16:
            num1 = (int) num3 * -404058624 ^ 89677596;
            continue;
          case 17:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, "\n");
            num1 = 1374361822;
            continue;
          case 18:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1895645238 ^ -1442846659;
            continue;
          case 19:
            int num6 = !flag13 ? -1166485350 : (num6 = -96645368);
            num1 = num6 ^ (int) num3 * 1741965247;
            continue;
          case 20:
            int num7 = flag3 ? -646100118 : (num7 = -1594433299);
            num1 = num7 ^ (int) num3 * 328357350;
            continue;
          case 21:
            aKey = JSONNode.\u202E⁯‌‎‏‬‫⁯‮‏‭‌‮‌⁬⁪‍‭⁬‍‌‭⁮‎‍⁫⁬‍​⁬​⁯⁪‏⁬​‬⁯‫‬‮(aKey);
            num1 = (int) num3 * 1168256473 ^ -1880871785;
            continue;
          case 22:
            jsonNode2 = jsonNode1;
            num1 = 1598230138;
            continue;
          case 23:
label_63:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, ch2.ToString());
            num1 = 1374361822;
            continue;
          case 24:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, JSONNode.\u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 912259808 ^ -2047669822;
            continue;
          case 25:
            num1 = (int) num3 * -2093981636 ^ -1139234663;
            continue;
          case 26:
            flag1 = !flag1;
            num1 = 1143009381;
            continue;
          case 27:
            int num8 = flag4 ? -308019782 : (num8 = -1690696601);
            num1 = num8 ^ (int) num3 * -1606388396;
            continue;
          case 28:
            num1 = (int) num3 * -2046846687 ^ 470723304;
            continue;
          case 29:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, JSONNode.\u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 710798018 ^ 1796328828;
            continue;
          case 30:
            int num9;
            num1 = num9 = ch1 > ']' ? 904631536 : (num9 = 1461590538);
            continue;
          case 31:
            int num10 = ch1 > ' ' ? -194597519 : (num10 = -1181023433);
            num1 = num10 ^ (int) num3 * 323340555;
            continue;
          case 32:
            num1 = (int) num3 * 674471250 ^ 1176619410;
            continue;
          case 33:
            int num11 = flag2 ? 1962257803 : (num11 = 1350608210);
            num1 = num11 ^ (int) num3 * 1516710098;
            continue;
          case 34:
            int num12;
            num1 = num12 = ch3 == 'n' ? 1699892250 : (num12 = 1087578899);
            continue;
          case 35:
            int num13 = !(jsonNode1 != (object) null) ? -716400493 : (num13 = -1941516063);
            num1 = num13 ^ (int) num3 * 875257333;
            continue;
          case 36:
            aItem = "";
            num1 = (int) num3 * -1821279552 ^ -160625732;
            continue;
          case 37:
            num1 = (int) num3 * 1183394890 ^ 1028042007;
            continue;
          case 38:
            num1 = (int) num3 * -308817729 ^ -1142129270;
            continue;
          case 39:
            switch (ch1)
            {
              case '[':
                goto label_84;
              case '\\':
                goto label_26;
              case ']':
                goto label_78;
              default:
                num1 = 1694708653;
                continue;
            }
          case 40:
            int num14 = !flag12 ? -2041104850 : (num14 = -1580996371);
            num1 = num14 ^ (int) num3 * -1832992925;
            continue;
          case 41:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, JSONNode.\u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 974154644 ^ -1998358159;
            continue;
          case 42:
            int num15 = ch3 == 'b' ? 203060115 : (num15 = 1443120828);
            num1 = num15 ^ (int) num3 * -211545019;
            continue;
          case 43:
            jsonNode1 = (JSONNode) null;
            num2 = 0;
            num1 = (int) num3 * 1132044576 ^ 498962919;
            continue;
          case 44:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, "\f");
            num1 = 1374361822;
            continue;
          case 45:
            aKey = "";
            num1 = 1873977981;
            continue;
          case 46:
          case 56:
          case 88:
          case 91:
          case 99:
label_106:
            ++num2;
            num1 = 1593124690;
            continue;
          case 47:
            num1 = (int) num3 * 1886446578 ^ -1948738037;
            continue;
          case 48:
            num1 = (int) num3 * 324473843 ^ 1200231812;
            continue;
          case 49:
            switch (ch1)
            {
              case '\t':
                goto label_38;
              case '\n':
              case '\r':
                goto label_106;
              case '\v':
              case '\f':
                goto label_128;
              default:
                num1 = (int) num3 * 1303157102 ^ -90284660;
                continue;
            }
          case 50:
label_150:
            num1 = 273609952;
            continue;
          case 51:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * 264876833 ^ -251813341;
            continue;
          case 52:
            num1 = (int) num3 * 2106809468 ^ -677117018;
            continue;
          case 53:
            goto label_1;
          case 54:
            num1 = (int) num3 * 45307891 ^ 1081213947;
            continue;
          case 55:
            jsonNodeStack.Pop();
            num1 = 410528510;
            continue;
          case 57:
            num1 = (int) num3 * 1980623646 ^ -227451115;
            continue;
          case 58:
            num1 = (int) num3 * 321394003 ^ 831982562;
            continue;
          case 59:
            ch1 = ch4;
            int num16 = ch1 > ',' ? -516410663 : (num16 = -152482456);
            num1 = num16 ^ (int) num3 * 1399301348;
            continue;
          case 60:
            num1 = (int) num3 * 1177420891 ^ -787280535;
            continue;
          case 61:
            int num17 = JSONNode.\u206E⁪⁯⁫‍‪‬‏⁫⁭‍‮‪⁫‍⁮‎⁯‎‍‏⁮‏‫⁭⁭‫‬‭‫‪⁬‫⁪​​⁪‏‍‭‮(aItem, "") ? 226079132 : (num17 = 1223950376);
            num1 = num17 ^ (int) num3 * -541501569;
            continue;
          case 62:
            num1 = (int) num3 * 1191362977 ^ 2015591667;
            continue;
          case 63:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1278130903 ^ -1020083473;
            continue;
          case 64:
            int num18;
            num1 = num18 = ch1 == ' ' ? 523611276 : (num18 = 1484513064);
            continue;
          case 65:
            num1 = (int) num3 * -271962236 ^ -409523367;
            continue;
          case 66:
            num1 = (int) num3 * 2085967719 ^ 66031547;
            continue;
          case 67:
            s = JSONNode.\u200B‬⁬‬‪‪⁮‍​‭‫‭‪‬‪⁯‍⁪‭‬​⁭‌‭‪‭‪‮‏‪⁯‬‫⁮‍‮‎‮‏⁬‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * -1012285996 ^ -226870271;
            continue;
          case 68:
            num1 = (int) num3 * 1618529289 ^ -289851108;
            continue;
          case 69:
label_137:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, "\r");
            num1 = 1374361822;
            continue;
          case 71:
            int num19;
            num1 = num19 = JSONNode.\u206E⁪⁯⁫‍‪‬‏⁫⁭‍‮‪⁫‍⁮‎⁯‎‍‏⁮‏‫⁭⁭‫‬‭‫‪⁬‫⁪​​⁪‏‍‭‮(aItem, "") ? 186888199 : (num19 = 1294647542);
            continue;
          case 72:
label_78:
            flag5 = flag1;
            num1 = 1051974740;
            continue;
          case 73:
            int num20 = jsonNode1 is JSONArray ? 2056712829 : (num20 = 76976095);
            num1 = num20 ^ (int) num3 * 492294277;
            continue;
          case 74:
            num1 = (int) num3 * -1707812877 ^ -2103805045;
            continue;
          case 75:
            num1 = (int) num3 * -1811946996 ^ 551206796;
            continue;
          case 76:
            aItem = "";
            aKey = "";
            num1 = (int) num3 * 1541550152 ^ 666863344;
            continue;
          case 77:
            aItem = "";
            num1 = (int) num3 * 567079314 ^ 1140973316;
            continue;
          case 78:
            goto label_86;
          case 79:
            int num21 = !flag5 ? -30561900 : (num21 = -1380311697);
            num1 = num21 ^ (int) num3 * -417038152;
            continue;
          case 80:
            aKey = "";
            aItem = "";
            int num22;
            num1 = num22 = jsonNodeStack.Count <= 0 ? 665817568 : (num22 = 513586265);
            continue;
          case 81:
            goto label_56;
          case 82:
            num1 = (int) num3 * -1652662042 ^ -663557198;
            continue;
          case 83:
label_128:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, JSONNode.\u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮(aJSON, num2).ToString());
            num1 = 1323375026;
            continue;
          case 84:
            num1 = (int) num3 * 226319281 ^ -1818755659;
            continue;
          case 85:
            int num23 = !flag7 ? 1754443203 : (num23 = 1106017243);
            num1 = num23 ^ (int) num3 * 1209728914;
            continue;
          case 86:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -884604347 ^ 1539903826;
            continue;
          case 87:
            int num24;
            num1 = num24 = ch1 != '}' ? 1597225391 : (num24 = 1919408971);
            continue;
          case 89:
            flag10 = flag1;
            num1 = (int) num3 * -985233652 ^ -1739500617;
            continue;
          case 90:
label_84:
            flag3 = flag1;
            num1 = 277410711;
            continue;
          case 92:
            ch4 = JSONNode.\u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮(aJSON, num2);
            num1 = (int) num3 * -152174115 ^ 495845748;
            continue;
          case 93:
            num1 = (int) num3 * -978718698 ^ -1525932899;
            continue;
          case 94:
            ch3 = ch2;
            int num25 = ch3 <= 'f' ? -1678319583 : (num25 = -705678111);
            num1 = num25 ^ (int) num3 * 1044728692;
            continue;
          case 95:
            num1 = (int) num3 * -131959846 ^ 1151790184;
            continue;
          case 96:
            flag4 = flag1;
            num1 = 874122544;
            continue;
          case 97:
            num1 = (int) num3 * 289502608 ^ 228809767;
            continue;
          case 98:
            num1 = 1711633644;
            continue;
          case 100:
            flag9 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -615557496 ^ -377200897;
            continue;
          case 101:
            num1 = 197184187;
            continue;
          case 102:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1473203465;
            continue;
          case 103:
            int num26 = !flag6 ? 279368775 : (num26 = 1101112975);
            num1 = num26 ^ (int) num3 * -2142727133;
            continue;
          case 104:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 871327379;
            continue;
          case 105:
            int num27 = ch1 != ':' ? -1527549993 : (num27 = -1732786273);
            num1 = num27 ^ (int) num3 * 1835571880;
            continue;
          case 106:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, "\b");
            num1 = 1374361822;
            continue;
          case 107:
label_57:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, "\t");
            num1 = 1374361822;
            continue;
          case 108:
            num1 = (int) num3 * -2142211767 ^ -1638769613;
            continue;
          case 109:
            num2 += 4;
            num1 = (int) num3 * 620816497 ^ -1455212157;
            continue;
          case 110:
            num1 = 672455514;
            continue;
          case 111:
            int num28;
            num1 = num28 = ch1 == '"' ? 497053841 : (num28 = 1465730907);
            continue;
          case 112:
            num1 = (int) num3 * 282421275 ^ -1567744929;
            continue;
          case 113:
            int num29;
            num1 = num29 = num2 >= JSONNode.\u202A‍⁮‎‮‬⁫‎‌⁮​‭​​‬⁮‭‎​‭⁬‍‏‎⁪⁯‍⁫⁫‭⁭​​‌‮‍‍⁯‬⁬‮(aJSON) ? 2772106 : (num29 = 577260079);
            continue;
          case 114:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, JSONNode.\u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 817503242 ^ -539319339;
            continue;
          case 115:
            int num30;
            num1 = num30 = ch1 != '{' ? 1612995619 : (num30 = 1289930483);
            continue;
          case 116:
            int num31;
            num1 = num31 = !flag1 ? 1626261092 : (num31 = 2145293916);
            continue;
          case 117:
            aKey = JSONNode.\u202E⁯‌‎‏‬‫⁯‮‏‭‌‮‌⁬⁪‍‭⁬‍‌‭⁮‎‍⁫⁬‍​⁬​⁯⁪‏⁬​‬⁯‫‬‮(aKey);
            int num32 = jsonNode1 is JSONArray ? -1582072917 : (num32 = -345538885);
            num1 = num32 ^ (int) num3 * -315762830;
            continue;
          case 118:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1346814334 ^ 1070550833;
            continue;
          case 119:
            aKey = "";
            num1 = 174463110;
            continue;
          case 120:
            num1 = (int) num3 * -2101811378 ^ -1983838602;
            continue;
          case 121:
            num1 = (int) num3 * 1536186083 ^ 631694246;
            continue;
          case 122:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, JSONNode.\u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 436180917 ^ -1741704635;
            continue;
          case 123:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 404803479 ^ 560508779;
            continue;
          case 124:
            num1 = 2132429463;
            continue;
          case 125:
            flag8 = jsonNode1 != (object) null;
            num1 = (int) num3 * 844938664 ^ -799290482;
            continue;
          case 126:
            aItem = "";
            num1 = (int) num3 * -124684976 ^ 112808340;
            continue;
          case (uint) sbyte.MaxValue:
            num1 = (int) num3 * -2133815803 ^ -1331699045;
            continue;
          case 128:
            flag11 = flag1;
            num1 = (int) num3 * 1005039566 ^ 1166140075;
            continue;
          case 129:
            aKey = "";
            num1 = 602076533;
            continue;
          case 130:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 239879371 ^ -536909357;
            continue;
          case 131:
            aKey = aItem;
            num1 = 2043397375;
            continue;
          case 132:
            int num33;
            num1 = num33 = ch1 != ',' ? 813775015 : (num33 = 1603302847);
            continue;
          case 133:
            int num34 = !flag8 ? -531899795 : (num34 = -1201036382);
            num1 = num34 ^ (int) num3 * -825691237;
            continue;
          case 134:
            aItem = "";
            num1 = (int) num3 * 1930076499 ^ -1659008413;
            continue;
          case 135:
label_26:
            ++num2;
            num1 = 1410680243;
            continue;
          case 136:
            int num35;
            num1 = num35 = ch3 == 'f' ? 1443007039 : (num35 = 674073899);
            continue;
          case 137:
            num1 = (int) num3 * 1112177876 ^ 1378711985;
            continue;
          case 138:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1925737989 ^ 1809314462;
            continue;
          case 139:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, JSONNode.\u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1878453462 ^ -1802614718;
            continue;
          case 140:
            num1 = (int) num3 * 1194786819 ^ -943558020;
            continue;
          case 141:
            flag13 = JSONNode.\u206E⁪⁯⁫‍‪‬‏⁫⁭‍‮‪⁫‍⁮‎⁯‎‍‏⁮‏‫⁭⁭‫‬‭‫‪⁬‫⁪​​⁪‏‍‭‮(aKey, "");
            num1 = 25913856;
            continue;
          case 142:
            aItem = JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * 2131276921 ^ -1468785664;
            continue;
          case 143:
            int num36;
            num1 = num36 = jsonNodeStack.Count == 0 ? 1830335802 : (num36 = 172749652);
            continue;
          case 144:
            int num37 = !flag11 ? 489252891 : (num37 = 2131500733);
            num1 = num37 ^ (int) num3 * -35071822;
            continue;
          case 145:
            int num38;
            num1 = num38 = !JSONNode.\u206E⁪⁯⁫‍‪‬‏⁫⁭‍‮‪⁫‍⁮‎⁯‎‍‏⁮‏‫⁭⁭‫‬‭‫‪⁬‫⁪​​⁪‏‍‭‮(aKey, "") ? 2098125349 : (num38 = 486852725);
            continue;
          case 146:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -187560517 ^ 300884462;
            continue;
          case 147:
            num1 = (int) num3 * 2114103571 ^ 1629327452;
            continue;
          case 148:
            num1 = 1294647542;
            continue;
          case 149:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -750983246 ^ -404627048;
            continue;
          case 150:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1235117904 ^ -2081372494;
            continue;
          case 151:
label_38:
            int num39;
            num1 = num39 = flag1 ? 1959315880 : (num39 = 88032784);
            continue;
          default:
            goto label_152;
        }
      }
label_56:
      throw JSONNode.\u206D⁫⁬‭⁬⁪‮⁭⁪‪⁭‫‎​‮‪‭⁫‭‪⁭​⁫⁮‮‮⁬​‫‏⁭‎⁬⁭‏⁬​‎‮‮("JSON Parse: Too many closing brackets");
label_86:
      throw JSONNode.\u206D⁫⁬‭⁬⁪‮⁭⁪‪⁭‫‎​‮‪‭⁫‭‪⁭​⁫⁮‮‮⁬​‫‏⁭‎⁬⁭‏⁬​‎‮‮("JSON Parse: Quotation marks seems to be messed up.");
label_152:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 379502891;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1243866658)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            aWriter = JSONNode.\u200C‭‎⁪⁯⁯​‮‏⁬‌‫​⁮‫‮‫⁯‫‮⁮‪‬‍‍‌‮‮‌‎‪⁭‭‎⁫‏​‌‮‎‮(aData);
            num1 = (int) num2 * -1122581703 ^ -335532996;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Serialize(aWriter);
            num1 = (int) num2 * 13929406 ^ -2030130162;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206D⁫⁬‭⁬⁪‮⁭⁪‪⁭‫‎​‮‪‭⁫‭‪⁭​⁫⁮‮‮⁬​‫‏⁭‎⁬⁭‏⁬​‎‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206D⁫⁬‭⁬⁪‮⁭⁪‪⁭‫‎​‮‪‭⁫‭‪⁭​⁫⁮‮‮⁬​‫‏⁭‎⁬⁭‏⁬​‎‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206D⁫⁬‭⁬⁪‮⁭⁪‪⁭‫‎​‮‪‭⁫‭‪⁭​⁫⁮‮‮⁬​‫‏⁭‎⁬⁭‏⁬​‎‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u202E‭⁫‍‭‬⁬‪‬⁫‪‪⁬⁫⁮⁪‎⁭⁮‏⁫‌‌​‫⁮⁭‮⁮⁪‬‎⁫​​⁪⁮‪‌‏‮(JSONNode.\u200B‌⁫⁮⁭⁪‮⁬‎⁭‌‌‮‌‭⁫‌‮‪‭⁫‬‌‍‌‮⁮⁯⁮⁫‭‮⁭⁪‎‌‍⁪‪‎‮((FileSystemInfo) JSONNode.\u202D‏‎⁪⁪​⁯‮⁬⁪‭‭⁬‎‍⁮‬⁮⁫‪⁫⁭‫‮‏⁫‪⁮‪‫‏⁭‪‍⁪⁬⁭‬⁯‎‮(JSONNode.\u206D‍‌‌⁬‮‮⁪​‭‮⁯⁬⁯‌‍‏‏⁯‏‍⁮⁬⁮⁬⁯⁬⁮⁭⁯‭‏‍‪‪‌⁭‍​‮‮(aFileName))));
      FileStream aData = JSONNode.\u206B‫⁪⁫⁭‍‭⁭⁭‪​⁫⁪⁬‫⁬⁮⁭⁮⁪‌‭​‬⁯‫⁬‮‭⁯⁮⁮⁮‮⁯‌⁯‭‎‎‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 743642722;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 2138130835)) % 4U)
            {
              case 0:
                num1 = (int) num2 * 328725345 ^ 1369292088;
                continue;
              case 1:
                JSONNode.\u200D‬‌‭⁭‪‍⁪‬⁪‭‬‭‭‭‍⁪‫‫‮⁬‎‮‬⁭‎‮‍‮‏⁫‍‪⁮‬‍‎⁬⁯⁮‮((IDisposable) aData);
                num1 = (int) num2 * -1330388422 ^ -1513814943;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206C⁪‏‫⁯⁪‏‌⁭‭​‎‭‪⁫‍‫‫⁭‍‪‮⁬​‭⁫⁫‬‪‭‏​‬‮‍⁮‫‭‭‌‮();
      try
      {
label_2:
        int num1 = -574387485;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -117917112)) % 4U)
          {
            case 0:
              goto label_2;
            case 2:
              JSONNode.\u200D‌‌⁭‍​‪⁫‫⁮‏​‮‪⁬⁮‍‍⁭‪⁪‎⁬‎‍‎‮‍‍​‭​⁯⁪⁮⁬‌‫⁫⁪‮((Stream) aData, 0L);
              num1 = (int) num2 * 627337133 ^ 140946739;
              continue;
            case 3:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -82113136 ^ 2084100518;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return JSONNode.\u202C⁮‏⁬‎⁬‫‮⁫⁯⁪⁯‏​‎‏‫‍‫​​‍‌⁭‫​‎‭‫⁫⁮‎⁫‭⁫⁪‮⁪⁬⁪‮(JSONNode.\u202B‭⁮⁮‎‎⁮‮‫⁮⁬⁬‍‪‌‏​⁭‌‬‌‌​‮⁯‪⁪‭​⁮‮‏​⁫​‍‬‍‎‌‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -2026673919;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -117917112)) % 4U)
            {
              case 0:
                num3 = (int) num4 * 695706875 ^ 672578751;
                continue;
              case 1:
                JSONNode.\u200D‬‌‭⁭‪‍⁪‬⁪‭‬‭‭‭‍⁪‫‫‮⁬‎‮‬⁭‎‮‍‮‏⁫‍‪⁮‬‍‎⁬⁯⁮‮((IDisposable) aData);
                num3 = (int) num4 * -2032614057 ^ 571670847;
                continue;
              case 2:
                goto label_8;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206F​‎⁫‎⁮⁪‮‪​‏‌‏⁫⁬‫⁪⁭​⁬‎⁫‎‬​‍‮⁭⁮‮⁭‎‫‎‫⁫‍⁪‭⁭‮(aReader);
label_1:
      int num1 = 391013773;
      JSONBinaryTag jsonBinaryTag2;
      int num2;
      JSONArray jsonArray;
      JSONBinaryTag jsonBinaryTag3;
      int num3;
      JSONNode jsonNode;
      int num4;
      string aKey;
      JSONClass jsonClass;
      int num5;
      bool flag;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 993342810)) % 42U)
        {
          case 0:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F⁭‏⁭⁬⁬‪‮‮⁫‎‏‏‏⁪⁮⁬‍‭⁪‮‮‏‬‪⁯‮⁬⁫‮⁯​⁯‎⁮‬‪⁪‫‪‮(aReader));
            num1 = (int) num6 * 605963382 ^ -1322711587;
            continue;
          case 1:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1103726047;
            continue;
          case 2:
            num5 = JSONNode.\u206A⁬‭‫‍⁪‮‏⁪⁫​⁮‎‭⁪‫‮​‪‪‮‌‏‎‪‏⁫‭‫⁭‏‭⁪⁬‎‌‍‪‍‮(aReader);
            jsonClass = new JSONClass();
            num4 = 0;
            num1 = (int) num6 * 1144051590 ^ 1116169679;
            continue;
          case 3:
            num1 = (int) num6 * 1464860260 ^ 455347869;
            continue;
          case 4:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_4;
              case JSONBinaryTag.Class:
                goto label_20;
              case JSONBinaryTag.Value:
                goto label_14;
              case JSONBinaryTag.IntValue:
                goto label_39;
              case JSONBinaryTag.DoubleValue:
                goto label_10;
              case JSONBinaryTag.BoolValue:
                goto label_38;
              case JSONBinaryTag.FloatValue:
                goto label_13;
              default:
                num1 = (int) num6 * 1147288233 ^ -1603274014;
                continue;
            }
          case 6:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C‭⁯⁪‮‌​​‪⁫⁪⁪‍⁯‍‪‏‍‫‪‭⁭⁯‬‪‏​‏‭⁯‍‪⁭‎‬⁭‫‌‫⁭‮(aReader));
            num1 = (int) num6 * -125027697 ^ -162916071;
            continue;
          case 7:
            ++num4;
            num1 = (int) num6 * 1662445362 ^ -34886387;
            continue;
          case 8:
            num1 = (int) num6 * -1150603502 ^ 534857955;
            continue;
          case 9:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A⁬‭‫‍⁪‮‏⁪⁫​⁮‎‭⁪‫‮​‪‪‮‌‏‎‪‏⁫‭‫⁭‏‭⁪⁬‎‌‍‪‍‮(aReader));
            num1 = (int) num6 * -1234515422 ^ 702686857;
            continue;
          case 10:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * -52307469 ^ 446046398;
            continue;
          case 11:
label_4:
            num1 = 496841959;
            continue;
          case 12:
            ++num3;
            num1 = (int) num6 * -1641755492 ^ -864868163;
            continue;
          case 13:
            goto label_1;
          case 14:
label_13:
            num1 = 1890714792;
            continue;
          case 15:
            num1 = (int) num6 * 406610345 ^ -299600108;
            continue;
          case 16:
            num1 = (int) num6 * -302386167 ^ 914079758;
            continue;
          case 17:
            flag = num4 < num5;
            num1 = 682704786;
            continue;
          case 18:
            num1 = (int) num6 * 1645157824 ^ -2009070847;
            continue;
          case 19:
            num1 = (int) num6 * -1141529802 ^ 2009967285;
            continue;
          case 20:
label_38:
            num1 = 1920958910;
            continue;
          case 21:
            num2 = JSONNode.\u206A⁬‭‫‍⁪‮‏⁪⁫​⁮‎‭⁪‫‮​‪‪‮‌‏‎‪‏⁫‭‫⁭‏‭⁪⁬‎‌‍‪‍‮(aReader);
            jsonArray = new JSONArray();
            num1 = (int) num6 * -173996214 ^ -491094704;
            continue;
          case 22:
label_14:
            num1 = 889256650;
            continue;
          case 23:
            num1 = (int) num6 * -1878952917 ^ 1557684636;
            continue;
          case 24:
label_39:
            num1 = 1297249103;
            continue;
          case 25:
            int num7;
            num1 = num7 = num3 < num2 ? 1032324317 : (num7 = 565076221);
            continue;
          case 26:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -1032290832 ^ -1091084851;
            continue;
          case 27:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -1308169320 ^ -1784556878;
            continue;
          case 28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D‭‫‭⁮‏⁭‌‏⁬‪‏‏‏‬‮‎‬‍​‎⁪‭⁬‮⁫‏​⁬⁪‬‬‪‍‍⁪⁪⁭‮(aReader));
            num1 = (int) num6 * 641430778 ^ 574199841;
            continue;
          case 29:
            num1 = (int) num6 * -948656330 ^ -881015301;
            continue;
          case 30:
            num3 = 0;
            num1 = (int) num6 * -351142023 ^ -1812175141;
            continue;
          case 31:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -717601903 ^ 698093255;
            continue;
          case 32:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -1138124778 ^ -1069216;
            continue;
          case 33:
            aKey = JSONNode.\u202D‭‫‭⁮‏⁭‌‏⁬‪‏‏‏‬‮‎‬‍​‎⁪‭⁬‮⁫‏​⁬⁪‬‬‪‍‍⁪⁪⁭‮(aReader);
            num1 = 1060759938;
            continue;
          case 34:
            goto label_5;
          case 35:
            num1 = (int) num6 * 1338361236 ^ 91849740;
            continue;
          case 36:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A‌‌⁯⁪‬⁮‫‬‍⁫‎‬⁭⁪‌⁬‏⁬‍⁭‭‭‍⁫‌‬‭​⁬⁫⁭⁯⁯⁫‮⁮⁪⁭⁭‮(aReader));
            num1 = (int) num6 * 1409454097 ^ 1722920613;
            continue;
          case 37:
            num1 = (int) num6 * -653711250 ^ -786251689;
            continue;
          case 38:
label_20:
            num1 = 1040420994;
            continue;
          case 39:
label_10:
            num1 = 779980194;
            continue;
          case 40:
            int num8 = !flag ? 396899406 : (num8 = 1400079991);
            num1 = num8 ^ (int) num6 * 1852054615;
            continue;
          case 41:
            num1 = (int) num6 * 1495280954 ^ -1212804565;
            continue;
          default:
            goto label_44;
        }
      }
label_5:
      throw JSONNode.\u206D⁫⁬‭⁬⁪‮⁭⁪‪⁭‫‎​‮‪‭⁫‭‪⁭​⁫⁮‮‮⁬​‫‏⁭‎⁬⁭‏⁬​‎‮‮(JSONNode.\u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_44:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206D⁫⁬‭⁬⁪‮⁭⁪‪⁭‫‎​‮‪‭⁫‭‪⁭​⁫⁮‮‮⁬​‫‏⁭‎⁬⁭‏⁬​‎‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206D⁫⁬‭⁬⁪‮⁭⁪‪⁭‫‎​‮‪‭⁫‭‪⁭​⁫⁮‮‮⁬​‫‏⁭‎⁬⁭‏⁬​‎‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206D⁫⁬‭⁬⁪‮⁭⁪‪⁭‫‎​‮‪‭⁫‭‪⁭​⁫⁮‮‮⁬​‫‏⁭‎⁬⁭‏⁬​‎‮‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202A‪⁪‮‫‌‬‭‫‮⁯‍⁯⁮⁬‭‏‌​‫‭‎‪‏⁮‎⁬‎⁯⁭‬⁭‮⁪‮‮⁭‫‭‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 46865810;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2143056156)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 865487271 ^ -292961484;
              continue;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = 189133750;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 2143056156)) % 3U)
            {
              case 0:
                goto label_6;
              case 2:
                JSONNode.\u200D‬‌‭⁭‪‍⁪‬⁪‭‬‭‭‭‍⁪‫‫‮⁬‎‮‬⁭‎‮‍‮‏⁫‍‪⁮‬‍‎⁬⁯⁮‮((IDisposable) aReader);
                num3 = (int) num4 * 2031389686 ^ 710329698;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202A​‮‫​​‪‭⁬‌‬‍⁮‫‮‫⁮⁪​⁯⁮​‭‮⁫‮‪‫‎⁬⁬​⁫‬‏‎⁮‍‍⁬‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1615413555;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1929386013)) % 3U)
          {
            case 0:
              goto label_2;
            case 2:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * 1067183622 ^ 1494466210;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -943037382;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1929386013)) % 4U)
            {
              case 1:
                JSONNode.\u200D‬‌‭⁭‪‍⁪‬⁪‭‬‭‭‭‍⁪‫‫‮⁬‎‮‬⁭‎‮‍‮‏⁫‍‪⁮‬‍‎⁬⁯⁮‮((IDisposable) aData);
                num3 = (int) num4 * -295821236 ^ -1352887376;
                continue;
              case 2:
                goto label_6;
              case 3:
                num3 = (int) num4 * 462506880 ^ -268489997;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -1087026151;
      byte[] numArray;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -6946366)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            numArray = JSONNode.\u202C‍⁫‍​‪‎‌‪‪⁫‭‫⁪⁪‪‬‫⁬⁫‭‌⁪‌‌⁬⁬‪‌​‏‫‏‍⁯​‎‮‌⁫‮(aBase64);
            num1 = (int) num2 * -2066271207 ^ 37038976;
            continue;
          case 2:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 2137122500 ^ -840857901;
            continue;
          case 4:
            num1 = (int) num2 * -1819412752 ^ -1783889172;
            continue;
          case 5:
            aData = JSONNode.\u206C⁯⁪⁪‍⁫⁭⁮‬‭⁬‏‮⁬⁪‬​​‭‭⁫‌‮⁫‪‍⁮‌‎⁯⁭‏‪‎‪⁫‬‌⁪‮‮(numArray);
            JSONNode.\u200D‌‌⁭‍​‪⁫‫⁮‏​‮‪⁬⁮‍‍⁭‪⁪‎⁬‎‍‎‮‍‍​‭​⁯⁪⁮⁬‌‫⁫⁪‮((Stream) aData, 0L);
            num1 = (int) num2 * -895115316 ^ 244962610;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode;
    }

    static CultureInfo \u202C⁯‭‪‍‮‫⁯⁫⁯‪⁭‫⁪‪⁬‍‪⁮‮⁫‭‫‬⁪‬‏‭‮⁭‎‪​‍⁪⁫‍⁯‮‫‮() => CultureInfo.InvariantCulture;

    static bool \u202A⁪‭⁭⁬‭⁯‮⁮‎‌‬⁮‏⁮‬‪‬⁭⁯‍​⁭‪⁭‬‬‬‬⁯‪‫‌⁯‍‬‭‮⁬⁭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206D⁮⁮⁪⁪⁮‍‏‌‮‏‭‍‏‏‎‬‮‫⁫‎‌‍​⁮⁫​‏⁫⁫⁯‎⁯‪‮‌⁬‭‫⁪‮() => base.GetHashCode();

    static char \u200F‌‎‭‫⁫‭⁬‎⁬⁭‪​⁭‪​‪⁫⁭⁭‎⁭‪⁭​‬⁭‍‫⁬‍‍‮‮‍⁬‬‏‭‬‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206C⁮‭⁯‌⁬‌⁯‬⁯‭‎⁭‎⁭‭‪⁯​⁪‏⁪⁬⁮​‫‮⁬‎‎⁪⁯​‪⁫⁯‬⁯‎‫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202A‍⁮‎‮‬⁫‎‌⁮​‭​​‬⁮‭‎​‭⁬‍‏‎⁪⁯‍⁫⁫‭⁭​​‌‮‍‍⁯‬⁬‮([In] string obj0) => obj0.Length;

    static string \u202E⁯‌‎‏‬‫⁯‮‏‭‌‮‌⁬⁪‍‭⁬‍‌‭⁮‎‍⁫⁬‍​⁬​⁯⁪‏⁬​‬⁯‫‬‮([In] string obj0) => obj0.Trim();

    static bool \u206E⁪⁯⁫‍‪‬‏⁫⁭‍‮‪⁫‍⁮‎⁯‎‍‏⁮‏‫⁭⁭‫‬‭‫‪⁬‫⁪​​⁪‏‍‭‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206D⁫⁬‭⁬⁪‮⁭⁪‪⁭‫‎​‮‪‭⁫‭‪⁭​⁫⁮‮‮⁬​‫‏⁭‎⁬⁭‏⁬​‎‮‮([In] string obj0) => new Exception(obj0);

    static string \u200B‬⁬‬‪‪⁮‍​‭‫‭‪‬‪⁯‍⁪‭‬​⁭‌‭‪‭‪‮‏‪⁯‬‫⁮‍‮‎‮‏⁬‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200C‭‎⁪⁯⁯​‮‏⁬‌‫​⁮‫‮‫⁯‫‮⁮‪‬‍‍‌‮‮‌‎‪⁭‭‎⁫‏​‌‮‎‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206D‍‌‌⁬‮‮⁪​‭‮⁯⁬⁯‌‍‏‏⁯‏‍⁮⁬⁮⁬⁯⁬⁮⁭⁯‭‏‍‪‪‌⁭‍​‮‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202D‏‎⁪⁪​⁯‮⁬⁪‭‭⁬‎‍⁮‬⁮⁫‪⁫⁭‫‮‏⁫‪⁮‪‫‏⁭‪‍⁪⁬⁭‬⁯‎‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200B‌⁫⁮⁭⁪‮⁬‎⁭‌‌‮‌‭⁫‌‮‪‭⁫‬‌‍‌‮⁮⁯⁮⁫‭‮⁭⁪‎‌‍⁪‪‎‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202E‭⁫‍‭‬⁬‪‬⁫‪‪⁬⁫⁮⁪‎⁭⁮‏⁫‌‌​‫⁮⁭‮⁮⁪‬‎⁫​​⁪⁮‪‌‏‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206B‫⁪⁫⁭‍‭⁭⁭‪​⁫⁪⁬‫⁬⁮⁭⁮⁪‌‭​‬⁯‫⁬‮‭⁯⁮⁮⁮‮⁯‌⁯‭‎‎‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200D‬‌‭⁭‪‍⁪‬⁪‭‬‭‭‭‍⁪‫‫‮⁬‎‮‬⁭‎‮‍‮‏⁫‍‪⁮‬‍‎⁬⁯⁮‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206C⁪‏‫⁯⁪‏‌⁭‭​‎‭‪⁫‍‫‫⁭‍‪‮⁬​‭⁫⁫‬‪‭‏​‬‮‍⁮‫‭‭‌‮() => new MemoryStream();

    static void \u200D‌‌⁭‍​‪⁫‫⁮‏​‮‪⁬⁮‍‍⁭‪⁪‎⁬‎‍‎‮‍‍​‭​⁯⁪⁮⁬‌‫⁫⁪‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202B‭⁮⁮‎‎⁮‮‫⁮⁬⁬‍‪‌‏​⁭‌‬‌‌​‮⁯‪⁪‭​⁮‮‏​⁫​‍‬‍‎‌‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202C⁮‏⁬‎⁬‫‮⁫⁯⁪⁯‏​‎‏‫‍‫​​‍‌⁭‫​‎‭‫⁫⁮‎⁫‭⁫⁪‮⁪⁬⁪‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206F​‎⁫‎⁮⁪‮‪​‏‌‏⁫⁬‫⁪⁭​⁬‎⁫‎‬​‍‮⁭⁮‮⁭‎‫‎‫⁫‍⁪‭⁭‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206A⁬‭‫‍⁪‮‏⁪⁫​⁮‎‭⁪‫‮​‪‪‮‌‏‎‪‏⁫‭‫⁭‏‭⁪⁬‎‌‍‪‍‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202D‭‫‭⁮‏⁭‌‏⁬‪‏‏‏‬‮‎‬‍​‎⁪‭⁬‮⁫‏​⁬⁪‬‬‪‍‍⁪⁪⁭‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u206A‌‌⁯⁪‬⁮‫‬‍⁫‎‬⁭⁪‌⁬‏⁬‍⁭‭‭‍⁫‌‬‭​⁬⁫⁭⁯⁯⁫‮⁮⁪⁭⁭‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200F⁭‏⁭⁬⁬‪‮‮⁫‎‏‏‏⁪⁮⁬‍‭⁪‮‮‏‬‪⁯‮⁬⁫‮⁯​⁯‎⁮‬‪⁪‫‪‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u200C‭⁯⁪‮‌​​‪⁫⁪⁪‍⁯‍‪‏‍‫‪‭⁭⁯‬‪‏​‏‭⁯‍‪⁭‎‬⁭‫‌‫⁭‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202A‪⁪‮‫‌‬‭‫‮⁯‍⁯⁮⁬‭‏‌​‫‭‎‪‏⁮‎⁬‎⁯⁭‬⁭‮⁪‮‮⁭‫‭‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202A​‮‫​​‪‭⁬‌‬‍⁮‫‮‫⁮⁪​⁯⁮​‭‮⁫‮‪‫‎⁬⁬​⁫‬‏‎⁮‍‍⁬‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202C‍⁫‍​‪‎‌‪‪⁫‭‫⁪⁪‪‬‫⁬⁫‭‌⁪‌‌⁬⁬‪‌​‏‫‏‍⁯​‎‮‌⁫‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206C⁯⁪⁪‍⁫⁭⁮‬‭⁬‏‮⁬⁪‬​​‭‭⁫‌‮⁫‪‍⁮‌‎⁯⁭‏‪‎‪⁫‬‌⁪‮‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
