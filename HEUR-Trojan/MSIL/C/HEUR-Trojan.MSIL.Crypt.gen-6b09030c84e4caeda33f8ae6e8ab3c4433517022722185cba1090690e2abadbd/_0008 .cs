// Decompiled with JetBrains decompiler
// Type:  
// Assembly: CategoryMembershipDataEntryFiel, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 56B8B728-7F83-4F18-73AD-C5D42FD11077
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-6b09030c84e4caeda33f8ae6e8ab3c4433517022722185cba1090690e2abadbd.exe

using Core.Infrastructure.Logging;
using DomainObjects;
using Repository;
using System;
using System.Linq;
using System.Linq.Expressions;

public sealed class \u0008\u2009 : \u0003\u2008<IShow, \u0003\u2007>, \u0002\u2009
{
  private LogWriter \u0002 = new LogWriter();

  public \u0008\u2009(\u0005\u2008 _param1)
    : base(_param1)
  {
  }

  public \u0008\u2009(IDatabaseFactory _param1)
    : base(_param1)
  {
  }

  private IQueryable<IShow> \u0002() => base.\u0002().\u0005\u2008​\u2008\u0002().Where<IShow>((Expression<Func<IShow, bool>>) (show => show.\u000E\u2006​\u2008a == false));

  public IQueryable<IShow> \u0002\u2009​\u2008\u0002() => (IQueryable<IShow>) this.\u0002().OrderBy<IShow, DateTime?>((Expression<Func<IShow, DateTime?>>) (show => show.ShowDate));

  public IShow \u0002\u2009​\u2008\u0002(Guid _param1)
  {
    \u0008\u2009.\u0003 obj = new \u0008\u2009.\u0003();
    obj.a = _param1;
    return this.\u0002().SingleOrDefault<IShow>((Expression<Func<IShow, bool>>) (show => show.ShowId == obj.a));
  }

  public IQueryable<IShow> \u0002\u2009​\u2008\u0003(DateTime _param1)
  {
    \u0008\u2009.\u0005 obj = new \u0008\u2009.\u0005();
    obj.a = _param1;
    return (IQueryable<IShow>) this.\u0002().Where<IShow>((Expression<Func<IShow, bool>>) (show => show.ShowDate <= (DateTime?) obj.a)).OrderBy<IShow, int?>((Expression<Func<IShow, int?>>) (show => show.Order));
  }

  public IQueryable<IShow> \u0002\u2009​\u2008\u0002(DateTime _param1)
  {
    \u0008\u2009.\u0008 obj = new \u0008\u2009.\u0008();
    obj.a = _param1;
    return (IQueryable<IShow>) this.\u0002().Where<IShow>((Expression<Func<IShow, bool>>) (show => show.ShowDate >= (DateTime?) obj.a)).OrderBy<IShow, int?>((Expression<Func<IShow, int?>>) (show => show.Order));
  }

  public IShow \u0002\u2009​\u2008\u0002(DateTime _param1)
  {
    \u0008\u2009.\u0006 obj = new \u0008\u2009.\u0006();
    obj.a = _param1;
    return this.\u0002().SingleOrDefault<IShow>((Expression<Func<IShow, bool>>) (show => show.ShowDate == (DateTime?) obj.a));
  }

  public override void \u0002\u2009​\u2008\u0002(IShow _param1)
  {
    \u0008\u2009.\u000E obj = new \u0008\u2009.\u000E();
    obj.a = _param1;
    \u0008\u2002.\u0002.\u0002((object) obj.a, \u0008\u200A.\u0002(914293003));
    obj.a.set_CreatedDate(DateTime.Now);
    if (this.\u0002().Any<IShow>((Expression<Func<IShow, bool>>) (show => show.ShowId == obj.a.ShowId)))
    {
      this.\u0002.WriteLine(\u0008\u200A.\u0002(914293133).\u0002(new object[1]
      {
        (object) obj.a.ShowId
      }));
      throw new \u0006\u2001(\u0008\u200A.\u0002(914293133).\u0002(new object[1]
      {
        (object) obj.a.ShowId
      }));
    }
    base.\u0002\u2009​\u2008\u0002(obj.a);
  }

  public override void \u0002\u2009​\u2008\u0003(IShow _param1)
  {
    \u0008\u2002.\u0002.\u0002((object) _param1, \u0008\u200A.\u0002(914293003));
    base.\u0002\u2009​\u2008\u0003(_param1);
  }

  [Serializable]
  private sealed class \u0002
  {
    public static readonly \u0008\u2009.\u0002 \u0002 = new \u0008\u2009.\u0002();
  }

  private sealed class \u0003
  {
    public Guid a;
  }

  private sealed class \u0005
  {
    public DateTime a;
  }

  private sealed class \u0006
  {
    public DateTime a;
  }

  private sealed class \u0008
  {
    public DateTime a;
  }

  private sealed class \u000E
  {
    public IShow a;
  }
}
