// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: ASMNA, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 756C4858-C1DF-4594-BBF4-94321F458D9F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-b15de477cfbeebb8bbdc45f252c7c6bc6d2897ab737240c78a82a618f6e85508.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -1278061153;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1417812682)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1331433866 ^ -972808725;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1000128039;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1227447962)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -821588659 ^ -1261691467;
              continue;
            case 2:
              num1 = (int) num2 * -61785686 ^ -2133403726;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
        string str = "";
label_1:
        int num1 = -801399425;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -509826202)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 774029641 ^ 377049170;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
        int count = 0;
label_1:
        int num1 = -1505126080;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1453100010)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 999028523 ^ 1016537234;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
      this.Add("", aItem);
label_1:
      int num1 = 1536607146;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1011918992)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1377778242 ^ -1754861124;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -827253128;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1601309591)) % 4U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -1993661673 ^ 452783013;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -1074990167 ^ 2069964526;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -1214999599;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1179953630)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1097545095 ^ 822502379;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = 1234787009;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 834075307)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -933673284 ^ -1075376238;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = -1878022365;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1458818955)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1952579045 ^ -1475658588;
              continue;
            case 3:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * -1492121264 ^ 997098448;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = -534599428;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -127104211)) % 3U)
          {
            case 1:
              getDeepChildsD19.\u003C\u003E4__this = this;
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * -230679354 ^ 1803321680;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -1472830407;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1294515205)) % 3U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1672262013 ^ 1135048174;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -121313632;
        int asInt;
        int result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -413039795)) % 6U)
          {
            case 0:
              asInt = result;
              num1 = (int) num2 * -745658405 ^ -1856231266;
              continue;
            case 2:
              goto label_1;
            case 3:
              result = 0;
              int num3 = int.TryParse(this.Value, out result) ? -1274578775 : (num3 = -534017485);
              num1 = num3 ^ (int) num2 * -701380242;
              continue;
            case 4:
              asInt = 0;
              num1 = -463214168;
              continue;
            case 5:
              num1 = (int) num2 * 1674862375 ^ -1579942501;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
label_1:
        int num1 = -208177410;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -43361939)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -1230757052 ^ 679828449;
              continue;
            case 1:
              asFloat = result;
              num1 = (int) num2 * -626563505 ^ 1609258000;
              continue;
            case 2:
              asFloat = 0.0f;
              num1 = -99813223;
              continue;
            case 3:
              goto label_1;
            case 5:
              int num3 = !float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200E‫⁪‌‌​⁯⁬​​‌⁬⁯‌‬‌‫‪⁬‌‫⁭​‬‮‬⁬‎⁯‬‬‎⁮‍‎‌‎‎‪‮(), out result) ? 1257734282 : (num3 = 1002877343);
              num1 = num3 ^ (int) num2 * -883311259;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = 1297800188;
        double result;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 902959321)) % 8U)
          {
            case 1:
              asDouble = 0.0;
              num1 = 1588352447;
              continue;
            case 2:
              asDouble = result;
              num1 = (int) num2 * -1667762338 ^ 1752596709;
              continue;
            case 3:
              goto label_1;
            case 4:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -291600879 ^ 1396214394;
              continue;
            case 5:
              result = 0.0;
              num1 = (int) num2 * -774690158 ^ -337128321;
              continue;
            case 6:
              num1 = (int) num2 * 1700326169 ^ -1827073185;
              continue;
            case 7:
              int num3 = flag ? -587378788 : (num3 = -1322187377);
              num1 = num3 ^ (int) num2 * -712977311;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1670951493;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 127244004)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1788331106 ^ -1043413286;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -576551928;
        bool flag;
        bool result;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -859645668)) % 8U)
          {
            case 0:
              flag = bool.TryParse(this.Value, out result);
              num1 = (int) num2 * 1648304401 ^ 942787170;
              continue;
            case 1:
              asBool = !JSONNode.\u206E‌‬‏⁯‪‬‌‏‭⁯⁬‬‭⁭‬‬⁪‬‬‌⁭‬‍​‪‭⁫⁬⁮‏⁭‬‮‪‌‭⁬‫‬‮(this.Value);
              num1 = -1262098417;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1421321262 ^ -1385552511;
              continue;
            case 4:
              result = false;
              num1 = (int) num2 * -1605014597 ^ -682446048;
              continue;
            case 5:
              asBool = result;
              num1 = (int) num2 * 1729638906 ^ -520984055;
              continue;
            case 6:
              int num3 = !flag ? 1473644325 : (num3 = 2123651785);
              num1 = num3 ^ (int) num2 * -1398195240;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 1819203030;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 621330820)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = 570485487;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1164745451;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1751689499)) % 3U)
          {
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * 434751211 ^ -1246572723;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
        JSONClass asObject = this as JSONClass;
label_1:
        int num1 = -1105387285;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1006352753)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 1445192462 ^ 1693009968;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -2089157882;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1888167687)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 734959778 ^ 524159281;
            continue;
          case 3:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 1561457176 ^ 1618801880;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 1196868969;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 49236000)) % 4U)
        {
          case 0:
            str2 = d.Value;
            break;
          case 1:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -2129543613 ^ 756340947;
              continue;
            }
            str2 = (string) null;
            break;
          case 3:
            goto label_1;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = 499890590;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 1452309872;
      bool flag;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1802391283)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            if (b == null)
            {
              num1 = (int) num2 * 1162151175 ^ -2036292557;
              continue;
            }
            num3 = 0;
            break;
          case 2:
            flag = (object) a == b;
            num1 = 584033144;
            continue;
          case 3:
            num1 = (int) num2 * 384301940 ^ -301262828;
            continue;
          case 4:
            flag = true;
            num1 = (int) num2 * -1839405834 ^ 1776954854;
            continue;
          case 6:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? 929072960 : (num4 = 805922074);
      }
label_11:
      return flag;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = 1658981974;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1577478883)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * 945317370 ^ -1556954263;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1552661333;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1152381351)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = (object) this == obj;
            num1 = (int) num2 * 1217610251 ^ 1766651626;
            continue;
          case 3:
            num1 = (int) num2 * 1740899122 ^ 1529473524;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u200B‌‏⁫‍​‪‎‬‫‭‏⁭‬​⁪‭‍‌‬‌‫‭⁬⁪⁬⁮⁯⁪‭⁪⁭‏‏‮⁮‭‎⁯‬‮();
label_1:
      int num1 = -280029523;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1874831104)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 2127155523 ^ -977471016;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 441383712;
      char ch1;
      char ch2;
      string str1;
      char ch3;
      int num2;
      string str2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 136654175)) % 33U)
        {
          case 0:
            num1 = (int) num3 * -1711942795 ^ -741505418;
            continue;
          case 1:
label_25:
            str1 = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(str1, "\\f");
            num1 = 1189494919;
            continue;
          case 2:
            ++num2;
            num1 = (int) num3 * 510763074 ^ -1349574294;
            continue;
          case 3:
            ch3 = JSONNode.\u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮(str2, num2);
            num1 = 1814974106;
            continue;
          case 4:
            num1 = (int) num3 * 1274262361 ^ -1323726543;
            continue;
          case 5:
label_34:
            str1 = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(str1, "\\r");
            num1 = 1151403100;
            continue;
          case 6:
label_27:
            str1 = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(str1, "\\b");
            num1 = 585019689;
            continue;
          case 7:
            str1 = "";
            num1 = (int) num3 * 2005155952 ^ -1430267568;
            continue;
          case 8:
            str3 = str1;
            num1 = (int) num3 * 402824414 ^ 822059165;
            continue;
          case 10:
            num1 = (int) num3 * -990444569 ^ -583709676;
            continue;
          case 11:
            num1 = (int) num3 * -2108001876 ^ 1313861947;
            continue;
          case 12:
            int num4;
            num1 = num4 = ch2 == '"' ? 1837950937 : (num4 = 92750885);
            continue;
          case 13:
            ch2 = ch1;
            num1 = (int) num3 * 1782360194 ^ -476710935;
            continue;
          case 14:
            int num5;
            num1 = num5 = num2 < JSONNode.\u200F⁭‪​​⁪⁮​‌‬‫⁫‫‭‪‬‌‫‌​‭‬‏‏⁬​⁭⁯‬⁮⁯‬⁮⁯⁮‬⁯‬‎⁬‮(str2) ? 377904425 : (num5 = 715982572);
            continue;
          case 15:
            num1 = (int) num3 * -630788313 ^ 1192652503;
            continue;
          case 16:
            str2 = aText;
            num1 = (int) num3 * 1390859191 ^ 116876812;
            continue;
          case 17:
label_6:
            str1 = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(str1, "\\n");
            num1 = 585019689;
            continue;
          case 18:
            int num6;
            num1 = num6 = ch2 == '\\' ? 1542273324 : (num6 = 1727158731);
            continue;
          case 19:
            goto label_1;
          case 20:
            num1 = (int) num3 * 239143534 ^ -1785825205;
            continue;
          case 21:
            num1 = (int) num3 * 358899504 ^ -2129245735;
            continue;
          case 22:
            num1 = (int) num3 * -1067237644 ^ -1732095859;
            continue;
          case 23:
            switch (ch2)
            {
              case '\b':
                goto label_27;
              case '\t':
                goto label_18;
              case '\n':
                goto label_6;
              case '\v':
                goto label_7;
              case '\f':
                goto label_25;
              case '\r':
                goto label_34;
              default:
                num1 = (int) num3 * 66498516 ^ 647706463;
                continue;
            }
          case 24:
            num1 = (int) num3 * 2045179236 ^ 1533370415;
            continue;
          case 25:
            str1 = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(str1, "\\\\");
            num1 = 1804748714;
            continue;
          case 26:
            ch1 = ch3;
            num1 = (int) num3 * -1399832200 ^ 1010308275;
            continue;
          case 27:
            str1 = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(str1, "\\\"");
            num1 = 15323504;
            continue;
          case 28:
            num1 = (int) num3 * 555234071 ^ 1993258000;
            continue;
          case 29:
label_7:
            str1 = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(str1, ch3.ToString());
            num1 = 585019689;
            continue;
          case 30:
            num1 = 1195654941;
            continue;
          case 31:
            num2 = 0;
            num1 = (int) num3 * -97316583 ^ 1789965274;
            continue;
          case 32:
label_18:
            str1 = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(str1, "\\t");
            num1 = 1456176228;
            continue;
          default:
            goto label_35;
        }
      }
label_35:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 1921621187;
      string aItem;
      int num2;
      char ch1;
      bool flag1;
      char ch2;
      JSONNode jsonNode1;
      Stack<JSONNode> jsonNodeStack;
      bool flag2;
      string aKey;
      bool flag3;
      bool flag4;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      char ch3;
      bool flag12;
      char ch4;
      bool flag13;
      bool flag14;
      bool flag15;
      bool flag16;
      JSONNode jsonNode2;
      char ch5;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 639147611)) % 153U)
        {
          case 0:
            int num4 = !flag7 ? 1098403641 : (num4 = 981462987);
            num1 = num4 ^ (int) num3 * 337859509;
            continue;
          case 1:
          case 14:
          case 45:
          case 83:
          case 94:
label_137:
            ++num2;
            num1 = 2137015740;
            continue;
          case 2:
            aKey = aItem;
            aItem = "";
            num1 = 1643463446;
            continue;
          case 3:
            flag7 = JSONNode.\u202A⁫⁭‮⁫⁪‭⁭⁬⁬‬‫‌⁬‌​‪‎​​‬‌‎⁪‫⁬‌⁭‎‫⁪‭‍⁪‌⁬⁭‪‭⁪‮(aKey, "");
            num1 = 1229866554;
            continue;
          case 4:
            num1 = (int) num3 * -1638594610 ^ 921701657;
            continue;
          case 5:
label_10:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, "\r");
            num1 = 855432466;
            continue;
          case 6:
            int num5 = flag14 ? 1882159718 : (num5 = 486808190);
            num1 = num5 ^ (int) num3 * -947296737;
            continue;
          case 7:
            flag6 = flag1;
            num1 = 249283472;
            continue;
          case 8:
            num1 = (int) num3 * 728639195 ^ -1514151595;
            continue;
          case 9:
label_132:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, ch5.ToString());
            num1 = 2029940471;
            continue;
          case 10:
            int num6 = !flag11 ? -834945542 : (num6 = -1907009113);
            num1 = num6 ^ (int) num3 * -620095174;
            continue;
          case 11:
            num1 = (int) num3 * -877810981 ^ 1345159902;
            continue;
          case 12:
            num1 = (int) num3 * 1556027123 ^ 1918989619;
            continue;
          case 13:
            jsonNodeStack.Pop();
            flag12 = JSONNode.\u202A⁫⁭‮⁫⁪‭⁭⁬⁬‬‫‌⁬‌​‪‎​​‬‌‎⁪‫⁬‌⁭‎‫⁪‭‍⁪‌⁬⁭‪‭⁪‮(aItem, "");
            num1 = 1613910082;
            continue;
          case 15:
            num1 = (int) num3 * 1538363561 ^ 845578388;
            continue;
          case 16:
            switch (ch2)
            {
              case '[':
                goto label_48;
              case '\\':
                goto label_14;
              case ']':
                goto label_69;
              default:
                num1 = 880991557;
                continue;
            }
          case 17:
            num1 = (int) num3 * 1293995837 ^ 1418199293;
            continue;
          case 18:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1879952008;
            continue;
          case 19:
            num1 = (int) num3 * 2097009157 ^ 470287489;
            continue;
          case 20:
            num1 = (int) num3 * -1010108382 ^ 2042852562;
            continue;
          case 21:
            int num7 = flag5 ? -1815526913 : (num7 = -537019840);
            num1 = num7 ^ (int) num3 * 1829704447;
            continue;
          case 22:
            num1 = (int) num3 * -1468954481 ^ 168652943;
            continue;
          case 23:
            int num8 = flag1 ? 356290142 : (num8 = 415062133);
            num1 = num8 ^ (int) num3 * -1194329803;
            continue;
          case 24:
label_111:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, JSONNode.\u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮(aJSON, num2).ToString());
            num1 = 490146844;
            continue;
          case 25:
            flag4 = flag1;
            num1 = 1968233193;
            continue;
          case 26:
            jsonNodeStack = new Stack<JSONNode>();
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * -1165798585 ^ 1469303436;
            continue;
          case 27:
            ch2 = ch3;
            num1 = (int) num3 * 276804801 ^ -1380674729;
            continue;
          case 28:
label_92:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, "\t");
            num1 = 1799258410;
            continue;
          case 29:
            flag1 = false;
            num1 = (int) num3 * -1232102083 ^ -121289686;
            continue;
          case 30:
            int num9 = !flag3 ? 1595759804 : (num9 = 10947204);
            num1 = num9 ^ (int) num3 * -310957324;
            continue;
          case 31:
            num1 = (int) num3 * -1932692651 ^ 1065831626;
            continue;
          case 32:
            int num10;
            num1 = num10 = num2 >= JSONNode.\u200F⁭‪​​⁪⁮​‌‬‫⁫‫‭‪‬‌‫‌​‭‬‏‏⁬​⁭⁯‬⁮⁯‬⁮⁯⁮‬⁯‬‎⁬‮(aJSON) ? 1539825031 : (num10 = 1072756360);
            continue;
          case 33:
            aKey = "";
            aItem = "";
            flag3 = jsonNodeStack.Count > 0;
            num1 = 1133431656;
            continue;
          case 34:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1067869064 ^ 370686675;
            continue;
          case 35:
            num1 = (int) num3 * -1594280392 ^ 408379268;
            continue;
          case 36:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 488003130 ^ -1258388742;
            continue;
          case 37:
            num1 = (int) num3 * 1881159116 ^ 1145398222;
            continue;
          case 38:
            int num11 = flag9 ? 1010149756 : (num11 = 445772238);
            num1 = num11 ^ (int) num3 * 818472472;
            continue;
          case 39:
            num1 = (int) num3 * -1611526866 ^ -822421260;
            continue;
          case 40:
            aKey = "";
            aItem = "";
            num1 = 1643463446;
            continue;
          case 41:
            num1 = (int) num3 * -169190286 ^ -326047315;
            continue;
          case 42:
            flag11 = JSONNode.\u202A⁫⁭‮⁫⁪‭⁭⁬⁬‬‫‌⁬‌​‪‎​​‬‌‎⁪‫⁬‌⁭‎‫⁪‭‍⁪‌⁬⁭‪‭⁪‮(aKey, "");
            num1 = 192922435;
            continue;
          case 43:
            goto label_44;
          case 44:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -613132942 ^ 1039451894;
            continue;
          case 46:
            aItem = "";
            num1 = (int) num3 * -2109180025 ^ -369195957;
            continue;
          case 47:
            num1 = (int) num3 * 299413427 ^ 851168823;
            continue;
          case 48:
            num1 = (int) num3 * -1782480508 ^ -1761681930;
            continue;
          case 49:
            int num12 = ch2 > ',' ? 1697612564 : (num12 = 687108665);
            num1 = num12 ^ (int) num3 * 699221368;
            continue;
          case 50:
label_48:
            flag8 = flag1;
            num1 = 1782401610;
            continue;
          case 51:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, "\b");
            num1 = 303615476;
            continue;
          case 52:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 1917886285;
            continue;
          case 53:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -843558230 ^ -1183052616;
            continue;
          case 54:
            jsonNode2 = jsonNode1;
            num1 = 25077876;
            continue;
          case 55:
            num1 = (int) num3 * 941514393 ^ 831531872;
            continue;
          case 56:
            flag9 = JSONNode.\u202A⁫⁭‮⁫⁪‭⁭⁬⁬‬‫‌⁬‌​‪‎​​‬‌‎⁪‫⁬‌⁭‎‫⁪‭‍⁪‌⁬⁭‪‭⁪‮(aItem, "");
            num1 = 551197648;
            continue;
          case 57:
            num1 = (int) num3 * 2021379344 ^ 1718550538;
            continue;
          case 58:
            int num13 = ch1 == 'b' ? 908511544 : (num13 = 2105788023);
            num1 = num13 ^ (int) num3 * 1199391994;
            continue;
          case 59:
            ch1 = ch4;
            int num14 = ch1 <= 'f' ? -1818712177 : (num14 = -606016009);
            num1 = num14 ^ (int) num3 * -224367739;
            continue;
          case 60:
            int num15;
            num1 = num15 = ch2 == ' ' ? 604352510 : (num15 = 1693629168);
            continue;
          case 61:
            num1 = 1297258182;
            continue;
          case 62:
            num1 = 1611640262;
            continue;
          case 63:
            int num16;
            num1 = num16 = ch2 <= ']' ? 322397303 : (num16 = 1690569570);
            continue;
          case 64:
            int num17;
            num1 = num17 = JSONNode.\u202A⁫⁭‮⁫⁪‭⁭⁬⁬‬‫‌⁬‌​‪‎​​‬‌‎⁪‫⁬‌⁭‎‫⁪‭‍⁪‌⁬⁭‪‭⁪‮(aKey, "") ? 1730088850 : (num17 = 321057110);
            continue;
          case 65:
            num1 = (int) num3 * 229700378 ^ 451421992;
            continue;
          case 66:
            num1 = (int) num3 * -1567046110 ^ 605561936;
            continue;
          case 67:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, JSONNode.\u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1124696169 ^ -1555129349;
            continue;
          case 68:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1569881459 ^ 937750654;
            continue;
          case 69:
            num1 = (int) num3 * -198483282 ^ -847449568;
            continue;
          case 70:
            num1 = (int) num3 * 994614899 ^ 1423566554;
            continue;
          case 71:
            int num18 = !flag16 ? 1887864410 : (num18 = 347613990);
            num1 = num18 ^ (int) num3 * -1856608862;
            continue;
          case 72:
            int num19 = !flag6 ? 1949840620 : (num19 = 1654046882);
            num1 = num19 ^ (int) num3 * 589195498;
            continue;
          case 73:
            num1 = 316194038;
            continue;
          case 74:
            num1 = (int) num3 * -1116511051 ^ -1126179170;
            continue;
          case 75:
            aKey = "";
            aItem = "";
            num1 = 1984304373;
            continue;
          case 76:
            num1 = (int) num3 * 2115191248 ^ 528675260;
            continue;
          case 77:
            num1 = (int) num3 * 737908309 ^ -1034785496;
            continue;
          case 78:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 726300377 ^ 1416637346;
            continue;
          case 79:
            num1 = (int) num3 * -53394762 ^ -1654632725;
            continue;
          case 80:
            flag15 = jsonNode1 != (object) null;
            num1 = (int) num3 * -1243502396 ^ 1499764231;
            continue;
          case 81:
            aKey = JSONNode.\u200B⁭‎⁬​⁪⁭‮⁬‫⁪‪‭⁫‎‌‮⁮⁮⁮⁭⁭⁪​‫⁬⁭‬‮‪⁮‎⁫‬‎‫‪‏‪‍‮(aKey);
            num1 = (int) num3 * 2010633135 ^ -1527853916;
            continue;
          case 82:
            num1 = (int) num3 * 1144361484 ^ -1801445062;
            continue;
          case 84:
            goto label_62;
          case 85:
            num1 = (int) num3 * 331088869 ^ -543452609;
            continue;
          case 86:
            int num20 = !flag15 ? 767152203 : (num20 = 1317397419);
            num1 = num20 ^ (int) num3 * -151016036;
            continue;
          case 87:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -893195196 ^ 1846230691;
            continue;
          case 88:
            int num21 = !flag12 ? -1852820304 : (num21 = -2071460086);
            num1 = num21 ^ (int) num3 * -1249568663;
            continue;
          case 90:
            int num22;
            num1 = num22 = ch2 != '}' ? 730519726 : (num22 = 358209685);
            continue;
          case 91:
            flag16 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 221406045 ^ 782703862;
            continue;
          case 92:
            int num23;
            num1 = num23 = ch2 == ',' ? 568945903 : (num23 = 639167238);
            continue;
          case 93:
            num1 = (int) num3 * 1516332584 ^ -1472473058;
            continue;
          case 95:
            int num24 = !(jsonNode1 is JSONArray) ? 382191028 : (num24 = 871672147);
            num1 = num24 ^ (int) num3 * -749774245;
            continue;
          case 96:
            num1 = (int) num3 * 1646567945 ^ 2130740095;
            continue;
          case 97:
            ch3 = JSONNode.\u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮(aJSON, num2);
            num1 = (int) num3 * 315877006 ^ 1125131992;
            continue;
          case 98:
            int num25;
            num1 = num25 = ch1 == 'n' ? 1598244828 : (num25 = 173151719);
            continue;
          case 99:
            int num26 = !flag13 ? -263100268 : (num26 = -1912259060);
            num1 = num26 ^ (int) num3 * 406904091;
            continue;
          case 100:
            aItem = "";
            aKey = "";
            num1 = (int) num3 * 954721990 ^ -219697204;
            continue;
          case 101:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1591155150 ^ 204100992;
            continue;
          case 102:
            switch (ch1)
            {
              case 'r':
                goto label_10;
              case 's':
                goto label_132;
              case 't':
                goto label_92;
              case 'u':
                goto label_74;
              default:
                num1 = 399514969;
                continue;
            }
          case 103:
label_14:
            ++num2;
            num1 = 1731291882;
            continue;
          case 104:
            aKey = "";
            num1 = 1764801225;
            continue;
          case 105:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, "\n");
            num1 = 691201501;
            continue;
          case 106:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, JSONNode.\u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1663187818 ^ -1000295258;
            continue;
          case 107:
            flag2 = jsonNodeStack.Count == 0;
            num1 = 2019647030;
            continue;
          case 108:
            int num27 = !flag2 ? 680635036 : (num27 = 240580625);
            num1 = num27 ^ (int) num3 * -989293668;
            continue;
          case 109:
            num1 = 952535649;
            continue;
          case 110:
            num1 = (int) num3 * 2136011135 ^ -698624482;
            continue;
          case 111:
            int num28;
            num1 = num28 = ch2 == '"' ? 564016338 : (num28 = 1581709704);
            continue;
          case 112:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1531131674 ^ 963441600;
            continue;
          case 113:
            int num29;
            num1 = num29 = !JSONNode.\u202A⁫⁭‮⁫⁪‭⁭⁬⁬‬‫‌⁬‌​‪‎​​‬‌‎⁪‫⁬‌⁭‎‫⁪‭‍⁪‌⁬⁭‪‭⁪‮(aKey, "") ? 1776374582 : (num29 = 1814692179);
            continue;
          case 114:
            switch (ch2)
            {
              case '\t':
                goto label_115;
              case '\n':
              case '\r':
                goto label_137;
              case '\v':
              case '\f':
                goto label_111;
              default:
                num1 = (int) num3 * 857393541 ^ -1106637316;
                continue;
            }
          case 115:
            int num30;
            num1 = num30 = ch1 != 'f' ? 1051003374 : (num30 = 2124080750);
            continue;
          case 116:
            num1 = (int) num3 * -1606586520 ^ 271943914;
            continue;
          case 117:
            int num31 = !flag10 ? -55719624 : (num31 = -1861436903);
            num1 = num31 ^ (int) num3 * -1112411793;
            continue;
          case 118:
            num1 = (int) num3 * 2043875961 ^ 1098303932;
            continue;
          case 119:
            int num32 = !flag1 ? 1545401011 : (num32 = 1337476810);
            num1 = num32 ^ (int) num3 * -267327531;
            continue;
          case 120:
            num1 = (int) num3 * 800849350 ^ -2031764616;
            continue;
          case 121:
            num1 = (int) num3 * -645079184 ^ 1347300557;
            continue;
          case 122:
            flag5 = jsonNode1 != (object) null;
            num1 = (int) num3 * -127863393 ^ -643051696;
            continue;
          case 123:
            aKey = JSONNode.\u200B⁭‎⁬​⁪⁭‮⁬‫⁪‪‭⁫‎‌‮⁮⁮⁮⁭⁭⁪​‫⁬⁭‬‮‪⁮‎⁫‬‎‫‪‏‪‍‮(aKey);
            flag10 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1107679759 ^ -783452511;
            continue;
          case 124:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, JSONNode.\u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * 788088344 ^ 1314909802;
            continue;
          case 125:
            flag13 = flag1;
            num1 = 1611740869;
            continue;
          case 126:
label_74:
            num1 = 1808645647;
            continue;
          case (uint) sbyte.MaxValue:
            aKey = JSONNode.\u200B⁭‎⁬​⁪⁭‮⁬‫⁪‪‭⁫‎‌‮⁮⁮⁮⁭⁭⁪​‫⁬⁭‬‮‪⁮‎⁫‬‎‫‪‏‪‍‮(aKey);
            int num33 = jsonNode1 is JSONArray ? 270285388 : (num33 = 207410136);
            num1 = num33 ^ (int) num3 * 313160394;
            continue;
          case 128:
            num1 = (int) num3 * -144536532 ^ -644599745;
            continue;
          case 129:
            goto label_1;
          case 130:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, JSONNode.\u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * -971763412 ^ -1083090606;
            continue;
          case 131:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 2017777296 ^ 364151570;
            continue;
          case 132:
            num1 = 458085617;
            continue;
          case 133:
            num1 = 346477515;
            continue;
          case 134:
            ch5 = JSONNode.\u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮(aJSON, num2);
            ch4 = ch5;
            num1 = (int) num3 * -575051715 ^ 1035529008;
            continue;
          case 135:
            int num34;
            num1 = num34 = ch2 != '{' ? 1247274020 : (num34 = 1104733014);
            continue;
          case 136:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, "\f");
            num1 = 2013882500;
            continue;
          case 137:
label_69:
            int num35;
            num1 = num35 = flag1 ? 963574884 : (num35 = 661800572);
            continue;
          case 138:
            int num36 = !flag8 ? 1486008836 : (num36 = 322314225);
            num1 = num36 ^ (int) num3 * 1553171314;
            continue;
          case 139:
            int num37 = ch2 == ':' ? -202011646 : (num37 = -261532871);
            num1 = num37 ^ (int) num3 * 2001757023;
            continue;
          case 140:
            num1 = (int) num3 * 1488227301 ^ 1748839612;
            continue;
          case 141:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1705439232 ^ -2093207380;
            continue;
          case 142:
            flag1 = !flag1;
            num1 = 1105460001;
            continue;
          case 143:
label_115:
            flag14 = flag1;
            num1 = 158472215;
            continue;
          case 144:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, JSONNode.\u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * 822841744 ^ -631702413;
            continue;
          case 145:
            num1 = (int) num3 * -1438646475 ^ 1994801934;
            continue;
          case 146:
            int num38 = flag4 ? -405020808 : (num38 = -1656658682);
            num1 = num38 ^ (int) num3 * 1994602726;
            continue;
          case 147:
            num1 = (int) num3 * 482748165 ^ -209430003;
            continue;
          case 148:
            num2 = 0;
            num1 = (int) num3 * -1203406510 ^ -1502031095;
            continue;
          case 149:
            int num39 = ch2 > ' ' ? -232906851 : (num39 = -614369326);
            num1 = num39 ^ (int) num3 * -116842957;
            continue;
          case 150:
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, JSONNode.\u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1228794377 ^ 1660828680;
            continue;
          case 151:
            string s = JSONNode.\u206C‮‮‌‌⁪‌⁫‫‫‎​‬‬⁮‭‫‪⁮⁫​‬‌​‬‍‍‍⁫‫‪⁬‫‏‬‍‎‮⁬‍‮(aJSON, num2 + 1, 4);
            aItem = JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num2 += 4;
            num1 = (int) num3 * -2068135645 ^ 1823601420;
            continue;
          case 152:
            num1 = (int) num3 * 1826947505 ^ 1562850602;
            continue;
          default:
            goto label_153;
        }
      }
label_44:
      throw JSONNode.\u206B‍‏‪‍‫⁪‬‫⁫‫⁯‎‪⁭‎⁪​‮⁮⁪‍‪‬‭‌‍‪⁭‪‎⁫⁫‌‫⁪‪‪‪‎‮("JSON Parse: Quotation marks seems to be messed up.");
label_62:
      throw JSONNode.\u206B‍‏‪‍‫⁪‬‫⁫‫⁯‎‪⁭‎⁪​‮⁮⁪‍‪‬‭‌‍‪⁭‪‎⁫⁫‌‫⁪‪‪‪‎‮("JSON Parse: Too many closing brackets");
label_153:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
      BinaryWriter aWriter = JSONNode.\u206B⁫‭‬‍‬​‌‪‫‌‬⁫‎⁬‬‮‎‌‎⁯​⁭‎‪‮‬⁪⁫⁫⁬​‭⁯‪‏‬⁯⁭‫‮(aData);
label_1:
      int num1 = 268942850;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1432377797)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Serialize(aWriter);
            num1 = (int) num2 * 59805294 ^ 1950846040;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206B‍‏‪‍‫⁪‬‫⁫‫⁯‎‪⁭‎⁪​‮⁮⁪‍‪‬‭‌‍‪⁭‪‎⁫⁫‌‫⁪‪‪‪‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206B‍‏‪‍‫⁪‬‫⁫‫⁯‎‪⁭‎⁪​‮⁮⁪‍‪‬‭‌‍‪⁭‪‎⁫⁫‌‫⁪‪‪‪‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206B‍‏‪‍‫⁪‬‫⁫‫⁯‎‪⁭‎⁪​‮⁮⁪‍‪‬‭‌‍‪⁭‪‎⁫⁫‌‫⁪‪‪‪‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u202C‪‎⁬⁮⁫‎⁭⁬⁪‪‮⁭⁮‭⁫‬‭⁫‮⁪‌⁫‎‏⁭‮‮‎‌‎‫‪⁯‌‌⁬‪⁫‮(JSONNode.\u202A⁯​‭‏‍⁬​⁯‪‫‌‌‫​⁭‭‮‪‏‌⁪⁫‌⁮‬‏⁫‭⁪⁪⁪‍⁬‮‏‭‫⁬⁯‮((FileSystemInfo) JSONNode.\u200C⁬⁬⁯⁪⁭‌​‍‮​‪⁯⁮‭⁯‎​‎‭‫‎⁪‏‮‮‏‫‮‪‌‏‪‏⁯‫⁬‫⁪‏‮(JSONNode.\u200F​‪‎⁪⁮⁪‪⁭⁪‮‮‫⁪​⁪​‌‍⁮⁮‍‭​‪​⁭‍⁪‏‭⁮‌‮‎‏‮⁮⁭‬‮(aFileName))));
      FileStream aData = JSONNode.\u202C‌‬⁯⁯⁬⁪⁬‮‫‫‪⁭⁪⁬⁯‌‮‍‍‌‌‮⁭‌‏⁫⁪‎⁪‎‮‌​‌‪‬⁮‭‮‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 1918835469;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1335702276)) % 4U)
            {
              case 0:
                num1 = (int) num2 * 438010114 ^ -1344430165;
                continue;
              case 1:
                JSONNode.\u200C⁮⁫‏‍‬⁫‎⁬​‮⁮‬‫⁫⁭⁪⁬‮‏‌‌‎‍⁭‏⁮​‪‎‪‪⁭‏‫‪​‌‪‮‮((IDisposable) aData);
                num1 = (int) num2 * 1622615384 ^ 1627552236;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202D‪‬⁬⁭⁫⁯⁭⁯‎‌⁫⁭⁬⁭‎‌​‪‫‬‭‎‮⁫⁫​⁯⁬‎‭‎‮‭⁯⁯‮⁮‮⁯‮();
      try
      {
label_2:
        int num1 = -745412095;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -433234068)) % 4U)
          {
            case 0:
              JSONNode.\u206C​‏‮⁪⁯⁭‫​⁮‪‏⁮‍⁬‭‎‎⁭⁯⁪‎‍‌‭⁮⁯⁬‪‫⁯‍‏​⁫⁭​⁬⁪‬‮((Stream) aData, 0L);
              num1 = (int) num2 * -1989557130 ^ -1853830470;
              continue;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1947853239 ^ -1012075853;
              continue;
            case 3:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_6:
        return JSONNode.\u200D‎‎‭‪‬⁭‭​‮‭⁯‬⁬‌‏⁭⁯‫⁭‍​‍⁭‬​‍‍⁯⁯⁭⁪‪‮​⁭​‮‮‭‮(JSONNode.\u202D‮⁯⁭⁯⁬⁪‍⁯⁭‌⁯‍⁬‮‪‪⁮​​⁫⁯‪‭‌⁫‪‮⁪‎‎‎⁫‬‬‍‫⁮​‫‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -2041601806;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -433234068)) % 4U)
            {
              case 1:
                num3 = (int) num4 * 421830828 ^ -1860126656;
                continue;
              case 2:
                JSONNode.\u200C⁮⁫‏‍‬⁫‎⁬​‮⁮‬‫⁫⁭⁪⁬‮‏‌‌‎‍⁭‏⁮​‪‎‪‪⁭‏‫‪​‌‪‮‮((IDisposable) aData);
                num3 = (int) num4 * 208475213 ^ 282733775;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -1757299806;
      JSONBinaryTag jsonBinaryTag1;
      JSONNode jsonNode;
      bool flag1;
      bool flag2;
      JSONArray jsonArray;
      int num2;
      int num3;
      int num4;
      int num5;
      JSONClass jsonClass;
      JSONBinaryTag jsonBinaryTag2;
      string aKey;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -994109583)) % 43U)
        {
          case 0:
            aKey = JSONNode.\u202C⁭‍‪‮‎‭‭‏⁭⁯⁪⁪‬‫‮‌‭‪‭​⁬‌‭⁫​⁮‪‭⁮⁬‮⁯‏‌‭⁯⁮⁭‮(aReader);
            num1 = (int) num6 * -1983481192 ^ -1661147378;
            continue;
          case 1:
            num1 = (int) num6 * -761497943 ^ -1974983801;
            continue;
          case 2:
            num1 = (int) num6 * -1989327361 ^ -1929159385;
            continue;
          case 3:
label_16:
            num1 = -106431789;
            continue;
          case 4:
            jsonBinaryTag2 = (JSONBinaryTag) JSONNode.\u202D‪⁬‬⁬⁪‮⁪​⁭‫‏⁯⁮⁮​⁮⁮⁫⁫‭‪⁭⁬‎‏‍‍⁬⁮‬‍‭‭⁫‬‍‍‪‫‮(aReader);
            num1 = (int) num6 * 1926306090 ^ 319496242;
            continue;
          case 5:
            num1 = (int) num6 * -409294762 ^ -720082208;
            continue;
          case 6:
            num1 = -1174214398;
            continue;
          case 7:
label_37:
            num1 = -43252252;
            continue;
          case 9:
            goto label_23;
          case 10:
            int num7 = flag2 ? 524247467 : (num7 = 1594347675);
            num1 = num7 ^ (int) num6 * 938766316;
            continue;
          case 11:
            flag2 = num4 < num5;
            num1 = -322113096;
            continue;
          case 12:
label_39:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C⁭‍‪‮‎‭‭‏⁭⁯⁪⁪‬‫‮‌‭‪‭​⁬‌‭⁫​⁮‪‭⁮⁬‮⁯‏‌‭⁯⁮⁭‮(aReader));
            num1 = -1787378383;
            continue;
          case 13:
            jsonArray = new JSONArray();
            num1 = (int) num6 * -302842477 ^ 399405090;
            continue;
          case 14:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -1522543939 ^ -433749847;
            continue;
          case 15:
            num1 = (int) num6 * -838435581 ^ 302299704;
            continue;
          case 16:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -158373710 ^ -622114003;
            continue;
          case 17:
            int num8 = !flag1 ? -1850805927 : (num8 = -420623366);
            num1 = num8 ^ (int) num6 * -1429008943;
            continue;
          case 18:
            ++num4;
            num1 = (int) num6 * 687847150 ^ 1197533658;
            continue;
          case 19:
            goto label_1;
          case 20:
label_8:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E‎⁯⁭‮⁬⁯⁪‏‬‪‬‬​⁮‍⁯‎​‭‏‫⁫‮‌​​⁪‎‌‍​⁯⁪⁬​‪⁬⁮‍‮(aReader));
            num1 = -805695720;
            continue;
          case 21:
            num2 = 0;
            num1 = (int) num6 * -202796108 ^ 1872707594;
            continue;
          case 22:
            num5 = JSONNode.\u202E‎⁯⁭‮⁬⁯⁪‏‬‪‬‬​⁮‍⁯‎​‭‏‫⁫‮‌​​⁪‎‌‍​⁯⁪⁬​‪⁬⁮‍‮(aReader);
            jsonClass = new JSONClass();
            num1 = (int) num6 * -72379841 ^ -949857181;
            continue;
          case 23:
            jsonBinaryTag1 = jsonBinaryTag2;
            num1 = (int) num6 * -909679012 ^ 1875727875;
            continue;
          case 24:
            switch (jsonBinaryTag1)
            {
              case JSONBinaryTag.Array:
                goto label_16;
              case JSONBinaryTag.Class:
                goto label_22;
              case JSONBinaryTag.Value:
                goto label_39;
              case JSONBinaryTag.IntValue:
                goto label_8;
              case JSONBinaryTag.DoubleValue:
                goto label_19;
              case JSONBinaryTag.BoolValue:
                goto label_37;
              case JSONBinaryTag.FloatValue:
                goto label_38;
              default:
                num1 = (int) num6 * -1689428676 ^ 1605667932;
                continue;
            }
          case 25:
label_22:
            num1 = -366465297;
            continue;
          case 26:
            num1 = (int) num6 * 742748636 ^ 1366985957;
            continue;
          case 27:
            num3 = JSONNode.\u202E‎⁯⁭‮⁬⁯⁪‏‬‪‬‬​⁮‍⁯‎​‭‏‫⁫‮‌​​⁪‎‌‍​⁯⁪⁬​‪⁬⁮‍‮(aReader);
            num1 = (int) num6 * 1104373129 ^ 1862933005;
            continue;
          case 28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‌‎‌⁯‫⁫⁪⁮⁯⁬⁭‌​⁫⁯‏⁭⁮‮⁯⁫‎‎⁮⁯‏‬‎‫‫‪‬⁭⁯⁬⁫‏⁪‍‮(aReader));
            num1 = (int) num6 * -121803905 ^ 1606374151;
            continue;
          case 29:
            num1 = (int) num6 * -920599797 ^ -1518413920;
            continue;
          case 30:
            num1 = (int) num6 * -1440736140 ^ -1919383700;
            continue;
          case 31:
            num4 = 0;
            num1 = (int) num6 * 399824519 ^ -2021560618;
            continue;
          case 32:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1267585194 ^ 547319468;
            continue;
          case 33:
            num1 = (int) num6 * -1802366790 ^ -433614475;
            continue;
          case 34:
            num1 = -372881441;
            continue;
          case 35:
            ++num2;
            num1 = (int) num6 * -1155091968 ^ 995923667;
            continue;
          case 36:
label_19:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E​‏‭⁫‪‍‪​‎‏‬‮‍⁬‬⁫‮⁬‫‍⁭​‌⁯⁯‪⁯‮⁬‪​⁮‪‪⁪​⁭⁯‫‮(aReader));
            num1 = -871218538;
            continue;
          case 37:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -577105261;
            continue;
          case 38:
            num1 = (int) num6 * 1672937338 ^ -133262312;
            continue;
          case 39:
            flag1 = num2 < num3;
            num1 = -1271460345;
            continue;
          case 40:
label_38:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C⁭‮‫⁭‎‭⁫⁮‌⁫⁯‫‏⁪‬‫‫⁫‎‬⁮⁭‮‍‭‫‭‏‫⁪‪⁯‪⁮‍‪‎‮‮(aReader));
            num1 = -1127879933;
            continue;
          case 41:
            num1 = (int) num6 * 1140563013 ^ 943951426;
            continue;
          case 42:
            num1 = (int) num6 * -473110555 ^ -407300727;
            continue;
          default:
            goto label_45;
        }
      }
label_23:
      throw JSONNode.\u206B‍‏‪‍‫⁪‬‫⁫‫⁯‎‪⁭‎⁪​‮⁮⁪‍‪‬‭‌‍‪⁭‪‎⁫⁫‌‫⁪‪‪‪‎‮(JSONNode.\u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag2.ToString()));
label_45:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206B‍‏‪‍‫⁪‬‫⁫‫⁯‎‪⁭‎⁪​‮⁮⁪‍‪‬‭‌‍‪⁭‪‎⁫⁫‌‫⁪‪‪‪‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206B‍‏‪‍‫⁪‬‫⁫‫⁯‎‪⁭‎⁪​‮⁮⁪‍‪‬‭‌‍‪⁭‪‎⁫⁫‌‫⁪‪‪‪‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206B‍‏‪‍‫⁪‬‫⁫‫⁯‎‪⁭‎⁪​‮⁮⁪‍‪‬‭‌‍‪⁭‪‎⁫⁫‌‫⁪‪‪‪‎‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u202A​‍⁮‏‍‭‬⁭‎‬⁪‫‫⁭⁮⁯‍‌‭‫⁮⁫‪⁮⁪⁪‏‮​‬⁫⁫⁭‌‏‮⁯‏‌‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1736400547;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 30538356)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u200C⁮⁫‏‍‬⁫‎⁬​‮⁮‬‫⁫⁭⁪⁬‮‏‌‌‎‍⁭‏⁮​‪‎‪‪⁭‏‫‪​‌‪‮‮((IDisposable) aReader);
                num1 = (int) num2 * -1863099970 ^ 626056104;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206E‭⁪‪‮⁮‪​⁯‏⁯‫‏‎‫‎⁮‍‎⁮⁪‬‬‌⁪⁭⁭⁪‏‏‭‬‏‭⁭⁪‭‮‪⁪‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -305970633;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1991416788)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * -1137036743 ^ 755108183;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -100472482;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1991416788)) % 3U)
            {
              case 0:
                goto label_6;
              case 2:
                JSONNode.\u200C⁮⁫‏‍‬⁫‎⁬​‮⁮‬‫⁫⁭⁪⁬‮‏‌‌‎‍⁭‏⁮​‪‎‪‪⁭‏‫‪​‌‪‮‮((IDisposable) aData);
                num3 = (int) num4 * 6162327 ^ -1111384495;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -948586458;
      MemoryStream aData;
      byte[] numArray;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1310554203)) % 8U)
        {
          case 0:
            num1 = (int) num2 * -1869656507 ^ 752608425;
            continue;
          case 1:
            JSONNode.\u206C​‏‮⁪⁯⁭‫​⁮‪‏⁮‍⁬‭‎‎⁭⁯⁪‎‍‌‭⁮⁯⁬‪‫⁯‍‏​⁫⁭​⁬⁪‬‮((Stream) aData, 0L);
            num1 = (int) num2 * -1975843552 ^ 2037462023;
            continue;
          case 2:
            num1 = (int) num2 * 1605497583 ^ 1463565;
            continue;
          case 3:
            numArray = JSONNode.\u206C⁬⁭⁫‎‪⁭‏‌‫‮‍⁭‌‌⁯⁪‭‍⁯⁮​‭‫‬⁬‮‍⁯‪⁮⁪‬‪‪‍‌⁬‌⁬‮(aBase64);
            num1 = (int) num2 * 721849734 ^ 2055641410;
            continue;
          case 5:
            aData = JSONNode.\u200C⁫​⁭‏‫⁫‍⁪⁯⁫‫‍‏‬⁭‮⁭⁯⁪‎‏⁯‪‫‭⁯⁬‬​‏‮⁬⁮⁬⁫‪⁪⁭⁬‮(numArray);
            num1 = (int) num2 * 894412217 ^ 1015252257;
            continue;
          case 6:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -1972399684 ^ 336531605;
            continue;
          case 7:
            goto label_1;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -952693588;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1808100718)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1738903262 ^ -176490175;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u200E‫⁪‌‌​⁯⁬​​‌⁬⁯‌‬‌‫‪⁬‌‫⁭​‬‮‬⁬‎⁯‬‬‎⁮‍‎‌‎‎‪‮() => CultureInfo.InvariantCulture;

    static bool \u206E‌‬‏⁯‪‬‌‏‭⁯⁬‬‭⁭‬‬⁪‬‬‌⁭‬‍​‪‭⁫⁬⁮‏⁭‬‮‪‌‭⁬‫‬‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200B‌‏⁫‍​‪‎‬‫‭‏⁭‬​⁪‭‍‌‬‌‫‭⁬⁪⁬⁮⁯⁪‭⁪⁭‏‏‮⁮‭‎⁯‬‮() => base.GetHashCode();

    static char \u206A‮⁯‌⁫‫⁮‭‭⁭‪‫‏⁫⁯‎⁪⁯⁪⁯​⁬⁯⁬⁯‎‬⁬‏⁪‮‫⁮‬‌⁫‫‭‪‏‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u202D‏‎⁯‪‬‌‎‫⁯⁪‍‌‪‪‍​⁫‍‫⁭⁮‏‬⁫‎‫‮‎⁮⁯‍‫‫⁫⁯‬⁬‮‪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200F⁭‪​​⁪⁮​‌‬‫⁫‫‭‪‬‌‫‌​‭‬‏‏⁬​⁭⁯‬⁮⁯‬⁮⁯⁮‬⁯‬‎⁬‮([In] string obj0) => obj0.Length;

    static string \u200B⁭‎⁬​⁪⁭‮⁬‫⁪‪‭⁫‎‌‮⁮⁮⁮⁭⁭⁪​‫⁬⁭‬‮‪⁮‎⁫‬‎‫‪‏‪‍‮([In] string obj0) => obj0.Trim();

    static bool \u202A⁫⁭‮⁫⁪‭⁭⁬⁬‬‫‌⁬‌​‪‎​​‬‌‎⁪‫⁬‌⁭‎‫⁪‭‍⁪‌⁬⁭‪‭⁪‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206B‍‏‪‍‫⁪‬‫⁫‫⁯‎‪⁭‎⁪​‮⁮⁪‍‪‬‭‌‍‪⁭‪‎⁫⁫‌‫⁪‪‪‪‎‮([In] string obj0) => new Exception(obj0);

    static string \u206C‮‮‌‌⁪‌⁫‫‫‎​‬‬⁮‭‫‪⁮⁫​‬‌​‬‍‍‍⁫‫‪⁬‫‏‬‍‎‮⁬‍‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206B⁫‭‬‍‬​‌‪‫‌‬⁫‎⁬‬‮‎‌‎⁯​⁭‎‪‮‬⁪⁫⁫⁬​‭⁯‪‏‬⁯⁭‫‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200F​‪‎⁪⁮⁪‪⁭⁪‮‮‫⁪​⁪​‌‍⁮⁮‍‭​‪​⁭‍⁪‏‭⁮‌‮‎‏‮⁮⁭‬‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200C⁬⁬⁯⁪⁭‌​‍‮​‪⁯⁮‭⁯‎​‎‭‫‎⁪‏‮‮‏‫‮‪‌‏‪‏⁯‫⁬‫⁪‏‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202A⁯​‭‏‍⁬​⁯‪‫‌‌‫​⁭‭‮‪‏‌⁪⁫‌⁮‬‏⁫‭⁪⁪⁪‍⁬‮‏‭‫⁬⁯‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u202C‪‎⁬⁮⁫‎⁭⁬⁪‪‮⁭⁮‭⁫‬‭⁫‮⁪‌⁫‎‏⁭‮‮‎‌‎‫‪⁯‌‌⁬‪⁫‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u202C‌‬⁯⁯⁬⁪⁬‮‫‫‪⁭⁪⁬⁯‌‮‍‍‌‌‮⁭‌‏⁫⁪‎⁪‎‮‌​‌‪‬⁮‭‮‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200C⁮⁫‏‍‬⁫‎⁬​‮⁮‬‫⁫⁭⁪⁬‮‏‌‌‎‍⁭‏⁮​‪‎‪‪⁭‏‫‪​‌‪‮‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202D‪‬⁬⁭⁫⁯⁭⁯‎‌⁫⁭⁬⁭‎‌​‪‫‬‭‎‮⁫⁫​⁯⁬‎‭‎‮‭⁯⁯‮⁮‮⁯‮() => new MemoryStream();

    static void \u206C​‏‮⁪⁯⁭‫​⁮‪‏⁮‍⁬‭‎‎⁭⁯⁪‎‍‌‭⁮⁯⁬‪‫⁯‍‏​⁫⁭​⁬⁪‬‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202D‮⁯⁭⁯⁬⁪‍⁯⁭‌⁯‍⁬‮‪‪⁮​​⁫⁯‪‭‌⁫‪‮⁪‎‎‎⁫‬‬‍‫⁮​‫‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200D‎‎‭‪‬⁭‭​‮‭⁯‬⁬‌‏⁭⁯‫⁭‍​‍⁭‬​‍‍⁯⁯⁭⁪‪‮​⁭​‮‮‭‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202D‪⁬‬⁬⁪‮⁪​⁭‫‏⁯⁮⁮​⁮⁮⁫⁫‭‪⁭⁬‎‏‍‍⁬⁮‬‍‭‭⁫‬‍‍‪‫‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202E‎⁯⁭‮⁬⁯⁪‏‬‪‬‬​⁮‍⁯‎​‭‏‫⁫‮‌​​⁪‎‌‍​⁯⁪⁬​‪⁬⁮‍‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202C⁭‍‪‮‎‭‭‏⁭⁯⁪⁪‬‫‮‌‭‪‭​⁬‌‭⁫​⁮‪‭⁮⁬‮⁯‏‌‭⁯⁮⁭‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202E​‏‭⁫‪‍‪​‎‏‬‮‍⁬‬⁫‮⁬‫‍⁭​‌⁯⁯‪⁯‮⁬‪​⁮‪‪⁪​⁭⁯‫‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200F‌‎‌⁯‫⁫⁪⁮⁯⁬⁭‌​⁫⁯‏⁭⁮‮⁯⁫‎‎⁮⁯‏‬‎‫‫‪‬⁭⁯⁬⁫‏⁪‍‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206C⁭‮‫⁭‎‭⁫⁮‌⁫⁯‫‏⁪‬‫‫⁫‎‬⁮⁭‮‍‭‫‭‏‫⁪‪⁯‪⁮‍‪‎‮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u202A​‍⁮‏‍‭‬⁭‎‬⁪‫‫⁭⁮⁯‍‌‭‫⁮⁫‪⁮⁪⁪‏‮​‬⁫⁫⁭‌‏‮⁯‏‌‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206E‭⁪‪‮⁮‪​⁯‏⁯‫‏‎‫‎⁮‍‎⁮⁪‬‬‌⁪⁭⁭⁪‏‏‭‬‏‭⁭⁪‭‮‪⁪‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206C⁬⁭⁫‎‪⁭‏‌‫‮‍⁭‌‌⁯⁪‭‍⁯⁮​‭‫‬⁬‮‍⁯‪⁮⁪‬‪‪‍‌⁬‌⁬‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200C⁫​⁭‏‫⁫‍⁪⁯⁫‫‍‏‬⁭‮⁭⁯⁪‎‏⁯‪‫‭⁯⁬‬​‏‮⁬⁮⁬⁫‪⁪⁭⁬‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
