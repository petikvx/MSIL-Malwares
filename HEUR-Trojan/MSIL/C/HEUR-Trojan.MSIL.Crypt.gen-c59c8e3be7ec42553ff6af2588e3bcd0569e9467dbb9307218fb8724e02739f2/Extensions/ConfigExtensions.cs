// Decompiled with JetBrains decompiler
// Type: Cradiator.Extensions.ConfigExtensions
// Assembly: EvidenceTypeDescript, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B50F5F07-D63E-4094-B80D-E78774C87D41
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan.MSIL.Crypt.gen-c59c8e3be7ec42553ff6af2588e3bcd0569e9467dbb9307218fb8724e02739f2.exe

using Cradiator.Config;
using System;
using System.Collections.Generic;
using System.Configuration;

namespace Cradiator.Extensions
{
  public static class ConfigExtensions
  {
    public static void ForEach<T>(this IEnumerable<T> col, Action<T> action)
    {
      foreach (T obj in col)
        action(obj);
    }

    public static bool GetBoolProperty(this System.Configuration.Configuration config, string settingsKey)
    {
      bool result;
      return !bool.TryParse(config.GetProperty(settingsKey).Value, out result) || result;
    }

    public static int GetIntProperty(
      this System.Configuration.Configuration config,
      string settingsKey,
      int defaultValue)
    {
      int result;
      return int.TryParse(config.GetProperty(settingsKey).Value, out result) ? result : defaultValue;
    }

    public static KeyValueConfigurationElement GetProperty(
      this System.Configuration.Configuration config,
      string key)
    {
      return config.AppSettings.Settings[key] ?? throw new ConfigSettingsException(key);
    }

    public static string GetRegEx(this string regExString) => string.IsNullOrEmpty(regExString) ? ".*" : regExString;
  }
}
