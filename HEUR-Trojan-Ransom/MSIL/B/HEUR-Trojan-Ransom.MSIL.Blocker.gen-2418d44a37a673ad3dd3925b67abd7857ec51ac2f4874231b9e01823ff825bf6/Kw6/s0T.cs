// Decompiled with JetBrains decompiler
// Type: Kw6.s0T
// Assembly: x7B, Version=2.6.1.0, Culture=neutral, PublicKeyToken=null
// MVID: 72C9F8B9-C30C-42FF-A20F-D6EFD67D7612
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2418d44a37a673ad3dd3925b67abd7857ec51ac2f4874231b9e01823ff825bf6.exe

using b1T3;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.FileIO;
using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;

namespace Kw6
{
  [StandardModule]
  internal sealed class s0T
  {
    public static bool CerrarServidor = false;
    public static string modName;
    public static string ModNameComprobacionGuardar = "";
    public static string nombreArchivoObtenido;
    public static string nombreClaseObtenido;
    public static bool cancelModName;
    public static string ruta;
    public static string rutaTemp = "\\temp\\";
    public static string rutaPlayer = "\\CoJ2\\Data\\Player\\";
    public static string rutaAppData = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\ModsCoJ2\\";
    public static StreamWriter write;
    public static StreamReader read;
    public static bool vRestart = false;
    public static string ModIniCabecera = "";
    public static string ModIniAristocrat = "";
    public static string ModIniBandit = "";
    public static string ModIniBarnsby = "";
    public static string ModIniDoc = "";
    public static string ModIniGunslinger = "";
    public static string ModIniGunsmith = "";
    public static string ModIniJuarez = "";
    public static string ModIniMiner = "";
    public static string ModIniRifleman = "";
    public static string ModIniSniper = "";
    public static string ModIniThief = "";
    public static string ModIniTrapper = "";
    public static string ModIniTribeWarrior = "";
    public static string ConfiguracionModInicial = "";
    private static object frmArmas;
    public const string sSecretKey = "%c0jm0ds";

    public static void b7B()
    {
      s0T.Qj0("c:\\temp\\test.txt", "c:\\temp\\Encrypted.txt", "%c0jm0ds");
      s0T.Eq5("c:\\temp\\Encrypted.txt", "c:\\temp\\Decrypted.txt", "%c0jm0ds");
    }

    public static void Qj0(string y9G, string t9K, string s1F)
    {
      FileStream fileStream1 = new FileStream(y9G, FileMode.Open, FileAccess.Read);
      FileStream fileStream2 = new FileStream(t9K, FileMode.Create, FileAccess.Write);
      DESCryptoServiceProvider cryptoServiceProvider = new DESCryptoServiceProvider();
      cryptoServiceProvider.Key = Encoding.ASCII.GetBytes(s1F);
      cryptoServiceProvider.IV = Encoding.ASCII.GetBytes(s1F);
      ICryptoTransform encryptor = cryptoServiceProvider.CreateEncryptor();
      CryptoStream cryptoStream = new CryptoStream((Stream) fileStream2, encryptor, CryptoStreamMode.Write);
      byte[] numArray = new byte[checked ((int) (fileStream1.Length - 1L) + 1)];
      fileStream1.Read(numArray, 0, numArray.Length);
      cryptoStream.Write(numArray, 0, numArray.Length);
      cryptoStream.Close();
    }

    public static void Eq5(string Jf7, string c2X, string Yz4)
    {
      DESCryptoServiceProvider cryptoServiceProvider = new DESCryptoServiceProvider();
      cryptoServiceProvider.Key = Encoding.ASCII.GetBytes(Yz4);
      cryptoServiceProvider.IV = Encoding.ASCII.GetBytes(Yz4);
      CryptoStream cryptoStream = new CryptoStream((Stream) new FileStream(Jf7, FileMode.Open, FileAccess.Read), cryptoServiceProvider.CreateDecryptor(), CryptoStreamMode.Read);
      StreamWriter streamWriter = new StreamWriter(c2X);
      streamWriter.Write(new StreamReader((Stream) cryptoStream).ReadToEnd());
      streamWriter.Flush();
      streamWriter.Close();
    }

    public static void Sr0()
    {
      if (!File.Exists(s0T.rutaAppData + "\\Mods\\" + s0T.modName + "\\ini\\mod.ini"))
        return;
      s0T.read = File.OpenText(s0T.rutaAppData + "\\Mods\\" + s0T.modName + "\\ini\\mod.ini");
      string end = s0T.read.ReadToEnd();
      string str = end.Substring(0, checked (end.Length - 2));
      s0T.read.Close();
      s0T.ModIniCabecera = str.Substring(0, 1).ToString();
      int num1 = 1;
      do
      {
        switch (num1)
        {
          case 1:
            string Expression1 = "Aristocrat";
            int num2 = str.IndexOf(Expression1);
            if (num2 > -1)
            {
              s0T.ModIniAristocrat = str.Substring(checked (num2 + Strings.Len(Expression1)), 10).ToString();
              break;
            }
            break;
          case 2:
            string Expression2 = "Bandit";
            int num3 = str.IndexOf(Expression2);
            if (num3 > -1)
            {
              s0T.ModIniBandit = str.Substring(checked (num3 + Strings.Len(Expression2)), 10).ToString();
              break;
            }
            break;
          case 3:
            string Expression3 = "Barnsby";
            int num4 = str.IndexOf(Expression3);
            if (num4 > -1)
            {
              s0T.ModIniBarnsby = str.Substring(checked (num4 + Strings.Len(Expression3)), 10).ToString();
              break;
            }
            break;
          case 4:
            string Expression4 = "Doc";
            int num5 = str.IndexOf(Expression4);
            if (num5 > -1)
            {
              s0T.ModIniDoc = str.Substring(checked (num5 + Strings.Len(Expression4)), 10).ToString();
              break;
            }
            break;
          case 5:
            string Expression5 = "Gunslinger";
            int num6 = str.IndexOf(Expression5);
            if (num6 > -1)
            {
              s0T.ModIniGunslinger = str.Substring(checked (num6 + Strings.Len(Expression5)), 10).ToString();
              break;
            }
            break;
          case 6:
            string Expression6 = "Gunsmith";
            int num7 = str.IndexOf(Expression6);
            if (num7 > -1)
            {
              s0T.ModIniGunsmith = str.Substring(checked (num7 + Strings.Len(Expression6)), 10).ToString();
              break;
            }
            break;
          case 7:
            string Expression7 = "Juarez";
            int num8 = str.IndexOf(Expression7);
            if (num8 > -1)
            {
              s0T.ModIniJuarez = str.Substring(checked (num8 + Strings.Len(Expression7)), 10).ToString();
              break;
            }
            break;
          case 8:
            string Expression8 = "Miner";
            int num9 = str.IndexOf(Expression8);
            if (num9 > -1)
            {
              s0T.ModIniMiner = str.Substring(checked (num9 + Strings.Len(Expression8)), 10).ToString();
              break;
            }
            break;
          case 9:
            string Expression9 = "Rifleman";
            int num10 = str.IndexOf(Expression9);
            if (num10 > -1)
            {
              s0T.ModIniRifleman = str.Substring(checked (num10 + Strings.Len(Expression9)), 10).ToString();
              break;
            }
            break;
          case 10:
            string Expression10 = "Sniper";
            int num11 = str.IndexOf(Expression10);
            if (num11 > -1)
            {
              s0T.ModIniSniper = str.Substring(checked (num11 + Strings.Len(Expression10)), 10).ToString();
              break;
            }
            break;
          case 11:
            string Expression11 = "Thief";
            int num12 = str.IndexOf(Expression11);
            if (num12 > -1)
            {
              s0T.ModIniThief = str.Substring(checked (num12 + Strings.Len(Expression11)), 10).ToString();
              break;
            }
            break;
          case 12:
            string Expression12 = "Trapper";
            int num13 = str.IndexOf(Expression12);
            if (num13 > -1)
            {
              s0T.ModIniTrapper = str.Substring(checked (num13 + Strings.Len(Expression12)), 10).ToString();
              break;
            }
            break;
          case 13:
            string Expression13 = "TribeWarrior";
            int num14 = str.IndexOf(Expression13);
            if (num14 > -1)
              s0T.ModIniTribeWarrior = str.Substring(checked (num14 + Strings.Len(Expression13)), 10).ToString();
            break;
        }
        checked { ++num1; }
      }
      while (num1 <= 13);
      s0T.ConfiguracionModInicial = str;
    }

    public static void Zx1()
    {
      if (Directory.Exists(s0T.rutaAppData + "\\Mods\\" + s0T.modName + "\\ini"))
        Cc9k.Computer.FileSystem.DeleteDirectory(s0T.rutaAppData + "\\Mods\\" + s0T.modName + "\\ini", DeleteDirectoryOption.DeleteAllContents);
      Cc9k.Computer.FileSystem.CreateDirectory(s0T.rutaAppData + "\\Mods\\" + s0T.modName + "\\ini");
      string str = "";
      if (Operators.CompareString(s0T.ModIniCabecera, "", false) == 0)
        s0T.ModIniCabecera = "0";
      if (Operators.CompareString(s0T.ModIniCabecera, "", false) != 0)
        str += s0T.ModIniCabecera;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniAristocrat), "", false) != 0)
        str = str + "Aristocrat" + s0T.ModIniAristocrat;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniBandit), "", false) != 0)
        str = str + "Bandit" + s0T.ModIniBandit;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniBarnsby), "", false) != 0)
        str = str + "Barnsby" + s0T.ModIniBarnsby;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniDoc), "", false) != 0)
        str = str + "Doc" + s0T.ModIniDoc;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniGunslinger), "", false) != 0)
        str = str + "Gunslinger" + s0T.ModIniGunslinger;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniGunsmith), "", false) != 0)
        str = str + "Gunsmith" + s0T.ModIniGunsmith;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniJuarez), "", false) != 0)
        str = str + "Juarez" + s0T.ModIniJuarez;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniMiner), "", false) != 0)
        str = str + "Miner" + s0T.ModIniMiner;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniRifleman), "", false) != 0)
        str = str + "Rifleman" + s0T.ModIniRifleman;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniSniper), "", false) != 0)
        str = str + "Sniper" + s0T.ModIniSniper;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniThief), "", false) != 0)
        str = str + "Thief" + s0T.ModIniThief;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniTrapper), "", false) != 0)
        str = str + "Trapper" + s0T.ModIniTrapper;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniTribeWarrior), "", false) != 0)
        str = str + "TribeWarrior" + s0T.ModIniTribeWarrior;
      s0T.write = File.AppendText(s0T.rutaAppData + "\\Mods\\" + s0T.modName + "\\ini\\mod.ini");
      s0T.write.WriteLine(str);
      s0T.write.Close();
    }

    public static void p6E(string Yz4)
    {
      if (Operators.CompareString(Yz4, "Aristocrat", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Aristocrat_Properties.scr";
      else if (Operators.CompareString(Yz4, "Bandit", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Bandit_Properties.scr";
      else if (Operators.CompareString(Yz4, "Barnsby", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Barnsby_Properties.scr";
      else if (Operators.CompareString(Yz4, "Doc", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Doc_Properties.scr";
      else if (Operators.CompareString(Yz4, "Gunslinger", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Gunslinger_Properties.scr";
      else if (Operators.CompareString(Yz4, "Gunsmith", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Gunsmith_Properties.scr";
      else if (Operators.CompareString(Yz4, "Juarez", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Juarez_Properties.scr";
      else if (Operators.CompareString(Yz4, "Miner", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Miner_Properties.scr";
      else if (Operators.CompareString(Yz4, "Rifleman", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Rifleman_Properties.scr";
      else if (Operators.CompareString(Yz4, "Sniper", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Sniper_Properties.scr";
      else if (Operators.CompareString(Yz4, "Thief", false) == 0)
        s0T.nombreArchivoObtenido = "_NetWeapon_Thief_Properties.scr";
      else if (Operators.CompareString(Yz4, "Trapper", false) == 0)
      {
        s0T.nombreArchivoObtenido = "_NetWeapon_Trapper_Properties.scr";
      }
      else
      {
        if (Operators.CompareString(Yz4, "Tribe Warrior", false) != 0)
          return;
        s0T.nombreArchivoObtenido = "_NetWeapon_TribeWarrior_Properties.scr";
      }
    }

    public static void z7Z(string Sd9)
    {
      if (Operators.CompareString(Sd9, "_NetWeapon_Aristocrat_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Aristocrat";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Bandit_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Bandit";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Barnsby_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Barnsby";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Doc_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Doc";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Gunslinger_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Gunslinger";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Gunsmith_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Gunsmith";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Juarez_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Juarez";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Miner_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Miner";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Rifleman_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Rifleman";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Sniper_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Sniper";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Thief_Properties.scr", false) == 0)
        s0T.nombreClaseObtenido = "Thief";
      else if (Operators.CompareString(Sd9, "_NetWeapon_Trapper_Properties.scr", false) == 0)
      {
        s0T.nombreClaseObtenido = "Trapper";
      }
      else
      {
        if (Operators.CompareString(Sd9, "_NetWeapon_TribeWarrior_Properties.scr", false) != 0)
          return;
        s0T.nombreClaseObtenido = "Tribe Warrior";
      }
    }

    public static void x3M(string f5H)
    {
      if (!Cc9k.Computer.FileSystem.DirectoryExists(s0T.ruta + s0T.rutaTemp))
        return;
      Cc9k.Computer.FileSystem.GetDirectoryInfo(f5H).Attributes = FileAttributes.Hidden;
    }

    static void Bz1()
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
