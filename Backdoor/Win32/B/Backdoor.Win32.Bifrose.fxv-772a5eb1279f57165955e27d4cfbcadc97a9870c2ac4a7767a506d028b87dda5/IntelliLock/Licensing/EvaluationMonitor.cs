// Decompiled with JetBrains decompiler
// Type: IntelliLock.Licensing.EvaluationMonitor
// Assembly: Programer, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 06E0935B-07CB-4DFC-B4ED-14EB6AB3B8CB
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.Bifrose.fxv-772a5eb1279f57165955e27d4cfbcadc97a9870c2ac4a7767a506d028b87dda5.exe

using BmPGJKTmnOSi4UZGSH;
using I6jG1LP3QOx33qm5nY;
using iCFXCAGQcK2p8IyoU6;
using System;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using YbEIqSvT3sCgQPKyF4;

namespace IntelliLock.Licensing
{
  [Bdhs8TqhJXgC5SDGDj(ApplyToMembers = true, Exclude = true, StripAfterObfuscation = true)]
  internal class EvaluationMonitor
  {
    private static License license;

    public static License CurrentLicense
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => EvaluationMonitor.license;
      [MethodImpl(MethodImplOptions.NoInlining)] [param: In] set => EvaluationMonitor.license = value;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static byte[] GetCurrentLicenseAsByteArray() => snd5hxL6SKiL9H8g8w.\u00348fopBFjTi;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void LoadLicense([In] string obj0)
    {
      object vkZomyB4Et;
      EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(vkZomyB4Et = snd5hxL6SKiL9H8g8w.VKZomyB4Et);
      try
      {
        new snd5hxL6SKiL9H8g8w().\u0038t8Ls6BmP((LicenseContext) null, EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(33554476)), (object) null, true, true, false, false, "", obj0, (byte[]) null, false, false, false);
      }
      finally
      {
        EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(vkZomyB4Et);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void LoadLicense([In] byte[] obj0)
    {
      object vkZomyB4Et;
      EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(vkZomyB4Et = snd5hxL6SKiL9H8g8w.VKZomyB4Et);
      try
      {
        new snd5hxL6SKiL9H8g8w().\u0038t8Ls6BmP((LicenseContext) null, EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(33554476)), (object) null, true, true, false, false, "", "", obj0, false, false, false);
      }
      finally
      {
        EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(vkZomyB4Et);
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public EvaluationMonitor()
    {
      EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091();
      EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091((object) this);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static EvaluationMonitor()
    {
      EvaluationMonitor.\u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091();
      EvaluationMonitor.license = new License();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal static void \u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(
      [In] object obj0)
    {
      Monitor.Enter(obj0);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static RuntimeTypeHandle \u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(
      int token)
    {
      return Zc6cq1kj6FKJ2MPvgL.e53w34m968awCm9P85taUZe(token);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static Type \u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(
      [In] RuntimeTypeHandle obj0)
    {
      return Type.GetTypeFromHandle(obj0);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static void \u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(
      [In] object obj0)
    {
      Monitor.Exit(obj0);
    }

    internal static bool \u0089\u008D\u0089\u0089\u0092\u0095\u0092\u0087\u008B\u0094\u008B\u008A\u0094\u008B\u008F\u008F\u0089\u0091\u008A\u0091\u0090\u008F\u0093\u008E\u008B\u0093\u008D\u008F\u0095\u008F\u0091\u0090\u0089\u0086\u008B\u0092() => true;

    internal static bool \u008D\u0092\u0089\u0095\u0094\u008A\u008B\u0089\u008E\u0087\u008F\u0090\u008C\u0086\u008E\u008E\u0090\u0094\u0089\u0086\u008F\u0087\u008A\u0094\u0094\u0090\u0095\u008E\u0090\u0087\u0091\u0089\u0089\u0095\u0091\u0091() => false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    static void \u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091() => yvlUlhYI2iCwI8t8s6.SLV0fFIsptsZtjvFft17();

    [MethodImpl(MethodImplOptions.NoInlining)]
    static void \u0086\u008A\u0093\u008D\u008B\u0090\u0094\u0092\u0089\u0094\u008A\u0091\u0088\u008F\u008F\u0090\u008B\u008F\u0088\u0089\u0095\u0087\u0091\u0092\u0095\u008E\u008B\u0089\u0095\u0091\u0092\u008A\u008E\u0094\u008D\u0091(
      [In] object obj0)
    {
      // ISSUE: explicit constructor call
      obj0.\u002Ector();
    }
  }
}
