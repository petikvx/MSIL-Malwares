// Decompiled with JetBrains decompiler
// Type: loadinghub.My.MySettings
// Assembly: loadinghub, Version=1.0.1.1, Culture=neutral, PublicKeyToken=null
// MVID: 1F46CF06-A4EB-445D-B6B9-7A8B4A2C4880
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.Blocker.boks-5f7c452c125d50e2b99edf70bbc090684b54d093d82153debf02f1f3d4c5a711.exe

using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

namespace loadinghub.My
{
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings \uE000 = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool \uE001;
    private static object \uE002 = RuntimeHelpers.GetObjectValue(new object());

    [DebuggerNonUserCode]
    public MySettings()
    {
    }

    [DebuggerNonUserCode]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    private static void \uE000(object _param0, EventArgs _param1)
    {
      if (!\uE002.\uE000.SaveMySettingsOnExit)
        return;
      \uE004.\uE000.Save();
    }

    public static MySettings \uE000
    {
      get
      {
        if (!MySettings.\uE001)
        {
          object Expression = MySettings.\uE002;
          ObjectFlowControl.CheckForSyncLockOnValueType(Expression);
          Monitor.Enter(Expression);
          try
          {
            if (!MySettings.\uE001)
            {
              \uE002.\uE000.Shutdown += (ShutdownEventHandler) ((_param0, _param1) =>
              {
                if (!\uE002.\uE000.SaveMySettingsOnExit)
                  return;
                \uE004.\uE000.Save();
              });
              MySettings.\uE001 = true;
            }
          }
          finally
          {
            Monitor.Exit(Expression);
          }
        }
        MySettings mySettings = MySettings.\uE000;
        return mySettings;
      }
    }
  }
}
