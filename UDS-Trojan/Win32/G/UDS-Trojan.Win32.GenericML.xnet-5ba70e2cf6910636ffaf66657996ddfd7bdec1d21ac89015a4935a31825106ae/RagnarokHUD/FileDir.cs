// Decompiled with JetBrains decompiler
// Type: RagnarokHUD.FileDir
// Assembly: BinaryAssem, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C3D41CFC-8277-4BEE-9AD4-AC67F2756AFC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-5ba70e2cf6910636ffaf66657996ddfd7bdec1d21ac89015a4935a31825106ae.exe

using System;

namespace RagnarokHUD
{
  internal class FileDir
  {
    private string directory;
    private int count = 1;
    private string stationClass;
    private string icon;
    private string shortNameList;
    private FileDir next = (FileDir) null;
    private FileDir prev = (FileDir) null;

    public FileDir(
      string newDirectory,
      string newStationClass,
      string newIcon,
      string newShortNameList)
    {
      this.directory = newDirectory;
      this.stationClass = newStationClass;
      this.icon = newIcon;
      this.shortNameList = newShortNameList;
    }

    public string getDir() => this.directory;

    public void setNext(FileDir newNext) => this.next = newNext;

    public FileDir getNext() => this.next;

    public void setPrev(FileDir newPrev) => this.prev = newPrev;

    public FileDir getPrev() => this.prev;

    public string getShortName() => this.shortNameList;

    public void addShortName(string newShortName)
    {
      this.shortNameList = this.shortNameList + ", " + newShortName;
      ++this.count;
    }

    public override string ToString() => this.directory + ";" + this.count.ToString() + ";" + this.stationClass + ";" + this.icon + ";" + this.shortNameList;

    public int compareTo(FileDir temp) => string.Compare(this.getDir(), temp.getDir(), StringComparison.OrdinalIgnoreCase);
  }
}
