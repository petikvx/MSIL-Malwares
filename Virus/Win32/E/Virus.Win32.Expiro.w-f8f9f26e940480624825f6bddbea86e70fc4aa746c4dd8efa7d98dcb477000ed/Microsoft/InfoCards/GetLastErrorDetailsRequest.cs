// Decompiled with JetBrains decompiler
// Type: Microsoft.InfoCards.GetLastErrorDetailsRequest
// Assembly: infocard, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: 1D4D5564-A025-490C-AF1D-DF4FBB709D1F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Virus.Win32.Expiro.w-f8f9f26e940480624825f6bddbea86e70fc4aa746c4dd8efa7d98dcb477000ed.exe

using System;
using System.IO;
using System.Text;

namespace Microsoft.InfoCards
{
  internal class GetLastErrorDetailsRequest : UIAgentRequest
  {
    public GetLastErrorDetailsRequest(
      IntPtr rpcHandle,
      Stream inArgs,
      Stream outArgs,
      ClientUIRequest parent)
      : base(rpcHandle, inArgs, outArgs, parent)
    {
    }

    protected override void OnMarshalInArgs()
    {
    }

    protected override void OnProcess()
    {
    }

    protected override void OnMarshalOutArgs()
    {
      BinaryWriter binaryWriter = new BinaryWriter(this.OutArgs, Encoding.Unicode);
      binaryWriter.Write(this.ParentRequest is GetBrowserTokenRequest);
      int num = -1073413888;
      Exception exception1 = this.ParentRequest.ProcessingException;
      if (exception1 != null)
      {
        Exception exception2 = (Exception) null;
        for (; exception1 is InfoCardBaseException; exception1 = exception1.InnerException)
        {
          exception2 = exception1;
          if (exception1.InnerException == null)
            break;
        }
        if (exception2 != null)
          num = (exception2 as InfoCardBaseException).NativeHResult;
      }
      binaryWriter.Write(num);
    }
  }
}
