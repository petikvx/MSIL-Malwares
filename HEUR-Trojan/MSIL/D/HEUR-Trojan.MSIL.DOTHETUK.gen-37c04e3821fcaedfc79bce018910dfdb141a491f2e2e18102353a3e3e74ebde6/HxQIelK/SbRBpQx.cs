// Decompiled with JetBrains decompiler
// Type: HxQIelK.SbRBpQx
// Assembly: aO8BSlP, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0a613f4dd989e8ae
// MVID: 26D80EA7-FF8D-466E-8999-D26AD81041E3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.DOTHETUK.gen-37c04e3821fcaedfc79bce018910dfdb141a491f2e2e18102353a3e3e74ebde6.exe

using \u0032KjROU9;
using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using uypeog7;

namespace HxQIelK
{
  internal sealed class SbRBpQx : IDisposable
  {
    private bool LgT0IbH;
    private byte[] \u00384F5kTX;
    private static readonly SbRBpQx.ZoM2iYq[] wFRBKNv = new SbRBpQx.ZoM2iYq[9]
    {
      null,
      null,
      (SbRBpQx.ZoM2iYq) new LcIcxyD.SndPanC(SbRBpQx.DmLxv0a),
      null,
      (SbRBpQx.ZoM2iYq) new LcIcxyD.SndPanC(SbRBpQx.x7SFzIG),
      null,
      null,
      null,
      (SbRBpQx.ZoM2iYq) new LcIcxyD.SndPanC(SbRBpQx.XXtANdi)
    };
    private static Dictionary<Type, List<Tuple<int, TypeCode>>> h2gNskm = new Dictionary<Type, List<Tuple<int, TypeCode>>>();

    public Stream p1naWPC { get; private set; }

    public QufvTHV rmvG8JL { get; set; }

    public static QufvTHV lJzB0TW => BitConverter.IsLittleEndian ? QufvTHV.LittleEndian : QufvTHV.BigEndian;

    private bool \u0036ixM6Ni => SbRBpQx.lJzB0TW != this.rmvG8JL;

    public SbRBpQx(Stream baseStream)
      : this(baseStream, QufvTHV.BigEndian)
    {
    }

    public SbRBpQx(Stream baseStream, QufvTHV endianness)
    {
      if (baseStream == null)
        throw new ArgumentNullException(nameof (baseStream));
      this.p1naWPC = baseStream.CanWrite ? baseStream : throw new ArgumentException("base stream is not writeable", nameof (baseStream));
      this.rmvG8JL = endianness;
    }

    ~SbRBpQx() => this.aJMtNlZ(false);

    private void Z9oaLEc(int _param1, int _param2)
    {
      if (this.\u0036ixM6Ni)
      {
        if (SbRBpQx.wFRBKNv[_param2] != null)
        {
          SbRBpQx.wFRBKNv[_param2](this.\u00384F5kTX, _param1);
        }
        else
        {
          for (int index = 0; index < _param1; index += _param2)
            Array.Reverse((Array) this.\u00384F5kTX, index, _param2);
        }
      }
      this.p1naWPC.Write(this.\u00384F5kTX, 0, _param1);
    }

    private static void DmLxv0a(byte[] vBQw2Z6, int YDC8GDK)
    {
      for (; YDC8GDK > 0; YDC8GDK -= 2)
      {
        byte num = vBQw2Z6[YDC8GDK - 2];
        vBQw2Z6[YDC8GDK - 2] = vBQw2Z6[YDC8GDK - 1];
        vBQw2Z6[YDC8GDK - 1] = num;
      }
    }

    private static void x7SFzIG(byte[] _param0, int DQgtNnp)
    {
      for (; DQgtNnp > 0; DQgtNnp -= 4)
      {
        byte num1 = _param0[DQgtNnp - 3];
        _param0[DQgtNnp - 3] = _param0[DQgtNnp - 2];
        _param0[DQgtNnp - 2] = num1;
        byte num2 = _param0[DQgtNnp - 4];
        _param0[DQgtNnp - 4] = _param0[DQgtNnp - 1];
        _param0[DQgtNnp - 1] = num2;
      }
    }

    private static void XXtANdi(byte[] Jifq2TW, int UwsLWSO)
    {
      for (; UwsLWSO > 0; UwsLWSO -= 8)
      {
        byte num1 = Jifq2TW[UwsLWSO - 5];
        Jifq2TW[UwsLWSO - 5] = Jifq2TW[UwsLWSO - 4];
        Jifq2TW[UwsLWSO - 4] = num1;
        byte num2 = Jifq2TW[UwsLWSO - 6];
        Jifq2TW[UwsLWSO - 6] = Jifq2TW[UwsLWSO - 3];
        Jifq2TW[UwsLWSO - 3] = num2;
        byte num3 = Jifq2TW[UwsLWSO - 7];
        Jifq2TW[UwsLWSO - 7] = Jifq2TW[UwsLWSO - 2];
        Jifq2TW[UwsLWSO - 2] = num3;
        byte num4 = Jifq2TW[UwsLWSO - 8];
        Jifq2TW[UwsLWSO - 8] = Jifq2TW[UwsLWSO - 1];
        Jifq2TW[UwsLWSO - 1] = num4;
      }
    }

    private void ala9Uz2(int DmLPAGR)
    {
      if (this.\u00384F5kTX != null && this.\u00384F5kTX.Length >= DmLPAGR)
        return;
      this.\u00384F5kTX = new byte[DmLPAGR];
    }

    public void qHdReOR(byte OTCKn4N)
    {
      this.ala9Uz2(1);
      this.\u00384F5kTX[0] = OTCKn4N;
      this.Z9oaLEc(1, 1);
    }

    public void eJUgD44(byte[] etlEPzR, int PzB8V9K, int BZtUbzu)
    {
      this.ala9Uz2(BZtUbzu);
      Array.Copy((Array) etlEPzR, PzB8V9K, (Array) this.\u00384F5kTX, 0, BZtUbzu);
      this.Z9oaLEc(BZtUbzu, 1);
    }

    public void D7RkW0q(sbyte ipU7xNr)
    {
      this.ala9Uz2(1);
      this.\u00384F5kTX[0] = (byte) ipU7xNr;
      this.Z9oaLEc(1, 1);
    }

    public void yaXtmEx(sbyte[] zO8cn40, int _param2, int rfXReTZ)
    {
      this.ala9Uz2(rfXReTZ);
      for (int index = 0; index < rfXReTZ; ++index)
        this.\u00384F5kTX[index] = (byte) zO8cn40[index + _param2];
      this.Z9oaLEc(rfXReTZ, 1);
    }

    public void JJebIPr(char MMfNC8D, Encoding ufbyxmH)
    {
      int num = ufbyxmH != null ? SbRBpQx.uM3QRsi(ufbyxmH) : throw new ArgumentNullException("encoding");
      this.ala9Uz2(num);
      Array.Copy((Array) ufbyxmH.GetBytes(new string(MMfNC8D, 1)), 0, (Array) this.\u00384F5kTX, 0, num);
      this.Z9oaLEc(num, num);
    }

    public void Fgf6rdA(char[] _param1, int DRnySE4, int ilRWVaq, Encoding MY1knED)
    {
      int num = MY1knED != null ? SbRBpQx.uM3QRsi(MY1knED) : throw new ArgumentNullException("encoding");
      this.ala9Uz2(num * ilRWVaq);
      Array.Copy((Array) MY1knED.GetBytes(_param1, DRnySE4, ilRWVaq), 0, (Array) this.\u00384F5kTX, 0, ilRWVaq * num);
      this.Z9oaLEc(num * ilRWVaq, num);
    }

    private static int uM3QRsi(Encoding fLC4Tub) => fLC4Tub == Encoding.UTF8 || fLC4Tub == Encoding.ASCII || fLC4Tub != Encoding.Unicode && fLC4Tub != Encoding.BigEndianUnicode ? 1 : 2;

    public void LXcB0lB(string R2TyuJa, Encoding AcfRkea, bool _param3)
    {
      this.Fgf6rdA(R2TyuJa.ToCharArray(), 0, R2TyuJa.Length, AcfRkea);
      if (!_param3)
        return;
      this.JJebIPr(char.MinValue, AcfRkea);
    }

    public void MV2UPhL(double J5Wnv7n)
    {
      this.ala9Uz2(8);
      Array.Copy((Array) BitConverter.GetBytes(J5Wnv7n), 0, (Array) this.\u00384F5kTX, 0, 8);
      this.Z9oaLEc(8, 8);
    }

    public void jV1rmlm(double[] cut5un4, int xDjC9ds, int DTsR4lJ)
    {
      this.ala9Uz2(8 * DTsR4lJ);
      for (int index = 0; index < DTsR4lJ; ++index)
        Array.Copy((Array) BitConverter.GetBytes(cut5un4[index + xDjC9ds]), 0, (Array) this.\u00384F5kTX, index * 8, 8);
      this.Z9oaLEc(8 * DTsR4lJ, 8);
    }

    public void FD8bmqz(float xjhe4CO)
    {
      this.ala9Uz2(4);
      Array.Copy((Array) BitConverter.GetBytes(xjhe4CO), 0, (Array) this.\u00384F5kTX, 0, 4);
      this.Z9oaLEc(4, 4);
    }

    public void \u0037dxI57X(float[] _param1, int _param2, int f1KTcWa)
    {
      this.ala9Uz2(4 * f1KTcWa);
      for (int index = 0; index < f1KTcWa; ++index)
        Array.Copy((Array) BitConverter.GetBytes(_param1[index + _param2]), 0, (Array) this.\u00384F5kTX, index * 4, 4);
      this.Z9oaLEc(4 * f1KTcWa, 4);
    }

    public void izP0hx9(int mn4zO4F)
    {
      this.ala9Uz2(4);
      Array.Copy((Array) BitConverter.GetBytes(mn4zO4F), 0, (Array) this.\u00384F5kTX, 0, 4);
      this.Z9oaLEc(4, 4);
    }

    public void FIoYVfo(int[] mgfmWZQ, int HqNN2w4, int RAvOfp1)
    {
      this.ala9Uz2(4 * RAvOfp1);
      for (int index = 0; index < RAvOfp1; ++index)
        Array.Copy((Array) BitConverter.GetBytes(mgfmWZQ[index + HqNN2w4]), 0, (Array) this.\u00384F5kTX, index * 4, 4);
      this.Z9oaLEc(4 * RAvOfp1, 4);
    }

    public void \u0035Yary3H(long RaGluS0)
    {
      this.ala9Uz2(8);
      Array.Copy((Array) BitConverter.GetBytes(RaGluS0), 0, (Array) this.\u00384F5kTX, 0, 8);
      this.Z9oaLEc(8, 8);
    }

    public void OUosqrj(long[] _param1, int bi7zTsP, int cSwPvb0)
    {
      this.ala9Uz2(8 * cSwPvb0);
      for (int index = 0; index < cSwPvb0; ++index)
        Array.Copy((Array) BitConverter.GetBytes(_param1[index + bi7zTsP]), 0, (Array) this.\u00384F5kTX, index * 8, 8);
      this.Z9oaLEc(8 * cSwPvb0, 8);
    }

    public void Xq0T1tO(short ELPDboJ)
    {
      this.ala9Uz2(2);
      Array.Copy((Array) BitConverter.GetBytes(ELPDboJ), 0, (Array) this.\u00384F5kTX, 0, 2);
      this.Z9oaLEc(2, 2);
    }

    public void FlwshVg(short[] IhmcBTU, int ICg2Xeb, int ksSV5GN)
    {
      this.ala9Uz2(2 * ksSV5GN);
      for (int index = 0; index < ksSV5GN; ++index)
        Array.Copy((Array) BitConverter.GetBytes(IhmcBTU[index + ICg2Xeb]), 0, (Array) this.\u00384F5kTX, index * 2, 2);
      this.Z9oaLEc(2 * ksSV5GN, 2);
    }

    public void Po8S92r(ushort nYe9eLp)
    {
      this.ala9Uz2(2);
      Array.Copy((Array) BitConverter.GetBytes(nYe9eLp), 0, (Array) this.\u00384F5kTX, 0, 2);
      this.Z9oaLEc(2, 2);
    }

    public void nBPRwv0(ushort[] FLaqJ0T, int WYEI0Bd, int myk0A1G)
    {
      this.ala9Uz2(2 * myk0A1G);
      for (int index = 0; index < myk0A1G; ++index)
        Array.Copy((Array) BitConverter.GetBytes(FLaqJ0T[index + WYEI0Bd]), 0, (Array) this.\u00384F5kTX, index * 2, 2);
      this.Z9oaLEc(2 * myk0A1G, 2);
    }

    public void xjXQ9vx(uint _param1)
    {
      this.ala9Uz2(4);
      Array.Copy((Array) BitConverter.GetBytes(_param1), 0, (Array) this.\u00384F5kTX, 0, 4);
      this.Z9oaLEc(4, 4);
    }

    public void YnxHuSp(uint[] FW1Bi6p, int S5AkjKT, int O9DXSjL)
    {
      this.ala9Uz2(4 * O9DXSjL);
      for (int index = 0; index < O9DXSjL; ++index)
        Array.Copy((Array) BitConverter.GetBytes(FW1Bi6p[index + S5AkjKT]), 0, (Array) this.\u00384F5kTX, index * 4, 4);
      this.Z9oaLEc(4 * O9DXSjL, 4);
    }

    public void \u00361bQybm(ulong D5moeiM)
    {
      this.ala9Uz2(8);
      Array.Copy((Array) BitConverter.GetBytes(D5moeiM), 0, (Array) this.\u00384F5kTX, 0, 8);
      this.Z9oaLEc(8, 8);
    }

    public void ALSGcuN(ulong[] _param1, int mlODpbJ, int IwPzhtM)
    {
      this.ala9Uz2(8 * IwPzhtM);
      for (int index = 0; index < IwPzhtM; ++index)
        Array.Copy((Array) BitConverter.GetBytes(_param1[index + mlODpbJ]), 0, (Array) this.\u00384F5kTX, index * 8, 8);
      this.Z9oaLEc(8 * IwPzhtM, 8);
    }

    public void zmsJtrb(int CBiH1fF, byte smFA8Ka)
    {
      int num = (int) (this.p1naWPC.Position % (long) CBiH1fF);
      if (num == 0)
        return;
      for (; num != CBiH1fF; ++num)
        this.p1naWPC.WriteByte(smFA8Ka);
    }

    public void Rh5Vh3N(int _param1, byte W1Uc1Uo, long kkumqfK, int fw7Ffm7)
    {
      int num = ((int) ((this.p1naWPC.Position - kkumqfK) % (long) _param1) + fw7Ffm7) % _param1;
      if (num == 0)
        return;
      for (; num != _param1; ++num)
        this.p1naWPC.WriteByte(W1Uc1Uo);
    }

    private List<Tuple<int, TypeCode>> P5PG8yA(Type Ehixiwt)
    {
      List<Tuple<int, TypeCode>> tupleList;
      try
      {
        tupleList = SbRBpQx.h2gNskm[Ehixiwt];
      }
      catch (KeyNotFoundException ex)
      {
        tupleList = new List<Tuple<int, TypeCode>>();
        if (this.rmvG8JL != SbRBpQx.lJzB0TW)
        {
          int num1 = 0;
          foreach (FieldInfo field in Ehixiwt.GetFields())
          {
            int int32 = Marshal.OffsetOf(Ehixiwt, field.Name).ToInt32();
            if (int32 != num1)
            {
              tupleList.Add(new Tuple<int, TypeCode>(int32 - num1, TypeCode.Empty));
              num1 = int32;
            }
            switch (Type.GetTypeCode(field.FieldType))
            {
              case TypeCode.Object:
                if (field.FieldType.IsArray)
                {
                  MarshalAsAttribute[] customAttributes = (MarshalAsAttribute[]) field.GetCustomAttributes(typeof (MarshalAsAttribute), false);
                  MarshalAsAttribute marshalAsAttribute = customAttributes.Length == 1 ? customAttributes[0] : throw new ArgumentException(string.Format("Field `{0}' is an array without a MarshalAs attribute.", (object) field.Name), "type");
                  if (marshalAsAttribute.Value != UnmanagedType.ByValArray)
                    throw new ArgumentException(string.Format("Field `{0}' is not a ByValArray.", (object) field.Name), "type");
                  Type elementType = field.FieldType.GetElementType();
                  switch (Type.GetTypeCode(elementType))
                  {
                    case TypeCode.Object:
                      for (int index = 0; index < marshalAsAttribute.SizeConst; ++index)
                      {
                        num1 += Marshal.SizeOf(elementType);
                        tupleList.AddRange((IEnumerable<Tuple<int, TypeCode>>) this.P5PG8yA(elementType));
                      }
                      continue;
                    case TypeCode.SByte:
                    case TypeCode.Byte:
                      num1 += marshalAsAttribute.SizeConst;
                      tupleList.Add(new Tuple<int, TypeCode>(marshalAsAttribute.SizeConst, Type.GetTypeCode(elementType)));
                      continue;
                    case TypeCode.Int16:
                    case TypeCode.UInt16:
                      num1 += 2 * marshalAsAttribute.SizeConst;
                      tupleList.Add(new Tuple<int, TypeCode>(marshalAsAttribute.SizeConst, Type.GetTypeCode(elementType)));
                      continue;
                    case TypeCode.Int32:
                    case TypeCode.UInt32:
                    case TypeCode.Single:
                      num1 += 4 * marshalAsAttribute.SizeConst;
                      tupleList.Add(new Tuple<int, TypeCode>(marshalAsAttribute.SizeConst, Type.GetTypeCode(elementType)));
                      continue;
                    case TypeCode.Int64:
                    case TypeCode.UInt64:
                    case TypeCode.Double:
                      num1 += 8 * marshalAsAttribute.SizeConst;
                      tupleList.Add(new Tuple<int, TypeCode>(marshalAsAttribute.SizeConst, Type.GetTypeCode(elementType)));
                      continue;
                    default:
                      continue;
                  }
                }
                else
                {
                  num1 += Marshal.SizeOf(field.FieldType);
                  tupleList.AddRange((IEnumerable<Tuple<int, TypeCode>>) this.P5PG8yA(field.FieldType));
                  break;
                }
              case TypeCode.SByte:
              case TypeCode.Byte:
                ++num1;
                tupleList.Add(new Tuple<int, TypeCode>(1, Type.GetTypeCode(field.FieldType)));
                break;
              case TypeCode.Int16:
              case TypeCode.UInt16:
                num1 += 2;
                tupleList.Add(new Tuple<int, TypeCode>(1, Type.GetTypeCode(field.FieldType)));
                break;
              case TypeCode.Int32:
              case TypeCode.UInt32:
              case TypeCode.Single:
                num1 += 4;
                tupleList.Add(new Tuple<int, TypeCode>(1, Type.GetTypeCode(field.FieldType)));
                break;
              case TypeCode.Int64:
              case TypeCode.UInt64:
              case TypeCode.Double:
                num1 += 8;
                tupleList.Add(new Tuple<int, TypeCode>(1, Type.GetTypeCode(field.FieldType)));
                break;
              default:
                throw new NotImplementedException();
            }
          }
          int num2 = Marshal.SizeOf(Ehixiwt);
          if (num2 != num1)
            tupleList.Add(new Tuple<int, TypeCode>(num2 - num1, TypeCode.Empty));
        }
        else
        {
          int num = Marshal.SizeOf(Ehixiwt);
          tupleList.Add(new Tuple<int, TypeCode>(num, TypeCode.Byte));
        }
        SbRBpQx.h2gNskm.Add(Ehixiwt, tupleList);
      }
      return tupleList;
    }

    private void \u0031DIK4H7(List<Tuple<int, TypeCode>> ZUsQ4iB, BinaryReader CF9b0FS)
    {
      foreach (Tuple<int, TypeCode> tuple in ZUsQ4iB)
      {
        switch (tuple.Item2)
        {
          case TypeCode.Empty:
            CF9b0FS.BaseStream.Seek((long) tuple.Item1, SeekOrigin.Current);
            this.p1naWPC.Seek((long) tuple.Item1, SeekOrigin.Current);
            break;
          case TypeCode.SByte:
          case TypeCode.Byte:
            this.eJUgD44(CF9b0FS.ReadBytes(tuple.Item1), 0, tuple.Item1);
            break;
          case TypeCode.Int16:
          case TypeCode.UInt16:
            for (int index = 0; index < tuple.Item1; ++index)
              this.Xq0T1tO(CF9b0FS.ReadInt16());
            break;
          case TypeCode.Int32:
          case TypeCode.UInt32:
          case TypeCode.Single:
            for (int index = 0; index < tuple.Item1; ++index)
              this.izP0hx9(CF9b0FS.ReadInt32());
            break;
          case TypeCode.Int64:
          case TypeCode.UInt64:
          case TypeCode.Double:
            for (int index = 0; index < tuple.Item1; ++index)
              this.\u0035Yary3H(CF9b0FS.ReadInt64());
            break;
          default:
            throw new NotImplementedException();
        }
      }
    }

    public void QTYigou(object _param1)
    {
      Type type = _param1.GetType();
      List<Tuple<int, TypeCode>> ZUsQ4iB = this.P5PG8yA(type);
      byte[] numArray = new byte[Marshal.SizeOf(type)];
      using (MemoryStream input = new MemoryStream(numArray))
      {
        using (BinaryReader CF9b0FS = new BinaryReader((Stream) input))
        {
          Marshal.StructureToPtr(_param1, Marshal.UnsafeAddrOfPinnedArrayElement<byte>(numArray, 0), true);
          this.\u0031DIK4H7(ZUsQ4iB, CF9b0FS);
        }
      }
    }

    public void \u00362kx0gt(Array V3phMkg)
    {
      Type elementType = V3phMkg.GetType().GetElementType();
      List<Tuple<int, TypeCode>> ZUsQ4iB = this.P5PG8yA(elementType);
      byte[] numArray = new byte[Marshal.SizeOf(elementType)];
      using (MemoryStream input = new MemoryStream(numArray))
      {
        using (BinaryReader CF9b0FS = new BinaryReader((Stream) input))
        {
          foreach (object structure in V3phMkg)
          {
            input.Seek(0L, SeekOrigin.Begin);
            Marshal.StructureToPtr(structure, Marshal.UnsafeAddrOfPinnedArrayElement<byte>(numArray, 0), true);
            this.\u0031DIK4H7(ZUsQ4iB, CF9b0FS);
          }
        }
      }
    }

    public void ORkQi23() => this.p1naWPC.Close();

    public void Pe8XbU5()
    {
      this.aJMtNlZ(true);
      GC.SuppressFinalize((object) this);
    }

    private void aJMtNlZ(bool ZlGAZUX)
    {
      if (this.LgT0IbH)
        return;
      if (!ZlGAZUX)
        ;
      this.p1naWPC = (Stream) null;
      this.\u00384F5kTX = (byte[]) null;
      this.LgT0IbH = true;
    }

    private delegate void ZoM2iYq(byte[] array, int count);
  }
}
