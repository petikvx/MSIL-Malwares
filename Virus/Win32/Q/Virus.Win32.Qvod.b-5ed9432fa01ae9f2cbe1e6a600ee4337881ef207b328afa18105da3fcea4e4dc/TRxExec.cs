// Decompiled with JetBrains decompiler
// Type: TRxExec.TRxExec
// Assembly: TRxExec, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7D98090C-5C6B-4EFE-98B4-7748406E3191
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Virus.Win32.Qvod.b-5ed9432fa01ae9f2cbe1e6a600ee4337881ef207b328afa18105da3fcea4e4dc.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.FileIO;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using TRxExec.My;

namespace TRxExec
{
  [StandardModule]
  internal sealed class TRxExec
  {
    [STAThread]
    public static void Main()
    {
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Microsoft.VisualBasic.FileSystem.CurDir() + "\\", Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories, "*.log"))
          MyProject.Computer.FileSystem.DeleteFile(file, UIOption.OnlyErrorDialogs, RecycleOption.DeletePermanently);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Microsoft.VisualBasic.FileSystem.CurDir() + "\\", Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories, "PLST.csv"))
          MyProject.Computer.FileSystem.DeleteFile(file, UIOption.OnlyErrorDialogs, RecycleOption.DeletePermanently);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
      string Left1 = Interaction.Command();
      if (Operators.CompareString(Left1, (string) null, false) != 0 && Operators.CompareString(Left1, "/?", false) != 0)
      {
        string str1 = (string) null;
        int num1 = 1;
        string str2 = new string((char[]) null);
        string Left2 = new string((char[]) null);
        bool flag = false;
        string str3 = Left1 + " e";
        int num2 = Strings.Len(str3);
        int Start = 1;
        while (Start <= num2)
        {
          string Left3 = Strings.Mid(str3, Start, 1);
          if (Operators.CompareString(Left3, "/", false) == 0)
            str1 = Left3;
          else if (Operators.CompareString(Left3, " ", false) == 0)
          {
            switch (num1)
            {
              case 1:
                str2 = str1.Replace("/", "");
                str1 = (string) null;
                checked { ++num1; }
                break;
              case 2:
                Left2 = str1.Replace("/", "");
                if (Operators.CompareString(Left2, "y", false) == 0)
                  flag = true;
                else if (Operators.CompareString(Left2, "n", false) == 0)
                {
                  flag = false;
                }
                else
                {
                  Console.WriteLine("Invalid switch");
                  Environment.Exit(1);
                  return;
                }
                str1 = (string) null;
                checked { ++num1; }
                break;
            }
          }
          else
            str1 += Left3;
          checked { ++Start; }
        }
        if (Operators.CompareString(Left2, (string) null, false) == 0)
        {
          Console.WriteLine("Invalid switch");
          Environment.Exit(1);
        }
        else if (!File.Exists(Microsoft.VisualBasic.FileSystem.CurDir() + "\\" + str2))
        {
          Console.WriteLine("PLU File not found");
          Environment.Exit(1);
        }
        else
        {
          try
          {
            foreach (string directory in MyProject.Computer.FileSystem.GetDirectories(Microsoft.VisualBasic.FileSystem.CurDir() + "\\", Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories, "*"))
            {
              int num3 = 1;
              StreamReader streamReader = new StreamReader(Microsoft.VisualBasic.FileSystem.CurDir() + "\\" + str2);
              StreamWriter streamWriter = File.AppendText(directory + "\\PLST.csv");
              while (!streamReader.EndOfStream)
              {
                if (num3 == 1)
                {
                  if (!flag)
                    streamWriter.WriteLine(streamReader.ReadLine());
                  else
                    streamReader.ReadLine();
                }
                else
                  streamWriter.WriteLine(streamReader.ReadLine());
                checked { ++num3; }
              }
              streamReader.Close();
              streamWriter.Close();
              streamWriter.Dispose();
            }
          }
          finally
          {
            IEnumerator<string> enumerator;
            enumerator?.Dispose();
          }
          try
          {
            File.Delete(Microsoft.VisualBasic.FileSystem.CurDir() + "\\" + str2);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            Console.WriteLine(ex.Message.ToString());
            ProjectData.ClearProjectError();
          }
          string str4 = Microsoft.VisualBasic.FileSystem.CurDir();
          try
          {
            foreach (string file in MyProject.Computer.FileSystem.GetFiles(Microsoft.VisualBasic.FileSystem.CurDir() + "\\", Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories, "TRxConsole.exe"))
            {
              Directory.SetCurrentDirectory(Path.GetDirectoryName(file) + "\\");
              new Process().StartInfo.UseShellExecute = false;
              Process.Start("TRxConsole.exe");
              Directory.SetCurrentDirectory(str4 + "\\");
            }
          }
          finally
          {
            IEnumerator<string> enumerator;
            enumerator?.Dispose();
          }
          Environment.Exit(0);
        }
      }
      else
      {
        Console.WriteLine("TRxExec     version " + MyProject.Application.Info.Version.ToString());
        Console.WriteLine("Copyright (c) BIZERBA Software Center Manila 2008");
        Console.WriteLine("");
        Console.WriteLine("Usage: trxexec.exe /plufile /option");
        Console.WriteLine("");
        Console.WriteLine("Parameters:");
        Console.WriteLine("     /plufile: PLU Filename");
        Console.WriteLine("          Filename of the PLU File");
        Console.WriteLine("          NOTE: PLU File must be in same directory");
        Console.WriteLine("          with TRxExec");
        Console.WriteLine("");
        Console.WriteLine("     /option: Delete Header Option");
        Console.WriteLine("          /y = Header will be deleted");
        Console.WriteLine("          /n = Header will NOT be deleted");
        Console.WriteLine("");
        Console.WriteLine("Copyright (c) BIZERBA Software Center Manila 2008");
        Environment.Exit(0);
      }
    }
  }
}
