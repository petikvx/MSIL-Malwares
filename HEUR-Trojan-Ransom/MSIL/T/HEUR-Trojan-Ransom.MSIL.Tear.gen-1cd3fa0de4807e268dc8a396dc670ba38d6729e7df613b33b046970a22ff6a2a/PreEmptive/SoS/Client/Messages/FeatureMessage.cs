// Decompiled with JetBrains decompiler
// Type: PreEmptive.SoS.Client.Messages.FeatureMessage
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common;
using PreEmptive.Analytics.Common.Utilities;
using PreEmptive.SoS.Client.Cache;
using System;

namespace PreEmptive.SoS.Client.Messages
{
  public class FeatureMessage : Message
  {
    public FeatureMessage(string name)
    {
      int A_1 = 0;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.Name = name != null && !(name == string.Empty) ? name : throw new ArgumentException(Utils.a("\uF5B3쒵\uDFB7쾹톻\uDBBD꺿뛁\uE4C3ꗅ꧇\uA4C9ꋋꇍ\uA4CF\uF2D1뛓돕\uF8D7듙\uA9DB닝賟싡诣铥죧迩臫黭蓯诱", A_1), Utils.a("\uDAB3ힵ햷\uDFB9", A_1));
    }

    public string Name
    {
      get
      {
        int num1 = 24498;
        int num2 = num1;
        num1 = 24498;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 0;
            if (num4 == 0)
              ;
            num4 = 1;
            if (num4 == 0)
              ;
            return this.a;
          default:
            goto case 1;
        }
      }
      set
      {
        int num1 = -13575;
        int num2 = num1;
        num1 = -13575;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            int num4 = 1;
            if (num4 == 0)
              ;
            num4 = 0;
            if (num4 == 0)
              ;
            this.a = value;
            break;
          default:
            goto case 1;
        }
      }
    }

    public void AddToGroup(Guid id)
    {
      int num1 = 1;
      if (num1 == 0)
        ;
      num1 = -9103;
      int num2 = num1;
      num1 = -9103;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          num1 = 0;
          if (num1 == 0)
            break;
          break;
        default:
          goto case 1;
      }
    }

    public override void Send(CacheService cache, PlatformClient paclient)
    {
      int A_1 = 0;
      int num1 = 0;
      switch (num1)
      {
        default:
          BinaryInfo binary;
          ExtendedKeys keys;
          int num2;
          switch (0)
          {
            case 0:
label_3:
              binary = Message.ConvertBinaryInfo(this.Binary);
              keys = Message.ConvertExtendedKeys(this.GetExtendedKeys());
              num2 = 0;
              num1 = num2;
              goto default;
            default:
              while (true)
              {
                switch (num1)
                {
                  case 0:
                    if (this.Event.Code.Equals(Utils.a("\uF2B3펵\uD9B7캹즻첽ꖿ\uECC1郃꿅ꯇꇉ", A_1)))
                    {
                      num2 = 3;
                      num1 = num2;
                      continue;
                    }
                    num2 = 1;
                    if (num2 == 0)
                      ;
                    num2 = 4;
                    num1 = num2;
                    continue;
                  case 1:
label_13:
                    paclient.FeatureStop(this.Name, keys, new Guid?(), binary, new Guid?());
                    num2 = 6;
                    num1 = num2;
                    continue;
                  case 2:
                    goto label_11;
                  case 3:
                    num2 = 11988;
                    int num3 = num2;
                    num2 = 11988;
                    int num4 = num2;
                    switch (num3 == num4 ? 1 : 0)
                    {
                      case 0:
                      case 2:
                        goto label_13;
                      default:
                        goto label_7;
                    }
                  case 4:
                    if (!this.Event.Code.Equals(Utils.a("\uF2B3펵\uD9B7캹즻첽ꖿ\uECC1韃닅꧇룉룋", A_1)))
                    {
                      num2 = 5;
                      num1 = num2;
                      continue;
                    }
                    num2 = 2;
                    num1 = num2;
                    continue;
                  case 5:
                    if (this.Event.Code.Equals(Utils.a("\uF2B3펵\uD9B7캹즻첽ꖿ\uECC1韃닅\uA7C7뫉", A_1)))
                    {
                      num2 = 1;
                      num1 = num2;
                      continue;
                    }
                    goto label_19;
                  case 6:
                    goto label_14;
                  default:
                    goto label_3;
                }
              }
label_14:
              return;
label_7:
              num2 = 0;
              if (num2 == 0)
                ;
              paclient.FeatureTick(this.Name, keys, new Guid?(), binary);
              return;
label_19:
              return;
label_11:
              paclient.FeatureStart(this.Name, keys, new Guid?(), binary, new Guid?());
              return;
          }
      }
    }
  }
}
