// Decompiled with JetBrains decompiler
// Type: MiniGames_Team9.MayBay
// Assembly: IdentityRefere, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9F5D51E6-71BD-43F4-AA35-8F19B20FF789
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-3cda0e34cd6f8adaabeeeb6e8bd08d80ba8d758bb3218c8058cd88353d253b61.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;

namespace MiniGames_Team9
{
  public class MayBay : Form
  {
    private bool goLeft;
    private bool goRight;
    private bool shooting;
    private bool isGameOver;
    private int score;
    private int playerSpeed = 12;
    private int enemySpeed;
    private int bulletSpeed;
    private Random rnd = new Random();
    private IContainer components = (IContainer) null;
    private Label txtScore;
    private PictureBox bullet;
    private PictureBox player;
    private Timer gameTimer;
    private PictureBox enemyThree;
    private PictureBox enemyTwo;
    private PictureBox enemyOne;

    private void gameTimer_Tick(object sender, EventArgs e)
    {
      this.txtScore.Text = this.score.ToString();
      this.enemyOne.Top += this.enemySpeed;
      this.enemyTwo.Top += this.enemySpeed;
      this.enemyThree.Top += this.enemySpeed;
      if (this.enemyOne.Top > 710 || this.enemyTwo.Top > 710 || this.enemyThree.Top > 710)
        this.gameOver();
      if (this.goLeft && this.player.Left > 0)
        this.player.Left -= this.playerSpeed;
      if (this.goRight && this.player.Left < 688)
        this.player.Left += this.playerSpeed;
      if (this.shooting)
      {
        this.bulletSpeed = 20;
        this.bullet.Top -= this.bulletSpeed;
      }
      else
      {
        this.bullet.Left = -300;
        this.bulletSpeed = 0;
      }
      if (this.bullet.Top < -30)
        this.shooting = false;
      if (this.bullet.Bounds.IntersectsWith(this.enemyOne.Bounds))
      {
        ++this.score;
        this.enemyOne.Top = -450;
        this.enemyOne.Left = this.rnd.Next(20, 600);
        this.shooting = false;
      }
      if (this.bullet.Bounds.IntersectsWith(this.enemyTwo.Bounds))
      {
        ++this.score;
        this.enemyTwo.Top = -650;
        this.enemyTwo.Left = this.rnd.Next(20, 600);
        this.shooting = false;
      }
      if (this.bullet.Bounds.IntersectsWith(this.enemyThree.Bounds))
      {
        ++this.score;
        this.enemyThree.Top = -750;
        this.enemyThree.Left = this.rnd.Next(20, 600);
        this.shooting = false;
      }
      if (this.score == 5)
        this.enemySpeed = 10;
      if (this.score != 10)
        return;
      this.enemySpeed = 15;
    }

    private void gameOver()
    {
      this.isGameOver = true;
      this.gameTimer.Stop();
      Label txtScore = this.txtScore;
      txtScore.Text = txtScore.Text + Environment.NewLine + "Game Over!!" + Environment.NewLine + "Press Enter to try again.";
    }

    private void keyisdown(object sender, KeyEventArgs e)
    {
      if (e.KeyCode == Keys.Left)
        this.goLeft = true;
      if (e.KeyCode != Keys.Right)
        return;
      this.goRight = true;
    }

    private void keyisup(object sender, KeyEventArgs e)
    {
      if (e.KeyCode == Keys.Left)
        this.goLeft = false;
      if (e.KeyCode == Keys.Right)
        this.goRight = false;
      if (e.KeyCode == Keys.Space && !this.shooting)
      {
        this.shooting = true;
        this.bullet.Top = this.player.Top - 30;
        this.bullet.Left = this.player.Left + this.player.Width / 2;
      }
      if (e.KeyCode != Keys.Return || !this.isGameOver)
        return;
      this.resetGame();
    }

    public MayBay()
    {
      this.InitializeComponent();
      this.resetGame();
    }

    private void resetGame()
    {
      this.gameTimer.Start();
      this.enemySpeed = 6;
      this.enemyOne.Left = this.rnd.Next(20, 600);
      this.enemyTwo.Left = this.rnd.Next(20, 600);
      this.enemyThree.Left = this.rnd.Next(20, 600);
      this.enemyOne.Top = this.rnd.Next(0, 200) * -1;
      this.enemyTwo.Top = this.rnd.Next(0, 500) * -1;
      this.enemyThree.Top = this.rnd.Next(0, 900) * -1;
      this.score = 0;
      this.bulletSpeed = 0;
      this.bullet.Left = -300;
      this.shooting = false;
      this.txtScore.Text = this.score.ToString();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      this.txtScore = new Label();
      this.player = new PictureBox();
      this.bullet = new PictureBox();
      this.gameTimer = new Timer(this.components);
      this.enemyThree = new PictureBox();
      this.enemyTwo = new PictureBox();
      this.enemyOne = new PictureBox();
      ((ISupportInitialize) this.player).BeginInit();
      ((ISupportInitialize) this.bullet).BeginInit();
      ((ISupportInitialize) this.enemyThree).BeginInit();
      ((ISupportInitialize) this.enemyTwo).BeginInit();
      ((ISupportInitialize) this.enemyOne).BeginInit();
      this.SuspendLayout();
      this.txtScore.Font = new Font("Microsoft Sans Serif", 24f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.txtScore.ForeColor = SystemColors.ControlLightLight;
      this.txtScore.Location = new Point(2, 224);
      this.txtScore.Name = "txtScore";
      this.txtScore.Size = new Size(798, 150);
      this.txtScore.TabIndex = 4;
      this.txtScore.Text = "0";
      this.txtScore.TextAlign = ContentAlignment.MiddleCenter;
      this.player.Location = new Point(321, 564);
      this.player.Name = "player";
      this.player.Size = new Size(110, 98);
      this.player.SizeMode = PictureBoxSizeMode.AutoSize;
      this.player.TabIndex = 6;
      this.player.TabStop = false;
      this.bullet.Location = new Point(459, 259);
      this.bullet.Name = "bullet";
      this.bullet.Size = new Size(7, 27);
      this.bullet.SizeMode = PictureBoxSizeMode.AutoSize;
      this.bullet.TabIndex = 5;
      this.bullet.TabStop = false;
      this.gameTimer.Interval = 20;
      this.gameTimer.Tick += new EventHandler(this.gameTimer_Tick);
      this.enemyThree.Location = new Point(675, 34);
      this.enemyThree.Name = "enemyThree";
      this.enemyThree.Size = new Size(100, 85);
      this.enemyThree.SizeMode = PictureBoxSizeMode.AutoSize;
      this.enemyThree.TabIndex = 7;
      this.enemyThree.TabStop = false;
      this.enemyTwo.Location = new Point(345, 34);
      this.enemyTwo.Name = "enemyTwo";
      this.enemyTwo.Size = new Size(100, 85);
      this.enemyTwo.SizeMode = PictureBoxSizeMode.AutoSize;
      this.enemyTwo.TabIndex = 8;
      this.enemyTwo.TabStop = false;
      this.enemyOne.Location = new Point(37, 34);
      this.enemyOne.Name = "enemyOne";
      this.enemyOne.Size = new Size(100, 85);
      this.enemyOne.SizeMode = PictureBoxSizeMode.AutoSize;
      this.enemyOne.TabIndex = 9;
      this.enemyOne.TabStop = false;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.ActiveCaptionText;
      this.ClientSize = new Size(800, 674);
      this.Controls.Add((Control) this.enemyThree);
      this.Controls.Add((Control) this.enemyTwo);
      this.Controls.Add((Control) this.enemyOne);
      this.Controls.Add((Control) this.player);
      this.Controls.Add((Control) this.bullet);
      this.Controls.Add((Control) this.txtScore);
      this.Name = nameof (MayBay);
      this.Text = nameof (MayBay);
      this.KeyDown += new KeyEventHandler(this.keyisdown);
      this.KeyUp += new KeyEventHandler(this.keyisup);
      ((ISupportInitialize) this.player).EndInit();
      ((ISupportInitialize) this.bullet).EndInit();
      ((ISupportInitialize) this.enemyThree).EndInit();
      ((ISupportInitialize) this.enemyTwo).EndInit();
      ((ISupportInitialize) this.enemyOne).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
