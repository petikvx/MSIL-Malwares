// Decompiled with JetBrains decompiler
// Type: ‌‎‍‌⁪⁬⁪‬⁫​⁮⁬⁯‎⁪‍⁭‎⁯​⁪⁯⁬‬‬‌‭‭⁯⁬‫‮‬⁭⁬⁭⁪⁯⁭‏‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u200C‎‍‌⁪⁬⁪‬⁫​⁮⁬⁯‎⁪‍⁭‎⁯​⁪⁯⁬‬‬‌‭‭⁯⁬‫‮‬⁭⁬⁭⁪⁯⁭‏‮ : 
  \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮
{
  private static readonly byte[] \u200B‫‏‏‫⁮⁫⁮⁯⁮‌⁪‍⁯⁬⁬‌‫‭⁫​‫⁬‭⁮⁬⁯‬⁮‏‭‏‮‌⁪‬​‌‮‫‮ = new byte[256]
  {
    (byte) 217,
    (byte) 120,
    (byte) 249,
    (byte) 196,
    (byte) 25,
    (byte) 221,
    (byte) 181,
    (byte) 237,
    (byte) 40,
    (byte) 233,
    (byte) 253,
    (byte) 121,
    (byte) 74,
    (byte) 160,
    (byte) 216,
    (byte) 157,
    (byte) 198,
    (byte) 126,
    (byte) 55,
    (byte) 131,
    (byte) 43,
    (byte) 118,
    (byte) 83,
    (byte) 142,
    (byte) 98,
    (byte) 76,
    (byte) 100,
    (byte) 136,
    (byte) 68,
    (byte) 139,
    (byte) 251,
    (byte) 162,
    (byte) 23,
    (byte) 154,
    (byte) 89,
    (byte) 245,
    (byte) 135,
    (byte) 179,
    (byte) 79,
    (byte) 19,
    (byte) 97,
    (byte) 69,
    (byte) 109,
    (byte) 141,
    (byte) 9,
    (byte) 129,
    (byte) 125,
    (byte) 50,
    (byte) 189,
    (byte) 143,
    (byte) 64,
    (byte) 235,
    (byte) 134,
    (byte) 183,
    (byte) 123,
    (byte) 11,
    (byte) 240,
    (byte) 149,
    (byte) 33,
    (byte) 34,
    (byte) 92,
    (byte) 107,
    (byte) 78,
    (byte) 130,
    (byte) 84,
    (byte) 214,
    (byte) 101,
    (byte) 147,
    (byte) 206,
    (byte) 96,
    (byte) 178,
    (byte) 28,
    (byte) 115,
    (byte) 86,
    (byte) 192,
    (byte) 20,
    (byte) 167,
    (byte) 140,
    (byte) 241,
    (byte) 220,
    (byte) 18,
    (byte) 117,
    (byte) 202,
    (byte) 31,
    (byte) 59,
    (byte) 190,
    (byte) 228,
    (byte) 209,
    (byte) 66,
    (byte) 61,
    (byte) 212,
    (byte) 48,
    (byte) 163,
    (byte) 60,
    (byte) 182,
    (byte) 38,
    (byte) 111,
    (byte) 191,
    (byte) 14,
    (byte) 218,
    (byte) 70,
    (byte) 105,
    (byte) 7,
    (byte) 87,
    (byte) 39,
    (byte) 242,
    (byte) 29,
    (byte) 155,
    (byte) 188,
    (byte) 148,
    (byte) 67,
    (byte) 3,
    (byte) 248,
    (byte) 17,
    (byte) 199,
    (byte) 246,
    (byte) 144,
    (byte) 239,
    (byte) 62,
    (byte) 231,
    (byte) 6,
    (byte) 195,
    (byte) 213,
    (byte) 47,
    (byte) 200,
    (byte) 102,
    (byte) 30,
    (byte) 215,
    (byte) 8,
    (byte) 232,
    (byte) 234,
    (byte) 222,
    (byte) 128,
    (byte) 82,
    (byte) 238,
    (byte) 247,
    (byte) 132,
    (byte) 170,
    (byte) 114,
    (byte) 172,
    (byte) 53,
    (byte) 77,
    (byte) 106,
    (byte) 42,
    (byte) 150,
    (byte) 26,
    (byte) 210,
    (byte) 113,
    (byte) 90,
    (byte) 21,
    (byte) 73,
    (byte) 116,
    (byte) 75,
    (byte) 159,
    (byte) 208,
    (byte) 94,
    (byte) 4,
    (byte) 24,
    (byte) 164,
    (byte) 236,
    (byte) 194,
    (byte) 224,
    (byte) 65,
    (byte) 110,
    (byte) 15,
    (byte) 81,
    (byte) 203,
    (byte) 204,
    (byte) 36,
    (byte) 145,
    (byte) 175,
    (byte) 80,
    (byte) 161,
    (byte) 244,
    (byte) 112,
    (byte) 57,
    (byte) 153,
    (byte) 124,
    (byte) 58,
    (byte) 133,
    (byte) 35,
    (byte) 184,
    (byte) 180,
    (byte) 122,
    (byte) 252,
    (byte) 2,
    (byte) 54,
    (byte) 91,
    (byte) 37,
    (byte) 85,
    (byte) 151,
    (byte) 49,
    (byte) 45,
    (byte) 93,
    (byte) 250,
    (byte) 152,
    (byte) 227,
    (byte) 138,
    (byte) 146,
    (byte) 174,
    (byte) 5,
    (byte) 223,
    (byte) 41,
    (byte) 16,
    (byte) 103,
    (byte) 108,
    (byte) 186,
    (byte) 201,
    (byte) 211,
    (byte) 0,
    (byte) 230,
    (byte) 207,
    (byte) 225,
    (byte) 158,
    (byte) 168,
    (byte) 44,
    (byte) 99,
    (byte) 22,
    (byte) 1,
    (byte) 63,
    (byte) 88,
    (byte) 226,
    (byte) 137,
    (byte) 169,
    (byte) 13,
    (byte) 56,
    (byte) 52,
    (byte) 27,
    (byte) 171,
    (byte) 51,
    byte.MaxValue,
    (byte) 176,
    (byte) 187,
    (byte) 72,
    (byte) 12,
    (byte) 95,
    (byte) 185,
    (byte) 177,
    (byte) 205,
    (byte) 46,
    (byte) 197,
    (byte) 243,
    (byte) 219,
    (byte) 71,
    (byte) 229,
    (byte) 165,
    (byte) 156,
    (byte) 119,
    (byte) 10,
    (byte) 166,
    (byte) 32,
    (byte) 104,
    (byte) 254,
    (byte) 127,
    (byte) 193,
    (byte) 173
  };
  private const int \u200D‌‍⁭‬‭⁯‌​⁯‍​‬‮‬‭‎​‎⁮‎‬‍⁯‮⁪‌‪​​‍⁫⁮‫‍‫‌⁬‍⁭‮ = 8;
  private int[] \u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮;
  private bool \u200C‬‍​‫‭⁫‫⁫‬‭‪⁬‏⁭⁮‏⁬‮‮⁪⁮⁯‬‍⁭⁫‌⁫‬‬‪‫‏‪‍⁮‫‍‫‮;

  private int[] \u206F‌‌‌‫‎‪⁪⁫‎⁪​‫‎⁪⁯⁪‮‎‪⁬‫‪‫⁫‎⁮‍⁫⁭‭⁮⁯⁫⁯⁭‎‪⁬‭‮(byte[] _param1, int _param2)
  {
    int[] numArray1 = new int[128];
    for (int index = 0; index != _param1.Length; ++index)
      numArray1[index] = (int) _param1[index] & (int) byte.MaxValue;
    int length = _param1.Length;
    if (length < 128)
    {
      int num1 = 0;
      int num2 = numArray1[length - 1];
      do
      {
        num2 = (int) \u200C‎‍‌⁪⁬⁪‬⁫​⁮⁬⁯‎⁪‍⁭‎⁯​⁪⁯⁬‬‬‌‭‭⁯⁬‫‮‬⁭⁬⁭⁪⁯⁭‏‮.\u200B‫‏‏‫⁮⁫⁮⁯⁮‌⁪‍⁯⁬⁬‌‫‭⁫​‫⁬‭⁮⁬⁯‬⁮‏‭‏‮‌⁪‬​‌‮‫‮[num2 + numArray1[num1++] & (int) byte.MaxValue] & (int) byte.MaxValue;
        numArray1[length++] = num2;
      }
      while (length < 128);
    }
    int num3 = _param2 + 7 >> 3;
    int num4 = (int) \u200C‎‍‌⁪⁬⁪‬⁫​⁮⁬⁯‎⁪‍⁭‎⁯​⁪⁯⁬‬‬‌‭‭⁯⁬‫‮‬⁭⁬⁭⁪⁯⁭‏‮.\u200B‫‏‏‫⁮⁫⁮⁯⁮‌⁪‍⁯⁬⁬‌‫‭⁫​‫⁬‭⁮⁬⁯‬⁮‏‭‏‮‌⁪‬​‌‮‫‮[numArray1[128 - num3] & (int) byte.MaxValue >> (7 & -_param2)] & (int) byte.MaxValue;
    numArray1[128 - num3] = num4;
    for (int index = 128 - num3 - 1; index >= 0; --index)
    {
      num4 = (int) \u200C‎‍‌⁪⁬⁪‬⁫​⁮⁬⁯‎⁪‍⁭‎⁯​⁪⁯⁬‬‬‌‭‭⁯⁬‫‮‬⁭⁬⁭⁪⁯⁭‏‮.\u200B‫‏‏‫⁮⁫⁮⁯⁮‌⁪‍⁯⁬⁬‌‫‭⁫​‫⁬‭⁮⁬⁯‬⁮‏‭‏‮‌⁪‬​‌‮‫‮[num4 ^ numArray1[index + num3]] & (int) byte.MaxValue;
      numArray1[index] = num4;
    }
    int[] numArray2 = new int[64];
    for (int index = 0; index != numArray2.Length; ++index)
      numArray2[index] = numArray1[2 * index] + (numArray1[2 * index + 1] << 8);
    return numArray2;
  }

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    this.\u200C‬‍​‫‭⁫‫⁫‬‭‪⁬‏⁭⁮‏⁬‮‮⁪⁮⁯‬‍⁭⁫‌⁫‬‬‪‫‏‪‍⁮‫‍‫‮ = _param1;
    switch (_param2)
    {
      case \u200D‮⁬⁭⁪⁪‬⁪‭‬⁯‌⁮‎⁬‪‏‌⁪⁮⁪‫⁯‫‪‌⁭⁭​‭⁪⁯‌‫​‫‪⁮⁭⁮‮ _:
        \u200D‮⁬⁭⁪⁪‬⁪‭‬⁯‌⁮‎⁬‪‏‌⁪⁮⁪‫⁯‫‪‌⁭⁭​‭⁪⁯‌‫​‫‪⁮⁭⁮‮ obj = (\u200D‮⁬⁭⁪⁪‬⁪‭‬⁯‌⁮‎⁬‪‏‌⁪⁮⁪‫⁯‫‪‌⁭⁭​‭⁪⁯‌‫​‫‪⁮⁭⁮‮) _param2;
        this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮ = this.\u206F‌‌‌‫‎‪⁪⁫‎⁪​‫‎⁪⁯⁪‮‎‪⁬‫‪‫⁫‎⁮‍⁫⁭‭⁮⁯⁫⁯⁭‎‪⁬‭‮(obj.\u202B‫⁬⁬⁮‍‏⁪‭‎⁪‏‬⁪​⁭‍⁮​​⁬‭‌‮‬‎‍⁭⁯‮⁫⁬⁯⁭​‪‬‍‎‭‮(), obj.\u200D⁫‭⁭‮‍⁭‏‬​⁭‌⁯‍‪‫‌⁭‭‮⁯⁬‭⁫‎‌⁬‭⁫⁬⁪⁮⁭⁮‫‪⁫⁯‫⁫‮);
        break;
      case \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮ _:
        byte[] numArray = ((\u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮) _param2).\u202B‫⁬⁬⁮‍‏⁪‭‎⁪‏‬⁪​⁭‍⁮​​⁬‭‌‮‬‎‍⁭⁯‮⁫⁬⁯⁭​‪‬‍‎‭‮();
        this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮ = this.\u206F‌‌‌‫‎‪⁪⁫‎⁪​‫‎⁪⁯⁪‮‎‪⁬‫‪‫⁫‎⁮‍⁫⁭‭⁮⁯⁫⁯⁭‎‪⁬‭‮(numArray, numArray.Length * 8);
        break;
      default:
        throw new ArgumentException("invalid parameter passed to RC2 init - " + \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200B‮‬​‭‮⁪‫‫‍‌⁮‎‍‬‪‫⁬⁮​⁯⁭‎‫⁯‎⁭⁯‍‭‮⁫​‪‮‭⁪‭‫‭‮((object) _param2));
    }
  }

  public virtual void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮()
  {
  }

  public virtual string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => "RC2";

  public virtual bool \u200F‍‌⁭‬⁯‪‌‍‮‬‏​⁭‪‬‌​‬‍‭‮‬​⁭‬‎‬‌‪‬⁪‏​‎‎​‮⁬‎‮ => false;

  public virtual int \u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() => 8;

  public virtual int \u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    if (this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮ == null)
      throw new InvalidOperationException("RC2 engine not initialised");
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(_param1, _param2, 8, "input buffer too short");
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param3, _param4, 8, "output buffer too short");
    if (this.\u200C‬‍​‫‭⁫‫⁫‬‭‪⁬‏⁭⁮‏⁬‮‮⁪⁮⁯‬‍⁭⁫‌⁫‬‬‪‫‏‪‍⁮‫‍‫‮)
      this.\u202C⁭‬‪⁪‎‮⁫‪‮‫‏‪⁮‬‭‌⁮⁮‪‬⁯⁫⁬⁬​‏​‏​‮‪‪⁬‍⁫‎​‌‮(_param1, _param2, _param3, _param4);
    else
      this.\u206F‮‎‌‮‍‬‌​‫⁮‮⁪​‪‮‍⁯‏​‌⁫‫‬‫⁭‌⁯‮‪⁫⁬‎⁭⁫⁪‎‮‮‭‮(_param1, _param2, _param3, _param4);
    return 8;
  }

  private int \u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(int _param1, int _param2)
  {
    _param1 &= (int) ushort.MaxValue;
    return _param1 << _param2 | _param1 >> 16 - _param2;
  }

  private void \u202C⁭‬‪⁪‎‮⁫‪‮‫‏‪⁮‬‭‌⁮⁮‪‬⁯⁫⁬⁬​‏​‏​‮‪‪⁬‍⁫‎​‌‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    int num1 = (((int) _param1[_param2 + 7] & (int) byte.MaxValue) << 8) + ((int) _param1[_param2 + 6] & (int) byte.MaxValue);
    int num2 = (((int) _param1[_param2 + 5] & (int) byte.MaxValue) << 8) + ((int) _param1[_param2 + 4] & (int) byte.MaxValue);
    int num3 = (((int) _param1[_param2 + 3] & (int) byte.MaxValue) << 8) + ((int) _param1[_param2 + 2] & (int) byte.MaxValue);
    int num4 = (((int) _param1[_param2 + 1] & (int) byte.MaxValue) << 8) + ((int) _param1[_param2] & (int) byte.MaxValue);
    for (int index = 0; index <= 16; index += 4)
    {
      num4 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num4 + (num3 & ~num1) + (num2 & num1) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index], 1);
      num3 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num3 + (num2 & ~num4) + (num1 & num4) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 1], 2);
      num2 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num2 + (num1 & ~num3) + (num4 & num3) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 2], 3);
      num1 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num1 + (num4 & ~num2) + (num3 & num2) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 3], 5);
    }
    int num5 = num4 + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num1 & 63];
    int num6 = num3 + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num5 & 63];
    int num7 = num2 + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num6 & 63];
    int num8 = num1 + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num7 & 63];
    for (int index = 20; index <= 40; index += 4)
    {
      num5 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num5 + (num6 & ~num8) + (num7 & num8) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index], 1);
      num6 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num6 + (num7 & ~num5) + (num8 & num5) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 1], 2);
      num7 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num7 + (num8 & ~num6) + (num5 & num6) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 2], 3);
      num8 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num8 + (num5 & ~num7) + (num6 & num7) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 3], 5);
    }
    int num9 = num5 + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num8 & 63];
    int num10 = num6 + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num9 & 63];
    int num11 = num7 + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num10 & 63];
    int num12 = num8 + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num11 & 63];
    for (int index = 44; index < 64; index += 4)
    {
      num9 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num9 + (num10 & ~num12) + (num11 & num12) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index], 1);
      num10 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num10 + (num11 & ~num9) + (num12 & num9) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 1], 2);
      num11 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num11 + (num12 & ~num10) + (num9 & num10) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 2], 3);
      num12 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num12 + (num9 & ~num11) + (num10 & num11) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 3], 5);
    }
    _param3[_param4] = (byte) num9;
    _param3[_param4 + 1] = (byte) (num9 >> 8);
    _param3[_param4 + 2] = (byte) num10;
    _param3[_param4 + 3] = (byte) (num10 >> 8);
    _param3[_param4 + 4] = (byte) num11;
    _param3[_param4 + 5] = (byte) (num11 >> 8);
    _param3[_param4 + 6] = (byte) num12;
    _param3[_param4 + 7] = (byte) (num12 >> 8);
  }

  private void \u206F‮‎‌‮‍‬‌​‫⁮‮⁪​‪‮‍⁯‏​‌⁫‫‬‫⁭‌⁯‮‪⁫⁬‎⁭⁫⁪‎‮‮‭‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    int num1 = (((int) _param1[_param2 + 7] & (int) byte.MaxValue) << 8) + ((int) _param1[_param2 + 6] & (int) byte.MaxValue);
    int num2 = (((int) _param1[_param2 + 5] & (int) byte.MaxValue) << 8) + ((int) _param1[_param2 + 4] & (int) byte.MaxValue);
    int num3 = (((int) _param1[_param2 + 3] & (int) byte.MaxValue) << 8) + ((int) _param1[_param2 + 2] & (int) byte.MaxValue);
    int num4 = (((int) _param1[_param2 + 1] & (int) byte.MaxValue) << 8) + ((int) _param1[_param2] & (int) byte.MaxValue);
    for (int index = 60; index >= 44; index -= 4)
    {
      num1 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num1, 11) - ((num4 & ~num2) + (num3 & num2) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 3]);
      num2 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num2, 13) - ((num1 & ~num3) + (num4 & num3) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 2]);
      num3 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num3, 14) - ((num2 & ~num4) + (num1 & num4) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 1]);
      num4 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num4, 15) - ((num3 & ~num1) + (num2 & num1) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index]);
    }
    int num5 = num1 - this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num2 & 63];
    int num6 = num2 - this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num3 & 63];
    int num7 = num3 - this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num4 & 63];
    int num8 = num4 - this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num5 & 63];
    for (int index = 40; index >= 20; index -= 4)
    {
      num5 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num5, 11) - ((num8 & ~num6) + (num7 & num6) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 3]);
      num6 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num6, 13) - ((num5 & ~num7) + (num8 & num7) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 2]);
      num7 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num7, 14) - ((num6 & ~num8) + (num5 & num8) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 1]);
      num8 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num8, 15) - ((num7 & ~num5) + (num6 & num5) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index]);
    }
    int num9 = num5 - this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num6 & 63];
    int num10 = num6 - this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num7 & 63];
    int num11 = num7 - this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num8 & 63];
    int num12 = num8 - this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[num9 & 63];
    for (int index = 16; index >= 0; index -= 4)
    {
      num9 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num9, 11) - ((num12 & ~num10) + (num11 & num10) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 3]);
      num10 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num10, 13) - ((num9 & ~num11) + (num12 & num11) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 2]);
      num11 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num11, 14) - ((num10 & ~num12) + (num9 & num12) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index + 1]);
      num12 = this.\u202A‎‍‬‭‬‏⁬‫‬‮‮‬⁭‪‮‭‪⁯⁯⁬​‎⁪⁬‌⁫​⁫‭‭⁭‪⁬​‍​⁫‏‏‮(num12, 15) - ((num11 & ~num9) + (num10 & num9) + this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮[index]);
    }
    _param3[_param4] = (byte) num12;
    _param3[_param4 + 1] = (byte) (num12 >> 8);
    _param3[_param4 + 2] = (byte) num11;
    _param3[_param4 + 3] = (byte) (num11 >> 8);
    _param3[_param4 + 4] = (byte) num10;
    _param3[_param4 + 5] = (byte) (num10 >> 8);
    _param3[_param4 + 6] = (byte) num9;
    _param3[_param4 + 7] = (byte) (num9 >> 8);
  }
}
