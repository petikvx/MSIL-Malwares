// Decompiled with JetBrains decompiler
// Type: 672161515360.666167056623
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003053028810657;
using \u003208825527781;
using \u003233524418126;
using \u003235014932865;
using \u003277493558513;
using \u003293721351544;
using \u003484494481491;
using \u003603600525092;
using \u003627377356995;
using \u003628951805400;
using \u003672161515360;
using \u003716315480299;
using \u003772444843072;
using \u003896877406398;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Dynamic;
using System.Globalization;
using System.Linq.Expressions;
using System.Numerics;
using System.Threading;
using System.Threading.Tasks;

namespace \u003672161515360
{
  public class \u003666167056623 : 
    \u003057567207975,
    IEquatable<\u003666167056623>,
    IFormattable,
    IComparable,
    IComparable<\u003666167056623>,
    IConvertible
  {
    private \u003205973939318 \u003634103711282;
    private object \u003424905640453;

    public virtual Task \u003196933826859(
      \u003632627526011 _param1,
      CancellationToken _param2,
      params \u003068562095717[] _param3)
    {
      if (_param3 != null && _param3.Length != 0 && this.\u003424905640453 != null)
      {
        \u003068562095717 obj = \u003131478599170.\u003418835220069((IList<\u003068562095717>) _param3, this.\u003424905640453.GetType());
        if (obj != null && obj.\u003465324761103)
        {
          obj.\u003883102156798(_param1, this.\u003424905640453, \u003131478599170.\u003183294175429());
          return \u003493533682182.\u003464038437734;
        }
      }
      switch (this.\u003634103711282)
      {
        case \u003205973939318.Comment:
          return _param1.\u003534890585756(this.\u003424905640453?.ToString(), _param2);
        case \u003205973939318.Integer:
          if (this.\u003424905640453 is int)
            return _param1.\u003938757546842((int) this.\u003424905640453, _param2);
          if (this.\u003424905640453 is long)
            return _param1.\u003197545126754((long) this.\u003424905640453, _param2);
          if (this.\u003424905640453 is ulong)
            return _param1.\u003554464983839((ulong) this.\u003424905640453, _param2);
          return this.\u003424905640453 is BigInteger ? _param1.\u003139602249591((object) (BigInteger) this.\u003424905640453, _param2) : _param1.\u003197545126754(Convert.ToInt64(this.\u003424905640453, (IFormatProvider) CultureInfo.InvariantCulture), _param2);
        case \u003205973939318.Float:
          if (this.\u003424905640453 is Decimal)
            return _param1.\u003943004851465((Decimal) this.\u003424905640453, _param2);
          if (this.\u003424905640453 is double)
            return _param1.\u003507575631667((double) this.\u003424905640453, _param2);
          return this.\u003424905640453 is float ? _param1.\u003640020660147((float) this.\u003424905640453, _param2) : _param1.\u003507575631667(Convert.ToDouble(this.\u003424905640453, (IFormatProvider) CultureInfo.InvariantCulture), _param2);
        case \u003205973939318.String:
          return _param1.\u003077923782091(this.\u003424905640453?.ToString(), _param2);
        case \u003205973939318.Boolean:
          return _param1.\u003975695308403(Convert.ToBoolean(this.\u003424905640453, (IFormatProvider) CultureInfo.InvariantCulture), _param2);
        case \u003205973939318.Null:
          return _param1.\u003973205042463(_param2);
        case \u003205973939318.Undefined:
          return _param1.\u003720060117284(_param2);
        case \u003205973939318.Date:
          return this.\u003424905640453 is DateTimeOffset ? _param1.\u003820484102702((DateTimeOffset) this.\u003424905640453, _param2) : _param1.\u003351613671371(Convert.ToDateTime(this.\u003424905640453, (IFormatProvider) CultureInfo.InvariantCulture), _param2);
        case \u003205973939318.Raw:
          return _param1.\u003619379472013(this.\u003424905640453?.ToString(), _param2);
        case \u003205973939318.Bytes:
          return _param1.\u003692834831633((byte[]) this.\u003424905640453, _param2);
        case \u003205973939318.Guid:
          return _param1.\u003188738074622(this.\u003424905640453 != null ? (Guid?) this.\u003424905640453 : new Guid?(), _param2);
        case \u003205973939318.Uri:
          return _param1.\u003497503822581((Uri) this.\u003424905640453, _param2);
        case \u003205973939318.TimeSpan:
          return _param1.\u003689804591168(this.\u003424905640453 != null ? (TimeSpan?) this.\u003424905640453 : new TimeSpan?(), _param2);
        default:
          throw \u003770915038270.\u003669207498834("Type", (object) this.\u003634103711282, "Unexpected token type.");
      }
    }

    internal \u003666167056623(object value, \u003205973939318 type)
    {
      this.\u003424905640453 = value;
      this.\u003634103711282 = type;
    }

    public \u003666167056623(\u003666167056623 other)
      : this(other.\u003512918373207, other.\u003626381970874)
    {
    }

    public \u003666167056623(long value)
      : this((object) value, \u003205973939318.Integer)
    {
    }

    public \u003666167056623(Decimal value)
      : this((object) value, \u003205973939318.Float)
    {
    }

    public \u003666167056623(char value)
      : this((object) value, \u003205973939318.String)
    {
    }

    [CLSCompliant(false)]
    public \u003666167056623(ulong value)
      : this((object) value, \u003205973939318.Integer)
    {
    }

    public \u003666167056623(double value)
      : this((object) value, \u003205973939318.Float)
    {
    }

    public \u003666167056623(float value)
      : this((object) value, \u003205973939318.Float)
    {
    }

    public \u003666167056623(DateTime value)
      : this((object) value, \u003205973939318.Date)
    {
    }

    public \u003666167056623(DateTimeOffset value)
      : this((object) value, \u003205973939318.Date)
    {
    }

    public \u003666167056623(bool value)
      : this((object) value, \u003205973939318.Boolean)
    {
    }

    public \u003666167056623(string value)
      : this((object) value, \u003205973939318.String)
    {
    }

    public \u003666167056623(Guid value)
      : this((object) value, \u003205973939318.Guid)
    {
    }

    public \u003666167056623(Uri value)
      : this((object) value, value != (Uri) null ? \u003205973939318.Uri : \u003205973939318.Null)
    {
    }

    public \u003666167056623(TimeSpan value)
      : this((object) value, \u003205973939318.TimeSpan)
    {
    }

    public \u003666167056623(object value)
      : this(value, \u003666167056623.\u003215809171486(new \u003205973939318?(), value))
    {
    }

    internal virtual bool \u003190575413552(\u003057567207975 _param1)
    {
      if (!(_param1 is \u003666167056623 obj))
        return false;
      return obj == this || \u003666167056623.\u003810557080542(this, obj);
    }

    public virtual bool \u003483354146972 => false;

    private static int \u003359716663334(BigInteger _param0, object _param1)
    {
      int num = _param0.CompareTo(\u003594264013390.\u003865914954511(_param1));
      if (num != 0)
        return num;
      switch (_param1)
      {
        case Decimal d2:
          return 0M.CompareTo(Math.Abs(d2 - Math.Truncate(d2)));
        case double _:
        case float _:
          double d1 = Convert.ToDouble(_param1, (IFormatProvider) CultureInfo.InvariantCulture);
          return 0.0.CompareTo(Math.Abs(d1 - Math.Truncate(d1)));
        default:
          return num;
      }
    }

    internal static int \u003175108148407(
      \u003205973939318 _param0,
      object _param1,
      object _param2)
    {
      if (_param1 == _param2)
        return 0;
      if (_param2 == null)
        return 1;
      if (_param1 == null)
        return -1;
      switch (_param0)
      {
        case \u003205973939318.Comment:
        case \u003205973939318.String:
        case \u003205973939318.Raw:
          return string.CompareOrdinal(Convert.ToString(_param1, (IFormatProvider) CultureInfo.InvariantCulture), Convert.ToString(_param2, (IFormatProvider) CultureInfo.InvariantCulture));
        case \u003205973939318.Integer:
          if (_param1 is BigInteger bigInteger1)
            return \u003666167056623.\u003359716663334(bigInteger1, _param2);
          if (_param2 is BigInteger bigInteger2)
            return -\u003666167056623.\u003359716663334(bigInteger2, _param1);
          if (_param1 is ulong || _param2 is ulong || _param1 is Decimal || _param2 is Decimal)
            return Convert.ToDecimal(_param1, (IFormatProvider) CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(_param2, (IFormatProvider) CultureInfo.InvariantCulture));
          return _param1 is float || _param2 is float || _param1 is double || _param2 is double ? \u003666167056623.\u003577789372439(_param1, _param2) : Convert.ToInt64(_param1, (IFormatProvider) CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(_param2, (IFormatProvider) CultureInfo.InvariantCulture));
        case \u003205973939318.Float:
          if (_param1 is BigInteger bigInteger3)
            return \u003666167056623.\u003359716663334(bigInteger3, _param2);
          return _param2 is BigInteger bigInteger4 ? -\u003666167056623.\u003359716663334(bigInteger4, _param1) : \u003666167056623.\u003577789372439(_param1, _param2);
        case \u003205973939318.Boolean:
          return Convert.ToBoolean(_param1, (IFormatProvider) CultureInfo.InvariantCulture).CompareTo(Convert.ToBoolean(_param2, (IFormatProvider) CultureInfo.InvariantCulture));
        case \u003205973939318.Date:
          if (_param1 is DateTime dateTime1)
          {
            DateTime dateTime = !(_param2 is DateTimeOffset dateTimeOffset) ? Convert.ToDateTime(_param2, (IFormatProvider) CultureInfo.InvariantCulture) : dateTimeOffset.DateTime;
            return dateTime1.CompareTo(dateTime);
          }
          DateTimeOffset dateTimeOffset1 = (DateTimeOffset) _param1;
          if (!(_param2 is DateTimeOffset other))
            other = new DateTimeOffset(Convert.ToDateTime(_param2, (IFormatProvider) CultureInfo.InvariantCulture));
          return dateTimeOffset1.CompareTo(other);
        case \u003205973939318.Bytes:
          return _param2 is byte[] numArray ? \u003770915038270.\u003157909715955(_param1 as byte[], numArray) : throw new ArgumentException("Object must be of type byte[].");
        case \u003205973939318.Guid:
          return _param2 is Guid guid ? ((Guid) _param1).CompareTo(guid) : throw new ArgumentException("Object must be of type Guid.");
        case \u003205973939318.Uri:
          Uri uri = _param2 as Uri;
          if (uri == (Uri) null)
            throw new ArgumentException("Object must be of type Uri.");
          return Comparer<string>.Default.Compare(((Uri) _param1).ToString(), uri.ToString());
        case \u003205973939318.TimeSpan:
          return _param2 is TimeSpan timeSpan ? ((TimeSpan) _param1).CompareTo(timeSpan) : throw new ArgumentException("Object must be of type TimeSpan.");
        default:
          throw \u003770915038270.\u003669207498834("valueType", (object) _param0, "Unexpected value type: {0}".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param0));
      }
    }

    private static int \u003577789372439(object _param0, object _param1)
    {
      double num1 = Convert.ToDouble(_param0, (IFormatProvider) CultureInfo.InvariantCulture);
      double num2 = Convert.ToDouble(_param1, (IFormatProvider) CultureInfo.InvariantCulture);
      return \u003243965671827.\u003351503931732(num1, num2) ? 0 : num1.CompareTo(num2);
    }

    private static bool \u003658774428028(
      ExpressionType _param0,
      object _param1,
      object _param2,
      out object _param3)
    {
      if ((_param1 is string || _param2 is string) && (_param0 == ExpressionType.Add || _param0 == ExpressionType.AddAssign))
      {
        _param3 = (object) (_param1?.ToString() + _param2?.ToString());
        return true;
      }
      if (_param1 is BigInteger || _param2 is BigInteger)
      {
        if (_param1 == null || _param2 == null)
        {
          _param3 = (object) null;
          return true;
        }
        BigInteger bigInteger1 = \u003594264013390.\u003865914954511(_param1);
        BigInteger bigInteger2 = \u003594264013390.\u003865914954511(_param2);
        switch (_param0)
        {
          case ExpressionType.Add:
          case ExpressionType.AddAssign:
            _param3 = (object) (bigInteger1 + bigInteger2);
            return true;
          case ExpressionType.Divide:
          case ExpressionType.DivideAssign:
            _param3 = (object) (bigInteger1 / bigInteger2);
            return true;
          case ExpressionType.Multiply:
          case ExpressionType.MultiplyAssign:
            _param3 = (object) (bigInteger1 * bigInteger2);
            return true;
          case ExpressionType.Subtract:
          case ExpressionType.SubtractAssign:
            _param3 = (object) (bigInteger1 - bigInteger2);
            return true;
        }
      }
      else if (_param1 is ulong || _param2 is ulong || _param1 is Decimal || _param2 is Decimal)
      {
        if (_param1 == null || _param2 == null)
        {
          _param3 = (object) null;
          return true;
        }
        Decimal num1 = Convert.ToDecimal(_param1, (IFormatProvider) CultureInfo.InvariantCulture);
        Decimal num2 = Convert.ToDecimal(_param2, (IFormatProvider) CultureInfo.InvariantCulture);
        switch (_param0)
        {
          case ExpressionType.Add:
          case ExpressionType.AddAssign:
            _param3 = (object) (num1 + num2);
            return true;
          case ExpressionType.Divide:
          case ExpressionType.DivideAssign:
            _param3 = (object) (num1 / num2);
            return true;
          case ExpressionType.Multiply:
          case ExpressionType.MultiplyAssign:
            _param3 = (object) (num1 * num2);
            return true;
          case ExpressionType.Subtract:
          case ExpressionType.SubtractAssign:
            _param3 = (object) (num1 - num2);
            return true;
        }
      }
      else if (_param1 is float || _param2 is float || _param1 is double || _param2 is double)
      {
        if (_param1 == null || _param2 == null)
        {
          _param3 = (object) null;
          return true;
        }
        double num3 = Convert.ToDouble(_param1, (IFormatProvider) CultureInfo.InvariantCulture);
        double num4 = Convert.ToDouble(_param2, (IFormatProvider) CultureInfo.InvariantCulture);
        switch (_param0)
        {
          case ExpressionType.Add:
          case ExpressionType.AddAssign:
            _param3 = (object) (num3 + num4);
            return true;
          case ExpressionType.Divide:
          case ExpressionType.DivideAssign:
            _param3 = (object) (num3 / num4);
            return true;
          case ExpressionType.Multiply:
          case ExpressionType.MultiplyAssign:
            _param3 = (object) (num3 * num4);
            return true;
          case ExpressionType.Subtract:
          case ExpressionType.SubtractAssign:
            _param3 = (object) (num3 - num4);
            return true;
        }
      }
      else
      {
        switch (_param1)
        {
          case int _:
          case uint _:
          case long _:
          case short _:
          case ushort _:
          case sbyte _:
          case byte _:
label_28:
            if (_param1 == null || _param2 == null)
            {
              _param3 = (object) null;
              return true;
            }
            long int64_1 = Convert.ToInt64(_param1, (IFormatProvider) CultureInfo.InvariantCulture);
            long int64_2 = Convert.ToInt64(_param2, (IFormatProvider) CultureInfo.InvariantCulture);
            switch (_param0)
            {
              case ExpressionType.Add:
              case ExpressionType.AddAssign:
                _param3 = (object) (int64_1 + int64_2);
                return true;
              case ExpressionType.Divide:
              case ExpressionType.DivideAssign:
                _param3 = (object) (int64_1 / int64_2);
                return true;
              case ExpressionType.Multiply:
              case ExpressionType.MultiplyAssign:
                _param3 = (object) (int64_1 * int64_2);
                return true;
              case ExpressionType.Subtract:
              case ExpressionType.SubtractAssign:
                _param3 = (object) (int64_1 - int64_2);
                return true;
            }
            break;
          default:
            switch (_param2)
            {
              case int _:
              case uint _:
              case long _:
              case short _:
              case ushort _:
              case sbyte _:
              case byte _:
                goto label_28;
            }
            break;
        }
      }
      _param3 = (object) null;
      return false;
    }

    internal virtual \u003057567207975 \u003324062480764() => (\u003057567207975) new \u003666167056623(this);

    public static \u003666167056623 \u003072787451337(string _param0) => new \u003666167056623((object) _param0, \u003205973939318.Comment);

    public static \u003666167056623 \u003876751865394(string _param0) => new \u003666167056623((object) _param0, \u003205973939318.String);

    public static \u003666167056623 \u003147671514610() => new \u003666167056623((object) null, \u003205973939318.Null);

    public static \u003666167056623 \u003707642798312() => new \u003666167056623((object) null, \u003205973939318.Undefined);

    private static \u003205973939318 \u003215809171486(
      \u003205973939318? _param0,
      object _param1)
    {
      if (_param1 == null || _param1 == DBNull.Value)
        return \u003205973939318.Null;
      switch (_param1)
      {
        case string _:
          return \u003666167056623.\u003212226452741(_param0);
        case long _:
        case int _:
        case short _:
        case sbyte _:
        case ulong _:
        case uint _:
        case ushort _:
        case byte _:
          return \u003205973939318.Integer;
        case Enum _:
          return \u003205973939318.Integer;
        case BigInteger _:
          return \u003205973939318.Integer;
        case double _:
        case float _:
        case Decimal _:
          return \u003205973939318.Float;
        case DateTime _:
          return \u003205973939318.Date;
        case DateTimeOffset _:
          return \u003205973939318.Date;
        case byte[] _:
          return \u003205973939318.Bytes;
        case bool _:
          return \u003205973939318.Boolean;
        case Guid _:
          return \u003205973939318.Guid;
        case Uri _:
          return \u003205973939318.Uri;
        case TimeSpan _:
          return \u003205973939318.TimeSpan;
        default:
          throw new ArgumentException("Could not determine JSON object type for type {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, (object) _param1.GetType()));
      }
    }

    private static \u003205973939318 \u003212226452741(\u003205973939318? _param0)
    {
      if (!_param0.HasValue)
        return \u003205973939318.String;
      switch (_param0.GetValueOrDefault())
      {
        case \u003205973939318.Comment:
        case \u003205973939318.String:
        case \u003205973939318.Raw:
          return _param0.GetValueOrDefault();
        default:
          return \u003205973939318.String;
      }
    }

    public virtual \u003205973939318 \u003521415203895 => this.\u003634103711282;

    public object \u003512918373207
    {
      get => this.\u003424905640453;
      set
      {
        if (this.\u003424905640453?.GetType() != value?.GetType())
          this.\u003634103711282 = \u003666167056623.\u003215809171486(new \u003205973939318?(this.\u003634103711282), value);
        this.\u003424905640453 = value;
      }
    }

    public virtual void \u003687098760690(
      \u003632627526011 _param1,
      params \u003068562095717[] _param2)
    {
      if (_param2 != null && _param2.Length != 0 && this.\u003424905640453 != null)
      {
        \u003068562095717 obj = \u003131478599170.\u003418835220069((IList<\u003068562095717>) _param2, this.\u003424905640453.GetType());
        if (obj != null && obj.\u003465324761103)
        {
          obj.\u003883102156798(_param1, this.\u003424905640453, \u003131478599170.\u003183294175429());
          return;
        }
      }
      switch (this.\u003634103711282)
      {
        case \u003205973939318.Comment:
          _param1.\u003709534971487(this.\u003424905640453?.ToString());
          break;
        case \u003205973939318.Integer:
          if (this.\u003424905640453 is int)
          {
            _param1.\u003968397515020((int) this.\u003424905640453);
            break;
          }
          if (this.\u003424905640453 is long)
          {
            _param1.\u003935752976562((long) this.\u003424905640453);
            break;
          }
          if (this.\u003424905640453 is ulong)
          {
            _param1.\u003952904978068((ulong) this.\u003424905640453);
            break;
          }
          if (this.\u003424905640453 is BigInteger)
          {
            _param1.\u003250565849908((object) (BigInteger) this.\u003424905640453);
            break;
          }
          _param1.\u003935752976562(Convert.ToInt64(this.\u003424905640453, (IFormatProvider) CultureInfo.InvariantCulture));
          break;
        case \u003205973939318.Float:
          if (this.\u003424905640453 is Decimal)
          {
            _param1.\u003748781963349((Decimal) this.\u003424905640453);
            break;
          }
          if (this.\u003424905640453 is double)
          {
            _param1.\u003262070200797((double) this.\u003424905640453);
            break;
          }
          if (this.\u003424905640453 is float)
          {
            _param1.\u003493187839818((float) this.\u003424905640453);
            break;
          }
          _param1.\u003262070200797(Convert.ToDouble(this.\u003424905640453, (IFormatProvider) CultureInfo.InvariantCulture));
          break;
        case \u003205973939318.String:
          _param1.\u003897033093575(this.\u003424905640453?.ToString());
          break;
        case \u003205973939318.Boolean:
          _param1.\u003808128419096(Convert.ToBoolean(this.\u003424905640453, (IFormatProvider) CultureInfo.InvariantCulture));
          break;
        case \u003205973939318.Null:
          _param1.\u003876065641053();
          break;
        case \u003205973939318.Undefined:
          _param1.\u003172195894137();
          break;
        case \u003205973939318.Date:
          if (this.\u003424905640453 is DateTimeOffset)
          {
            _param1.\u003429630959635((DateTimeOffset) this.\u003424905640453);
            break;
          }
          _param1.\u003615287622687(Convert.ToDateTime(this.\u003424905640453, (IFormatProvider) CultureInfo.InvariantCulture));
          break;
        case \u003205973939318.Raw:
          _param1.\u003478208911182(this.\u003424905640453?.ToString());
          break;
        case \u003205973939318.Bytes:
          _param1.\u003439461455399((byte[]) this.\u003424905640453);
          break;
        case \u003205973939318.Guid:
          _param1.\u003120039039158(this.\u003424905640453 != null ? (Guid?) this.\u003424905640453 : new Guid?());
          break;
        case \u003205973939318.Uri:
          _param1.\u003816297458997((Uri) this.\u003424905640453);
          break;
        case \u003205973939318.TimeSpan:
          _param1.\u003734692230929(this.\u003424905640453 != null ? (TimeSpan?) this.\u003424905640453 : new TimeSpan?());
          break;
        default:
          throw \u003770915038270.\u003669207498834("Type", (object) this.\u003634103711282, "Unexpected token type.");
      }
    }

    internal virtual int \u003465768911498()
    {
      int num = this.\u003424905640453 != null ? this.\u003424905640453.GetHashCode() : 0;
      return ((int) this.\u003634103711282).GetHashCode() ^ num;
    }

    private static bool \u003810557080542(\u003666167056623 _param0, \u003666167056623 _param1)
    {
      if (_param0 == _param1)
        return true;
      return _param0.\u003634103711282 == _param1.\u003634103711282 && \u003666167056623.\u003175108148407(_param0.\u003634103711282, _param0.\u003424905640453, _param1.\u003424905640453) == 0;
    }

    public bool \u003639866288691(\u003666167056623 _param1) => _param1 != null && \u003666167056623.\u003810557080542(this, _param1);

    public virtual bool \u003946490237408(object _param1) => this.\u003639866288691(_param1 as \u003666167056623);

    public virtual int \u003563736905660() => this.\u003424905640453 == null ? 0 : this.\u003424905640453.GetHashCode();

    public virtual string \u003505722772629() => this.\u003424905640453 == null ? string.Empty : this.\u003424905640453.ToString();

    public string \u003967869525034(string _param1) => this.\u003945019750036(_param1, (IFormatProvider) CultureInfo.CurrentCulture);

    public string \u003550982866178(IFormatProvider _param1) => this.\u003945019750036((string) null, _param1);

    public string \u003945019750036(string _param1, IFormatProvider _param2)
    {
      if (this.\u003424905640453 == null)
        return string.Empty;
      return this.\u003424905640453 is IFormattable formattable ? formattable.ToString(_param1, _param2) : this.\u003424905640453.ToString();
    }

    protected override DynamicMetaObject GetMetaObject(Expression parameter) => (DynamicMetaObject) new \u003831902456301<\u003666167056623>(parameter, this, (\u003245507348569<\u003666167056623>) new \u003666167056623.\u003097834419376());

    int IComparable.\u003060729813072(object _param1) => _param1 == null ? 1 : \u003666167056623.\u003175108148407(this.\u003634103711282, this.\u003424905640453, _param1 is \u003666167056623 obj ? obj.\u003512918373207 : _param1);

    public int \u003690224521336(\u003666167056623 _param1) => _param1 == null ? 1 : \u003666167056623.\u003175108148407(this.\u003634103711282, this.\u003424905640453, _param1.\u003424905640453);

    TypeCode IConvertible.\u003820109552554()
    {
      if (this.\u003424905640453 == null)
        return TypeCode.Empty;
      return !(this.\u003424905640453 is IConvertible convertible) ? TypeCode.Object : convertible.GetTypeCode();
    }

    bool IConvertible.\u003185738951971(IFormatProvider _param1) => (bool) (\u003057567207975) this;

    char IConvertible.\u003640212445612(IFormatProvider _param1) => (char) (\u003057567207975) this;

    sbyte IConvertible.\u003654433147360(IFormatProvider _param1) => (sbyte) (\u003057567207975) this;

    byte IConvertible.\u003049949932459(IFormatProvider _param1) => (byte) (\u003057567207975) this;

    short IConvertible.\u003972306313092(IFormatProvider _param1) => (short) (\u003057567207975) this;

    ushort IConvertible.\u003182516181996(IFormatProvider _param1) => (ushort) (\u003057567207975) this;

    int IConvertible.\u003874506834050(IFormatProvider _param1) => (int) (\u003057567207975) this;

    uint IConvertible.\u003788688045579(IFormatProvider _param1) => (uint) (\u003057567207975) this;

    long IConvertible.\u003468558896040(IFormatProvider _param1) => (long) (\u003057567207975) this;

    ulong IConvertible.\u003542764400441(IFormatProvider _param1) => (ulong) (\u003057567207975) this;

    float IConvertible.\u003547230741644(IFormatProvider _param1) => (float) (\u003057567207975) this;

    double IConvertible.\u003597089535076(IFormatProvider _param1) => (double) (\u003057567207975) this;

    Decimal IConvertible.\u003458401425414(IFormatProvider _param1) => (Decimal) (\u003057567207975) this;

    DateTime IConvertible.\u003745604206260(IFormatProvider _param1) => (DateTime) (\u003057567207975) this;

    object IConvertible.\u003020194683525(Type _param1, IFormatProvider _param2) => this.\u003478593526499(_param1);

    private class \u003097834419376 : \u003245507348569<\u003666167056623>
    {
      public virtual bool \u003405461528027(
        \u003666167056623 _param1,
        BinaryOperationBinder _param2,
        object _param3,
        out object _param4)
      {
        object obj1 = _param3 is \u003666167056623 obj2 ? obj2.\u003512918373207 : _param3;
        switch (_param2.Operation)
        {
          case ExpressionType.Add:
          case ExpressionType.Divide:
          case ExpressionType.Multiply:
          case ExpressionType.Subtract:
          case ExpressionType.AddAssign:
          case ExpressionType.DivideAssign:
          case ExpressionType.MultiplyAssign:
          case ExpressionType.SubtractAssign:
            if (\u003666167056623.\u003658774428028(_param2.Operation, _param1.\u003512918373207, obj1, out _param4))
            {
              _param4 = (object) new \u003666167056623(_param4);
              return true;
            }
            break;
          case ExpressionType.Equal:
            _param4 = (object) (\u003666167056623.\u003175108148407(_param1.\u003626381970874, _param1.\u003512918373207, obj1) == 0);
            return true;
          case ExpressionType.GreaterThan:
            _param4 = (object) (\u003666167056623.\u003175108148407(_param1.\u003626381970874, _param1.\u003512918373207, obj1) > 0);
            return true;
          case ExpressionType.GreaterThanOrEqual:
            _param4 = (object) (\u003666167056623.\u003175108148407(_param1.\u003626381970874, _param1.\u003512918373207, obj1) >= 0);
            return true;
          case ExpressionType.LessThan:
            _param4 = (object) (\u003666167056623.\u003175108148407(_param1.\u003626381970874, _param1.\u003512918373207, obj1) < 0);
            return true;
          case ExpressionType.LessThanOrEqual:
            _param4 = (object) (\u003666167056623.\u003175108148407(_param1.\u003626381970874, _param1.\u003512918373207, obj1) <= 0);
            return true;
          case ExpressionType.NotEqual:
            _param4 = (object) (\u003666167056623.\u003175108148407(_param1.\u003626381970874, _param1.\u003512918373207, obj1) != 0);
            return true;
        }
        _param4 = (object) null;
        return false;
      }

      public \u003097834419376()
      {
      }

      [DebuggerHidden]
      public \u003097834419376(int _param1)
      {
        // ISSUE: reference to a compiler-generated field
        ((\u003057567207975.\u003896718996363) this).\u003626210448579 = _param1;
        // ISSUE: reference to a compiler-generated field
        ((\u003055059587516.\u003825463373955) this).\u003743035972152 = Environment.CurrentManagedThreadId;
      }
    }
  }
}
