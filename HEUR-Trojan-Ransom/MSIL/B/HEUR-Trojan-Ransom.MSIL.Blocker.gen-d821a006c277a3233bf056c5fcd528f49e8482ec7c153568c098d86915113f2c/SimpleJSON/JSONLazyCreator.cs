// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: BaseConfigHandl, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8D741A15-4AC4-4AEF-B040-FB58D745B7BF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-d821a006c277a3233bf056c5fcd528f49e8482ec7c153568c098d86915113f2c.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
      bool flag = this.m_Key == null;
label_1:
      int num1 = 2034115503;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 758537320)) % 7U)
        {
          case 0:
            num1 = (int) num2 * -1975027661 ^ -1984717990;
            continue;
          case 1:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 459963805 ^ -457474360;
            continue;
          case 2:
            int num3 = flag ? -391667601 : (num3 = -1471639258);
            num1 = num3 ^ (int) num2 * 2108701381;
            continue;
          case 3:
            goto label_1;
          case 5:
            num1 = (int) num2 * 1081778347 ^ -530387847;
            continue;
          case 6:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = 442652309;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = -393774949;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1084366193)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 235379393 ^ -252943105;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 134842305;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1809625684)) % 5U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1058231996 ^ 2087692336;
              continue;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 1502835118 ^ 538149747;
              continue;
            case 3:
              goto label_1;
            case 4:
              aVal = new JSONArray();
              aVal.Add(value);
              num1 = (int) num2 * -1127088407 ^ -1046963013;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 807485298;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1173663200)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * -1255446129 ^ 349036189;
              continue;
            case 3:
              num1 = (int) num2 * 826538376 ^ -731828875;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1807439991;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1301379426)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * 271357305 ^ 1940714282;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 769528684 ^ 609876721;
              continue;
            case 3:
              aVal.Add(aKey, value);
              num1 = (int) num2 * -1570065417 ^ 2040577180;
              continue;
            case 4:
              goto label_3;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = -975244139;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1084095639)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -1792811877 ^ 1131713882;
            continue;
          case 1:
            goto label_3;
          case 2:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -217411812 ^ -998194519;
            continue;
          case 3:
            goto label_1;
          case 4:
            aVal.Add(aItem);
            num1 = (int) num2 * 1239067306 ^ -678365287;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
label_1:
      int num1 = -942046310;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -933888127)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -1983911988 ^ -2018261579;
            continue;
          case 2:
            num1 = (int) num2 * 352889188 ^ -1303906795;
            continue;
          case 3:
            goto label_1;
          case 4:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1729200362 ^ 1380606956;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1883134448;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1512319744)) % 7U)
        {
          case 0:
            num1 = (int) num2 * -209884427 ^ -1438992509;
            continue;
          case 2:
            goto label_1;
          case 3:
            flag1 = true;
            num1 = (int) num2 * -894892210 ^ -240830073;
            continue;
          case 4:
            flag1 = (object) a == b;
            num1 = 1016325540;
            continue;
          case 5:
            int num3 = flag2 ? 1824188453 : (num3 = 887518662);
            num1 = num3 ^ (int) num2 * 1759333121;
            continue;
          case 6:
            flag2 = b == null;
            num1 = (int) num2 * 765239559 ^ 936108925;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag1;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -369497025;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -850216614)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1898147180 ^ -1771932884;
            continue;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 522943153 ^ 1710201987;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
      if (obj != null)
        goto label_4;
label_1:
      int num1 = -1330726946;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -928199085)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -2075413280 ^ -1227014113;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_4;
          case 4:
            flag = true;
            num1 = (int) num2 * -1216630903 ^ -916772102;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
label_4:
      flag = (object) this == obj;
      num1 = -1336389473;
      goto label_2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 212859855;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 200276905)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * -1568035504 ^ 792465163;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    public override string ToString() => "";

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1752232385;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1872099404)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -884392728 ^ 1016815027;
            continue;
          case 1:
            str = "";
            num1 = (int) num2 * -459192466 ^ 1897136658;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -1096390562;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1071292691)) % 6U)
          {
            case 1:
              aVal = new JSONData(0);
              num1 = (int) num2 * 1186168442 ^ -1536792337;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 440479268 ^ 1751281092;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 416997511 ^ -1322696631;
              continue;
            case 5:
              asInt = 0;
              num1 = (int) num2 * 1637664063 ^ -687168354;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -1339755541;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -989962494)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1110427708 ^ 2077463170;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override float AsFloat
    {
      get
      {
label_1:
        int num1 = -1455776257;
        JSONData aVal;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -787974034)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1633288530 ^ 592597615;
              continue;
            case 3:
              asFloat = 0.0f;
              num1 = (int) num2 * -893973327 ^ -966132388;
              continue;
            case 4:
              aVal = new JSONData(0.0f);
              num1 = (int) num2 * -2030469175 ^ 1245351827;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 1148262698;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1028074591)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1090330808 ^ 799006948;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 2113006254 ^ 397954493;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = 1834160903;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1567300732)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -433927987 ^ 1462178099;
              continue;
            case 2:
              this.Set((JSONNode) new JSONData(0.0));
              num1 = (int) num2 * 1057342848 ^ -2066685601;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = (int) num2 * 338139215 ^ -420513098;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1810846322;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -359839973)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * -318571063 ^ -405955283;
              continue;
            case 2:
              goto label_3;
            case 3:
              num1 = (int) num2 * -520955330 ^ -1821694140;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -587399230 ^ -1795651942;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 1020954059;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1158683991)) % 5U)
          {
            case 1:
              aVal = new JSONData(false);
              num1 = (int) num2 * -1113513789 ^ 998988432;
              continue;
            case 2:
              asBool = false;
              num1 = (int) num2 * -1077844001 ^ 1630409969;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -886566663 ^ 1181055892;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 509597695;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 818601153)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -14705320 ^ -552185930;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1035625027 ^ -224415242;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1006936431;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -933081601)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 1002010118 ^ -1828408812;
              continue;
            case 1:
              num1 = (int) num2 * -1210362856 ^ -1900939025;
              continue;
            case 2:
              aVal = new JSONArray();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1404328310 ^ 1883328456;
              continue;
            case 3:
              goto label_1;
            case 4:
              asArray = aVal;
              num1 = (int) num2 * 2013523869 ^ 553567045;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1230200532;
        JSONClass aVal;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2065627551)) % 4U)
          {
            case 0:
              asObject = aVal;
              num1 = (int) num2 * 1914758645 ^ 1188171714;
              continue;
            case 2:
              goto label_1;
            case 3:
              aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1809323958 ^ 625529665;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }
  }
}
