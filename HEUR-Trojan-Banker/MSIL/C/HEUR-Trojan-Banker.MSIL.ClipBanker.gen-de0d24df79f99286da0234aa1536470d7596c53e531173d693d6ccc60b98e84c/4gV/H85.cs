// Decompiled with JetBrains decompiler
// Type: 4gV.H85
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u0031Y3;
using \u0033wQ;
using \u0034gV;
using Q8f;
using Qlv;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0034gV
{
  internal sealed class H85
  {
    private uint[] t52 = new uint[3]
    {
      305419896U,
      591751049U,
      878082192U
    };
    private ov2 \u0031u6 = new ov2();

    private H85()
    {
    }

    public static H85 \u003594([In] string obj0)
    {
      H85 h85 = new H85();
      if (obj0 == null)
        throw new D2v("This entry requires a password.");
      h85.\u003673(obj0);
      return h85;
    }

    public static H85 L1w([In] string obj0, [In] q14 obj1)
    {
      Stream stream = obj1.\u0034c3;
      obj1.K8w = new byte[12];
      byte[] k8w = obj1.K8w;
      H85 h85 = new H85();
      if (obj0 == null)
        throw new D2v("This entry requires a password.");
      h85.\u003673(obj0);
      q14.T77(stream, k8w);
      byte[] numArray = h85.ypX(k8w, k8w.Length);
      if ((int) numArray[11] == (int) (byte) (obj1.l2q >> 24 & (int) byte.MaxValue))
        return h85;
      if (((int) obj1.O48 & 8) != 8)
        throw new D2v("The password did not match.");
      if ((int) numArray[11] == (int) (byte) (obj1.\u0035U7 >> 8 & (int) byte.MaxValue))
        return h85;
      throw new D2v("The password did not match.");
    }

    [SpecialName]
    private byte OSU()
    {
      ushort num = (ushort) ((uint) (ushort) (this.t52[2] & (uint) ushort.MaxValue) | 2U);
      return (byte) ((int) num * ((int) num ^ 1) >> 8);
    }

    public byte[] ypX([In] byte[] obj0, [In] int obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException("cipherText");
      if (obj1 > obj0.Length)
        throw new ArgumentOutOfRangeException("length", "Bad length during Decryption: the length parameter must be smaller than or equal to the size of the destination array.");
      byte[] numArray = new byte[obj1];
      for (int index = 0; index < obj1; ++index)
      {
        byte num = (byte) ((uint) obj0[index] ^ (uint) this.OSU());
        this.\u003117(num);
        numArray[index] = num;
      }
      return numArray;
    }

    public byte[] \u0033Hx([In] byte[] obj0, [In] int obj1)
    {
      if (obj0 == null)
        throw new ArgumentNullException("plaintext");
      if (obj1 > obj0.Length)
        throw new ArgumentOutOfRangeException("length", "Bad length during Encryption: The length parameter must be smaller than or equal to the size of the destination array.");
      byte[] numArray = new byte[obj1];
      for (int index = 0; index < obj1; ++index)
      {
        byte num = obj0[index];
        numArray[index] = (byte) ((uint) obj0[index] ^ (uint) this.OSU());
        this.\u003117(num);
      }
      return numArray;
    }

    public void \u003673([In] string obj0)
    {
      byte[] numArray = To4.\u00374A(obj0);
      for (int index = 0; index < obj0.Length; ++index)
        this.\u003117(numArray[index]);
    }

    private void \u003117([In] byte obj0)
    {
      this.t52[0] = (uint) this.\u0031u6.\u00321d((int) this.t52[0], obj0);
      this.t52[1] = this.t52[1] + (uint) (byte) this.t52[0];
      this.t52[1] = (uint) ((int) this.t52[1] * 134775813 + 1);
      this.t52[2] = (uint) this.\u0031u6.\u00321d((int) this.t52[2], (byte) (this.t52[1] >> 24));
    }
  }
}
