// Decompiled with JetBrains decompiler
// Type: A.I
// Assembly: PremiereCrack, Version=2.3.77.2, Culture=neutral, PublicKeyToken=null
// MVID: B728F238-A35B-46BB-92FD-55CC50CC96B9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.Win32.Generic-0d2137d133179a2fbff7bf38a8125d4b74e9615aaa47b5f4a3056eccce7a8f6e.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using PremiereCrack;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace A
{
  [GeneratedCode("MyTemplate", "11.0.0.0")]
  [StandardModule]
  [HideModuleName]
  internal sealed class I
  {
    private static readonly I.R<E> T = new I.R<E>();
    private static readonly I.R<A.T> T = new I.R<A.T>();
    private static readonly I.R<User> T = new I.R<User>();
    private static I.R<I.H> T = new I.R<I.H>();
    private static readonly I.R<I.U> T = new I.R<I.U>();

    [DebuggerNonUserCode]
    static I()
    {
    }

    [HelpKeyword("My.Computer")]
    internal static E T
    {
      [DebuggerHidden] get => I.T.T;
    }

    [HelpKeyword("My.Application")]
    internal static A.T T
    {
      [DebuggerHidden] get => I.T.T;
    }

    [HelpKeyword("My.User")]
    internal static User T
    {
      [DebuggerHidden] get => I.T.T;
    }

    [HelpKeyword("My.Forms")]
    internal static I.H T
    {
      [DebuggerHidden] get => I.T.T;
    }

    [HelpKeyword("My.WebServices")]
    internal static I.U T
    {
      [DebuggerHidden] get => I.T.T;
    }

    [MyGroupCollection("System.Windows.Forms.Form", "Create__Instance__", "Dispose__Instance__", "My.MyProject.Forms")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class H
    {
      public Form1 T;
      [ThreadStatic]
      private static Hashtable T;

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public H()
      {
      }

      public Form1 T
      {
        [DebuggerNonUserCode] get
        {
          this.T = I.H.T<Form1>(this.T);
          return this.T;
        }
        [DebuggerNonUserCode] set
        {
          if (value == this.T)
          {
label_1:
            switch (2)
            {
              case 0:
                goto label_1;
              default:
                if (true)
                  break;
                RuntimeMethodHandle runtimeMethodHandle = __methodref (I.H.set_T);
                break;
            }
          }
          else if ((value == Y.T ? 1 : 0) == G.T(48))
          {
label_5:
            switch (4)
            {
              case 0:
                goto label_5;
              default:
                throw new ArgumentException(A.A.T(1));
            }
          }
          else
            this.T<Form1>(ref this.T);
        }
      }

      [DebuggerHidden]
      private static T T<T>(T T) where T : Form, new()
      {
        // ISSUE: unable to decompile the method.
      }

      [DebuggerHidden]
      private void T<T>(ref T T) where T : Form
      {
        T.Dispose();
        T = default (T);
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [EditorBrowsable(EditorBrowsableState.Never)]
      internal System.Type T() => typeof (I.H);

      [EditorBrowsable(EditorBrowsableState.Never)]
      public override string ToString() => base.ToString();
    }

    [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class U
    {
      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public U()
      {
      }

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override bool Equals(object o) => base.Equals(RuntimeHelpers.GetObjectValue(o));

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      public override int GetHashCode() => base.GetHashCode();

      [DebuggerHidden]
      [EditorBrowsable(EditorBrowsableState.Never)]
      internal System.Type T() => typeof (I.U);

      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public override string ToString() => base.ToString();

      [DebuggerHidden]
      private static T T<T>(T T) where T : new()
      {
        if ((object) T != null)
          return T;
label_1:
        switch (1)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (I.U.T);
            }
            return new T();
        }
      }

      [DebuggerHidden]
      private void T<T>(ref T T) => T = default (T);
    }

    [ComVisible(false)]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal sealed class R<T> where T : new()
    {
      [EditorBrowsable(EditorBrowsableState.Never)]
      [DebuggerHidden]
      public R()
      {
      }

      internal T T
      {
        [DebuggerHidden] get
        {
          if ((object) I.R<T>.T == null)
          {
label_1:
            switch (5)
            {
              case 0:
                goto label_1;
              default:
                if (false)
                {
                  RuntimeMethodHandle runtimeMethodHandle = __methodref (I.R<>.get_T);
                }
                I.R<T>.T = new T();
                break;
            }
          }
          return I.R<T>.T;
        }
      }
    }
  }
}
