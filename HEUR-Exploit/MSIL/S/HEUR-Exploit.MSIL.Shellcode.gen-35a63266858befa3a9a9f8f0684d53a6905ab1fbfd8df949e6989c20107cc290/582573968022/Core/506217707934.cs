// Decompiled with JetBrains decompiler
// Type: 582573968022.Core.506217707934
// Assembly: 582573968022, Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 22949299-4A50-46F6-851E-C2A296093D37
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-35a63266858befa3a9a9f8f0684d53a6905ab1fbfd8df949e6989c20107cc290.exe

using \u003582573968022.Core;
using \u003582573968022.Models;
using \u003582573968022.Utils;
using Microsoft.Win32.TaskScheduler;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Text;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace \u003582573968022.Core
{
  public class \u003506217707934 : IDisposable
  {
    private const int \u003741001439711 = 130;
    private const int \u003116423173378 = 15;
    private const string \u003661590925904 = "31";
    private const int \u003259294798589 = 70;
    private const int \u003027405449804 = 20;
    private readonly int \u003262453055426;
    private readonly Graphics \u003580849980573;
    private readonly Image \u003462318002961;
    private readonly int \u003228361682537;
    private readonly int \u003304238320624;
    private Color \u003233161318197;
    private bool \u003229419578563;
    private Color \u003088401597565;
    private Color \u003235697964383;
    private int \u003558586187112;
    private int \u003093441993420;
    private int \u003809218559425;
    private IList<Point> \u003161741807343;
    private int \u003631826751992;
    internal static readonly long \u003779494732766;

    public string \u003037983126188 { set; get; }

    public int \u003778452301755 { set; get; }

    public string \u003270809543490 { set; get; }

    public int \u003062287153064 { set; get; }

    public string \u003114599259440 { set; get; }

    public IList<\u003450477549716> \u003949493204517 { set; get; }

    public int \u003675261620833 { set; get; }

    public bool \u003280330890558 { set; get; }

    public Color \u003925463290472 { set; get; }

    public bool \u003469416200105 { set; get; }

    public void \u003144276017755()
    {
      this.Dispose(true);
      GC.SuppressFinalize((object) this);
    }

    public Image \u003692651495070()
    {
      this.\u003519906696921();
      this.\u003644868733595();
      this.\u003435616701037();
      this.\u003161741807343 = (IList<Point>) this.\u003759948941384();
      this.\u003802547338900();
      this.\u003654965008349();
      this.\u003346811463860();
      return this.\u003462318002961;
    }

    protected virtual void Dispose(bool disposeManagedResources)
    {
      if (this.\u003229419578563 || !disposeManagedResources)
        return;
      this.\u003580849980573?.Dispose();
      this.\u003229419578563 = true;
    }

    private List<Point> \u003759948941384()
    {
      List<Point> pointList = new List<Point>();
      for (int index1 = 0; index1 < 7; ++index1)
      {
        for (int index2 = 0; index2 < 7; ++index2)
        {
          Point point = new Point(this.\u003558586187112 + index2 * this.\u003809218559425, this.\u003631826751992 + index1 * this.\u003093441993420);
          pointList.Add(point);
        }
      }
      return pointList;
    }

    private void \u003654965008349()
    {
      List<\u003450477549716> objList = new List<\u003450477549716>();
      int num1 = \u003063130264384.\u003139209172280(this.\u003304238320624, this.\u003228361682537);
      int num2 = this.\u003228361682537 <= 6 ? 31 : 30;
      if (this.\u003228361682537 - 1 == 11)
        num2 = \u003074762631918.\u003614301679763(this.\u003304238320624) ? 30 : 29;
      int num3 = 1;
      int num4 = num1 + 1;
      foreach (Point point in this.\u003161741807343.Skip<Point>(7).Take<Point>(7 - num1).Reverse<Point>().ToList<Point>())
      {
        this.\u003443589827431(num3, num4, point, (IList<\u003450477549716>) objList);
        ++num4;
        ++num3;
      }
      List<Point> list = this.\u003161741807343.Skip<Point>(14).ToList<Point>();
      int count = 0;
      Point point1 = new Point(this.\u003558586187112, this.\u003631826751992 + 7 * this.\u003093441993420);
      while (num3 <= num2)
      {
        IEnumerable<Point> points = list.Skip<Point>(count).Take<Point>(7).Reverse<Point>();
        int num5 = 1;
        foreach (Point point2 in points)
        {
          this.\u003443589827431(num3, num5, point2, (IList<\u003450477549716>) objList);
          ++num5;
          ++num3;
          if (num3 > num2)
          {
            point1 = point2;
            break;
          }
        }
        count += 7;
      }
      this.\u003580509488237((IList<\u003450477549716>) objList, point1);
    }

    private void \u003443589827431(
      int _param1,
      int _param2,
      Point _param3,
      IList<\u003450477549716> _param4)
    {
      Color? nullable = _param1 == this.\u003262453055426 ? new Color?(this.\u003925463290472) : new Color?();
      \u003450477549716 obj = this.\u003498877264503(_param1);
      if (obj != null)
      {
        if (_param1 != this.\u003262453055426)
          nullable = new Color?(this.\u003235697964383);
        if (this.\u003280330890558 || _param1 >= this.\u003262453055426)
        {
          obj.\u003414174580671 = this.\u003262453055426 == _param1;
          _param4.Add(obj);
        }
      }
      if (_param2 == 7 && _param1 != this.\u003262453055426)
        nullable = new Color?(this.\u003235697964383);
      string str = _param1.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003006345964968();
      this.\u003795583677923(_param3, str, this.\u003809218559425, this.\u003778452301755, nullable);
    }

    private void \u003802547338900()
    {
      for (int index = 6; index >= 0; --index)
      {
        string str = \u003450816416909.\u003382555657996[6 - index];
        this.\u003795583677923(this.\u003161741807343[index], str, this.\u003809218559425, this.\u003778452301755, \u003362236229937: true);
      }
    }

    private IEnumerable<\u003468277456154> \u003120232481902()
    {
      CultureInfo provider = new CultureInfo("ar-SA")
      {
        DateTimeFormat = {
          Calendar = (Calendar) new HijriCalendar()
        }
      };
      DateTime now = DateTime.Now;
      \u003468277456154[] objArray = new \u003468277456154[3];
      \u003468277456154 obj1 = new \u003468277456154();
      ((\u003700540643283) obj1).set_Day(this.\u003262453055426.ToString());
      obj1.\u003906119501021 = \u003720703864363.\u003734251054696[this.\u003228361682537 - 1] + " " + this.\u003304238320624.ToString((IFormatProvider) CultureInfo.InvariantCulture).\u003006345964968();
      objArray[0] = obj1;
      \u003468277456154 obj2 = new \u003468277456154();
      ((\u003700540643283) obj2).set_Day(string.Format("{0}", (object) int.Parse(now.ToString("dd", (IFormatProvider) provider))));
      obj2.\u003906119501021 = now.ToString("MMMM yyyy", (IFormatProvider) provider) ?? "";
      objArray[1] = obj2;
      \u003468277456154 obj3 = new \u003468277456154();
      ((\u003700540643283) obj3).set_Day(now.Day.ToString());
      obj3.\u003906119501021 = now.ToString("yyyy, MMMM", (IFormatProvider) CultureInfo.InvariantCulture) ?? "";
      objArray[2] = obj3;
      return (IEnumerable<\u003468277456154>) objArray;
    }

    private string \u003803901554280() => Path.Combine(\u003685140021025.\u003153468620506(), "fonts", this.\u003037983126188);

    private \u003450477549716 \u003498877264503(int _param1)
    {
      // ISSUE: object of a compiler-generated type is created
      // ISSUE: variable of a compiler-generated type
      \u003506217707934.\u003580230822186 obj = (\u003506217707934.\u003580230822186) new \u003506217707934.\u003398064641380();
      // ISSUE: reference to a compiler-generated field
      ((\u003506217707934.\u003398064641380) obj).\u003701705148739 = this;
      // ISSUE: reference to a compiler-generated field
      obj.\u003712297176348 = _param1;
      // ISSUE: reference to a compiler-generated method
      return this.\u003949493204517.FirstOrDefault<\u003450477549716>(new Func<\u003450477549716, bool>(obj.\u003815647164955));
    }

    private SizeF \u003245088558572(int _param1_1)
    {
      List<SizeF> source = new List<SizeF>();
      foreach (string str in \u003450816416909.\u003382555657996)
        source.Add(this.\u003610451963115(str, this.\u003778452301755));
      source.Add(this.\u003610451963115("31", this.\u003778452301755));
      float num = source.Select<SizeF, float>((Func<SizeF, float>) (_param1_2 => _param1_2.Height)).Max();
      return new SizeF(source.Select<SizeF, float>((Func<SizeF, float>) (_param1_3 => _param1_3.Width)).Max() + (float) _param1_1, num + (float) _param1_1);
    }

    private SizeF \u003610451963115(string _param1, int _param2)
    {
      string str = this.\u003803901554280();
      return \u003366397293684.\u003314287879119(_param1, _param2, FontStyle.Regular, str);
    }

    private void \u003346811463860()
    {
      if (!this.\u003469416200105)
        return;
      using (Font font = new Font(this.\u003270809543490, (float) this.\u003062287153064, FontStyle.Regular, GraphicsUnit.Pixel))
      {
        SizeF sizeF = \u003366397293684.\u003154461202341(this.\u003114599259440, font);
        this.\u003795583677923(new Point((int) ((double) this.\u003462318002961.Width - (246.0 + (double) sizeF.Width + 5.0)), this.\u003462318002961.Height - 120), this.\u003114599259440, (int) sizeF.Width + 20, this.\u003062287153064, \u003680522870821: false, \u003083044725803: font);
      }
    }

    private void \u003435616701037()
    {
      int num1 = this.\u003093441993420 + 20;
      int num2 = this.\u003809218559425;
      int num3 = this.\u003809218559425 * 6;
      int num4 = 0;
      foreach (\u003468277456154 obj in this.\u003120232481902())
      {
        Point point = new Point(this.\u003462318002961.Width - (70 + num2), num1 + num4 * this.\u003093441993420);
        this.\u003795583677923(point, obj.\u003635173606138, num2, this.\u003675261620833, new Color?(this.\u003088401597565));
        point = new Point(this.\u003462318002961.Width - (70 + num3 + num2), num1 + num4 * this.\u003093441993420);
        this.\u003795583677923(point, obj.\u003906119501021, num3, this.\u003675261620833, new Color?(this.\u003088401597565));
        ++num4;
      }
      this.\u003631826751992 = 4 * this.\u003093441993420 + 20;
    }

    private void \u003580509488237(IList<\u003450477549716> _param1, Point _param2)
    {
      int num = 2;
      float width1 = this.\u003610451963115("31", this.\u003675261620833).Width;
      foreach (\u003450477549716 obj in (IEnumerable<\u003450477549716>) _param1)
      {
        float width2 = this.\u003610451963115(obj.\u003692991079357, this.\u003675261620833).Width;
        Point point = new Point((int) ((double) this.\u003462318002961.Width - (70.0 + (double) width1 + 5.0)), _param2.Y + num * this.\u003093441993420);
        this.\u003795583677923(point, obj.\u003044584573743.ToString(), (int) width1 + 5, this.\u003675261620833, new Color?(obj.\u003414174580671 ? this.\u003925463290472 : this.\u003235697964383));
        point = new Point((int) ((double) this.\u003462318002961.Width - (70.0 + (double) width2 + (double) width1 + 10.0)), _param2.Y + num * this.\u003093441993420);
        this.\u003795583677923(point, obj.\u003692991079357, (int) width2 + 5, this.\u003675261620833, new Color?(obj.\u003414174580671 ? this.\u003925463290472 : this.\u003235697964383));
        ++num;
      }
    }

    private void \u003795583677923(
      Point _param1,
      string _param2,
      int _param3,
      int _param4,
      Color? _param5 = null,
      bool _param6 = true,
      bool _param7 = false,
      Font _param8 = null)
    {
      int x = _param1.X;
      int y = _param1.Y;
      double num = _param8 == null ? (double) this.\u003610451963115(_param2, _param4).Height : (double) \u003366397293684.\u003154461202341(_param2, _param8).Height;
      int height = (int) num + 15;
      if (num > (double) this.\u003093441993420)
        y -= height - this.\u003093441993420;
      Color color1 = !_param5.HasValue ? this.\u003233161318197 : Color.FromArgb(110, _param5.Value);
      if (_param7)
        color1 = color1.\u003521604977973(-0.12f);
      Rectangle layoutRectangle = new Rectangle(x, y, _param3, height);
      Graphics graphics = this.\u003580849980573;
      Rectangle rectangle = layoutRectangle;
      Pen pen = new Pen(color1);
      pen.Width = 1.1f;
      Color color2 = color1;
      \u003366397293684.\u003414220578019(graphics, rectangle, 15, pen, color2);
      StringFormat format = new StringFormat()
      {
        LineAlignment = StringAlignment.Center,
        Alignment = StringAlignment.Center,
        FormatFlags = _param6 ? StringFormatFlags.DirectionRightToLeft : StringFormatFlags.NoClip
      };
      this.\u003580849980573.TextRenderingHint = TextRenderingHint.AntiAlias;
      Color color3 = color1.\u003335913201618() < 130 ? Color.White : Color.Black;
      if (_param8 != null)
      {
        this.\u003580849980573.DrawString(_param2, _param8, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
      }
      else
      {
        using (PrivateFontCollection privateFontCollection = new PrivateFontCollection())
        {
          privateFontCollection.AddFontFile(this.\u003803901554280());
          using (FontFamily family = privateFontCollection.Families[0])
          {
            using (Font font = new Font(family, (float) _param4, FontStyle.Regular, GraphicsUnit.Pixel))
              this.\u003580849980573.DrawString(_param2, font, (Brush) new SolidBrush(color3), (RectangleF) layoutRectangle, format);
          }
        }
      }
    }

    private void \u003520255689844()
    {
      this.\u003233161318197 = this.\u003462318002961.\u003382782614593(new Rectangle(this.\u003558586187112 - 70, 0, this.\u003462318002961.Width, this.\u003462318002961.Height / 2)).\u003509364623552();
      this.\u003233161318197 = Color.FromArgb(190, this.\u003233161318197);
      while (this.\u003233161318197.\u003335913201618() >= 130)
        this.\u003233161318197 = this.\u003233161318197.\u003521604977973(-0.01f);
    }

    private void \u003644868733595()
    {
      this.\u003520255689844();
      this.\u003235697964383 = this.\u003233161318197.\u003521604977973(-0.7f);
      this.\u003088401597565 = this.\u003233161318197.\u003521604977973(-0.4f);
    }

    private void \u003519906696921()
    {
      SizeF sizeF = this.\u003245088558572(15);
      this.\u003093441993420 = (int) sizeF.Height;
      this.\u003809218559425 = (int) sizeF.Width;
      this.\u003558586187112 = this.\u003462318002961.Width - (70 + 7 * this.\u003809218559425);
    }

    public static void \u003257210802260()
    {
      try
      {
        ExecAction execAction = new ExecAction(Application.ExecutablePath, (string) null, Application.StartupPath);
        using (TaskDefinition taskDefinition = TaskService.Instance.NewTask())
        {
          int num = TaskService.Instance.HighestSupportedVersion >= new Version(1, 2) ? 1 : 0;
          taskDefinition.RegistrationInfo.Description = "582573968022 Runner";
          taskDefinition.RegistrationInfo.Author = "DNT";
          taskDefinition.Settings.Hidden = true;
          taskDefinition.Settings.Enabled = true;
          taskDefinition.Settings.DisallowStartIfOnBatteries = false;
          taskDefinition.Settings.StopIfGoingOnBatteries = false;
          if (num != 0)
          {
            taskDefinition.Settings.StartWhenAvailable = true;
            taskDefinition.Settings.MultipleInstances = (TaskInstancesPolicy) 2;
          }
          TimeTrigger timeTrigger1 = \u003254299357263.\u003395510924269();
          if (num == 0)
            ((Trigger) timeTrigger1).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger1);
          TimeTrigger timeTrigger2 = \u003254299357263.\u003859565444741();
          if (num == 0)
            ((Trigger) timeTrigger2).Repetition.Duration = TimeSpan.FromHours(1.1);
          taskDefinition.Triggers.Add((Trigger) timeTrigger2);
          taskDefinition.Actions.Add((Action) execAction);
          TaskService.Instance.RootFolder.RegisterTaskDefinition("582573968022 Runner", taskDefinition, (TaskCreation) 6, (string) null, (string) null, (TaskLogonType) 3, (string) null);
        }
        Console.WriteLine("`582573968022 Runner` task has been added.");
      }
      catch (Exception ex)
      {
        ex.\u003659348584730();
      }
    }
  }
}
