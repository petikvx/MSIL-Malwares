// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: IMuiResourceTypeIdIntEnt, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 108B0C51-A542-4D1F-972B-8772D9255CD7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-77eaed5cde7243b357db648d37fafd906220fc6f0c415561162e6fe5a1c39959.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1163486691;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1552929114)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -437304685 ^ 1764774737;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 2058193434;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 121536714)) % 3U)
          {
            case 1:
              str = "";
              num1 = (int) num2 * 929212898 ^ -210202565;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 891348481;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1161140283)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -647259423 ^ -890709567;
              continue;
            case 2:
              count = 0;
              num1 = (int) num2 * -511516997 ^ -1075096112;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 1891944116;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1436237638)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 407386577 ^ -3047878;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex) => (JSONNode) null;

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = -1069571557;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1840860280)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1618676292 ^ -405250756;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 childs = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = 1689370223;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 357134153)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1089847648 ^ -1167193461;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -628631697;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -55338904)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 6968 ^ 193105476;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -2067608013;
        int result;
        int asInt;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -18358872)) % 8U)
          {
            case 0:
              asInt = 0;
              num1 = -1113016367;
              continue;
            case 2:
              goto label_1;
            case 3:
              result = 0;
              num1 = (int) num2 * 895396216 ^ -2070178538;
              continue;
            case 4:
              num1 = (int) num2 * 530451797 ^ -5487795;
              continue;
            case 5:
              int num3 = flag ? 1785828228 : (num3 = 1804707331);
              num1 = num3 ^ (int) num2 * -1615215425;
              continue;
            case 6:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * 1708722305 ^ 565422003;
              continue;
            case 7:
              asInt = result;
              num1 = (int) num2 * -358810443 ^ -1450929937;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 1647119868;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1089920488)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1462064375 ^ -1228801753;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -904507295;
        float result;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -45380292)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -111398907 ^ -1314750928;
              continue;
            case 1:
              asFloat = result;
              num1 = (int) num2 * 1106350229 ^ 1997599169;
              continue;
            case 2:
              goto label_1;
            case 3:
              asFloat = 0.0f;
              num1 = -1365121165;
              continue;
            case 5:
              result = 0.0f;
              num1 = (int) num2 * -2014954069 ^ -1951762995;
              continue;
            case 6:
              int num3 = !float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u202A‍‮‍⁬‏‪⁪⁭‌⁭⁭‎⁭‏‌‍⁪‫‬‏⁮⁯⁮‍⁮⁫‎‌‫⁮⁬‪‌‎⁭‍‪‌‬‮(), out result) ? 1626976011 : (num3 = 1691854529);
              num1 = num3 ^ (int) num2 * 605463178;
              continue;
            case 7:
              num1 = (int) num2 * 1174602735 ^ 471598121;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 297062168;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 648387442)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -1079759351 ^ -96897453;
              continue;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -443306192 ^ 377373179;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
label_1:
        int num1 = -1917349855;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -109268318)) % 8U)
          {
            case 1:
              asDouble = result;
              num1 = (int) num2 * 1271758771 ^ -1234027769;
              continue;
            case 2:
              int num3 = !flag ? -178945921 : (num3 = -2022181247);
              num1 = num3 ^ (int) num2 * -944503167;
              continue;
            case 3:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 293794511 ^ 1136549821;
              continue;
            case 4:
              num1 = (int) num2 * -86371220 ^ 1550031786;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * -543617326 ^ 925742294;
              continue;
            case 7:
              asDouble = 0.0;
              num1 = -2041173234;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -985031503;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -805279379)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -832230371 ^ -1931489339;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
label_1:
        int num1 = -214257561;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -221215428)) % 6U)
          {
            case 1:
              int num3 = !bool.TryParse(this.Value, out result) ? -768936529 : (num3 = -1628223646);
              num1 = num3 ^ (int) num2 * -347743632;
              continue;
            case 2:
              num1 = (int) num2 * -506872792 ^ -99877988;
              continue;
            case 3:
              goto label_1;
            case 4:
              asBool = result;
              num1 = (int) num2 * -143581761 ^ 1531190910;
              continue;
            case 5:
              asBool = !JSONNode.\u206F‌⁭‪⁭‪‎‎⁫‬⁫‫‏‍⁮⁬‬‏‮⁮‍⁪‍⁭⁬‌‏​‫‫‮⁪‍‫‪‏‭‌⁪‪‮(this.Value);
              num1 = -574082426;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = 1070558044;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 597315702)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -240598484 ^ 375433229;
              continue;
            case 2:
              this.Value = value ? "true" : "false";
              num1 = 2120040259;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -294998342;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1599797181)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * -2045815076 ^ 1465870997;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
        JSONClass asObject = this as JSONClass;
label_1:
        int num1 = 639872097;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 933798820)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1416162102 ^ -1045453307;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 1799551883;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1933338909)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 39632184 ^ -313296362;
            continue;
          case 3:
            num1 = (int) num2 * 1908542463 ^ -262576803;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -415356711;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -1783569412)) % 5U)
        {
          case 0:
            str2 = d.Value;
            break;
          case 1:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -484377966 ^ 1277362288;
              continue;
            }
            str2 = (string) null;
            break;
          case 3:
            num1 = (int) num2 * 1661706432 ^ -99575168;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -1680171165;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = 57048862;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1696167071)) % 7U)
        {
          case 0:
            int num3 = !flag1 ? 78638051 : (num3 = 1768776342);
            num1 = num3 ^ (int) num2 * -2019914963;
            continue;
          case 1:
            flag2 = (object) a == b;
            num1 = 1707854336;
            continue;
          case 2:
            num1 = (int) num2 * 1829953059 ^ -1927219188;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_3;
          case 5:
            flag2 = true;
            num1 = (int) num2 * 1539412036 ^ -1447464051;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_10:
      return flag2;
label_4:
      num4 = 0;
label_5:
      flag1 = num4 != 0;
      num1 = 185473585;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 1977062584;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1412560571)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -2109078465 ^ 1746551326;
            continue;
          case 2:
            goto label_1;
          case 3:
            flag = (object) this == obj;
            num1 = (int) num2 * -1085822078 ^ -1521827879;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
      int hashCode = this.\u206D⁮​‌‮⁬⁭⁭‬‍‬‬​‎⁫‍‏⁮‬⁪‎‪‏‌‭‌‌‎⁬⁭⁭‫⁯‌⁪‮‮‏‮‍‮();
label_1:
      int num1 = -1182410897;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -124048246)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1975137520 ^ 842124660;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 495094979;
      char ch1;
      char ch2;
      string str1;
      string str2;
      int num2;
      string str3;
      char ch3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 581755361)) % 32U)
        {
          case 0:
label_18:
            str1 = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str1, "\\f");
            num1 = 1991030235;
            continue;
          case 1:
            str2 = aText;
            num1 = (int) num3 * 882732162 ^ -1696191139;
            continue;
          case 2:
            str1 = "";
            num1 = (int) num3 * -1782524657 ^ -325182754;
            continue;
          case 3:
label_17:
            str1 = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str1, ch3.ToString());
            num1 = 1201476786;
            continue;
          case 4:
            str1 = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str1, "\\\"");
            num1 = 1052766026;
            continue;
          case 5:
            num1 = (int) num3 * -1336040342 ^ 928409099;
            continue;
          case 6:
            ch3 = JSONNode.\u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮(str2, num2);
            num1 = 36793291;
            continue;
          case 7:
            num1 = (int) num3 * 1569010244 ^ 1009478510;
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num3 * -574361928 ^ 1419384010;
            continue;
          case 10:
            ch1 = ch3;
            num1 = (int) num3 * -926236199 ^ 1565429582;
            continue;
          case 11:
            num1 = (int) num3 * 1013600300 ^ -1456152106;
            continue;
          case 13:
label_8:
            str1 = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str1, "\\n");
            num1 = 1884088806;
            continue;
          case 14:
            num1 = (int) num3 * 1517164198 ^ -536012231;
            continue;
          case 15:
label_21:
            str1 = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str1, "\\t");
            num1 = 415939098;
            continue;
          case 16:
            num1 = (int) num3 * 1878275034 ^ -1078674926;
            continue;
          case 17:
            str1 = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str1, "\\\\");
            num1 = 2032397169;
            continue;
          case 18:
            int num4;
            num1 = num4 = num2 < JSONNode.\u206F⁬‪‎‮‌‬‏​⁫‎⁬⁪​‪​‬⁭‬‬⁯‭⁭‎‌‏‭‫⁭⁪⁫‍‍⁫⁯‫‏‌‍‮‮(str2) ? 183161991 : (num4 = 571873398);
            continue;
          case 19:
            ++num2;
            num1 = 1202082067;
            continue;
          case 20:
            int num5;
            num1 = num5 = ch2 == '\\' ? 20353552 : (num5 = 978806104);
            continue;
          case 21:
            ch2 = ch1;
            switch (ch2)
            {
              case '\b':
                goto label_14;
              case '\t':
                goto label_21;
              case '\n':
                goto label_8;
              case '\v':
                goto label_17;
              case '\f':
                goto label_18;
              case '\r':
                goto label_28;
              default:
                num1 = (int) num3 * -1342863510 ^ 2042975670;
                continue;
            }
          case 22:
            num1 = (int) num3 * 64399673 ^ 1642109588;
            continue;
          case 23:
            str3 = str1;
            num1 = (int) num3 * 1650331709 ^ 2036030100;
            continue;
          case 24:
            int num6;
            num1 = num6 = ch2 != '"' ? 137632190 : (num6 = 1781148453);
            continue;
          case 25:
            num1 = (int) num3 * -520964388 ^ -1201032642;
            continue;
          case 26:
            num1 = (int) num3 * 1878236495 ^ 2136120148;
            continue;
          case 27:
            num1 = (int) num3 * 854113786 ^ -1127532884;
            continue;
          case 28:
label_28:
            str1 = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str1, "\\r");
            num1 = 1504951479;
            continue;
          case 29:
label_14:
            str1 = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str1, "\\b");
            num1 = 698964328;
            continue;
          case 30:
            num2 = 0;
            num1 = (int) num3 * -734019648 ^ 128254355;
            continue;
          case 31:
            num1 = (int) num3 * -457796441 ^ 2120870028;
            continue;
          default:
            goto label_34;
        }
      }
label_34:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = 14688199;
      JSONNode jsonNode1;
      string aKey;
      Stack<JSONNode> jsonNodeStack;
      JSONNode jsonNode2;
      string aItem;
      bool flag1;
      bool flag2;
      char ch1;
      int num2;
      bool flag3;
      bool flag4;
      bool flag5;
      bool flag6;
      bool flag7;
      char ch2;
      bool flag8;
      char ch3;
      bool flag9;
      char ch4;
      char ch5;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      bool flag15;
      bool flag16;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 321009362)) % 149U)
        {
          case 0:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1420408373 ^ -935869496;
            continue;
          case 1:
            aKey = JSONNode.\u200E‮‮⁮‍‮⁪‭‎‮‏‎‎​‌‌⁭‫‍‬‌⁭‮⁫‮‮⁯​‏⁬​‍​‍‬⁫‌‍⁫‌‮(aKey);
            num1 = (int) num3 * 1158726450 ^ 241246989;
            continue;
          case 2:
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(aItem, "\n");
            num1 = 699957254;
            continue;
          case 3:
            num1 = (int) num3 * -1618881547 ^ -856030638;
            continue;
          case 4:
            num1 = (int) num3 * 1564971669 ^ -1269076854;
            continue;
          case 5:
            num1 = (int) num3 * 1007959147 ^ -1981033377;
            continue;
          case 6:
label_12:
            ++num2;
            num1 = 1856169441;
            continue;
          case 7:
            int num4 = !flag6 ? 899564830 : (num4 = 1096945892);
            num1 = num4 ^ (int) num3 * 428242682;
            continue;
          case 8:
            num1 = (int) num3 * -1236221933 ^ 2014460905;
            continue;
          case 9:
            num1 = (int) num3 * -845088944 ^ 1801853632;
            continue;
          case 10:
            flag1 = !flag1;
            num1 = 587065516;
            continue;
          case 11:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 1558154833;
            continue;
          case 12:
            num1 = (int) num3 * -862890123 ^ 892299963;
            continue;
          case 13:
          case 25:
          case 59:
          case 125:
          case 142:
label_49:
            ++num2;
            num1 = 1169471823;
            continue;
          case 14:
            jsonNode2 = jsonNode1;
            num1 = 1122138384;
            continue;
          case 15:
            num1 = (int) num3 * 2052659658 ^ 1218404381;
            continue;
          case 16:
            int num5 = flag14 ? -456189579 : (num5 = -388743946);
            num1 = num5 ^ (int) num3 * -317759153;
            continue;
          case 17:
            string str1 = aItem;
            ch3 = JSONNode.\u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮(aJSON, num2);
            string str2 = ch3.ToString();
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str1, str2);
            num1 = (int) num3 * 2131553515 ^ 418852789;
            continue;
          case 18:
            int num6 = flag11 ? 852288348 : (num6 = 722719612);
            num1 = num6 ^ (int) num3 * -2016693048;
            continue;
          case 19:
            int num7 = flag4 ? -322316279 : (num7 = -2016014112);
            num1 = num7 ^ (int) num3 * -1663236467;
            continue;
          case 20:
            int num8 = !flag9 ? 2009636482 : (num8 = 368425180);
            num1 = num8 ^ (int) num3 * -167548731;
            continue;
          case 21:
            num1 = (int) num3 * -1829778430 ^ 1112686194;
            continue;
          case 22:
            flag1 = false;
            num1 = (int) num3 * -1380840645 ^ 1475755097;
            continue;
          case 23:
            num1 = (int) num3 * 768626914 ^ -252842944;
            continue;
          case 24:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1704357969 ^ -1819383274;
            continue;
          case 26:
            num1 = (int) num3 * -272407514 ^ 1068545205;
            continue;
          case 27:
            num1 = (int) num3 * -1938004487 ^ -1951608837;
            continue;
          case 28:
            int num9 = ch1 != ':' ? -116486870 : (num9 = -1853778281);
            num1 = num9 ^ (int) num3 * 1898604254;
            continue;
          case 29:
            int num10 = !flag13 ? 1728342716 : (num10 = 2086613128);
            num1 = num10 ^ (int) num3 * -587531668;
            continue;
          case 30:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 734115808;
            continue;
          case 31:
            string s = JSONNode.\u202B⁭‪‭‍⁯‮​⁬‎⁯‍​⁫​‍⁭⁬‪‮⁫‬‍‎‏‏‌‮‪‮‍⁮‫​‮​⁭‏‌‮(aJSON, num2 + 1, 4);
            string str3 = aItem;
            ch3 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str4 = ch3.ToString();
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str3, str4);
            num2 += 4;
            num1 = (int) num3 * -695735785 ^ -2142123429;
            continue;
          case 32:
            num1 = 1658126463;
            continue;
          case 33:
            int num11;
            num1 = num11 = ch2 != 'n' ? 474741070 : (num11 = 1262578759);
            continue;
          case 34:
            ch1 = JSONNode.\u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮(aJSON, num2);
            num1 = 295080501;
            continue;
          case 35:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -188587845 ^ -822075381;
            continue;
          case 36:
            int num12;
            num1 = num12 = ch1 != ',' ? 2096386815 : (num12 = 1838904955);
            continue;
          case 37:
            ch2 = ch5;
            num1 = (int) num3 * -2035437408 ^ -1203730398;
            continue;
          case 38:
            int num13 = jsonNode1 != (object) null ? -1666923504 : (num13 = -433504174);
            num1 = num13 ^ (int) num3 * 1797167552;
            continue;
          case 39:
            num1 = (int) num3 * 1814915936 ^ 1146318405;
            continue;
          case 40:
            int num14;
            num1 = num14 = !JSONNode.\u206E‏‎‍‎‏‏‬⁬⁭​⁯‎​⁬‍⁪⁮​⁪​⁫‍​⁯⁭‭‌⁪‎⁯⁭‭⁭⁬⁭‏⁮‬⁯‮(aKey, "") ? 628143101 : (num14 = 763447177);
            continue;
          case 41:
            int num15;
            num1 = num15 = ch1 == ' ' ? 1092878298 : (num15 = 1860962784);
            continue;
          case 42:
            aItem = "";
            aKey = "";
            num1 = (int) num3 * -1379038743 ^ 1171373476;
            continue;
          case 43:
            int num16;
            num1 = num16 = flag1 ? 1091653121 : (num16 = 1124089112);
            continue;
          case 44:
            int num17;
            num1 = num17 = ch1 != '"' ? 100322049 : (num17 = 1954538488);
            continue;
          case 45:
            num1 = (int) num3 * -559444556 ^ 2068549308;
            continue;
          case 46:
            num1 = (int) num3 * -1354199674 ^ -1664036709;
            continue;
          case 47:
            num1 = (int) num3 * -1324119595 ^ 1887698264;
            continue;
          case 48:
            num1 = (int) num3 * -1915306505 ^ 1518411650;
            continue;
          case 49:
            int num18;
            num1 = num18 = ch1 == '}' ? 581627178 : (num18 = 917556855);
            continue;
          case 50:
            num1 = 459921007;
            continue;
          case 51:
            int num19;
            num1 = num19 = num2 >= JSONNode.\u206F⁬‪‎‮‌‬‏​⁫‎⁬⁪​‪​‬⁭‬‬⁯‭⁭‎‌‏‭‫⁭⁪⁫‍‍⁫⁯‫‏‌‍‮‮(aJSON) ? 1609384463 : (num19 = 1548730409);
            continue;
          case 52:
            flag8 = jsonNodeStack.Count == 0;
            num1 = 1133682949;
            continue;
          case 53:
            goto label_89;
          case 54:
            flag6 = JSONNode.\u206E‏‎‍‎‏‏‬⁬⁭​⁯‎​⁬‍⁪⁮​⁪​⁫‍​⁯⁭‭‌⁪‎⁯⁭‭⁭⁬⁭‏⁮‬⁯‮(aItem, "");
            num1 = 1664801993;
            continue;
          case 55:
            num1 = (int) num3 * -1216973566 ^ -1314305904;
            continue;
          case 56:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -477633941 ^ -26065479;
            continue;
          case 57:
            num1 = (int) num3 * -639583748 ^ -1458558933;
            continue;
          case 58:
label_45:
            num1 = 533232390;
            continue;
          case 60:
            num1 = (int) num3 * 1228417002 ^ -2010431748;
            continue;
          case 61:
            num1 = 1779374204;
            continue;
          case 62:
            num1 = 1251641298;
            continue;
          case 63:
            num2 = 0;
            num1 = (int) num3 * 319646875 ^ 1680821386;
            continue;
          case 64:
label_25:
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(aItem, "\r");
            num1 = 380439639;
            continue;
          case 65:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1493408756 ^ -1924981567;
            continue;
          case 66:
            switch (ch1)
            {
              case '[':
                goto label_102;
              case '\\':
                goto label_12;
              case ']':
                goto label_57;
              default:
                num1 = 2136146432;
                continue;
            }
          case 67:
            flag4 = JSONNode.\u206E‏‎‍‎‏‏‬⁬⁭​⁯‎​⁬‍⁪⁮​⁪​⁫‍​⁯⁭‭‌⁪‎⁯⁭‭⁭⁬⁭‏⁮‬⁯‮(aKey, "");
            num1 = 890780326;
            continue;
          case 68:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1212694158 ^ 1863359816;
            continue;
          case 69:
            num1 = (int) num3 * -921130944 ^ 1807886280;
            continue;
          case 70:
            num1 = (int) num3 * 1857953880 ^ -7816688;
            continue;
          case 71:
            int num20 = !flag3 ? -268569364 : (num20 = -1720712458);
            num1 = num20 ^ (int) num3 * -1614844247;
            continue;
          case 72:
            num1 = (int) num3 * 898824389 ^ -1927039663;
            continue;
          case 73:
            switch (ch1)
            {
              case '\t':
                goto label_10;
              case '\n':
              case '\r':
                goto label_49;
              case '\v':
              case '\f':
                goto label_44;
              default:
                num1 = (int) num3 * -860563287 ^ -1861114778;
                continue;
            }
          case 74:
            aKey = JSONNode.\u200E‮‮⁮‍‮⁪‭‎‮‏‎‎​‌‌⁭‫‍‬‌⁭‮⁫‮‮⁯​‏⁬​‍​‍‬⁫‌‍⁫‌‮(aKey);
            num1 = (int) num3 * 1591297807 ^ -904005031;
            continue;
          case 75:
            int num21 = !flag5 ? 471166595 : (num21 = 1767275218);
            num1 = num21 ^ (int) num3 * -190308981;
            continue;
          case 76:
            num1 = (int) num3 * 2124555912 ^ 203451178;
            continue;
          case 77:
label_57:
            int num22;
            num1 = num22 = !flag1 ? 1624243349 : (num22 = 1621401519);
            continue;
          case 78:
            int num23;
            num1 = num23 = ch1 == '{' ? 1725296986 : (num23 = 325207982);
            continue;
          case 79:
            aKey = "";
            num1 = 1440910030;
            continue;
          case 80:
            ch4 = JSONNode.\u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮(aJSON, num2);
            num1 = (int) num3 * 614095734 ^ -1020914663;
            continue;
          case 81:
            int num24 = !flag15 ? 875682005 : (num24 = 1178990215);
            num1 = num24 ^ (int) num3 * 1327292134;
            continue;
          case 82:
            flag5 = flag1;
            num1 = 451384595;
            continue;
          case 83:
            flag3 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -1727501623 ^ 935542678;
            continue;
          case 84:
            aKey = "";
            aItem = "";
            num1 = 738696116;
            continue;
          case 85:
            num1 = (int) num3 * -154726320 ^ 1815800745;
            continue;
          case 86:
            num1 = (int) num3 * 1207686558 ^ -925589729;
            continue;
          case 87:
            int num25 = ch2 != 'b' ? 505913432 : (num25 = 368499255);
            num1 = num25 ^ (int) num3 * 1213344047;
            continue;
          case 88:
            flag9 = flag1;
            num1 = (int) num3 * 1823607115 ^ 86817083;
            continue;
          case 89:
            int num26 = flag16 ? -1668081883 : (num26 = -1522603582);
            num1 = num26 ^ (int) num3 * 1587929747;
            continue;
          case 90:
            string str5 = aItem;
            ch3 = JSONNode.\u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮(aJSON, num2);
            string str6 = ch3.ToString();
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str5, str6);
            num1 = (int) num3 * 1837199145 ^ -803416525;
            continue;
          case 91:
            aKey = "";
            aItem = "";
            num1 = 575140242;
            continue;
          case 92:
            num1 = (int) num3 * 324223991 ^ 167226484;
            continue;
          case 93:
            flag10 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1421397278 ^ -1890243879;
            continue;
          case 94:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1024854584 ^ 2128607749;
            continue;
          case 95:
            int num27 = flag2 ? 1514988431 : (num27 = 500423462);
            num1 = num27 ^ (int) num3 * 1611628137;
            continue;
          case 96:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1814277542 ^ 613985868;
            continue;
          case 97:
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(aItem, "\b");
            num1 = 380439639;
            continue;
          case 98:
            int num28 = ch2 > 'f' ? -1078580198 : (num28 = -717522408);
            num1 = num28 ^ (int) num3 * 843148200;
            continue;
          case 99:
            flag12 = JSONNode.\u206E‏‎‍‎‏‏‬⁬⁭​⁯‎​⁬‍⁪⁮​⁪​⁫‍​⁯⁭‭‌⁪‎⁯⁭‭⁭⁬⁭‏⁮‬⁯‮(aItem, "");
            num1 = (int) num3 * -732519057 ^ 43191895;
            continue;
          case 100:
            num1 = (int) num3 * -1125040021 ^ 819450950;
            continue;
          case 101:
label_44:
            string str7 = aItem;
            ch3 = JSONNode.\u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮(aJSON, num2);
            string str8 = ch3.ToString();
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str7, str8);
            num1 = 802637067;
            continue;
          case 102:
            num1 = (int) num3 * 218637984 ^ 349736492;
            continue;
          case 103:
            num1 = (int) num3 * 894406934 ^ -320289169;
            continue;
          case 104:
            flag15 = flag1;
            num1 = 1139593446;
            continue;
          case 105:
            flag11 = jsonNode1 != (object) null;
            num1 = (int) num3 * 1203847489 ^ 273550065;
            continue;
          case 106:
            goto label_130;
          case 107:
            int num29 = !flag12 ? 1180705127 : (num29 = 271327536);
            num1 = num29 ^ (int) num3 * 1080755549;
            continue;
          case 108:
            int num30;
            num1 = num30 = ch2 != 'f' ? 903482077 : (num30 = 1438591538);
            continue;
          case 109:
            int num31 = ch1 <= ' ' ? -1360302785 : (num31 = -2038160491);
            num1 = num31 ^ (int) num3 * 1204678143;
            continue;
          case 110:
            int num32 = flag8 ? 721108881 : (num32 = 541051486);
            num1 = num32 ^ (int) num3 * 1550038977;
            continue;
          case 111:
            num1 = (int) num3 * 934006471 ^ -1831631645;
            continue;
          case 112:
            int num33 = flag7 ? 2065469105 : (num33 = 2008640213);
            num1 = num33 ^ (int) num3 * -237535037;
            continue;
          case 113:
            ch5 = ch4;
            num1 = (int) num3 * 1472344011 ^ -1667490800;
            continue;
          case 114:
            string str9 = aItem;
            ch3 = JSONNode.\u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮(aJSON, num2);
            string str10 = ch3.ToString();
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str9, str10);
            num1 = (int) num3 * -1545380030 ^ -1784341232;
            continue;
          case 115:
            int num34 = jsonNode1 is JSONArray ? 1416495822 : (num34 = 1577079194);
            num1 = num34 ^ (int) num3 * -1061588261;
            continue;
          case 116:
            int num35 = flag10 ? -972452352 : (num35 = -1557093415);
            num1 = num35 ^ (int) num3 * -1395320135;
            continue;
          case 117:
            flag16 = JSONNode.\u206E‏‎‍‎‏‏‬⁬⁭​⁯‎​⁬‍⁪⁮​⁪​⁫‍​⁯⁭‭‌⁪‎⁯⁭‭⁭⁬⁭‏⁮‬⁯‮(aKey, "");
            num1 = 108836911;
            continue;
          case 118:
            int num36;
            num1 = num36 = ch1 <= ']' ? 1505188421 : (num36 = 1900153248);
            continue;
          case 119:
            int num37 = !(jsonNode1 is JSONArray) ? 312246544 : (num37 = 1043793059);
            num1 = num37 ^ (int) num3 * -708161687;
            continue;
          case 120:
            flag7 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 199855749 ^ 1530032495;
            continue;
          case 121:
            jsonNodeStack.Pop();
            num1 = 1871958273;
            continue;
          case 122:
label_58:
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(aItem, "\t");
            num1 = 380439639;
            continue;
          case 123:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 932614153 ^ 1432395568;
            continue;
          case 124:
label_88:
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(aItem, ch4.ToString());
            num1 = 380439639;
            continue;
          case 126:
            num1 = (int) num3 * 1065678573 ^ -2145781452;
            continue;
          case (uint) sbyte.MaxValue:
            string str11 = aItem;
            ch3 = JSONNode.\u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮(aJSON, num2);
            string str12 = ch3.ToString();
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str11, str12);
            num1 = (int) num3 * 255408570 ^ -455297550;
            continue;
          case 128:
            int num38 = ch1 <= ',' ? 223418129 : (num38 = 1081101149);
            num1 = num38 ^ (int) num3 * 147697438;
            continue;
          case 129:
            aKey = "";
            aItem = "";
            num1 = 587065516;
            continue;
          case 130:
            jsonNodeStack = new Stack<JSONNode>();
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 1035202011 ^ 489573140;
            continue;
          case 131:
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(aItem, "\f");
            num1 = 1539505008;
            continue;
          case 132:
            flag14 = flag1;
            num1 = (int) num3 * 465865707 ^ 200297876;
            continue;
          case 133:
            num1 = (int) num3 * 1262726296 ^ 1567591877;
            continue;
          case 134:
label_102:
            flag13 = flag1;
            num1 = 1299840529;
            continue;
          case 135:
            goto label_1;
          case 136:
            string str13 = aItem;
            ch3 = JSONNode.\u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮(aJSON, num2);
            string str14 = ch3.ToString();
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str13, str14);
            num1 = (int) num3 * 1201495516 ^ -1694325744;
            continue;
          case 137:
            switch (ch2)
            {
              case 'r':
                goto label_25;
              case 's':
                goto label_88;
              case 't':
                goto label_58;
              case 'u':
                goto label_45;
              default:
                num1 = 346596979;
                continue;
            }
          case 138:
            string str15 = aItem;
            ch3 = JSONNode.\u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮(aJSON, num2);
            string str16 = ch3.ToString();
            aItem = JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮(str15, str16);
            num1 = (int) num3 * -856665302 ^ 1917766977;
            continue;
          case 139:
            num1 = 348214592;
            continue;
          case 140:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1548900275 ^ 2139397212;
            continue;
          case 141:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1940250853 ^ 680547745;
            continue;
          case 144:
            aKey = JSONNode.\u200E‮‮⁮‍‮⁪‭‎‮‏‎‎​‌‌⁭‫‍‬‌⁭‮⁫‮‮⁯​‏⁬​‍​‍‬⁫‌‍⁫‌‮(aKey);
            num1 = (int) num3 * 457243248 ^ 1988126718;
            continue;
          case 145:
label_10:
            flag2 = flag1;
            num1 = 1294755377;
            continue;
          case 146:
            int num39;
            num1 = num39 = !JSONNode.\u206E‏‎‍‎‏‏‬⁬⁭​⁯‎​⁬‍⁪⁮​⁪​⁫‍​⁯⁭‭‌⁪‎⁯⁭‭⁭⁬⁭‏⁮‬⁯‮(aKey, "") ? 1978022792 : (num39 = 574188156);
            continue;
          case 147:
            aKey = aItem;
            aItem = "";
            num1 = 587065516;
            continue;
          case 148:
            num1 = (int) num3 * -1292544699 ^ -2028783424;
            continue;
          default:
            goto label_149;
        }
      }
label_89:
      throw JSONNode.\u202C⁬⁬‎​⁭⁬‫⁪​⁮‪⁪‬‏‪⁮‎⁪⁪‮⁮‫‮‌⁯⁫⁪⁪‏‪‭⁬⁫​‪‪‎‮‫‮("JSON Parse: Quotation marks seems to be messed up.");
label_130:
      throw JSONNode.\u202C⁬⁬‎​⁭⁬‫⁪​⁮‪⁪‬‏‪⁮‎⁪⁪‮⁮‫‮‌⁯⁫⁪⁪‏‪‭⁬⁫​‪‪‎‮‫‮("JSON Parse: Too many closing brackets");
label_149:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData) => this.Serialize(JSONNode.\u206D⁭‍‍‌‭⁪⁪‮‫‮‌‭⁭‬⁬⁬‪⁬​⁯‏‪‍⁯‪‮⁫⁬‌‮‌⁮‫‮​⁪⁪‌⁭‮(aData));

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202C⁬⁬‎​⁭⁬‫⁪​⁮‪⁪‬‏‪⁮‎⁪⁪‮⁮‫‮‌⁯⁫⁪⁪‏‪‭⁬⁫​‪‪‎‮‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202C⁬⁬‎​⁭⁬‫⁪​⁮‪⁪‬‏‪⁮‎⁪⁪‮⁮‫‮‌⁯⁫⁪⁪‏‪‭⁬⁫​‪‪‎‮‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202C⁬⁬‎​⁭⁬‫⁪​⁮‪⁪‬‏‪⁮‎⁪⁪‮⁮‫‮‌⁯⁫⁪⁪‏‪‭⁬⁫​‪‪‎‮‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206A‌⁪‎⁮⁯‍⁮‮⁮‮⁮⁬‬⁯⁬⁮‌​⁭‬‬‍‌‮‍‬‫⁫‮⁬⁫⁯‫‪⁭‎​‮‎‮(JSONNode.\u206D⁬‍‫⁬⁬‎⁫‪⁪‫‫​⁮‭⁬‫⁪⁯‌‌‪‫‪‪‭‭‫‫⁮‍‬⁬‬⁬‫‏⁫‭⁯‮((FileSystemInfo) JSONNode.\u202E‮⁪​⁯‌‌⁬⁭‍‍​⁮⁬‫‌⁯⁯‪⁭‭​⁫‍‎‫⁫⁯⁪​⁪‍‭⁫‬‌⁫‍⁯‍‮(JSONNode.\u200E‬⁯‬‪⁯⁫‏‏⁪​‬‪⁫‍‍‎‭‌⁬‭‌⁪‌‭⁯⁮⁬​‌⁭‏‍‬⁬‮‮‫⁭‫‮(aFileName))));
      FileStream aData = JSONNode.\u200D​⁮⁭​⁫‎‌⁭⁬‪‭‪‎‍⁫⁪⁮⁭⁯‪‌⁯‎⁯⁫⁮‫⁯‎⁪‎‫‮‮‌​⁪⁪‮‮(aFileName);
      try
      {
label_2:
        int num1 = -1717646498;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -440194216)) % 4U)
          {
            case 0:
              goto label_10;
            case 1:
              num1 = (int) num2 * 929717494 ^ -1695827890;
              continue;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -31431274 ^ 399789929;
              continue;
            case 3:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -2098780707;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -440194216)) % 4U)
            {
              case 1:
                JSONNode.\u206B⁭⁯​‭⁬‍‎‬‬⁫‌⁪‍‬​‏‭⁬⁮⁪‭⁯‏‌⁮‏‭⁭⁪‎⁮‍‫‍‍⁪‌‌‌‮((IDisposable) aData);
                num3 = (int) num4 * -544805560 ^ 1438375574;
                continue;
              case 2:
                num3 = (int) num4 * 1530006737 ^ 1804738910;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206C‬‬‪⁮⁭‌‭⁭‏​‏‎⁯⁫⁪⁫⁪‌‮‏‫​⁯‎‮‫‮⁮​‍⁪⁯⁪‬⁫‫⁪‭⁮‮();
      try
      {
label_2:
        int num1 = 1060765310;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 753212728)) % 5U)
          {
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1210927552 ^ -703227563;
              continue;
            case 2:
              num1 = (int) num2 * 1472856724 ^ 56959004;
              continue;
            case 3:
              goto label_2;
            case 4:
              JSONNode.\u206D‪‬⁯‭⁮⁫⁫​⁯⁬‫⁪‫‪‭⁪⁫‍‏‪⁬‏‏⁪‫‪⁫⁬‭⁭⁪⁬‮⁭‍⁯⁮‮‍‮((Stream) aData, 0L);
              num1 = (int) num2 * 1482737407 ^ 643732420;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return JSONNode.\u202B‍‭‭‏‌​‭‌‏⁮‫‪‍⁭‪⁫⁪‍‪​⁭‬‫‮​‬⁭‬⁯⁬‪‮⁯⁪‏‌⁬‬‍‮(JSONNode.\u202A⁭⁯⁭‭‏‍‎‫⁯‭⁫‎⁮⁬⁫‎⁮‮‬‭⁮‪‭⁬‬‍‏‍‏​⁫‪‭‏⁭​‫⁬⁬‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = 235328788;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 753212728)) % 3U)
            {
              case 1:
                JSONNode.\u206B⁭⁯​‭⁬‍‎‬‬⁫‌⁪‍‬​‏‭⁬⁮⁪‭⁯‏‌⁮‏‭⁭⁪‎⁮‍‫‍‍⁪‌‌‌‮((IDisposable) aData);
                num3 = (int) num4 * 822064171 ^ -1228802161;
                continue;
              case 2:
                goto label_9;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -966491157;
      JSONNode jsonNode;
      JSONClass jsonClass;
      int num2;
      JSONBinaryTag jsonBinaryTag1;
      int num3;
      JSONArray jsonArray;
      string aKey;
      bool flag1;
      JSONNode aItem;
      JSONBinaryTag jsonBinaryTag2;
      int num4;
      bool flag2;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -296592074)) % 32U)
        {
          case 0:
            flag2 = num2 < num4;
            num1 = -2034015270;
            continue;
          case 1:
            flag1 = num5 < num3;
            num1 = -1200963042;
            continue;
          case 2:
            ++num2;
            num1 = (int) num6 * -2042923999 ^ 1341765812;
            continue;
          case 3:
label_19:
            num4 = JSONNode.\u206D⁭‬‬‪‍⁪⁬‬‮‪‬‭⁬‬⁫‮⁬‪⁬⁮‪‍⁮‮⁯‪‪‌‏‌‬⁯‍​‪⁮⁯⁮‌‮(aReader);
            num1 = -769868763;
            continue;
          case 4:
            goto label_1;
          case 5:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num5;
            num1 = -283750953;
            continue;
          case 6:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_11;
              case JSONBinaryTag.Class:
                goto label_19;
              case JSONBinaryTag.Value:
                goto label_8;
              case JSONBinaryTag.IntValue:
                goto label_24;
              case JSONBinaryTag.DoubleValue:
                goto label_10;
              case JSONBinaryTag.BoolValue:
                goto label_3;
              case JSONBinaryTag.FloatValue:
                goto label_29;
              default:
                num1 = (int) num6 * -98474525 ^ -1845490837;
                continue;
            }
          case 7:
label_10:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D‏⁮‮⁯⁬‏⁮⁪‫‮⁮‮⁫‌‫⁪⁮‮‍​​‎‮⁭⁮‮‮⁭‌⁯‌⁫‭⁮‎‮‪‫‍‮(aReader));
            num1 = -1920306079;
            continue;
          case 8:
            int num7 = flag1 ? 1358239763 : (num7 = 1736356000);
            num1 = num7 ^ (int) num6 * -1772220352;
            continue;
          case 9:
label_29:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D⁫​⁯‌‏‬⁫⁬‫‌⁮‮‪⁯‮‭⁬‭‏​‌⁯‏⁮⁭‍⁫⁪‬‭​⁮‮‍‫⁪‌⁪⁯‮(aReader));
            num1 = -929885861;
            continue;
          case 10:
label_3:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E⁮‮⁯‌⁭‏⁫⁭⁯‮⁯‪⁬‎⁫⁭‭⁬‫‍‫⁯‏‎⁬‬‬⁭‍‎‫‌⁮⁭‌‬‌‌⁭‮(aReader));
            num1 = -668944723;
            continue;
          case 11:
            goto label_32;
          case 12:
            int num8 = !flag2 ? 1286859291 : (num8 = 1712619039);
            num1 = num8 ^ (int) num6 * 1748668842;
            continue;
          case 13:
            num1 = (int) num6 * -510883321 ^ 53964374;
            continue;
          case 14:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * -1506962857 ^ -934651698;
            continue;
          case 15:
            num1 = (int) num6 * -727585365 ^ -800121096;
            continue;
          case 16:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202B‏​‫⁬‪⁬⁪‫‌‎‌⁫⁫‏‎⁭‬‬‭⁬⁫⁯‪‍⁬‏‍⁪‌​⁮‎‍‌‌⁭⁭⁪⁮‮(aReader));
            num1 = (int) num6 * -795908278 ^ 1909024653;
            continue;
          case 17:
            aKey = JSONNode.\u202B‏​‫⁬‪⁬⁪‫‌‎‌⁫⁫‏‎⁭‬‬‭⁬⁫⁯‪‍⁬‏‍⁪‌​⁮‎‍‌‌⁭⁭⁪⁮‮(aReader);
            num1 = -306490088;
            continue;
          case 18:
label_8:
            num1 = -1845953434;
            continue;
          case 19:
            jsonClass = new JSONClass();
            num2 = 0;
            num1 = (int) num6 * 365153349 ^ -1244266135;
            continue;
          case 20:
label_11:
            num3 = JSONNode.\u206D⁭‬‬‪‍⁪⁬‬‮‪‬‭⁬‬⁫‮⁬‪⁬⁮‪‍⁮‮⁯‪‪‌‏‌‬⁯‍​‪⁮⁯⁮‌‮(aReader);
            jsonArray = new JSONArray();
            num1 = -479216952;
            continue;
          case 21:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -728240745 ^ 560593742;
            continue;
          case 22:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 637686217 ^ 830811816;
            continue;
          case 23:
            num1 = (int) num6 * 2101588313 ^ -1348456302;
            continue;
          case 24:
            num1 = (int) num6 * 1455782953 ^ 725989813;
            continue;
          case 25:
label_24:
            num1 = -546994390;
            continue;
          case 26:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 78486900 ^ 1048105084;
            continue;
          case 28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁭‬‬‪‍⁪⁬‬‮‪‬‭⁬‬⁫‮⁬‪⁬⁮‪‍⁮‮⁯‪‪‌‏‌‬⁯‍​‪⁮⁯⁮‌‮(aReader));
            num1 = (int) num6 * 1708987733 ^ -1699020319;
            continue;
          case 29:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u202A‏‏⁮⁮​⁮⁫⁬‭⁬‏⁬⁫⁫‬‫​‬⁯⁫⁮‪⁫⁫‫‍‌⁫‭​‌⁫‏​‮⁪⁭‪⁫‮(aReader);
            num1 = (int) num6 * -275851632 ^ -1477907399;
            continue;
          case 30:
            num5 = 0;
            num1 = (int) num6 * 409067397 ^ 1785431329;
            continue;
          case 31:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -1103388304 ^ -458349568;
            continue;
          default:
            goto label_34;
        }
      }
label_32:
      throw JSONNode.\u202C⁬⁬‎​⁭⁬‫⁪​⁮‪⁪‬‏‪⁮‎⁪⁪‮⁮‫‮‌⁯⁫⁪⁪‏‪‭⁬⁫​‪‪‎‮‫‮(JSONNode.\u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_34:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202C⁬⁬‎​⁭⁬‫⁪​⁮‪⁪‬‏‪⁮‎⁪⁪‮⁮‫‮‌⁯⁫⁪⁪‏‪‭⁬⁫​‪‪‎‮‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202C⁬⁬‎​⁭⁬‫⁪​⁮‪⁪‬‏‪⁮‎⁪⁪‮⁮‫‮‌⁯⁫⁪⁪‏‪‭⁬⁫​‪‪‎‮‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202C⁬⁬‎​⁭⁬‫⁪​⁮‪⁪‬‏‪⁮‎⁪⁪‮⁮‫‮‌⁯⁫⁪⁪‏‪‭⁬⁫​‪‪‎‮‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u200E‏⁭⁮‌‍‫⁭⁯‫‍⁯⁪‭⁫‏‎‍‪‍⁯‮‫‎⁯‮‍⁭⁯‌‪‏​‫​‭⁪‎‌⁭‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -636687538;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -526863824)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * 1175092341 ^ 1513419622;
              continue;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = -922037594;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -526863824)) % 3U)
            {
              case 0:
                goto label_6;
              case 1:
                JSONNode.\u206B⁭⁯​‭⁬‍‎‬‬⁫‌⁪‍‬​‏‭⁬⁮⁪‭⁯‏‌⁮‏‭⁭⁪‎⁮‍‫‍‍⁪‌‌‌‮((IDisposable) aReader);
                num3 = (int) num4 * -1023362101 ^ -358146331;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206D‫​‪‍⁯‪‮‌⁫‍‭‍‌‍‬‏‍‮‪‏⁪‬‎‭​⁬⁮‭‭‭‮⁯‬⁪‏‍⁭‪⁬‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -460418612;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -1257824717)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u206B⁭⁯​‭⁬‍‎‬‬⁫‌⁪‍‬​‏‭⁬⁮⁪‭⁯‏‌⁮‏‭⁭⁪‎⁮‍‫‍‍⁪‌‌‌‮((IDisposable) aData);
                num1 = (int) num2 * -555843596 ^ 898602639;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -872621065;
      MemoryStream aData;
      JSONNode jsonNode;
      byte[] numArray;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -313382835)) % 7U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1542084732 ^ -815059061;
            continue;
          case 3:
            JSONNode.\u206D‪‬⁯‭⁮⁫⁫​⁯⁬‫⁪‫‪‭⁪⁫‍‏‪⁬‏‏⁪‫‪⁫⁬‭⁭⁪⁬‮⁭‍⁯⁮‮‍‮((Stream) aData, 0L);
            num1 = (int) num2 * 991157545 ^ 1051665920;
            continue;
          case 4:
            numArray = JSONNode.\u202A‪⁯⁮⁭‪⁯‪‭⁬‍⁬‌⁯‮⁭⁮⁫‮‏‭‪​‎⁮‍‫‬‬‫⁯‫⁮‬⁪⁪⁫⁮⁫‬‮(aBase64);
            num1 = (int) num2 * 231340341 ^ 1730669429;
            continue;
          case 5:
            aData = JSONNode.\u200E‭⁯⁪‎‫⁫‮⁮‎‮⁫⁭⁯‮‮⁬‪⁭⁭⁮⁮⁮‮⁬⁭‫⁮‬⁮‬⁮‫⁪⁫‭‭‍‮‮‮(numArray);
            num1 = (int) num2 * 1563306685 ^ -498581125;
            continue;
          case 6:
            num1 = (int) num2 * 1099745807 ^ 1673139293;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    static CultureInfo \u202A‍‮‍⁬‏‪⁪⁭‌⁭⁭‎⁭‏‌‍⁪‫‬‏⁮⁯⁮‍⁮⁫‎‌‫⁮⁬‪‌‎⁭‍‪‌‬‮() => CultureInfo.InvariantCulture;

    static bool \u206F‌⁭‪⁭‪‎‎⁫‬⁫‫‏‍⁮⁬‬‏‮⁮‍⁪‍⁭⁬‌‏​‫‫‮⁪‍‫‪‏‭‌⁪‪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206D⁮​‌‮⁬⁭⁭‬‍‬‬​‎⁫‍‏⁮‬⁪‎‪‏‌‭‌‌‎⁬⁭⁭‫⁯‌⁪‮‮‏‮‍‮() => base.GetHashCode();

    static char \u202B‎‎‮⁬‪‍‍​‬‬⁯​‭‫‪​‭⁮⁭‮‎‭⁭‮​‭‭‎‭‬​‮‫‌‍‮⁫‌⁯‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u202A‏⁬⁬‫‏‬⁮⁪‫‌⁮⁬‌‪⁫⁪‭⁬⁮‭‪‭‎⁫‏⁪​‮⁫‭‎⁫‬⁯⁯‎⁫‪‭‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206F⁬‪‎‮‌‬‏​⁫‎⁬⁪​‪​‬⁭‬‬⁯‭⁭‎‌‏‭‫⁭⁪⁫‍‍⁫⁯‫‏‌‍‮‮([In] string obj0) => obj0.Length;

    static string \u200E‮‮⁮‍‮⁪‭‎‮‏‎‎​‌‌⁭‫‍‬‌⁭‮⁫‮‮⁯​‏⁬​‍​‍‬⁫‌‍⁫‌‮([In] string obj0) => obj0.Trim();

    static bool \u206E‏‎‍‎‏‏‬⁬⁭​⁯‎​⁬‍⁪⁮​⁪​⁫‍​⁯⁭‭‌⁪‎⁯⁭‭⁭⁬⁭‏⁮‬⁯‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202C⁬⁬‎​⁭⁬‫⁪​⁮‪⁪‬‏‪⁮‎⁪⁪‮⁮‫‮‌⁯⁫⁪⁪‏‪‭⁬⁫​‪‪‎‮‫‮([In] string obj0) => new Exception(obj0);

    static string \u202B⁭‪‭‍⁯‮​⁬‎⁯‍​⁫​‍⁭⁬‪‮⁫‬‍‎‏‏‌‮‪‮‍⁮‫​‮​⁭‏‌‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206D⁭‍‍‌‭⁪⁪‮‫‮‌‭⁭‬⁬⁬‪⁬​⁯‏‪‍⁯‪‮⁫⁬‌‮‌⁮‫‮​⁪⁪‌⁭‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200E‬⁯‬‪⁯⁫‏‏⁪​‬‪⁫‍‍‎‭‌⁬‭‌⁪‌‭⁯⁮⁬​‌⁭‏‍‬⁬‮‮‫⁭‫‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202E‮⁪​⁯‌‌⁬⁭‍‍​⁮⁬‫‌⁯⁯‪⁭‭​⁫‍‎‫⁫⁯⁪​⁪‍‭⁫‬‌⁫‍⁯‍‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206D⁬‍‫⁬⁬‎⁫‪⁪‫‫​⁮‭⁬‫⁪⁯‌‌‪‫‪‪‭‭‫‫⁮‍‬⁬‬⁬‫‏⁫‭⁯‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206A‌⁪‎⁮⁯‍⁮‮⁮‮⁮⁬‬⁯⁬⁮‌​⁭‬‬‍‌‮‍‬‫⁫‮⁬⁫⁯‫‪⁭‎​‮‎‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200D​⁮⁭​⁫‎‌⁭⁬‪‭‪‎‍⁫⁪⁮⁭⁯‪‌⁯‎⁯⁫⁮‫⁯‎⁪‎‫‮‮‌​⁪⁪‮‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206B⁭⁯​‭⁬‍‎‬‬⁫‌⁪‍‬​‏‭⁬⁮⁪‭⁯‏‌⁮‏‭⁭⁪‎⁮‍‫‍‍⁪‌‌‌‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206C‬‬‪⁮⁭‌‭⁭‏​‏‎⁯⁫⁪⁫⁪‌‮‏‫​⁯‎‮‫‮⁮​‍⁪⁯⁪‬⁫‫⁪‭⁮‮() => new MemoryStream();

    static void \u206D‪‬⁯‭⁮⁫⁫​⁯⁬‫⁪‫‪‭⁪⁫‍‏‪⁬‏‏⁪‫‪⁫⁬‭⁭⁪⁬‮⁭‍⁯⁮‮‍‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202A⁭⁯⁭‭‏‍‎‫⁯‭⁫‎⁮⁬⁫‎⁮‮‬‭⁮‪‭⁬‬‍‏‍‏​⁫‪‭‏⁭​‫⁬⁬‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202B‍‭‭‏‌​‭‌‏⁮‫‪‍⁭‪⁫⁪‍‪​⁭‬‫‮​‬⁭‬⁯⁬‪‮⁯⁪‏‌⁬‬‍‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202A‏‏⁮⁮​⁮⁫⁬‭⁬‏⁬⁫⁫‬‫​‬⁯⁫⁮‪⁫⁫‫‍‌⁫‭​‌⁫‏​‮⁪⁭‪⁫‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206D⁭‬‬‪‍⁪⁬‬‮‪‬‭⁬‬⁫‮⁬‪⁬⁮‪‍⁮‮⁯‪‪‌‏‌‬⁯‍​‪⁮⁯⁮‌‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202B‏​‫⁬‪⁬⁪‫‌‎‌⁫⁫‏‎⁭‬‬‭⁬⁫⁯‪‍⁬‏‍⁪‌​⁮‎‍‌‌⁭⁭⁪⁮‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202D‏⁮‮⁯⁬‏⁮⁪‫‮⁮‮⁫‌‫⁪⁮‮‍​​‎‮⁭⁮‮‮⁭‌⁯‌⁫‭⁮‎‮‪‫‍‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u202E⁮‮⁯‌⁭‏⁫⁭⁯‮⁯‪⁬‎⁫⁭‭⁬‫‍‫⁯‏‎⁬‬‬⁭‍‎‫‌⁮⁭‌‬‌‌⁭‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202D⁫​⁯‌‏‬⁫⁬‫‌⁮‮‪⁯‮‭⁬‭‏​‌⁯‏⁮⁭‍⁫⁪‬‭​⁮‮‍‫⁪‌⁪⁯‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u200E‏⁭⁮‌‍‫⁭⁯‫‍⁯⁪‭⁫‏‎‍‪‍⁯‮‫‎⁯‮‍⁭⁯‌‪‏​‫​‭⁪‎‌⁭‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206D‫​‪‍⁯‪‮‌⁫‍‭‍‌‍‬‏‍‮‪‏⁪‬‎‭​⁬⁮‭‭‭‮⁯‬⁪‏‍⁭‪⁬‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202A‪⁯⁮⁭‪⁯‪‭⁬‍⁬‌⁯‮⁭⁮⁫‮‏‭‪​‎⁮‍‫‬‬‫⁯‫⁮‬⁪⁪⁫⁮⁫‬‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u200E‭⁯⁪‎‫⁫‮⁮‎‮⁫⁭⁯‮‮⁬‪⁭⁭⁮⁮⁮‮⁬⁭‫⁮‬⁮‬⁮‫⁪⁫‭‭‍‮‮‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
