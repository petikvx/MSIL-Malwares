// Decompiled with JetBrains decompiler
// Type: Aura.Protection.Software.Runtime.AntiTamperHandler
// Assembly: Kudeta Crypter, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 16F9F4AC-EE0C-4DE1-A1E6-B297F2D4338B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-VirTool.MSIL.Crypto.gen-a09f476c823deb3aadbd99b5e979f18689723f0ab3b5690e0b9a42cf2007f2a8.exe

using System;
using System.IO;
using System.Reflection;
using System.Security.Cryptography;

namespace Aura.Protection.Software.Runtime
{
  internal class AntiTamperHandler
  {
    private static void Initializer()
    {
      string location = Assembly.GetExecutingAssembly().Location;
      Stream baseStream = new StreamReader(location).BaseStream;
      BinaryReader binaryReader = new BinaryReader(baseStream);
      baseStream.Seek(-32L, SeekOrigin.End);
      string strB = BitConverter.ToString(binaryReader.ReadBytes(32));
      if (string.Compare(BitConverter.ToString(SHA256.Create().ComputeHash(binaryReader.ReadBytes(File.ReadAllBytes(location).Length - 32))), strB, StringComparison.Ordinal) != 0)
        throw new BadImageFormatException();
    }
  }
}
