// Decompiled with JetBrains decompiler
// Type: 521186696392.437992951782
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003048520867406;
using \u003053028810657;
using \u003065069248529;
using \u003127672373844;
using \u003226094756440;
using \u003277493558513;
using \u003384276752884;
using \u003603600525092;
using System;
using System.Runtime.CompilerServices;
using System.Text.RegularExpressions;

namespace \u003521186696392
{
  public class \u003437992951782 : \u003068562095717
  {
    private const string \u003311779344424 = "Pattern";
    private const string \u003728477063134 = "Options";

    public virtual void \u003167026695470(
      \u003632627526011 _param1,
      object _param2,
      \u003131478599170 _param3)
    {
      Regex regex = (Regex) _param2;
      if (_param1 is \u003568632398145 obj)
        this.\u003562755678341(obj, regex);
      else
        this.\u003590668076423(_param1, regex, _param3);
    }

    private bool \u003633226723522(RegexOptions _param1, RegexOptions _param2) => (_param1 & _param2) == _param2;

    private void \u003562755678341(\u003568632398145 _param1, Regex _param2)
    {
      string str1 = (string) null;
      if (this.\u003633226723522(_param2.Options, RegexOptions.IgnoreCase))
        str1 += "i";
      if (this.\u003633226723522(_param2.Options, RegexOptions.Multiline))
        str1 += "m";
      if (this.\u003633226723522(_param2.Options, RegexOptions.Singleline))
        str1 += "s";
      string str2 = str1 + "u";
      if (this.\u003633226723522(_param2.Options, RegexOptions.ExplicitCapture))
        str2 += "x";
      _param1.\u003887322068303(_param2.ToString(), str2);
    }

    private void \u003590668076423(
      \u003632627526011 _param1,
      Regex _param2,
      \u003131478599170 _param3)
    {
      \u003200975390980 obj = _param3.\u003865471240500 as \u003200975390980;
      _param1.\u003038455958685();
      _param1.\u003210934969267(obj != null ? obj.\u003481711761762("Pattern") : "Pattern");
      _param1.\u003897033093575(_param2.ToString());
      _param1.\u003210934969267(obj != null ? obj.\u003481711761762("Options") : "Options");
      _param3.\u003003821094014(_param1, (object) _param2.Options);
      _param1.\u003908313152034();
    }

    public virtual object \u003797319250655(
      \u003250925846196 _param1,
      Type _param2,
      object _param3,
      \u003131478599170 _param4)
    {
      switch (_param1.\u003271751439454)
      {
        case \u003293768301571.StartObject:
          return (object) this.\u003341221050718(_param1, _param4);
        case \u003293768301571.String:
          return this.\u003515400997842(_param1);
        case \u003293768301571.Null:
          return (object) null;
        default:
          throw \u003479281034910.\u003188723322269(_param1, "Unexpected token when reading Regex.");
      }
    }

    private object \u003515400997842(\u003250925846196 _param1)
    {
      string str1 = (string) _param1.\u003255783382022;
      int num = str1.LastIndexOf('/');
      string pattern = str1.Substring(1, num - 1);
      string str2 = str1.Substring(num + 1);
      RegexOptions options = RegexOptions.None;
      foreach (char ch in str2)
      {
        switch (ch)
        {
          case 'i':
            options |= RegexOptions.IgnoreCase;
            break;
          case 'm':
            options |= RegexOptions.Multiline;
            break;
          case 's':
            options |= RegexOptions.Singleline;
            break;
          case 'x':
            options |= RegexOptions.ExplicitCapture;
            break;
        }
      }
      return (object) new Regex(pattern, options);
    }

    private Regex \u003341221050718(\u003250925846196 _param1, \u003131478599170 _param2)
    {
      string pattern = (string) null;
      RegexOptions? nullable = new RegexOptions?();
      while (_param1.\u003776737810718())
      {
        switch (_param1.\u003271751439454)
        {
          case \u003293768301571.PropertyName:
            string a = _param1.\u003255783382022.ToString();
            if (!_param1.\u003776737810718())
              throw \u003479281034910.\u003188723322269(_param1, "Unexpected end when reading Regex.");
            if (string.Equals(a, "Pattern", StringComparison.OrdinalIgnoreCase))
            {
              pattern = (string) _param1.\u003255783382022;
              continue;
            }
            if (string.Equals(a, "Options", StringComparison.OrdinalIgnoreCase))
            {
              nullable = new RegexOptions?(_param2.\u003883794346465<RegexOptions>(_param1));
              continue;
            }
            _param1.\u003930609728103();
            continue;
          case \u003293768301571.EndObject:
            return pattern != null ? new Regex(pattern, (RegexOptions) ((int) nullable ?? 0)) : throw \u003479281034910.\u003188723322269(_param1, "Error deserializing Regex. No pattern found.");
          default:
            continue;
        }
      }
      throw \u003479281034910.\u003188723322269(_param1, "Unexpected end when reading Regex.");
    }

    public virtual bool \u003583107408810(Type _param1) => _param1.Name == "Regex" && this.\u003811220480075(_param1);

    [MethodImpl(MethodImplOptions.NoInlining)]
    private bool \u003811220480075(Type _param1) => _param1 == typeof (Regex);
  }
}
