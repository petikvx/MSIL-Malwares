// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: cDisplayClass1, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 0E93EC79-9513-4BD1-8651-98C7CADA4D7F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a7264014555068294029d5d9ceb9ee717c4d2bf523330c30cee18f18e55a0b5b.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -363310792;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -37038216)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -597695790 ^ 987504597;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 742970085;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 817590651)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -2125632004 ^ 1504920260;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
        string str = "";
label_1:
        int num1 = -1652427911;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -999685499)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1306320835 ^ -1267833015;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 77959279;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2000588439)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = 0;
              num1 = (int) num2 * -1935765503 ^ 762106132;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = -1776680185;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1797248122)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * 371676574 ^ -264293163;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 1393946855;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1633471654)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 920543746 ^ 961276091;
            continue;
          case 3:
            num1 = (int) num2 * 1141261032 ^ 1931281840;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = 1359780527;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 420821151)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1757345531 ^ -1420320902;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = -448922583;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1935039474)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1976617537 ^ -1094566147;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
        getChildsD17.\u003C\u003E4__this = this;
label_1:
        int num1 = 1700619964;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 152797952)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * 1321869907 ^ 1824738820;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
        getDeepChildsD19.\u003C\u003E4__this = this;
label_1:
        int num1 = 1574757470;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1194204624)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 1767483103 ^ 223347955;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = 551417273;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1838426393)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 429769241 ^ 1100979856;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -991659965;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2063860011)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1539921044 ^ 2083149961;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -512814690;
        int result;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1690528555)) % 6U)
          {
            case 0:
              goto label_1;
            case 2:
              asInt = result;
              num1 = (int) num2 * 1784031827 ^ -449894322;
              continue;
            case 3:
              num1 = (int) num2 * -589217256 ^ 2070029870;
              continue;
            case 4:
              asInt = 0;
              num1 = -2098743036;
              continue;
            case 5:
              result = 0;
              int num3 = int.TryParse(this.Value, out result) ? 124661987 : (num3 = 1471804117);
              num1 = num3 ^ (int) num2 * -1450918246;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -449484107;
        float result;
        bool flag;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -572973912)) % 8U)
          {
            case 0:
              int num3 = !flag ? -700037367 : (num3 = -1618869580);
              num1 = num3 ^ (int) num2 * -1121894623;
              continue;
            case 1:
              asFloat = 0.0f;
              num1 = -297282781;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1759696878 ^ 288957896;
              continue;
            case 4:
              asFloat = result;
              num1 = (int) num2 * -661972310 ^ -1189102058;
              continue;
            case 5:
              result = 0.0f;
              num1 = (int) num2 * -1133880860 ^ -763561661;
              continue;
            case 7:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200C⁯‬‏⁪​‍⁭‪⁪‮⁫⁭⁭‭‪‎‌​⁬‎‫‏‬⁬‪‌‮‭⁯⁭‭‪‎‫⁬‎⁭‭‌‮(), out result);
              num1 = (int) num2 * 1849806803 ^ 510387845;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -1713338821;
        double result;
        double asDouble;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1041471165)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              asDouble = 0.0;
              num1 = -304055113;
              continue;
            case 2:
              num1 = (int) num2 * -1971176124 ^ 1521693531;
              continue;
            case 3:
              asDouble = result;
              num1 = (int) num2 * 75237761 ^ -492994703;
              continue;
            case 5:
              result = 0.0;
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * 596381462 ^ 18165049;
              continue;
            case 6:
              int num3 = flag ? 1815674410 : (num3 = 1731669875);
              num1 = num3 ^ (int) num2 * -1233837304;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1768185477;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1960348931)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1758231477 ^ 844781107;
              continue;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 1495153544 ^ -2058827802;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = -1994308871;
        bool asBool;
        bool result;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2025637202)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -171243659 ^ 59165240;
              continue;
            case 1:
              result = false;
              int num3 = !bool.TryParse(this.Value, out result) ? -862097892 : (num3 = -1400481049);
              num1 = num3 ^ (int) num2 * -1039387957;
              continue;
            case 3:
              goto label_1;
            case 4:
              asBool = result;
              num1 = (int) num2 * 826407880 ^ 168393908;
              continue;
            case 5:
              asBool = !JSONNode.\u206B‮⁮‍⁮‏‭‪⁮⁭⁮⁬⁬⁬⁫⁯⁬‮⁭⁭‏‍‭‏‍‎⁮‎‭⁪⁬‫​‮‭‎​⁯⁬⁪‮(this.Value);
              num1 = -832642734;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1586843193;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1804688630)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 702548730 ^ 1343059285;
              continue;
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * -831891477 ^ 1840782401;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
        JSONClass asObject = this as JSONClass;
label_1:
        int num1 = -1802793483;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -631278963)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1046610352 ^ -1530102398;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -929225925;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -105321026)) % 4U)
        {
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -573358050 ^ -156196774;
            continue;
          case 2:
            num1 = (int) num2 * 17984491 ^ 663913584;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -1889878638;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -924331729)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            str2 = d.Value;
            break;
          case 2:
            if (d == (object) null)
            {
              str2 = (string) null;
              break;
            }
            num1 = (int) num2 * 573874117 ^ -796505758;
            continue;
          case 3:
            num1 = (int) num2 * 658138658 ^ -1264793641;
            continue;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -1935922980;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 1798291848;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1798686921)) % 8U)
        {
          case 1:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * 1144736918 ^ 514011036;
            continue;
          case 2:
            flag1 = true;
            num1 = (int) num2 * -1495015260 ^ 806973889;
            continue;
          case 3:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 4:
            num1 = (int) num2 * -1569052806 ^ 770864753;
            continue;
          case 5:
            goto label_1;
          case 6:
            flag1 = (object) a == b;
            num1 = 351368773;
            continue;
          case 7:
            int num4 = flag2 ? -1804553919 : (num4 = -1396097835);
            num1 = num4 ^ (int) num2 * -1252057898;
            continue;
          default:
            goto label_12;
        }
        flag2 = num3 != 0;
        num1 = 1237237630;
      }
label_12:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = -736468485;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -776285126)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 1885677829 ^ 798423702;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -413386700;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2023782643)) % 4U)
        {
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * 182760377 ^ 1754012267;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1406931534 ^ -842798689;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 573202366;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 431019624)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            hashCode = this.\u200F⁬‏⁬‬​‬‬‏‫‭⁫‪‫⁬‫​⁮⁯‪‭‬⁭‎⁬⁫⁪⁭⁫‍‌‫⁭‍‭⁬⁬‬‍⁮‮();
            num1 = (int) num2 * 971680909 ^ 871163241;
            continue;
          case 3:
            num1 = (int) num2 * -2108839962 ^ 669322023;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
      string str1 = "";
label_1:
      int num1 = -1151140548;
      string str2;
      char ch1;
      string str3;
      int num2;
      char ch2;
      char ch3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -226085874)) % 32U)
        {
          case 0:
            num1 = (int) num3 * -1065321739 ^ 966687863;
            continue;
          case 1:
label_5:
            str1 = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str1, ch1.ToString());
            num1 = -1652439202;
            continue;
          case 2:
            str1 = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str1, "\\\\");
            num1 = -1034014669;
            continue;
          case 3:
            int num4;
            num1 = num4 = num2 >= JSONNode.\u202C⁬​⁫‪‍⁮​‭‫​​⁫​⁫⁬‫‬⁪‎‮‏‌⁮‏⁫⁮‌‏​‭⁭‏‪‎⁭⁫⁫​‭‮(str2) ? -532969125 : (num4 = -1612175318);
            continue;
          case 4:
            ch1 = JSONNode.\u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮(str2, num2);
            num1 = -1667936155;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num3 * 1601889164 ^ -1131247338;
            continue;
          case 7:
            switch (ch3)
            {
              case '\b':
                goto label_7;
              case '\t':
                goto label_22;
              case '\n':
                goto label_8;
              case '\v':
                goto label_5;
              case '\f':
                goto label_17;
              case '\r':
                goto label_6;
              default:
                num1 = (int) num3 * 1855945007 ^ 701936679;
                continue;
            }
          case 8:
label_17:
            str1 = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str1, "\\f");
            num1 = -2128575180;
            continue;
          case 9:
label_7:
            str1 = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str1, "\\b");
            num1 = -1652439202;
            continue;
          case 10:
            num1 = (int) num3 * -503877356 ^ -815379151;
            continue;
          case 11:
            num1 = (int) num3 * -543875399 ^ -2011186546;
            continue;
          case 12:
            num2 = 0;
            num1 = (int) num3 * -1567766530 ^ 934566917;
            continue;
          case 13:
            ++num2;
            num1 = (int) num3 * 652855968 ^ -1904215027;
            continue;
          case 15:
            num1 = (int) num3 * 959955609 ^ -929202135;
            continue;
          case 16:
            num1 = -1972899645;
            continue;
          case 17:
            num1 = (int) num3 * 1904917968 ^ -1787587186;
            continue;
          case 18:
            str2 = aText;
            num1 = (int) num3 * -362578914 ^ 1374093630;
            continue;
          case 19:
            ch2 = ch1;
            num1 = (int) num3 * 1317167067 ^ -1670368908;
            continue;
          case 20:
            num1 = (int) num3 * 2003652079 ^ -1459501021;
            continue;
          case 21:
            str3 = str1;
            num1 = (int) num3 * 1388845774 ^ -2020896834;
            continue;
          case 22:
            num1 = (int) num3 * 823834555 ^ -107875918;
            continue;
          case 23:
            int num5;
            num1 = num5 = ch3 != '\\' ? -710830246 : (num5 = -2040395508);
            continue;
          case 24:
label_6:
            str1 = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str1, "\\r");
            num1 = -1595594552;
            continue;
          case 25:
            int num6;
            num1 = num6 = ch3 != '"' ? -1232747996 : (num6 = -9038800);
            continue;
          case 26:
            num1 = (int) num3 * -935969462 ^ 1160235930;
            continue;
          case 27:
            ch3 = ch2;
            num1 = (int) num3 * 10232452 ^ 1099874565;
            continue;
          case 28:
label_22:
            str1 = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str1, "\\t");
            num1 = -1909684833;
            continue;
          case 29:
            num1 = (int) num3 * -418326819 ^ -1856544265;
            continue;
          case 30:
            str1 = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str1, "\\\"");
            num1 = -1231191935;
            continue;
          case 31:
label_8:
            str1 = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str1, "\\n");
            num1 = -1652439202;
            continue;
          default:
            goto label_34;
        }
      }
label_34:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = -591639176;
      bool flag1;
      int num2;
      char ch1;
      bool flag2;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag3;
      bool flag4;
      string aKey;
      string aItem;
      bool flag5;
      bool flag6;
      char ch2;
      bool flag7;
      char ch3;
      bool flag8;
      bool flag9;
      bool flag10;
      char ch4;
      bool flag11;
      char ch5;
      bool flag12;
      bool flag13;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -413154082)) % 153U)
        {
          case 0:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 322961023 ^ -431085881;
            continue;
          case 1:
            num1 = (int) num3 * -1399446254 ^ -525896481;
            continue;
          case 2:
label_117:
            flag2 = flag3;
            num1 = -38399929;
            continue;
          case 3:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1832317022 ^ 1548877475;
            continue;
          case 4:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -882279221 ^ 1210185534;
            continue;
          case 5:
            int num4;
            num1 = num4 = ch2 != '{' ? -255322148 : (num4 = -1001229661);
            continue;
          case 6:
            aKey = JSONNode.\u200C‮⁭‎‍‏‭‍⁮‫​⁫‮⁭‬‪‌‪‎⁮‬⁮‫‍⁪⁭⁭‭​‭‍‬⁯‪⁪⁫​⁪⁮‪‮(aKey);
            num1 = (int) num3 * 26639278 ^ 814016064;
            continue;
          case 7:
            num1 = (int) num3 * 1810313226 ^ -1785366325;
            continue;
          case 8:
            string str1 = aItem;
            ch3 = JSONNode.\u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮(aJSON, num2);
            string str2 = ch3.ToString();
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str1, str2);
            num1 = (int) num3 * 610384899 ^ -844671806;
            continue;
          case 9:
            num1 = (int) num3 * -1428588147 ^ -1462407264;
            continue;
          case 10:
            int num5 = ch2 <= ',' ? 788062076 : (num5 = 1591901548);
            num1 = num5 ^ (int) num3 * -1891695229;
            continue;
          case 11:
            int num6 = jsonNode1 is JSONArray ? 730159161 : (num6 = 2043139325);
            num1 = num6 ^ (int) num3 * 1782986908;
            continue;
          case 12:
            int num7 = !flag2 ? 304602535 : (num7 = 910982609);
            num1 = num7 ^ (int) num3 * -482849686;
            continue;
          case 13:
            ch2 = ch4;
            num1 = (int) num3 * 1818369286 ^ -2111108388;
            continue;
          case 14:
            int num8 = ch2 == ':' ? 1517038830 : (num8 = 2023741945);
            num1 = num8 ^ (int) num3 * -277082032;
            continue;
          case 15:
            string str3 = aItem;
            ch3 = JSONNode.\u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮(aJSON, num2);
            string str4 = ch3.ToString();
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str3, str4);
            num1 = (int) num3 * -1310575466 ^ 1590478955;
            continue;
          case 16:
            flag1 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -265837675 ^ 2002153010;
            continue;
          case 17:
            jsonNodeStack.Pop();
            num1 = -1358325359;
            continue;
          case 18:
            int num9;
            num1 = num9 = ch2 > ']' ? -1965260734 : (num9 = -1545735564);
            continue;
          case 19:
            int num10 = flag9 ? 68679048 : (num10 = 1393431704);
            num1 = num10 ^ (int) num3 * 1554385173;
            continue;
          case 20:
            num1 = (int) num3 * -424631693 ^ -1461517065;
            continue;
          case 21:
            int num11;
            num1 = num11 = num2 < JSONNode.\u202C⁬​⁫‪‍⁮​‭‫​​⁫​⁫⁬‫‬⁪‎‮‏‌⁮‏⁫⁮‌‏​‭⁭‏‪‎⁭⁫⁫​‭‮(aJSON) ? -1576082768 : (num11 = -1531844450);
            continue;
          case 22:
            int num12 = ch5 != 'b' ? 662951477 : (num12 = 725239573);
            num1 = num12 ^ (int) num3 * -2314177;
            continue;
          case 23:
            num1 = (int) num3 * 1500296521 ^ 1662726526;
            continue;
          case 24:
            num2 += 4;
            num1 = (int) num3 * 1330453020 ^ -444326486;
            continue;
          case 25:
            num1 = (int) num3 * 889608999 ^ 1500614265;
            continue;
          case 26:
            flag5 = JSONNode.\u200C‎‫⁯⁮‫‬‌⁮⁮⁯⁭‪⁭⁯⁭⁪⁬‏‌‌⁮‍⁬​‍⁫⁮‬⁬⁫⁯‮‌‎‮⁪⁮‬‮‮(aKey, "");
            num1 = -1897270720;
            continue;
          case 27:
            num1 = -512151598;
            continue;
          case 28:
            string str5 = aItem;
            ch3 = JSONNode.\u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮(aJSON, num2);
            string str6 = ch3.ToString();
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str5, str6);
            num1 = (int) num3 * -570753765 ^ -1034330464;
            continue;
          case 29:
            num1 = (int) num3 * 1283407517 ^ 703883322;
            continue;
          case 30:
            int num13 = !flag12 ? 449709688 : (num13 = 455572575);
            num1 = num13 ^ (int) num3 * 1727334961;
            continue;
          case 31:
            aKey = "";
            aItem = "";
            num1 = -1278970496;
            continue;
          case 32:
            num1 = (int) num3 * 545168635 ^ -1492566151;
            continue;
          case 34:
label_125:
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(aItem, ch1.ToString());
            num1 = -1022926885;
            continue;
          case 35:
            num1 = (int) num3 * -1151037309 ^ -1016481385;
            continue;
          case 36:
            aKey = "";
            num1 = -855907318;
            continue;
          case 37:
            jsonNode2 = jsonNode1;
            num1 = -1299897303;
            continue;
          case 38:
            num1 = (int) num3 * -2086970878 ^ -991381657;
            continue;
          case 39:
            num1 = (int) num3 * -107088439 ^ -1469787522;
            continue;
          case 40:
            flag3 = !flag3;
            num1 = -183212187;
            continue;
          case 41:
            num1 = (int) num3 * -267959148 ^ 2130964089;
            continue;
          case 42:
            aKey = JSONNode.\u200C‮⁭‎‍‏‭‍⁮‫​⁫‮⁭‬‪‌‪‎⁮‬⁮‫‍⁪⁭⁭‭​‭‍‬⁯‪⁪⁫​⁪⁮‪‮(aKey);
            num1 = (int) num3 * -1422242100 ^ -422179231;
            continue;
          case 43:
            num1 = -1232356783;
            continue;
          case 44:
            num1 = (int) num3 * -168636863 ^ -634533796;
            continue;
          case 45:
            num1 = (int) num3 * -1186582722 ^ -377338678;
            continue;
          case 46:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 749756361 ^ 1272913234;
            continue;
          case 47:
label_26:
            int num14;
            num1 = num14 = !flag3 ? -2143657922 : (num14 = -829080631);
            continue;
          case 48:
            aKey = "";
            aItem = "";
            num1 = -183212187;
            continue;
          case 49:
label_108:
            ++num2;
            num1 = -1646435353;
            continue;
          case 50:
label_94:
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(aItem, "\r");
            num1 = -1073986372;
            continue;
          case 51:
            int num15 = !flag7 ? -1501406150 : (num15 = -418065099);
            num1 = num15 ^ (int) num3 * 1493797472;
            continue;
          case 52:
            ch4 = JSONNode.\u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮(aJSON, num2);
            num1 = (int) num3 * 1805489416 ^ 1197256222;
            continue;
          case 53:
            int num16 = !flag11 ? 1321524556 : (num16 = 1983722282);
            num1 = num16 ^ (int) num3 * -1036876818;
            continue;
          case 54:
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(aItem, "\b");
            num1 = -98489776;
            continue;
          case 55:
            num1 = (int) num3 * -797402287 ^ 1486938450;
            continue;
          case 56:
            flag4 = flag3;
            num1 = (int) num3 * -898714807 ^ -1544090662;
            continue;
          case 57:
            num1 = -835571759;
            continue;
          case 58:
            int num17;
            num1 = num17 = JSONNode.\u200C‎‫⁯⁮‫‬‌⁮⁮⁯⁭‪⁭⁯⁭⁪⁬‏‌‌⁮‍⁬​‍⁫⁮‬⁬⁫⁯‮‌‎‮⁪⁮‬‮‮(aItem, "") ? -2008740115 : (num17 = -1005876669);
            continue;
          case 59:
            int num18 = !flag6 ? -310053629 : (num18 = -1874534292);
            num1 = num18 ^ (int) num3 * 1946288129;
            continue;
          case 60:
            aItem = "";
            num1 = (int) num3 * 1943924019 ^ 734616839;
            continue;
          case 61:
            int num19 = ch2 > ' ' ? -92851430 : (num19 = -790580536);
            num1 = num19 ^ (int) num3 * 1185735404;
            continue;
          case 62:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1158577719 ^ -737047841;
            continue;
          case 63:
            string str7 = aItem;
            ch3 = JSONNode.\u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮(aJSON, num2);
            string str8 = ch3.ToString();
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str7, str8);
            num1 = (int) num3 * -892329960 ^ 1872786108;
            continue;
          case 64:
            num1 = (int) num3 * 1727358169 ^ -900988156;
            continue;
          case 65:
            num1 = (int) num3 * -734745569 ^ 319238631;
            continue;
          case 66:
            int num20 = !(jsonNode1 is JSONArray) ? -1544409155 : (num20 = -1401058985);
            num1 = num20 ^ (int) num3 * -61688587;
            continue;
          case 67:
            aKey = aItem;
            num1 = -565906314;
            continue;
          case 68:
            num1 = (int) num3 * 1283615864 ^ 1888851029;
            continue;
          case 69:
            num2 = 0;
            num1 = (int) num3 * 536089383 ^ -241844739;
            continue;
          case 70:
            ch1 = JSONNode.\u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮(aJSON, num2);
            num1 = (int) num3 * 1551359744 ^ 416741997;
            continue;
          case 71:
            goto label_51;
          case 72:
            flag9 = flag3;
            num1 = -1405673308;
            continue;
          case 73:
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(aItem, "\n");
            num1 = -747645908;
            continue;
          case 74:
            int num21 = ch5 <= 'f' ? -1425948285 : (num21 = -1641524646);
            num1 = num21 ^ (int) num3 * 389199647;
            continue;
          case 75:
            flag11 = JSONNode.\u200C‎‫⁯⁮‫‬‌⁮⁮⁯⁭‪⁭⁯⁭⁪⁬‏‌‌⁮‍⁬​‍⁫⁮‬⁬⁫⁯‮‌‎‮⁪⁮‬‮‮(aKey, "");
            num1 = -1265141371;
            continue;
          case 76:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1644109971 ^ -1255121932;
            continue;
          case 77:
            int num22;
            num1 = num22 = ch5 != 'f' ? -1454197628 : (num22 = -2109912061);
            continue;
          case 78:
            num1 = -1005876669;
            continue;
          case 79:
            num1 = (int) num3 * 401792165 ^ 283011435;
            continue;
          case 80:
            num1 = -323516774;
            continue;
          case 81:
            num1 = (int) num3 * -1241693695 ^ -115603174;
            continue;
          case 82:
            aKey = JSONNode.\u200C‮⁭‎‍‏‭‍⁮‫​⁫‮⁭‬‪‌‪‎⁮‬⁮‫‍⁪⁭⁭‭​‭‍‬⁯‪⁪⁫​⁪⁮‪‮(aKey);
            num1 = (int) num3 * 71833445 ^ 279505340;
            continue;
          case 83:
            goto label_1;
          case 84:
            aItem = "";
            aKey = "";
            num1 = (int) num3 * 865015562 ^ 63225984;
            continue;
          case 85:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -664683969 ^ -1419707498;
            continue;
          case 86:
          case 92:
          case 101:
          case 122:
          case 124:
label_21:
            ++num2;
            num1 = -544006532;
            continue;
          case 87:
            string s = JSONNode.\u206E‫​‮⁭⁫‭‎​‮‫‏​‮‏⁯⁬‏‫‫‪​⁫‫⁪‫‭⁬‮‪‭⁬​⁭⁮‏‮‭‫‪‮(aJSON, num2 + 1, 4);
            string str9 = aItem;
            ch3 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str10 = ch3.ToString();
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str9, str10);
            num1 = (int) num3 * -15591874 ^ -1191464533;
            continue;
          case 88:
            int num23 = !flag1 ? -378587756 : (num23 = -88432444);
            num1 = num23 ^ (int) num3 * 656679596;
            continue;
          case 89:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1262085027 ^ -285796231;
            continue;
          case 90:
            int num24;
            num1 = num24 = JSONNode.\u200C‎‫⁯⁮‫‬‌⁮⁮⁯⁭‪⁭⁯⁭⁪⁬‏‌‌⁮‍⁬​‍⁫⁮‬⁬⁫⁯‮‌‎‮⁪⁮‬‮‮(aKey, "") ? -1155969262 : (num24 = -2040829314);
            continue;
          case 91:
label_152:
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(aItem, "\t");
            num1 = -596287837;
            continue;
          case 93:
            int num25;
            num1 = num25 = ch2 != ' ' ? -585487882 : (num25 = -804270981);
            continue;
          case 94:
            aKey = "";
            num1 = -1652593626;
            continue;
          case 95:
            goto label_130;
          case 96:
            int num26 = jsonNodeStack.Count <= 0 ? -541539829 : (num26 = -569250828);
            num1 = num26 ^ (int) num3 * -1287140724;
            continue;
          case 97:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            int num27;
            num1 = num27 = !(jsonNode1 != (object) null) ? -835571759 : (num27 = -2048967007);
            continue;
          case 98:
            num1 = (int) num3 * 1718768713 ^ -1125331275;
            continue;
          case 99:
            num1 = (int) num3 * 501698180 ^ -2112448576;
            continue;
          case 100:
            num1 = (int) num3 * 1904587257 ^ -244409365;
            continue;
          case 102:
            num1 = (int) num3 * 843991794 ^ -2003563455;
            continue;
          case 103:
            int num28;
            num1 = num28 = ch2 == '"' ? -1164727004 : (num28 = -1993612452);
            continue;
          case 104:
            string str11 = aItem;
            ch3 = JSONNode.\u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮(aJSON, num2);
            string str12 = ch3.ToString();
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str11, str12);
            num1 = (int) num3 * 897499406 ^ -1719432357;
            continue;
          case 105:
            int num29 = !flag13 ? -925888479 : (num29 = -762082440);
            num1 = num29 ^ (int) num3 * -55386936;
            continue;
          case 106:
            int num30;
            num1 = num30 = ch2 == ',' ? -2008548096 : (num30 = -654270923);
            continue;
          case 107:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1537962280 ^ 967472383;
            continue;
          case 108:
            flag10 = flag3;
            num1 = -326706990;
            continue;
          case 109:
            switch (ch2)
            {
              case '[':
                goto label_26;
              case '\\':
                goto label_108;
              case ']':
                goto label_47;
              default:
                num1 = -1983927137;
                continue;
            }
          case 110:
label_47:
            flag8 = flag3;
            num1 = -261260323;
            continue;
          case 111:
label_56:
            num1 = -1117089067;
            continue;
          case 112:
            num1 = (int) num3 * -2035405475 ^ 1614890316;
            continue;
          case 113:
            num1 = (int) num3 * 774279658 ^ -1851551440;
            continue;
          case 114:
            int num31 = !flag8 ? 1651745641 : (num31 = 1770624129);
            num1 = num31 ^ (int) num3 * -805260603;
            continue;
          case 115:
            int num32 = flag10 ? -1478037273 : (num32 = -1633201644);
            num1 = num32 ^ (int) num3 * 1263711295;
            continue;
          case 116:
            num1 = (int) num3 * 912143676 ^ -1031333861;
            continue;
          case 117:
            flag12 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 212493431 ^ 1331486511;
            continue;
          case 118:
            flag13 = jsonNodeStack.Count == 0;
            num1 = -1981634342;
            continue;
          case 119:
            flag7 = flag3;
            num1 = (int) num3 * -431812724 ^ 326467013;
            continue;
          case 120:
            num1 = (int) num3 * -1440819877 ^ 1751872269;
            continue;
          case 121:
            num1 = (int) num3 * -821836117 ^ 2040108521;
            continue;
          case 123:
            switch (ch2)
            {
              case '\t':
                goto label_117;
              case '\n':
              case '\r':
                goto label_21;
              case '\v':
              case '\f':
                goto label_109;
              default:
                num1 = (int) num3 * -65651635 ^ -527435025;
                continue;
            }
          case 125:
            num1 = (int) num3 * -2133565929 ^ -806192192;
            continue;
          case 126:
            int num33 = !JSONNode.\u200C‎‫⁯⁮‫‬‌⁮⁮⁯⁭‪⁭⁯⁭⁪⁬‏‌‌⁮‍⁬​‍⁫⁮‬⁬⁫⁯‮‌‎‮⁪⁮‬‮‮(aItem, "") ? -241958617 : (num33 = -1299436687);
            num1 = num33 ^ (int) num3 * 1815709307;
            continue;
          case (uint) sbyte.MaxValue:
            ch5 = ch1;
            num1 = (int) num3 * 1400674244 ^ 1889079276;
            continue;
          case 128:
            int num34;
            num1 = num34 = ch2 != '}' ? -469203183 : (num34 = -802575473);
            continue;
          case 129:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1906859608 ^ 722336293;
            continue;
          case 130:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * -324925110 ^ -17984809;
            continue;
          case 131:
            switch (ch5)
            {
              case 'r':
                goto label_94;
              case 's':
                goto label_125;
              case 't':
                goto label_152;
              case 'u':
                goto label_56;
              default:
                num1 = -1992797857;
                continue;
            }
          case 132:
            num1 = (int) num3 * 295438929 ^ 2022728134;
            continue;
          case 133:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            int num35;
            num1 = num35 = !(jsonNode1 != (object) null) ? -1192765335 : (num35 = -86651027);
            continue;
          case 134:
            num1 = (int) num3 * 941475003 ^ -1961874;
            continue;
          case 135:
            num1 = (int) num3 * 1708497858 ^ 1020356854;
            continue;
          case 136:
            int num36;
            num1 = num36 = JSONNode.\u200C‎‫⁯⁮‫‬‌⁮⁮⁯⁭‪⁭⁯⁭⁪⁬‏‌‌⁮‍⁬​‍⁫⁮‬⁬⁫⁯‮‌‎‮⁪⁮‬‮‮(aKey, "") ? -2139344762 : (num36 = -1004356665);
            continue;
          case 137:
            num1 = (int) num3 * 691469221 ^ -2010089551;
            continue;
          case 138:
            num1 = (int) num3 * -571697197 ^ -868758792;
            continue;
          case 139:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1366737385 ^ 1330734231;
            continue;
          case 140:
            num1 = (int) num3 * -1928742214 ^ 449899569;
            continue;
          case 141:
            flag3 = false;
            num1 = (int) num3 * 1098343005 ^ -52390521;
            continue;
          case 142:
            int num37 = flag5 ? 1312637642 : (num37 = 1582788033);
            num1 = num37 ^ (int) num3 * -1971891213;
            continue;
          case 143:
            num1 = -1192765335;
            continue;
          case 144:
            int num38;
            num1 = num38 = ch5 != 'n' ? -1261888697 : (num38 = -875430311);
            continue;
          case 145:
            aItem = "";
            num1 = (int) num3 * -2077472831 ^ -1267176495;
            continue;
          case 146:
            int num39 = flag4 ? -393857791 : (num39 = -1657136588);
            num1 = num39 ^ (int) num3 * -1827440013;
            continue;
          case 147:
            aItem = "";
            num1 = (int) num3 * 1577478522 ^ -2131470160;
            continue;
          case 148:
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(aItem, "\f");
            num1 = -1022926885;
            continue;
          case 149:
            string str13 = aItem;
            ch3 = JSONNode.\u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮(aJSON, num2);
            string str14 = ch3.ToString();
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str13, str14);
            num1 = (int) num3 * 1592012837 ^ -1820340028;
            continue;
          case 150:
label_109:
            string str15 = aItem;
            ch3 = JSONNode.\u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮(aJSON, num2);
            string str16 = ch3.ToString();
            aItem = JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮(str15, str16);
            num1 = -9710631;
            continue;
          case 151:
            flag6 = flag3;
            num1 = -1537273255;
            continue;
          case 152:
            num1 = (int) num3 * -1343959432 ^ 343127230;
            continue;
          default:
            goto label_153;
        }
      }
label_51:
      throw JSONNode.\u200F​‏‏‌⁫‫‬‬​⁮‮‮⁮⁮‮‍⁭⁬⁯​‬⁭⁪‭‎‫‏‎‪‭‮⁮‌‫⁮⁭⁯‍‪‮("JSON Parse: Too many closing brackets");
label_130:
      throw JSONNode.\u200F​‏‏‌⁫‫‬‬​⁮‮‮⁮⁮‮‍⁭⁬⁯​‬⁭⁪‭‎‫‏‎‪‭‮⁮‌‫⁮⁭⁯‍‪‮("JSON Parse: Quotation marks seems to be messed up.");
label_153:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
      BinaryWriter aWriter = JSONNode.\u202D⁭‏‫‏‭‌‌‪‎‫⁮⁮‮​‭⁪‎‬⁮‌⁯‬‫‭‏‍⁯‏⁪‎‎‬‎‮‎⁪‌⁮‮(aData);
label_1:
      int num1 = -1094897493;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2071708202)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.Serialize(aWriter);
            num1 = (int) num2 * -56155071 ^ 716418837;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200F​‏‏‌⁫‫‬‬​⁮‮‮⁮⁮‮‍⁭⁬⁯​‬⁭⁪‭‎‫‏‎‪‭‮⁮‌‫⁮⁭⁯‍‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200F​‏‏‌⁫‫‬‬​⁮‮‮⁮⁮‮‍⁭⁬⁯​‬⁭⁪‭‎‫‏‎‪‭‮⁮‌‫⁮⁭⁯‍‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200F​‏‏‌⁫‫‬‬​⁮‮‮⁮⁮‮‍⁭⁬⁯​‬⁭⁪‭‎‫‏‎‪‭‮⁮‌‫⁮⁭⁯‍‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206F⁪⁭‌‍‭⁬‍‫‌​‮⁫‍‫⁮‏⁪‮‎‌‫⁪‬‪‍⁮‮⁫‭‬‎‫‫‪‍‫⁪⁪‮(JSONNode.\u206B​⁬‮‫‭‌⁫‌‭‮⁯⁪‎‍⁫‭‎⁫⁬‎‍‮⁯‪​​‮‪‬‭⁫‍‎⁯⁫‎‎⁬⁬‮((FileSystemInfo) JSONNode.\u202E‬⁪⁬‪‍​‮⁬‭‬‌‏⁯‮‪⁫‭‪‍⁭⁪‫‫‬‌‮‫‎‎‍⁬‏‌⁬‎⁮​‮‌‮(JSONNode.\u202D⁯⁮‍​‌‎‏‎​‭‏‮‍‫‫‬‪‎⁯⁭‫‎‮‏⁬‍⁫⁮‏‍⁯​⁫‮⁭⁬⁭‬‮‮(aFileName))));
      FileStream aData = JSONNode.\u200C⁫‪⁪⁮‮‬⁪​⁮‎‍‌⁫‏⁬​‭‬‌​‪⁮⁬⁬‭⁭‏⁫⁬‮⁯‎‏‎‎⁪⁪‎‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -277456309;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -803415956)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              goto label_9;
            case 2:
              num1 = (int) num2 * 2050225848 ^ -748591336;
              continue;
            default:
              goto label_5;
          }
        }
label_9:
        return;
label_5:;
      }
      finally
      {
        if (aData != null)
        {
label_7:
          int num3 = -1540192485;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -803415956)) % 3U)
            {
              case 0:
                goto label_7;
              case 1:
                JSONNode.\u202B‭​‬‫‏‭⁯‌⁮‌⁯⁯⁬⁪‍⁪‭⁯‮​‭‪⁬‭⁬‪‍‬​‫‬⁫⁭‍‮​‭‪‌‮((IDisposable) aData);
                num3 = (int) num4 * 766843221 ^ 396294795;
                continue;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200B‬​‭⁭⁪‌‫‫‏​⁮​‪⁯‏‏⁬‌‫⁮⁯‫⁮‫‍‬‍‍⁪‎‬‭‌‌​​‌⁯‭‮();
      try
      {
label_2:
        int num1 = 1612512657;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 47070859)) % 4U)
          {
            case 1:
              JSONNode.\u200D⁭‪⁭⁮‭‪‮⁬‭‪⁯⁬‎‌‏‌‍⁪⁯⁯⁮‎⁫⁬⁮‬‮‎⁬​​‍‫‪‮⁬⁮⁭‎‮((Stream) aData, 0L);
              num1 = (int) num2 * -1619842757 ^ 393134112;
              continue;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -1535168924 ^ -848510182;
              continue;
            case 3:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_6:
        return JSONNode.\u202B‏‎‍‭‌‫⁬⁭‬‬​‪⁭‌⁪⁬‍⁯⁮‬‏⁯‫⁭⁪⁮‍‎‪‌‌‌⁪‏‍‎⁯⁫⁬‮(JSONNode.\u206C⁮⁪⁪‫‮‪‬⁯‫‌‌⁮‪‮‪‍⁯‪‬​⁫‬⁭⁭‍⁭‏⁮⁪⁫⁫‍⁫‍​‮‏⁯⁬‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 682460002;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 47070859)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -1312994238 ^ 178662957;
                continue;
              case 1:
                JSONNode.\u202B‭​‬‫‏‭⁯‌⁮‌⁯⁯⁬⁪‍⁪‭⁯‮​‭‪⁬‭⁬‪‍‬​‫‬⁫⁭‍‮​‭‪‌‮((IDisposable) aData);
                num3 = (int) num4 * 718259122 ^ 973539673;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -690671145;
      JSONNode aItem;
      int num2;
      JSONNode jsonNode;
      bool flag1;
      JSONBinaryTag jsonBinaryTag1;
      JSONBinaryTag jsonBinaryTag2;
      int num3;
      int num4;
      int num5;
      string aKey;
      bool flag2;
      JSONArray jsonArray;
      JSONClass jsonClass;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1420509071)) % 35U)
        {
          case 0:
            num1 = (int) num6 * -1239163987 ^ -294762804;
            continue;
          case 1:
            jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206A⁫⁭‭⁫⁮‫‎‎‪‭‭‭⁫⁫‍⁪⁭​‍‭‎⁬‫‭‮⁯⁫‬​⁬‭⁪⁯⁭‎⁭⁫⁯⁪‮(aReader);
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -1794853576 ^ 1574113546;
            continue;
          case 2:
            flag1 = num4 < num5;
            num1 = -1294862664;
            continue;
          case 3:
            num1 = (int) num6 * 2115670493 ^ -155562905;
            continue;
          case 4:
            aKey = JSONNode.\u206B⁭⁬⁫‭⁮‌⁬⁬‍⁪⁭‮‏‪⁬⁬⁫⁭⁪‌⁫⁪⁮⁯‫⁭‎‏‫​⁮‍‪⁯‪‏⁮⁪⁯‮(aReader);
            num1 = (int) num6 * -1825824141 ^ -460407605;
            continue;
          case 5:
            num1 = (int) num6 * 1655778209 ^ -88412869;
            continue;
          case 6:
label_33:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B⁭⁬⁫‭⁮‌⁬⁬‍⁪⁭‮‏‪⁬⁬⁫⁭⁪‌⁫⁪⁮⁯‫⁭‎‏‫​⁮‍‪⁯‪‏⁮⁪⁯‮(aReader));
            num1 = -1784713664;
            continue;
          case 7:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 1425219899 ^ -762559520;
            continue;
          case 8:
            int num7 = flag1 ? 229080446 : (num7 = 1699173198);
            num1 = num7 ^ (int) num6 * 85063170;
            continue;
          case 9:
            num1 = (int) num6 * 1289255002 ^ 49071009;
            continue;
          case 10:
            goto label_28;
          case 11:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -627193776 ^ 1747445528;
            continue;
          case 12:
            num1 = -215029234;
            continue;
          case 13:
label_23:
            num5 = JSONNode.\u200B‭‬‮⁬⁮⁪⁯‬‬⁬‬‭‪‭⁮⁫‪‍‌‍‎⁪⁪‏‏⁮⁫⁪‭⁪‭‮‪⁭⁮‮⁪‭⁭‮(aReader);
            jsonArray = new JSONArray();
            num4 = 0;
            num1 = -338547031;
            continue;
          case 15:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num4;
            num1 = -338547031;
            continue;
          case 16:
            goto label_1;
          case 17:
label_22:
            num1 = -47072830;
            continue;
          case 18:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -1550989435 ^ 1548140235;
            continue;
          case 19:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_23;
              case JSONBinaryTag.Class:
                goto label_10;
              case JSONBinaryTag.Value:
                goto label_33;
              case JSONBinaryTag.IntValue:
                goto label_5;
              case JSONBinaryTag.DoubleValue:
                goto label_19;
              case JSONBinaryTag.BoolValue:
                goto label_22;
              case JSONBinaryTag.FloatValue:
                goto label_20;
              default:
                num1 = (int) num6 * 604922789 ^ 1467064617;
                continue;
            }
          case 20:
label_20:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‪‪‎⁬‌‮‏⁭‬‎‪‌‎‫⁪⁮⁬‬⁭‎‭‎‬⁫‬‌‎⁭⁯‬​​⁪⁯‭‬‏‍‌‮(aReader));
            num1 = -1076068988;
            continue;
          case 21:
            flag2 = num3 < num2;
            num1 = -817881215;
            continue;
          case 22:
            num2 = JSONNode.\u200B‭‬‮⁬⁮⁪⁯‬‬⁬‬‭‪‭⁮⁫‪‍‌‍‎⁪⁪‏‏⁮⁫⁪‭⁪‭‮‪⁭⁮‮⁪‭⁭‮(aReader);
            num1 = (int) num6 * 2074549381 ^ 1369404909;
            continue;
          case 23:
            num1 = (int) num6 * -931707176 ^ 380972150;
            continue;
          case 24:
            ++num3;
            num1 = (int) num6 * -1212953141 ^ 1165184684;
            continue;
          case 25:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * -508806390 ^ 698696216;
            continue;
          case 26:
label_5:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B‭‬‮⁬⁮⁪⁯‬‬⁬‬‭‪‭⁮⁫‪‍‌‍‎⁪⁪‏‏⁮⁫⁪‭⁪‭‮‪⁭⁮‮⁪‭⁭‮(aReader));
            num1 = -118066386;
            continue;
          case 27:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E​‏‬‏⁪‎⁮‮⁭⁭⁮⁯​‎⁫⁯⁬⁮‭‍⁮⁭⁫‏⁬​‌‍⁪‫‌⁭​‪‮‬⁬‭⁮‮(aReader));
            num1 = (int) num6 * -2039120088 ^ -587318572;
            continue;
          case 28:
label_10:
            num1 = -531547882;
            continue;
          case 29:
            num1 = (int) num6 * 765637257 ^ 677977983;
            continue;
          case 30:
            num1 = (int) num6 * 936896963 ^ 1722934655;
            continue;
          case 31:
            jsonClass = new JSONClass();
            num3 = 0;
            num1 = (int) num6 * -830507191 ^ 1430163826;
            continue;
          case 32:
label_19:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‪⁫⁯‭‪⁫‌⁪‪⁯​‪⁯‫‏‪⁮‬⁮​‎⁫‌⁪‫‌⁪⁭‭⁫‍‮‮⁬⁭⁪‌⁭‮(aReader));
            num1 = -118066386;
            continue;
          case 33:
            int num8 = flag2 ? 957858887 : (num8 = 1961555239);
            num1 = num8 ^ (int) num6 * 1986309700;
            continue;
          case 34:
            num1 = (int) num6 * -1227814061 ^ 1023590578;
            continue;
          default:
            goto label_37;
        }
      }
label_28:
      throw JSONNode.\u200F​‏‏‌⁫‫‬‬​⁮‮‮⁮⁮‮‍⁭⁬⁯​‬⁭⁪‭‎‫‏‎‪‭‮⁮‌‫⁮⁭⁯‍‪‮(JSONNode.\u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_37:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200F​‏‏‌⁫‫‬‬​⁮‮‮⁮⁮‮‍⁭⁬⁯​‬⁭⁪‭‎‫‏‎‪‭‮⁮‌‫⁮⁭⁯‍‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200F​‏‏‌⁫‫‬‬​⁮‮‮⁮⁮‮‍⁭⁬⁯​‬⁭⁪‭‎‫‏‎‪‭‮⁮‌‫⁮⁭⁯‍‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200F​‏‏‌⁫‫‬‬​⁮‮‮⁮⁮‮‍⁭⁬⁯​‬⁭⁪‭‎‫‏‎‪‭‮⁮‌‫⁮⁭⁯‍‪‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206F‌‮⁭⁫‍‍‮⁭⁮⁮⁭⁯‮‮‮‎‮‏‎‪⁬‬‮‪‬‫⁪‪‎⁯⁭‏‫‌⁬‮‬‏‎‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -1572997888;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -1588413013)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                num1 = (int) num2 * 860204211 ^ 537479878;
                continue;
              case 3:
                JSONNode.\u202B‭​‬‫‏‭⁯‌⁮‌⁯⁯⁬⁪‍⁪‭⁯‮​‭‪⁬‭⁬‪‍‬​‫‬⁫⁭‍‮​‭‪‌‮((IDisposable) aReader);
                num1 = (int) num2 * -1967525968 ^ 2035912014;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206F‮⁪‭⁭⁮‮‌‏⁭‭⁮‮⁯‭⁪⁮‬⁫‌⁯​⁫‌‬‭‎⁭⁬‭⁭⁬⁫⁪‭‎‎‌⁫‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 536918181;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 267977950)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * -436900879 ^ -1086413259;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = 1106542091;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 267977950)) % 4U)
            {
              case 0:
                goto label_6;
              case 1:
                JSONNode.\u202B‭​‬‫‏‭⁯‌⁮‌⁯⁯⁬⁪‍⁪‭⁯‮​‭‪⁬‭⁬‪‍‬​‫‬⁫⁭‍‮​‭‪‌‮((IDisposable) aData);
                num3 = (int) num4 * 189021275 ^ -476768654;
                continue;
              case 3:
                num3 = (int) num4 * -2099977203 ^ 1612838919;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      MemoryStream aData = JSONNode.\u202A⁪‌‎⁯⁮‮⁫‪‭‪⁯​‏‌‫⁮‎⁫‬⁬​⁭‮‌⁫⁬⁭‫‪‪‎‏​⁮‎⁬‍⁯‬‮(JSONNode.\u206F‪⁬⁬⁫⁪⁭‌⁬‫⁫‏​‪⁭⁮‍‏‭​‎‭⁪‬‬‌‍‍‮‭⁬‌‪‮⁫‍‌‏‬‎‮(aBase64));
label_1:
      int num1 = -820558721;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -61503893)) % 5U)
        {
          case 0:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1470092015 ^ 1526778889;
            continue;
          case 1:
            JSONNode.\u200D⁭‪⁭⁮‭‪‮⁬‭‪⁯⁬‎‌‏‌‍⁪⁯⁯⁮‎⁫⁬⁮‬‮‎⁬​​‍‫‪‮⁬⁮⁭‎‮((Stream) aData, 0L);
            num1 = (int) num2 * -1987533544 ^ 235851636;
            continue;
          case 2:
            num1 = (int) num2 * 1639479570 ^ 1301008669;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    static CultureInfo \u200C⁯‬‏⁪​‍⁭‪⁪‮⁫⁭⁭‭‪‎‌​⁬‎‫‏‬⁬‪‌‮‭⁯⁭‭‪‎‫⁬‎⁭‭‌‮() => CultureInfo.InvariantCulture;

    static bool \u206B‮⁮‍⁮‏‭‪⁮⁭⁮⁬⁬⁬⁫⁯⁬‮⁭⁭‏‍‭‏‍‎⁮‎‭⁪⁬‫​‮‭‎​⁯⁬⁪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u200F⁬‏⁬‬​‬‬‏‫‭⁫‪‫⁬‫​⁮⁯‪‭‬⁭‎⁬⁫⁪⁭⁫‍‌‫⁭‍‭⁬⁬‬‍⁮‮() => base.GetHashCode();

    static char \u206E‫⁪​⁬‏‪⁭⁫⁯‏‍‌‏‪‌⁮⁬⁭​⁭⁭⁮​⁯‮⁫⁮‌⁮‎⁯‬‍⁫‬​‎⁫‫‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200B‎⁭⁪‎‏‭‭‫‍‪‭‌⁫⁬‪‬⁬‫‍⁬⁪⁮‬⁯⁭‌​‪​‫‮⁫⁪‏‍‭⁯⁬⁯‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202C⁬​⁫‪‍⁮​‭‫​​⁫​⁫⁬‫‬⁪‎‮‏‌⁮‏⁫⁮‌‏​‭⁭‏‪‎⁭⁫⁫​‭‮([In] string obj0) => obj0.Length;

    static string \u200C‮⁭‎‍‏‭‍⁮‫​⁫‮⁭‬‪‌‪‎⁮‬⁮‫‍⁪⁭⁭‭​‭‍‬⁯‪⁪⁫​⁪⁮‪‮([In] string obj0) => obj0.Trim();

    static bool \u200C‎‫⁯⁮‫‬‌⁮⁮⁯⁭‪⁭⁯⁭⁪⁬‏‌‌⁮‍⁬​‍⁫⁮‬⁬⁫⁯‮‌‎‮⁪⁮‬‮‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200F​‏‏‌⁫‫‬‬​⁮‮‮⁮⁮‮‍⁭⁬⁯​‬⁭⁪‭‎‫‏‎‪‭‮⁮‌‫⁮⁭⁯‍‪‮([In] string obj0) => new Exception(obj0);

    static string \u206E‫​‮⁭⁫‭‎​‮‫‏​‮‏⁯⁬‏‫‫‪​⁫‫⁪‫‭⁬‮‪‭⁬​⁭⁮‏‮‭‫‪‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202D⁭‏‫‏‭‌‌‪‎‫⁮⁮‮​‭⁪‎‬⁮‌⁯‬‫‭‏‍⁯‏⁪‎‎‬‎‮‎⁪‌⁮‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202D⁯⁮‍​‌‎‏‎​‭‏‮‍‫‫‬‪‎⁯⁭‫‎‮‏⁬‍⁫⁮‏‍⁯​⁫‮⁭⁬⁭‬‮‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202E‬⁪⁬‪‍​‮⁬‭‬‌‏⁯‮‪⁫‭‪‍⁭⁪‫‫‬‌‮‫‎‎‍⁬‏‌⁬‎⁮​‮‌‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206B​⁬‮‫‭‌⁫‌‭‮⁯⁪‎‍⁫‭‎⁫⁬‎‍‮⁯‪​​‮‪‬‭⁫‍‎⁯⁫‎‎⁬⁬‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206F⁪⁭‌‍‭⁬‍‫‌​‮⁫‍‫⁮‏⁪‮‎‌‫⁪‬‪‍⁮‮⁫‭‬‎‫‫‪‍‫⁪⁪‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200C⁫‪⁪⁮‮‬⁪​⁮‎‍‌⁫‏⁬​‭‬‌​‪⁮⁬⁬‭⁭‏⁫⁬‮⁯‎‏‎‎⁪⁪‎‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u202B‭​‬‫‏‭⁯‌⁮‌⁯⁯⁬⁪‍⁪‭⁯‮​‭‪⁬‭⁬‪‍‬​‫‬⁫⁭‍‮​‭‪‌‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200B‬​‭⁭⁪‌‫‫‏​⁮​‪⁯‏‏⁬‌‫⁮⁯‫⁮‫‍‬‍‍⁪‎‬‭‌‌​​‌⁯‭‮() => new MemoryStream();

    static void \u200D⁭‪⁭⁮‭‪‮⁬‭‪⁯⁬‎‌‏‌‍⁪⁯⁯⁮‎⁫⁬⁮‬‮‎⁬​​‍‫‪‮⁬⁮⁭‎‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206C⁮⁪⁪‫‮‪‬⁯‫‌‌⁮‪‮‪‍⁯‪‬​⁫‬⁭⁭‍⁭‏⁮⁪⁫⁫‍⁫‍​‮‏⁯⁬‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202B‏‎‍‭‌‫⁬⁭‬‬​‪⁭‌⁪⁬‍⁯⁮‬‏⁯‫⁭⁪⁮‍‎‪‌‌‌⁪‏‍‎⁯⁫⁬‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206A⁫⁭‭⁫⁮‫‎‎‪‭‭‭⁫⁫‍⁪⁭​‍‭‎⁬‫‭‮⁯⁫‬​⁬‭⁪⁯⁭‎⁭⁫⁯⁪‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200B‭‬‮⁬⁮⁪⁯‬‬⁬‬‭‪‭⁮⁫‪‍‌‍‎⁪⁪‏‏⁮⁫⁪‭⁪‭‮‪⁭⁮‮⁪‭⁭‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206B⁭⁬⁫‭⁮‌⁬⁬‍⁪⁭‮‏‪⁬⁬⁫⁭⁪‌⁫⁪⁮⁯‫⁭‎‏‫​⁮‍‪⁯‪‏⁮⁪⁯‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202C‪⁫⁯‭‪⁫‌⁪‪⁯​‪⁯‫‏‪⁮‬⁮​‎⁫‌⁪‫‌⁪⁭‭⁫‍‮‮⁬⁭⁪‌⁭‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u202E​‏‬‏⁪‎⁮‮⁭⁭⁮⁯​‎⁫⁯⁬⁮‭‍⁮⁭⁫‏⁬​‌‍⁪‫‌⁭​‪‮‬⁬‭⁮‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206C‪‪‎⁬‌‮‏⁭‬‎‪‌‎‫⁪⁮⁬‬⁭‎‭‎‬⁫‬‌‎⁭⁯‬​​⁪⁯‭‬‏‍‌‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206F‌‮⁭⁫‍‍‮⁭⁮⁮⁭⁯‮‮‮‎‮‏‎‪⁬‬‮‪‬‫⁪‪‎⁯⁭‏‫‌⁬‮‬‏‎‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206F‮⁪‭⁭⁮‮‌‏⁭‭⁮‮⁯‭⁪⁮‬⁫‌⁯​⁫‌‬‭‎⁭⁬‭⁭⁬⁫⁪‭‎‎‌⁫‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206F‪⁬⁬⁫⁪⁭‌⁬‫⁫‏​‪⁭⁮‍‏‭​‎‭⁪‬‬‌‍‍‮‭⁬‌‪‮⁫‍‌‏‬‎‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202A⁪‌‎⁯⁮‮⁫‪‭‪⁯​‏‌‫⁮‎⁫‬⁬​⁭‮‌⁫⁬⁭‫‪‪‎‏​⁮‎⁬‍⁯‬‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
