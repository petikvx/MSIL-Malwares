// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: EraIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: DF309F35-9A6B-48AA-8FAD-6A916AD051A5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-58c054c4226f2a650a02bbf4b2db908c7317491c91a4f3254cc0d835c474897d.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 605504777;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1423229156)) % 4U)
          {
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -980658964 ^ -1970507486;
              continue;
            case 2:
              num1 = (int) num2 * -419127602 ^ 968076976;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -1938789878;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1018629639)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              str = "";
              num1 = (int) num2 * 252713452 ^ 1851650112;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 922076700;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1938108963)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1478238507 ^ 1452202;
              continue;
            case 3:
              count = 0;
              num1 = (int) num2 * 46787770 ^ -1584121648;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = -250294109;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -290183088)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * -1519016272 ^ 1178379727;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 524283049;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 936035523)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1549782228 ^ 867750569;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -332207561;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -858976208)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1084175501 ^ -649740271;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -144131046;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -498472165)) % 3U)
        {
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * 1076076016 ^ -2089952881;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -452181036;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -133786104)) % 7U)
          {
            case 1:
              int num4 = num1 == 0 ? -2048686433 : (num4 = -488193155);
              num2 = num4 ^ (int) num3 * -1057895097;
              continue;
            case 2:
            case 3:
              this.\u003C\u003E1__state = -1;
              num2 = -982442523;
              continue;
            case 4:
              goto label_6;
            case 5:
              goto label_1;
            case 6:
              num2 = (int) num3 * 161415419 ^ -653571241;
              continue;
            default:
              goto label_7;
          }
        }
label_6:
        return false;
label_7:
        return false;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 1156933255;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1630239334)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              getDeepChildsD19.\u003C\u003E4__this = this;
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 585406246 ^ 1214839476;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return deepChilds;
      }
    }

    public override string ToString() => nameof (JSONNode);

    public virtual string ToString(string aPrefix)
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = 683501499;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1411841859)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -474537592 ^ -2073798985;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 1361928956;
        int result;
        int asInt;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1773418589)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              result = 0;
              num1 = (int) num2 * 767023110 ^ -1872566150;
              continue;
            case 2:
              asInt = result;
              num1 = (int) num2 * 1971857585 ^ -76696573;
              continue;
            case 3:
              int num3 = flag ? 1157448795 : (num3 = 1346417630);
              num1 = num3 ^ (int) num2 * 1613808403;
              continue;
            case 5:
              asInt = 0;
              num1 = 773843201;
              continue;
            case 6:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -787825820 ^ -1941131531;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asInt;
      }
      set
      {
label_1:
        int num1 = 419156895;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2087165310)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -544946815 ^ -722262463;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
        if (!float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200E‭‌‍​‫‫‪‏‏​‌⁬‬⁯⁬‏⁮⁮‭‌‬‫‮‍⁮⁯⁮‏⁯⁯‪⁬‭‮⁬‬⁪‏‎‮(), out result))
          goto label_3;
label_1:
        int num1 = 575938353;
label_2:
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 125340674)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1665886552 ^ 912509912;
              continue;
            case 3:
              asFloat = result;
              num1 = (int) num2 * 1309623771 ^ -1254825777;
              continue;
            case 4:
              num1 = (int) num2 * 1219286254 ^ 564538136;
              continue;
            case 5:
              goto label_3;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
label_3:
        asFloat = 0.0f;
        num1 = 1955153923;
        goto label_2;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -189147750;
        double result;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1927074658)) % 8U)
          {
            case 1:
              asDouble = result;
              num1 = (int) num2 * 447853666 ^ -2023168948;
              continue;
            case 2:
              num1 = (int) num2 * -1394386888 ^ 2068432942;
              continue;
            case 3:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -1867811216 ^ -1839959247;
              continue;
            case 4:
              result = 0.0;
              num1 = (int) num2 * 1857218720 ^ -458904971;
              continue;
            case 5:
              asDouble = 0.0;
              num1 = -297323388;
              continue;
            case 6:
              goto label_1;
            case 7:
              int num3 = flag ? 1013597216 : (num3 = 644775252);
              num1 = num3 ^ (int) num2 * -2122935559;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1177361413;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1366647627)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -2017328766 ^ 15181100;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
        bool flag = bool.TryParse(this.Value, out result);
label_1:
        int num1 = -2923704;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -675975505)) % 6U)
          {
            case 0:
              goto label_1;
            case 2:
              asBool = !JSONNode.\u206D⁫⁭⁫⁮⁫‮‫‬‌‌‭⁫⁫​‪‪‭‬‍‬⁮‭‬‬‎⁭⁯‪‫⁯⁬​‌⁮​‮⁬⁮⁭‮(this.Value);
              num1 = -1264203340;
              continue;
            case 3:
              num1 = (int) num2 * 512573901 ^ 310001169;
              continue;
            case 4:
              asBool = result;
              num1 = (int) num2 * 1827384247 ^ 386568362;
              continue;
            case 5:
              int num3 = flag ? -344549423 : (num3 = -1718223003);
              num1 = num3 ^ (int) num2 * -2041416402;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -224782881;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1684345535)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -975892886;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1296902889;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 109921868)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 677459417 ^ 572274847;
              continue;
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * 32923881 ^ 1254132725;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -1139974126;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1699806555)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 42868149 ^ 1334910690;
              continue;
            case 3:
              asObject = this as JSONClass;
              num1 = (int) num2 * -27262083 ^ -1827521072;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s) => (JSONNode) new JSONData(s);

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = 1682894237;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ 95021760)) % 4U)
        {
          case 1:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -365499118 ^ 1378014253;
              continue;
            }
            str2 = (string) null;
            break;
          case 2:
            goto label_1;
          case 3:
            str2 = d.Value;
            break;
          default:
            goto label_8;
        }
        str1 = str2;
        num1 = 715588792;
      }
label_8:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
label_1:
      int num1 = 1363616251;
      bool flag1;
      while (true)
      {
        uint num2;
        bool flag2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1863263568)) % 9U)
        {
          case 0:
            num1 = (int) num2 * 428049147 ^ 1848631846;
            continue;
          case 1:
            int num4 = !flag2 ? -345103829 : (num4 = -1806498765);
            num1 = num4 ^ (int) num2 * -1059684135;
            continue;
          case 2:
            num3 = a is JSONLazyCreator ? 1 : 0;
            break;
          case 3:
            num1 = (int) num2 * -1646109969 ^ -472308167;
            continue;
          case 5:
            flag1 = (object) a == b;
            num1 = 1643509982;
            continue;
          case 6:
            if (b != null)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -981625480 ^ -1204005900;
            continue;
          case 7:
            goto label_1;
          case 8:
            flag1 = true;
            num1 = (int) num2 * 1105636627 ^ 1170216240;
            continue;
          default:
            goto label_13;
        }
        flag2 = num3 != 0;
        num1 = 2143974602;
      }
label_13:
      return flag1;
    }

    public static bool operator !=(JSONNode a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = 1110595463;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 318758274)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -378373175 ^ 1393019638;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -582258194;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1647787679)) % 3U)
        {
          case 1:
            flag = (object) this == obj;
            num1 = (int) num2 * 1212891107 ^ 2020908723;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 2001504547;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1954985958)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -2068063603 ^ -1908473880;
            continue;
          case 1:
            hashCode = this.\u202D‍⁮⁪⁯‍⁯‍‬⁯⁬⁭‌⁯‭‬‬‮‍‪‏‪⁬‬‍‪‫‭⁮‫‬⁭‬⁯‬⁮⁭‌⁬‌‮();
            num1 = (int) num2 * -1961143904 ^ -1317675414;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -633869816;
      string str1;
      int num2;
      string str2;
      char ch1;
      char ch2;
      char ch3;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -934598227)) % 34U)
        {
          case 0:
            num1 = (int) num3 * 1158250049 ^ -2009759738;
            continue;
          case 1:
            ch2 = JSONNode.\u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮(str2, num2);
            num1 = -740175027;
            continue;
          case 2:
label_6:
            str1 = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str1, "\\n");
            num1 = -1330617001;
            continue;
          case 3:
            num1 = (int) num3 * -348906851 ^ -709405939;
            continue;
          case 4:
            ++num2;
            num1 = (int) num3 * -288635122 ^ 884570906;
            continue;
          case 5:
            num1 = (int) num3 * -1170083147 ^ 1919521919;
            continue;
          case 6:
            str1 = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str1, "\\\"");
            num1 = -1822884138;
            continue;
          case 7:
            num1 = (int) num3 * -2112710552 ^ -644163439;
            continue;
          case 8:
            num1 = (int) num3 * -1406621441 ^ -1615082558;
            continue;
          case 9:
            str1 = "";
            str2 = aText;
            num1 = (int) num3 * -1351822948 ^ -1701876440;
            continue;
          case 10:
            int num4;
            num1 = num4 = ch1 != '"' ? -876053556 : (num4 = -2051995463);
            continue;
          case 11:
            num2 = 0;
            num1 = (int) num3 * -825950407 ^ -2068272602;
            continue;
          case 12:
            switch (ch1)
            {
              case '\b':
                goto label_3;
              case '\t':
                goto label_16;
              case '\n':
                goto label_6;
              case '\v':
                goto label_25;
              case '\f':
                goto label_12;
              case '\r':
                goto label_8;
              default:
                num1 = (int) num3 * -919779827 ^ -1807776466;
                continue;
            }
          case 13:
            num1 = (int) num3 * -651754732 ^ -1007788456;
            continue;
          case 14:
            num1 = (int) num3 * -1723000425 ^ -1337458398;
            continue;
          case 15:
            num1 = -315935717;
            continue;
          case 16:
            ch1 = ch3;
            num1 = (int) num3 * -684564673 ^ 876136473;
            continue;
          case 17:
            int num5;
            num1 = num5 = num2 < JSONNode.\u202B‍⁭⁮⁫⁮⁪⁭‪‭⁭‬‪‎‭⁫⁪⁭‌​⁬‍‫​​‬⁫‪‫‮‏‌‪‮​‎‭⁪⁪‮(str2) ? -274394396 : (num5 = -1620162278);
            continue;
          case 18:
            num1 = (int) num3 * 1342156772 ^ 328143432;
            continue;
          case 19:
            ch3 = ch2;
            num1 = (int) num3 * -469458949 ^ -19710240;
            continue;
          case 20:
            int num6;
            num1 = num6 = ch1 == '\\' ? -1316542770 : (num6 = -236619645);
            continue;
          case 21:
            goto label_1;
          case 22:
label_8:
            str1 = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str1, "\\r");
            num1 = -10669544;
            continue;
          case 23:
            num1 = (int) num3 * -227519801 ^ 1158672865;
            continue;
          case 24:
label_12:
            str1 = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str1, "\\f");
            num1 = -1155125126;
            continue;
          case 25:
label_16:
            str1 = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str1, "\\t");
            num1 = -162654340;
            continue;
          case 26:
            num1 = (int) num3 * -1704524532 ^ 975965620;
            continue;
          case 27:
            num1 = (int) num3 * 521953923 ^ -1714158802;
            continue;
          case 29:
            str3 = str1;
            num1 = (int) num3 * 1647362632 ^ -1144965971;
            continue;
          case 30:
            num1 = (int) num3 * 1103029023 ^ 850859864;
            continue;
          case 31:
            str1 = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str1, "\\\\");
            num1 = -963340801;
            continue;
          case 32:
label_3:
            str1 = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str1, "\\b");
            num1 = -1644549173;
            continue;
          case 33:
label_25:
            str1 = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str1, ch2.ToString());
            num1 = -334674104;
            continue;
          default:
            goto label_36;
        }
      }
label_36:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = -1013050169;
      bool flag1;
      int num2;
      char ch1;
      char ch2;
      Stack<JSONNode> jsonNodeStack;
      bool flag2;
      bool flag3;
      string aItem;
      string aKey;
      char ch3;
      char ch4;
      bool flag4;
      JSONNode jsonNode1;
      bool flag5;
      bool flag6;
      bool flag7;
      bool flag8;
      char ch5;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      JSONNode jsonNode2;
      bool flag15;
      bool flag16;
      char ch6;
      bool flag17;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1324293740)) % 158U)
        {
          case 0:
            aKey = "";
            num1 = -1639518402;
            continue;
          case 1:
            flag6 = JSONNode.\u206B‎⁪⁭‌⁭⁫⁬‌⁫⁯⁪‏‫‭‭‪⁭‮‫‮⁪‏‏​​⁬‮‍⁪‪⁮⁮‬‎⁯⁮⁫‬⁮‮(aKey, "");
            num1 = -993274656;
            continue;
          case 2:
            int num4 = !flag2 ? 797104265 : (num4 = 2086052661);
            num1 = num4 ^ (int) num3 * 26465462;
            continue;
          case 3:
          case 13:
          case 69:
          case 84:
          case 140:
label_21:
            ++num2;
            num1 = -1892512228;
            continue;
          case 4:
            int num5;
            num1 = num5 = ch2 <= ']' ? -72035040 : (num5 = -431462329);
            continue;
          case 5:
            num1 = (int) num3 * -1454820646 ^ 1046077797;
            continue;
          case 6:
            num1 = (int) num3 * -1784961656 ^ -1527378330;
            continue;
          case 7:
            int num6 = !flag12 ? -1769992336 : (num6 = -452221351);
            num1 = num6 ^ (int) num3 * 711886330;
            continue;
          case 8:
            num1 = (int) num3 * 1894249249 ^ -244508194;
            continue;
          case 9:
label_50:
            int num7;
            num1 = num7 = !flag2 ? -1683832899 : (num7 = -1554590119);
            continue;
          case 10:
            num1 = (int) num3 * 540969638 ^ 2133181804;
            continue;
          case 11:
            int num8 = !flag11 ? 1359617217 : (num8 = 633567606);
            num1 = num8 ^ (int) num3 * -501831838;
            continue;
          case 14:
            aItem = "";
            num1 = (int) num3 * 532484530 ^ -713236344;
            continue;
          case 15:
            jsonNode2 = jsonNode1;
            num1 = -617358914;
            continue;
          case 16:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -999457202 ^ 432576835;
            continue;
          case 17:
            num1 = -1268730027;
            continue;
          case 18:
            int num9 = flag6 ? 1659325367 : (num9 = 1128156370);
            num1 = num9 ^ (int) num3 * -903632127;
            continue;
          case 19:
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(aItem, "\n");
            num1 = -713907063;
            continue;
          case 20:
            int num10;
            num1 = num10 = ch4 != 'n' ? -253286737 : (num10 = -573791145);
            continue;
          case 21:
            num1 = (int) num3 * -1945336666 ^ -392118387;
            continue;
          case 22:
            int num11 = ch4 <= 'f' ? -1188376155 : (num11 = -1698042908);
            num1 = num11 ^ (int) num3 * -791114972;
            continue;
          case 23:
            num1 = (int) num3 * 1139967974 ^ 1343991045;
            continue;
          case 24:
            flag4 = JSONNode.\u206B‎⁪⁭‌⁭⁫⁬‌⁫⁯⁪‏‫‭‭‪⁭‮‫‮⁪‏‏​​⁬‮‍⁪‪⁮⁮‬‎⁯⁮⁫‬⁮‮(aItem, "");
            num1 = -1760538350;
            continue;
          case 25:
            num1 = (int) num3 * 1445442627 ^ -1191603541;
            continue;
          case 26:
            goto label_27;
          case 27:
            num1 = (int) num3 * -35145264 ^ 1972827252;
            continue;
          case 28:
            num1 = (int) num3 * -1904784338 ^ 817837952;
            continue;
          case 29:
            num1 = (int) num3 * 309953005 ^ 100147890;
            continue;
          case 30:
            num1 = -76902080;
            continue;
          case 31:
            aKey = JSONNode.\u200E‪‌‭‬⁫⁬‍‏‍‬⁮⁭‎‭⁫‫‏⁮‮⁮⁬‎‪‏⁫⁬‪‪‍‮‬‍‏‭⁫⁯‎‍‪‮(aKey);
            num1 = (int) num3 * 1218723095 ^ 910873818;
            continue;
          case 32:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1166852575 ^ -1268258982;
            continue;
          case 33:
label_52:
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(aItem, ch5.ToString());
            num1 = -497677333;
            continue;
          case 34:
            num1 = (int) num3 * 842506214 ^ -570072158;
            continue;
          case 35:
            num1 = (int) num3 * -259850060 ^ -1785311299;
            continue;
          case 36:
            int num12 = !flag13 ? 2036722365 : (num12 = 149164381);
            num1 = num12 ^ (int) num3 * 1618278459;
            continue;
          case 37:
            flag1 = flag2;
            num1 = (int) num3 * -482848087 ^ -1884212496;
            continue;
          case 38:
            int num13;
            num1 = num13 = ch2 == '}' ? -427104669 : (num13 = -2008521707);
            continue;
          case 39:
            num1 = (int) num3 * 534107558 ^ -1709128635;
            continue;
          case 40:
            aKey = aItem;
            aItem = "";
            num1 = -997572738;
            continue;
          case 41:
            int num14 = ch4 != 'b' ? 393627523 : (num14 = 201853697);
            num1 = num14 ^ (int) num3 * -130393971;
            continue;
          case 42:
            int num15;
            num1 = num15 = flag2 ? -1955678121 : (num15 = -1621223080);
            continue;
          case 43:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -1448250989;
            continue;
          case 44:
            num1 = (int) num3 * 1537111003 ^ -166523440;
            continue;
          case 45:
            flag8 = JSONNode.\u206B‎⁪⁭‌⁭⁫⁬‌⁫⁯⁪‏‫‭‭‪⁭‮‫‮⁪‏‏​​⁬‮‍⁪‪⁮⁮‬‎⁯⁮⁫‬⁮‮(aKey, "");
            num1 = -826665507;
            continue;
          case 46:
            string str1 = aItem;
            ch3 = JSONNode.\u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮(aJSON, num2);
            string str2 = ch3.ToString();
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str1, str2);
            num1 = (int) num3 * 1456142328 ^ -992563460;
            continue;
          case 47:
            num1 = (int) num3 * 150582305 ^ -1147910599;
            continue;
          case 48:
            num1 = (int) num3 * -1985273749 ^ -762220373;
            continue;
          case 49:
label_96:
            flag16 = flag2;
            num1 = -773828570;
            continue;
          case 50:
            flag5 = flag2;
            num1 = -1700818402;
            continue;
          case 51:
            num1 = (int) num3 * -1616829238 ^ 579516182;
            continue;
          case 52:
            flag15 = JSONNode.\u206B‎⁪⁭‌⁭⁫⁬‌⁫⁯⁪‏‫‭‭‪⁭‮‫‮⁪‏‏​​⁬‮‍⁪‪⁮⁮‬‎⁯⁮⁫‬⁮‮(aKey, "");
            num1 = -1089949659;
            continue;
          case 53:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1040283295 ^ -1312975003;
            continue;
          case 54:
            aKey = JSONNode.\u200E‪‌‭‬⁫⁬‍‏‍‬⁮⁭‎‭⁫‫‏⁮‮⁮⁬‎‪‏⁫⁬‪‪‍‮‬‍‏‭⁫⁯‎‍‪‮(aKey);
            num1 = (int) num3 * -1944432976 ^ 1553158696;
            continue;
          case 55:
            ch4 = ch6;
            num1 = (int) num3 * -1144262072 ^ -899901402;
            continue;
          case 56:
            flag10 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1242618381 ^ 1280592099;
            continue;
          case 57:
            num1 = (int) num3 * -624349178 ^ -604644588;
            continue;
          case 58:
            num1 = (int) num3 * 1315451391 ^ -859839794;
            continue;
          case 59:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -41842047 ^ 678846552;
            continue;
          case 60:
            num1 = (int) num3 * -434037251 ^ 662029428;
            continue;
          case 61:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = -453719279;
            continue;
          case 62:
            num1 = (int) num3 * 2083544239 ^ -1000614901;
            continue;
          case 63:
            num1 = (int) num3 * 1122607028 ^ 467594867;
            continue;
          case 64:
            switch (ch2)
            {
              case '\t':
                goto label_113;
              case '\n':
              case '\r':
                goto label_21;
              case '\v':
              case '\f':
                goto label_42;
              default:
                num1 = (int) num3 * 1859361196 ^ 1948748266;
                continue;
            }
          case 65:
            ch1 = JSONNode.\u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮(aJSON, num2);
            num1 = (int) num3 * 1188151712 ^ -1458831005;
            continue;
          case 66:
            int num16;
            num1 = num16 = ch2 != ' ' ? -84148423 : (num16 = -1873389065);
            continue;
          case 67:
            string str3 = aItem;
            ch3 = JSONNode.\u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮(aJSON, num2);
            string str4 = ch3.ToString();
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str3, str4);
            num1 = (int) num3 * 1265566719 ^ -70353060;
            continue;
          case 68:
            flag9 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1537016401 ^ -1344600405;
            continue;
          case 70:
            num1 = (int) num3 * -1297036682 ^ -1278232310;
            continue;
          case 71:
            aKey = "";
            num1 = -1492531211;
            continue;
          case 72:
            flag12 = JSONNode.\u206B‎⁪⁭‌⁭⁫⁬‌⁫⁯⁪‏‫‭‭‪⁭‮‫‮⁪‏‏​​⁬‮‍⁪‪⁮⁮‬‎⁯⁮⁫‬⁮‮(aKey, "");
            num1 = -619395525;
            continue;
          case 73:
            int num17 = !flag1 ? 167603484 : (num17 = 783979997);
            num1 = num17 ^ (int) num3 * 1676203615;
            continue;
          case 74:
label_123:
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(aItem, "\t");
            num1 = -1336523797;
            continue;
          case 75:
            num1 = (int) num3 * -1136253947 ^ 1775194259;
            continue;
          case 76:
            int num18;
            num1 = num18 = ch2 != ',' ? -748199383 : (num18 = -1949950196);
            continue;
          case 77:
            num1 = (int) num3 * -1782831915 ^ -1749674707;
            continue;
          case 78:
label_31:
            ++num2;
            num1 = -1999913282;
            continue;
          case 79:
            string str5 = aItem;
            ch3 = JSONNode.\u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮(aJSON, num2);
            string str6 = ch3.ToString();
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str5, str6);
            num1 = (int) num3 * -859056694 ^ 497397726;
            continue;
          case 80:
            int num19 = flag7 ? 246176745 : (num19 = 1999977326);
            num1 = num19 ^ (int) num3 * 380846815;
            continue;
          case 81:
            int num20 = !(jsonNode1 is JSONArray) ? -879190571 : (num20 = -1242127040);
            num1 = num20 ^ (int) num3 * 19427000;
            continue;
          case 82:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1316492084 ^ 1536639907;
            continue;
          case 83:
            num1 = (int) num3 * 351028878 ^ 396536229;
            continue;
          case 85:
            flag7 = jsonNodeStack.Count == 0;
            num1 = -415381100;
            continue;
          case 86:
            int num21 = ch2 == ':' ? -2119656554 : (num21 = -644566758);
            num1 = num21 ^ (int) num3 * -966136224;
            continue;
          case 87:
            switch (ch4)
            {
              case 'r':
                goto label_63;
              case 's':
                goto label_52;
              case 't':
                goto label_123;
              case 'u':
                goto label_121;
              default:
                num1 = -464178175;
                continue;
            }
          case 88:
label_42:
            string str7 = aItem;
            ch3 = JSONNode.\u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮(aJSON, num2);
            string str8 = ch3.ToString();
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str7, str8);
            num1 = -742585578;
            continue;
          case 89:
            flag13 = jsonNode1 != (object) null;
            num1 = (int) num3 * 893575359 ^ 1713184193;
            continue;
          case 90:
label_121:
            string s = JSONNode.\u202A⁭⁯‮⁯‏⁯⁬​⁫‮​‏‌‭⁫⁬‌‮⁪⁬⁯‎‎⁬‮⁬‏​‭⁫⁭⁮‫⁮‫‫⁮‬‍‮(aJSON, num2 + 1, 4);
            string str9 = aItem;
            ch3 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str10 = ch3.ToString();
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str9, str10);
            num1 = -265300780;
            continue;
          case 91:
            num1 = (int) num3 * 1043900061 ^ 1429306240;
            continue;
          case 92:
            num1 = -1312514473;
            continue;
          case 93:
            num1 = (int) num3 * 1586394388 ^ 1690285872;
            continue;
          case 94:
            flag2 = !flag2;
            num1 = -1203783396;
            continue;
          case 95:
            goto label_48;
          case 96:
            num1 = (int) num3 * -466017955 ^ -2120854948;
            continue;
          case 97:
            num1 = (int) num3 * -817953055 ^ -23328417;
            continue;
          case 98:
            int num22 = !flag5 ? -1490878904 : (num22 = -2130910921);
            num1 = num22 ^ (int) num3 * -2013792667;
            continue;
          case 99:
            string str11 = aItem;
            ch3 = JSONNode.\u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮(aJSON, num2);
            string str12 = ch3.ToString();
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str11, str12);
            num1 = (int) num3 * -1107370651 ^ 879473829;
            continue;
          case 100:
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(aItem, "\f");
            num1 = -1173153625;
            continue;
          case 101:
            num1 = (int) num3 * -1612190164 ^ 782349451;
            continue;
          case 102:
            int num23 = !flag4 ? 1946960842 : (num23 = 489963865);
            num1 = num23 ^ (int) num3 * -565830568;
            continue;
          case 103:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 587720518 ^ 32493133;
            continue;
          case 104:
            int num24;
            num1 = num24 = ch2 == '"' ? -1611339636 : (num24 = -27186913);
            continue;
          case 105:
            int num25;
            num1 = num25 = ch2 == '{' ? -241035354 : (num25 = -1716250036);
            continue;
          case 106:
            num1 = (int) num3 * -2011704383 ^ 515724662;
            continue;
          case 107:
            num1 = (int) num3 * 1913711736 ^ -1735013223;
            continue;
          case 108:
            switch (ch2)
            {
              case '[':
                goto label_96;
              case '\\':
                goto label_31;
              case ']':
                goto label_50;
              default:
                num1 = -853621753;
                continue;
            }
          case 109:
            int num26 = !flag3 ? -1798304377 : (num26 = -1528042964);
            num1 = num26 ^ (int) num3 * 24020372;
            continue;
          case 110:
            num2 = 0;
            aItem = "";
            aKey = "";
            flag2 = false;
            num1 = (int) num3 * -1560776687 ^ -184687029;
            continue;
          case 111:
            int num27 = !flag10 ? -1791157255 : (num27 = -854012117);
            num1 = num27 ^ (int) num3 * 2050490571;
            continue;
          case 112:
            goto label_1;
          case 113:
            num1 = -1288175271;
            continue;
          case 114:
            int num28 = flag14 ? -152585233 : (num28 = -1143863301);
            num1 = num28 ^ (int) num3 * -1056236959;
            continue;
          case 115:
            ch2 = ch1;
            int num29 = ch2 > ',' ? 1829964886 : (num29 = 1772336624);
            num1 = num29 ^ (int) num3 * 1524018274;
            continue;
          case 116:
            num1 = (int) num3 * -1103701229 ^ -226511276;
            continue;
          case 117:
            num1 = (int) num3 * 1183603884 ^ -841371803;
            continue;
          case 118:
            aKey = JSONNode.\u200E‪‌‭‬⁫⁬‍‏‍‬⁮⁭‎‭⁫‫‏⁮‮⁮⁬‎‪‏⁫⁬‪‪‍‮‬‍‏‭⁫⁯‎‍‪‮(aKey);
            num1 = (int) num3 * 1591849450 ^ -1075234773;
            continue;
          case 119:
            num1 = (int) num3 * -1503862017 ^ -1610225124;
            continue;
          case 120:
            int num30 = !flag16 ? 936085864 : (num30 = 156234915);
            num1 = num30 ^ (int) num3 * -652538123;
            continue;
          case 121:
label_113:
            int num31;
            num1 = num31 = flag2 ? -1407318995 : (num31 = -506142120);
            continue;
          case 122:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -1994482809;
            continue;
          case 123:
            num1 = (int) num3 * 1834851588 ^ 1084762936;
            continue;
          case 124:
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(aItem, "\b");
            num1 = -1468469511;
            continue;
          case 125:
            ch5 = JSONNode.\u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮(aJSON, num2);
            ch6 = ch5;
            num1 = (int) num3 * 54300624 ^ -666177267;
            continue;
          case 126:
            jsonNodeStack.Pop();
            int num32;
            num1 = num32 = !JSONNode.\u206B‎⁪⁭‌⁭⁫⁬‌⁫⁯⁪‏‫‭‭‪⁭‮‫‮⁪‏‏​​⁬‮‍⁪‪⁮⁮‬‎⁯⁮⁫‬⁮‮(aItem, "") ? -76902080 : (num32 = -188775731);
            continue;
          case (uint) sbyte.MaxValue:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -1494293904 ^ 1985080390;
            continue;
          case 128:
            num1 = -1712221549;
            continue;
          case 129:
            flag11 = jsonNode1 != (object) null;
            num1 = (int) num3 * -642923648 ^ 721792175;
            continue;
          case 130:
label_63:
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(aItem, "\r");
            num1 = -846196111;
            continue;
          case 131:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * 438191543 ^ 617508846;
            continue;
          case 132:
            int num33 = ch2 <= ' ' ? -436799938 : (num33 = -1723093218);
            num1 = num33 ^ (int) num3 * -844660114;
            continue;
          case 133:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1395054503 ^ 782094261;
            continue;
          case 134:
            int num34 = flag17 ? -1075290278 : (num34 = -1582331251);
            num1 = num34 ^ (int) num3 * 433025089;
            continue;
          case 135:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1501246680 ^ 1604430440;
            continue;
          case 136:
            num1 = (int) num3 * 1538512250 ^ -973522000;
            continue;
          case 137:
            num1 = (int) num3 * -963239338 ^ -661610637;
            continue;
          case 138:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 492405001 ^ -1619308656;
            continue;
          case 139:
            num1 = (int) num3 * 1668643016 ^ 1955827204;
            continue;
          case 141:
            num1 = (int) num3 * 763664631 ^ 1552383330;
            continue;
          case 142:
            flag17 = num2 < JSONNode.\u202B‍⁭⁮⁫⁮⁪⁭‪‭⁭‬‪‎‭⁫⁪⁭‌​⁬‍‫​​‬⁫‪‫‮‏‌‪‮​‎‭⁪⁪‮(aJSON);
            num1 = -1600667294;
            continue;
          case 143:
            flag14 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1531346689 ^ 980052661;
            continue;
          case 144:
            int num35 = jsonNodeStack.Count <= 0 ? 1248334903 : (num35 = 1074089287);
            num1 = num35 ^ (int) num3 * -548225317;
            continue;
          case 145:
            num1 = -400353830;
            continue;
          case 146:
            flag3 = flag2;
            num1 = -974661395;
            continue;
          case 147:
            string str13 = aItem;
            ch3 = JSONNode.\u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮(aJSON, num2);
            string str14 = ch3.ToString();
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str13, str14);
            num1 = (int) num3 * -1519299321 ^ -328466175;
            continue;
          case 148:
            int num36;
            num1 = num36 = ch4 == 'f' ? -499943908 : (num36 = -712227953);
            continue;
          case 149:
            string str15 = aItem;
            ch3 = JSONNode.\u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮(aJSON, num2);
            string str16 = ch3.ToString();
            aItem = JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮(str15, str16);
            num1 = (int) num3 * -1515601272 ^ -885931946;
            continue;
          case 150:
            num1 = (int) num3 * -862118148 ^ -2140098428;
            continue;
          case 151:
            int num37 = flag15 ? 1966697128 : (num37 = 473255652);
            num1 = num37 ^ (int) num3 * 1293406381;
            continue;
          case 152:
            num2 += 4;
            num1 = (int) num3 * -770349186 ^ -790458281;
            continue;
          case 153:
            int num38 = !flag8 ? 1556961479 : (num38 = 996405802);
            num1 = num38 ^ (int) num3 * -1839988762;
            continue;
          case 154:
            aKey = "";
            aItem = "";
            num1 = -2140651078;
            continue;
          case 155:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 232747202 ^ 1004976282;
            continue;
          case 156:
            num1 = (int) num3 * -1684121506 ^ 881994300;
            continue;
          case 157:
            int num39 = flag9 ? 1186672991 : (num39 = 681432735);
            num1 = num39 ^ (int) num3 * -987178833;
            continue;
          default:
            goto label_158;
        }
      }
label_27:
      throw JSONNode.\u202E⁭​‌‪⁭⁪⁫⁬‮‏⁬⁫⁯‪⁯‏‭‪⁬‍‫⁪‫‌⁮‬⁬‫‍⁫‎⁪​‏‪‍‍‏‫‮("JSON Parse: Quotation marks seems to be messed up.");
label_48:
      throw JSONNode.\u202E⁭​‌‪⁭⁪⁫⁬‮‏⁬⁫⁯‪⁯‏‭‪⁬‍‫⁪‫‌⁮‬⁬‫‍⁫‎⁪​‏‪‍‍‏‫‮("JSON Parse: Too many closing brackets");
label_158:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 1256790934;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2027739360)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            aWriter = JSONNode.\u202B⁫⁫⁯‍‏⁪‍​‬⁮​‬⁭‍⁬‌⁭‫⁭⁫⁫⁫⁯‎⁬⁮​⁯‪‮‬‮‪‌​‮⁮​⁬‮(aData);
            num1 = (int) num2 * 284931896 ^ 209596794;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Serialize(aWriter);
            num1 = (int) num2 * 1387946911 ^ 183220285;
            continue;
          case 4:
            num1 = (int) num2 * -2005737616 ^ 208622356;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202E⁭​‌‪⁭⁪⁫⁬‮‏⁬⁫⁯‪⁯‏‭‪⁬‍‫⁪‫‌⁮‬⁬‫‍⁫‎⁪​‏‪‍‍‏‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202E⁭​‌‪⁭⁪⁫⁬‮‏⁬⁫⁯‪⁯‏‭‪⁬‍‫⁪‫‌⁮‬⁬‫‍⁫‎⁪​‏‪‍‍‏‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202E⁭​‌‪⁭⁪⁫⁬‮‏⁬⁫⁯‪⁯‏‭‪⁬‍‫⁪‫‌⁮‬⁬‫‍⁫‎⁪​‏‪‍‍‏‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206C‫​‬‏⁭⁮‭​‌⁪⁯​⁫‏‪‍‮⁪⁯⁫‫‏‬‏‍⁬⁭‎‮‭‌‭⁭‪‎‮‬‏‬‮(JSONNode.\u206D‌‎⁪‫⁭‭⁬⁪‪‍‏⁮⁫‪‫‍⁯⁪​⁯‎⁮⁪‏⁬‭‌⁪‫‪‌‍‭⁫‏⁮‍⁭‭‮((FileSystemInfo) JSONNode.\u206A‫‮‮⁭‌⁮‏⁫‎‏⁯‪⁫‪⁬‏​​‮⁬‍‮‬‏‬‫‏‌‮‍⁭‎‍‭‏‫​‫⁬‮(JSONNode.\u206C‮⁮⁭⁬‮⁯⁭‏⁬‬‍‍‍‭‏‌‫‪⁪‬‮⁭​⁮‬⁯⁯⁭⁮‌‫​‭‍⁫⁬‍‏‭‮(aFileName))));
      FileStream aData = JSONNode.\u206F‪⁫​‌⁮‌‌⁯‪⁮⁯⁭⁮‬‪​⁭⁬‬​⁪‮‏‎‮⁪‬⁪⁭‍‫‎⁭⁭‌‏‏⁯‭‮(aFileName);
      try
      {
label_2:
        int num1 = 137247022;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1089868008)) % 4U)
          {
            case 0:
              goto label_2;
            case 1:
              goto label_10;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1915202009 ^ -1362317275;
              continue;
            case 3:
              num1 = (int) num2 * 119650086 ^ 75353111;
              continue;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 2045021084;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1089868008)) % 3U)
            {
              case 0:
                goto label_8;
              case 1:
                JSONNode.\u206F‍‍⁪‮​​‎⁮⁬⁬‍‬‪‫‎⁫⁫‮‭⁯​​⁫⁪⁯⁮⁭⁬⁮‮⁭​‪‮‏⁭‎⁮‬‮((IDisposable) aData);
                num3 = (int) num4 * -43547796 ^ -137321245;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200F‫​‬‍‎‌‬‫‎‮​‮⁫‏‪‫⁫‌⁭‬⁬⁫‭‮⁪‎‎‭‌‌‎‫​‎⁫⁭​‍‪‮();
      string base64;
      try
      {
label_2:
        int num1 = -1167520227;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1194700609)) % 5U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -20335633 ^ 1069927486;
              continue;
            case 2:
              num1 = (int) num2 * -591404825 ^ -1232293150;
              continue;
            case 3:
              JSONNode.\u206C‌‏‎‫⁭‫⁫⁪‌⁫⁪⁪⁮‎‪‫‏‫‮⁬‫​‮⁮‍⁭‪⁫⁬​‭‍‎​⁭‏⁮‌⁯‮((Stream) aData, 0L);
              base64 = JSONNode.\u200D⁭‏⁪‎‬⁯⁭⁬‍‎⁯‭‬‮‪​⁪‍⁬‮⁯‍⁬‌⁯‭⁪⁪‎⁯‭‮‍⁬⁫‪‮‮‪‮(JSONNode.\u206E⁫‍‍⁭‮‏‏‭‏‪⁭⁫​⁪‬‭‌⁫‏⁬​⁫‪⁫‫‍‌⁯⁮⁭‬⁭‌‭‭‏⁬⁭‪‮(aData));
              num1 = (int) num2 * 255269302 ^ -387435462;
              continue;
            default:
              goto label_12;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -799164863;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1194700609)) % 3U)
            {
              case 0:
                goto label_8;
              case 1:
                JSONNode.\u206F‍‍⁪‮​​‎⁮⁬⁬‍‬‪‫‎⁫⁫‮‭⁯​​⁫⁪⁯⁮⁭⁬⁮‮⁭​‪‮‏⁭‎⁮‬‮((IDisposable) aData);
                num3 = (int) num4 * -2011929984 ^ -222897241;
                continue;
              default:
                goto label_11;
            }
          }
        }
label_11:;
      }
label_12:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u200D⁯⁮⁬‏‬​‌‌⁪​‫‮‍‎⁫⁫‍⁬‭‌‬​‎‏⁮‬‏⁯​‪⁪‮‪⁪‬‫⁬‏⁫‮(aReader);
label_1:
      int num1 = -743900059;
      JSONBinaryTag jsonBinaryTag2;
      JSONBinaryTag jsonBinaryTag3;
      bool flag;
      JSONArray jsonArray;
      JSONNode jsonNode;
      int num2;
      int num3;
      JSONClass jsonClass;
      string aKey;
      int num4;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1233343959)) % 38U)
        {
          case 0:
            int num7 = flag ? 1446717831 : (num7 = 1717790780);
            num1 = num7 ^ (int) num6 * -350469938;
            continue;
          case 1:
            num2 = 0;
            num1 = (int) num6 * 469788889 ^ 1547574100;
            continue;
          case 2:
            num1 = (int) num6 * 402317186 ^ 985563704;
            continue;
          case 3:
            num3 = JSONNode.\u206B‎‌‮⁭‮⁮​⁭‪‎‫⁫⁬‎⁭‎‍‍‍‏‭⁬‬‏‌‌⁭‎⁯⁫‍‪⁯​‫⁬⁯‎‫‮(aReader);
            num1 = (int) num6 * -972811897 ^ -511375186;
            continue;
          case 4:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * 1818606402 ^ 678438713;
            continue;
          case 5:
            flag = num2 < num3;
            num1 = -1971710197;
            continue;
          case 6:
            int num8;
            num1 = num8 = num5 < num4 ? -1568761358 : (num8 = -197568272);
            continue;
          case 7:
label_29:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‏‭⁭‪⁭⁫‭‬‍‎⁬‭‍⁬‪‏⁮‏⁬⁫‭‪⁫​‪‭‏‮⁬‏‭‫⁬‫⁯‏‮‬⁫‮(aReader));
            num1 = -776835184;
            continue;
          case 8:
            jsonArray = new JSONArray();
            num1 = (int) num6 * 940250218 ^ 1538730830;
            continue;
          case 9:
            num1 = (int) num6 * 214810977 ^ -1872620427;
            continue;
          case 10:
            num1 = (int) num6 * 1061496909 ^ -1441351316;
            continue;
          case 11:
            num1 = -559502616;
            continue;
          case 12:
            goto label_1;
          case 13:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 376734213 ^ -1600231786;
            continue;
          case 14:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -577296304 ^ 99730109;
            continue;
          case 15:
            jsonClass = new JSONClass();
            num1 = (int) num6 * 363989817 ^ 1766233099;
            continue;
          case 16:
label_37:
            num1 = -937609163;
            continue;
          case 17:
            num5 = 0;
            num1 = (int) num6 * -1741063057 ^ 1695864365;
            continue;
          case 18:
label_22:
            num1 = -2115435856;
            continue;
          case 19:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 546970549 ^ -1534726312;
            continue;
          case 20:
            num1 = (int) num6 * -647657297 ^ 139465028;
            continue;
          case 21:
            num4 = JSONNode.\u206B‎‌‮⁭‮⁮​⁭‪‎‫⁫⁬‎⁭‎‍‍‍‏‭⁬‬‏‌‌⁭‎⁯⁫‍‪⁯​‫⁬⁯‎‫‮(aReader);
            num1 = (int) num6 * 912605561 ^ -479154949;
            continue;
          case 22:
            goto label_31;
          case 24:
            ++num5;
            num1 = (int) num6 * 112089158 ^ -1547024731;
            continue;
          case 25:
            num1 = (int) num6 * -1391487440 ^ -1707291207;
            continue;
          case 26:
            num1 = (int) num6 * -490782972 ^ -477058776;
            continue;
          case 27:
label_16:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200D‎⁫‮‬⁬‫​⁪⁫⁪‭⁭‍‭⁫‮⁬⁫‏‫⁬⁮⁪⁮⁮‏‏⁪⁬⁪‬⁮⁮‪⁪‮‌⁪‮‮(aReader));
            num1 = -36012244;
            continue;
          case 28:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num2;
            num1 = -583373476;
            continue;
          case 29:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * -853945143 ^ -1551233039;
            continue;
          case 30:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A​‪‏‎⁬⁭⁪⁭‬‌​‭‌⁮‫‬​​⁯⁫‪‎⁮⁭‎⁫‎‫‌⁫‎⁮⁯​⁫‫⁪‫‮‮(aReader));
            num1 = (int) num6 * -1458308612 ^ 2043230359;
            continue;
          case 31:
            num1 = (int) num6 * -310666068 ^ -1133221915;
            continue;
          case 32:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206B‎‌‮⁭‮⁮​⁭‪‎‫⁫⁬‎⁭‎‍‍‍‏‭⁬‬‏‌‌⁭‎⁯⁫‍‪⁯​‫⁬⁯‎‫‮(aReader));
            num1 = (int) num6 * 327288326 ^ -692863252;
            continue;
          case 33:
label_25:
            num1 = -449258328;
            continue;
          case 34:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_25;
              case JSONBinaryTag.Class:
                goto label_22;
              case JSONBinaryTag.Value:
                goto label_29;
              case JSONBinaryTag.IntValue:
                goto label_8;
              case JSONBinaryTag.DoubleValue:
                goto label_16;
              case JSONBinaryTag.BoolValue:
                goto label_20;
              case JSONBinaryTag.FloatValue:
                goto label_37;
              default:
                num1 = (int) num6 * -302875778 ^ -1528573156;
                continue;
            }
          case 35:
            aKey = JSONNode.\u202C‏‭⁭‪⁭⁫‭‬‍‎⁬‭‍⁬‪‏⁮‏⁬⁫‭‪⁫​‪‭‏‮⁬‏‭‫⁬‫⁯‏‮‬⁫‮(aReader);
            num1 = (int) num6 * 846826337 ^ -642751791;
            continue;
          case 36:
label_8:
            num1 = -902688061;
            continue;
          case 37:
label_20:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‭⁮‭⁯⁬⁭⁮⁭‫‍⁯‍‌‪‭‌‎​‫‪‪⁪‮‪‍⁮⁫‭⁬⁭‬⁪‪‌⁬⁫‌⁪‌‮(aReader));
            num1 = -2010705595;
            continue;
          default:
            goto label_40;
        }
      }
label_31:
      throw JSONNode.\u202E⁭​‌‪⁭⁪⁫⁬‮‏⁬⁫⁯‪⁯‏‭‪⁬‍‫⁪‫‌⁮‬⁬‫‍⁫‎⁪​‏‪‍‍‏‫‮(JSONNode.\u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202E⁭​‌‪⁭⁪⁫⁬‮‏⁬⁫⁯‪⁯‏‭‪⁬‍‫⁪‫‌⁮‬⁬‫‍⁫‎⁪​‏‪‍‍‏‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202E⁭​‌‪⁭⁪⁫⁬‮‏⁬⁫⁯‪⁯‏‭‪⁬‍‫⁪‫‌⁮‬⁬‫‍⁫‎⁪​‏‪‍‍‏‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202E⁭​‌‪⁭⁪⁫⁬‮‏⁬⁫⁯‪⁯‏‭‪⁬‍‫⁪‫‌⁮‬⁬‫‍⁫‎⁪​‏‪‍‍‏‫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206E⁬‪‏‏‫‌‏‌⁫‏‫⁬‪‏‮‭‌⁮‫‍‪⁭‪‏‍‫⁮⁫‏​‫​‭⁫⁪⁭‮‬‏‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -1937000534;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -551685081)) % 4U)
            {
              case 0:
                num1 = (int) num2 * -338067809 ^ 1153034920;
                continue;
              case 1:
                JSONNode.\u206F‍‍⁪‮​​‎⁮⁬⁬‍‬‪‫‎⁫⁫‮‭⁯​​⁫⁪⁯⁮⁭⁬⁮‮⁭​‪‮‏⁭‎⁮‬‮((IDisposable) aReader);
                num1 = (int) num2 * -1747355452 ^ 1114254707;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206E‬⁬⁯‫⁭‏‫⁭‬⁫​⁫‎‌⁬​‮​‭‌‪‫⁮‮⁬‪‌⁭‎‎‌⁫⁫‌‬‌​⁮⁯‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -1715120732;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -2008539483)) % 4U)
            {
              case 0:
                num1 = (int) num2 * -839226936 ^ 912456259;
                continue;
              case 1:
                JSONNode.\u206F‍‍⁪‮​​‎⁮⁬⁬‍‬‪‫‎⁫⁫‮‭⁯​​⁫⁪⁯⁮⁭⁬⁮‮⁭​‪‮‏⁭‎⁮‬‮((IDisposable) aData);
                num1 = (int) num2 * -370669829 ^ -1829351082;
                continue;
              case 3:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
      MemoryStream aData = JSONNode.\u206C‎⁬‫‎​⁮‏⁯⁮‏‌‪⁬⁮‫‍‌‮⁫‎⁫‭⁫⁫⁫‭⁫⁭⁬‎‍​‎​‍⁫⁭⁯⁯‮(JSONNode.\u206B​⁫⁪‌⁮‍⁮‎‎⁪⁭‫​⁭‌‪‬‭‬‭‭‭‌‎‍‭⁫‮⁯⁭⁯‮‫‍‭⁬⁪⁪⁭‮(aBase64));
label_1:
      int num1 = 1404892599;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1682437563)) % 5U)
        {
          case 0:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -1774197481 ^ -335292637;
            continue;
          case 1:
            num1 = (int) num2 * 1960690841 ^ 1750033819;
            continue;
          case 2:
            goto label_1;
          case 3:
            JSONNode.\u206C‌‏‎‫⁭‫⁫⁪‌⁫⁪⁪⁮‎‪‫‏‫‮⁬‫​‮⁮‍⁭‪⁫⁬​‭‍‎​⁭‏⁮‌⁯‮((Stream) aData, 0L);
            num1 = (int) num2 * -320243552 ^ -1456958004;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    static CultureInfo \u200E‭‌‍​‫‫‪‏‏​‌⁬‬⁯⁬‏⁮⁮‭‌‬‫‮‍⁮⁯⁮‏⁯⁯‪⁬‭‮⁬‬⁪‏‎‮() => CultureInfo.InvariantCulture;

    static bool \u206D⁫⁭⁫⁮⁫‮‫‬‌‌‭⁫⁫​‪‪‭‬‍‬⁮‭‬‬‎⁭⁯‪‫⁯⁬​‌⁮​‮⁬⁮⁭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u202D‍⁮⁪⁯‍⁯‍‬⁯⁬⁭‌⁯‭‬‬‮‍‪‏‪⁬‬‍‪‫‭⁮‫‬⁭‬⁯‬⁮⁭‌⁬‌‮() => base.GetHashCode();

    static char \u200F‫⁭⁪‍​‍​‫⁬‍‬‏‬​‮⁯‬‭‬‭‬‮‌‬‎⁬‭‎⁬‎⁫‌⁯​‪⁫⁬‏‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206B​⁬​⁫‌⁮‏‏​‮‮‪⁬⁬‎⁯‭‏‏‏‬‍⁮⁭⁪⁬‎⁭‫‮⁫⁪‏‌‎⁮​‪⁯‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202B‍⁭⁮⁫⁮⁪⁭‪‭⁭‬‪‎‭⁫⁪⁭‌​⁬‍‫​​‬⁫‪‫‮‏‌‪‮​‎‭⁪⁪‮([In] string obj0) => obj0.Length;

    static string \u200E‪‌‭‬⁫⁬‍‏‍‬⁮⁭‎‭⁫‫‏⁮‮⁮⁬‎‪‏⁫⁬‪‪‍‮‬‍‏‭⁫⁯‎‍‪‮([In] string obj0) => obj0.Trim();

    static bool \u206B‎⁪⁭‌⁭⁫⁬‌⁫⁯⁪‏‫‭‭‪⁭‮‫‮⁪‏‏​​⁬‮‍⁪‪⁮⁮‬‎⁯⁮⁫‬⁮‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202E⁭​‌‪⁭⁪⁫⁬‮‏⁬⁫⁯‪⁯‏‭‪⁬‍‫⁪‫‌⁮‬⁬‫‍⁫‎⁪​‏‪‍‍‏‫‮([In] string obj0) => new Exception(obj0);

    static string \u202A⁭⁯‮⁯‏⁯⁬​⁫‮​‏‌‭⁫⁬‌‮⁪⁬⁯‎‎⁬‮⁬‏​‭⁫⁭⁮‫⁮‫‫⁮‬‍‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202B⁫⁫⁯‍‏⁪‍​‬⁮​‬⁭‍⁬‌⁭‫⁭⁫⁫⁫⁯‎⁬⁮​⁯‪‮‬‮‪‌​‮⁮​⁬‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206C‮⁮⁭⁬‮⁯⁭‏⁬‬‍‍‍‭‏‌‫‪⁪‬‮⁭​⁮‬⁯⁯⁭⁮‌‫​‭‍⁫⁬‍‏‭‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u206A‫‮‮⁭‌⁮‏⁫‎‏⁯‪⁫‪⁬‏​​‮⁬‍‮‬‏‬‫‏‌‮‍⁭‎‍‭‏‫​‫⁬‮([In] FileInfo obj0) => obj0.Directory;

    static string \u206D‌‎⁪‫⁭‭⁬⁪‪‍‏⁮⁫‪‫‍⁯⁪​⁯‎⁮⁪‏⁬‭‌⁪‫‪‌‍‭⁫‏⁮‍⁭‭‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206C‫​‬‏⁭⁮‭​‌⁪⁯​⁫‏‪‍‮⁪⁯⁫‫‏‬‏‍⁬⁭‎‮‭‌‭⁭‪‎‮‬‏‬‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206F‪⁫​‌⁮‌‌⁯‪⁮⁯⁭⁮‬‪​⁭⁬‬​⁪‮‏‎‮⁪‬⁪⁭‍‫‎⁭⁭‌‏‏⁯‭‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u206F‍‍⁪‮​​‎⁮⁬⁬‍‬‪‫‎⁫⁫‮‭⁯​​⁫⁪⁯⁮⁭⁬⁮‮⁭​‪‮‏⁭‎⁮‬‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200F‫​‬‍‎‌‬‫‎‮​‮⁫‏‪‫⁫‌⁭‬⁬⁫‭‮⁪‎‎‭‌‌‎‫​‎⁫⁭​‍‪‮() => new MemoryStream();

    static void \u206C‌‏‎‫⁭‫⁫⁪‌⁫⁪⁪⁮‎‪‫‏‫‮⁬‫​‮⁮‍⁭‪⁫⁬​‭‍‎​⁭‏⁮‌⁯‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206E⁫‍‍⁭‮‏‏‭‏‪⁭⁫​⁪‬‭‌⁫‏⁬​⁫‪⁫‫‍‌⁯⁮⁭‬⁭‌‭‭‏⁬⁭‪‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200D⁭‏⁪‎‬⁯⁭⁬‍‎⁯‭‬‮‪​⁪‍⁬‮⁯‍⁬‌⁯‭⁪⁪‎⁯‭‮‍⁬⁫‪‮‮‪‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200D⁯⁮⁬‏‬​‌‌⁪​‫‮‍‎⁫⁫‍⁬‭‌‬​‎‏⁮‬‏⁯​‪⁪‮‪⁪‬‫⁬‏⁫‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206B‎‌‮⁭‮⁮​⁭‪‎‫⁫⁬‎⁭‎‍‍‍‏‭⁬‬‏‌‌⁭‎⁯⁫‍‪⁯​‫⁬⁯‎‫‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u202C‏‭⁭‪⁭⁫‭‬‍‎⁬‭‍⁬‪‏⁮‏⁬⁫‭‪⁫​‪‭‏‮⁬‏‭‫⁬‫⁯‏‮‬⁫‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200D‎⁫‮‬⁬‫​⁪⁫⁪‭⁭‍‭⁫‮⁬⁫‏‫⁬⁮⁪⁮⁮‏‏⁪⁬⁪‬⁮⁮‪⁪‮‌⁪‮‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200F‭⁮‭⁯⁬⁭⁮⁭‫‍⁯‍‌‪‭‌‎​‫‪‪⁪‮‪‍⁮⁫‭⁬⁭‬⁪‪‌⁬⁫‌⁪‌‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206A​‪‏‎⁬⁭⁪⁭‬‌​‭‌⁮‫‬​​⁯⁫‪‎⁮⁭‎⁫‎‫‌⁫‎⁮⁯​⁫‫⁪‫‮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206E⁬‪‏‏‫‌‏‌⁫‏‫⁬‪‏‮‭‌⁮‫‍‪⁭‪‏‍‫⁮⁫‏​‫​‭⁫⁪⁭‮‬‏‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206E‬⁬⁯‫⁭‏‫⁭‬⁫​⁫‎‌⁬​‮​‭‌‪‫⁮‮⁬‪‌⁭‎‎‌⁫⁫‌‬‌​⁮⁯‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206B​⁫⁪‌⁮‍⁮‎‎⁪⁭‫​⁭‌‪‬‭‬‭‭‭‌‎‍‭⁫‮⁯⁭⁯‮‫‍‭⁬⁪⁪⁭‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206C‎⁬‫‎​⁮‏⁯⁮‏‌‪⁬⁮‫‍‌‮⁫‎⁫‭⁫⁫⁫‭⁫⁭⁬‎‍​‎​‍⁫⁭⁯⁯‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
