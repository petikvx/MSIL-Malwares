// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: EncoderExceptionFallbackBuff, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1A176EC6-F8F7-4000-B7C0-CE79157CC27B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-64a92f765017361d260169feccd6dd444e4a20dfceb3dcad952d976477406e1c.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
        if (!this.m_Dict.ContainsKey(aKey))
          goto label_5;
label_1:
        int num1 = -2010577857;
label_2:
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1175442504)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -304224062 ^ -1085600350;
              continue;
            case 1:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * 602296668 ^ 30512576;
              continue;
            case 2:
              num1 = (int) num2 * -1715566054 ^ -1627094278;
              continue;
            case 3:
              goto label_5;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
label_5:
        jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
        num1 = -748363304;
        goto label_2;
      }
      set
      {
label_1:
        int num1 = -1275495312;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1485959745)) % 9U)
          {
            case 0:
              num1 = (int) num2 * -1604982262 ^ 1725428228;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1499982988 ^ -1732488689;
              continue;
            case 4:
              int num3 = !flag ? -1692403297 : (num3 = -735647977);
              num1 = num3 ^ (int) num2 * -995683357;
              continue;
            case 5:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1287150025 ^ 782583591;
              continue;
            case 6:
              this.m_Dict.Add(aKey, value);
              num1 = -1292738712;
              continue;
            case 7:
              num1 = (int) num2 * -1750664218 ^ -42562678;
              continue;
            case 8:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * 588142321 ^ 1763227117;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        return;
label_11:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_9;
label_1:
        int num1 = -1255665966;
label_2:
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1091505916)) % 8U)
          {
            case 0:
              jsonNode = (JSONNode) null;
              num1 = -47936931;
              continue;
            case 1:
              num1 = (int) num2 * 588120352 ^ -1796963248;
              continue;
            case 2:
              goto label_1;
            case 3:
              int num3 = !flag ? 1985426204 : (num3 = 1415833017);
              num1 = num3 ^ (int) num2 * -1972510936;
              continue;
            case 5:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1249764030 ^ 1901205373;
              continue;
            case 6:
              goto label_8;
            case 7:
              num1 = (int) num2 * 362495001 ^ 319401031;
              continue;
            default:
              goto label_11;
          }
        }
label_8:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_10;
label_11:
        return jsonNode;
label_9:
        num4 = 1;
label_10:
        flag = num4 != 0;
        num1 = -566493921;
        goto label_2;
      }
      set
      {
label_1:
        int num1 = -649254314;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -1982240492)) % 5U)
          {
            case 0:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 1:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -796513023 ^ -154057590;
              continue;
            case 2:
              num1 = (int) num2 * 226084713 ^ 723883275;
              continue;
            case 3:
              goto label_1;
            case 4:
              goto label_3;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 != 0 ? -407908515 : (num4 = -62363654);
        }
label_3:
        return;
label_10:;
      }
    }

    public override int Count => this.m_Dict.Count;

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -1446888067;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1609914340)) % 12U)
        {
          case 0:
            num1 = (int) num2 * 2105146414 ^ -219195590;
            continue;
          case 1:
            num1 = (int) num2 * 1909714860 ^ -421877804;
            continue;
          case 2:
            this.m_Dict.Add(aKey, aItem);
            num1 = -1947339909;
            continue;
          case 3:
            num1 = (int) num2 * -1893195283 ^ -1298932011;
            continue;
          case 4:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -1463199429 ^ 681491469;
            continue;
          case 5:
            int num3 = !JSONClass.\u202B⁯⁬‏⁪‪‬‏‌‫​‫‌⁪‭‭⁭⁭‏⁭‭‪‭‬‭⁯⁯‍‭⁯⁫‎⁬⁮​⁬⁭‍​⁬‮(aKey) ? -609647479 : (num3 = -1103553475);
            num1 = num3 ^ (int) num2 * 1389630454;
            continue;
          case 6:
            num1 = -846079580;
            continue;
          case 7:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = -1086793686;
            continue;
          case 8:
            num1 = (int) num2 * -2139784650 ^ -1334255722;
            continue;
          case 9:
            goto label_1;
          case 10:
            goto label_3;
          case 11:
            int num4 = !this.m_Dict.ContainsKey(aKey) ? 574134323 : (num4 = 1142739153);
            num1 = num4 ^ (int) num2 * -1046368769;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 2108436599;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1001672377)) % 9U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode2 = (JSONNode) null;
            num1 = (int) num2 * 1315414009 ^ -783819166;
            continue;
          case 2:
            int num3 = !flag ? -791709966 : (num3 = -1717347918);
            num1 = num3 ^ (int) num2 * -1121856648;
            continue;
          case 3:
            flag = !this.m_Dict.ContainsKey(aKey);
            num1 = (int) num2 * 1756057767 ^ -791320163;
            continue;
          case 4:
            jsonNode2 = jsonNode1;
            num1 = (int) num2 * 1085358182 ^ 869863135;
            continue;
          case 6:
            num1 = (int) num2 * 1095144616 ^ 1021310513;
            continue;
          case 7:
            jsonNode1 = this.m_Dict[aKey];
            num1 = 1365586624;
            continue;
          case 8:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * 1185665182 ^ 742332785;
            continue;
          default:
            goto label_10;
        }
      }
label_10:
      return jsonNode2;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -925160311;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -176210260)) % 7U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = -921925744;
            continue;
          case 1:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 1046180535 ^ 1710065605;
              continue;
            }
            num3 = 1;
            break;
          case 2:
            num1 = (int) num2 * 1302884184 ^ -1170883792;
            continue;
          case 3:
            goto label_1;
          case 4:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1818987199 ^ 219777702;
            continue;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 == 0 ? -1852919021 : (num4 = -187908250);
      }
label_11:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      try
      {
        return (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = -1115129414;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1350420392)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -120702220 ^ -993545162;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_6:
        return (JSONNode) null;
      }
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 getChildsD14 = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
        getChildsD14.\u003C\u003E4__this = this;
label_1:
        int num1 = 1439881796;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1228559803)) % 3U)
          {
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD14;
              num1 = (int) num2 * -202432763 ^ 1810215187;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 1229541538;
        Dictionary<string, JSONNode>.Enumerator enumerator;
        KeyValuePair<string, JSONNode> N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1705203607)) % 19U)
          {
            case 0:
              goto label_4;
            case 1:
              N = enumerator.Current;
              num2 = 1595700260;
              continue;
            case 3:
              int num4;
              num2 = num4 = !enumerator.MoveNext() ? 544755061 : (num4 = 1094697539);
              continue;
            case 4:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 749858682 ^ 757537890;
              continue;
            case 5:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -570614282 ^ -1847423145;
              continue;
            case 6:
            case 16:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 1919039490;
              continue;
            case 7:
              goto label_14;
            case 8:
              int num5;
              num2 = num5 = num1 != 1 ? 158264235 : (num5 = 2018093823);
              continue;
            case 9:
              N = new KeyValuePair<string, JSONNode>();
              num2 = (int) num3 * 1048984547 ^ 1515836229;
              continue;
            case 10:
              num2 = (int) num3 * -1674255594 ^ -115677949;
              continue;
            case 11:
            case 15:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 1236847980;
              continue;
            case 12:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = (int) num3 * -11545242 ^ -319949800;
              continue;
            case 13:
              enumerator = this.m_Dict.GetEnumerator();
              num2 = (int) num3 * -155649967 ^ 2091116357;
              continue;
            case 14:
              goto label_1;
            case 17:
              int num6 = num1 != 0 ? -1432732157 : (num6 = -1793117394);
              num2 = num6 ^ (int) num3 * -261892906;
              continue;
            case 18:
              num2 = (int) num3 * -258707614 ^ -1805067137;
              continue;
            default:
              goto label_18;
          }
        }
label_4:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = 1;
        return true;
label_14:
        return false;
label_18:
        enumerator = new Dictionary<string, JSONNode>.Enumerator();
        return false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
    }

    public override string ToString()
    {
      string str1 = "{";
label_1:
      int num1 = -192524793;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -908765053)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -658400540 ^ 1307032141;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_11:
        int num3 = !enumerator.MoveNext() ? -436384738 : (num3 = -481828798);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -908765053)) % 8U)
          {
            case 0:
              goto label_11;
            case 1:
              current = enumerator.Current;
              flag = JSONClass.\u200F‬‎‍⁯⁭‫⁯‬⁪‎‎⁮⁫⁬‎⁯‌‪‎⁯‮⁮‎⁫‍‏⁮‍‎⁬‎⁪⁪⁯‎​‪​⁯‮(str1) > 2;
              num3 = -1434539823;
              continue;
            case 2:
              int num5 = flag ? 657021639 : (num5 = 1011828813);
              num3 = num5 ^ (int) num4 * 1612873456;
              continue;
            case 3:
              num3 = (int) num4 * 945734222 ^ 1474118265;
              continue;
            case 4:
              str1 = JSONClass.\u202C⁫⁬‎‬‫⁪⁭⁭⁮⁬​‌‏⁫‪⁯‫‎‬‭⁯⁪‪⁭‏‮‏‫⁮‏⁯‌⁯⁯⁫‌‌‏‫‮(str1, ", ");
              num3 = (int) num4 * 743689027 ^ -707177407;
              continue;
            case 6:
              str1 = JSONClass.\u206C⁬⁮‌‌‎⁮‪​‎‍⁭‭‍‭​⁭⁪⁫⁫⁬‍​‌‭⁭⁮‪‭⁮‮⁮⁮⁪⁬⁮‬​​‏‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206A‬‌⁭‪‬‍‭‎⁬​‫‭‬‎‎‪‮‏⁭‪⁬‮‭​‍⁯‭⁭‏‏⁯‪⁬‬‌⁯⁯‪‫‮((object) current.Value)
              });
              num3 = -1193359464;
              continue;
            case 7:
              num3 = -481828798;
              continue;
            default:
              goto label_15;
          }
        }
      }
label_15:
      string str2 = JSONClass.\u202C⁫⁬‎‬‫⁪⁭⁭⁮⁬​‌‏⁫‪⁯‫‎‬‭⁯⁪‪⁭‏‮‏‫⁮‏⁯‌⁯⁯⁫‌‌‏‫‮(str1, "}");
label_16:
      int num6 = -2046429524;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -908765053)) % 3U)
        {
          case 1:
            num6 = (int) num7 * -1095260701 ^ 730580390;
            continue;
          case 2:
            goto label_16;
          default:
            goto label_19;
        }
      }
label_19:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1537208776;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 226360426)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1282920322 ^ -766097949;
            continue;
          case 2:
            str = "{ ";
            num1 = (int) num2 * -611307127 ^ 1242140881;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_11:
        int num3 = !enumerator.MoveNext() ? 1990910659 : (num3 = 605486381);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 226360426)) % 9U)
          {
            case 1:
              current = enumerator.Current;
              num3 = 590511088;
              continue;
            case 2:
              str = JSONClass.\u202C⁫⁬‎‬‫⁪⁭⁭⁮⁬​‌‏⁫‪⁯‫‎‬‭⁯⁪‪⁭‏‮‏‫⁮‏⁯‌⁯⁯⁫‌‌‏‫‮(str, ", ");
              num3 = (int) num4 * 48802078 ^ 2030799307;
              continue;
            case 3:
              str = JSONClass.\u206C⁬⁮‌‌‎⁮‪​‎‍⁭‭‍‭​⁭⁪⁫⁫⁬‍​‌‭⁭⁮‪‭⁮‮⁮⁮⁪⁬⁮‬​​‏‮(new string[5]
              {
                str,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202C⁫⁬‎‬‫⁪⁭⁭⁮⁬​‌‏⁫‪⁯‫‎‬‭⁯⁪‪⁭‏‮‏‫⁮‏⁯‌⁯⁯⁫‌‌‏‫‮(aPrefix, "   "))
              });
              num3 = (int) num4 * -1089850972 ^ -1880436375;
              continue;
            case 4:
              goto label_11;
            case 5:
              num3 = 605486381;
              continue;
            case 6:
              flag = JSONClass.\u200F‬‎‍⁯⁭‫⁯‬⁪‎‎⁮⁫⁬‎⁯‌‪‎⁯‮⁮‎⁫‍‏⁮‍‎⁬‎⁪⁪⁯‎​‪​⁯‮(str) > 3;
              num3 = (int) num4 * -2080941141 ^ -10357533;
              continue;
            case 7:
              str = JSONClass.\u206A‍⁬⁬⁭‍⁫‬‬‏‏⁯​‭‪⁬​‬‬⁪‬⁬⁪‎⁭‫‎⁮‭‏‌‮‬⁫⁫‬⁬‎‭‬‮(str, "\n", aPrefix, "   ");
              num3 = 737811089;
              continue;
            case 8:
              int num5 = !flag ? 1411908267 : (num5 = 219377042);
              num3 = num5 ^ (int) num4 * -533911376;
              continue;
            default:
              goto label_17;
          }
        }
      }
label_17:
      return JSONClass.\u206A‍⁬⁬⁭‍⁫‬‬‏‏⁯​‭‪⁬​‬‬⁪‬⁬⁪‎⁭‫‎⁮‭‏‌‮‬⁫⁫‬⁬‎‭‬‮(str, "\n", aPrefix, "}");
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1807203846;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -294153068)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            JSONClass.\u206A⁪‎‪⁫‫⁯⁫⁯⁫‎‫‬⁫‌⁮‫⁪⁯⁭​‏‮⁪‭‏⁬⁭‫‎‎‬‬‪⁯⁯‭⁮‮⁭‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 883340135 ^ -2113877804;
            continue;
          case 2:
            JSONClass.\u200F⁬⁭⁮‭‍‌⁯⁫‮‍⁯‫⁮‎⁬⁮‭‌‭‏‫⁭​‪​⁮‌⁫‪‏‭‫⁯⁮⁪‎‪​‪‮(aWriter, (byte) 2);
            num1 = (int) num2 * 92656850 ^ -561921255;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? -384087623 : (num3 = -576423104);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -294153068)) % 7U)
          {
            case 0:
              num3 = (int) num4 * 243265742 ^ -1380549725;
              continue;
            case 1:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -339591548 ^ -596053877;
              continue;
            case 2:
              goto label_14;
            case 3:
              current = enumerator.Current;
              num3 = -1844009933;
              continue;
            case 4:
              goto label_15;
            case 5:
              JSONClass.\u202C⁭‎⁮⁭⁫‬⁭​⁫‍‭⁪⁮‌‍‬⁭⁭‬⁯​‭‭‮⁪‪⁭⁫‌‪‏​‎‏‌⁮‎‏⁮‮(aWriter, current);
              num3 = (int) num4 * 2016732163 ^ -1654217906;
              continue;
            case 6:
              num3 = -576423104;
              continue;
            default:
              goto label_9;
          }
        }
label_15:
        return;
label_9:;
      }
    }

    static bool \u202B⁯⁬‏⁪‪‬‏‌‫​‫‌⁪‭‭⁭⁭‏⁭‭‪‭‬‭⁯⁯‍‭⁯⁫‎⁬⁮​⁬⁭‍​⁬‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200F‬‎‍⁯⁭‫⁯‬⁪‎‎⁮⁫⁬‎⁯‌‪‎⁯‮⁮‎⁫‍‏⁮‍‎⁬‎⁪⁪⁯‎​‪​⁯‮([In] string obj0) => obj0.Length;

    static string \u202C⁫⁬‎‬‫⁪⁭⁭⁮⁬​‌‏⁫‪⁯‫‎‬‭⁯⁪‪⁭‏‮‏‫⁮‏⁯‌⁯⁯⁫‌‌‏‫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206A‬‌⁭‪‬‍‭‎⁬​‫‭‬‎‎‪‮‏⁭‪⁬‮‭​‍⁯‭⁭‏‏⁯‪⁬‬‌⁯⁯‪‫‮([In] object obj0) => obj0.ToString();

    static string \u206C⁬⁮‌‌‎⁮‪​‎‍⁭‭‍‭​⁭⁪⁫⁫⁬‍​‌‭⁭⁮‪‭⁮‮⁮⁮⁪⁬⁮‬​​‏‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206A‍⁬⁬⁭‍⁫‬‬‏‏⁯​‭‪⁬​‬‬⁪‬⁬⁪‎⁭‫‎⁮‭‏‌‮‬⁫⁫‬⁬‎‭‬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200F⁬⁭⁮‭‍‌⁯⁫‮‍⁯‫⁮‎⁬⁮‭‌‭‏‫⁭​‪​⁮‌⁫‪‏‭‫⁯⁮⁪‎‪​‪‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206A⁪‎‪⁫‫⁯⁫⁯⁫‎‫‬⁫‌⁮‫⁪⁯⁭​‏‮⁪‭‏⁬⁭‫‎‎‬‬‪⁯⁯‭⁮‮⁭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202C⁭‎⁮⁭⁫‬⁭​⁫‍‭⁪⁮‌‍‬⁭⁭‬⁯​‭‭‮⁪‪⁭⁫‌‪‏​‎‏‌⁮‎‏⁮‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
