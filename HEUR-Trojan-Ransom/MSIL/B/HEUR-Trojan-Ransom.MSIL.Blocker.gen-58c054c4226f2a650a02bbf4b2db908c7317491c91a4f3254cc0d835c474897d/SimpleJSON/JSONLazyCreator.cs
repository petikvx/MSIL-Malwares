// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: EraIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: DF309F35-9A6B-48AA-8FAD-6A916AD051A5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-58c054c4226f2a650a02bbf4b2db908c7317491c91a4f3254cc0d835c474897d.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 1216663390;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1899110943)) % 4U)
        {
          case 0:
            this.m_Node = aNode;
            this.m_Key = aKey;
            num1 = (int) num2 * -178653804 ^ 1928084400;
            continue;
          case 1:
            num1 = (int) num2 * -1679006150 ^ 560280197;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -641849943;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -654666805)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 249749191 ^ -113733928;
            continue;
          case 2:
            int num3 = this.m_Key != null ? -1038974129 : (num3 = -661167884);
            num1 = num3 ^ (int) num2 * 1246551381;
            continue;
          case 3:
            num1 = (int) num2 * 1270039310 ^ 1514494541;
            continue;
          case 5:
            num1 = (int) num2 * 2099888604 ^ 542555072;
            continue;
          case 6:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = -253648776;
            continue;
          case 7:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -114322353 ^ -2042922037;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this);
      set
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = 769041553;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 840175904)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 28187767 ^ 140698463;
              continue;
            case 1:
              goto label_3;
            case 2:
              goto label_1;
            case 3:
              aVal.Add(value);
              num1 = (int) num2 * -1868349304 ^ -1731870766;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1474225163 ^ -1252156573;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
label_1:
        int num1 = 1690481159;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1158111648)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * 1525958804 ^ -53004477;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1296497769;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -22116304)) % 6U)
          {
            case 0:
              num1 = (int) num2 * -1120334078 ^ 1546437562;
              continue;
            case 1:
              num1 = (int) num2 * -2077535052 ^ 426798696;
              continue;
            case 2:
              goto label_3;
            case 3:
              aVal = new JSONClass();
              aVal.Add(aKey, value);
              num1 = (int) num2 * 1893838417 ^ 203745911;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 196720240 ^ -1801725903;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = 290726194;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 868133217)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1665351457 ^ -1760382618;
            continue;
          case 2:
            goto label_3;
          case 3:
            aVal = new JSONArray();
            aVal.Add(aItem);
            num1 = (int) num2 * 1756123543 ^ 252103325;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 172705498;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 604551340)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal.Add(aKey, aItem);
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -913699307 ^ -813364019;
            continue;
          case 2:
            aVal = new JSONClass();
            num1 = (int) num2 * -596165923 ^ 149570379;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 833662300;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2033512249)) % 6U)
        {
          case 0:
            flag1 = (object) a == b;
            num1 = 499855984;
            continue;
          case 2:
            int num3 = flag2 ? -1511134659 : (num3 = -2008827371);
            num1 = num3 ^ (int) num2 * 50814269;
            continue;
          case 3:
            goto label_1;
          case 4:
            flag1 = true;
            num1 = (int) num2 * -1341115054 ^ -1040206776;
            continue;
          case 5:
            flag2 = b == null;
            num1 = (int) num2 * 1481156973 ^ -2038799328;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag1;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 808891666;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1919942711)) % 4U)
        {
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * 1239365246 ^ -195079386;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 242153178 ^ -1876740871;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 469189129;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 990706544)) % 7U)
        {
          case 0:
            num1 = (int) num2 * 1592497369 ^ -1244923207;
            continue;
          case 1:
            int num3 = flag1 ? 324238461 : (num3 = 1849595666);
            num1 = num3 ^ (int) num2 * 1728358683;
            continue;
          case 2:
            flag1 = obj == null;
            num1 = (int) num2 * 1492988890 ^ 1520729688;
            continue;
          case 3:
            flag2 = true;
            num1 = (int) num2 * -1832174726 ^ -1857814866;
            continue;
          case 5:
            flag2 = (object) this == obj;
            num1 = 541366785;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_8:
      return flag2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1724044121;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1823903219)) % 4U)
        {
          case 1:
            num1 = (int) num2 * -1649573829 ^ 1980368166;
            continue;
          case 2:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 602165740 ^ -1849214244;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString()
    {
      string str = "";
label_1:
      int num1 = -1436288445;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -88852541)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 588256814 ^ -885776307;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1362309337;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1068008383)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 351506743 ^ 1638960344;
            continue;
          case 2:
            str = "";
            num1 = (int) num2 * 235551307 ^ 30497212;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = 96463453;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 756332508)) % 6U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1315173552 ^ -1053887939;
              continue;
            case 1:
              aVal = new JSONData(0);
              num1 = (int) num2 * 391999200 ^ -193914054;
              continue;
            case 3:
              asInt = 0;
              num1 = (int) num2 * -1478593360 ^ -929380830;
              continue;
            case 4:
              goto label_1;
            case 5:
              num1 = (int) num2 * 161321746 ^ -945592791;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = -65090609;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -835228775)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 421929770 ^ -1890774552;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = 1770972109;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2024113828)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1640116544 ^ 1057402339;
              continue;
            case 3:
              num1 = (int) num2 * 266854271 ^ -757508103;
              continue;
            case 4:
              asFloat = 0.0f;
              num1 = (int) num2 * 542115423 ^ 59160706;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 1412756723;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1754597184)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1037497947 ^ 484165503;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
label_1:
        int num1 = 674243732;
        JSONData aVal;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1293059098)) % 6U)
          {
            case 0:
              asDouble = 0.0;
              num1 = (int) num2 * -811703860 ^ -1343279069;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1915142976 ^ -933654164;
              continue;
            case 2:
              aVal = new JSONData(0.0);
              num1 = (int) num2 * -809422457 ^ -626566817;
              continue;
            case 4:
              goto label_1;
            case 5:
              num1 = (int) num2 * -1078458058 ^ 1495666121;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asDouble;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = -1958752442;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1650891775)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -747269189 ^ -1839959348;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = -457641981;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1742198444)) % 7U)
          {
            case 0:
              asBool = false;
              num1 = (int) num2 * 1655469323 ^ -1491165935;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 168750817 ^ -1177281814;
              continue;
            case 2:
              aVal = new JSONData(false);
              num1 = (int) num2 * 1105756736 ^ 1607816694;
              continue;
            case 3:
              num1 = (int) num2 * -997974333 ^ -191906479;
              continue;
            case 4:
              goto label_1;
            case 5:
              num1 = (int) num2 * -586722226 ^ 1222918783;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = -778332872;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1277273800)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -277207863 ^ -853704090;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = -1118523519;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -316534313)) % 5U)
          {
            case 0:
              num1 = (int) num2 * -1177866114 ^ -241080913;
              continue;
            case 2:
              asArray = aVal;
              num1 = (int) num2 * 1730639459 ^ -635901383;
              continue;
            case 3:
              goto label_1;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1628976081 ^ 1807998161;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = -2107492173;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1391348072)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1818055654 ^ -811397094;
              continue;
            case 2:
              asObject = aVal;
              num1 = (int) num2 * -768030162 ^ 221317055;
              continue;
            case 3:
              num1 = (int) num2 * -1847357203 ^ -1633695615;
              continue;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 59953792 ^ -1077888513;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
