// Decompiled with JetBrains decompiler
// Type: VMS.OSService.Concrete.PlatformServiceController.PlatformServiceController
// Assembly: VMS.OSP.Service, Version=1.4.2.0, Culture=neutral, PublicKeyToken=null
// MVID: 7B29B897-26BF-407B-B0D0-14253383A174
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.Win32.Patched.mf-06a1c79ea1bf078d9f5816243d6887697530720ed581c2975d99154e2a24648f.exe

using Microsoft.Win32;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.ServiceProcess;
using System.Threading;
using VMS.OSP.Services.Logging;
using VMS.OSService.Abstract;

namespace VMS.OSService.Concrete.PlatformServiceController
{
  public class PlatformServiceController : AbstractService
  {
    private const string cSysLogCategory = "PlatformServiceCtrl";
    private const string cApacheServiceName = "Apache2";
    private const double clTargetTimeHour = 2.0;
    private const double clTargetTimeMinute = 30.0;
    private const int ciExecutionPeriod = 24;
    private Timer _timer;
    private ServiceController _serviceController;

    public PlatformServiceController()
    {
      this._serviceController = new ServiceController("Apache2");
      this._timer = new Timer(new TimerCallback(this.OnTimer), (object) null, -1, -1);
    }

    internal override void OnCustomEvent(int command)
    {
    }

    protected void OnTimer(object o)
    {
      if (!this.IsApacheInstalledWithPlatformServer().Equals(true))
        return;
      this.RestartApache();
    }

    internal override void OnStart(string[] args)
    {
      try
      {
        this.WriteSysLog((OSP_SEVERITY) 6, "PlatformServiceCtrl", "PlatformServiceController Component started");
        if (!this.IsApacheInstalledWithPlatformServer().Equals(true))
          return;
        this.SetNextDueTime();
      }
      catch (Exception ex)
      {
        this.WriteSysLog((OSP_SEVERITY) 3, "PlatformServiceCtrl", ex.Message);
      }
    }

    internal override void OnStop()
    {
      try
      {
        this._timer.Change(-1, -1);
        this.WriteSysLog((OSP_SEVERITY) 6, "PlatformServiceCtrl", "PlatformServiceController Component stopped");
      }
      catch (Exception ex)
      {
        this.WriteSysLog((OSP_SEVERITY) 3, "PlatformServiceCtrl", ex.Message);
      }
    }

    private void SetNextDueTime()
    {
      DateTime dateTime = DateTime.Today.AddHours(2.0);
      dateTime = dateTime.AddMinutes(30.0);
      TimeSpan dueTime = dateTime.Subtract(DateTime.Now);
      if (dueTime.Ticks < 0L)
        dueTime = dueTime.Add(new TimeSpan(24, 0, 0));
      this._timer.Change(dueTime, new TimeSpan(0, 24, 0, 0, 0));
      this.WriteSysLog((OSP_SEVERITY) 6, "PlatformServiceCtrl", string.Format("Time duration until first execution: {0}", (object) dueTime));
    }

    private void RestartApache()
    {
      try
      {
        ServiceControllerStatus status = this._serviceController.Status;
        this.WriteSysLog((OSP_SEVERITY) 6, "PlatformServiceCtrl", string.Format("Status of {0}: {1}", (object) "Apache2", (object) this._serviceController.Status.ToString()));
        if (!status.Equals((object) ServiceControllerStatus.Running))
          return;
        this.WriteSysLog((OSP_SEVERITY) 6, "PlatformServiceCtrl", string.Format("Stopping {0}.", (object) "Apache2"));
        this._serviceController.Stop();
        this._serviceController.WaitForStatus(ServiceControllerStatus.Stopped, new TimeSpan(0, 0, 20));
        this.WriteSysLog((OSP_SEVERITY) 6, "PlatformServiceCtrl", string.Format("Status of {0}: {1}", (object) "Apache2", (object) this._serviceController.Status.ToString()));
        this.KillAllProcessesSyncNamed("rotatelogs");
        this.WriteSysLog((OSP_SEVERITY) 6, "PlatformServiceCtrl", string.Format("Starting {0}.", (object) "Apache2"));
        this._serviceController.Start();
        this._serviceController.WaitForStatus(ServiceControllerStatus.Running, new TimeSpan(0, 0, 20));
        this.WriteSysLog((OSP_SEVERITY) 6, "PlatformServiceCtrl", string.Format("Status of {0}: {1}", (object) "Apache2", (object) this._serviceController.Status.ToString()));
      }
      catch (InvalidOperationException ex)
      {
        this.WriteSysLog((OSP_SEVERITY) 3, "PlatformServiceCtrl", string.Format("Restarting {0} failed. Reason: {1}", (object) "Apache2", (object) ex.Message));
      }
      catch (Win32Exception ex)
      {
        this.WriteSysLog((OSP_SEVERITY) 3, "PlatformServiceCtrl", string.Format("Restarting {0} failed. Reason: {1}", (object) "Apache2", (object) ex.Message));
      }
      catch (Exception ex)
      {
        this.WriteSysLog((OSP_SEVERITY) 3, "PlatformServiceCtrl", string.Format("Restarting {0} failed. Reason: {1}", (object) "Apache2", (object) ex.Message));
      }
    }

    private void KillAllProcessesSyncNamed(string processName)
    {
      foreach (Process process in Process.GetProcessesByName(processName))
      {
        try
        {
          process.Kill();
          process.WaitForExit();
        }
        catch
        {
        }
      }
    }

    private bool IsApacheInstalledWithPlatformServer()
    {
      bool flag = false;
      try
      {
        string name = "SOFTWARE\\Varian Medical Systems\\OS\\ProductLine\\Platform Server";
        using (RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(name))
        {
          if (registryKey != null)
          {
            flag = true;
            this.WriteSysLog((OSP_SEVERITY) 6, "PlatformServiceCtrl", string.Format("Platform Server installation detected."));
          }
          else
            flag = false;
        }
      }
      catch (Exception ex)
      {
        flag = false;
        this.WriteSysLog((OSP_SEVERITY) 3, "PlatformServiceCtrl", string.Format("Could not retrieve registry key. Reason: {0}", (object) ex.Message));
      }
      return flag;
    }
  }
}
