// Decompiled with JetBrains decompiler
// Type: fLaSh.Dissembler.StringTable
// Assembly: Pass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B2D05123-D1EE-4E11-B4EC-79932D637F25
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.ajjm-b001e2657b2764cdbd2d9790e4eb90ffd0dc35ed5746bdc109cf01610ec1d1c3.exe

using In2aXkPRwyNprNdGJT;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;

namespace fLaSh.Dissembler
{
  public class StringTable : ResourceTable
  {
    private Dictionary<string, StringResource> Djw4f8j4jQ;

    public Dictionary<string, StringResource> Strings
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.Djw4f8j4jQ;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public StringTable(IntPtr lpRes)
    {
      rbdjPoeaA1BgLlupgC.XYjXOJ9ztPdU4();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.Read(lpRes);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override IntPtr Read(IntPtr lpRes)
    {
      this.Djw4f8j4jQ = new Dictionary<string, StringResource>();
      StringResource stringResource;
      for (IntPtr lpRes1 = base.Read(lpRes); lpRes1.ToInt32() < lpRes.ToInt32() + (int) this._header.wLength; lpRes1 = ResourceUtil.Align(lpRes1.ToInt32() + (int) stringResource.Header.wLength))
      {
        stringResource = new StringResource(lpRes1);
        this.Djw4f8j4jQ.Add(stringResource.Key, stringResource);
      }
      return new IntPtr(lpRes.ToInt32() + (int) this._header.wLength);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override void Write(BinaryWriter w)
    {
      long position = w.BaseStream.Position;
      base.Write(w);
      Dictionary<string, StringResource>.Enumerator enumerator = this.Djw4f8j4jQ.GetEnumerator();
      while (enumerator.MoveNext())
        enumerator.Current.Value.Write(w);
      ResourceUtil.PadToDWORD(w);
      ResourceUtil.WriteAt(w, w.BaseStream.Position - position, position);
    }

    public string this[string key]
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this.Djw4f8j4jQ[key].Value;
      [MethodImpl(MethodImplOptions.NoInlining)] set
      {
        StringResource stringResource = (StringResource) null;
        if (!this.Djw4f8j4jQ.TryGetValue(key, out stringResource))
        {
          stringResource = new StringResource(key);
          this.Djw4f8j4jQ.Add(key, stringResource);
        }
        stringResource.Value = value;
      }
    }
  }
}
