// Decompiled with JetBrains decompiler
// Type: 073564145303.513888654302
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003073564145303;
using \u003463056308027;
using \u003960738779841;
using Microsoft.ProgramSynthesis.DslLibrary.Dates;
using Microsoft.ProgramSynthesis.Utils;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace \u003073564145303
{
  public class \u003513888654302 : \u003752563925647
  {
    public \u003513888654302(string naValue)
      : base(\u003547566135655.DateTime, (Dictionary<string, string>) null, naValue)
    {
    }

    public \u003513888654302(DateTimeFormat format, Dictionary<string, string> substitutions)
      : base(\u003547566135655.DateTime, substitutions)
    {
      this.\u003075930419454 = format;
    }

    public DateTimeFormat \u003075930419454 { get; }

    public bool \u003285820676843
    {
      get
      {
        if (!this.\u003463227775507)
        {
          DateTimePartSet matchedParts1 = this.\u003075930419454.MatchedParts;
          if (((DateTimePartSet) ref matchedParts1).Contains((DateTimePart) 0))
          {
            DateTimePartSet matchedParts2 = this.\u003075930419454.MatchedParts;
            if (((DateTimePartSet) ref matchedParts2).Contains((DateTimePart) 1))
            {
              DateTimePartSet matchedParts3 = this.\u003075930419454.MatchedParts;
              return ((DateTimePartSet) ref matchedParts3).Contains((DateTimePart) 2);
            }
          }
        }
        return false;
      }
    }

    public bool \u003151745816375
    {
      get
      {
        if (this.\u003463227775507)
          return false;
        DateTimePartSet matchedParts1 = this.\u003075930419454.MatchedParts;
        if (!((DateTimePartSet) ref matchedParts1).Contains((DateTimePart) 3))
        {
          DateTimePartSet matchedParts2 = this.\u003075930419454.MatchedParts;
          if (!((DateTimePartSet) ref matchedParts2).Contains((DateTimePart) 7))
            return false;
        }
        DateTimePartSet matchedParts3 = this.\u003075930419454.MatchedParts;
        return ((DateTimePartSet) ref matchedParts3).Contains((DateTimePart) 4);
      }
    }

    public bool \u003958478973093
    {
      get
      {
        if (this.\u003463227775507)
          return false;
        DateTimePartSet matchedParts = this.\u003075930419454.MatchedParts;
        return ((DateTimePartSet) ref matchedParts).Contains((DateTimePart) 5);
      }
    }

    public bool \u003304209070870
    {
      get
      {
        if (this.\u003463227775507)
          return false;
        DateTimePartSet matchedParts = this.\u003075930419454.MatchedParts;
        return ((DateTimePartSet) ref matchedParts).Contains((DateTimePart) 6);
      }
    }

    public bool \u003573016888162 => this.\u003285820676843 && this.\u003151745816375;

    public virtual \u003547566135655 \u003858272011872
    {
      get
      {
        if (this.\u003573016888162)
          return \u003547566135655.DateTime;
        return !this.\u003285820676843 ? \u003547566135655.Time : \u003547566135655.Date;
      }
    }

    private string \u003404494826864(string _param1_1) => this.\u003803720777683.Concat<KeyValuePair<string, string>>((IEnumerable<KeyValuePair<string, string>>) this.\u003838478326228).Aggregate<KeyValuePair<string, string>, string>(_param1_1, (Func<string, KeyValuePair<string, string>, string>) ((_param1_2, _param2) => _param1_2.Replace(_param2.Key, _param2.Value)));

    public virtual Optional<string> \u003693810465230(string _param1)
    {
      if (this.\u003013635168359.HasValue && _param1 == this.\u003013635168359.Value)
        return Optional<string>.Nothing;
      _param1 = this.\u003404494826864(_param1);
      Optional<DateTimeFormatMatch> optional = DateTimeFormatUtil.Parse(this.\u003075930419454, _param1);
      if (!optional.HasValue)
        return Optional<string>.Nothing;
      Optional<DateTime> dateTime1 = optional.Value.PartialDateTime.ToDateTime();
      if (!dateTime1.HasValue)
        return Optional<string>.Nothing;
      DateTime dateTime2 = dateTime1.Value;
      StringBuilder stringBuilder = new StringBuilder();
      if (this.\u003285820676843)
        stringBuilder.Append("yyyy-MM-dd");
      if (this.\u003151745816375)
      {
        if (stringBuilder.Length > 0)
          stringBuilder.Append("T");
        stringBuilder.Append("HH:mm");
        if (this.\u003958478973093)
          stringBuilder.Append(":ss");
        if (this.\u003304209070870)
          stringBuilder.Append(".sss");
      }
      string format = stringBuilder.ToString();
      return !string.IsNullOrEmpty(format) ? OptionalUtils.Some<string>(dateTime2.ToString(format)) : Optional<string>.Nothing;
    }

    public virtual bool \u003003415664282(string _param1) => !this.\u003463227775507 ? DateTimeFormatUtil.Parse(this.\u003075930419454, this.\u003404494826864(_param1)).HasValue : _param1 == this.\u003013635168359.Value;

    public virtual bool \u003558607857246(\u003752563925647 _param1)
    {
      if (_param1 == this)
        return true;
      return _param1 != null && !Optional<string>.op_Inequality(this.\u003013635168359, _param1.\u003013635168359) && _param1 is \u003513888654302 obj && obj.\u003075930419454.Equals(this.\u003075930419454);
    }

    public virtual string \u003359876114394() => !this.\u003463227775507 ? ((object) this.\u003075930419454).ToString() : this.\u003013635168359.Value;
  }
}
