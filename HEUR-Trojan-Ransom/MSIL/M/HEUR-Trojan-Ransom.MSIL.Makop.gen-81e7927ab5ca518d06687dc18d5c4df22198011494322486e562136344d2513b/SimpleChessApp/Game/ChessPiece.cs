// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.ChessPiece
// Assembly: 司6, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E96108F1-63B0-49D9-ABCC-EB6314F0AFE2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-81e7927ab5ca518d06687dc18d5c4df22198011494322486e562136344d2513b.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class ChessPiece
  {
    public int Id;
    public Pieces Kind;
    public PieceColor Color;
    public Square Home;
    public bool Passant;
    public Square Current;
    private static int idd = 0;

    public ChessPiece(Square h, Pieces p, PieceColor c)
    {
label_1:
      int num1 = 705393093;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1808116810)) % 6U)
        {
          case 0:
            this.Current = this.Home = h;
            num1 = (int) num2 * -423507700 ^ -731936397;
            continue;
          case 1:
            goto label_3;
          case 2:
            this.Kind = p;
            this.Color = c;
            num1 = (int) num2 * -1426566961 ^ -545568884;
            continue;
          case 3:
            goto label_1;
          case 4:
            this.Id = ChessPiece.idd++;
            num1 = (int) num2 * -256334981 ^ -390358026;
            continue;
          case 5:
            num1 = (int) num2 * 643967160 ^ -269935342;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public ChessPiece(Pieces p, PieceColor c)
    {
label_1:
      int num1 = 1385916569;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1270911155)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1155383783 ^ -1737390095;
            continue;
          case 2:
            this.Id = ChessPiece.idd++;
            this.Kind = p;
            num1 = (int) num2 * -1069434880 ^ 777517030;
            continue;
          case 3:
            goto label_3;
          case 4:
            this.Color = c;
            num1 = (int) num2 * -132465508 ^ 22738139;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public string SpecialName
    {
      get
      {
label_1:
        int num1 = 698483317;
        string specialName;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 647545096)) % 4U)
          {
            case 1:
              specialName = ChessPiece.\u206A​⁭‌⁯‎⁯‭⁬⁪⁭‎⁫⁫‎‍‏⁪⁪​‬‎​‏​‪​⁬‬‪‮‮⁯⁫⁪‏⁫‌‪‮(\u003CModule\u003E.\u200C‍⁭⁭​⁮⁪⁪‮‍‮​⁫⁪⁯⁯‌⁫‎‮‮‍⁬‫‎⁭⁪⁮⁬‌⁮‎​⁪‎‬⁭‍‮‪‮<string>(2974667949U), (object) this.Current.Name, (object) this.Kind);
              num1 = (int) num2 * 1226649416 ^ -1914927642;
              continue;
            case 2:
              num1 = (int) num2 * -2041502294 ^ 1502082640;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return specialName;
      }
    }

    static string \u206A​⁭‌⁯‎⁯‭⁬⁪⁭‎⁫⁫‎‍‏⁪⁪​‬‎​‏​‪​⁬‬‪‮‮⁯⁫⁪‏⁫‌‪‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2)
    {
      return string.Format(obj0, obj1, obj2);
    }
  }
}
