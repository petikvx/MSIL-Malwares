// Decompiled with JetBrains decompiler
// Type: OOP_TeamWork.Hero
// Assembly: OOP-TeamWork, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 78E60F07-1B9F-418F-8C6F-A1FA2CABDF45
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\HEUR-Trojan.MSIL.Picsys.gen-5866008a90168b7835b8f8b3d25aa43b6aaafd059e7519932278729ceae256ba.exe

using OOP_TeamWork.Interfaces;
using System;
using System.Windows.Forms;

namespace OOP_TeamWork
{
  public abstract class Hero : Unit, IMovable, IKeyboardControlable
  {
    public Hero(int x, int y, int width, int height, int health, int atack, int defense)
      : base(x, y, width, height, health, atack, defense)
    {
    }

    public void TakeItem(Item item)
    {
      if (item is Key)
        throw new Exception("You Won!");
      this.CurrentHealth += item.bonusHealth;
      this.attack += item.bonusAttack;
      this.defense += item.bonusDeffense;
      item.isUsed = true;
    }

    public event EventHandler OnRightPressed;

    public event EventHandler OnLeftPressed;

    public event EventHandler OnUpPressed;

    public event EventHandler OnDownPressed;

    private void FormKeyDown(object sender, KeyEventArgs e)
    {
      switch (e.KeyCode)
      {
        case Keys.A:
          if (this.OnLeftPressed == null)
            break;
          this.OnLeftPressed((object) this, new EventArgs());
          break;
        case Keys.D:
          if (this.OnRightPressed == null)
            break;
          this.OnRightPressed((object) this, new EventArgs());
          break;
        case Keys.S:
          if (this.OnDownPressed == null)
            break;
          this.OnDownPressed((object) this, new EventArgs());
          break;
        case Keys.W:
          if (this.OnUpPressed == null)
            break;
          this.OnUpPressed((object) this, new EventArgs());
          break;
      }
    }
  }
}
