// Decompiled with JetBrains decompiler
// Type: 735835744741.635634153482
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003495551109921;
using \u003735835744741;
using \u003882244590153;
using Microsoft.ProgramSynthesis.Utils;
using System;
using System.Collections.Generic;
using System.Linq;

namespace \u003735835744741
{
  internal class \u003635634153482 : \u003337930467789
  {
    private static readonly \u003212044566473[] \u003481944482668 = new \u003212044566473[2]
    {
      \u003212044566473.Utf16Le,
      \u003212044566473.Utf16Be
    };

    public virtual int \u003139865741539 => 50;

    public virtual double \u003868142328344 => 0.01;

    protected virtual IEnumerable<\u003212044566473> \u003872863857699 => (IEnumerable<\u003212044566473>) \u003635634153482.\u003481944482668;

    protected override void ApplyHeuristics(byte[] buffer)
    {
      if (this.\u003615656070883 != \u003212044566473.Utf16Le && this.\u003615656070883 != \u003212044566473.Utf16Be)
        return;
      int num1 = CollectionUtils.TakeEvery<byte>((IEnumerable<byte>) buffer, 2).Count<byte>((Func<byte, bool>) (_param1 => _param1 == (byte) 0));
      int num2 = CollectionUtils.TakeEvery<byte>(((IEnumerable<byte>) buffer).Skip<byte>(1), 2).Count<byte>((Func<byte, bool>) (_param1 => _param1 == (byte) 0));
      if (num2 == 0)
      {
        if (this.\u003615656070883 != \u003212044566473.Utf16Le)
          return;
        this.\u003615656070883 = \u003212044566473.Utf16Be;
      }
      else if (num1 == 0)
      {
        if (this.\u003615656070883 != \u003212044566473.Utf16Be)
          return;
        this.\u003615656070883 = \u003212044566473.Utf16Le;
      }
      else if (this.\u003615656070883 == \u003212044566473.Utf16Be && (double) num2 / (double) num1 > 1.414)
      {
        this.\u003615656070883 = \u003212044566473.Utf16Le;
      }
      else
      {
        if (this.\u003615656070883 != \u003212044566473.Utf16Le || (double) num1 / (double) num2 <= 1.414)
          return;
        this.\u003615656070883 = \u003212044566473.Utf16Be;
      }
    }

    protected override bool DetectFromBom(byte[] buffer)
    {
      if (buffer.Length >= 2 && buffer[0] == (byte) 254 && buffer[1] == byte.MaxValue)
      {
        this.\u003615656070883 = \u003212044566473.Utf16Be;
        return true;
      }
      if (buffer.Length < 2 || buffer[0] != byte.MaxValue || buffer[1] != (byte) 254)
        return false;
      this.\u003615656070883 = \u003212044566473.Utf16Le;
      return true;
    }
  }
}
