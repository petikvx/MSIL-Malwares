// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: LoadHi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 984E9D2E-DA60-4984-B27B-15EC3C1BAA14
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-5f4b796f8ee524790172ed29cc21d32e43d347e3c306781f420d7844e0a776c9.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -307154935;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1266321580)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1084825866 ^ 675051731;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 971289420;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1865318606)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              str = "";
              num1 = (int) num2 * -709467021 ^ -1839677077;
              continue;
            case 3:
              num1 = (int) num2 * -1734759207 ^ -918294944;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -1619893395;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -239683178)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 318333407 ^ 1881291355;
              continue;
            case 3:
              count = 0;
              num1 = (int) num2 * -330007133 ^ 1609605190;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 576850995;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 471259838)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * -1604415391 ^ 1525470968;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * -696526808 ^ -670189744;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -177546125;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1285294052)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1235210437 ^ -1368125141;
            continue;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -671526819 ^ 938686602;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1150727822;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1290981359)) % 3U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -232935284 ^ -246043330;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -1197212171;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -948881576)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -313734732 ^ -314437857;
            continue;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -1241932866 ^ 1497096294;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
label_1:
        int num1 = 1408236219;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 699178765)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * 1893433547 ^ 722254881;
              continue;
            case 2:
              getChildsD17.\u003C\u003E4__this = this;
              num1 = (int) num2 * 2137946609 ^ -7482338;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        bool deepChilds;
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = 1498584438;
          IEnumerator<JSONNode> enumerator1;
          JSONNode C;
          IEnumerator<JSONNode> enumerator2;
          JSONNode D;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ 455195016)) % 33U)
            {
              case 0:
                this.\u003C\u003E2__current = D;
                this.\u003C\u003E1__state = 1;
                num2 = (int) num3 * -1669315717 ^ -293925307;
                continue;
              case 1:
                num2 = (int) num3 * -4453279 ^ 152124982;
                continue;
              case 2:
                int num4 = num1 != 0 ? 1991457101 : (num4 = 2029472758);
                num2 = num4 ^ (int) num3 * 617700331;
                continue;
              case 3:
                goto label_1;
              case 4:
                int num5;
                num2 = num5 = JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u206D‌‬‮‌‏​‪⁮‏⁪‏‬‬⁭‫‍‌‬⁯⁭‍‭‫⁮​‍‬‮‍⁪​‌⁯‪‍⁭‫‏⁭‮((IEnumerator) enumerator1) ? 1746613926 : (num5 = 197274388);
                continue;
              case 6:
                num2 = (int) num3 * -577286125 ^ 848440678;
                continue;
              case 7:
                int num6;
                num2 = num6 = num1 != 1 ? 1168156282 : (num6 = 2137823944);
                continue;
              case 8:
                enumerator2 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * 1199398994 ^ 296719467;
                continue;
              case 9:
              case 18:
                this.\u003C\u003E1__state = -4;
                num2 = 871845086;
                continue;
              case 10:
                int num7;
                num2 = num7 = !JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u206D‌‬‮‌‏​‪⁮‏⁪‏‬‬⁭‫‍‌‬⁯⁭‍‭‫⁮​‍‬‮‍⁪​‌⁯‪‍⁭‫‏⁭‮((IEnumerator) enumerator2) ? 11411203 : (num7 = 1801956503);
                continue;
              case 11:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -1164343771 ^ -303106355;
                continue;
              case 12:
                deepChilds = false;
                num2 = 1661078004;
                continue;
              case 13:
                this.\u003C\u003Em__Finally2();
                num2 = (int) num3 * -391492814 ^ 2016978400;
                continue;
              case 14:
              case 27:
                this.\u003C\u003E1__state = -1;
                num2 = 1572568641;
                continue;
              case 15:
                num2 = (int) num3 * -748159198 ^ -77076168;
                continue;
              case 16:
                num2 = (int) num3 * 179071980 ^ 1923553421;
                continue;
              case 17:
                enumerator1 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * 1590040618 ^ -964249727;
                continue;
              case 19:
                num2 = (int) num3 * -1001607228 ^ 1384469611;
                continue;
              case 20:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * 1322731670 ^ 880035417;
                continue;
              case 21:
                D = (JSONNode) null;
                num2 = (int) num3 * -540101586 ^ -628825711;
                continue;
              case 22:
                enumerator2 = C.DeepChilds.GetEnumerator();
                this.\u003C\u003E1__state = -4;
                num2 = (int) num3 * 2074299825 ^ 1842897416;
                continue;
              case 23:
                num2 = (int) num3 * -10255176 ^ 1315144157;
                continue;
              case 24:
                deepChilds = false;
                num2 = (int) num3 * 1239109658 ^ 755250938;
                continue;
              case 26:
                C = (JSONNode) null;
                num2 = (int) num3 * -19752553 ^ -2021347066;
                continue;
              case 28:
                enumerator1 = this.Childs.GetEnumerator();
                num2 = (int) num3 * 1546580446 ^ 1089165687;
                continue;
              case 30:
                D = enumerator2.Current;
                num2 = 634398009;
                continue;
              case 31:
                deepChilds = true;
                num2 = (int) num3 * -1441449225 ^ -684199824;
                continue;
              case 32:
                C = enumerator1.Current;
                num2 = 2036392326;
                continue;
              default:
                goto label_31;
            }
          }
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_31:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = -710710018;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -339815555)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1198113151 ^ 1199834692;
            continue;
          case 2:
            goto label_1;
          case 3:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1334019898 ^ 1507981015;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
label_1:
      int num1 = 1019714419;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1900160550)) % 4U)
        {
          case 1:
            str = nameof (JSONNode);
            num1 = (int) num2 * 598177063 ^ 1603753991;
            continue;
          case 2:
            num1 = (int) num2 * 546044592 ^ -208944422;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = 390603982;
        int result;
        int asInt;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2017540997)) % 8U)
          {
            case 1:
              asInt = 0;
              num1 = 1503952591;
              continue;
            case 2:
              num1 = (int) num2 * -1682785442 ^ -2021655407;
              continue;
            case 3:
              result = 0;
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -93446164 ^ 403618847;
              continue;
            case 4:
              asInt = result;
              num1 = (int) num2 * 1288233517 ^ -318638012;
              continue;
            case 5:
              num1 = (int) num2 * -298363142 ^ -1458284209;
              continue;
            case 6:
              int num3 = flag ? -1174947569 : (num3 = -1212711710);
              num1 = num3 ^ (int) num2 * -894200747;
              continue;
            case 7:
              goto label_1;
            default:
              goto label_9;
          }
        }
label_9:
        return asInt;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = 1632359320;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 14273904)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1393562743 ^ 885932154;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
label_1:
        int num1 = -781828862;
        bool flag;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -737524197)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -1311194409 ^ -206400422;
              continue;
            case 1:
              asFloat = 0.0f;
              num1 = -1143298218;
              continue;
            case 2:
              asFloat = result;
              num1 = (int) num2 * -1269148824 ^ 567364495;
              continue;
            case 3:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200F⁬‍⁪‮⁭⁫‏‌‍⁪⁬‭⁭⁫‬⁮⁪⁭​‌⁫‫⁫‭⁭‏‌​‫‭‏⁫‎‪‪⁭‭‏‮‮(), out result);
              num1 = (int) num2 * 1346282736 ^ -1174402063;
              continue;
            case 4:
              goto label_1;
            case 5:
              int num3 = flag ? 1102255543 : (num3 = 1551540559);
              num1 = num3 ^ (int) num2 * -2122630550;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asFloat;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = 2020212384;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1798407188)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 28823785 ^ -1090052186;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -967201935;
        double result;
        bool flag;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1269647361)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              asDouble = 0.0;
              num1 = -2011726244;
              continue;
            case 2:
              asDouble = result;
              num1 = (int) num2 * 863954027 ^ 1113808176;
              continue;
            case 4:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -1854326906 ^ -1637546640;
              continue;
            case 5:
              result = 0.0;
              num1 = (int) num2 * 873703117 ^ -742200232;
              continue;
            case 6:
              int num3 = flag ? -247122906 : (num3 = -1210361282);
              num1 = num3 ^ (int) num2 * 2019027221;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 327684729;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1599726568)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -723627559 ^ 1842130542;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
label_1:
        int num1 = 1885904050;
        bool result;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1789661631)) % 7U)
          {
            case 0:
              goto label_1;
            case 1:
              result = false;
              num1 = (int) num2 * 22055445 ^ 517765103;
              continue;
            case 3:
              int num3 = bool.TryParse(this.Value, out result) ? 1169595383 : (num3 = 1688964);
              num1 = num3 ^ (int) num2 * -728681999;
              continue;
            case 4:
              num1 = (int) num2 * 1396025139 ^ -459448995;
              continue;
            case 5:
              asBool = !JSONNode.\u200D‬‬‭‎‎⁪⁬​⁯​⁪⁫‏‎⁪⁭⁭‏⁫‎⁬‌‏⁬‬‍‫⁭‎‎‏​⁭‫‏‫‮‮‪‮(this.Value);
              num1 = 1540811308;
              continue;
            case 6:
              asBool = result;
              num1 = (int) num2 * 1978773387 ^ 1985552839;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -463255646;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2114118101)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -1891839267;
              continue;
            case 2:
              num1 = (int) num2 * 454898536 ^ 1873976243;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1024675702;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1791920932)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * 1615251074 ^ -82005955;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = -291350321;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -270653492)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -580260714 ^ -1558050903;
              continue;
            case 2:
              goto label_1;
            case 3:
              asObject = this as JSONClass;
              num1 = (int) num2 * 2062482002 ^ 1948262782;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 1707745085;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 365539587)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 1288180991 ^ 2045710995;
            continue;
          case 2:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -213850296 ^ 775824942;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -1144294355;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -1744809576)) % 5U)
        {
          case 0:
            num1 = (int) num2 * -106058646 ^ 812384531;
            continue;
          case 1:
            if (d == (object) null)
            {
              str2 = (string) null;
              break;
            }
            num1 = (int) num2 * 1076531831 ^ 999260020;
            continue;
          case 3:
            goto label_1;
          case 4:
            str2 = d.Value;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -1681358704;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_6;
label_1:
      int num1 = 769967513;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1152897455)) % 7U)
        {
          case 0:
            goto label_1;
          case 2:
            flag2 = true;
            num1 = (int) num2 * 983015453 ^ -1165393034;
            continue;
          case 3:
            flag2 = (object) a == b;
            num1 = 1207796178;
            continue;
          case 4:
            num1 = (int) num2 * 1858849554 ^ -384584190;
            continue;
          case 5:
            int num3 = !flag1 ? -2108877557 : (num3 = -1522995008);
            num1 = num3 ^ (int) num2 * -1225266599;
            continue;
          case 6:
            goto label_5;
          default:
            goto label_10;
        }
      }
label_5:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_7;
label_10:
      return flag2;
label_6:
      num4 = 0;
label_7:
      flag1 = num4 != 0;
      num1 = 1241082549;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
      bool flag = (object) this == obj;
label_1:
      int num1 = 1189003314;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1639937675)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1111955243 ^ 403428826;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 1844961926;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1408808671)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            hashCode = this.\u206C⁫⁮⁮‎‪⁬‭​‮⁪⁪‮​‏⁫‮‭‏⁯⁯‍‮‍‬‪‪​‫⁪​​​⁪‎⁪⁪‪‬⁮‮();
            num1 = (int) num2 * -25669730 ^ -1167751846;
            continue;
          case 3:
            num1 = (int) num2 * -448043210 ^ 690106095;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -1949046222;
      string str1;
      char ch1;
      string str2;
      int num2;
      string str3;
      char ch2;
      char ch3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -716765835)) % 30U)
        {
          case 0:
            num1 = (int) num3 * -815598660 ^ 741648666;
            continue;
          case 1:
            num1 = (int) num3 * 1282693858 ^ -1136901192;
            continue;
          case 2:
            num1 = (int) num3 * -879216329 ^ -204307416;
            continue;
          case 3:
            goto label_1;
          case 4:
            str3 = str1;
            num1 = (int) num3 * 1527201012 ^ -1577797983;
            continue;
          case 5:
            str1 = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str1, "\\\"");
            num1 = -1890840872;
            continue;
          case 6:
            ch1 = JSONNode.\u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮(str2, num2);
            num1 = -1972096713;
            continue;
          case 7:
label_20:
            str1 = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str1, "\\n");
            num1 = -494853189;
            continue;
          case 9:
            int num4;
            num1 = num4 = ch2 != '"' ? -157045429 : (num4 = -813501744);
            continue;
          case 10:
label_27:
            str1 = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str1, "\\r");
            num1 = -2060508250;
            continue;
          case 11:
label_23:
            str1 = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str1, "\\f");
            num1 = -1923829654;
            continue;
          case 12:
            num2 = 0;
            num1 = (int) num3 * 1687368024 ^ -410728578;
            continue;
          case 13:
            num1 = (int) num3 * 700589123 ^ 1791583571;
            continue;
          case 14:
label_14:
            str1 = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str1, "\\t");
            num1 = -1890561519;
            continue;
          case 15:
            num1 = (int) num3 * -1242982989 ^ -642946403;
            continue;
          case 16:
            num1 = (int) num3 * 541019098 ^ -1823633557;
            continue;
          case 17:
            num1 = (int) num3 * 1268825740 ^ 342835566;
            continue;
          case 18:
            num1 = (int) num3 * 325319525 ^ -1641382788;
            continue;
          case 19:
            ++num2;
            num1 = -1241316310;
            continue;
          case 20:
label_12:
            str1 = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str1, "\\b");
            num1 = -2107360213;
            continue;
          case 21:
            int num5;
            num1 = num5 = ch2 == '\\' ? -1482865771 : (num5 = -2062534366);
            continue;
          case 22:
label_5:
            str1 = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str1, ch1.ToString());
            num1 = -1923829654;
            continue;
          case 23:
            int num6;
            num1 = num6 = num2 >= JSONNode.\u206B‬‎⁬‍⁪‮‏‏⁮‍‌⁪‍‍⁬‫‮​⁪⁫⁭‏‭‬‍‏‮​⁭‪⁪⁭⁫⁪‎⁪⁬⁭‮(str2) ? -82142037 : (num6 = -1497217563);
            continue;
          case 24:
            ch3 = ch1;
            num1 = (int) num3 * -365264791 ^ 1991956268;
            continue;
          case 25:
            ch2 = ch3;
            switch (ch2)
            {
              case '\b':
                goto label_12;
              case '\t':
                goto label_14;
              case '\n':
                goto label_20;
              case '\v':
                goto label_5;
              case '\f':
                goto label_23;
              case '\r':
                goto label_27;
              default:
                num1 = (int) num3 * 940485847 ^ 1874130489;
                continue;
            }
          case 26:
            str1 = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str1, "\\\\");
            num1 = -1923829654;
            continue;
          case 27:
            str1 = "";
            str2 = aText;
            num1 = (int) num3 * -1916626361 ^ -252503058;
            continue;
          case 28:
            num1 = (int) num3 * -759046321 ^ 1179929974;
            continue;
          case 29:
            num1 = (int) num3 * -800810816 ^ 804217967;
            continue;
          default:
            goto label_32;
        }
      }
label_32:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
      JSONNode jsonNode1 = (JSONNode) null;
label_1:
      int num1 = 2107470425;
      string aItem;
      char ch1;
      char ch2;
      int num2;
      char ch3;
      bool flag1;
      bool flag2;
      JSONNode jsonNode2;
      string aKey;
      bool flag3;
      bool flag4;
      bool flag5;
      bool flag6;
      string s;
      bool flag7;
      char ch4;
      char ch5;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1700693056)) % 155U)
        {
          case 0:
          case 17:
          case 89:
          case 97:
          case 134:
label_44:
            ++num2;
            num1 = 441418851;
            continue;
          case 1:
            num1 = (int) num3 * -45273736 ^ 912339279;
            continue;
          case 2:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1025159888 ^ -1940702769;
            continue;
          case 3:
            num1 = (int) num3 * -1032443280 ^ -740063728;
            continue;
          case 4:
            int num4 = ch4 > ' ' ? -1778188066 : (num4 = -1297228485);
            num1 = num4 ^ (int) num3 * 2137464106;
            continue;
          case 5:
            int num5 = flag3 ? -1817033835 : (num5 = -586412793);
            num1 = num5 ^ (int) num3 * -833991874;
            continue;
          case 6:
            s = JSONNode.\u200C‬‍‏‏⁯‏⁭⁪⁯‏⁬⁫⁯‮‭⁪‎⁫‌‎⁬​⁬⁪‬‌⁬⁮‍‎‬‬⁬⁪‌‬⁪⁪⁭‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * -732512833 ^ 894886825;
            continue;
          case 7:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -146796423 ^ -810289735;
            continue;
          case 8:
            int num6 = !flag10 ? -1337271800 : (num6 = -1254544465);
            num1 = num6 ^ (int) num3 * 1429761020;
            continue;
          case 9:
label_51:
            int num7;
            num1 = num7 = !flag3 ? 229015770 : (num7 = 419069625);
            continue;
          case 10:
            flag14 = JSONNode.\u202A⁭⁫​⁭‍​​⁬⁬‭​‭⁫⁮⁮‎‪⁭​‪⁬‭​⁫​‏‏‬‮‮‭‫⁭⁭‫‭‎⁯‏‮(aKey, "");
            num1 = 2146436743;
            continue;
          case 11:
            int num8;
            num1 = num8 = !JSONNode.\u202A⁭⁫​⁭‍​​⁬⁬‭​‭⁫⁮⁮‎‪⁭​‪⁬‭​⁫​‏‏‬‮‮‭‫⁭⁭‫‭‎⁯‏‮(aKey, "") ? 432305568 : (num8 = 1249775122);
            continue;
          case 12:
            int num9 = ch4 == ':' ? -1460522107 : (num9 = -933470555);
            num1 = num9 ^ (int) num3 * -97745483;
            continue;
          case 13:
            num1 = (int) num3 * 108580801 ^ -15914197;
            continue;
          case 14:
            flag8 = jsonNodeStack.Count == 0;
            num1 = 324977215;
            continue;
          case 15:
label_40:
            flag7 = flag3;
            num1 = 31716912;
            continue;
          case 16:
            int num10;
            num1 = num10 = JSONNode.\u202A⁭⁫​⁭‍​​⁬⁬‭​‭⁫⁮⁮‎‪⁭​‪⁬‭​⁫​‏‏‬‮‮‭‫⁭⁭‫‭‎⁯‏‮(aKey, "") ? 1675832455 : (num10 = 330991036);
            continue;
          case 18:
            int num11 = !flag6 ? -1648289966 : (num11 = -1223509267);
            num1 = num11 ^ (int) num3 * -1869431195;
            continue;
          case 19:
            int num12 = flag14 ? -1730689713 : (num12 = -1262366476);
            num1 = num12 ^ (int) num3 * 1972980878;
            continue;
          case 20:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1277045381 ^ -498853571;
            continue;
          case 21:
            num1 = 470532492;
            continue;
          case 22:
            int num13 = jsonNode1 != (object) null ? 244966333 : (num13 = 635222940);
            num1 = num13 ^ (int) num3 * -1218978102;
            continue;
          case 23:
            string str1 = aItem;
            ch3 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str2 = ch3.ToString();
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str1, str2);
            num2 += 4;
            num1 = (int) num3 * 376847902 ^ -1707882381;
            continue;
          case 24:
            num1 = (int) num3 * 1730381095 ^ 395474706;
            continue;
          case 25:
            ch1 = ch5;
            num1 = (int) num3 * -1211779471 ^ -590136944;
            continue;
          case 26:
            aItem = "";
            num1 = (int) num3 * 1749627835 ^ -1828189469;
            continue;
          case 27:
            int num14 = flag1 ? 1344709202 : (num14 = 310994451);
            num1 = num14 ^ (int) num3 * 1249951483;
            continue;
          case 28:
            int num15;
            num1 = num15 = ch4 == ',' ? 792781804 : (num15 = 34574981);
            continue;
          case 29:
            flag4 = flag3;
            num1 = 656276541;
            continue;
          case 30:
            string str3 = aItem;
            ch3 = JSONNode.\u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮(aJSON, num2);
            string str4 = ch3.ToString();
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str3, str4);
            num1 = (int) num3 * -1645064337 ^ -78726671;
            continue;
          case 31:
            num1 = (int) num3 * -1735659635 ^ -840323929;
            continue;
          case 32:
            num1 = (int) num3 * -779680997 ^ 1281113860;
            continue;
          case 33:
            string str5 = aItem;
            ch3 = JSONNode.\u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮(aJSON, num2);
            string str6 = ch3.ToString();
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str5, str6);
            num1 = (int) num3 * -953894143 ^ -245497205;
            continue;
          case 34:
            string str7 = aItem;
            ch3 = JSONNode.\u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮(aJSON, num2);
            string str8 = ch3.ToString();
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str7, str8);
            num1 = (int) num3 * -334547559 ^ -1694475069;
            continue;
          case 35:
            aKey = JSONNode.\u202E‭⁬⁮⁭‪‎⁮​‫‭‍‎⁪‍‬⁮‌‪⁮‮⁯⁪‬‎⁪‎‬‪⁬⁮‪‬‏⁯⁬⁮‏⁮‫‮(aKey);
            int num16 = jsonNode1 is JSONArray ? -1876313567 : (num16 = -746883315);
            num1 = num16 ^ (int) num3 * 1066653487;
            continue;
          case 36:
            flag1 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * 261345098 ^ 1063958171;
            continue;
          case 37:
            num1 = (int) num3 * 608884878 ^ -54238386;
            continue;
          case 38:
            num1 = 1439320956;
            continue;
          case 39:
            int num17;
            num1 = num17 = !flag3 ? 870255323 : (num17 = 2094648749);
            continue;
          case 40:
label_150:
            num1 = 2045992429;
            continue;
          case 41:
            goto label_1;
          case 42:
            int num18;
            num1 = num18 = !JSONNode.\u202A⁭⁫​⁭‍​​⁬⁬‭​‭⁫⁮⁮‎‪⁭​‪⁬‭​⁫​‏‏‬‮‮‭‫⁭⁭‫‭‎⁯‏‮(aItem, "") ? 1142060592 : (num18 = 411911022);
            continue;
          case 43:
            int num19 = flag4 ? 89962858 : (num19 = 152556538);
            num1 = num19 ^ (int) num3 * -933447341;
            continue;
          case 44:
            int num20 = !JSONNode.\u202A⁭⁫​⁭‍​​⁬⁬‭​‭⁫⁮⁮‎‪⁭​‪⁬‭​⁫​‏‏‬‮‮‭‫⁭⁭‫‭‎⁯‏‮(aItem, "") ? -468848986 : (num20 = -1274472996);
            num1 = num20 ^ (int) num3 * -1872628142;
            continue;
          case 45:
            aKey = JSONNode.\u202E‭⁬⁮⁭‪‎⁮​‫‭‍‎⁪‍‬⁮‌‪⁮‮⁯⁪‬‎⁪‎‬‪⁬⁮‪‬‏⁯⁬⁮‏⁮‫‮(aKey);
            num1 = (int) num3 * -1736771409 ^ 149698943;
            continue;
          case 46:
            jsonNode2 = jsonNode1;
            num1 = 2060827400;
            continue;
          case 47:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 473715184 ^ -1309654821;
            continue;
          case 48:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -799064111 ^ -1426565730;
            continue;
          case 49:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1935008893 ^ 661985366;
            continue;
          case 50:
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(aItem, "\n");
            num1 = 356604781;
            continue;
          case 51:
            aItem = "";
            num1 = (int) num3 * -443026869 ^ 1154489273;
            continue;
          case 52:
            num1 = (int) num3 * 1913839709 ^ -657150737;
            continue;
          case 53:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 117662185 ^ -644934167;
            continue;
          case 54:
            string str9 = aItem;
            ch3 = JSONNode.\u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮(aJSON, num2);
            string str10 = ch3.ToString();
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str9, str10);
            num1 = (int) num3 * 26603912 ^ -1326659460;
            continue;
          case 55:
            num1 = 108788177;
            continue;
          case 56:
            num1 = (int) num3 * 803343235 ^ 935848878;
            continue;
          case 57:
            num1 = (int) num3 * 248698064 ^ 441391389;
            continue;
          case 58:
            num1 = (int) num3 * -274320659 ^ 2070761908;
            continue;
          case 59:
label_104:
            ++num2;
            flag2 = flag3;
            num1 = 2052552531;
            continue;
          case 60:
label_28:
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(aItem, "\t");
            num1 = 1744942317;
            continue;
          case 61:
            num1 = (int) num3 * 224771430 ^ 1939231521;
            continue;
          case 62:
            aKey = "";
            flag3 = false;
            num1 = (int) num3 * 1542267216 ^ -464097129;
            continue;
          case 63:
            num1 = (int) num3 * 1248909726 ^ 1026903487;
            continue;
          case 64:
            num1 = (int) num3 * -1253094700 ^ -252371034;
            continue;
          case 65:
            num1 = (int) num3 * -1626803557 ^ -1079981286;
            continue;
          case 66:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 193322677;
            continue;
          case 67:
            num1 = (int) num3 * -1914913865 ^ 986464161;
            continue;
          case 68:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 417980278 ^ 636361501;
            continue;
          case 69:
            aItem = "";
            num1 = (int) num3 * 558980825 ^ 353106130;
            continue;
          case 70:
            num2 = 0;
            aItem = "";
            num1 = (int) num3 * 1256957194 ^ 1575134003;
            continue;
          case 71:
            flag5 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1669871660 ^ -1747135132;
            continue;
          case 72:
            int num21 = ch4 <= ',' ? -1122523090 : (num21 = -1509211472);
            num1 = num21 ^ (int) num3 * -2010895025;
            continue;
          case 73:
            num1 = 1142060592;
            continue;
          case 74:
label_8:
            string str11 = aItem;
            ch3 = JSONNode.\u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮(aJSON, num2);
            string str12 = ch3.ToString();
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str11, str12);
            num1 = 860870077;
            continue;
          case 75:
            num1 = (int) num3 * -1305614474 ^ 1317014917;
            continue;
          case 76:
            int num22 = !(jsonNode1 is JSONArray) ? -1703448781 : (num22 = -1024572745);
            num1 = num22 ^ (int) num3 * 1632748434;
            continue;
          case 77:
            aKey = JSONNode.\u202E‭⁬⁮⁭‪‎⁮​‫‭‍‎⁪‍‬⁮‌‪⁮‮⁯⁪‬‎⁪‎‬‪⁬⁮‪‬‏⁯⁬⁮‏⁮‫‮(aKey);
            num1 = (int) num3 * -664248660 ^ 966441934;
            continue;
          case 78:
            int num23;
            num1 = num23 = ch4 > ']' ? 2023217892 : (num23 = 16623781);
            continue;
          case 79:
            num1 = (int) num3 * 229909197 ^ -1153849846;
            continue;
          case 80:
            int num24 = !flag11 ? -456396860 : (num24 = -2137788267);
            num1 = num24 ^ (int) num3 * 1900559442;
            continue;
          case 81:
            num1 = (int) num3 * 845928761 ^ 714796278;
            continue;
          case 82:
            num1 = (int) num3 * 1186522160 ^ -1527675683;
            continue;
          case 83:
            ch4 = JSONNode.\u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮(aJSON, num2);
            num1 = (int) num3 * 151188485 ^ -88025121;
            continue;
          case 84:
            goto label_9;
          case 85:
            int num25 = !flag5 ? -1491760517 : (num25 = -1647579206);
            num1 = num25 ^ (int) num3 * -84830680;
            continue;
          case 86:
            int num26;
            num1 = num26 = ch4 == '"' ? 1283431324 : (num26 = 291590943);
            continue;
          case 87:
            flag11 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1614646583 ^ 2095938998;
            continue;
          case 88:
            string str13 = aItem;
            ch3 = JSONNode.\u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮(aJSON, num2);
            string str14 = ch3.ToString();
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str13, str14);
            num1 = (int) num3 * -1820502901 ^ -1372038736;
            continue;
          case 90:
            int num27;
            num1 = num27 = ch4 != '}' ? 576596693 : (num27 = 1510127038);
            continue;
          case 91:
            int num28 = !flag13 ? -585415793 : (num28 = -553293680);
            num1 = num28 ^ (int) num3 * 1888776505;
            continue;
          case 92:
            aKey = aItem;
            num1 = 1199197507;
            continue;
          case 93:
            aKey = "";
            num1 = 952354695;
            continue;
          case 94:
            flag13 = jsonNode1 != (object) null;
            num1 = (int) num3 * 1400010658 ^ 30991620;
            continue;
          case 95:
            int num29 = flag8 ? 1423046335 : (num29 = 1672887925);
            num1 = num29 ^ (int) num3 * -1422507829;
            continue;
          case 96:
            num1 = (int) num3 * -848893513 ^ 1474172891;
            continue;
          case 98:
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(aItem, "\f");
            num1 = 1417438743;
            continue;
          case 99:
            num1 = (int) num3 * 1272866246 ^ 991755857;
            continue;
          case 100:
            goto label_27;
          case 101:
            int num30 = ch1 == 'b' ? -1627270896 : (num30 = -1736886898);
            num1 = num30 ^ (int) num3 * 1133137584;
            continue;
          case 102:
            int num31 = flag9 ? 8720816 : (num31 = 454119951);
            num1 = num31 ^ (int) num3 * 1219787178;
            continue;
          case 103:
            switch (ch4)
            {
              case '[':
                goto label_51;
              case '\\':
                goto label_104;
              case ']':
                goto label_84;
              default:
                num1 = 1416139379;
                continue;
            }
          case 104:
            num1 = (int) num3 * 1113681313 ^ -1026137573;
            continue;
          case 105:
            flag3 = !flag3;
            num1 = 1500358322;
            continue;
          case 106:
            aKey = "";
            num1 = 389949323;
            continue;
          case 107:
label_42:
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(aItem, "\r");
            num1 = 812107945;
            continue;
          case 108:
            int num32;
            num1 = num32 = ch4 == '{' ? 2137405450 : (num32 = 611555590);
            continue;
          case 109:
            num1 = (int) num3 * -1093622459 ^ 832077919;
            continue;
          case 111:
            num1 = (int) num3 * -1221081008 ^ -1938264864;
            continue;
          case 112:
            int num33;
            num1 = num33 = ch4 == ' ' ? 1064239654 : (num33 = 502670149);
            continue;
          case 113:
            num1 = (int) num3 * -2045835399 ^ -1097685752;
            continue;
          case 114:
            num1 = (int) num3 * 161962178 ^ 1223417131;
            continue;
          case 115:
            num1 = (int) num3 * 1759471211 ^ -2020596376;
            continue;
          case 116:
            num1 = (int) num3 * 686430383 ^ 477483295;
            continue;
          case 117:
            aKey = "";
            num1 = 723860495;
            continue;
          case 118:
            num1 = (int) num3 * -1082490397 ^ -217491990;
            continue;
          case 119:
            aItem = "";
            num1 = (int) num3 * 196723768 ^ 894603541;
            continue;
          case 120:
            jsonNodeStack.Pop();
            num1 = 1625433413;
            continue;
          case 121:
            aItem = "";
            num1 = (int) num3 * 1185419996 ^ 123351861;
            continue;
          case 122:
            num1 = (int) num3 * 2075424065 ^ -1976617834;
            continue;
          case 123:
            int num34 = ch1 <= 'f' ? -1524342075 : (num34 = -1958682894);
            num1 = num34 ^ (int) num3 * -1447524009;
            continue;
          case 124:
            num1 = 134647612;
            continue;
          case 125:
            num1 = (int) num3 * 434793973 ^ 821601895;
            continue;
          case 126:
            switch (ch4)
            {
              case '\t':
                goto label_40;
              case '\n':
              case '\r':
                goto label_44;
              case '\v':
              case '\f':
                goto label_8;
              default:
                num1 = (int) num3 * -165086244 ^ -1398773873;
                continue;
            }
          case (uint) sbyte.MaxValue:
            flag9 = JSONNode.\u202A⁭⁫​⁭‍​​⁬⁬‭​‭⁫⁮⁮‎‪⁭​‪⁬‭​⁫​‏‏‬‮‮‭‫⁭⁭‫‭‎⁯‏‮(aKey, "");
            num1 = 1381529243;
            continue;
          case 128:
            num1 = (int) num3 * 232507615 ^ -1465335311;
            continue;
          case 129:
            string str15 = aItem;
            ch3 = JSONNode.\u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮(aJSON, num2);
            string str16 = ch3.ToString();
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(str15, str16);
            num1 = (int) num3 * -118012159 ^ 119461123;
            continue;
          case 130:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1122978031 ^ 1987468200;
            continue;
          case 131:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -141049689 ^ -253784526;
            continue;
          case 132:
label_6:
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(aItem, ch2.ToString());
            num1 = 812107945;
            continue;
          case 133:
label_84:
            flag10 = flag3;
            num1 = 1751680500;
            continue;
          case 135:
            flag12 = flag3;
            num1 = 1945436792;
            continue;
          case 136:
            aKey = "";
            num1 = 1145595053;
            continue;
          case 137:
            num1 = (int) num3 * -597658830 ^ 520029663;
            continue;
          case 138:
            aItem = JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮(aItem, "\b");
            num1 = 812107945;
            continue;
          case 139:
            num1 = (int) num3 * 975121953 ^ 47580374;
            continue;
          case 140:
            num1 = (int) num3 * -1409765750 ^ 596385311;
            continue;
          case 141:
            num1 = 1086971714;
            continue;
          case 142:
            num1 = (int) num3 * 1180744879 ^ -365858617;
            continue;
          case 143:
            int num35;
            num1 = num35 = ch1 != 'n' ? 1379444330 : (num35 = 2030984229);
            continue;
          case 144:
            num1 = (int) num3 * -1595918264 ^ -830928592;
            continue;
          case 145:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 668936963;
            continue;
          case 146:
            int num36;
            num1 = num36 = ch1 == 'f' ? 1637643348 : (num36 = 1793847536);
            continue;
          case 147:
            flag6 = num2 < JSONNode.\u206B‬‎⁬‍⁪‮‏‏⁮‍‌⁪‍‍⁬‫‮​⁪⁫⁭‏‭‬‍‏‮​⁭‪⁪⁭⁫⁪‎⁪⁬⁭‮(aJSON);
            num1 = 442849046;
            continue;
          case 148:
            int num37 = flag12 ? -287862568 : (num37 = -1535759268);
            num1 = num37 ^ (int) num3 * -1980338933;
            continue;
          case 149:
            num1 = (int) num3 * 898707625 ^ 1066621596;
            continue;
          case 150:
            int num38 = !flag7 ? 1337263979 : (num38 = 668036648);
            num1 = num38 ^ (int) num3 * -1860089697;
            continue;
          case 151:
            ch2 = JSONNode.\u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮(aJSON, num2);
            ch5 = ch2;
            num1 = (int) num3 * 2089491524 ^ 825370818;
            continue;
          case 152:
            int num39 = !flag2 ? -655725597 : (num39 = -1099107347);
            num1 = num39 ^ (int) num3 * 1634712245;
            continue;
          case 153:
            switch (ch1)
            {
              case 'r':
                goto label_42;
              case 's':
                goto label_6;
              case 't':
                goto label_28;
              case 'u':
                goto label_150;
              default:
                num1 = 814681088;
                continue;
            }
          case 154:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -584621197 ^ -100233082;
            continue;
          default:
            goto label_155;
        }
      }
label_9:
      throw JSONNode.\u206C‫⁬‫⁭‏‌‍‌⁭⁯‏⁫⁪⁬‫⁬‎⁭‬‎‬‮⁬⁪‮⁯⁪‮‪‭​⁮‎‌‍‌‬⁯⁯‮("JSON Parse: Too many closing brackets");
label_27:
      throw JSONNode.\u206C‫⁬‫⁭‏‌‍‌⁭⁯‏⁫⁪⁬‫⁬‎⁭‬‎‬‮⁬⁪‮⁯⁪‮‪‭​⁮‎‌‍‌‬⁯⁯‮("JSON Parse: Quotation marks seems to be messed up.");
label_155:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -1150099092;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -772711627)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Serialize(JSONNode.\u200F‫‍‌‭‍‮‫‫⁯⁮‪⁮‍​‌‏​‭​⁫‏⁮‍⁮‪⁯⁮⁪​⁪‪‬⁬⁮‫⁫‫‌⁫‮(aData));
            num1 = (int) num2 * -1393164478 ^ 577188081;
            continue;
          case 2:
            num1 = (int) num2 * 1654556012 ^ -1436806886;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206C‫⁬‫⁭‏‌‍‌⁭⁯‏⁫⁪⁬‫⁬‎⁭‬‎‬‮⁬⁪‮⁯⁪‮‪‭​⁮‎‌‍‌‬⁯⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206C‫⁬‫⁭‏‌‍‌⁭⁯‏⁫⁪⁬‫⁬‎⁭‬‎‬‮⁬⁪‮⁯⁪‮‪‭​⁮‎‌‍‌‬⁯⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206C‫⁬‫⁭‏‌‍‌⁭⁯‏⁫⁪⁬‫⁬‎⁭‬‎‬‮⁬⁪‮⁯⁪‮‪‭​⁮‎‌‍‌‬⁯⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u200C‪⁬​‏⁫⁭​​‪‪⁪⁬⁮‌​​⁫‬‏⁪‍‎‎⁭​⁮‍‬​‬‍⁪‬‎‬⁭‮‪⁭‮(JSONNode.\u200D‌⁪⁯⁭‪‭⁭‭⁮‮‬‍‭⁫⁯‌‭⁪‏‪‌⁯‫⁭‭‮‪‬​​⁪⁪‮‏​‮⁮‏‫‮((FileSystemInfo) JSONNode.\u202B‍⁫‎‬⁭⁭‌‎‏⁪‮⁬⁪‏​‌⁭⁭‮‍⁮‏⁭⁪‪⁯⁫⁬‎⁮‮⁫​‪‬⁮⁯⁫⁯‮(JSONNode.\u206F⁫‬⁫⁬⁬⁫⁫‍‮‎‭‏⁫⁯⁮‫‎‮⁬‭⁮‮⁭⁬‫‌‍⁯‭⁭⁯⁭⁪‮‌⁮⁮‬‌‮(aFileName))));
      FileStream aData = JSONNode.\u206B⁫‫⁯⁬⁮⁭⁮‎⁬‎‬‫⁬‮‮‫⁬⁫⁫​‏‮‍‌‫‭⁪‬⁬​‎⁭‮‬‫‏‬‍‍‮(aFileName);
      try
      {
label_2:
        int num1 = 1901036434;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1110728676)) % 4U)
          {
            case 0:
              goto label_10;
            case 1:
              num1 = (int) num2 * 884583703 ^ -708736741;
              continue;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 1860117614 ^ 1931373673;
              continue;
            case 3:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = 485700083;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1110728676)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -857430119 ^ 505091613;
                continue;
              case 2:
                goto label_8;
              case 3:
                JSONNode.\u200F​⁮‏​‪​‎⁪‍​⁫‫‫‫⁫⁬‌‬​‍‏‭⁫⁪‭‍‮⁬‍⁮‭‮⁪​‫‎⁯‬‬‮((IDisposable) aData);
                num3 = (int) num4 * 927035235 ^ 1239047721;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202E⁪⁪⁮‌‪​‌‭‮⁫⁯‏⁯⁮‮⁫‮⁭⁬‮⁭⁯‎‌‎⁭⁬⁬‏‏⁯⁭⁬⁭⁯⁫⁫‫‍‮();
      string base64;
      try
      {
label_2:
        int num1 = -1955545446;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -639429220)) % 5U)
          {
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -559964293 ^ 1503540891;
              continue;
            case 2:
              base64 = JSONNode.\u200B‮⁮⁯‏⁫⁯‮⁬⁯‭⁯‌⁬‍‫‪⁭‮‎‏‫‬⁭‪‬‫⁬‭⁯⁬‭‎⁭‫⁪⁫‮⁭‍‮(JSONNode.\u200B‫‬‎‌⁬​⁭⁬‮‏⁫‬‌‍‮⁫​‫‌‏‫⁮⁫‍⁮‌⁯⁬‍‮⁬‫‭‏⁭‌‎‌⁪‮(aData));
              num1 = (int) num2 * -752044398 ^ 2001780371;
              continue;
            case 3:
              goto label_2;
            case 4:
              JSONNode.\u206D⁭‮‫‭‍‪‌⁪‏⁯‌‪‏‌‮⁯‫⁯‮‏‪‌‫‌⁮⁪‎⁬‏‎‌‌⁮‌⁯⁯‍‫⁯‮((Stream) aData, 0L);
              num1 = (int) num2 * -1596493412 ^ 470144018;
              continue;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -1150844925;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -639429220)) % 4U)
            {
              case 0:
                goto label_8;
              case 2:
                num3 = (int) num4 * -1695483129 ^ -1569692581;
                continue;
              case 3:
                JSONNode.\u200F​⁮‏​‪​‎⁪‍​⁫‫‫‫⁫⁬‌‬​‍‏‭⁫⁪‭‍‮⁬‍⁮‭‮⁪​‫‎⁯‬‬‮((IDisposable) aData);
                num3 = (int) num4 * 741185800 ^ 2140555990;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206E⁫‮‪​‪‬⁫⁫‍⁮​‪​⁫‪‌‮‮⁪⁭⁫‭⁯⁮‌‮⁪‭⁯‏‏‬⁭⁪‍‪‏‭‌‮(aReader);
      JSONBinaryTag jsonBinaryTag2 = jsonBinaryTag1;
label_1:
      int num1 = -1187624870;
      JSONBinaryTag jsonBinaryTag3;
      JSONNode jsonNode;
      bool flag1;
      int num2;
      int num3;
      int num4;
      JSONClass jsonClass;
      int num5;
      string aKey;
      bool flag2;
      JSONArray jsonArray;
      JSONNode aItem;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1644100456)) % 38U)
        {
          case 0:
            num1 = (int) num6 * 1725107551 ^ -1755142387;
            continue;
          case 1:
            num1 = (int) num6 * 1848779991 ^ -745269662;
            continue;
          case 2:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1846437123 ^ 1944367217;
            continue;
          case 3:
            aKey = JSONNode.\u206D‫⁯⁫⁬‭⁭⁭‏‬‭‭‪​‮‎⁯⁫⁫⁫‌‏‭‍‮⁯‪⁮‍⁮‍⁪‍⁪⁯‌‏⁭⁮‬‮(aReader);
            num1 = -762785670;
            continue;
          case 4:
            num3 = JSONNode.\u200C‏‬⁭⁭‍‬‌⁫‎‪‮⁮⁫​‪‏‎‍‪⁬‍​‬​⁫‌‍⁭‮⁯‫‍‪⁮⁫‌‬‏‏‮(aReader);
            jsonArray = new JSONArray();
            num2 = 0;
            num1 = (int) num6 * -1523110381 ^ -689258149;
            continue;
          case 5:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_18;
              case JSONBinaryTag.Class:
                goto label_17;
              case JSONBinaryTag.Value:
                goto label_20;
              case JSONBinaryTag.IntValue:
                goto label_4;
              case JSONBinaryTag.DoubleValue:
                goto label_3;
              case JSONBinaryTag.BoolValue:
                goto label_8;
              case JSONBinaryTag.FloatValue:
                goto label_10;
              default:
                num1 = (int) num6 * 553064020 ^ 875338792;
                continue;
            }
          case 6:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 2103502773 ^ 981082608;
            continue;
          case 7:
label_20:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D‫⁯⁫⁬‭⁭⁭‏‬‭‭‪​‮‎⁯⁫⁫⁫‌‏‭‍‮⁯‪⁮‍⁮‍⁪‍⁪⁯‌‏⁭⁮‬‮(aReader));
            num1 = -1417432312;
            continue;
          case 8:
            num1 = (int) num6 * 213316476 ^ 123666421;
            continue;
          case 9:
            ++num2;
            num1 = (int) num6 * 1483443794 ^ -1902803600;
            continue;
          case 10:
            num1 = (int) num6 * 1320039612 ^ -334271927;
            continue;
          case 11:
            int num7 = flag1 ? -2138362774 : (num7 = -548112327);
            num1 = num7 ^ (int) num6 * -940726371;
            continue;
          case 12:
label_8:
            num1 = -1623075128;
            continue;
          case 13:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -692535703;
            continue;
          case 14:
            flag1 = num2 < num3;
            num1 = -2139161005;
            continue;
          case 15:
            num1 = (int) num6 * -532381758 ^ -1402689952;
            continue;
          case 16:
            ++num5;
            num1 = (int) num6 * -1687561149 ^ 719191575;
            continue;
          case 17:
label_3:
            num1 = -1673806294;
            continue;
          case 18:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 563334234 ^ -1682235301;
            continue;
          case 19:
            num1 = (int) num6 * 1814490509 ^ -175515150;
            continue;
          case 20:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * 432083346 ^ 1873094961;
            continue;
          case 21:
            num1 = -506998528;
            continue;
          case 22:
            goto label_1;
          case 23:
            num1 = (int) num6 * -651256616 ^ 1327059106;
            continue;
          case 24:
label_10:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D⁭‮⁭⁬⁭‍⁪‍‌​‎‭⁯⁫⁬⁯‮‎‬⁫⁮‌‫‮‏‭‏​⁯‮‬‮⁯‎‏‎‬‏‍‮(aReader));
            num1 = -1108948611;
            continue;
          case 25:
            int num8 = !flag2 ? -350417690 : (num8 = -434140413);
            num1 = num8 ^ (int) num6 * -123275950;
            continue;
          case 26:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * 1271119446 ^ -553687654;
            continue;
          case 27:
            flag2 = num5 < num4;
            num1 = -195413907;
            continue;
          case 28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B⁯⁮‪⁬​‮‭⁬‮​⁯‫‭‭‬⁬‪‍‪‏⁯⁮‮⁯‏‭​⁬‪‏‬⁭‍‭‏‬⁯⁮‬‮(aReader));
            num1 = (int) num6 * -658793917 ^ -1107102985;
            continue;
          case 29:
label_17:
            num4 = JSONNode.\u200C‏‬⁭⁭‍‬‌⁫‎‪‮⁮⁫​‪‏‎‍‪⁬‍​‬​⁫‌‍⁭‮⁯‫‍‪⁮⁫‌‬‏‏‮(aReader);
            jsonClass = new JSONClass();
            num1 = -1907720201;
            continue;
          case 30:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200C‏‬⁭⁭‍‬‌⁫‎‪‮⁮⁫​‪‏‎‍‪⁬‍​‬​⁫‌‍⁭‮⁯‫‍‪⁮⁫‌‬‏‏‮(aReader));
            num1 = (int) num6 * -1178895956 ^ -2097447827;
            continue;
          case 31:
            num1 = (int) num6 * 1241772923 ^ -826935766;
            continue;
          case 32:
label_4:
            num1 = -1720216492;
            continue;
          case 33:
            num5 = 0;
            num1 = (int) num6 * -2084825694 ^ 1603255327;
            continue;
          case 34:
            goto label_38;
          case 36:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E⁬‏‪‎​‪‫⁫​‫⁫‫⁯‎⁯⁬⁯⁭⁭‮⁫‍⁪‮⁫‬⁬‏‌‭⁯⁫‏​‎‍‫​‍‮(aReader));
            num1 = (int) num6 * -514850054 ^ 317511789;
            continue;
          case 37:
label_18:
            num1 = -1155927820;
            continue;
          default:
            goto label_40;
        }
      }
label_38:
      throw JSONNode.\u206C‫⁬‫⁭‏‌‍‌⁭⁯‏⁫⁪⁬‫⁬‎⁭‬‎‬‮⁬⁪‮⁯⁪‮‪‭​⁮‎‌‍‌‬⁯⁯‮(JSONNode.\u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_40:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206C‫⁬‫⁭‏‌‍‌⁭⁯‏⁫⁪⁬‫⁬‎⁭‬‎‬‮⁬⁪‮⁯⁪‮‪‭​⁮‎‌‍‌‬⁯⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206C‫⁬‫⁭‏‌‍‌⁭⁯‏⁫⁪⁬‫⁬‎⁭‬‎‬‮⁬⁪‮⁯⁪‮‪‭​⁮‎‌‍‌‬⁯⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206C‫⁬‫⁭‏‌‍‌⁭⁯‏⁫⁪⁬‫⁬‎⁭‬‎‬‮⁬⁪‮⁯⁪‮‪‭​⁮‎‌‍‌‬⁯⁯‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206A⁫⁫‬⁪⁭‮‎‍‮​‫⁮‍⁫‬‍‫⁪‏⁭⁬‎‬⁫‌⁯‭‪‌‏⁬‫‪‎⁮‬‏⁬⁭‮(aData);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 122362141;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 290135121)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = JSONNode.Deserialize(aReader);
              num1 = (int) num2 * -2007799212 ^ 1531280722;
              continue;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aReader != null)
        {
label_6:
          int num3 = 1872216648;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 290135121)) % 4U)
            {
              case 1:
                JSONNode.\u200F​⁮‏​‪​‎⁪‍​⁫‫‫‫⁫⁬‌‬​‍‏‭⁫⁪‭‍‮⁬‍⁮‭‮⁪​‫‎⁯‬‬‮((IDisposable) aReader);
                num3 = (int) num4 * 2043755425 ^ -2025389270;
                continue;
              case 2:
                num3 = (int) num4 * 554907202 ^ -490043319;
                continue;
              case 3:
                goto label_6;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202A‪‭‭‬‌‎‏‍‮⁮‎‌‌‮‭⁭⁬⁯​⁮‏‎⁮‎‏‍‮⁬⁬‪⁪‮⁪⁭‪‍⁯‬‪‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 826066191;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1422365874)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * 1652135692 ^ 399611281;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = 1056786453;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ 1422365874)) % 4U)
            {
              case 0:
                goto label_6;
              case 1:
                num3 = (int) num4 * 2074479754 ^ 117971698;
                continue;
              case 3:
                JSONNode.\u200F​⁮‏​‪​‎⁪‍​⁫‫‫‫⁫⁬‌‬​‍‏‭⁫⁪‭‍‮⁬‍⁮‭‮⁪​‫‎⁯‬‬‮((IDisposable) aData);
                num3 = (int) num4 * 1016001380 ^ -889550165;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -86593215;
      byte[] numArray;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2060857911)) % 7U)
        {
          case 0:
            JSONNode.\u206D⁭‮‫‭‍‪‌⁪‏⁯‌‪‏‌‮⁯‫⁯‮‏‪‌‫‌⁮⁪‎⁬‏‎‌‌⁮‌⁯⁯‍‫⁯‮((Stream) aData, 0L);
            num1 = (int) num2 * -1990366687 ^ -773349742;
            continue;
          case 1:
            aData = JSONNode.\u202E‎⁯⁮‏‪⁭‮‭‫⁭⁮⁯‫⁫⁯‏‫⁪‪‮⁬‮‌‮‎‮⁮‮‪⁭‎‬‫‌⁪‍‎​⁯‮(numArray);
            num1 = (int) num2 * -1811399908 ^ 1467933131;
            continue;
          case 2:
            numArray = JSONNode.\u206A‮‮⁫‌⁬‏‍‭‌⁭‭⁪‍⁪‭‫‌‫‎⁪⁫‬‬⁮⁫⁭​⁫⁯⁪‍‏​‍‪⁫‮‮‪‮(aBase64);
            num1 = (int) num2 * 2030024698 ^ -2104424733;
            continue;
          case 3:
            goto label_1;
          case 4:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 490883158 ^ 222460351;
            continue;
          case 6:
            num1 = (int) num2 * 383979211 ^ 924873035;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -460178094;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1185214375)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -1949788677 ^ -530307298;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u200F⁬‍⁪‮⁭⁫‏‌‍⁪⁬‭⁭⁫‬⁮⁪⁭​‌⁫‫⁫‭⁭‏‌​‫‭‏⁫‎‪‪⁭‭‏‮‮() => CultureInfo.InvariantCulture;

    static bool \u200D‬‬‭‎‎⁪⁬​⁯​⁪⁫‏‎⁪⁭⁭‏⁫‎⁬‌‏⁬‬‍‫⁭‎‎‏​⁭‫‏‫‮‮‪‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206C⁫⁮⁮‎‪⁬‭​‮⁪⁪‮​‏⁫‮‭‏⁯⁯‍‮‍‬‪‪​‫⁪​​​⁪‎⁪⁪‪‬⁮‮() => base.GetHashCode();

    static char \u200F​⁯⁯‫⁭‫⁫⁮‫⁮‭‬​​⁪‬‏‎‪‪⁪⁯⁬⁫‮⁭‮‫⁪⁬⁮⁯⁮⁭‬‬⁭⁫⁮‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200F⁯⁯⁫‭‮⁬⁭⁮‏‍⁫‮‌⁫‌⁬‪⁬‎‍‌​​⁪‫‭‎‭⁮‮​‫‭⁭‪⁭‏​⁪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206B‬‎⁬‍⁪‮‏‏⁮‍‌⁪‍‍⁬‫‮​⁪⁫⁭‏‭‬‍‏‮​⁭‪⁪⁭⁫⁪‎⁪⁬⁭‮([In] string obj0) => obj0.Length;

    static string \u202E‭⁬⁮⁭‪‎⁮​‫‭‍‎⁪‍‬⁮‌‪⁮‮⁯⁪‬‎⁪‎‬‪⁬⁮‪‬‏⁯⁬⁮‏⁮‫‮([In] string obj0) => obj0.Trim();

    static bool \u202A⁭⁫​⁭‍​​⁬⁬‭​‭⁫⁮⁮‎‪⁭​‪⁬‭​⁫​‏‏‬‮‮‭‫⁭⁭‫‭‎⁯‏‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206C‫⁬‫⁭‏‌‍‌⁭⁯‏⁫⁪⁬‫⁬‎⁭‬‎‬‮⁬⁪‮⁯⁪‮‪‭​⁮‎‌‍‌‬⁯⁯‮([In] string obj0) => new Exception(obj0);

    static string \u200C‬‍‏‏⁯‏⁭⁪⁯‏⁬⁫⁯‮‭⁪‎⁫‌‎⁬​⁬⁪‬‌⁬⁮‍‎‬‬⁬⁪‌‬⁪⁪⁭‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u200F‫‍‌‭‍‮‫‫⁯⁮‪⁮‍​‌‏​‭​⁫‏⁮‍⁮‪⁯⁮⁪​⁪‪‬⁬⁮‫⁫‫‌⁫‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u206F⁫‬⁫⁬⁬⁫⁫‍‮‎‭‏⁫⁯⁮‫‎‮⁬‭⁮‮⁭⁬‫‌‍⁯‭⁭⁯⁭⁪‮‌⁮⁮‬‌‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202B‍⁫‎‬⁭⁭‌‎‏⁪‮⁬⁪‏​‌⁭⁭‮‍⁮‏⁭⁪‪⁯⁫⁬‎⁮‮⁫​‪‬⁮⁯⁫⁯‮([In] FileInfo obj0) => obj0.Directory;

    static string \u200D‌⁪⁯⁭‪‭⁭‭⁮‮‬‍‭⁫⁯‌‭⁪‏‪‌⁯‫⁭‭‮‪‬​​⁪⁪‮‏​‮⁮‏‫‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200C‪⁬​‏⁫⁭​​‪‪⁪⁬⁮‌​​⁫‬‏⁪‍‎‎⁭​⁮‍‬​‬‍⁪‬‎‬⁭‮‪⁭‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206B⁫‫⁯⁬⁮⁭⁮‎⁬‎‬‫⁬‮‮‫⁬⁫⁫​‏‮‍‌‫‭⁪‬⁬​‎⁭‮‬‫‏‬‍‍‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200F​⁮‏​‪​‎⁪‍​⁫‫‫‫⁫⁬‌‬​‍‏‭⁫⁪‭‍‮⁬‍⁮‭‮⁪​‫‎⁯‬‬‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202E⁪⁪⁮‌‪​‌‭‮⁫⁯‏⁯⁮‮⁫‮⁭⁬‮⁭⁯‎‌‎⁭⁬⁬‏‏⁯⁭⁬⁭⁯⁫⁫‫‍‮() => new MemoryStream();

    static void \u206D⁭‮‫‭‍‪‌⁪‏⁯‌‪‏‌‮⁯‫⁯‮‏‪‌‫‌⁮⁪‎⁬‏‎‌‌⁮‌⁯⁯‍‫⁯‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u200B‫‬‎‌⁬​⁭⁬‮‏⁫‬‌‍‮⁫​‫‌‏‫⁮⁫‍⁮‌⁯⁬‍‮⁬‫‭‏⁭‌‎‌⁪‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200B‮⁮⁯‏⁫⁯‮⁬⁯‭⁯‌⁬‍‫‪⁭‮‎‏‫‬⁭‪‬‫⁬‭⁯⁬‭‎⁭‫⁪⁫‮⁭‍‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206E⁫‮‪​‪‬⁫⁫‍⁮​‪​⁫‪‌‮‮⁪⁭⁫‭⁯⁮‌‮⁪‭⁯‏‏‬⁭⁪‍‪‏‭‌‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u200C‏‬⁭⁭‍‬‌⁫‎‪‮⁮⁫​‪‏‎‍‪⁬‍​‬​⁫‌‍⁭‮⁯‫‍‪⁮⁫‌‬‏‏‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206D‫⁯⁫⁬‭⁭⁭‏‬‭‭‪​‮‎⁯⁫⁫⁫‌‏‭‍‮⁯‪⁮‍⁮‍⁪‍⁪⁯‌‏⁭⁮‬‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200B⁯⁮‪⁬​‮‭⁬‮​⁯‫‭‭‬⁬‪‍‪‏⁯⁮‮⁯‏‭​⁬‪‏‬⁭‍‭‏‬⁯⁮‬‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u202E⁬‏‪‎​‪‫⁫​‫⁫‫⁯‎⁯⁬⁯⁭⁭‮⁫‍⁪‮⁫‬⁬‏‌‭⁯⁫‏​‎‍‫​‍‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206D⁭‮⁭⁬⁭‍⁪‍‌​‎‭⁯⁫⁬⁯‮‎‬⁫⁮‌‫‮‏‭‏​⁯‮‬‮⁯‎‏‎‬‏‍‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206A⁫⁫‬⁪⁭‮‎‍‮​‫⁮‍⁫‬‍‫⁪‏⁭⁬‎‬⁫‌⁯‭‪‌‏⁬‫‪‎⁮‬‏⁬⁭‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202A‪‭‭‬‌‎‏‍‮⁮‎‌‌‮‭⁭⁬⁯​⁮‏‎⁮‎‏‍‮⁬⁬‪⁪‮⁪⁭‪‍⁯‬‪‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206A‮‮⁫‌⁬‏‍‭‌⁭‭⁪‍⁪‭‫‌‫‎⁪⁫‬‬⁮⁫⁭​⁫⁯⁪‍‏​‍‪⁫‮‮‪‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u202E‎⁯⁮‏‪⁭‮‭‫⁭⁮⁯‫⁫⁯‏‫⁪‪‮⁬‮‌‮‎‮⁮‮‪⁭‎‬‫‌⁪‍‎​⁯‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
