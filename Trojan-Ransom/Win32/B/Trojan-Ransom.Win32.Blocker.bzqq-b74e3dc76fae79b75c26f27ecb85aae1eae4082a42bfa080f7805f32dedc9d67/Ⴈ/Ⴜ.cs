// Decompiled with JetBrains decompiler
// Type: Ⴈ.Ⴜ
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using SmartAssembly.SmartExceptionsCore;
using System;
using System.Collections;
using System.Net;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Web.Services;
using System.Web.Services.Protocols;

namespace Ⴈ
{
  [WebServiceBinding(Name = "LoginServiceSoap", Namespace = "http://www.smartassembly.com/webservices/UploadReportLogin/")]
  internal sealed class Ⴜ : SoapHttpClientProtocol
  {
    public Ⴜ()
    {
      try
      {
        string ⴓ = ႷႷ.Ⴓ;
        SmartAssembly.SmartExceptionsCore.Win32.ႣႳ((WebClientProtocol) this, ႷႭ.ႰႨ(ႷႷ.Ⴓ, Ⴈ.Ⴀ.Ⴐ(1468304003, 0), 610, 592), 921, 959);
        this.Timeout = 30000;
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException1(ex, (object) this);
        throw;
      }
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/UploadReportLogin/GetServerURL")]
    public string Ⴍ(string Ⴅ)
    {
      object[] objArray;
      try
      {
        string methodName = ႳႷ.Ⴗ(2059790954, 4);
        objArray = new object[1]{ (object) Ⴅ };
        object[] parameters = objArray;
        return (string) this.Invoke(methodName, parameters)[0];
      }
      catch (Exception ex)
      {
        object[] o1 = objArray;
        int num;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num;
        string o4 = Ⴅ;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) this, (object) o4);
        throw;
      }
    }

    protected override WebRequest GetWebRequest(Uri Ⴀ)
    {
      int num;
      WebRequest webRequest;
      try
      {
label_3:
        webRequest = base.GetWebRequest(Ⴀ);
label_4:
        num = !(webRequest is HttpWebRequest httpWebRequest) ? 4 : 2;
        while (true)
        {
          switch (num)
          {
            case 1:
            case 3:
              goto label_4;
            case 2:
              goto label_5;
            case 4:
            case 5:
              goto label_6;
            case 6:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴜ.GetWebRequest);
              num = 6;
              continue;
          }
        }
label_5:
        ႷႭ.ႰႷ(httpWebRequest, 783, 888).Expect100Continue = false;
label_6:
        return webRequest;
      }
      catch (Exception ex)
      {
        WebRequest o1 = webRequest;
        HttpWebRequest o2 = httpWebRequest;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) num;
        Uri o5 = Ⴀ;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) this, (object) o5);
        throw;
      }
    }

    static Ⴜ()
    {
      try
      {
        SmartAssembly.SmartUsageCore.DoNotPruneAttribute.ႰႣ();
      }
      catch (Exception ex)
      {
        StackFrameHelper.CreateException0(ex);
        throw;
      }
    }

    internal static void Ⴗ([In] AsymmetricAlgorithm obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 1;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 5:
              num1 = 1;
              continue;
            case 3:
              goto label_8;
            case 4:
              goto label_7;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 85:
                  num2 = 4;
                  break;
                default:
                  num2 = 2;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.FromXmlString(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        AsymmetricAlgorithm o3 = obj0;
        string o4 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static IDictionary Ⴅ([In] Exception obj0, [In] int obj1, [In] int obj2)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj2 ^ obj1)
        {
          case 117:
            num2 = 0;
            break;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 3:
            case 6:
              goto label_8;
            case 1:
            case 5:
              num1 = 2;
              continue;
            case 2:
              goto label_3;
            case 4:
              num1 = 2;
              continue;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴜ.Ⴅ);
              num1 = 2;
              continue;
          }
        }
label_8:
        return obj0.Data;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        Exception o2 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o3 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        StackFrameHelper.CreateException4(ex, (object) o1, (object) o2, (object) o3, (object) o4);
        throw;
      }
    }

    internal static void Ⴀ([In] System.Windows.Forms.Timer obj0, [In] int obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
        num1 = 3;
        while (true)
        {
          switch (num1)
          {
            case 0:
              num1 = 3;
              continue;
            case 1:
              goto label_7;
            case 2:
              goto label_8;
            default:
              int num2;
              switch (obj3 ^ obj2)
              {
                case 98:
                  num2 = 1;
                  break;
                default:
                  num2 = 0;
                  break;
              }
              num1 = num2;
              continue;
          }
        }
label_8:
        return;
label_7:
        obj0.Interval = obj1;
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        int num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> o2 = (ValueType) num3;
        System.Windows.Forms.Timer o3 = obj0;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o6 = (ValueType) obj3;
        StackFrameHelper.CreateException6(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5, (object) o6);
        throw;
      }
    }

    internal static string Ⴐ([In] ref byte obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      int num1;
      try
      {
label_3:
        int num2;
        switch (obj3 ^ obj2)
        {
          case 88:
            num2 = 2;
            break;
          default:
            num2 = 1;
            break;
        }
        num1 = num2;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
            case 4:
            case 7:
              goto label_8;
            case 1:
              num1 = 6;
              continue;
            case 5:
              num1 = 6;
              continue;
            case 6:
              goto label_3;
            default:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (Ⴜ.Ⴐ);
              num1 = 6;
              continue;
          }
        }
label_8:
        return obj0.ToString(obj1);
      }
      catch (Exception ex)
      {
        // ISSUE: variable of a boxed type
        __Boxed<int> o1 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<byte> o2 = (ValueType) obj0;
        string o3 = obj1;
        // ISSUE: variable of a boxed type
        __Boxed<int> o4 = (ValueType) obj2;
        // ISSUE: variable of a boxed type
        __Boxed<int> o5 = (ValueType) obj3;
        StackFrameHelper.CreateException5(ex, (object) o1, (object) o2, (object) o3, (object) o4, (object) o5);
        throw;
      }
    }
  }
}
