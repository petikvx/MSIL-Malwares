// Decompiled with JetBrains decompiler
// Type: 964193174928.558405969293
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003964193174928;
using System.Linq.Expressions;

namespace \u003964193174928
{
  internal class \u003558405969293 : ExpressionVisitor
  {
    internal static readonly object \u003870027598684 = new object();

    protected override Expression VisitConditional(ConditionalExpression node) => node.IfFalse.NodeType == ExpressionType.Throw ? (Expression) Expression.Condition(node.Test, node.IfTrue, (Expression) Expression.Constant(\u003558405969293.\u003870027598684)) : base.VisitConditional(node);
  }
}
