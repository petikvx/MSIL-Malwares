// Decompiled with JetBrains decompiler
// Type: NuGet.Common.l6BkPTcFbv
// Assembly: Ty6CWyxFEL, Version=5.0.0.2, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 271E2DAF-741A-443A-8BCF-B62C509DDC38
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Ransom.MSIL.Purgen.gen-185fafbeb00cd8238fdabee088763e27012dd3a0076e04dddca6266f129f0430.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;

namespace NuGet.Common
{
  public static class l6BkPTcFbv
  {
    private static readonly string[] OaPxlxsXSe = new string[2]
    {
      "DEVENV",
      "BLEND"
    };
    private static Lazy<bool> dF1If1Vy6X = new Lazy<bool>((Func<bool>) (() => Type.GetType("Mono.Runtime") != (Type) null));
    private static Lazy<bool> sUHklNG35R = new Lazy<bool>((Func<bool>) (() => ((IEnumerable<string>) l6BkPTcFbv.OaPxlxsXSe).Any<string>(new Func<string, bool>(new l6BkPTcFbv.UmbZAh3dYR()
    {
      Tyfn7HcNKW = Path.GetFileNameWithoutExtension(l6BkPTcFbv.\u00356l6aVYZ3f())
    }.CKN7c2gzCP))));

    [DllImport("libc", EntryPoint = "uname")]
    private static extern int sl3dT1hFQk(IntPtr M7jvZ29fTM);

    public static bool OoRgJZVw7H { get; set; }

    public static bool ooEPhgvzVK
    {
      get
      {
        int platform = (int) Environment.OSVersion.Platform;
        switch (platform)
        {
          case 4:
          case 6:
            return false;
          default:
            return platform != 128;
        }
      }
    }

    public static bool k7Msslik5l => !l6BkPTcFbv.urWeakwFtm && l6BkPTcFbv.dF1If1Vy6X.Value;

    public static bool urWeakwFtm => l6BkPTcFbv.sUHklNG35R.Value;

    private static string \u00356l6aVYZ3f()
    {
      using (Process currentProcess = Process.GetCurrentProcess())
        return currentProcess.MainModule.FileName;
    }

    public static bool hYjWrmIQM5
    {
      get
      {
        IntPtr num = IntPtr.Zero;
        try
        {
          num = Marshal.AllocHGlobal(8192);
          if (l6BkPTcFbv.sl3dT1hFQk(num) == 0)
          {
            if (Marshal.PtrToStringAnsi(num) == "Darwin")
              return true;
          }
        }
        catch
        {
        }
        finally
        {
          if (num != IntPtr.Zero)
            Marshal.FreeHGlobal(num);
        }
        return false;
      }
    }

    public static bool cW7xbf8Fg7 => Environment.OSVersion.Platform == PlatformID.Unix;
  }
}
