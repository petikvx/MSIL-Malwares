// Decompiled with JetBrains decompiler
// Type:  
// Assembly: ICDF, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C613125F-06A1-4F4F-F6FA-0F3E7CE39FFB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-4489f7479f7c2f96ae84800da3c916fce9babfd1100c5fcead0f2bc54e916cb6.exe

using DomainObjects;
using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Text;

[Table(Name = "dbo.SetSong")]
public sealed class \u0002\u2007 : 
  INotifyPropertyChanging,
  INotifyPropertyChanged,
  ISetSong,
  \u000E\u2006
{
  private static PropertyChangingEventArgs \u0002 = new PropertyChangingEventArgs(string.Empty);
  private Guid _SetSongId;
  private Guid? _SetId;
  private string _SongName;
  private double? _Length;
  private bool _Cover;
  private string _Abbreviation;
  private short? _Order;
  private string _Tease;
  private string _Notes;
  private string _SpecialAppearances;
  private short? _JamStyle;
  private bool _BustOut;
  private bool _Segue;
  private DateTime _CreatedDate;
  private DateTime? _UpdatedDate;
  private DateTime? _DeletedDate;
  private bool _Deleted;
  private EntityRef<\u000F\u2006> _Set;

  public \u0002\u2007() => this._Set = new EntityRef<\u000F\u2006>();

  [Column(DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true, Storage = "_SetSongId")]
  public Guid SetSongId
  {
    get => this._SetSongId;
    set
    {
      if (!(this._SetSongId != value))
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._SetSongId = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418879));
    }
  }

  [Column(DbType = "UniqueIdentifier", Storage = "_SetId")]
  public Guid? SetId
  {
    get => this._SetId;
    set
    {
      Guid? setId = this._SetId;
      Guid? nullable = value;
      if ((setId.HasValue == nullable.HasValue ? (setId.HasValue ? (setId.GetValueOrDefault() != nullable.GetValueOrDefault() ? 1 : 0) : 0) : 1) == 0)
        return;
      if (this._Set.HasLoadedOrAssignedValue)
        throw new ForeignKeyReferenceAlreadyHasValueException();
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._SetId = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192419202));
    }
  }

  [Column(DbType = "VarChar(100)", Storage = "_SongName")]
  public string SongName
  {
    get => this._SongName;
    set
    {
      if (!(this._SongName != value))
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._SongName = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418863));
    }
  }

  [Column(DbType = "Float", Storage = "_Length")]
  public double? Length
  {
    get => this._Length;
    set
    {
      double? length = this._Length;
      double? nullable = value;
      if (length.GetValueOrDefault() == nullable.GetValueOrDefault() & length.HasValue == nullable.HasValue)
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._Length = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418898));
    }
  }

  [Column(DbType = "Bit NOT NULL", Storage = "_Cover")]
  public bool Cover
  {
    get => this._Cover;
    set
    {
      if (this._Cover == value)
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._Cover = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418883));
    }
  }

  [Column(DbType = "NVarChar(50)", Storage = "_Abbreviation")]
  public string Abbreviation
  {
    get => this._Abbreviation;
    set
    {
      if (!(this._Abbreviation != value))
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._Abbreviation = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418935));
    }
  }

  [Column(DbType = "SmallInt", Name = "[Order]", Storage = "_Order")]
  public short? Order
  {
    get => this._Order;
    set
    {
      short? order = this._Order;
      int? nullable1 = order.HasValue ? new int?((int) order.GetValueOrDefault()) : new int?();
      short? nullable2 = value;
      int? nullable3 = nullable2.HasValue ? new int?((int) nullable2.GetValueOrDefault()) : new int?();
      if (nullable1.GetValueOrDefault() == nullable3.GetValueOrDefault() & nullable1.HasValue == nullable3.HasValue)
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._Order = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418918));
    }
  }

  [Column(DbType = "VarChar(100)", Storage = "_Tease")]
  public string Tease
  {
    get => this._Tease;
    set
    {
      if (!(this._Tease != value))
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._Tease = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418922));
    }
  }

  [Column(DbType = "NVarChar(MAX)", Storage = "_Notes")]
  public string Notes
  {
    get => this._Notes;
    set
    {
      if (!(this._Notes != value))
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._Notes = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192419287));
    }
  }

  [Column(DbType = "VarChar(100)", Storage = "_SpecialAppearances")]
  public string SpecialAppearances
  {
    get => this._SpecialAppearances;
    set
    {
      if (!(this._SpecialAppearances != value))
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._SpecialAppearances = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418974));
    }
  }

  [Column(DbType = "SmallInt", Storage = "_JamStyle")]
  public short? JamStyle
  {
    get => this._JamStyle;
    set
    {
      short? jamStyle = this._JamStyle;
      int? nullable1 = jamStyle.HasValue ? new int?((int) jamStyle.GetValueOrDefault()) : new int?();
      short? nullable2 = value;
      int? nullable3 = nullable2.HasValue ? new int?((int) nullable2.GetValueOrDefault()) : new int?();
      if (nullable1.GetValueOrDefault() == nullable3.GetValueOrDefault() & nullable1.HasValue == nullable3.HasValue)
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._JamStyle = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418995));
    }
  }

  [Column(DbType = "Bit NOT NULL", Storage = "_BustOut")]
  public bool BustOut
  {
    get => this._BustOut;
    set
    {
      if (this._BustOut == value)
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._BustOut = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418982));
    }
  }

  [Column(DbType = "Bit NOT NULL", Storage = "_Segue")]
  public bool Segue
  {
    get => this._Segue;
    set
    {
      if (this._Segue == value)
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._Segue = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192419032));
    }
  }

  [Column(DbType = "DateTime NOT NULL", Storage = "_CreatedDate")]
  public DateTime CreatedDate
  {
    get => this._CreatedDate;
    set
    {
      if (!(this._CreatedDate != value))
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._CreatedDate = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192419291));
    }
  }

  [Column(DbType = "DateTime", Storage = "_UpdatedDate")]
  public DateTime? UpdatedDate
  {
    get => this._UpdatedDate;
    set
    {
      DateTime? updatedDate = this._UpdatedDate;
      DateTime? nullable = value;
      if ((updatedDate.HasValue == nullable.HasValue ? (updatedDate.HasValue ? (updatedDate.GetValueOrDefault() != nullable.GetValueOrDefault() ? 1 : 0) : 0) : 1) == 0)
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._UpdatedDate = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192419273));
    }
  }

  [Column(DbType = "DateTime", Storage = "_DeletedDate")]
  public DateTime? DeletedDate
  {
    get => this._DeletedDate;
    set
    {
      DateTime? deletedDate = this._DeletedDate;
      DateTime? nullable = value;
      if ((deletedDate.HasValue == nullable.HasValue ? (deletedDate.HasValue ? (deletedDate.GetValueOrDefault() != nullable.GetValueOrDefault() ? 1 : 0) : 0) : 1) == 0)
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._DeletedDate = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192419303));
    }
  }

  [Column(DbType = "Bit NOT NULL", Storage = "_Deleted")]
  public bool Deleted
  {
    get => this._Deleted;
    set
    {
      if (this._Deleted == value)
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      this._Deleted = value;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192418837));
    }
  }

  [Association(IsForeignKey = true, Name = "Set_SetSong", OtherKey = "SetId", Storage = "_Set", ThisKey = "SetId")]
  public \u000F\u2006 Set
  {
    get => this._Set.Entity;
    set
    {
      \u000F\u2006 entity = this._Set.Entity;
      if (entity == value && this._Set.HasLoadedOrAssignedValue)
        return;
      this.\u0002\u2007​\u2006\u2009\u2002\u0002();
      if (entity != null)
      {
        this._Set.Entity = (\u000F\u2006) null;
        entity.SetSongs.Remove(this);
      }
      this._Set.Entity = value;
      if (value != null)
      {
        value.SetSongs.Add(this);
        this._SetId = new Guid?(value.SetId);
      }
      else
        this._SetId = new Guid?();
      this.\u0002\u2007​\u2006\u2009\u2002\u0002(\u0008\u200A.\u0002(-192419036));
    }
  }

  public event PropertyChangingEventHandler PropertyChanging;

  public event PropertyChangedEventHandler PropertyChanged;

  protected virtual void \u0002\u2007​\u2006\u2009\u2002\u0002()
  {
    if (this.\u0003 == null)
      return;
    this.\u0003((object) this, \u0002\u2007.\u0002);
  }

  protected virtual void \u0002\u2007​\u2006\u2009\u2002\u0002(string _param1)
  {
    if (this.\u0005 == null)
      return;
    this.\u0005((object) this, new PropertyChangedEventArgs(_param1));
  }

  public string \u0002(double? _param1, DateTime? _param2, string _param3, string _param4)
  {
    if (!_param1.HasValue && !_param2.HasValue && _param3 == null && _param4 == null)
      return string.Empty;
    StringBuilder stringBuilder = new StringBuilder();
    string str = _param2.Value.ToString(\u0008\u200A.\u0002(-192419010));
    if (_param1.HasValue)
      stringBuilder.Append(_param1.Value);
    if (_param2.HasValue)
    {
      if (stringBuilder.Length > 0)
        stringBuilder.Append(\u0008\u200A.\u0002(-192419071));
      stringBuilder.Append(str);
    }
    if (!string.IsNullOrEmpty(_param3))
    {
      if (stringBuilder.Length > 0)
        stringBuilder.Append(\u0008\u200A.\u0002(-192419071));
      stringBuilder.Append(_param3);
      if (!string.IsNullOrEmpty(_param4))
        stringBuilder.Append(\u0008\u200A.\u0002(-192419045) + _param4);
    }
    return stringBuilder.ToString();
  }
}
