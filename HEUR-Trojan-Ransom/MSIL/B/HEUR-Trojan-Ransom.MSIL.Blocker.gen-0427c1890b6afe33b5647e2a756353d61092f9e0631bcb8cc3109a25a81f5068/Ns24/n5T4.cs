// Decompiled with JetBrains decompiler
// Type: Ns24.n5T4
// Assembly: Kw9, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 454AB7CE-9D73-4F30-B915-379BCB1A28FE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.09-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0427c1890b6afe33b5647e2a756353d61092f9e0631bcb8cc3109a25a81f5068.exe

using Gg6i;
using Qs4z;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using System.Diagnostics;
using System.Runtime.CompilerServices;

namespace Ns24
{
  [DesignerCategory("code")]
  [ToolboxItem(true)]
  [DataObject(true)]
  [Designer("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
  [HelpKeyword("vs.data.TableAdapter")]
  public class n5T4 : Component
  {
    private SqlConnection _connection;
    private SqlTransaction _transaction;
    private SqlCommand[] _commandCollection;
    private bool _clearBeforeFill;

    [field: AccessedThroughProperty("_adapter")]
    private virtual SqlDataAdapter _adapter { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public n5T4() => this.ClearBeforeFill = true;

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected internal SqlDataAdapter Adapter
    {
      get
      {
        if (this._adapter == null)
          this.Dn8j();
        return this._adapter;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal SqlConnection Connection
    {
      get
      {
        if (this._connection == null)
          this.Tf4i();
        return this._connection;
      }
      set
      {
        this._connection = value;
        if (this.Adapter.InsertCommand != null)
          this.Adapter.InsertCommand.Connection = value;
        if (this.Adapter.DeleteCommand != null)
          this.Adapter.DeleteCommand.Connection = value;
        if (this.Adapter.UpdateCommand != null)
          this.Adapter.UpdateCommand.Connection = value;
        int index = 0;
        while (index < this.CommandCollection.Length)
        {
          if (this.CommandCollection[index] != null)
            this.CommandCollection[index].Connection = value;
          checked { ++index; }
        }
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal SqlTransaction Transaction
    {
      get => this._transaction;
      set
      {
        this._transaction = value;
        int index = 0;
        while (index < this.CommandCollection.Length)
        {
          this.CommandCollection[index].Transaction = this._transaction;
          checked { ++index; }
        }
        if (this.Adapter != null && this.Adapter.DeleteCommand != null)
          this.Adapter.DeleteCommand.Transaction = this._transaction;
        if (this.Adapter != null && this.Adapter.InsertCommand != null)
          this.Adapter.InsertCommand.Transaction = this._transaction;
        if (this.Adapter == null || this.Adapter.UpdateCommand == null)
          return;
        this.Adapter.UpdateCommand.Transaction = this._transaction;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected SqlCommand[] CommandCollection
    {
      get
      {
        if (this._commandCollection == null)
          this.a6X8();
        return this._commandCollection;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public bool ClearBeforeFill
    {
      get => this._clearBeforeFill;
      set => this._clearBeforeFill = value;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void Dn8j()
    {
      this._adapter = new SqlDataAdapter();
      this._adapter.TableMappings.Add((object) new DataTableMapping()
      {
        SourceTable = "Table",
        DataSetTable = "User",
        ColumnMappings = {
          {
            "Id",
            "Id"
          },
          {
            "Username",
            "Username"
          },
          {
            "Password",
            "Password"
          },
          {
            "Fullname",
            "Fullname"
          },
          {
            "Picture",
            "Picture"
          }
        }
      });
      this._adapter.DeleteCommand = new SqlCommand();
      this._adapter.DeleteCommand.Connection = this.Connection;
      this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[User] WHERE (([Id] = @Original_Id) AND ((@IsNull_Username = 1 AND [Username] IS NULL) OR ([Username] = @Original_Username)) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)) AND ((@IsNull_Fullname = 1 AND [Fullname] IS NULL) OR ([Fullname] = @Original_Fullname)))";
      this._adapter.DeleteCommand.CommandType = CommandType.Text;
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Id", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Id", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Username", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Username", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Username", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Username", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Password", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Password", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Password", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Password", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Fullname", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Fullname", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Fullname", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Fullname", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.InsertCommand = new SqlCommand();
      this._adapter.InsertCommand.Connection = this.Connection;
      this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[User] ([Username], [Password], [Fullname], [Picture]) VALUES (@Username, @Password, @Fullname, @Picture);\r\nSELECT Id, Username, Password, Fullname, Picture FROM [User] WHERE (Id = SCOPE_IDENTITY())";
      this._adapter.InsertCommand.CommandType = CommandType.Text;
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Username", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Username", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Password", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Password", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Fullname", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Fullname", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Picture", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Picture", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand = new SqlCommand();
      this._adapter.UpdateCommand.Connection = this.Connection;
      this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[User] SET [Username] = @Username, [Password] = @Password, [Fullname] = @Fullname, [Picture] = @Picture WHERE (([Id] = @Original_Id) AND ((@IsNull_Username = 1 AND [Username] IS NULL) OR ([Username] = @Original_Username)) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)) AND ((@IsNull_Fullname = 1 AND [Fullname] IS NULL) OR ([Fullname] = @Original_Fullname)));\r\nSELECT Id, Username, Password, Fullname, Picture FROM [User] WHERE (Id = @Id)";
      this._adapter.UpdateCommand.CommandType = CommandType.Text;
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Username", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Username", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Password", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Password", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Fullname", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Fullname", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Picture", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Picture", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Id", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Id", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Username", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Username", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Username", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Username", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Password", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Password", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Password", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Password", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Fullname", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Fullname", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Fullname", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Fullname", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Id", SqlDbType.Int, 4, ParameterDirection.Input, (byte) 0, (byte) 0, "Id", DataRowVersion.Current, false, (object) null, "", "", ""));
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void Tf4i()
    {
      this._connection = new SqlConnection();
      this._connection.ConnectionString = f6CG.Default.SMSDBConnectionString;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void a6X8()
    {
      this._commandCollection = new SqlCommand[1];
      this._commandCollection[0] = new SqlCommand();
      this._commandCollection[0].Connection = this.Connection;
      this._commandCollection[0].CommandText = "SELECT Id, Username, Password, Fullname, Picture FROM dbo.[User]";
      this._commandCollection[0].CommandType = CommandType.Text;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Fill, true)]
    public virtual int Nr3k(k5H3.Mm7 Pd7w)
    {
      this.Adapter.SelectCommand = this.CommandCollection[0];
      if (this.ClearBeforeFill)
        Pd7w.Clear();
      return this.Adapter.Fill((DataTable) Pd7w);
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public virtual k5H3.Mm7 Eg0p()
    {
      this.Adapter.SelectCommand = this.CommandCollection[0];
      k5H3.Mm7 mm7 = new k5H3.Mm7();
      this.Adapter.Fill((DataTable) mm7);
      return mm7;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    public virtual int Jw68(k5H3.Mm7 c3H8) => this.Adapter.Update((DataTable) c3H8);

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    public virtual int Qc0z(k5H3 o5FN) => this.Adapter.Update((DataSet) o5FN, "User");

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    public virtual int Zb96(DataRow Qn0e) => this.Adapter.Update(new DataRow[1]
    {
      Qn0e
    });

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    public virtual int Tm81(DataRow[] Bq42) => this.Adapter.Update(Bq42);

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Delete, true)]
    public virtual int p2HL(int k0MC, string q8JW, string d1J2, string z9P8)
    {
      this.Adapter.DeleteCommand.Parameters[0].Value = (object) k0MC;
      if (q8JW == null)
      {
        this.Adapter.DeleteCommand.Parameters[1].Value = (object) 1;
        this.Adapter.DeleteCommand.Parameters[2].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.DeleteCommand.Parameters[1].Value = (object) 0;
        this.Adapter.DeleteCommand.Parameters[2].Value = (object) q8JW;
      }
      if (d1J2 == null)
      {
        this.Adapter.DeleteCommand.Parameters[3].Value = (object) 1;
        this.Adapter.DeleteCommand.Parameters[4].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.DeleteCommand.Parameters[3].Value = (object) 0;
        this.Adapter.DeleteCommand.Parameters[4].Value = (object) d1J2;
      }
      if (z9P8 == null)
      {
        this.Adapter.DeleteCommand.Parameters[5].Value = (object) 1;
        this.Adapter.DeleteCommand.Parameters[6].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.DeleteCommand.Parameters[5].Value = (object) 0;
        this.Adapter.DeleteCommand.Parameters[6].Value = (object) z9P8;
      }
      ConnectionState state = this.Adapter.DeleteCommand.Connection.State;
      if ((this.Adapter.DeleteCommand.Connection.State & ConnectionState.Open) != ConnectionState.Open)
        this.Adapter.DeleteCommand.Connection.Open();
      try
      {
        return this.Adapter.DeleteCommand.ExecuteNonQuery();
      }
      finally
      {
        if (state == ConnectionState.Closed)
          this.Adapter.DeleteCommand.Connection.Close();
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Insert, true)]
    public virtual int w5C3(string r3ZE, string y0YJ, string Ja3e, string Ft9e)
    {
      this.Adapter.InsertCommand.Parameters[0].Value = r3ZE != null ? (object) r3ZE : (object) DBNull.Value;
      this.Adapter.InsertCommand.Parameters[1].Value = y0YJ != null ? (object) y0YJ : (object) DBNull.Value;
      this.Adapter.InsertCommand.Parameters[2].Value = Ja3e != null ? (object) Ja3e : (object) DBNull.Value;
      this.Adapter.InsertCommand.Parameters[3].Value = Ft9e != null ? (object) Ft9e : (object) DBNull.Value;
      ConnectionState state = this.Adapter.InsertCommand.Connection.State;
      if ((this.Adapter.InsertCommand.Connection.State & ConnectionState.Open) != ConnectionState.Open)
        this.Adapter.InsertCommand.Connection.Open();
      try
      {
        return this.Adapter.InsertCommand.ExecuteNonQuery();
      }
      finally
      {
        if (state == ConnectionState.Closed)
          this.Adapter.InsertCommand.Connection.Close();
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Update, true)]
    public virtual int a6DZ(
      string w9J6,
      string y8YL,
      string k5Q0,
      string g1D0,
      int x9L1,
      string Hb9d,
      string Cc56,
      string o0FX,
      int s6AW)
    {
      this.Adapter.UpdateCommand.Parameters[0].Value = w9J6 != null ? (object) w9J6 : (object) DBNull.Value;
      this.Adapter.UpdateCommand.Parameters[1].Value = y8YL != null ? (object) y8YL : (object) DBNull.Value;
      this.Adapter.UpdateCommand.Parameters[2].Value = k5Q0 != null ? (object) k5Q0 : (object) DBNull.Value;
      this.Adapter.UpdateCommand.Parameters[3].Value = g1D0 != null ? (object) g1D0 : (object) DBNull.Value;
      this.Adapter.UpdateCommand.Parameters[4].Value = (object) x9L1;
      if (Hb9d == null)
      {
        this.Adapter.UpdateCommand.Parameters[5].Value = (object) 1;
        this.Adapter.UpdateCommand.Parameters[6].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.UpdateCommand.Parameters[5].Value = (object) 0;
        this.Adapter.UpdateCommand.Parameters[6].Value = (object) Hb9d;
      }
      if (Cc56 == null)
      {
        this.Adapter.UpdateCommand.Parameters[7].Value = (object) 1;
        this.Adapter.UpdateCommand.Parameters[8].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.UpdateCommand.Parameters[7].Value = (object) 0;
        this.Adapter.UpdateCommand.Parameters[8].Value = (object) Cc56;
      }
      if (o0FX == null)
      {
        this.Adapter.UpdateCommand.Parameters[9].Value = (object) 1;
        this.Adapter.UpdateCommand.Parameters[10].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.UpdateCommand.Parameters[9].Value = (object) 0;
        this.Adapter.UpdateCommand.Parameters[10].Value = (object) o0FX;
      }
      this.Adapter.UpdateCommand.Parameters[11].Value = (object) s6AW;
      ConnectionState state = this.Adapter.UpdateCommand.Connection.State;
      if ((this.Adapter.UpdateCommand.Connection.State & ConnectionState.Open) != ConnectionState.Open)
        this.Adapter.UpdateCommand.Connection.Open();
      try
      {
        return this.Adapter.UpdateCommand.ExecuteNonQuery();
      }
      finally
      {
        if (state == ConnectionState.Closed)
          this.Adapter.UpdateCommand.Connection.Close();
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Update, true)]
    public virtual int Sz3y(
      string Qx14,
      string Jt15,
      string Xp23,
      string Tw9y,
      int Ey2c,
      string r6G8,
      string Wx20,
      string f1N4)
    {
      return this.a6DZ(Qx14, Jt15, Xp23, Tw9y, Ey2c, r6G8, Wx20, f1N4, Ey2c);
    }

    static void m4T2()
    {
      // ISSUE: unable to decompile the method.
    }

    static void Mp3g()
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
