// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0015;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0015
{
  internal static class \u000E
  {
    public static MemberTypes \u0001([In] MemberInfo obj0) => \u008D\u0002.\u007E\u0006\u0006((object) obj0);

    public static bool \u0001([In] Type obj0) => \u0015\u0002.\u007E\u0003\u0005((object) obj0);

    public static bool \u0002([In] Type obj0) => \u0015\u0002.\u007E\u0004\u0005((object) obj0);

    public static bool \u0003([In] Type obj0) => \u0015\u0002.\u007E\u0005\u0005((object) obj0);

    public static bool \u0004([In] Type obj0) => \u0015\u0002.\u007E\u0006\u0005((object) obj0);

    public static Type \u0001([In] Type obj0) => \u0001\u0002.\u007E\u001C\u0004((object) obj0);

    public static bool \u0005([In] Type obj0) => \u0015\u0002.\u007E\u0007\u0005((object) obj0);

    public static bool \u0006([In] Type obj0) => \u0015\u0002.\u007E\u0008\u0005((object) obj0);

    public static bool \u0007([In] Type obj0) => \u0015\u0002.\u007E\u000E\u0005((object) obj0);

    public static bool \u0008([In] Type obj0) => \u0015\u0002.\u007E\u000F\u0005((object) obj0);

    public static bool \u000E([In] Type obj0) => \u0015\u0002.\u007E\u0010\u0005((object) obj0);

    public static bool \u0001(Type _param0, string _param1, out Type _param2)
    {
      Type type = _param0;
      do
      {
        for (; (object) type != null; type = \u000E.\u0001(type))
        {
          if (!\u008E\u0002.\u0007\u0006(\u0001.\u007E\u0008((object) type), _param1, StringComparison.Ordinal))
            goto label_3;
          else
            goto label_18;
label_2:
          return true;
label_3:
          if (true)
          {
            if (true)
              continue;
          }
          else
            goto label_2;
label_18:
          _param2 = type;
          goto label_2;
        }
        if (false)
          goto label_9;
      }
      while (false);
      Type[] typeArray = \u008F\u0002.\u007E\u0008\u0006((object) _param0);
label_9:
      int index = 0;
      while (true)
      {
        int num1 = index;
        int num2 = typeArray.Length;
        if (true)
          num2 = num2;
        if (num1 < num2)
        {
          if (true)
          {
            if (!\u008E\u0002.\u0007\u0006(\u0001.\u007E\u000E((object) typeArray[index]), _param1, StringComparison.Ordinal))
              ++index;
            else
              break;
          }
          else
            goto label_9;
        }
        else
          goto label_17;
      }
      _param2 = _param0;
      return true;
label_17:
      _param2 = (Type) null;
      return false;
    }

    public static bool \u0001([In] Type obj0, [In] string obj1) => \u000E.\u0001(obj0, obj1, out Type _);

    public static bool \u0001([In] Type obj0, [In] Type obj1)
    {
label_0:
label_12:
      for (Type type = obj0; (object) type != null; type = \u000E.\u0001(type))
      {
        if (true)
        {
          IEnumerator<Type> enumerator = ((IEnumerable<Type>) \u008F\u0002.\u007E\u0008\u0006((object) type)).GetEnumerator();
          bool flag;
          try
          {
            Type current;
            do
            {
              if (\u0015\u0002.\u007E\u009E\u0004((object) enumerator))
                current = enumerator.Current;
              else
                goto label_12;
            }
            while ((object) current != (object) obj1 && ((object) current == null || !\u000E.\u0001(current, obj1)));
            if (true)
              flag = true;
          }
          finally
          {
            if (enumerator != null)
              \u0011.\u007E\u0007\u0002((object) enumerator);
          }
          return flag;
        }
        goto label_0;
      }
      return false;
    }
  }
}
