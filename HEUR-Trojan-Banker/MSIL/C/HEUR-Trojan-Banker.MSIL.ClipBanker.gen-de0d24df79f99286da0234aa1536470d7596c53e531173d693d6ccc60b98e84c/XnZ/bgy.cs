// Decompiled with JetBrains decompiler
// Type: XnZ.bgy
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u0032p2;
using \u0032W4;
using e2r;
using Qlv;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;

namespace XnZ
{
  internal sealed class bgy : \u0037Ro
  {
    private Regex \u0033zw;
    private string JU1;
    internal y2w fKa;
    private string \u003149;

    [SpecialName]
    internal virtual void bU1([In] string obj0)
    {
      if (Directory.Exists(obj0))
        this.\u003149 = "." + Path.DirectorySeparatorChar.ToString() + obj0 + Path.DirectorySeparatorChar.ToString() + "*.*";
      else
        this.\u003149 = obj0;
      this.JU1 = "^" + Regex.Escape(this.\u003149).Replace("\\\\\\*\\.\\*", "\\\\([^\\.]+|.*\\.[^\\\\\\.]*)").Replace("\\.\\*", "\\.[^\\\\\\.]*").Replace("\\*", ".*").Replace("\\?", "[^\\\\\\.]") + "$";
      this.\u0033zw = new Regex(this.JU1, RegexOptions.IgnoreCase);
    }

    string object.B46()
    {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.Append("name ").Append(\u0039w4.u1W((Enum) this.fKa)).Append(" '").Append(this.\u003149).Append("'");
      return stringBuilder.ToString();
    }

    bool \u0037Ro.Fd1([In] string obj0) => this.LV5(obj0);

    private bool LV5([In] string obj0)
    {
      bool flag = this.\u0033zw.IsMatch(this.\u003149.IndexOf(Path.DirectorySeparatorChar) == -1 ? Path.GetFileName(obj0) : obj0);
      if (this.fKa != y2w.EqualTo)
        flag = !flag;
      return flag;
    }

    bool \u0037Ro.\u0035Jx([In] q14 obj0) => this.LV5(obj0.L83.Replace(Path.DirectorySeparatorChar == '/' ? '\\' : '/', Path.DirectorySeparatorChar));
  }
}
