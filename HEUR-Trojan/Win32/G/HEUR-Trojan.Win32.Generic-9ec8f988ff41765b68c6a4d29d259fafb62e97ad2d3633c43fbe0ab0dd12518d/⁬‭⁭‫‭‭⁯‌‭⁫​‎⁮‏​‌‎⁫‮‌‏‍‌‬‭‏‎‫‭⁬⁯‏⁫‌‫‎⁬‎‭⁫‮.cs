// Decompiled with JetBrains decompiler
// Type: ⁬‭⁭‫‭‭⁯‌‭⁫​‎⁮‏​‌‎⁫‮‌‏‍‌‬‭‏‎‫‭⁬⁯‏⁫‌‫‎⁬‎‭⁫‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public abstract class \u206C‭⁭‫‭‭⁯‌‭⁫​‎⁮‏​‌‎⁫‮‌‏‍‌‬‭‏‎‫‭⁬⁯‏⁫‌‫‎⁬‎‭⁫‮ : 
  \u200B‏‌‍​‌⁫​‌⁫⁬‫⁫⁮‌‬⁬⁬‪⁫⁯⁪​‪​‬‭‌‪​​⁮‭​⁪‬⁪⁫⁯‏‮
{
  public virtual \u200B‏‌‍​‌⁫​‌⁫⁬‫⁫⁮‌‬⁬⁬‪⁫⁯⁪​‪​‬‭‌‪​​⁮‭​⁪‬⁪⁫⁯‏‮ \u206A⁯‬​‬‍⁭⁬⁫⁯‫‫‎‌​‌‎‭​‭‎‎‬‌⁮⁮‭‌‏⁯⁪‍‪‬⁮​‬‎​‮‮()
  {
    int num1 = this.\u200F‬‮‬⁮⁪‫⁯‭⁭​‌⁬⁯⁮​‫⁯⁮⁭⁯‪‌⁬⁮‏‍⁫⁪⁭‮⁫‌‬‫‫‬⁫⁫‌‮;
    if ((num1 & 1) == 0)
      throw new InvalidOperationException("Half-trace only defined for odd m");
    int num2 = num1 + 1 >> 1;
    int num3 = 31 - \u202A⁯⁪⁮‌‫‍‎‬‫⁯⁪⁪⁯⁮‍‫‫‫⁯⁪‭​⁬‬‏​‭‎‪⁯‮​​‬​‌‎‏⁪‮.\u206F‍‫⁯‮‍‍⁮‪‭⁬‫‬‍‫‭⁯⁬‪‭‫‪‌‍‪⁪⁬⁫‏⁮‍‍⁭‍‍​⁭‪⁬‫‮(num2);
    int num4 = 1;
    \u200B‏‌‍​‌⁫​‌⁫⁬‫⁫⁮‌‬⁬⁬‪⁫⁯⁪​‪​‬‭‌‪​​⁮‭​⁪‬⁪⁫⁯‏‮ obj = (\u200B‏‌‍​‌⁫​‌⁫⁬‫⁫⁮‌‬⁬⁬‪⁫⁯⁪​‪​‬‭‌‪​​⁮‭​⁪‬⁪⁫⁯‏‮) this;
    while (num3 > 0)
    {
      obj = obj.\u200B⁬⁮‪⁪​‮‏⁯⁯⁫⁮⁮⁫‏⁮‬⁭‬‍‭‮‏⁬‍⁪‭‎‭‪⁯⁫​‭‪⁬⁪‎‮‮(num4 << 1).\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(obj);
      num4 = num2 >> --num3;
      if ((num4 & 1) != 0)
        obj = obj.\u200B⁬⁮‪⁪​‮‏⁯⁯⁫⁮⁮⁫‏⁮‬⁭‬‍‭‮‏⁬‍⁪‭‎‭‪⁯⁫​‭‪⁬⁪‎‮‮(2).\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((\u200B‏‌‍​‌⁫​‌⁫⁬‫⁫⁮‌‬⁬⁬‪⁫⁯⁪​‪​‬‭‌‪​​⁮‭​⁪‬⁪⁫⁯‏‮) this);
    }
    return obj;
  }

  public virtual bool \u202D​‫‬⁭⁭‮⁯⁭⁮⁪‏‪‫‭⁭‬‭‌⁪‍‌⁯⁭⁯‌⁫⁪‫⁭‫‫‍⁭‍‍⁪⁬‏‪‮ => false;

  public virtual int \u206A‭‭‫‫‬‎⁪⁭⁫‪⁯⁫⁭⁫⁬‍‪⁫⁬‮‪‪‮⁪‌‏‮‮‫‪‫⁫‭‫⁭⁯‮‭‎‮()
  {
    int num1 = this.\u200F‬‮‬⁮⁪‫⁯‭⁭​‌⁬⁯⁮​‫⁯⁮⁭⁯‪‌⁬⁮‏‍⁫⁪⁭‮⁫‌‬‫‫‬⁫⁫‌‮;
    int num2 = 31 - \u202A⁯⁪⁮‌‫‍‎‬‫⁯⁪⁪⁯⁮‍‫‫‫⁯⁪‭​⁬‬‏​‭‎‪⁯‮​​‬​‌‎‏⁪‮.\u206F‍‫⁯‮‍‍⁮‪‭⁬‫‬‍‫‭⁯⁬‪‭‫‪‌‍‪⁪⁬⁫‏⁮‍‍⁭‍‍​⁭‪⁬‫‮(num1);
    int num3 = 1;
    \u200B‏‌‍​‌⁫​‌⁫⁬‫⁫⁮‌‬⁬⁬‪⁫⁯⁪​‪​‬‭‌‪​​⁮‭​⁪‬⁪⁫⁯‏‮ obj = (\u200B‏‌‍​‌⁫​‌⁫⁬‫⁫⁮‌‬⁬⁬‪⁫⁯⁪​‪​‬‭‌‪​​⁮‭​⁪‬⁪⁫⁯‏‮) this;
    while (num2 > 0)
    {
      obj = obj.\u200B⁬⁮‪⁪​‮‏⁯⁯⁫⁮⁮⁫‏⁮‬⁭‬‍‭‮‏⁬‍⁪‭‎‭‪⁯⁫​‭‪⁬⁪‎‮‮(num3).\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮(obj);
      num3 = num1 >> --num2;
      if ((num3 & 1) != 0)
        obj = obj.\u200E‎‪⁬‬‏‌⁪⁭‌⁯‮‎‍‬⁬‮⁭‭‏‫‫⁪⁫‪‍‭‫⁪‎‍⁫‫‎‍‏⁯‫‫‮‮().\u206E‬‫‪‍‬​⁯⁪‫‍⁮⁮‌‫‮‭⁯​‫‫⁬⁫⁯‭‌⁪⁬⁮​⁯⁮‮‏⁫‏‪⁮⁯‬‮((\u200B‏‌‍​‌⁫​‌⁫⁬‫⁫⁮‌‬⁬⁬‪⁫⁯⁪​‪​‬‭‌‪​​⁮‭​⁪‬⁪⁫⁯‏‮) this);
    }
    if (obj.\u202A⁮‍‬‫‌⁫‬‍⁮⁭‍‎‭‌‍‬‫⁬‪⁬⁬‬‫⁭‮⁪‮‬​‏‍​⁫⁭‏‌⁭​⁫‮)
      return 0;
    if (obj.\u202E⁪‫​⁭‬‌‭‮‏‫​‌‍⁮‬‌⁭‏⁯‬⁮‪‪⁬‬⁯⁬‏‍‫⁬‌‮⁯​‭‎‫⁪‮)
      return 1;
    throw new InvalidOperationException("Internal error in trace calculation");
  }
}
