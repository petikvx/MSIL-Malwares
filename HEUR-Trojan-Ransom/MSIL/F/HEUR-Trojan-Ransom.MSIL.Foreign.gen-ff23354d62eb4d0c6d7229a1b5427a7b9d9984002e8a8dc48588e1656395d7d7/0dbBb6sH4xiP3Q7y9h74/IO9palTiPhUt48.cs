// Decompiled with JetBrains decompiler
// Type: 0dbBb6sH4xiP3Q7y9h74.IO9palTiPhUt48
// Assembly: svchost, Version=3.6.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6E61EF89-92A4-48B5-8114-E738AD48C2C7
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00022-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-ff23354d62eb4d0c6d7229a1b5427a7b9d9984002e8a8dc48588e1656395d7d7.exe

using Microsoft.VisualBasic.CompilerServices;
using System.Management;
using System.ServiceProcess;

namespace \u0030dbBb6sH4xiP3Q7y9h74
{
  public class IO9palTiPhUt48 : ServiceController
  {
    public IO9palTiPhUt48()
    {
    }

    public IO9palTiPhUt48(string name)
      : base(name)
    {
    }

    public IO9palTiPhUt48(string name, string machineName)
      : base(name, machineName)
    {
    }

    public string Description
    {
      get
      {
        ManagementObject managementObject = new ManagementObject(new ManagementPath("Win32_Service.Name='" + this.ServiceName + "'"));
        return managementObject[nameof (Description)] != null ? managementObject[nameof (Description)].ToString() : (string) null;
      }
    }

    public string StartupType
    {
      get => this.ServiceName != null ? new ManagementObject(new ManagementPath("Win32_Service.Name='" + this.ServiceName + "'"))["StartMode"].ToString() : (string) null;
      set
      {
        if (Operators.CompareString(value, "Automatic", false) == 0 || Operators.CompareString(value, "Manual", false) == 0 || Operators.CompareString(value, "Disabled", false) == 0)
          ;
        if (this.ServiceName == null)
          return;
        new ManagementObject(new ManagementPath("Win32_Service.Name='" + this.ServiceName + "'")).InvokeMethod("ChangeStartMode", new object[1]
        {
          (object) value
        });
      }
    }
  }
}
