// Decompiled with JetBrains decompiler
// Type: PreEmptive.Analytics.Common.OfflineDataStore
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common.Utilities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Threading;

namespace PreEmptive.Analytics.Common
{
  public class OfflineDataStore : IOfflineDataStore, IDisposable
  {
    private IOfflineStorageManager a;
    private static object b;
    protected readonly ILogger Logger;

    public OfflineDataStore(IOfflineStorageManager manager, [Optional] ILogger logger)
    {
      int A_1 = 13;
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.Logger = logger ?? (ILogger) new BlankLogger();
      this.a = manager;
      foreach (string origin in this.a.GetFilesEndingWith(Utils.a("\uEFC0뇂계듆\uE7C8뫊", A_1), ""))
      {
        try
        {
          this.a.MoveFile(origin, origin.Substring(0, origin.Length - 2));
        }
        catch (Exception ex)
        {
          this.Logger.LogException(ex, Utils.a("胀귂\uE5C4닆\uA7C8껊뗌뿎듐냒ꇔ닖뷘ﯚ룜\uA7DE苠蛢闤鏦胨蓪菬쿮黰郲雴苶诸黺駼\uDFFE瘀欂氄欆氈⬊礌紎栐稒笔瀖㤘漚爜㼞䈠伢䀤䘦嬨ପ夬䨮尰䌲娴䔶堸䤺䐼Ἶ\u3040㙂⁄㉆ⱈ歊≌⥎煐㱒㍔ㅖ㕘\u325A㍜㩞䅠ၢᅤ\u0866᭨੪੬੮", A_1));
        }
      }
    }

    public void SaveBatch(MessageBatch messagebatch)
    {
      int num1 = -4991;
      int num2 = num1;
      num1 = -4991;
      int num3 = num1;
      switch (num2 == num3 ? 1 : 0)
      {
        case 0:
          break;
        case 2:
          break;
        default:
          int num4 = 1;
          if (num4 == 0)
            ;
          num4 = 0;
          if (num4 == 0)
            ;
          bool lockTaken = false;
          object b;
          try
          {
            Monitor.Enter(b = OfflineDataStore.b, ref lockTaken);
            this.a(messagebatch);
            break;
          }
          finally
          {
            int num5 = 0;
            int num6 = num5;
            while (true)
            {
              switch (num6)
              {
                case 0:
                  switch (0)
                  {
                    case 0:
                      break;
                    default:
                      continue;
                  }
                  break;
                case 1:
                  Monitor.Exit(b);
                  num5 = 2;
                  num6 = num5;
                  continue;
                case 2:
                  goto label_13;
              }
              if (lockTaken)
              {
                num5 = 1;
                num6 = num5;
              }
              else
                break;
            }
label_13:;
          }
      }
    }

    private void a(MessageBatch A_0_1)
    {
      int A_1 = 19;
      int num1 = 0;
      switch (num1)
      {
        default:
          int num2;
          Action action;
          // ISSUE: variable of a compiler-generated type
          OfflineDataStore.a a;
          IEnumerable<string> filesEndingWith1;
          switch (0)
          {
            case 0:
label_3:
              num2 = 1;
              if (num2 == 0)
                ;
              action = (Action) null;
              // ISSUE: object of a compiler-generated type is created
              a = new OfflineDataStore.a();
              // ISSUE: reference to a compiler-generated field
              a.b = this;
              filesEndingWith1 = this.a.GetFilesEndingWith(Utils.a("\uEAC6", A_1) + A_0_1.ID + Utils.a("\uE9C6믈ꋊ뻌", A_1), "");
              num2 = 15;
              num1 = num2;
              goto default;
            default:
              while (true)
              {
                IEnumerable<string> filesEndingWith2;
                IEnumerator<string> enumerator1;
                string text;
                bool flag1;
                IEnumerator<string> enumerator2;
                bool flag2;
                switch (num1)
                {
                  case 0:
                    Utils.Attempt(action, this.Logger);
                    filesEndingWith2 = this.a.GetFilesEndingWith(Utils.a("\uE9C6믈ꋊ뻌", A_1), "");
                    num2 = 6;
                    num1 = num2;
                    continue;
                  case 1:
                    if (action == null)
                    {
                      num2 = 14;
                      num1 = num2;
                      continue;
                    }
                    goto case 0;
                  case 2:
                    if (!flag1)
                    {
                      num2 = 11;
                      num1 = num2;
                      continue;
                    }
                    goto case 17;
                  case 3:
                    if (!flag2)
                    {
                      // ISSUE: reference to a compiler-generated field
                      a.a = string.Format(Utils.a("볆杻뛊\uE0CC듎\uE0D0껒ﯔꗖ냘\uA8DA", A_1), new object[2]
                      {
                        (object) A_0_1.DateCreated.ToString(Utils.a("뻆냈닊듌苎鳐럒뇔\u9FD6釘뛚냜곞鋠藢菤臦迨跪诬觮", A_1)),
                        (object) A_0_1.ID
                      });
                      text = A_0_1.ToString();
                      flag1 = false;
                      num2 = 17;
                      num1 = num2;
                      continue;
                    }
                    num2 = 16;
                    num1 = num2;
                    continue;
                  case 4:
                    this.Logger.LogWarning(Utils.a("菆ꃈ룊ꛌ\uEFCE냐ꏒꗔ닖룘\uA9DA껜\uFFDE闠賢엤藦賨쯪诬髮鷰\u9FF2\uDBF4ퟶ뷸黺釼髾甀樂欄怆⤈搊愌欎ㄐ焒琔挖稘猚㴜欞丠̢䌤並崨ପ䌬䨮䘰ጲ圴嘶䴸堺唼", A_1));
                    num2 = 1;
                    num1 = num2;
                    continue;
                  case 5:
                    try
                    {
                      // ISSUE: reference to a compiler-generated field
                      this.a.WriteToFile(a.a, text);
                    }
                    catch (Exception ex)
                    {
                      this.Logger.LogExceptionWarning(ex, Utils.a("蛆\uA7C8\uEBCA료ꇎ듐ꯒꗔ닖뫘꿚룜믞쇠蛢鷤蓦賨鯪駬蛮黰鷲헴飶髸飺裼跾搀朂⬄✆崈礊琌明缐琒㔔瘖縘稚琜焞", A_1));
                      flag1 = true;
                    }
                    num1 = 7;
                    continue;
                  case 6:
                    if (filesEndingWith2.Any<string>())
                    {
                      num2 = 12;
                      num1 = num2;
                      continue;
                    }
                    num2 = 8;
                    num1 = num2;
                    continue;
                  case 7:
                    if (flag1)
                    {
                      num2 = 4;
                      num1 = num2;
                      continue;
                    }
                    break;
                  case 8:
                    goto label_36;
                  case 9:
                    try
                    {
                      num2 = 2;
                      int num3 = num2;
                      while (true)
                      {
                        switch (num3)
                        {
                          case 1:
                            if (enumerator2.MoveNext())
                            {
                              string current = enumerator2.Current;
                              flag2 = true;
                              this.a.WriteToFile(current, A_0_1.ToString());
                              this.a.MoveFile(current, current.Substring(0, current.Length - 2));
                              num2 = -17146;
                              int num4 = num2;
                              num2 = -17146;
                              int num5 = num2;
                              switch (num4 == num5 ? 1 : 0)
                              {
                                case 0:
                                case 2:
                                  continue;
                                default:
                                  num2 = 0;
                                  if (num2 == 0)
                                    ;
                                  num2 = 0;
                                  num3 = num2;
                                  continue;
                              }
                            }
                            else
                            {
                              num2 = 3;
                              num3 = num2;
                              continue;
                            }
                          case 2:
                            switch (0)
                            {
                              case 0:
                                break;
                              default:
                                continue;
                            }
                            break;
                          case 3:
                            num2 = 4;
                            num3 = num2;
                            continue;
                          case 4:
                            goto label_64;
                        }
                        num2 = 1;
                        num3 = num2;
                      }
                    }
                    finally
                    {
                      int num6 = 0;
                      while (true)
                      {
                        switch (num6)
                        {
                          case 0:
                            switch (0)
                            {
                              case 0:
                                break;
                              default:
                                continue;
                            }
                            break;
                          case 1:
                            enumerator2.Dispose();
                            num6 = 2;
                            continue;
                          case 2:
                            goto label_31;
                        }
                        if (enumerator2 != null)
                          num6 = 1;
                        else
                          break;
                      }
label_31:;
                    }
label_64:
                    num2 = 3;
                    num1 = num2;
                    continue;
                  case 10:
                    try
                    {
                      num2 = 3;
                      int num7 = num2;
                      while (true)
                      {
                        string current;
                        switch (num7)
                        {
                          case 0:
                          case 1:
                            num2 = 4;
                            num7 = num2;
                            continue;
                          case 2:
                            if (!enumerator1.MoveNext())
                            {
                              num2 = 0;
                              num7 = num2;
                              continue;
                            }
                            current = enumerator1.Current;
                            num2 = 5;
                            num7 = num2;
                            continue;
                          case 3:
                            switch (0)
                            {
                              case 0:
                                break;
                              default:
                                continue;
                            }
                            break;
                          case 4:
                            goto label_32;
                          case 5:
                            try
                            {
                              this.a.DeleteFile(current);
                            }
                            catch (Exception ex)
                            {
                              this.Logger.LogExceptionWarning(ex, Utils.a("蛆\uA7C8\uEBCA료ꇎ듐ꯒꗔ닖뫘꿚룜믞쇠跢諤触쓨裪\u9FEC蛮藰髲雴零闸\uDBFA飼蟾戀昂甄猆怈搊挌⼎縐瀒瘔或欘縚礜", A_1));
                              break;
                            }
                            this.Logger.LogInfo(Utils.a("藆\uA8C8뿊껌\uA7CE\uF1D0ꃒꃔ듖뫘뻚껜곞蟠離觤详部쯪觬諮鷰雲致鋶鷸\uDBFA觼郾℀渂搄氆氈⬊缌怎縐縒㔔焖瘘椚㴜焞䐠吢Ԥ䔦䠨弪丬䜮吰䀲༴᜶", A_1) + current);
                            num2 = 1;
                            num7 = num2;
                            continue;
                        }
                        num2 = 2;
                        num7 = num2;
                      }
                    }
                    finally
                    {
                      int num8 = 0;
                      while (true)
                      {
                        switch (num8)
                        {
                          case 0:
                            switch (0)
                            {
                              case 0:
                                break;
                              default:
                                continue;
                            }
                            break;
                          case 1:
                            enumerator1.Dispose();
                            num8 = 2;
                            continue;
                          case 2:
                            goto label_63;
                        }
                        if (enumerator1 != null)
                          num8 = 1;
                        else
                          break;
                      }
label_63:;
                    }
                  case 11:
                    goto label_45;
                  case 12:
                    enumerator1 = filesEndingWith2.OrderBy<string, string>((Func<string, string>) (A_0_2 =>
                    {
                      int num9 = -31502;
                      int num10 = num9;
                      num9 = -31502;
                      int num11 = num9;
                      switch (num10 == num11)
                      {
                        case true:
                          int num12 = 0;
                          if (num12 == 0)
                            ;
                          num12 = 1;
                          if (num12 == 0)
                            ;
                          return A_0_2;
                        default:
                          goto case 1;
                      }
                    })).GetEnumerator();
                    num2 = 10;
                    num1 = num2;
                    continue;
                  case 13:
                    goto label_9;
                  case 14:
                    // ISSUE: reference to a compiler-generated method
                    action = new Action(a.c);
                    num2 = 0;
                    num1 = num2;
                    continue;
                  case 15:
                    if (filesEndingWith1.Any<string>())
                    {
                      num2 = 13;
                      num1 = num2;
                      continue;
                    }
                    IEnumerable<string> filesEndingWith3 = this.a.GetFilesEndingWith(Utils.a("\uEAC6", A_1) + A_0_1.ID + Utils.a("\uE9C6믈ꋊ뻌\uE1CEꃐ", A_1), "");
                    flag2 = false;
                    enumerator2 = filesEndingWith3.GetEnumerator();
                    num2 = 9;
                    num1 = num2;
                    continue;
                  case 16:
                    goto label_68;
                  case 17:
                    flag1 = false;
                    num2 = 5;
                    num1 = num2;
                    continue;
                  default:
                    goto label_3;
                }
label_32:
                num2 = 2;
                num1 = num2;
              }
label_45:
              return;
label_9:
              return;
label_68:
              return;
label_36:
              this.Logger.LogError(Utils.a("视ꛈ\uEBCA껌껎닐믒냔돖律뛚룜곞鋠苢苤苦髨쯪軬胮蓰\u9FF2釴ퟶ鯸黺\uDDFC駾渀瘂欄挆⤈缊戌⼎猐瘒㔔猖簘眚砜欞䐠䜢ତܦ欨䨪夬䰮夰ጲ䈴帶唸场ᴼ儾⹀㝂敄╆ⱈ歊㹌\u2E4E❐㙒ㅔ睖ⵘ㑚絜ぞݠբ।\u0E66ݨ\u0E6A䵬ᱮհᱲݴᙶṸṺ嵼\u1B7E\uF480\uE682ꖄ\uF386\uE688ꮊ\uE18C\uEE8E\uF290\uF892떔\uF896ﾘ뮚\uEE9C\uEF9E삠삢삤蚦", A_1));
              return;
          }
      }
    }

    public MessageBatch GetSavedBatch()
    {
      int A_1 = 13;
      int num1 = 0;
      switch (num1)
      {
        default:
          Action action1;
          Action action2;
          // ISSUE: variable of a compiler-generated type
          OfflineDataStore.b b1;
          string str;
          int num2;
          switch (0)
          {
            case 0:
label_3:
              action1 = (Action) null;
              action2 = (Action) null;
              // ISSUE: object of a compiler-generated type is created
              b1 = new OfflineDataStore.b();
              // ISSUE: reference to a compiler-generated field
              b1.b = this;
              str = (string) null;
              // ISSUE: reference to a compiler-generated field
              b1.a = (string) null;
              num2 = 12;
              num1 = num2;
              goto default;
            default:
              bool lockTaken;
              MessageBatch messageBatch;
              List<string> list;
              MessageBatch savedBatch;
              while (true)
              {
                switch (num1)
                {
                  case 0:
                    // ISSUE: reference to a compiler-generated method
                    action2 = new Action(b1.d);
                    num2 = 17;
                    num1 = num2;
                    continue;
                  case 1:
                    // ISSUE: reference to a compiler-generated field
                    if (b1.a != null)
                    {
                      num2 = 16;
                      num1 = num2;
                      continue;
                    }
                    goto case 7;
                  case 2:
                    // ISSUE: reference to a compiler-generated method
                    action1 = new Action(b1.c);
                    num2 = 10;
                    num1 = num2;
                    continue;
                  case 3:
                    if (action2 == null)
                    {
                      num2 = 0;
                      num1 = num2;
                      continue;
                    }
                    goto case 17;
                  case 4:
                    num2 = 1;
                    num1 = num2;
                    continue;
                  case 5:
                    savedBatch = messageBatch;
                    if (savedBatch == null)
                    {
                      num2 = 11;
                      num1 = num2;
                      continue;
                    }
                    goto label_77;
                  case 6:
                    if (messageBatch == null)
                    {
                      num2 = 4;
                      num1 = num2;
                      continue;
                    }
                    goto case 7;
                  case 7:
                    num2 = 5;
                    num1 = num2;
                    continue;
                  case 8:
                    if (action1 == null)
                    {
                      num2 = 2;
                      num1 = num2;
                      continue;
                    }
                    goto case 10;
                  case 9:
                    // ISSUE: reference to a compiler-generated field
                    if (b1.a != null)
                    {
                      num2 = 14;
                      num1 = num2;
                      continue;
                    }
                    goto label_73;
                  case 10:
                    Utils.Attempt(action1, this.Logger);
                    num2 = 21;
                    num1 = num2;
                    continue;
                  case 11:
                    goto label_60;
                  case 12:
                    list = this.a.GetFilesEndingWith(Utils.a("\uEFC0뇂계듆", A_1), "").OrderBy<string, string>((Func<string, string>) (A_0 =>
                    {
                      int num3 = 1;
                      if (num3 == 0)
                        ;
                      num3 = 7122;
                      int num4 = num3;
                      num3 = 7122;
                      int num5 = num3;
                      switch (num4 == num5)
                      {
                        case true:
                          num3 = 0;
                          if (num3 == 0)
                            ;
                          return A_0;
                        default:
                          goto case 1;
                      }
                    })).ToList<string>();
                    num2 = 18;
                    num1 = num2;
                    continue;
                  case 13:
                    goto label_11;
                  case 14:
                    num2 = 8;
                    num1 = num2;
                    continue;
                  case 15:
                    if (!string.IsNullOrEmpty(str))
                    {
                      messageBatch = MessageBatch.FromString(str);
                      num2 = 6;
                      num1 = num2;
                      continue;
                    }
                    num2 = 20;
                    num1 = num2;
                    continue;
                  case 16:
                    num2 = 3;
                    num1 = num2;
                    continue;
                  case 17:
                    Utils.Attempt(action2, this.Logger);
                    num2 = 7;
                    num1 = num2;
                    continue;
                  case 18:
                    if (list.Any<string>())
                    {
                      lockTaken = false;
                      num2 = 19;
                      num1 = num2;
                      continue;
                    }
                    num2 = 13;
                    num1 = num2;
                    continue;
                  case 19:
                    object b2;
                    try
                    {
                      Monitor.Enter(b2 = OfflineDataStore.b, ref lockTaken);
                      using (List<string>.Enumerator enumerator = list.GetEnumerator())
                      {
                        num2 = 4;
                        int num6 = num2;
                        while (true)
                        {
                          Action action3;
                          Func<string> action4;
                          // ISSUE: variable of a compiler-generated type
                          OfflineDataStore.c c;
                          switch (num6)
                          {
                            case 0:
label_49:
                              num2 = 2;
                              num6 = num2;
                              continue;
                            case 1:
                              try
                              {
                                num2 = 3;
                                int num7 = num2;
                                while (true)
                                {
                                  switch (num7)
                                  {
                                    case 0:
                                      // ISSUE: reference to a compiler-generated method
                                      action4 = new Func<string>(c.d);
                                      num2 = 4;
                                      num7 = num2;
                                      continue;
                                    case 1:
                                      if (str != null)
                                      {
                                        // ISSUE: reference to a compiler-generated field
                                        // ISSUE: reference to a compiler-generated field
                                        b1.a = c.b + Utils.a("\uEFC0닂", A_1);
                                        num2 = 11;
                                        num7 = num2;
                                        continue;
                                      }
                                      num2 = 8;
                                      num7 = num2;
                                      continue;
                                    case 2:
label_29:
                                      Utils.Attempt(action3, this.Logger);
                                      break;
                                    case 3:
                                      switch (0)
                                      {
                                        case 0:
                                          goto label_25;
                                        default:
                                          continue;
                                      }
                                    case 4:
                                      str = Utils.Attempt<string>(action4, this.Logger);
                                      num2 = 1;
                                      num7 = num2;
                                      continue;
                                    case 5:
                                      num2 = 9;
                                      num7 = num2;
                                      continue;
                                    case 6:
                                    case 10:
                                      goto label_46;
                                    case 7:
                                      // ISSUE: reference to a compiler-generated method
                                      action3 = new Action(c.c);
                                      num2 = 2;
                                      num7 = num2;
                                      continue;
                                    case 8:
                                      num2 = 6;
                                      num7 = num2;
                                      continue;
                                    case 9:
                                      goto label_49;
                                    case 11:
                                      if (!string.IsNullOrEmpty(str))
                                      {
                                        num2 = 5;
                                        num7 = num2;
                                        continue;
                                      }
                                      num2 = 10;
                                      num7 = num2;
                                      continue;
                                    case 12:
                                      if (action4 == null)
                                      {
                                        num2 = 0;
                                        num7 = num2;
                                        continue;
                                      }
                                      goto case 4;
                                    default:
label_25:
                                      num2 = 15058;
                                      int num8 = num2;
                                      num2 = 15058;
                                      int num9 = num2;
                                      switch (num8 == num9 ? 1 : 0)
                                      {
                                        case 0:
                                        case 2:
                                          break;
                                        default:
                                          num2 = 0;
                                          if (num2 == 0)
                                            ;
                                          if (action3 == null)
                                          {
                                            num2 = 7;
                                            num7 = num2;
                                            continue;
                                          }
                                          goto label_29;
                                      }
                                      break;
                                  }
                                  num2 = 12;
                                  num7 = num2;
                                }
                              }
                              catch (Exception ex)
                              {
                                this.Logger.LogExceptionWarning(ex, Utils.a("胀귂\uE5C4닆\uA7C8껊뗌뿎듐냒ꇔ닖뷘ﯚ돜냞迠컢蛤闦胨\u9FEA蓬賮郰\u9FF2헴鋶臸飺飼迾甀樂樄椆⤈搊渌氎搐愒瀔猖", A_1));
                                break;
                              }
                            case 2:
                              goto label_61;
                            case 3:
                              if (enumerator.MoveNext())
                              {
                                action3 = (Action) null;
                                action4 = (Func<string>) null;
                                // ISSUE: object of a compiler-generated type is created
                                c = new OfflineDataStore.c();
                                // ISSUE: reference to a compiler-generated field
                                c.a = b1;
                                // ISSUE: reference to a compiler-generated field
                                c.b = enumerator.Current;
                                num2 = 1;
                                num6 = num2;
                                continue;
                              }
                              num2 = 0;
                              num6 = num2;
                              continue;
                            case 4:
                              switch (0)
                              {
                                case 0:
                                  break;
                                default:
                                  continue;
                              }
                              break;
                          }
label_46:
                          num6 = 3;
                        }
                      }
                    }
                    finally
                    {
                      int num10 = 2;
                      while (true)
                      {
                        switch (num10)
                        {
                          case 0:
                            goto label_57;
                          case 1:
                            Monitor.Exit(b2);
                            num10 = 0;
                            continue;
                          case 2:
                            switch (0)
                            {
                              case 0:
                                break;
                              default:
                                continue;
                            }
                            break;
                        }
                        if (lockTaken)
                          num10 = 1;
                        else
                          break;
                      }
label_57:;
                    }
label_61:
                    num1 = 15;
                    continue;
                  case 20:
                    num2 = 1;
                    if (num2 == 0)
                      ;
                    num2 = 9;
                    num1 = num2;
                    continue;
                  case 21:
                    goto label_73;
                  default:
                    goto label_3;
                }
              }
label_11:
              return new MessageBatch();
label_77:
              return savedBatch;
label_60:
              return new MessageBatch();
label_73:
              return new MessageBatch();
          }
      }
    }

    public void ClearBatch(MessageBatch messagebatch)
    {
      int A_1 = 10;
      int num1 = 0;
      switch (num1)
      {
        default:
          bool lockTaken = false;
          object b;
          try
          {
            IEnumerator<string> enumerator1;
            int num2;
            switch (0)
            {
              case 0:
label_4:
                Monitor.Enter(b = OfflineDataStore.b, ref lockTaken);
                enumerator1 = this.a.GetFilesEndingWith(messagebatch.ID + Utils.a("邽늿ꯁ럃", A_1), "").GetEnumerator();
                num2 = 2;
                num1 = num2;
                goto default;
              default:
                IEnumerator<string> enumerator2;
                while (true)
                {
                  switch (num1)
                  {
                    case 0:
                      goto label_54;
                    case 1:
                      try
                      {
                        num2 = 2;
                        int num3 = num2;
                        while (true)
                        {
                          // ISSUE: variable of a compiler-generated type
                          OfflineDataStore.e e;
                          Action action;
                          switch (num3)
                          {
                            case 0:
                              if (action == null)
                              {
                                num2 = 4;
                                num3 = num2;
                                continue;
                              }
                              goto case 7;
                            case 1:
                              num2 = 5;
                              num3 = num2;
                              continue;
                            case 2:
                              num2 = 15737;
                              int num4 = num2;
                              num2 = 15737;
                              int num5 = num2;
                              switch (num4 == num5 ? 1 : 0)
                              {
                                case 0:
                                case 2:
                                  goto label_46;
                                default:
                                  num2 = 0;
                                  if (num2 == 0)
                                    ;
                                  switch (0)
                                  {
                                    case 0:
                                      break;
                                    default:
                                      continue;
                                  }
                                  break;
                              }
                            case 3:
                              if (enumerator2.MoveNext())
                              {
                                action = (Action) null;
                                // ISSUE: object of a compiler-generated type is created
                                e = new OfflineDataStore.e();
                                // ISSUE: reference to a compiler-generated field
                                e.b = this;
                                // ISSUE: reference to a compiler-generated field
                                e.a = enumerator2.Current;
                                num2 = 0;
                                num3 = num2;
                                continue;
                              }
                              num2 = 1;
                              num3 = num2;
                              continue;
                            case 4:
                              // ISSUE: reference to a compiler-generated method
                              action = new Action(e.c);
                              num2 = 7;
                              num3 = num2;
                              continue;
                            case 5:
                              goto label_46;
                            case 7:
                              Utils.Attempt(action, this.Logger);
                              num2 = 6;
                              num3 = num2;
                              continue;
                          }
                          num2 = 3;
                          num3 = num2;
                        }
                      }
                      finally
                      {
                        int num6 = 2;
                        while (true)
                        {
                          switch (num6)
                          {
                            case 0:
                              goto label_44;
                            case 1:
                              enumerator2.Dispose();
                              num6 = 0;
                              continue;
                            case 2:
                              switch (0)
                              {
                                case 0:
                                  break;
                                default:
                                  continue;
                              }
                              break;
                          }
                          if (enumerator2 != null)
                            num6 = 1;
                          else
                            break;
                        }
label_44:;
                      }
label_46:
                      num2 = 0;
                      num1 = num2;
                      continue;
                    case 2:
                      try
                      {
                        num2 = 2;
                        int num7 = num2;
                        while (true)
                        {
                          Action action;
                          // ISSUE: variable of a compiler-generated type
                          OfflineDataStore.d d;
                          switch (num7)
                          {
                            case 0:
                              if (action == null)
                              {
                                num2 = 4;
                                num7 = num2;
                                continue;
                              }
                              goto case 1;
                            case 1:
                              Utils.Attempt(action, this.Logger);
                              num2 = 7;
                              num7 = num2;
                              continue;
                            case 2:
                              switch (0)
                              {
                                case 0:
                                  break;
                                default:
                                  continue;
                              }
                              break;
                            case 3:
                              num2 = 5;
                              num7 = num2;
                              continue;
                            case 4:
                              // ISSUE: reference to a compiler-generated method
                              action = new Action(d.c);
                              num2 = 1;
                              num7 = num2;
                              continue;
                            case 5:
                              goto label_45;
                            case 6:
                              if (enumerator1.MoveNext())
                              {
                                action = (Action) null;
                                // ISSUE: object of a compiler-generated type is created
                                d = new OfflineDataStore.d();
                                // ISSUE: reference to a compiler-generated field
                                d.b = this;
                                // ISSUE: reference to a compiler-generated field
                                d.a = enumerator1.Current;
                                num2 = 0;
                                num7 = num2;
                                continue;
                              }
                              num2 = 3;
                              num7 = num2;
                              continue;
                          }
                          num2 = 6;
                          num7 = num2;
                        }
                      }
                      finally
                      {
                        int num8 = 2;
                        while (true)
                        {
                          switch (num8)
                          {
                            case 0:
                              goto label_23;
                            case 1:
                              enumerator1.Dispose();
                              num8 = 0;
                              continue;
                            case 2:
                              switch (0)
                              {
                                case 0:
                                  break;
                                default:
                                  continue;
                              }
                              break;
                          }
                          if (enumerator1 != null)
                            num8 = 1;
                          else
                            break;
                        }
label_23:;
                      }
label_45:
                      enumerator2 = this.a.GetFilesEndingWith(messagebatch.ID + Utils.a("邽늿ꯁ럃\uE8C5맇", A_1), "").GetEnumerator();
                      num2 = 1;
                      num1 = num2;
                      continue;
                    default:
                      goto label_4;
                  }
                }
label_54:
                return;
            }
          }
          finally
          {
            int num9 = 2;
            while (true)
            {
              if (false)
                ;
              switch (num9)
              {
                case 0:
                  goto label_55;
                case 1:
                  Monitor.Exit(b);
                  num9 = 0;
                  continue;
                case 2:
                  switch (0)
                  {
                    case 0:
                      break;
                    default:
                      continue;
                  }
                  break;
              }
              if (lockTaken)
                num9 = 1;
              else
                break;
            }
label_55:;
          }
      }
    }

    public void Dispose()
    {
      int num1 = 27474;
      int num2 = num1;
      num1 = 27474;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          int num4 = 1;
          if (num4 == 0)
            ;
          num4 = 0;
          if (num4 == 0)
            ;
          this.a.Dispose();
          break;
        default:
          goto case 1;
      }
    }

    static OfflineDataStore()
    {
      int num1 = 1;
      if (num1 == 0)
        ;
      num1 = 13021;
      int num2 = num1;
      num1 = 13021;
      int num3 = num1;
      switch (num2 == num3)
      {
        case true:
          num1 = 0;
          if (num1 == 0)
            ;
          OfflineDataStore.b = new object();
          break;
        default:
          goto case 1;
      }
    }
  }
}
