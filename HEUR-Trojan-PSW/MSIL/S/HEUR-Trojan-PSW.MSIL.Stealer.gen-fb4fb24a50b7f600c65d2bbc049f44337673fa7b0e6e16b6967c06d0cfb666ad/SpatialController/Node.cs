// Decompiled with JetBrains decompiler
// Type: SpatialController.Node
// Assembly: Rea, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 014AEBFB-7EE8-4B39-A7D6-AE7A18313427
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-fb4fb24a50b7f600c65d2bbc049f44337673fa7b0e6e16b6967c06d0cfb666ad.exe

using OpenZWaveDotNet;
using System.Collections.Generic;

namespace SpatialController
{
  public class Node
  {
    private byte m_id = 0;
    private uint m_homeId = 0;
    private string m_name = "";
    private string m_location = "";
    private string m_label = "";
    private string m_manufacturer = "";
    private string m_product = "";
    private List<ZWValueID> m_values = new List<ZWValueID>();

    public byte ID
    {
      get => this.m_id;
      set => this.m_id = value;
    }

    public uint HomeID
    {
      get => this.m_homeId;
      set => this.m_homeId = value;
    }

    public string Name
    {
      get => this.m_name;
      set => this.m_name = value;
    }

    public string Location
    {
      get => this.m_location;
      set => this.m_location = value;
    }

    public string Label
    {
      get => this.m_label;
      set => this.m_label = value;
    }

    public string Manufacturer
    {
      get => this.m_manufacturer;
      set => this.m_manufacturer = value;
    }

    public string Product
    {
      get => this.m_product;
      set => this.m_product = value;
    }

    public List<ZWValueID> Values => this.m_values;

    public void AddValue(ZWValueID valueID) => this.m_values.Add(valueID);

    public void RemoveValue(ZWValueID valueID) => this.m_values.Remove(valueID);

    public void SetValue(ZWValueID valueID)
    {
      int index1 = -1;
      for (int index2 = 0; index2 < this.m_values.Count; ++index2)
      {
        if ((int) this.m_values[index2].GetId() == (int) valueID.GetId())
        {
          index1 = index2;
          break;
        }
      }
      if (index1 >= 0)
        this.m_values[index1] = valueID;
      else
        this.AddValue(valueID);
    }
  }
}
