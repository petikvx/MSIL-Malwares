// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 1, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DD6E2604-6865-40F6-9E40-B9D32B76CB6E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Trojan.Win32.Inject.bwun-1b9296fdfa8d6acde70170cf7641da3c3695e5ffc263bb8ef78707053ca5cf85.exe

using \u0005;
using \u0007;
using \u0082;
using System;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace \u0082
{
  internal sealed class \u0083 : Control
  {
    [NonSerialized]
    internal static \u0004 \u0001;
    private int \u0001 = 99;
    private Bitmap \u0002 = \u0013.\u0013.\u0013(\u0083.\u0001(197));
    private Bitmap \u0003 = \u0013.\u0013.\u0013(\u0083.\u0001(206));
    private Timer \u0004 = new Timer();
    private float \u0005 = 1f;
    private float \u0006 = 1f;

    protected override void OnVisibleChanged([In] EventArgs obj0)
    {
      \u0018\u0005.\u0086\u0006((object) this, obj0);
      if (\u0011\u0005.\u008C\u0007((object) this))
        return;
      this.\u0013(\u0011\u0005.\u001C\u0006((object) this));
    }

    private void \u0013([In] bool obj0)
    {
      \u0006\u0005.\u007E\u001A\u0007((object) this.\u0004, obj0);
      this.\u0001 = 0;
      \u0096\u0004.\u007E\u0089\u0006((object) this);
    }

    protected override void OnResize([In] EventArgs obj0)
    {
      \u008D\u0002.\u0017\u0006((object) this, new Size(\u009E\u0004.\u009B\u0002(250f * this.\u0005), \u009E\u0004.\u009B\u0002(42f * this.\u0006)));
      \u0018\u0005.\u0088\u0006((object) this, obj0);
    }

    protected override void ScaleCore([In] float obj0, [In] float obj1)
    {
      this.\u0005 = obj0;
      this.\u0006 = obj1;
      \u0084\u0003.\u008B\u0006((object) this, obj0, obj1);
      \u0018\u0005.\u007E\u0088\u0006((object) this, EventArgs.Empty);
    }

    protected override void Dispose([In] bool obj0)
    {
      if (obj0 && this.\u0002 != null)
        \u0096\u0004.\u007E\u0095\u0007((object) this.\u0002);
      \u0006\u0005.\u0081\u0006((object) this, obj0);
    }

    protected override void OnPaint([In] PaintEventArgs obj0)
    {
      \u0082\u0004.\u0087\u0006((object) this, obj0);
      if (this.\u0003 != null)
        \u001C\u0003.\u007E\u009C\u0007((object) \u0005\u0003.\u007E\u0091\u0006((object) obj0), (Image) this.\u0003, new Rectangle(0, 0, \u009E\u0004.\u009B\u0002(250f * this.\u0005), \u009E\u0004.\u009B\u0002(42f * this.\u0006)), new Rectangle(0, 0, 250, 42), GraphicsUnit.Pixel);
      if (this.\u0002 == null || this.\u0001 <= 0)
        return;
      \u008F\u0002.\u007E\u009E\u0007((object) \u0005\u0003.\u007E\u0091\u0006((object) obj0), new Rectangle(\u009E\u0004.\u009B\u0002(46f * this.\u0005), 0, \u009E\u0004.\u009B\u0002(165f * this.\u0005), \u009E\u0004.\u009B\u0002(34f * this.\u0006)));
      \u0088\u0003.\u007E\u009D\u0007((object) \u0005\u0003.\u007E\u0091\u0006((object) obj0), (Image) this.\u0002, new Rectangle(\u009E\u0004.\u009B\u0002((float) (this.\u0001 - 6) * this.\u0005), \u009E\u0004.\u009B\u0002(16f * this.\u0006), \u009E\u0004.\u009B\u0002(40f * this.\u0005), \u009E\u0004.\u009B\u0002(12f * this.\u0006)), 0, 0, 40, 12, GraphicsUnit.Pixel);
    }

    private void \u0013([In] object obj0, [In] EventArgs obj1)
    {
      this.\u0001 += 11;
      if (this.\u0001 > 198)
        goto label_2;
label_1:
      \u0096\u0004.\u007E\u0089\u0006((object) this);
      return;
label_2:
      this.\u0001 = 0;
      goto label_1;
    }

    public \u0083()
    {
      this.\u0004.Interval = 85;
      \u0014\u0002.\u007E\u0019\u0007((object) this.\u0004, new EventHandler(this.\u0013));
      \u008D\u0002.\u0017\u0006((object) this, new Size(250, 42));
      \u0006\u0005.\u0019\u0006((object) this, false);
      \u009E\u0002.\u008D\u0006((object) this, ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.DoubleBuffer, true);
    }

    static \u0083() => \u0006.\u000E\u0003();
  }
}
