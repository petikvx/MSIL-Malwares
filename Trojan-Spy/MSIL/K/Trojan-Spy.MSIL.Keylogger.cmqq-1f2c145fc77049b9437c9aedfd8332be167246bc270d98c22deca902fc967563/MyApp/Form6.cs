// Decompiled with JetBrains decompiler
// Type: MyApp.Form6
// Assembly: CobianRAT, Version=1.0.40.7, Culture=neutral, PublicKeyToken=null
// MVID: E2EA0EB9-E35B-43B8-8108-8D71E6EED121
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\Trojan-Spy.MSIL.Keylogger.cmqq-1f2c145fc77049b9437c9aedfd8332be167246bc270d98c22deca902fc967563.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using UGn6M7OD4ABUPb0QqE;

namespace MyApp
{
  [DesignerGenerated]
  public sealed class Form6 : Form
  {
    private static List<WeakReference> aMEk4iB1Z6;
    private IContainer jGDk5BKATq;
    [AccessedThroughProperty("l1")]
    private ImageList VoBkOU9Utj;
    [AccessedThroughProperty("Lv1")]
    private LV VjDkAfmOce;
    [AccessedThroughProperty("ColumnHeader1")]
    private ColumnHeader cIWkXR08K8;
    [AccessedThroughProperty("ColumnHeader2")]
    private ColumnHeader LiSklq2YgF;
    [AccessedThroughProperty("ColumnHeader3")]
    private ColumnHeader abUkyQQiT3;
    [AccessedThroughProperty("TextBox1")]
    private TextBox MN4kg4r9uX;
    [AccessedThroughProperty("ContextMenuStrip1")]
    private ContextMenuStrip yuakCQIma8;
    [AccessedThroughProperty("UpToolStripMenuItem")]
    private ToolStripMenuItem PHSkqHIBgN;
    [AccessedThroughProperty("ComboBox1")]
    private ComboBox mApk0hA2YQ;
    [AccessedThroughProperty("RefreshToolStripMenuItem")]
    private ToolStripMenuItem ptWkFAfYKS;
    [AccessedThroughProperty("CreateKeyToolStripMenuItem")]
    private ToolStripMenuItem v6KkIny14O;
    [AccessedThroughProperty("DeleteKeyToolStripMenuItem")]
    private ToolStripMenuItem i2pkrHUiOO;
    [AccessedThroughProperty("ToolStripSeparator2")]
    private ToolStripSeparator WRRkHyHlx9;
    [AccessedThroughProperty("EditToolStripMenuItem")]
    private ToolStripMenuItem V5nk3TOe5m;
    [AccessedThroughProperty("NewValueToolStripMenuItem")]
    private ToolStripMenuItem sVmkeZQPno;
    [AccessedThroughProperty("DeleteToolStripMenuItem")]
    private ToolStripMenuItem Q9MksNqyPm;
    [AccessedThroughProperty("ToolStripSeparator1")]
    private ToolStripSeparator JH1kb5bxFI;
    [AccessedThroughProperty("Lv2")]
    private LV fH8k9VRw0M;
    [AccessedThroughProperty("ColumnHeader4")]
    private ColumnHeader q65kvafolW;
    [AccessedThroughProperty("ColumnHeader5")]
    private ColumnHeader zoYku6prBg;
    [AccessedThroughProperty("ColumnHeader6")]
    private ColumnHeader In0k7qbFOO;
    [AccessedThroughProperty("ContextMenuStrip2")]
    private ContextMenuStrip vJmkNYq8bg;
    [AccessedThroughProperty("ToolStripMenuItem1")]
    private ToolStripMenuItem UTGkzsuLRL;
    [AccessedThroughProperty("NewProcessToolStripMenuItem")]
    private ToolStripMenuItem VGELKjpObQ;
    [AccessedThroughProperty("EndProcessToolStripMenuItem")]
    private ToolStripMenuItem fvoLMynOF9;
    [AccessedThroughProperty("RichTextBox1")]
    private RichTextBox UjWLYnpcTp;
    [AccessedThroughProperty("TextBox2")]
    private TextBox VEKLtpNXNv;
    [AccessedThroughProperty("EndDeleteProcessToolStripMenuItem")]
    private ToolStripMenuItem s9pL6i1krQ;
    [AccessedThroughProperty("Lv3")]
    private LV jPyL8uZTiY;
    [AccessedThroughProperty("ColumnHeader7")]
    private ColumnHeader JL2LBJnj38;
    [AccessedThroughProperty("ColumnHeader8")]
    private ColumnHeader OwpLJreDOK;
    [AccessedThroughProperty("ColumnHeader9")]
    private ColumnHeader jycLUio2Yh;
    [AccessedThroughProperty("ColumnHeader10")]
    private ColumnHeader MGELQLwTAT;
    [AccessedThroughProperty("ColumnHeader11")]
    private ColumnHeader lIRLGkPevQ;
    [AccessedThroughProperty("ContextMenuStrip3")]
    private ContextMenuStrip mklLpSKjHg;
    [AccessedThroughProperty("RefreshToolStripMenuItem1")]
    private ToolStripMenuItem gYbLVE39fq;
    [AccessedThroughProperty("CloseToolStripMenuItem")]
    private ToolStripMenuItem zCHLwl8rq8;
    [AccessedThroughProperty("ContinueToolStripMenuItem")]
    private ToolStripMenuItem zAKL24sqqr;
    [AccessedThroughProperty("PauseToolStripMenuItem")]
    private ToolStripMenuItem rglLkdFV8v;
    [AccessedThroughProperty("StartToolStripMenuItem")]
    private ToolStripMenuItem pTTLLiSxVZ;
    [AccessedThroughProperty("Lv4")]
    private LV zObLxC7P0b;
    [AccessedThroughProperty("ColumnHeader12")]
    private ColumnHeader e5OLdMsgG4;
    [AccessedThroughProperty("ColumnHeader13")]
    private ColumnHeader HsfLmNBA7o;
    [AccessedThroughProperty("ColumnHeader14")]
    private ColumnHeader eUnLECfHph;
    [AccessedThroughProperty("ImageList1")]
    private ImageList D8KLaw5Pxc;
    [AccessedThroughProperty("ColumnHeader15")]
    private ColumnHeader PRmLZYs36V;
    [AccessedThroughProperty("ColumnHeader16")]
    private ColumnHeader hHmLo8upep;
    [AccessedThroughProperty("ColumnHeader17")]
    private ColumnHeader E7hLjB3IDq;
    [AccessedThroughProperty("ColumnHeader18")]
    private ColumnHeader dahLPf8Un5;
    [AccessedThroughProperty("ColumnHeader19")]
    private ColumnHeader UPmLhSVDtE;
    [AccessedThroughProperty("ContextMenuStrip4")]
    private ContextMenuStrip PtDLWpH9P4;
    [AccessedThroughProperty("RefreshToolStripMenuItem2")]
    private ToolStripMenuItem uSqLn3cH9j;
    [AccessedThroughProperty("KillConnectionToolStripMenuItem")]
    private ToolStripMenuItem OhDLfQruQF;
    [AccessedThroughProperty("SuspendToolStripMenuItem")]
    private ToolStripMenuItem Ob9Lcn6mpw;
    [AccessedThroughProperty("ResumeToolStripMenuItem")]
    private ToolStripMenuItem c1BLSmZQ3I;
    [AccessedThroughProperty("ToolStripSeparator3")]
    private ToolStripSeparator sAkLijVrDQ;
    [AccessedThroughProperty("ToolStripSeparator4")]
    private ToolStripSeparator OXmLTnqsC0;
    [AccessedThroughProperty("ToolStripSeparator6")]
    private ToolStripSeparator oecL1pjNN5;
    [AccessedThroughProperty("ToolStripSeparator5")]
    private ToolStripSeparator SftLRWetIt;
    [AccessedThroughProperty("StopToolStripMenuItem")]
    private ToolStripMenuItem L5DLD0Shjs;
    [AccessedThroughProperty("ChromeTabcontrol1")]
    private BQhGp6J4QAjvAGkhAy fpqL4Wof5F;
    [AccessedThroughProperty("TabPage1")]
    private TabPage m0xL5nf9Vp;
    [AccessedThroughProperty("TabPage2")]
    private TabPage pIaLOI1EE2;
    [AccessedThroughProperty("StatusStrip2")]
    private StatusStrip INkLAkSia5;
    [AccessedThroughProperty("Pr2")]
    private ToolStripProgressBar XWMLX5pZOr;
    [AccessedThroughProperty("TabPage3")]
    private TabPage m8lLlfxwWE;
    [AccessedThroughProperty("TabPage4")]
    private TabPage mTyLyfpfoH;
    [AccessedThroughProperty("StatusStrip4")]
    private StatusStrip NPjLgiaia0;
    [AccessedThroughProperty("Pr4")]
    private ToolStripProgressBar zefLCtRvBs;
    [AccessedThroughProperty("TabPage5")]
    private TabPage DnRLqtn6rq;
    [AccessedThroughProperty("StatusStrip1")]
    private StatusStrip ICiL02jw77;
    [AccessedThroughProperty("Pr")]
    private ToolStripProgressBar hPaLFE6ri2;
    [AccessedThroughProperty("ToolStripProgressBar1")]
    private ToolStripProgressBar y9aLIKfFPS;
    [AccessedThroughProperty("ToolStripSeparator12")]
    private ToolStripSeparator B5aLrZmsHE;
    [AccessedThroughProperty("ToolStripStatusLabel5")]
    private ToolStripStatusLabel tw4LHs2TtS;
    [AccessedThroughProperty("TabPage6")]
    private TabPage NqnL3HM5R9;
    [AccessedThroughProperty("Lv5")]
    private LV hDsLeeGfrm;
    [AccessedThroughProperty("ColumnHeader21")]
    private ColumnHeader puALs9lWUU;
    [AccessedThroughProperty("ColumnHeader22")]
    private ColumnHeader q41LbwBcjR;
    [AccessedThroughProperty("StatusStrip6")]
    private StatusStrip QmML9aVfbM;
    [AccessedThroughProperty("ToolStripProgressBar2")]
    private ToolStripProgressBar hBALv854em;
    [AccessedThroughProperty("ContextMenuStrip5")]
    private ContextMenuStrip SgWLu5dtXo;
    [AccessedThroughProperty("RefreshToolStripMenuItem3")]
    private ToolStripMenuItem lV8L75PQ29;
    [AccessedThroughProperty("DeleteValueToolStripMenuItem")]
    private ToolStripMenuItem TUKLNlw94Q;
    [AccessedThroughProperty("Timer1")]
    private Timer d4PLz1tyFW;
    [AccessedThroughProperty("TabPage7")]
    private TabPage NHyxK3VTXy;
    [AccessedThroughProperty("ContextMenuStrip6")]
    private ContextMenuStrip PHtxMTDxJq;
    [AccessedThroughProperty("StatusStrip7")]
    private StatusStrip rt7xYmnCMI;
    [AccessedThroughProperty("ToolStripProgressBar3")]
    private ToolStripProgressBar Yi8xtNHaQA;
    [AccessedThroughProperty("Lv6")]
    private LV mjbx601rC1;
    [AccessedThroughProperty("ColumnHeader20")]
    private ColumnHeader Mogx8PLZA9;
    [AccessedThroughProperty("RefreshToolStripMenuItem4")]
    private ToolStripMenuItem wRIxBNXNtP;
    [AccessedThroughProperty("KillToolStripMenuItem")]
    private ToolStripMenuItem V5JxJyZo0l;
    [AccessedThroughProperty("TabPage8")]
    private TabPage mkhxUPfQ4x;
    [AccessedThroughProperty("TextBox3")]
    private TextBox mebxQb3KYo;
    [AccessedThroughProperty("Button2")]
    private Button RjrxG36x0Q;
    [AccessedThroughProperty("Button1")]
    private Button G4fxpAsdQn;
    [AccessedThroughProperty("TabPage9")]
    private TabPage pZ9xVDsaJR;
    [AccessedThroughProperty("Lv7")]
    private LV EmmxwgS6SR;
    [AccessedThroughProperty("ColumnHeader23")]
    private ColumnHeader OQBx2q4hdL;
    [AccessedThroughProperty("ContextMenuStrip7")]
    private ContextMenuStrip IbcxkM3cQG;
    [AccessedThroughProperty("RefreshToolStripMenuItem5")]
    private ToolStripMenuItem iZwxL1Yx4h;
    [AccessedThroughProperty("UninstallToolStripMenuItem")]
    private ToolStripMenuItem ExnxxVgL3t;
    [AccessedThroughProperty("StatusStrip3")]
    private StatusStrip AlKxdFC4Bq;
    [AccessedThroughProperty("Pr3")]
    private ToolStripProgressBar elYxmZDVu8;
    [AccessedThroughProperty("StatusStrip9")]
    private StatusStrip utExE0P4FL;
    [AccessedThroughProperty("ToolStripProgressBar4")]
    private ToolStripProgressBar pBmxacC3Xu;
    public Connection SK;
    public int Key;
    public int Value;
    public string NamaDir;
    private bool nWyxZ14aOD;
    private bool TgdxoS2Twm;
    private bool qjaxjSUiN1;
    private bool De5xPvsekB;
    private bool WsGxhbQJlp;
    private bool D0KxW0O6Zs;
    private bool n45xnNld0c;
    private bool BkbxfxPSNb;
    private bool CGIxcnIcjf;

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    static Form6()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Form6()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool disposing)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerStepThrough]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private void NTVkKOdea9()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ImageList slItCD5Ken()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void F3GtoXx2PX(ImageList WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual LV Lv1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader I0lCM229rW()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void QXbC80tQ7a(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader FRKt7eJsDt()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void jm7tpCFEpa(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader tHPtyb7HYr()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void AxytImUVry(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ContextMenuStrip ContextMenuStrip1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem UpToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ComboBox ComboBox1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem RefreshToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem CreateKeyToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem DeleteKeyToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripSeparator ToolStripSeparator2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem EditToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem NewValueToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem DeleteToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripSeparator ToolStripSeparator1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual LV Lv2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader Nnvt0b7c2n()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void xBxt6pQCdb(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader oy5t9mSDGF()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void Uc7tPaLodK(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader nffwJdGXMd()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void RQmwzqwIVD(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual ContextMenuStrip ContextMenuStrip2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem ToolStripMenuItem1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem NewProcessToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem EndProcessToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual RichTextBox RichTextBox1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem EndDeleteProcessToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual LV Lv3
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader fapNWp9I2x()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void eaIN2tDuCw(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader To8Na1AmXB()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void EpdNYWLxQS(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader y9ANvJiZNb()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void vFENupleBb(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader kGAN1wjDhO()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void w50NjqhQgl(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader eInNDYTqQO()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void oFpNlyY64j(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual ContextMenuStrip ContextMenuStrip3
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem RefreshToolStripMenuItem1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem CloseToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem ContinueToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem PauseToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem StartToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual LV Lv4
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader ch1NrsS5v5()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void IL2NU6f5eR(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader xVgNCxWajg()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void ri5NosT2nt(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader SqeNtZ7F0k()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void BdnNfJNXE0(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ImageList w7lUyHEHjM()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void j2DUI81HjT(ImageList WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader f84NwomsYv()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void aHINNH3l0l(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader VNYNgOvgJJ()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void zKfNKRr8VQ(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader NnGNVeWdoS()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void vTxNLoWdbq(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader jI0NTqMrem()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void mhgNx0gOnj(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader y8GNEnZnF1()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void e69NF6eMGb(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual ContextMenuStrip ContextMenuStrip4
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem RefreshToolStripMenuItem2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem KillConnectionToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem SuspendToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem ResumeToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripSeparator ToolStripSeparator3
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripSeparator ToolStripSeparator4
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripSeparator ToolStripSeparator6
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripSeparator ToolStripSeparator5
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem StopToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual BQhGp6J4QAjvAGkhAy ChromeTabcontrol1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual TabPage TabPage1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual TabPage TabPage2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual StatusStrip StatusStrip2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripProgressBar Pr2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual TabPage TabPage3
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual TabPage TabPage4
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual StatusStrip StatusStrip4
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripProgressBar Pr4
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual TabPage TabPage5
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual StatusStrip StatusStrip1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripProgressBar Pr
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripProgressBar ToolStripProgressBar1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripSeparator ToolStripSeparator12
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripStatusLabel ToolStripStatusLabel5
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual TabPage TabPage6
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual LV Lv5
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader WXkgy1OT1P()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void aZEgIfiifG(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader ohMg0HOosm()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void frLg6A5rtS(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual StatusStrip StatusStrip6
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripProgressBar ToolStripProgressBar2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ContextMenuStrip ContextMenuStrip5
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem RefreshToolStripMenuItem3
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem DeleteValueToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual Timer u7LCEcqHO4()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void IEuCF6kSDU(Timer WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual TabPage TabPage7
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ContextMenuStrip ContextMenuStrip6
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual StatusStrip StatusStrip7
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripProgressBar ToolStripProgressBar3
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual LV Lv6
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader Gw8grH6eY4()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void pPrgUHu3mr(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual ToolStripMenuItem RefreshToolStripMenuItem4
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem KillToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual TabPage TabPage8
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual TextBox TextBox3
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual Button Button2
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual TabPage TabPage9
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual LV Lv7
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.NoInlining)]
    internal virtual ColumnHeader yf3gTuNj7C()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [SpecialName]
    [MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)]
    internal virtual void s7SgxAWdDg(ColumnHeader WithEventsValue)
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual ContextMenuStrip ContextMenuStrip7
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem RefreshToolStripMenuItem5
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripMenuItem UninstallToolStripMenuItem
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual StatusStrip StatusStrip3
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripProgressBar Pr3
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual StatusStrip StatusStrip9
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual ToolStripProgressBar ToolStripProgressBar4
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void Send(string s)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void RefreshList()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void BdmkMrCkYJ(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void dvBkYxxlaT(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void wSJktugVJe(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void pNBk6iK7Ik(object _param1, FormClosingEventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void PVrk8f3QtZ(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void FBHkBGJtCT(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void jOwkJ6KRmH(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void s7akU8Ry1y(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void isokQh6gin(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void PHmkGu8YOV(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void mS0kpE2xPP(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void O9xkVdWWQg(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void Mf9kwbFqWw(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void z4mk21Ex71(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void vMvkk2opgw(object _param1, KeyEventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void GuIkLZGjDO(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void RwckxddDun(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void mGCkdgSG4h(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void W09kmaZem2(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void UoskEn232W(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void TrKkaFutxr(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void P0UkZnCQNT(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void U3qkoOsiTj(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void pFikj3IbMA(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ysAkPsviHl(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void UkQkhO8IAv(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void iiwkWem5Wn(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void H5Uknf1m46(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void pevkf2DEBE(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void F6QkcKfQp3(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void afQkSqKJW8(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void YE7kiw8p0B(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void yREkTfAHQC(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void aOIk1KcWo2(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void aRekRpP7U4(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void TUtkDDp39d(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
