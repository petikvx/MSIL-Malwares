// Decompiled with JetBrains decompiler
// Type: e8Z.c2J
// Assembly: b2N, Version=2.6.1.0, Culture=neutral, PublicKeyToken=null
// MVID: 3B86DD43-2061-4384-90DE-A75DC11823D1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1950a5e693e7b214a5b20a07920f623e422e3c466369197c0f76c5f62e3396df.exe

using Co02;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.FileIO;
using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;

namespace e8Z
{
  [StandardModule]
  internal sealed class c2J
  {
    public static bool CerrarServidor = false;
    public static string modName;
    public static string ModNameComprobacionGuardar = "";
    public static string nombreArchivoObtenido;
    public static string nombreClaseObtenido;
    public static bool cancelModName;
    public static string ruta;
    public static string rutaTemp = "\\temp\\";
    public static string rutaPlayer = "\\CoJ2\\Data\\Player\\";
    public static string rutaAppData = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\ModsCoJ2\\";
    public static StreamWriter write;
    public static StreamReader read;
    public static bool vRestart = false;
    public static string ModIniCabecera = "";
    public static string ModIniAristocrat = "";
    public static string ModIniBandit = "";
    public static string ModIniBarnsby = "";
    public static string ModIniDoc = "";
    public static string ModIniGunslinger = "";
    public static string ModIniGunsmith = "";
    public static string ModIniJuarez = "";
    public static string ModIniMiner = "";
    public static string ModIniRifleman = "";
    public static string ModIniSniper = "";
    public static string ModIniThief = "";
    public static string ModIniTrapper = "";
    public static string ModIniTribeWarrior = "";
    public static string ConfiguracionModInicial = "";
    private static object frmArmas;
    public const string sSecretKey = "%c0jm0ds";

    public static void n1E()
    {
      c2J.r8Q("c:\\temp\\test.txt", "c:\\temp\\Encrypted.txt", "%c0jm0ds");
      c2J.Yq7("c:\\temp\\Encrypted.txt", "c:\\temp\\Decrypted.txt", "%c0jm0ds");
    }

    public static void r8Q(string m5K, string f6H, string Qz2)
    {
      FileStream fileStream1 = new FileStream(m5K, FileMode.Open, FileAccess.Read);
      FileStream fileStream2 = new FileStream(f6H, FileMode.Create, FileAccess.Write);
      DESCryptoServiceProvider cryptoServiceProvider = new DESCryptoServiceProvider();
      cryptoServiceProvider.Key = Encoding.ASCII.GetBytes(Qz2);
      cryptoServiceProvider.IV = Encoding.ASCII.GetBytes(Qz2);
      ICryptoTransform encryptor = cryptoServiceProvider.CreateEncryptor();
      CryptoStream cryptoStream = new CryptoStream((Stream) fileStream2, encryptor, CryptoStreamMode.Write);
      byte[] numArray = new byte[checked ((int) (fileStream1.Length - 1L) + 1)];
      fileStream1.Read(numArray, 0, numArray.Length);
      cryptoStream.Write(numArray, 0, numArray.Length);
      cryptoStream.Close();
    }

    public static void Yq7(string k0E, string Qw9, string Sf9)
    {
      DESCryptoServiceProvider cryptoServiceProvider = new DESCryptoServiceProvider();
      cryptoServiceProvider.Key = Encoding.ASCII.GetBytes(Sf9);
      cryptoServiceProvider.IV = Encoding.ASCII.GetBytes(Sf9);
      CryptoStream cryptoStream = new CryptoStream((Stream) new FileStream(k0E, FileMode.Open, FileAccess.Read), cryptoServiceProvider.CreateDecryptor(), CryptoStreamMode.Read);
      StreamWriter streamWriter = new StreamWriter(Qw9);
      streamWriter.Write(new StreamReader((Stream) cryptoStream).ReadToEnd());
      streamWriter.Flush();
      streamWriter.Close();
    }

    public static void Mn4()
    {
      if (!File.Exists(c2J.rutaAppData + "\\Mods\\" + c2J.modName + "\\ini\\mod.ini"))
        return;
      c2J.read = File.OpenText(c2J.rutaAppData + "\\Mods\\" + c2J.modName + "\\ini\\mod.ini");
      string end = c2J.read.ReadToEnd();
      string str = end.Substring(0, checked (end.Length - 2));
      c2J.read.Close();
      c2J.ModIniCabecera = str.Substring(0, 1).ToString();
      int num1 = 1;
      do
      {
        switch (num1)
        {
          case 1:
            string Expression1 = "Aristocrat";
            int num2 = str.IndexOf(Expression1);
            if (num2 > -1)
            {
              c2J.ModIniAristocrat = str.Substring(checked (num2 + Strings.Len(Expression1)), 10).ToString();
              break;
            }
            break;
          case 2:
            string Expression2 = "Bandit";
            int num3 = str.IndexOf(Expression2);
            if (num3 > -1)
            {
              c2J.ModIniBandit = str.Substring(checked (num3 + Strings.Len(Expression2)), 10).ToString();
              break;
            }
            break;
          case 3:
            string Expression3 = "Barnsby";
            int num4 = str.IndexOf(Expression3);
            if (num4 > -1)
            {
              c2J.ModIniBarnsby = str.Substring(checked (num4 + Strings.Len(Expression3)), 10).ToString();
              break;
            }
            break;
          case 4:
            string Expression4 = "Doc";
            int num5 = str.IndexOf(Expression4);
            if (num5 > -1)
            {
              c2J.ModIniDoc = str.Substring(checked (num5 + Strings.Len(Expression4)), 10).ToString();
              break;
            }
            break;
          case 5:
            string Expression5 = "Gunslinger";
            int num6 = str.IndexOf(Expression5);
            if (num6 > -1)
            {
              c2J.ModIniGunslinger = str.Substring(checked (num6 + Strings.Len(Expression5)), 10).ToString();
              break;
            }
            break;
          case 6:
            string Expression6 = "Gunsmith";
            int num7 = str.IndexOf(Expression6);
            if (num7 > -1)
            {
              c2J.ModIniGunsmith = str.Substring(checked (num7 + Strings.Len(Expression6)), 10).ToString();
              break;
            }
            break;
          case 7:
            string Expression7 = "Juarez";
            int num8 = str.IndexOf(Expression7);
            if (num8 > -1)
            {
              c2J.ModIniJuarez = str.Substring(checked (num8 + Strings.Len(Expression7)), 10).ToString();
              break;
            }
            break;
          case 8:
            string Expression8 = "Miner";
            int num9 = str.IndexOf(Expression8);
            if (num9 > -1)
            {
              c2J.ModIniMiner = str.Substring(checked (num9 + Strings.Len(Expression8)), 10).ToString();
              break;
            }
            break;
          case 9:
            string Expression9 = "Rifleman";
            int num10 = str.IndexOf(Expression9);
            if (num10 > -1)
            {
              c2J.ModIniRifleman = str.Substring(checked (num10 + Strings.Len(Expression9)), 10).ToString();
              break;
            }
            break;
          case 10:
            string Expression10 = "Sniper";
            int num11 = str.IndexOf(Expression10);
            if (num11 > -1)
            {
              c2J.ModIniSniper = str.Substring(checked (num11 + Strings.Len(Expression10)), 10).ToString();
              break;
            }
            break;
          case 11:
            string Expression11 = "Thief";
            int num12 = str.IndexOf(Expression11);
            if (num12 > -1)
            {
              c2J.ModIniThief = str.Substring(checked (num12 + Strings.Len(Expression11)), 10).ToString();
              break;
            }
            break;
          case 12:
            string Expression12 = "Trapper";
            int num13 = str.IndexOf(Expression12);
            if (num13 > -1)
            {
              c2J.ModIniTrapper = str.Substring(checked (num13 + Strings.Len(Expression12)), 10).ToString();
              break;
            }
            break;
          case 13:
            string Expression13 = "TribeWarrior";
            int num14 = str.IndexOf(Expression13);
            if (num14 > -1)
              c2J.ModIniTribeWarrior = str.Substring(checked (num14 + Strings.Len(Expression13)), 10).ToString();
            break;
        }
        checked { ++num1; }
      }
      while (num1 <= 13);
      c2J.ConfiguracionModInicial = str;
    }

    public static void Ng1()
    {
      if (Directory.Exists(c2J.rutaAppData + "\\Mods\\" + c2J.modName + "\\ini"))
        k8D5.Computer.FileSystem.DeleteDirectory(c2J.rutaAppData + "\\Mods\\" + c2J.modName + "\\ini", DeleteDirectoryOption.DeleteAllContents);
      k8D5.Computer.FileSystem.CreateDirectory(c2J.rutaAppData + "\\Mods\\" + c2J.modName + "\\ini");
      string str = "";
      if (Operators.CompareString(c2J.ModIniCabecera, "", false) == 0)
        c2J.ModIniCabecera = "0";
      if (Operators.CompareString(c2J.ModIniCabecera, "", false) != 0)
        str += c2J.ModIniCabecera;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniAristocrat), "", false) != 0)
        str = str + "Aristocrat" + c2J.ModIniAristocrat;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniBandit), "", false) != 0)
        str = str + "Bandit" + c2J.ModIniBandit;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniBarnsby), "", false) != 0)
        str = str + "Barnsby" + c2J.ModIniBarnsby;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniDoc), "", false) != 0)
        str = str + "Doc" + c2J.ModIniDoc;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniGunslinger), "", false) != 0)
        str = str + "Gunslinger" + c2J.ModIniGunslinger;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniGunsmith), "", false) != 0)
        str = str + "Gunsmith" + c2J.ModIniGunsmith;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniJuarez), "", false) != 0)
        str = str + "Juarez" + c2J.ModIniJuarez;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniMiner), "", false) != 0)
        str = str + "Miner" + c2J.ModIniMiner;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniRifleman), "", false) != 0)
        str = str + "Rifleman" + c2J.ModIniRifleman;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniSniper), "", false) != 0)
        str = str + "Sniper" + c2J.ModIniSniper;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniThief), "", false) != 0)
        str = str + "Thief" + c2J.ModIniThief;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniTrapper), "", false) != 0)
        str = str + "Trapper" + c2J.ModIniTrapper;
      if (Operators.CompareString(Strings.Trim(c2J.ModIniTribeWarrior), "", false) != 0)
        str = str + "TribeWarrior" + c2J.ModIniTribeWarrior;
      c2J.write = File.AppendText(c2J.rutaAppData + "\\Mods\\" + c2J.modName + "\\ini\\mod.ini");
      c2J.write.WriteLine(str);
      c2J.write.Close();
    }

    public static void f5J(string m4Q)
    {
      if (Operators.CompareString(m4Q, "Aristocrat", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Aristocrat_Properties.scr";
      else if (Operators.CompareString(m4Q, "Bandit", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Bandit_Properties.scr";
      else if (Operators.CompareString(m4Q, "Barnsby", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Barnsby_Properties.scr";
      else if (Operators.CompareString(m4Q, "Doc", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Doc_Properties.scr";
      else if (Operators.CompareString(m4Q, "Gunslinger", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Gunslinger_Properties.scr";
      else if (Operators.CompareString(m4Q, "Gunsmith", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Gunsmith_Properties.scr";
      else if (Operators.CompareString(m4Q, "Juarez", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Juarez_Properties.scr";
      else if (Operators.CompareString(m4Q, "Miner", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Miner_Properties.scr";
      else if (Operators.CompareString(m4Q, "Rifleman", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Rifleman_Properties.scr";
      else if (Operators.CompareString(m4Q, "Sniper", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Sniper_Properties.scr";
      else if (Operators.CompareString(m4Q, "Thief", false) == 0)
        c2J.nombreArchivoObtenido = "_NetWeapon_Thief_Properties.scr";
      else if (Operators.CompareString(m4Q, "Trapper", false) == 0)
      {
        c2J.nombreArchivoObtenido = "_NetWeapon_Trapper_Properties.scr";
      }
      else
      {
        if (Operators.CompareString(m4Q, "Tribe Warrior", false) != 0)
          return;
        c2J.nombreArchivoObtenido = "_NetWeapon_TribeWarrior_Properties.scr";
      }
    }

    public static void k7A(string Tc2)
    {
      if (Operators.CompareString(Tc2, "_NetWeapon_Aristocrat_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Aristocrat";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Bandit_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Bandit";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Barnsby_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Barnsby";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Doc_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Doc";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Gunslinger_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Gunslinger";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Gunsmith_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Gunsmith";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Juarez_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Juarez";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Miner_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Miner";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Rifleman_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Rifleman";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Sniper_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Sniper";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Thief_Properties.scr", false) == 0)
        c2J.nombreClaseObtenido = "Thief";
      else if (Operators.CompareString(Tc2, "_NetWeapon_Trapper_Properties.scr", false) == 0)
      {
        c2J.nombreClaseObtenido = "Trapper";
      }
      else
      {
        if (Operators.CompareString(Tc2, "_NetWeapon_TribeWarrior_Properties.scr", false) != 0)
          return;
        c2J.nombreClaseObtenido = "Tribe Warrior";
      }
    }

    public static void Cb7(string De9)
    {
      if (!k8D5.Computer.FileSystem.DirectoryExists(c2J.ruta + c2J.rutaTemp))
        return;
      k8D5.Computer.FileSystem.GetDirectoryInfo(De9).Attributes = FileAttributes.Hidden;
    }
  }
}
