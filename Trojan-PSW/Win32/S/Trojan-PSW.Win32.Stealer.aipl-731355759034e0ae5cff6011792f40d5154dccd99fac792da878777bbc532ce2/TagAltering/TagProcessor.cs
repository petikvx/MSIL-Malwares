// Decompiled with JetBrains decompiler
// Type: TagAltering.TagProcessor
// Assembly: AnsiCharMarsha, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 45449883-CB33-464D-BFFF-85C1D8F95247
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-PSW.Win32.Stealer.aipl-731355759034e0ae5cff6011792f40d5154dccd99fac792da878777bbc532ce2.exe

using System;
using System.Collections.Generic;
using System.Linq;

namespace TagAltering
{
  public class TagProcessor
  {
    private IList<string> _OriginalFilePaths { get; set; }

    public IList<Tag_3v1> Files_3v1 { get; private set; }

    public IList<Tag_3v2> Files_3v2 { get; private set; }

    public TagProcessor(IList<string> filePaths)
    {
      this._OriginalFilePaths = filePaths;
      this.OrderByFileName();
    }

    public bool Update3v1TrackOrdering(IList<Tag_3v1> files)
    {
      bool flag = true;
      int track = 1;
      foreach (Tag_3v1 file in (IEnumerable<Tag_3v1>) files)
      {
        flag = flag && file.UpdateTrack(track);
        ++track;
      }
      return flag;
    }

    public bool Update3v2TrackOrdering(IList<Tag_3v2> files)
    {
      bool flag = true;
      int track = 1;
      foreach (Tag_3v2 file in (IEnumerable<Tag_3v2>) files)
      {
        flag = flag && file.UpdateTrack(track);
        ++track;
      }
      return flag;
    }

    private void OrderByFileName()
    {
      this.Files_3v1 = (IList<Tag_3v1>) new List<Tag_3v1>();
      this.Files_3v2 = (IList<Tag_3v2>) new List<Tag_3v2>();
      foreach (string originalFilePath in (IEnumerable<string>) this._OriginalFilePaths)
      {
        this.Files_3v1.Add(new Tag_3v1(originalFilePath));
        this.Files_3v2.Add(new Tag_3v2(originalFilePath));
      }
      this.Files_3v1 = (IList<Tag_3v1>) this.Files_3v1.OrderBy<Tag_3v1, string>((Func<Tag_3v1, string>) (x => x.FileName)).ToList<Tag_3v1>();
      this.Files_3v2 = (IList<Tag_3v2>) this.Files_3v2.OrderBy<Tag_3v2, string>((Func<Tag_3v2, string>) (x => x.FileName)).ToList<Tag_3v2>();
    }
  }
}
