// Decompiled with JetBrains decompiler
// Type: 996387091341.596475605513
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003398049663276;
using \u003463056308027;
using \u003475310219084;
using \u003715672977127;
using \u003996387091341;
using System;
using System.Numerics;
using System.Runtime.CompilerServices;

namespace \u003996387091341
{
  public static class \u003596475605513
  {
    public static string \u003667424794531(this IRichDataType _param0)
    {
      switch (_param0.Kind)
      {
        case \u003547566135655.Numeric:
          return \u003596475605513.\u003660804403428(_param0) ?? "varchar";
        case \u003547566135655.Date:
        case \u003547566135655.Time:
        case \u003547566135655.DateTime:
          return \u003596475605513.\u003208380315231(_param0) ?? "varchar";
        case \u003547566135655.Boolean:
          return "bit";
        default:
          return "varchar";
      }
    }

    private static string \u003208380315231(IRichDataType _param0)
    {
      if (!(_param0 is \u003418950873144 obj))
        return (string) null;
      if (obj.\u003965734076178)
        return "datetime2";
      if (obj.\u003677979328390)
        return "date";
      return obj.\u003780160262527 ? "time" : (string) null;
    }

    private static string \u003660804403428(IRichDataType _param0)
    {
      if (!(_param0 is \u003415651442941 obj))
        return (string) null;
      if (obj.\u003574232386253.HasValue && obj.\u003355410381240.HasValue)
      {
        BigInteger bigInteger1 = obj.\u003574232386253.Value;
        BigInteger bigInteger2 = obj.\u003355410381240.Value;
        if (bigInteger1 >= 0L && bigInteger2 <= (long) byte.MaxValue)
          return "tinyint";
        if (bigInteger1 >= (long) short.MinValue && bigInteger2 <= (long) short.MaxValue)
          return "smallint";
        if (bigInteger1 >= (long) int.MinValue && bigInteger2 <= (long) int.MaxValue)
          return "int";
        return bigInteger1 >= long.MinValue && bigInteger2 <= long.MaxValue ? "bigint" : (string) null;
      }
      if (!obj.\u003065332417396.HasValue || !obj.\u003473812983398.HasValue)
        return "float(53)";
      if (obj.\u003065332417396.Value > 38)
        return (string) null;
      return FormattableString.Invariant(FormattableStringFactory.Create("decimal({0}, {1})", (object) obj.\u003065332417396.Value, (object) obj.\u003473812983398.Value));
    }
  }
}
