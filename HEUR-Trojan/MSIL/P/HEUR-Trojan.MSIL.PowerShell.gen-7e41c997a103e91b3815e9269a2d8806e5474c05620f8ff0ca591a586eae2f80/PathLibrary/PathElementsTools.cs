// Decompiled with JetBrains decompiler
// Type: PathLibrary.PathElementsTools
// Assembly: LeaseMana, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 529A6AA6-AEB5-47F3-B86B-C5E3C5F9FA62
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-7e41c997a103e91b3815e9269a2d8806e5474c05620f8ff0ca591a586eae2f80.exe

using MyExtensions;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Xml.Linq;

namespace PathLibrary
{
  public static class PathElementsTools
  {
    public static IEnumerable<XElement> GetCollectionUsingPath(
      XElement item,
      string path)
    {
      string[] array = ((IEnumerable<string>) path.Split('/')).Where<string>((Func<string, bool>) (x => x.IsNotEmptyOrNull())).ToArray<string>();
      IEnumerable<XElement> source = item.Elements((XName) array[0]);
      for (int index = 1; index < array.Length; ++index)
        source = source.Elements<XElement>((XName) array[index]);
      return source;
    }
  }
}
