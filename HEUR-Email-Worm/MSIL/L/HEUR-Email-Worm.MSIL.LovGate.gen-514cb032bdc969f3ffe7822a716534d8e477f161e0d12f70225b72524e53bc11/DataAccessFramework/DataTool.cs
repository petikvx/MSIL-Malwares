// Decompiled with JetBrains decompiler
// Type: DataAccessFramework.DataTool
// Assembly: PreAllocatedOverlap, Version=1.0.2.1, Culture=neutral, PublicKeyToken=null
// MVID: B92242D0-7BA9-445E-B92A-42A0AEAC877F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Email-Worm.MSIL.LovGate.gen-514cb032bdc969f3ffe7822a716534d8e477f161e0d12f70225b72524e53bc11.exe

using DataAccessFramework.Querying;
using System;
using System.Collections;
using System.Data;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;

namespace DataAccessFramework
{
  public abstract class DataTool : IDisposable
  {
    private bool _isDisposed;

    protected abstract IDbConnection GetConnection();

    protected abstract IDbTransaction GetTransaction();

    protected abstract IDbCommand CreateCommand();

    public int ExecuteNonQuery(string spName, params IDataParameter[] parameters)
    {
label_1:
      int num1 = -1068658669;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -67920760)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num3 * -2018727348 ^ -1667274651;
            continue;
          case 3:
            num2 = this.ExecuteNonQuery(spName, CommandType.StoredProcedure, parameters);
            num1 = (int) num3 * -927979141 ^ 212523447;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return num2;
    }

    public int ExecuteSqlNonQuery(string sql, params IDataParameter[] parameters)
    {
      try
      {
        return this.ExecuteNonQuery(sql, CommandType.Text, parameters);
      }
      catch (Exception ex)
      {
        throw new DataToolException(DataTool.\u202C‫‬‌⁮⁫‮‏‬‮⁭⁬‌‍‬‏⁪‭​‮‪‭‪‮‌⁪‌‭⁯‫‎⁯⁪‏‍‌⁭‍⁪‬‮(\u003CModule\u003E.\u200C‍⁯​‫⁪‏⁭‫⁪‫‮‭‫‮‌‮⁮‭​‎⁬‬‌⁫‭‫‏⁮‍⁮‍‪‏⁬⁮‎‮⁮⁬‮<string>(1885496779U), sql), ex);
      }
    }

    private int ExecuteNonQuery(
      string commandText,
      CommandType commandType,
      params IDataParameter[] parameters)
    {
label_1:
      int num1 = 2069716405;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 843095331)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 2088169122 ^ 450916617;
            continue;
          case 2:
            this.AssertNotDisposed();
            num1 = (int) num2 * 1099036054 ^ 1214512706;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      IDbCommand command = this.CreateCommand();
      int num3;
      try
      {
label_7:
        int num4 = 137998921;
        IDataParameter[] dataParameterArray;
        int index;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ 843095331)) % 13U)
          {
            case 0:
              goto label_7;
            case 1:
              DataTool.\u200C‪‭‭⁫‌⁮⁫‪⁯‮⁯‏‪‏⁪‎‬‭⁮‌⁮‪‮⁯‬⁬⁭⁫‎‍‍⁮⁮‍‬‫⁬‮⁭‮(command, this.GetConnection());
              num4 = (int) num5 * -258987444 ^ 1036343086;
              continue;
            case 2:
              num4 = (int) num5 * 1294515128 ^ -483535330;
              continue;
            case 3:
              num4 = (int) num5 * 1462370403 ^ -1493307368;
              continue;
            case 4:
              int num6;
              num4 = num6 = index < dataParameterArray.Length ? 1887550945 : (num6 = 918528138);
              continue;
            case 5:
              num3 = DataTool.\u202C‬​⁯⁫‫‍‏⁭‬‮‌⁯‬⁫⁬⁯‮⁯‪‫​⁫​‎‫‭‬⁭‫⁭‬‫‏⁬‬‏‎‭‮‮(command);
              num4 = (int) num5 * 435545483 ^ -1929778957;
              continue;
            case 7:
              DataTool.\u202D‬‮⁪‌‍‎⁫⁯‬‌‎‌⁯‭‎⁬‫⁬⁫‮⁮⁯‫‭‬‏‬⁭‌‎⁬‬⁫‫⁬⁮‏‌‮(command, commandType);
              num4 = (int) num5 * -1338739694 ^ 1312462528;
              continue;
            case 8:
              DataTool.\u206D⁭‎⁪⁯‏‌⁫⁫‌‬‌⁪‎‍‭‫⁭‍‎⁪‏⁫⁪‌⁪⁮‏‌⁮‎⁯⁫⁪⁬⁪‬‎⁬‫‮(command, commandText);
              num4 = (int) num5 * 1819116483 ^ -1649618286;
              continue;
            case 9:
              IDataParameter dataParameter = dataParameterArray[index];
              DataTool.\u206A​‫⁪‮‎⁪⁮‎‪​⁬⁬⁬‭‬‌‌⁪⁪⁭‫⁪‏‬‬‮⁭‬⁮‪‌‮‭⁮‪‭⁯⁪‪‮((IList) DataTool.\u206F‫‬‏⁫⁫‍‮‬⁯⁪‮‌‮‎‮‪⁫⁪⁭‍‭‭‫‬‍‫⁯⁪⁬‌⁫‫‫‬‎⁪⁫‍‮‮(command), (object) dataParameter);
              ++index;
              num4 = 943028138;
              continue;
            case 10:
              dataParameterArray = parameters;
              index = 0;
              num4 = (int) num5 * 1783579301 ^ -1771168708;
              continue;
            case 11:
              num4 = (int) num5 * 84832019 ^ 916439137;
              continue;
            case 12:
              DataTool.\u202E‌‬‬⁮‬⁪⁫‬⁮‎‌‎‪‎‏‫⁪​⁮‪⁫⁬‌‮‬⁮‌⁪‌‭‫‫⁫‏‪⁫‬‏⁭‮(command, this.GetTransaction());
              num4 = (int) num5 * -394606951 ^ 213331510;
              continue;
            default:
              goto label_25;
          }
        }
      }
      finally
      {
        if (command != null)
        {
label_21:
          int num7 = 1679466767;
          while (true)
          {
            uint num8;
            switch ((num8 = (uint) (num7 ^ 843095331)) % 3U)
            {
              case 0:
                goto label_21;
              case 1:
                DataTool.\u200E‪‏⁫‬⁮‬‪‎‭‎‮⁬⁪‫‏⁭⁬‭⁯‮‫⁪‪‎⁫⁭​⁬‭​‮‪‍‏⁮​‏⁫‮((IDisposable) command);
                num7 = (int) num8 * 1620727743 ^ -1799231998;
                continue;
              default:
                goto label_24;
            }
          }
        }
label_24:;
      }
label_25:
      return num3;
    }

    public object ExecuteScalar(string spName, params IDataParameter[] parameters)
    {
label_1:
      int num1 = 228416407;
      object obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 310746295)) % 3U)
        {
          case 1:
            obj = this.ExecuteScalar(spName, CommandType.StoredProcedure, parameters);
            num1 = (int) num2 * 55042580 ^ -1583587543;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return obj;
    }

    private object ExecuteScalar(
      string commandText,
      CommandType commandType,
      params IDataParameter[] parameters)
    {
label_1:
      int num1 = 1221719563;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1969607920)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 656616658 ^ 1456770928;
            continue;
          case 3:
            this.AssertNotDisposed();
            num1 = (int) num2 * -1903204194 ^ 1561770895;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      IDbCommand command = this.CreateCommand();
      try
      {
        DataTool.\u200C‪‭‭⁫‌⁮⁫‪⁯‮⁯‏‪‏⁪‎‬‭⁮‌⁮‪‮⁯‬⁬⁭⁫‎‍‍⁮⁮‍‬‫⁬‮⁭‮(command, this.GetConnection());
        DataTool.\u202E‌‬‬⁮‬⁪⁫‬⁮‎‌‎‪‎‏‫⁪​⁮‪⁫⁬‌‮‬⁮‌⁪‌‭‫‫⁫‏‪⁫‬‏⁭‮(command, this.GetTransaction());
label_7:
        int num3 = 1679942205;
        IDataParameter[] dataParameterArray;
        object obj1;
        int index;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1969607920)) % 11U)
          {
            case 0:
              dataParameterArray = parameters;
              num3 = (int) num4 * 82234744 ^ -1521270183;
              continue;
            case 1:
              DataTool.\u202D‬‮⁪‌‍‎⁫⁯‬‌‎‌⁯‭‎⁬‫⁬⁫‮⁮⁯‫‭‬‏‬⁭‌‎⁬‬⁫‫⁬⁮‏‌‮(command, commandType);
              num3 = (int) num4 * 2500536 ^ -1481030062;
              continue;
            case 2:
              index = 0;
              num3 = (int) num4 * -733692605 ^ -1234979361;
              continue;
            case 3:
              obj1 = DataTool.\u206F⁯​‮‬‏​⁮⁮‮​‮‌‪⁫‮⁪‭‎⁮⁭⁭‮‏‮​‭⁯‏‮‏⁯⁯⁭‫‏⁮‎‎⁭‮(command);
              if (obj1 != DBNull.Value)
              {
                num3 = (int) num4 * -1236805376 ^ 1320051439;
                continue;
              }
              goto label_20;
            case 5:
              num3 = (int) num4 * 762645446 ^ -1618764786;
              continue;
            case 6:
              int num5;
              num3 = num5 = index < dataParameterArray.Length ? 100546917 : (num5 = 707469627);
              continue;
            case 7:
              num3 = (int) num4 * 844623432 ^ -418268427;
              continue;
            case 8:
              DataTool.\u206D⁭‎⁪⁯‏‌⁫⁫‌‬‌⁪‎‍‭‫⁭‍‎⁪‏⁫⁪‌⁪⁮‏‌⁮‎⁯⁫⁪⁬⁪‬‎⁬‫‮(command, commandText);
              num3 = (int) num4 * 1486134600 ^ -985960983;
              continue;
            case 9:
              goto label_7;
            case 10:
              IDataParameter dataParameter = dataParameterArray[index];
              DataTool.\u206A​‫⁪‮‎⁪⁮‎‪​⁬⁬⁬‭‬‌‌⁪⁪⁭‫⁪‏‬‬‮⁭‬⁮‪‌‮‭⁮‪‭⁯⁪‪‮((IList) DataTool.\u206F‫‬‏⁫⁫‍‮‬⁯⁪‮‌‮‎‮‪⁫⁪⁭‍‭‭‫‬‍‫⁯⁪⁬‌⁫‫‫‬‎⁪⁫‍‮‮(command), (object) dataParameter);
              ++index;
              num3 = 1778789604;
              continue;
            default:
              goto label_19;
          }
        }
label_19:
        object obj2 = obj1;
        goto label_21;
label_20:
        obj2 = (object) null;
label_21:
        return obj2;
      }
      finally
      {
        if (command != null)
        {
label_23:
          int num6 = 884681022;
          while (true)
          {
            uint num7;
            switch ((num7 = (uint) (num6 ^ 1969607920)) % 4U)
            {
              case 1:
                num6 = (int) num7 * 963968294 ^ -229270346;
                continue;
              case 2:
                DataTool.\u200E‪‏⁫‬⁮‬‪‎‭‎‮⁬⁪‫‏⁭⁬‭⁯‮‫⁪‪‎⁫⁭​⁬‭​‮‪‍‏⁮​‏⁫‮((IDisposable) command);
                num6 = (int) num7 * 1521892949 ^ -1018498953;
                continue;
              case 3:
                goto label_23;
              default:
                goto label_27;
            }
          }
        }
label_27:;
      }
    }

    public object ExecuteSqlScalar(string sql, params IDataParameter[] parameters)
    {
label_1:
      int num1 = -842406054;
      object obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1577796193)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1388066627 ^ 3734940;
            continue;
          case 1:
            obj = this.ExecuteScalar(sql, CommandType.Text, parameters);
            num1 = (int) num2 * -286728220 ^ -1612641489;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return obj;
    }

    public virtual IDataReader ExecuteSqlReader(
      string sql,
      params IDataParameter[] parameters)
    {
label_1:
      int num1 = 1408023874;
      IDataReader dataReader;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1719468339)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1878316663 ^ -312607643;
            continue;
          case 1:
            dataReader = this.ExecuteReader(sql, CommandType.Text, CommandBehavior.SingleResult, parameters);
            num1 = (int) num2 * 176723384 ^ -465266069;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return dataReader;
    }

    public virtual IDataReader ExecuteSqlReaderSingleRow(
      string sql,
      params IDataParameter[] parameters)
    {
label_1:
      int num1 = 1697016258;
      IDataReader dataReader;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1658975456)) % 3U)
        {
          case 1:
            dataReader = this.ExecuteReader(sql, CommandType.Text, CommandBehavior.SingleRow, parameters);
            num1 = (int) num2 * 330487658 ^ -533255764;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return dataReader;
    }

    public IDataReader ExecuteReader(string spName, params IDataParameter[] parameters) => this.ExecuteReader(spName, CommandType.StoredProcedure, CommandBehavior.SingleResult | CommandBehavior.SequentialAccess, parameters);

    public IDataReader ExecuteReaderSingleRow(
      string spName,
      params IDataParameter[] parameters)
    {
      IDataReader dataReader = this.ExecuteReader(spName, CommandType.StoredProcedure, CommandBehavior.SingleRow | CommandBehavior.SequentialAccess, parameters);
label_1:
      int num1 = 2105933095;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 115421685)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -379059173 ^ -1627024960;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return dataReader;
    }

    private IDataReader ExecuteReader(
      string sql,
      CommandType commandType,
      CommandBehavior behavior,
      params IDataParameter[] parameters)
    {
label_1:
      int num1 = 773410821;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1223105678)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1380610840 ^ 1477681608;
            continue;
          case 3:
            this.AssertNotDisposed();
            num1 = (int) num2 * -472499023 ^ 1941433868;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      IDbCommand command = this.CreateCommand();
      try
      {
label_7:
        int num3 = 252231344;
        int index;
        IDataParameter[] dataParameterArray;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1223105678)) % 14U)
          {
            case 0:
              goto label_7;
            case 1:
              num3 = (int) num4 * -672364558 ^ 1644731629;
              continue;
            case 3:
              dataParameterArray = parameters;
              num3 = (int) num4 * 1247756380 ^ -330607217;
              continue;
            case 4:
              num3 = (int) num4 * -1400101087 ^ 1660186459;
              continue;
            case 5:
              int num5;
              num3 = num5 = index < dataParameterArray.Length ? 1378629200 : (num5 = 396831584);
              continue;
            case 6:
              DataTool.\u200C‪‭‭⁫‌⁮⁫‪⁯‮⁯‏‪‏⁪‎‬‭⁮‌⁮‪‮⁯‬⁬⁭⁫‎‍‍⁮⁮‍‬‫⁬‮⁭‮(command, this.GetConnection());
              num3 = (int) num4 * -526013893 ^ -1904578177;
              continue;
            case 7:
              DataTool.\u202E‌‬‬⁮‬⁪⁫‬⁮‎‌‎‪‎‏‫⁪​⁮‪⁫⁬‌‮‬⁮‌⁪‌‭‫‫⁫‏‪⁫‬‏⁭‮(command, this.GetTransaction());
              num3 = (int) num4 * -936847280 ^ -486491272;
              continue;
            case 8:
              num3 = (int) num4 * 914627834 ^ 1206597407;
              continue;
            case 9:
              DataTool.\u206D⁭‎⁪⁯‏‌⁫⁫‌‬‌⁪‎‍‭‫⁭‍‎⁪‏⁫⁪‌⁪⁮‏‌⁮‎⁯⁫⁪⁬⁪‬‎⁬‫‮(command, sql);
              num3 = (int) num4 * -1532753561 ^ 1871488947;
              continue;
            case 10:
              IDataParameter dataParameter = dataParameterArray[index];
              DataTool.\u206A​‫⁪‮‎⁪⁮‎‪​⁬⁬⁬‭‬‌‌⁪⁪⁭‫⁪‏‬‬‮⁭‬⁮‪‌‮‭⁮‪‭⁯⁪‪‮((IList) DataTool.\u206F‫‬‏⁫⁫‍‮‬⁯⁪‮‌‮‎‮‪⁫⁪⁭‍‭‭‫‬‍‫⁯⁪⁬‌⁫‫‫‬‎⁪⁫‍‮‮(command), (object) dataParameter);
              ++index;
              num3 = 371819967;
              continue;
            case 11:
              num3 = (int) num4 * 1014592901 ^ 1865744018;
              continue;
            case 12:
              DataTool.\u202D‬‮⁪‌‍‎⁫⁯‬‌‎‌⁯‭‎⁬‫⁬⁫‮⁮⁯‫‭‬‏‬⁭‌‎⁬‬⁫‫⁬⁮‏‌‮(command, commandType);
              num3 = (int) num4 * -356524445 ^ -804916462;
              continue;
            case 13:
              index = 0;
              num3 = (int) num4 * -1111082762 ^ 77599633;
              continue;
            default:
              goto label_21;
          }
        }
label_21:
        return DataTool.\u200E‏⁫⁯‮‭‍‏‪⁪⁪⁪‮‪⁭‎‎⁮⁬‬​⁫⁮⁮‮⁫⁬⁮​⁯‫⁮⁪‬​‏‌‍⁭‭‮(command, behavior);
      }
      finally
      {
        if (command != null)
        {
label_23:
          int num6 = 2092494144;
          while (true)
          {
            uint num7;
            switch ((num7 = (uint) (num6 ^ 1223105678)) % 4U)
            {
              case 0:
                goto label_23;
              case 1:
                num6 = (int) num7 * -1794953208 ^ 1307013317;
                continue;
              case 2:
                DataTool.\u200E‪‏⁫‬⁮‬‪‎‭‎‮⁬⁪‫‏⁭⁬‭⁯‮‫⁪‪‎⁫⁭​⁬‭​‮‪‍‏⁮​‏⁫‮((IDisposable) command);
                num6 = (int) num7 * 1526815488 ^ 1912184515;
                continue;
              default:
                goto label_27;
            }
          }
        }
label_27:;
      }
    }

    public abstract IDataParameter CreateStringParameter(
      string parameterName,
      string value,
      int? length);

    public abstract IDataParameter CreateDecimalParameter(
      string parameterName,
      Decimal? value);

    public abstract IDataParameter CreateIntParameter(
      string parameterName,
      int? value);

    public abstract IDataParameter CreateGuidParameter(
      string parameterName,
      Guid? value);

    public virtual IDataParameter CreateIntParameter(string parameterName, int value)
    {
      IDataParameter intParameter = this.CreateIntParameter(parameterName, new int?(value));
label_1:
      int num1 = 462034680;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1913761609)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -1809077206 ^ 1567691056;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return intParameter;
    }

    public abstract IDataParameter CreateLongParameter(
      string parameterName,
      long? value);

    public abstract IDataParameter CreateStampParameter(
      string parameterName,
      object stamp);

    public abstract IDataParameter CreateBoolParameter(
      string parameterName,
      bool value);

    public abstract IDataParameter CreateBinaryParameter(
      string parameterName,
      byte[] value,
      int? length);

    public virtual IDataParameter CreateBinaryParameter(
      string parameterName,
      Stream dataStream)
    {
      MemoryStream memoryStream = DataTool.\u200B​⁭⁮‬⁭​‬‏‫‭⁬‍‪‫⁭⁭‎⁭⁯‮‭‬‫‎‫⁬⁮‬‏‪‬‫‭‬⁭‍⁪​‎‮();
      IDataParameter binaryParameter;
      try
      {
label_2:
        int num1 = -1276164975;
        byte[] numArray;
        int num2;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num1 ^ -79867779)) % 8U)
          {
            case 1:
              num1 = (int) num3 * -1455585863 ^ 1052295234;
              continue;
            case 2:
              DataTool.\u202A‪‌‌‮⁭⁫⁪‭⁪​‌‏‎⁬‬‎⁯⁬‌⁫‏⁮⁪‫⁯⁬‍‮‫‎‫⁭‌‮⁭⁪‏‮⁮‮((Stream) memoryStream, numArray, 0, num2);
              num1 = -26994436;
              continue;
            case 3:
              binaryParameter = this.CreateBinaryParameter(parameterName, DataTool.\u200C‍‏⁯‏‬‬⁬‪⁫⁫‍‏‍⁫​‬⁮‌⁯‌‏‍​​⁪⁭‪‎⁯⁭‭‮‌⁯‏‮‮‫‮‮(memoryStream), new int?());
              num1 = (int) num3 * 1199990747 ^ 353911804;
              continue;
            case 4:
              numArray = new byte[1024];
              num1 = (int) num3 * 1154052986 ^ -1939485040;
              continue;
            case 5:
              num1 = (int) num3 * 1255926308 ^ 1233691791;
              continue;
            case 6:
              int num4;
              num1 = num4 = 0 < (num2 = DataTool.\u202D‪‌⁪‬⁯‮‮‎‮⁮‍‎‍‫‌⁮⁮‪‎‍‮‏‎⁪‮‏⁯‍⁬‫⁫⁬⁫​⁭‮⁮‍⁭‮(dataStream, numArray, 0, 1024)) ? -969315785 : (num4 = -1817783770);
              continue;
            case 7:
              goto label_2;
            default:
              goto label_15;
          }
        }
      }
      finally
      {
        if (memoryStream != null)
        {
label_11:
          int num5 = -366406742;
          while (true)
          {
            uint num6;
            switch ((num6 = (uint) (num5 ^ -79867779)) % 3U)
            {
              case 0:
                goto label_11;
              case 1:
                DataTool.\u200E‪‏⁫‬⁮‬‪‎‭‎‮⁬⁪‫‏⁭⁬‭⁯‮‫⁪‪‎⁫⁭​⁬‭​‮‪‍‏⁮​‏⁫‮((IDisposable) memoryStream);
                num5 = (int) num6 * 736996847 ^ 928308307;
                continue;
              default:
                goto label_14;
            }
          }
        }
label_14:;
      }
label_15:
      return binaryParameter;
    }

    public abstract IDataParameter CreateDateTimeParameter(
      string parameterName,
      DateTime? value);

    public virtual IDataParameter CreateDateTimeParameter(
      string parameterName,
      DateTime value)
    {
label_1:
      int num1 = 35896590;
      IDataParameter dateTimeParameter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1146494829)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -913470824 ^ 1026331091;
            continue;
          case 3:
            dateTimeParameter = this.CreateDateTimeParameter(parameterName, new DateTime?(value));
            num1 = (int) num2 * 1221480396 ^ -1947894740;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return dateTimeParameter;
    }

    public abstract IDataParameter CreateMoneyParameter(
      string parameterName,
      Decimal value);

    public void Dispose()
    {
label_1:
      int num1 = -345303348;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2081470847)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1573459577 ^ -1785119038;
            continue;
          case 1:
            this.Dispose(true);
            num1 = (int) num2 * 1994506919 ^ 1481484458;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    protected virtual void Dispose(bool disposing) => this._isDisposed = true;

    public abstract void BeginTransaction();

    public abstract void CommitTransaction();

    public abstract void RollbackTransaction();

    protected void AssertNotDisposed()
    {
label_1:
      int num1 = -1013933648;
      bool isDisposed;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2029822616)) % 5U)
        {
          case 0:
            goto label_3;
          case 1:
            goto label_4;
          case 2:
            isDisposed = this._isDisposed;
            num1 = (int) num2 * -649074422 ^ -1770129689;
            continue;
          case 3:
            int num3 = !isDisposed ? 1473023630 : (num3 = 73501471);
            num1 = num3 ^ (int) num2 * 1050283522;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:
      return;
label_4:
      throw DataTool.\u202C⁯⁫‏‌⁮⁬⁭‬⁭‏‎‫⁮‫⁯⁬‪⁪‌‮‌‌​‭‫‫‎⁬‮⁯‍‌⁮‮‮‌⁭⁪‮(DataTool.\u200C‭‎⁯‎‫⁬⁮‬‮​⁪‮⁬​⁫‌⁪‎​‪​‍⁬‭⁯‏⁮⁮‪⁫⁯⁮⁭​⁫‫‌‫⁯‮((MemberInfo) DataTool.\u202E⁬⁬⁪‫‮⁬‍‫‍‪⁪‌‏‫‌⁬⁬‮⁪‬‫‪​‎‮‫⁬‎‬​‮‮⁫⁬‪⁭‬‪‪‮((object) this)));
    }

    public IDataReader ExecuteQuery(Query query)
    {
label_1:
      int num1 = 73029573;
      bool flag;
      IDataReader dataReader;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1808795565)) % 6U)
        {
          case 1:
            int num3 = !flag ? -898585142 : (num3 = -26032007);
            num1 = num3 ^ (int) num2 * 846303009;
            continue;
          case 2:
            Query.ParseResult parseResult = query.Parse(this);
            dataReader = this.ExecuteSqlReader(parseResult.Sql, parseResult.Parameters.ToArray<IDataParameter>());
            num1 = 661896169;
            continue;
          case 3:
            goto label_1;
          case 4:
            flag = query == null;
            num1 = (int) num2 * 1951821511 ^ 1966783040;
            continue;
          case 5:
            goto label_6;
          default:
            goto label_7;
        }
      }
label_6:
      throw DataTool.\u206B‭⁮‭⁫⁯⁬‮‫‎⁫‭‎‌‭⁯‎⁬‎‪⁪‮‎‍⁯‏⁮​⁭‎⁪‫‏‍‬⁫‫⁭​‭‮(\u003CModule\u003E.\u200C‍⁯​‫⁪‏⁭‫⁪‫‮‭‫‮‌‮⁮‭​‎⁬‬‌⁫‭‫‏⁮‍⁮‍‪‏⁬⁮‎‮⁮⁬‮<string>(1502342387U));
label_7:
      return dataReader;
    }

    protected DataTool()
    {
label_1:
      int num1 = -220120611;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -782385759)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 955903647 ^ -933806049;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static string \u202C‫‬‌⁮⁫‮‏‬‮⁭⁬‌‍‬‏⁪‭​‮‪‭‪‮‌⁪‌‭⁯‫‎⁯⁪‏‍‌⁭‍⁪‬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static void \u200C‪‭‭⁫‌⁮⁫‪⁯‮⁯‏‪‏⁪‎‬‭⁮‌⁮‪‮⁯‬⁬⁭⁫‎‍‍⁮⁮‍‬‫⁬‮⁭‮([In] IDbCommand obj0, [In] IDbConnection obj1) => obj0.Connection = obj1;

    static void \u202E‌‬‬⁮‬⁪⁫‬⁮‎‌‎‪‎‏‫⁪​⁮‪⁫⁬‌‮‬⁮‌⁪‌‭‫‫⁫‏‪⁫‬‏⁭‮([In] IDbCommand obj0, [In] IDbTransaction obj1) => obj0.Transaction = obj1;

    static void \u206D⁭‎⁪⁯‏‌⁫⁫‌‬‌⁪‎‍‭‫⁭‍‎⁪‏⁫⁪‌⁪⁮‏‌⁮‎⁯⁫⁪⁬⁪‬‎⁬‫‮([In] IDbCommand obj0, [In] string obj1) => obj0.CommandText = obj1;

    static void \u202D‬‮⁪‌‍‎⁫⁯‬‌‎‌⁯‭‎⁬‫⁬⁫‮⁮⁯‫‭‬‏‬⁭‌‎⁬‬⁫‫⁬⁮‏‌‮([In] IDbCommand obj0, [In] CommandType obj1) => obj0.CommandType = obj1;

    static IDataParameterCollection \u206F‫‬‏⁫⁫‍‮‬⁯⁪‮‌‮‎‮‪⁫⁪⁭‍‭‭‫‬‍‫⁯⁪⁬‌⁫‫‫‬‎⁪⁫‍‮‮(
      [In] IDbCommand obj0)
    {
      return obj0.Parameters;
    }

    static int \u206A​‫⁪‮‎⁪⁮‎‪​⁬⁬⁬‭‬‌‌⁪⁪⁭‫⁪‏‬‬‮⁭‬⁮‪‌‮‭⁮‪‭⁯⁪‪‮([In] IList obj0, [In] object obj1) => obj0.Add(obj1);

    static int \u202C‬​⁯⁫‫‍‏⁭‬‮‌⁯‬⁫⁬⁯‮⁯‪‫​⁫​‎‫‭‬⁭‫⁭‬‫‏⁬‬‏‎‭‮‮([In] IDbCommand obj0) => obj0.ExecuteNonQuery();

    static void \u200E‪‏⁫‬⁮‬‪‎‭‎‮⁬⁪‫‏⁭⁬‭⁯‮‫⁪‪‎⁫⁭​⁬‭​‮‪‍‏⁮​‏⁫‮([In] IDisposable obj0) => obj0.Dispose();

    static object \u206F⁯​‮‬‏​⁮⁮‮​‮‌‪⁫‮⁪‭‎⁮⁭⁭‮‏‮​‭⁯‏‮‏⁯⁯⁭‫‏⁮‎‎⁭‮([In] IDbCommand obj0) => obj0.ExecuteScalar();

    static IDataReader \u200E‏⁫⁯‮‭‍‏‪⁪⁪⁪‮‪⁭‎‎⁮⁬‬​⁫⁮⁮‮⁫⁬⁮​⁯‫⁮⁪‬​‏‌‍⁭‭‮(
      [In] IDbCommand obj0,
      [In] CommandBehavior obj1)
    {
      return obj0.ExecuteReader(obj1);
    }

    static MemoryStream \u200B​⁭⁮‬⁭​‬‏‫‭⁬‍‪‫⁭⁭‎⁭⁯‮‭‬‫‎‫⁬⁮‬‏‪‬‫‭‬⁭‍⁪​‎‮() => new MemoryStream();

    static void \u202A‪‌‌‮⁭⁫⁪‭⁪​‌‏‎⁬‬‎⁯⁬‌⁫‏⁮⁪‫⁯⁬‍‮‫‎‫⁭‌‮⁭⁪‏‮⁮‮(
      [In] Stream obj0,
      [In] byte[] obj1,
      [In] int obj2,
      [In] int obj3)
    {
      obj0.Write(obj1, obj2, obj3);
    }

    static int \u202D‪‌⁪‬⁯‮‮‎‮⁮‍‎‍‫‌⁮⁮‪‎‍‮‏‎⁪‮‏⁯‍⁬‫⁫⁬⁫​⁭‮⁮‍⁭‮(
      [In] Stream obj0,
      [In] byte[] obj1,
      [In] int obj2,
      [In] int obj3)
    {
      return obj0.Read(obj1, obj2, obj3);
    }

    static byte[] \u200C‍‏⁯‏‬‬⁬‪⁫⁫‍‏‍⁫​‬⁮‌⁯‌‏‍​​⁪⁭‪‎⁯⁭‭‮‌⁯‏‮‮‫‮‮([In] MemoryStream obj0) => obj0.ToArray();

    static Type \u202E⁬⁬⁪‫‮⁬‍‫‍‪⁪‌‏‫‌⁬⁬‮⁪‬‫‪​‎‮‫⁬‎‬​‮‮⁫⁬‪⁭‬‪‪‮([In] object obj0) => obj0.GetType();

    static string \u200C‭‎⁯‎‫⁬⁮‬‮​⁪‮⁬​⁫‌⁪‎​‪​‍⁬‭⁯‏⁮⁮‪⁫⁯⁮⁭​⁫‫‌‫⁯‮([In] MemberInfo obj0) => obj0.Name;

    static ObjectDisposedException \u202C⁯⁫‏‌⁮⁬⁭‬⁭‏‎‫⁮‫⁯⁬‪⁪‌‮‌‌​‭‫‫‎⁬‮⁯‍‌⁮‮‮‌⁭⁪‮(
      [In] string obj0)
    {
      return new ObjectDisposedException(obj0);
    }

    static ArgumentNullException \u206B‭⁮‭⁫⁯⁬‮‫‎⁫‭‎‌‭⁯‎⁬‎‪⁪‮‎‍⁯‏⁮​⁭‎⁪‫‏‍‬⁫‫⁭​‭‮(
      [In] string obj0)
    {
      return new ArgumentNullException(obj0);
    }
  }
}
