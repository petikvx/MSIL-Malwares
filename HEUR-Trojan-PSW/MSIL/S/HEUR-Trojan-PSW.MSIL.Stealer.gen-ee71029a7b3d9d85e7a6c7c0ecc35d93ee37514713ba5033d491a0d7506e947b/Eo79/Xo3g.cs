// Decompiled with JetBrains decompiler
// Type: Eo79.Xo3g
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using m5F8;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Drawing.Printing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Windows.Forms;
using x4Q;
using x7X;
using z0R5;

namespace Eo79
{
  [DesignerGenerated]
  public class Xo3g : Form
  {
    private IContainer ႰႣ;
    [AccessedThroughProperty("Ⴄ")]
    private Label ႰႥ;
    [AccessedThroughProperty("Ⴐ")]
    private Label ႰႤ;
    [AccessedThroughProperty("Ⴈ")]
    private Label ႰႠ;
    [AccessedThroughProperty("Ⴓ")]
    private Button ႰႭ;
    [AccessedThroughProperty("Ⴗ")]
    private Button ႰႷ;
    [AccessedThroughProperty("Ⴀ")]
    private Label ႰႨ;
    [AccessedThroughProperty("Ⴍ")]
    private Label ႰႼ;
    [AccessedThroughProperty("Ⴜ")]
    private PrintDocument ႳႣ;
    [AccessedThroughProperty("ႥႣ")]
    private PrintPreviewDialog ႳႰ;
    private Gx7.Wd1 Ⴅ;

    public Xo3g()
    {
      this.Load += new EventHandler(this.k1QL);
      this.Shown += new EventHandler(this.p2CM);
      this.Ej84();
    }

    protected virtual void f1PD([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.ႰႣ == null)
          return;
        this.ႰႣ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void Ej84()
    {
      object obj = (object) new ComponentResourceManager(typeof (Xo3g));
      this.Ⴃ = new DateTimePicker();
      this.Ⴅ = new Label();
      this.Ⴄ = new Label();
      this.Ⴐ = new Label();
      this.Ⴈ = new Label();
      this.Ⴓ = new Button();
      this.Ⴗ = new Button();
      this.Ⴀ = new Label();
      this.Ⴍ = new Label();
      this.Ⴜ = new PrintDocument();
      this.ႥႣ = new PrintPreviewDialog();
      this.SuspendLayout();
      this.Ⴃ.Location = new Point(268, 114);
      this.Ⴃ.Name = "cboDate";
      this.Ⴃ.Size = new Size(311, 26);
      this.Ⴃ.TabIndex = 1;
      this.Ⴅ.AutoSize = true;
      this.Ⴅ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴅ.Location = new Point(256, 24);
      this.Ⴅ.Name = "Label9";
      this.Ⴅ.Size = new Size(172, 20);
      this.Ⴅ.TabIndex = 99;
      this.Ⴅ.Text = "Welcome, Manager !";
      this.Ⴄ.BackColor = SystemColors.ActiveCaption;
      this.Ⴄ.BorderStyle = BorderStyle.FixedSingle;
      this.Ⴄ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴄ.Location = new Point(454, 59);
      this.Ⴄ.Name = "lblHRname";
      this.Ⴄ.Size = new Size(125, 30);
      this.Ⴄ.TabIndex = 98;
      this.Ⴐ.BackColor = SystemColors.ActiveCaption;
      this.Ⴐ.BorderStyle = BorderStyle.FixedSingle;
      this.Ⴐ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴐ.Location = new Point(454, 23);
      this.Ⴐ.Name = "lblHRid";
      this.Ⴐ.Size = new Size(125, 30);
      this.Ⴐ.TabIndex = 97;
      this.Ⴈ.Font = new Font("Microsoft Sans Serif", 16f, FontStyle.Bold | FontStyle.Underline, GraphicsUnit.Point, (byte) 0);
      this.Ⴈ.Location = new Point(38, 39);
      this.Ⴈ.Name = "Label3";
      this.Ⴈ.Size = new Size(146, 44);
      this.Ⴈ.TabIndex = 96;
      this.Ⴈ.Text = "Report";
      this.Ⴓ.BackColor = Color.IndianRed;
      this.Ⴓ.Cursor = Cursors.Hand;
      this.Ⴓ.DialogResult = DialogResult.Cancel;
      this.Ⴓ.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴓ.ForeColor = SystemColors.ControlLightLight;
      this.Ⴓ.Location = new Point(442, 194);
      this.Ⴓ.Name = "btnCancel";
      this.Ⴓ.Size = new Size(137, 53);
      this.Ⴓ.TabIndex = 3;
      this.Ⴓ.Text = "&Cancel";
      this.Ⴓ.UseVisualStyleBackColor = false;
      this.Ⴗ.BackColor = Color.MediumSeaGreen;
      this.Ⴗ.Cursor = Cursors.Hand;
      this.Ⴗ.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴗ.ForeColor = SystemColors.ControlLightLight;
      this.Ⴗ.Location = new Point(268, 194);
      this.Ⴗ.Name = "btnPrint";
      this.Ⴗ.Size = new Size(146, 53);
      this.Ⴗ.TabIndex = 2;
      this.Ⴗ.Text = "&Print";
      this.Ⴗ.UseVisualStyleBackColor = false;
      this.Ⴀ.AutoSize = true;
      this.Ⴀ.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴀ.Location = new Point(40, 152);
      this.Ⴀ.Name = "Label2";
      this.Ⴀ.Size = new Size(191, 25);
      this.Ⴀ.TabIndex = 94;
      this.Ⴀ.Text = "To generate report";
      this.Ⴍ.AutoSize = true;
      this.Ⴍ.Font = new Font("Microsoft Sans Serif", 10f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴍ.Location = new Point(40, 114);
      this.Ⴍ.Name = "Label1";
      this.Ⴍ.Size = new Size(144, 25);
      this.Ⴍ.TabIndex = 91;
      this.Ⴍ.Text = "Pick A Date : ";
      this.ႥႣ.AutoScrollMargin = new Size(0, 0);
      this.ႥႣ.AutoScrollMinSize = new Size(0, 0);
      this.ႥႣ.ClientSize = new Size(400, 300);
      this.ႥႣ.Enabled = true;
      this.ႥႣ.Icon = (Icon) (obj as ComponentResourceManager).GetObject("dlgPreview.Icon");
      this.ႥႣ.Name = "dlgPreview";
      this.ႥႣ.Visible = false;
      this.AcceptButton = (IButtonControl) this.Ⴗ;
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = Color.LightSteelBlue;
      this.CancelButton = (IButtonControl) this.Ⴓ;
      this.ClientSize = new Size(646, 291);
      this.Controls.Add((Control) this.Ⴃ);
      this.Controls.Add((Control) this.Ⴅ);
      this.Controls.Add((Control) this.Ⴄ);
      this.Controls.Add((Control) this.Ⴐ);
      this.Controls.Add((Control) this.Ⴈ);
      this.Controls.Add((Control) this.Ⴓ);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴀ);
      this.Controls.Add((Control) this.Ⴍ);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = "ႳႣ";
      this.Text = "PrintReportMan";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual DateTimePicker Ⴃ
    {
      get => this.Ⴅ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴅ.Ⴈ = (object) value as DateTimePicker;
    }

    internal virtual Label Ⴅ
    {
      get => this.Ⴅ.Ⴍ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴅ.Ⴍ = value;
    }

    internal virtual Label Ⴄ
    {
      get => this.ႰႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႰႥ = value;
    }

    internal virtual Label Ⴐ
    {
      get => this.ႰႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႰႤ = value;
    }

    internal virtual Label Ⴈ
    {
      get => this.ႰႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႰႠ = value;
    }

    internal virtual Button Ⴓ
    {
      get => this.ႰႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Sf6g);
        ButtonBase ⴐⴍ1 = (ButtonBase) this.ႰႭ;
        if ((Button) ⴐⴍ1 != null)
          (ⴐⴍ1 as Button).Click -= (EventHandler) obj;
        this.ႰႭ = value;
        ButtonBase ⴐⴍ2 = (ButtonBase) this.ႰႭ;
        if ((Button) ⴐⴍ2 == null)
          return;
        (ⴐⴍ2 as Button).Click += obj as EventHandler;
      }
    }

    internal virtual Button Ⴗ
    {
      get => this.ႰႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Ed17);
        IButtonControl ⴐⴗ1 = (IButtonControl) this.ႰႷ;
        if (ⴐⴗ1 is Button)
          ((Control) ⴐⴗ1).Click -= obj as EventHandler;
        this.ႰႷ = value;
        IButtonControl ⴐⴗ2 = (IButtonControl) this.ႰႷ;
        if ((Button) ⴐⴗ2 == null)
          return;
        ((Control) ⴐⴗ2).Click += obj as EventHandler;
      }
    }

    internal virtual Label Ⴀ
    {
      get => this.ႰႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႰႨ = value;
    }

    internal virtual Label Ⴍ
    {
      get => this.ႰႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႰႼ = value;
    }

    internal virtual PrintDocument Ⴜ
    {
      get => this.ႳႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new PrintPageEventHandler(this.Ts1q);
        Component ⴓⴃ1 = (Component) this.ႳႣ;
        if (ⴓⴃ1 is PrintDocument)
          ((PrintDocument) ⴓⴃ1).PrintPage -= multicastDelegate as PrintPageEventHandler;
        this.ႳႣ = value;
        Component ⴓⴃ2 = (Component) this.ႳႣ;
        if ((PrintDocument) ⴓⴃ2 == null)
          return;
        (ⴓⴃ2 as PrintDocument).PrintPage += multicastDelegate as PrintPageEventHandler;
      }
    }

    internal virtual PrintPreviewDialog ႥႣ
    {
      get => this.ႳႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႰ = value;
    }

    private void Ts1q([In] object obj0, [In] PrintPageEventArgs obj1)
    {
      IConvertible convertible = (IConvertible) this.Ⴃ.Value.ToString("dd/MM/yyyy");
      DataContext dataContext = (DataContext) new Tt1();
      IDisposable disposable = (IDisposable) new Font("Calibri", 24f, FontStyle.Bold);
      MarshalByRefObject marshalByRefObject = (MarshalByRefObject) new Font("Calibri", 14f, FontStyle.Bold);
      object obj = (object) new Font("Consolas", 10f, FontStyle.Bold);
      IComparable s1 = (IComparable) "\r\nStaff Personal Details";
      object s2 = (object) string.Format("\r\n\r\n\r\nPrinted on {0:dd-MMMM-yyyy hh:mm:ss tt}\r\nPrepared by \r\nManager ID : " + Ec63.Ⴅ + "    Manager Name : " + Ec63.Ⴀ + "\r\nManager from HR Department.", (object) DateTime.Now);
      ISerializable serializable = (ISerializable) new StringBuilder();
      (serializable as StringBuilder).AppendLine("\r\n");
      (serializable as StringBuilder).AppendLine("\r\n");
      (serializable as StringBuilder).AppendLine("\r\n");
      (serializable as StringBuilder).AppendLine("\r\n");
      (serializable as StringBuilder).AppendLine(" No      Staff ID |  Staff Name  | Department  | Joined Date  |  IC-Number    |   Gender  |  Phone");
      ((StringBuilder) serializable).AppendLine(" ----------------------------------------------------------------------------------------------------------");
      int num = 0;
      object enumerator;
      try
      {
        enumerator = (object) (dataContext as Tt1).Ⴃ.GetEnumerator();
        while (((IEnumerator) enumerator).MoveNext())
        {
          INotifyPropertyChanging current = (INotifyPropertyChanging) ((IEnumerator<Af03>) enumerator).Current;
          DateTime ⴈ = (current as Af03).Ⴈ;
          string shortDateString1 = ⴈ.ToShortDateString();
          ⴈ = this.Ⴃ.Value;
          string shortDateString2 = ⴈ.ToShortDateString();
          if (Operators.CompareString(shortDateString1, shortDateString2, false) == 0)
          {
            checked { ++num; }
            StringBuilder stringBuilder = (StringBuilder) serializable;
            object[] objArray = new object[8]
            {
              (object) num,
              (object) (current as Af03).Ⴐ,
              (object) (current as Af03).Ⴃ,
              (object) (current as Af03).ႠႰ,
              null,
              null,
              null,
              null
            };
            ⴈ = (current as Af03).Ⴈ;
            objArray[4] = (object) ⴈ.ToShortDateString();
            objArray[5] = (object) ((Af03) current).Ⴗ;
            objArray[6] = (object) (current as Af03).Ⴅ;
            objArray[7] = (object) ((Af03) current).Ⴍ;
            stringBuilder.AppendFormat("{0,2}       {1,6}      {2,6}       {3,6}    {4,6}     {5,6}     {6,6}   {7,6}\r\n", objArray);
          }
        }
      }
      finally
      {
        if ((IEnumerator<Af03>) enumerator != null)
          (enumerator as IEnumerator<Af03>).Dispose();
      }
      ((StringBuilder) serializable).AppendLine();
      (serializable as StringBuilder).AppendFormat("{0,2} record(s)", (object) num);
      IDisposable graphics = (IDisposable) obj1.Graphics;
      (graphics as Graphics).DrawString(s1 as string, disposable as Font, Brushes.Purple, 100f, 0.0f);
      ((Graphics) graphics).DrawString((string) s2, marshalByRefObject as Font, Brushes.Black, 100f, 40f);
      (graphics as Graphics).DrawString(((StringBuilder) serializable).ToString(), obj as Font, Brushes.Black, 0.0f, 120f);
    }

    private void Ed17([In] object obj0, [In] EventArgs obj1)
    {
      DateTime now = this.Ⴃ.Value;
      string shortDateString1 = now.ToShortDateString();
      now = DateTime.Now;
      string shortDateString2 = now.ToShortDateString();
      if (Operators.CompareString(shortDateString1, shortDateString2, false) <= 0)
      {
        object obj = (object) new Tt1();
        int num1 = 0;
        object enumerator;
        try
        {
          enumerator = (object) (obj as Tt1).Ⴃ.GetEnumerator();
          while ((enumerator as IEnumerator<Af03>).MoveNext())
          {
            if (Operators.CompareString(((INotifyPropertyChanging) (enumerator as IEnumerator<Af03>).Current as Af03).Ⴈ.ToShortDateString(), this.Ⴃ.Value.ToShortDateString(), false) == 0)
              checked { ++num1; }
          }
        }
        finally
        {
          if ((IEnumerator<Af03>) enumerator != null)
            (enumerator as IEnumerator<Af03>).Dispose();
        }
        if (num1 > 1)
        {
          this.ႥႣ.Document = this.Ⴜ;
          int num2 = (int) this.ႥႣ.ShowDialog((IWin32Window) this);
        }
        else
        {
          int num3 = (int) MessageBox.Show("No Record Found !", "No Record Found", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
        }
      }
      else
      {
        int num = (int) MessageBox.Show("Selected Date must earlier than the system current date !", "Invalid Selected Date", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
    }

    private void Sf6g([In] object obj0, [In] EventArgs obj1) => En6.Ⴈ.Ⴈ.m5E6((Form) En6.Ⴈ.Ⴀ);

    private void k1QL([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴄ.Text = Ec63.Ⴀ;
      this.Ⴐ.Text = Ec63.Ⴅ;
      this.Ⴃ.MaxDate = DateTime.Now;
      En6.Ⴈ.Ⴈ.Text = "Human Resource Management System (Manager)- Print report employee details";
    }

    private void p2CM([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴄ.Text = Ec63.Ⴀ;
      this.Ⴐ.Text = Ec63.Ⴅ;
      this.Ⴃ.MaxDate = DateTime.Now;
    }
  }
}
