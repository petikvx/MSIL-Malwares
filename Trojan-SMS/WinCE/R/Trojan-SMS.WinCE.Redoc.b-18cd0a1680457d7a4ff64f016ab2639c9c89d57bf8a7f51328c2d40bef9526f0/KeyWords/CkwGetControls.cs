// Decompiled with JetBrains decompiler
// Type: Dbasic.KeyWords.CkwGetControls
// Assembly: B4Pruntime, Version=1.0.3056.20520, Culture=neutral, PublicKeyToken=null
// MVID: BED81B59-7EDE-4B04-983E-56C0010CF881
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan-SMS.WinCE.Redoc.b-18cd0a1680457d7a4ff64f016ab2639c9c89d57bf8a7f51328c2d40bef9526f0.exe

using System;
using System.Windows.Forms;

namespace Dbasic.KeyWords
{
  public class CkwGetControls : CkeyWords
  {
    public CkwGetControls(CRunner CRunner)
      : base(CRunner)
    {
    }

    public override MethodReturn Method(Place place, ref Locals locals)
    {
      ++place.WordI;
      RunReturn runReturn = this.CRunner.RunCode(place, true, true, ref locals);
      place = runReturn.place;
      ++place.WordI;
      string[] strArray = (string[]) null;
      if (runReturn.vString == "")
      {
        strArray = new string[this.CRunner.htControls.Count];
        this.CRunner.htControls.Keys.CopyTo((Array) strArray, 0);
      }
      else
      {
        WrapControl htControl = (WrapControl) this.CRunner.htControls[(object) runReturn.vString.ToLower(CRunner.cul)];
        if (htControl.control is Control)
        {
          Control control1 = (Control) htControl.control;
          strArray = new string[control1.Controls.Count];
          int num = 0;
          foreach (Control control2 in control1.Controls)
          {
            if (control2 is IEnhancedControl)
              strArray[num++] = ((IEnhancedControl) control2).propName;
          }
        }
        else if (htControl.control is Menu)
        {
          Menu control = (Menu) htControl.control;
          strArray = new string[control.MenuItems.Count];
          int num = 0;
          foreach (object menuItem in control.MenuItems)
          {
            if (menuItem is IEnhancedControl)
              strArray[num++] = ((IEnhancedControl) menuItem).propName;
          }
        }
      }
      this.CRunner.returnObject = (object) strArray;
      return new MethodReturn(place, "", 0.0);
    }
  }
}
