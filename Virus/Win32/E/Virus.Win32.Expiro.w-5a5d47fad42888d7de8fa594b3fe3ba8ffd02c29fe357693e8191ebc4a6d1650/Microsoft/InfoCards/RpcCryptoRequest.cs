// Decompiled with JetBrains decompiler
// Type: Microsoft.InfoCards.RpcCryptoRequest
// Assembly: infocard, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: ADE0A079-11DB-4A46-8BDE-D2A592CA8DEA
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Virus.Win32.Expiro.w-5a5d47fad42888d7de8fa594b3fe3ba8ffd02c29fe357693e8191ebc4a6d1650.exe

using Microsoft.InfoCards.Diagnostics;
using System;
using System.ComponentModel;
using System.IO;

namespace Microsoft.InfoCards
{
  internal abstract class RpcCryptoRequest
  {
    private RpcCryptoContext m_context;

    protected RpcCryptoRequest(RpcCryptoContext context) => this.m_context = context;

    public abstract string Name { get; }

    public void Process()
    {
      MemoryStream memoryStream = new MemoryStream();
      this.MarshalOutArgs((Stream) memoryStream);
      byte[] buffer1 = memoryStream.GetBuffer();
      byte[] buffer2;
      try
      {
        buffer2 = NativeMcppMethods.RpcCryptoDispatchRequest(this.m_context.InterfaceHandle, this.m_context.ContextKey, this.Name, buffer1, 0, Convert.ToInt32(memoryStream.Length));
      }
      catch (Win32Exception ex)
      {
        if (ex.NativeErrorCode == -2146434962)
          throw InfoCardTrace.ThrowHelperError((Exception) new UserCancelledException((string) null, (Exception) ex));
        throw InfoCardTrace.ThrowHelperError((Exception) new CommunicationException((string) null, (Exception) ex));
      }
      this.MarshalReturnArgs((Stream) new MemoryStream(buffer2));
    }

    protected abstract void MarshalOutArgs(Stream stream);

    protected abstract void MarshalReturnArgs(Stream stream);
  }
}
