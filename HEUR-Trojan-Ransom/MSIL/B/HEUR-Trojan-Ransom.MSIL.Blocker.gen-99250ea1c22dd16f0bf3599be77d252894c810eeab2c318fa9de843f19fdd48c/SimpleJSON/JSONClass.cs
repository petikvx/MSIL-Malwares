// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: IClientChannelSinkSta, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: C2D4B9C8-45F5-4E7C-86BD-063D9CE5A365
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-99250ea1c22dd16f0bf3599be77d252894c810eeab2c318fa9de843f19fdd48c.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1930473135;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -823479665)) % 7U)
          {
            case 0:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -856292146 ^ -1953657456;
              continue;
            case 2:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -314730133 ^ 498829629;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 1574944407 ^ -2092547050;
              continue;
            case 5:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -1528826947;
              continue;
            case 6:
              int num3 = flag ? 724338947 : (num3 = 877218378);
              num1 = num3 ^ (int) num2 * 592834795;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1107301852;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -113159453)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              this.m_Dict.Add(aKey, value);
              num1 = -1758739275;
              continue;
            case 2:
              num1 = (int) num2 * -1615147122 ^ -1305099399;
              continue;
            case 3:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -1422748147 ^ 788121706;
              continue;
            case 4:
              goto label_3;
            case 5:
              int num3 = this.m_Dict.ContainsKey(aKey) ? 1915680076 : (num3 = 600564532);
              num1 = num3 ^ (int) num2 * 1637765492;
              continue;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 921543207;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1885724975)) % 9U)
          {
            case 0:
              int num4 = !flag ? -815597327 : (num4 = -1091391416);
              num1 = num4 ^ (int) num2 * -310873516;
              continue;
            case 1:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 2:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1587972481 ^ -86926793;
              continue;
            case 3:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -83801792 ^ 940065123;
              continue;
            case 4:
              num1 = (int) num2 * 2085920194 ^ -511695916;
              continue;
            case 5:
              jsonNode = (JSONNode) null;
              num1 = 1249123588;
              continue;
            case 6:
              goto label_1;
            case 7:
              num1 = (int) num2 * -1503773988 ^ 1881982994;
              continue;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = 778988696;
        }
label_13:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 864373111;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1312096838)) % 6U)
          {
            case 0:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 1:
              int num4 = !flag ? 707009304 : (num4 = 1808546879);
              num1 = num4 ^ (int) num2 * 765690346;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1217029847 ^ -1177124633;
              continue;
            case 4:
              goto label_3;
            case 5:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 925560614 ^ 453536320;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = 127879309;
        }
label_3:
        return;
label_11:;
      }
    }

    public override int Count
    {
      get
      {
        int count = this.m_Dict.Count;
label_1:
        int num1 = 72769328;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 898136644)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 663094154 ^ -1515809884;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 140614548;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 894314327)) % 13U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = 543339875;
            continue;
          case 2:
            num1 = (int) num2 * 215882029 ^ 387502520;
            continue;
          case 3:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 1943935212;
            continue;
          case 4:
            num1 = (int) num2 * -139799372 ^ 1728367385;
            continue;
          case 5:
            this.m_Dict.Add(aKey, aItem);
            num1 = 1597762940;
            continue;
          case 6:
            int num3 = this.m_Dict.ContainsKey(aKey) ? -464893918 : (num3 = -2137396777);
            num1 = num3 ^ (int) num2 * 1552051708;
            continue;
          case 7:
            goto label_1;
          case 8:
            num1 = (int) num2 * -386492445 ^ 1263451498;
            continue;
          case 9:
            int num4 = !JSONClass.\u206C‪‬‍‮‮⁭‬‫⁬‮‮‏​‍‫‍‮⁪‬⁫‪‬⁯⁬​⁪‮⁮‪⁪⁬‬⁮‍⁭‎‬⁭‎‮(aKey) ? 1379616858 : (num4 = 829622495);
            num1 = num4 ^ (int) num2 * -482381624;
            continue;
          case 10:
            num1 = (int) num2 * -1864020099 ^ 1147003781;
            continue;
          case 11:
            num1 = (int) num2 * 1486839713 ^ -1612035057;
            continue;
          case 12:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -1440258846 ^ -249709779;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    public override JSONNode Remove(string aKey)
    {
      bool flag = !this.m_Dict.ContainsKey(aKey);
label_1:
      int num1 = -2046841054;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -459205262)) % 7U)
        {
          case 1:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 541238700 ^ 949609308;
            continue;
          case 2:
            num1 = (int) num2 * 1363068566 ^ -1165196888;
            continue;
          case 3:
            int num3 = flag ? -621766244 : (num3 = -1900737069);
            num1 = num3 ^ (int) num2 * -1378201595;
            continue;
          case 4:
            JSONNode jsonNode2 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            jsonNode1 = jsonNode2;
            num1 = -212101189;
            continue;
          case 5:
            num1 = (int) num2 * -1938336499 ^ -2110586343;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1490332869;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 763160070)) % 7U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = 2024387045;
            continue;
          case 3:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -300734340 ^ -208785624;
            continue;
          case 4:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          case 5:
            num1 = (int) num2 * -2043014053 ^ 1606956831;
            continue;
          case 6:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * -839408565 ^ -392151861;
            continue;
          default:
            goto label_11;
        }
        int num4;
        num1 = num4 = num3 != 0 ? 1121163070 : (num4 = 298664677);
      }
label_11:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      try
      {
        return (JSONNode) null;
      }
      catch
      {
        return (JSONNode) null;
      }
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONClass.\u003Cget_Childs\u003Ed__14(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = 390737373;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 18908839)) % 3U)
        {
          case 1:
            str1 = "{";
            num1 = (int) num2 * -976436935 ^ -1275893922;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_11:
        int num3 = enumerator.MoveNext() ? 1295514206 : (num3 = 378385630);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 18908839)) % 9U)
          {
            case 0:
              num3 = 1295514206;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = 2055917613;
              continue;
            case 2:
              int num5 = JSONClass.\u206D‬‪‮⁭⁬‫‭⁫⁭‏‏‏‎‏⁮‮‮‬⁪‏​​‎⁭⁪⁭‌‪⁪‌⁫⁮⁮⁪⁯⁯​⁮‭‮(str1) <= 2 ? 920760492 : (num5 = 1624312300);
              num3 = num5 ^ (int) num4 * -56417127;
              continue;
            case 3:
              str1 = JSONClass.\u200F⁬⁫⁫⁮‌‬⁬⁪​⁯‪⁭⁭‫⁬⁭​‍‍⁯‍‫⁪‍‮‭‭⁯‏‪⁬‭‌⁮‭⁬⁪‭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206A⁬‪‭‪‪‮⁬​⁭‍⁪⁮‎⁪⁯⁭⁫‌‎‍‪‏‪⁫‫‭‪⁬‫‏‏‍⁫‍⁫‪⁬⁯‭‮((object) current.Value)
              });
              num3 = 1270893562;
              continue;
            case 4:
              num3 = (int) num4 * -1551165917 ^ 1919289788;
              continue;
            case 5:
              str1 = JSONClass.\u200D​⁫⁯‎‮‬⁯‪‫⁭‌⁭‌⁭‭​​⁪‎⁮‌‍‏⁬‬‪‏⁭‫⁪‭⁪⁭‬⁪​‫⁪⁮‮(str1, ", ");
              num3 = (int) num4 * -2051928815 ^ -138298041;
              continue;
            case 6:
              goto label_11;
            case 8:
              num3 = (int) num4 * -1120806432 ^ 1202793127;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u200D​⁫⁯‎‮‬⁯‪‫⁭‌⁭‌⁭‭​​⁪‎⁮‌‍‏⁬‬‪‏⁭‫⁪‭⁪⁭‬⁪​‫⁪⁮‮(str1, "}");
label_17:
      int num6 = 372043078;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 18908839)) % 3U)
        {
          case 0:
            goto label_17;
          case 1:
            num6 = (int) num7 * -1905049342 ^ -301838812;
            continue;
          default:
            goto label_20;
        }
      }
label_20:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
label_1:
      int num1 = 941638279;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1851572213)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -742005556 ^ 126711970;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_9:
        int num3 = enumerator.MoveNext() ? 1885036315 : (num3 = 1696978199);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1851572213)) % 11U)
          {
            case 0:
              str1 = JSONClass.\u200F⁬⁫⁫⁮‌‬⁬⁪​⁯‪⁭⁭‫⁬⁭​‍‍⁯‍‫⁪‍‮‭‭⁯‏‪⁬‭‌⁮‭⁬⁪‭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u200D​⁫⁯‎‮‬⁯‪‫⁭‌⁭‌⁭‭​​⁪‎⁮‌‍‏⁬‬‪‏⁭‫⁪‭⁪⁭‬⁪​‫⁪⁮‮(aPrefix, "   "))
              });
              num3 = (int) num4 * -439608103 ^ 698617693;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = 667797434;
              continue;
            case 2:
              num3 = (int) num4 * -249236874 ^ -2042007239;
              continue;
            case 3:
              flag = JSONClass.\u206D‬‪‮⁭⁬‫‭⁫⁭‏‏‏‎‏⁮‮‮‬⁪‏​​‎⁭⁪⁭‌‪⁪‌⁫⁮⁮⁪⁯⁯​⁮‭‮(str1) > 3;
              num3 = (int) num4 * 1485088863 ^ -436056495;
              continue;
            case 4:
              int num5 = flag ? -750684479 : (num5 = -265744955);
              num3 = num5 ^ (int) num4 * 110745961;
              continue;
            case 6:
              str1 = JSONClass.\u206A‪‪‌⁫‍‫⁯‏‍⁮‍⁮⁭‪‮​⁯⁮‬‫‎‌‭⁮‫‏​‬⁯‮⁬⁫⁪⁮⁭‏⁪‭⁫‮(str1, "\n", aPrefix, "   ");
              num3 = 1970932574;
              continue;
            case 7:
              str1 = JSONClass.\u200D​⁫⁯‎‮‬⁯‪‫⁭‌⁭‌⁭‭​​⁪‎⁮‌‍‏⁬‬‪‏⁭‫⁪‭⁪⁭‬⁪​‫⁪⁮‮(str1, ", ");
              num3 = (int) num4 * -1227817550 ^ 700619279;
              continue;
            case 8:
              num3 = (int) num4 * 1084507198 ^ 1112342209;
              continue;
            case 9:
              num3 = 1885036315;
              continue;
            case 10:
              goto label_9;
            default:
              goto label_18;
          }
        }
      }
label_18:
      string str2 = JSONClass.\u206A‪‪‌⁫‍‫⁯‏‍⁮‍⁮⁭‪‮​⁯⁮‬‫‎‌‭⁮‫‏​‬⁯‮⁬⁫⁪⁮⁭‏⁪‭⁫‮(str1, "\n", aPrefix, "}");
label_19:
      int num6 = 1609916506;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1851572213)) % 3U)
        {
          case 0:
            goto label_19;
          case 1:
            num6 = (int) num7 * -1577508485 ^ 1567478265;
            continue;
          default:
            goto label_22;
        }
      }
label_22:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u206B⁯‌⁮⁯‫‭⁯‬⁭‏⁮⁬‪‌⁫‍‌⁯⁫‮⁯⁬‎‬‎​⁬⁫‮​‌‪‍⁬‌‏‮‭‏‮(aWriter, (byte) 2);
label_1:
      int num1 = -47263705;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -302351800)) % 6U)
        {
          case 0:
            JSONClass.\u206F​‪‍⁫⁪‍⁭‬⁮‎⁬‌‪‮⁯‭‍‬‪⁬⁭⁬‎⁭‮‫⁫‫‬‬‏‍⁫⁭‫‫‫⁫‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -1979351207 ^ 1187881935;
            continue;
          case 1:
            num1 = (int) num2 * 678541710 ^ 1446076074;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 88451935 ^ 649354508;
            continue;
          case 5:
            num1 = (int) num2 * -1051868957 ^ -242532483;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_14:
        int num3 = !enumerator.MoveNext() ? -1425271582 : (num3 = -638570917);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -302351800)) % 8U)
          {
            case 0:
              num3 = (int) num4 * 1679385436 ^ 1740254197;
              continue;
            case 1:
              JSONClass.\u206C⁪‍‫‌‎⁫‭‎‌⁭⁬⁬⁭‮‫‏‮‪⁭⁮‌⁬‍⁪‭‎‎‭⁫‏‍⁮‍⁬‪‮‍​‍‮(aWriter, current);
              num3 = (int) num4 * 401660586 ^ -1473694819;
              continue;
            case 2:
              goto label_18;
            case 3:
              current = enumerator.Current;
              num3 = -556082599;
              continue;
            case 4:
              goto label_14;
            case 5:
              num3 = (int) num4 * -148367761 ^ 1133997655;
              continue;
            case 6:
              num3 = -638570917;
              continue;
            case 7:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 685186783 ^ -1509066319;
              continue;
            default:
              goto label_11;
          }
        }
label_18:
        return;
label_11:;
      }
    }

    static bool \u206C‪‬‍‮‮⁭‬‫⁬‮‮‏​‍‫‍‮⁪‬⁫‪‬⁯⁬​⁪‮⁮‪⁪⁬‬⁮‍⁭‎‬⁭‎‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u206D‬‪‮⁭⁬‫‭⁫⁭‏‏‏‎‏⁮‮‮‬⁪‏​​‎⁭⁪⁭‌‪⁪‌⁫⁮⁮⁪⁯⁯​⁮‭‮([In] string obj0) => obj0.Length;

    static string \u200D​⁫⁯‎‮‬⁯‪‫⁭‌⁭‌⁭‭​​⁪‎⁮‌‍‏⁬‬‪‏⁭‫⁪‭⁪⁭‬⁪​‫⁪⁮‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206A⁬‪‭‪‪‮⁬​⁭‍⁪⁮‎⁪⁯⁭⁫‌‎‍‪‏‪⁫‫‭‪⁬‫‏‏‍⁫‍⁫‪⁬⁯‭‮([In] object obj0) => obj0.ToString();

    static string \u200F⁬⁫⁫⁮‌‬⁬⁪​⁯‪⁭⁭‫⁬⁭​‍‍⁯‍‫⁪‍‮‭‭⁯‏‪⁬‭‌⁮‭⁬⁪‭‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206A‪‪‌⁫‍‫⁯‏‍⁮‍⁮⁭‪‮​⁯⁮‬‫‎‌‭⁮‫‏​‬⁯‮⁬⁫⁪⁮⁭‏⁪‭⁫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206B⁯‌⁮⁯‫‭⁯‬⁭‏⁮⁬‪‌⁫‍‌⁯⁫‮⁯⁬‎‬‎​⁬⁫‮​‌‪‍⁬‌‏‮‭‏‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206F​‪‍⁫⁪‍⁭‬⁮‎⁬‌‪‮⁯‭‍‬‪⁬⁭⁬‎⁭‮‫⁫‫‬‬‏‍⁫⁭‫‫‫⁫‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206C⁪‍‫‌‎⁫‭‎‌⁭⁬⁬⁭‮‫‏‮‪⁭⁮‌⁬‍⁪‭‎‎‭⁫‏‍⁮‍⁬‪‮‍​‍‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
