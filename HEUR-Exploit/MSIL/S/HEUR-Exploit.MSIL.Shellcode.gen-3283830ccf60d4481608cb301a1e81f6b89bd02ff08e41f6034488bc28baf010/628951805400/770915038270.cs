// Decompiled with JetBrains decompiler
// Type: 628951805400.770915038270
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003208825527781;
using \u003293721351544;
using \u003628951805400;
using \u003896877406398;
using System;
using System.Globalization;

namespace \u003628951805400
{
  internal static class \u003770915038270
  {
    public static bool \u003297792522854(object _param0, object _param1)
    {
      if (_param0 == _param1)
        return true;
      if (_param0 == null || _param1 == null)
        return false;
      if (!(_param0.GetType() != _param1.GetType()))
        return _param0.Equals(_param1);
      if (\u003594264013390.\u003940287128905(_param0) && \u003594264013390.\u003940287128905(_param1))
        return Convert.ToDecimal(_param0, (IFormatProvider) CultureInfo.CurrentCulture).Equals(Convert.ToDecimal(_param1, (IFormatProvider) CultureInfo.CurrentCulture));
      switch (_param0)
      {
        case double _:
        case float _:
        case Decimal _:
          switch (_param1)
          {
            case double _:
            case float _:
            case Decimal _:
              return \u003243965671827.\u003351503931732(Convert.ToDouble(_param0, (IFormatProvider) CultureInfo.CurrentCulture), Convert.ToDouble(_param1, (IFormatProvider) CultureInfo.CurrentCulture));
          }
          break;
      }
      return false;
    }

    public static ArgumentOutOfRangeException \u003669207498834(
      string _param0,
      object _param1,
      string _param2)
    {
      string message = _param2 + Environment.NewLine + "Actual value was {0}.".\u003212424921759((IFormatProvider) CultureInfo.InvariantCulture, _param1);
      return new ArgumentOutOfRangeException(_param0, message);
    }

    public static string \u003350266972058(object _param0)
    {
      if (_param0 == null)
        return "{null}";
      return !(_param0 is string) ? _param0.ToString() : "\"" + _param0.ToString() + "\"";
    }

    public static int \u003157909715955(byte[] _param0, byte[] _param1)
    {
      int num1 = _param0.Length.CompareTo(_param1.Length);
      if (num1 != 0)
        return num1;
      for (int index = 0; index < _param0.Length; ++index)
      {
        int num2 = _param0[index].CompareTo(_param1[index]);
        if (num2 != 0)
          return num2;
      }
      return 0;
    }

    public static string \u003303083996950(string _param0)
    {
      string str;
      \u003770915038270.\u003284910999034(_param0, out str, out string _);
      return str;
    }

    public static string \u003686514372693(string _param0)
    {
      string str;
      \u003770915038270.\u003284910999034(_param0, out string _, out str);
      return str;
    }

    public static void \u003284910999034(string _param0, out string _param1, out string _param2)
    {
      int length = _param0.IndexOf(':');
      switch (length)
      {
        case -1:
        case 0:
          _param1 = (string) null;
          _param2 = _param0;
          break;
        default:
          if (_param0.Length - 1 != length)
          {
            _param1 = _param0.Substring(0, length);
            _param2 = _param0.Substring(length + 1);
            break;
          }
          goto case -1;
      }
    }

    internal static string \u003306028047477(object _param0)
    {
      if (_param0 == null)
        return "{null}";
      return _param0 is string ? "\"" + _param0 + "\"" : _param0.ToString();
    }
  }
}
