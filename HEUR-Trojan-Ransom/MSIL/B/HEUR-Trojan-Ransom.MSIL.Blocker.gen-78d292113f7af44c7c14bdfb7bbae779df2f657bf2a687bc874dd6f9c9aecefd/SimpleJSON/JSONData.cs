// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: CustomA, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 1ABC0B0F-8965-48BE-A39F-300B4A85D17D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-78d292113f7af44c7c14bdfb7bbae779df2f657bf2a687bc874dd6f9c9aecefd.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
label_1:
        int num1 = -1726481103;
        string data;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -496842600)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1747521356 ^ -244937482;
              continue;
            case 1:
              data = this.m_Data;
              num1 = (int) num2 * 2124200954 ^ -1176968598;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData) => this.m_Data = aData;

    public JSONData(float aData) => this.AsFloat = aData;

    public JSONData(double aData)
    {
label_1:
      int num1 = 145535642;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 770355543)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -149475477 ^ -784217050;
            continue;
          case 2:
            this.AsDouble = aData;
            num1 = (int) num2 * 1414943700 ^ 1569958300;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONData(bool aData)
    {
label_1:
      int num1 = -1196078591;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1643598850)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            this.AsBool = aData;
            num1 = (int) num2 * 655130283 ^ -1252004483;
            continue;
          case 2:
            num1 = (int) num2 * 35426198 ^ -63013011;
            continue;
          case 3:
            goto label_3;
          case 4:
            num1 = (int) num2 * -1884200549 ^ -373416902;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString()
    {
      string str = JSONData.\u202C⁬⁭⁯‪‏‬⁯‏‌‪‏‍‫‫‭‍‪⁬‎‮⁪‪‍‍‫‏⁮⁮⁫⁫‌⁮‍‮​⁭⁪‏‏‮("\"", JSONNode.Escape(this.m_Data), "\"");
label_1:
      int num1 = 512840314;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 228142819)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1969041526 ^ -534956713;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 312992743;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1552858350)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = JSONData.\u202C⁬⁭⁯‪‏‬⁯‏‌‪‏‍‫‫‭‍‪⁬‎‮⁪‪‍‍‫‏⁮⁮⁫⁫‌⁮‍‮​⁭⁪‏‏‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * 1857593702 ^ 328517046;
            continue;
          case 2:
            num1 = (int) num2 * -1138043227 ^ -1983842893;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONData jsonData = new JSONData("");
      jsonData.AsInt = this.AsInt;
label_1:
      int num1 = 1341842512;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 394536513)) % 29U)
        {
          case 0:
            num1 = (int) num2 * -1682279832 ^ -1025410733;
            continue;
          case 1:
            num1 = (int) num2 * -1716962375 ^ 1033414812;
            continue;
          case 2:
            jsonData.AsDouble = this.AsDouble;
            num1 = 645400823;
            continue;
          case 3:
            int num3 = JSONData.\u200B‎‏⁪‏‍⁮‌‬‫​⁫‌​⁬‏⁮⁯‬⁪⁬‬‪⁮⁬‎⁫⁮⁮‎⁪⁪⁫⁭‮‫‪‮‬‮‮(jsonData.m_Data, this.m_Data) ? 2063509126 : (num3 = 850875277);
            num1 = num3 ^ (int) num2 * 1836267581;
            continue;
          case 4:
            JSONData.\u206E‭‪⁫⁮‎‭‮​​‮‍‮‭‮⁭‪⁯⁯⁬⁬⁬‏‍​⁭⁬‌⁪‪‭⁪⁯⁮‎‫⁬‭‏⁫‮(aWriter, this.m_Data);
            num1 = (int) num2 * -1534844704 ^ -2112006220;
            continue;
          case 5:
            num1 = (int) num2 * 590204126 ^ -1245236315;
            continue;
          case 6:
            num1 = (int) num2 * -1015770910 ^ 769149208;
            continue;
          case 7:
            num1 = (int) num2 * 1991688054 ^ -321578707;
            continue;
          case 8:
            int num4 = JSONData.\u200B‎‏⁪‏‍⁮‌‬‫​⁫‌​⁬‏⁮⁯‬⁪⁬‬‪⁮⁬‎⁫⁮⁮‎⁪⁪⁫⁭‮‫‪‮‬‮‮(jsonData.m_Data, this.m_Data) ? -982642846 : (num4 = -880601845);
            num1 = num4 ^ (int) num2 * 1929825192;
            continue;
          case 9:
            num1 = (int) num2 * 867160241 ^ -736513670;
            continue;
          case 10:
            JSONData.\u200D⁬‌⁫⁪‮‬⁭‮‏‬⁪‍⁯​‫‏‍‎⁪‌‮‬‎⁬‭⁮⁪⁯⁭⁬‭​⁫‬⁮‪⁮‭⁫‮(aWriter, (byte) 4);
            num1 = (int) num2 * 1493184433 ^ 2041513077;
            continue;
          case 11:
            num1 = (int) num2 * 1880340380 ^ -1967288919;
            continue;
          case 12:
            JSONData.\u200D‪‌⁫‬⁯​⁪⁫⁬⁬⁬⁮‏‬‎⁬‌‌‌‌⁮⁯​‫‬‪‭⁮‍‮‌‫‬‌‫⁮‌‎‍‮(aWriter, this.AsBool);
            num1 = (int) num2 * 1979320530 ^ -292207951;
            continue;
          case 13:
            int num5 = !JSONData.\u200B‎‏⁪‏‍⁮‌‬‫​⁫‌​⁬‏⁮⁯‬⁪⁬‬‪⁮⁬‎⁫⁮⁮‎⁪⁪⁫⁭‮‫‪‮‬‮‮(jsonData.m_Data, this.m_Data) ? -820293301 : (num5 = -607139030);
            num1 = num5 ^ (int) num2 * -474944600;
            continue;
          case 14:
            jsonData.AsBool = this.AsBool;
            num1 = 345805335;
            continue;
          case 15:
            JSONData.\u206F‪⁯‫‎⁭⁪‎‮‍‪‭⁬‏‍⁭‬⁪‭⁬‎‭‮‮‬‮‎‬‪⁮⁭‪‮‏‬‪‎⁪‍⁬‮(aWriter, this.AsDouble);
            num1 = (int) num2 * -460799288 ^ 1925586668;
            continue;
          case 16:
            JSONData.\u200C‫‎⁬​‬⁭‭‭⁫⁯‍‬⁪‭⁮⁭⁯⁬⁫‍‍⁬‌⁬‪⁭‍‬​‮⁭⁮‌‏⁫‏‪⁬‏‮(aWriter, this.AsInt);
            num1 = (int) num2 * -723504577 ^ 337521366;
            continue;
          case 17:
            JSONData.\u200D⁬‌⁫⁪‮‬⁭‮‏‬⁪‍⁯​‫‏‍‎⁪‌‮‬‎⁬‭⁮⁪⁯⁭⁬‭​⁫‬⁮‪⁮‭⁫‮(aWriter, (byte) 7);
            num1 = (int) num2 * -538334457 ^ -1551486416;
            continue;
          case 18:
            num1 = (int) num2 * -470823723 ^ -479589845;
            continue;
          case 19:
            int num6 = flag ? 968915771 : (num6 = 1195423959);
            num1 = num6 ^ (int) num2 * 259217736;
            continue;
          case 20:
            num1 = (int) num2 * 1320171344 ^ 2136680355;
            continue;
          case 21:
            flag = JSONData.\u200B‎‏⁪‏‍⁮‌‬‫​⁫‌​⁬‏⁮⁯‬⁪⁬‬‪⁮⁬‎⁫⁮⁮‎⁪⁪⁫⁭‮‫‪‮‬‮‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 499081169 ^ -1672350603;
            continue;
          case 22:
            goto label_1;
          case 23:
            jsonData.AsFloat = this.AsFloat;
            num1 = 1132054625;
            continue;
          case 24:
            JSONData.\u200D⁬‌⁫⁪‮‬⁭‮‏‬⁪‍⁯​‫‏‍‎⁪‌‮‬‎⁬‭⁮⁪⁯⁭⁬‭​⁫‬⁮‪⁮‭⁫‮(aWriter, (byte) 6);
            num1 = (int) num2 * -1579658790 ^ -1120008861;
            continue;
          case 25:
            JSONData.\u200D⁬‌⁫⁪‮‬⁭‮‏‬⁪‍⁯​‫‏‍‎⁪‌‮‬‎⁬‭⁮⁪⁯⁭⁬‭​⁫‬⁮‪⁮‭⁫‮(aWriter, (byte) 5);
            num1 = (int) num2 * 575358811 ^ 762165476;
            continue;
          case 26:
            goto label_3;
          case 27:
            JSONData.\u202D‎‫⁭​‬⁫⁯​‏⁪‍‬‌‫‭‬‪‪‌‍⁬‬​⁬‏⁫‌⁯‫⁭‏‍⁪‍‎‎‌‮‏‮(aWriter, this.AsFloat);
            num1 = (int) num2 * 137718040 ^ 1078242667;
            continue;
          case 28:
            JSONData.\u200D⁬‌⁫⁪‮‬⁭‮‏‬⁪‍⁯​‫‏‍‎⁪‌‮‬‎⁬‭⁮⁪⁯⁭⁬‭​⁫‬⁮‪⁮‭⁫‮(aWriter, (byte) 3);
            num1 = 60724998;
            continue;
          default:
            goto label_31;
        }
      }
label_3:
      return;
label_31:;
    }

    static string \u202C⁬⁭⁯‪‏‬⁯‏‌‪‏‍‫‫‭‍‪⁬‎‮⁪‪‍‍‫‏⁮⁮⁫⁫‌⁮‍‮​⁭⁪‏‏‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u200B‎‏⁪‏‍⁮‌‬‫​⁫‌​⁬‏⁮⁯‬⁪⁬‬‪⁮⁬‎⁫⁮⁮‎⁪⁪⁫⁭‮‫‪‮‬‮‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u200D⁬‌⁫⁪‮‬⁭‮‏‬⁪‍⁯​‫‏‍‎⁪‌‮‬‎⁬‭⁮⁪⁯⁭⁬‭​⁫‬⁮‪⁮‭⁫‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200C‫‎⁬​‬⁭‭‭⁫⁯‍‬⁪‭⁮⁭⁯⁬⁫‍‍⁬‌⁬‪⁭‍‬​‮⁭⁮‌‏⁫‏‪⁬‏‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202D‎‫⁭​‬⁫⁯​‏⁪‍‬‌‫‭‬‪‪‌‍⁬‬​⁬‏⁫‌⁯‫⁭‏‍⁪‍‎‎‌‮‏‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u206F‪⁯‫‎⁭⁪‎‮‍‪‭⁬‏‍⁭‬⁪‭⁬‎‭‮‮‬‮‎‬‪⁮⁭‪‮‏‬‪‎⁪‍⁬‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u200D‪‌⁫‬⁯​⁪⁫⁬⁬⁬⁮‏‬‎⁬‌‌‌‌⁮⁯​‫‬‪‭⁮‍‮‌‫‬‌‫⁮‌‎‍‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u206E‭‪⁫⁮‎‭‮​​‮‍‮‭‮⁭‪⁯⁯⁬⁬⁬‏‍​⁭⁬‌⁪‪‭⁪⁯⁮‎‫⁬‭‏⁫‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
