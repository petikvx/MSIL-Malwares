// Decompiled with JetBrains decompiler
// Type: 019644258292.036551049228
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003019644258292;
using \u003023776988939;
using \u003172935711858;
using \u003209775675793;
using \u003233524418126;
using \u003379536652161;
using \u003421384980682;
using \u003462605226301;
using \u003484494481491;
using \u003573940117928;
using \u003624067556582;
using \u003634102025516;
using \u003672161515360;
using \u003812089337341;
using \u003831217153152;
using \u003844058527023;
using \u003875721769422;
using \u003896202856669;
using \u003964238187348;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;

namespace \u003019644258292
{
  internal class \u003036551049228
  {
    private readonly string \u003176855954549;
    private int \u003730485939804;

    public List<\u003893580205035> \u003382624253426 { get; }

    public \u003036551049228(string expression)
    {
      \u003821784578685.\u003260732825936((object) expression, nameof (expression));
      this.\u003176855954549 = expression;
      this.\u003382624253426 = new List<\u003893580205035>();
      this.\u003824268478330();
    }

    private void \u003824268478330()
    {
      int num = this.\u003730485939804;
      this.\u003588072885698();
      if (this.\u003176855954549.Length == this.\u003730485939804)
        return;
      if (this.\u003176855954549[this.\u003730485939804] == '$')
      {
        if (this.\u003176855954549.Length == 1)
          return;
        switch (this.\u003176855954549[this.\u003730485939804 + 1])
        {
          case '.':
          case '[':
            ++this.\u003730485939804;
            num = this.\u003730485939804;
            break;
        }
      }
      if (this.\u003494638259434(this.\u003382624253426, num, false))
        return;
      int index = this.\u003730485939804;
      this.\u003588072885698();
      if (this.\u003730485939804 < this.\u003176855954549.Length)
        throw new \u003215302783352("Unexpected character while parsing path: " + this.\u003176855954549[index].ToString());
    }

    private bool \u003494638259434(List<\u003893580205035> _param1, int _param2, bool _param3)
    {
      bool flag1 = false;
      bool flag2 = false;
      bool flag3 = false;
      bool flag4 = false;
      while (this.\u003730485939804 < this.\u003176855954549.Length && !flag4)
      {
        char ch = this.\u003176855954549[this.\u003730485939804];
        switch (ch)
        {
          case ' ':
            if (this.\u003730485939804 < this.\u003176855954549.Length)
            {
              flag4 = true;
              continue;
            }
            continue;
          case '(':
          case '[':
            if (this.\u003730485939804 > _param2)
            {
              string str = this.\u003176855954549.Substring(_param2, this.\u003730485939804 - _param2);
              if (str == "*")
                str = (string) null;
              _param1.Add(\u003036551049228.\u003169210292275(str, flag1));
              flag1 = false;
            }
            _param1.Add(this.\u003453814561216(ch, flag1));
            ++this.\u003730485939804;
            _param2 = this.\u003730485939804;
            flag2 = true;
            flag3 = false;
            continue;
          case ')':
          case ']':
            flag4 = true;
            continue;
          case '.':
            if (this.\u003730485939804 > _param2)
            {
              string str = this.\u003176855954549.Substring(_param2, this.\u003730485939804 - _param2);
              if (str == "*")
                str = (string) null;
              _param1.Add(\u003036551049228.\u003169210292275(str, flag1));
              flag1 = false;
            }
            if (this.\u003730485939804 + 1 < this.\u003176855954549.Length && this.\u003176855954549[this.\u003730485939804 + 1] == '.')
            {
              flag1 = true;
              ++this.\u003730485939804;
            }
            ++this.\u003730485939804;
            _param2 = this.\u003730485939804;
            flag2 = false;
            flag3 = true;
            continue;
          default:
            if (_param3 && (ch == '=' || ch == '<' || ch == '!' || ch == '>' || ch == '|' || ch == '&'))
            {
              flag4 = true;
              continue;
            }
            if (flag2)
              throw new \u003215302783352("Unexpected character following indexer: " + ch.ToString());
            ++this.\u003730485939804;
            continue;
        }
      }
      bool flag5 = this.\u003730485939804 == this.\u003176855954549.Length;
      if (this.\u003730485939804 > _param2)
      {
        string str = this.\u003176855954549.Substring(_param2, this.\u003730485939804 - _param2).TrimEnd();
        if (str == "*")
          str = (string) null;
        _param1.Add(\u003036551049228.\u003169210292275(str, flag1));
      }
      else if (flag3 && flag5 | _param3)
        throw new \u003215302783352("Unexpected end while parsing path.");
      return flag5;
    }

    private static \u003893580205035 \u003169210292275(
      string _param0,
      bool _param1)
    {
      if (!_param1)
        return (\u003893580205035) new \u003299221006471()
        {
          \u003138336466184 = _param0
        };
      return (\u003893580205035) new \u003236863652131()
      {
        \u003581099194336 = _param0
      };
    }

    private \u003893580205035 \u003453814561216(char _param1, bool _param2)
    {
      ++this.\u003730485939804;
      char ch = _param1 == '[' ? ']' : ')';
      this.\u003875031519365("Path ended with open indexer.");
      this.\u003588072885698();
      if (this.\u003176855954549[this.\u003730485939804] == '\'')
        return this.\u003533019164643(ch, _param2);
      return this.\u003176855954549[this.\u003730485939804] == '?' ? this.\u003123377484634(ch) : this.\u003042609227351(ch);
    }

    private \u003893580205035 \u003042609227351(char _param1)
    {
      int startIndex = this.\u003730485939804;
      int? nullable1 = new int?();
      List<int> intList = (List<int>) null;
      int num = 0;
      int? nullable2 = new int?();
      int? nullable3 = new int?();
      int? nullable4 = new int?();
      while (this.\u003730485939804 < this.\u003176855954549.Length)
      {
        char c = this.\u003176855954549[this.\u003730485939804];
        if (c == ' ')
        {
          nullable1 = new int?(this.\u003730485939804);
          this.\u003588072885698();
        }
        else
        {
          int? nullable5;
          if ((int) c == (int) _param1)
          {
            nullable5 = nullable1;
            int length = (nullable5 ?? this.\u003730485939804) - startIndex;
            if (intList != null)
            {
              if (length == 0)
                throw new \u003215302783352("Array index expected.");
              int int32 = Convert.ToInt32(this.\u003176855954549.Substring(startIndex, length), (IFormatProvider) CultureInfo.InvariantCulture);
              intList.Add(int32);
              return (\u003893580205035) new \u003081114854591()
              {
                \u003093651309308 = intList
              };
            }
            if (num > 0)
            {
              if (length > 0)
              {
                int int32 = Convert.ToInt32(this.\u003176855954549.Substring(startIndex, length), (IFormatProvider) CultureInfo.InvariantCulture);
                if (num == 1)
                  nullable3 = new int?(int32);
                else
                  nullable4 = new int?(int32);
              }
              return (\u003893580205035) new \u003981374850477()
              {
                \u003195791708731 = nullable2,
                \u003823865135536 = nullable3,
                \u003789419900331 = nullable4
              };
            }
            if (length == 0)
              throw new \u003215302783352("Array index expected.");
            int int32_1 = Convert.ToInt32(this.\u003176855954549.Substring(startIndex, length), (IFormatProvider) CultureInfo.InvariantCulture);
            return (\u003893580205035) new \u003055059587516()
            {
              \u003622000586785 = new int?(int32_1)
            };
          }
          switch (c)
          {
            case '*':
              ++this.\u003730485939804;
              this.\u003875031519365("Path ended with open indexer.");
              this.\u003588072885698();
              if ((int) this.\u003176855954549[this.\u003730485939804] != (int) _param1)
                throw new \u003215302783352("Unexpected character while parsing path indexer: " + c.ToString());
              return (\u003893580205035) new \u003055059587516();
            case ',':
              nullable5 = nullable1;
              int length1 = (nullable5 ?? this.\u003730485939804) - startIndex;
              if (length1 == 0)
                throw new \u003215302783352("Array index expected.");
              if (intList == null)
                intList = new List<int>();
              string str = this.\u003176855954549.Substring(startIndex, length1);
              intList.Add(Convert.ToInt32(str, (IFormatProvider) CultureInfo.InvariantCulture));
              ++this.\u003730485939804;
              this.\u003588072885698();
              startIndex = this.\u003730485939804;
              nullable1 = new int?();
              continue;
            case ':':
              nullable5 = nullable1;
              int length2 = (nullable5 ?? this.\u003730485939804) - startIndex;
              if (length2 > 0)
              {
                int int32 = Convert.ToInt32(this.\u003176855954549.Substring(startIndex, length2), (IFormatProvider) CultureInfo.InvariantCulture);
                switch (num)
                {
                  case 0:
                    nullable2 = new int?(int32);
                    break;
                  case 1:
                    nullable3 = new int?(int32);
                    break;
                  default:
                    nullable4 = new int?(int32);
                    break;
                }
              }
              ++num;
              ++this.\u003730485939804;
              this.\u003588072885698();
              startIndex = this.\u003730485939804;
              nullable1 = new int?();
              continue;
            default:
              if (!char.IsDigit(c) && c != '-')
                throw new \u003215302783352("Unexpected character while parsing path indexer: " + c.ToString());
              if (nullable1.HasValue)
                throw new \u003215302783352("Unexpected character while parsing path indexer: " + c.ToString());
              ++this.\u003730485939804;
              continue;
          }
        }
      }
      throw new \u003215302783352("Path ended with open indexer.");
    }

    private void \u003588072885698()
    {
      while (this.\u003730485939804 < this.\u003176855954549.Length && this.\u003176855954549[this.\u003730485939804] == ' ')
        ++this.\u003730485939804;
    }

    private \u003893580205035 \u003123377484634(char _param1)
    {
      ++this.\u003730485939804;
      this.\u003875031519365("Path ended with open indexer.");
      if (this.\u003176855954549[this.\u003730485939804] != '(')
        throw new \u003215302783352("Unexpected character while parsing path indexer: " + this.\u003176855954549[this.\u003730485939804].ToString());
      ++this.\u003730485939804;
      \u003876199235996 obj = this.\u003554574715811();
      ++this.\u003730485939804;
      this.\u003875031519365("Path ended with open indexer.");
      this.\u003588072885698();
      if ((int) this.\u003176855954549[this.\u003730485939804] != (int) _param1)
        throw new \u003215302783352("Unexpected character while parsing path indexer: " + this.\u003176855954549[this.\u003730485939804].ToString());
      return (\u003893580205035) new \u003805265168821()
      {
        \u003253070632012 = obj
      };
    }

    private bool \u003846957533404(out List<\u003893580205035> _param1)
    {
      if (this.\u003176855954549[this.\u003730485939804] == '$')
      {
        _param1 = new List<\u003893580205035>();
        _param1.Add((\u003893580205035) \u003124914012319.\u003014464244613);
      }
      else if (this.\u003176855954549[this.\u003730485939804] == '@')
      {
        _param1 = new List<\u003893580205035>();
      }
      else
      {
        _param1 = (List<\u003893580205035>) null;
        return false;
      }
      ++this.\u003730485939804;
      if (this.\u003494638259434(_param1, this.\u003730485939804, true))
        throw new \u003215302783352("Path ended with open query.");
      return true;
    }

    private \u003215302783352 \u003818175097329() => new \u003215302783352("Unexpected character while parsing path query: " + this.\u003176855954549[this.\u003730485939804].ToString());

    private object \u003217594497260()
    {
      this.\u003588072885698();
      List<\u003893580205035> objList;
      if (this.\u003846957533404(out objList))
      {
        this.\u003588072885698();
        this.\u003875031519365("Path ended with open query.");
        return (object) objList;
      }
      object obj;
      if (!this.\u003546318882078(out obj))
        throw this.\u003818175097329();
      this.\u003588072885698();
      this.\u003875031519365("Path ended with open query.");
      return (object) new \u003666167056623(obj);
    }

    private \u003876199235996 \u003554574715811()
    {
      \u003876199235996 obj1 = (\u003876199235996) null;
      \u003428677642183 obj2 = (\u003428677642183) null;
      while (this.\u003730485939804 < this.\u003176855954549.Length)
      {
        object obj3 = this.\u003217594497260();
        object obj4 = (object) null;
        \u003101519331266 obj5;
        if (this.\u003176855954549[this.\u003730485939804] == ')' || this.\u003176855954549[this.\u003730485939804] == '|' || this.\u003176855954549[this.\u003730485939804] == '&')
        {
          obj5 = \u003101519331266.Exists;
        }
        else
        {
          obj5 = this.\u003122571136492();
          obj4 = this.\u003217594497260();
        }
        \u003940444709021 obj6 = new \u003940444709021();
        obj6.\u003467240421157 = obj3;
        obj6.\u003669977872252 = obj5;
        obj6.\u003971770715217 = obj4;
        \u003940444709021 obj7 = obj6;
        if (this.\u003176855954549[this.\u003730485939804] == ')')
        {
          if (obj2 == null)
            return (\u003876199235996) obj7;
          obj2.\u003901773336349.Add((\u003876199235996) obj7);
          return obj1;
        }
        if (this.\u003176855954549[this.\u003730485939804] == '&')
        {
          if (!this.\u003354780972708("&&"))
            throw this.\u003818175097329();
          if (obj2 == null || obj2.\u003669977872252 != \u003101519331266.And)
          {
            \u003428677642183 obj8 = new \u003428677642183();
            obj8.\u003669977872252 = \u003101519331266.And;
            \u003428677642183 obj9 = obj8;
            obj2?.\u003901773336349.Add((\u003876199235996) obj9);
            obj2 = obj9;
            if (obj1 == null)
              obj1 = (\u003876199235996) obj2;
          }
          obj2.\u003901773336349.Add((\u003876199235996) obj7);
        }
        if (this.\u003176855954549[this.\u003730485939804] == '|')
        {
          if (!this.\u003354780972708("||"))
            throw this.\u003818175097329();
          if (obj2 == null || obj2.\u003669977872252 != \u003101519331266.Or)
          {
            \u003428677642183 obj10 = new \u003428677642183();
            obj10.\u003669977872252 = \u003101519331266.Or;
            \u003428677642183 obj11 = obj10;
            obj2?.\u003901773336349.Add((\u003876199235996) obj11);
            obj2 = obj11;
            if (obj1 == null)
              obj1 = (\u003876199235996) obj2;
          }
          obj2.\u003901773336349.Add((\u003876199235996) obj7);
        }
      }
      throw new \u003215302783352("Path ended with open query.");
    }

    private bool \u003546318882078(out object _param1)
    {
      char c = this.\u003176855954549[this.\u003730485939804];
      if (c == '\'')
      {
        _param1 = (object) this.\u003802174529697();
        return true;
      }
      if (!char.IsDigit(c))
      {
        switch (c)
        {
          case '-':
            break;
          case 'f':
            if (this.\u003354780972708("false"))
            {
              _param1 = (object) false;
              return true;
            }
            goto label_17;
          case 'n':
            if (this.\u003354780972708("null"))
            {
              _param1 = (object) null;
              return true;
            }
            goto label_17;
          case 't':
            if (this.\u003354780972708("true"))
            {
              _param1 = (object) true;
              return true;
            }
            goto label_17;
          default:
            goto label_17;
        }
      }
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.Append(c);
      for (++this.\u003730485939804; this.\u003730485939804 < this.\u003176855954549.Length; ++this.\u003730485939804)
      {
        char ch = this.\u003176855954549[this.\u003730485939804];
        switch (ch)
        {
          case ' ':
          case ')':
            string s = stringBuilder.ToString();
            if (s.IndexOfAny(new char[3]{ '.', 'E', 'e' }) != -1)
            {
              double result;
              int num = double.TryParse(s, NumberStyles.Float | NumberStyles.AllowThousands, (IFormatProvider) CultureInfo.InvariantCulture, out result) ? 1 : 0;
              _param1 = (object) result;
              return num != 0;
            }
            long result1;
            int num1 = long.TryParse(s, NumberStyles.Integer, (IFormatProvider) CultureInfo.InvariantCulture, out result1) ? 1 : 0;
            _param1 = (object) result1;
            return num1 != 0;
          default:
            stringBuilder.Append(ch);
            continue;
        }
      }
label_17:
      _param1 = (object) null;
      return false;
    }

    private string \u003802174529697()
    {
      StringBuilder stringBuilder = new StringBuilder();
      ++this.\u003730485939804;
      while (this.\u003730485939804 < this.\u003176855954549.Length)
      {
        char ch = this.\u003176855954549[this.\u003730485939804];
        if (ch == '\\' && this.\u003730485939804 + 1 < this.\u003176855954549.Length)
        {
          ++this.\u003730485939804;
          if (this.\u003176855954549[this.\u003730485939804] == '\'')
          {
            stringBuilder.Append('\'');
          }
          else
          {
            if (this.\u003176855954549[this.\u003730485939804] != '\\')
              throw new \u003215302783352("Unknown escape character: \\" + this.\u003176855954549[this.\u003730485939804].ToString());
            stringBuilder.Append('\\');
          }
          ++this.\u003730485939804;
        }
        else
        {
          if (ch == '\'')
          {
            ++this.\u003730485939804;
            return stringBuilder.ToString();
          }
          ++this.\u003730485939804;
          stringBuilder.Append(ch);
        }
      }
      throw new \u003215302783352("Path ended with an open string.");
    }

    private bool \u003354780972708(string _param1)
    {
      int index = this.\u003730485939804;
      foreach (char ch in _param1)
      {
        if (index >= this.\u003176855954549.Length || (int) this.\u003176855954549[index] != (int) ch)
          return false;
        ++index;
      }
      this.\u003730485939804 = index;
      return true;
    }

    private \u003101519331266 \u003122571136492()
    {
      if (this.\u003730485939804 + 1 >= this.\u003176855954549.Length)
        throw new \u003215302783352("Path ended with open query.");
      if (this.\u003354780972708("=="))
        return \u003101519331266.Equals;
      if (this.\u003354780972708("!=") || this.\u003354780972708("<>"))
        return \u003101519331266.NotEquals;
      if (this.\u003354780972708("<="))
        return \u003101519331266.LessThanOrEquals;
      if (this.\u003354780972708("<"))
        return \u003101519331266.LessThan;
      if (this.\u003354780972708(">="))
        return \u003101519331266.GreaterThanOrEquals;
      if (this.\u003354780972708(">"))
        return \u003101519331266.GreaterThan;
      throw new \u003215302783352("Could not read query operator.");
    }

    private \u003893580205035 \u003533019164643(char _param1, bool _param2)
    {
      List<string> stringList = (List<string>) null;
      while (this.\u003730485939804 < this.\u003176855954549.Length)
      {
        string str = this.\u003802174529697();
        this.\u003588072885698();
        this.\u003875031519365("Path ended with open indexer.");
        if ((int) this.\u003176855954549[this.\u003730485939804] == (int) _param1)
        {
          if (stringList == null)
            return \u003036551049228.\u003169210292275(str, _param2);
          stringList.Add(str);
          if (!_param2)
            return (\u003893580205035) new \u003686435377300()
            {
              \u003276716940898 = stringList
            };
          return (\u003893580205035) new \u003331532377234()
          {
            \u003362846008771 = stringList
          };
        }
        if (this.\u003176855954549[this.\u003730485939804] != ',')
          throw new \u003215302783352("Unexpected character while parsing path indexer: " + this.\u003176855954549[this.\u003730485939804].ToString());
        ++this.\u003730485939804;
        this.\u003588072885698();
        if (stringList == null)
          stringList = new List<string>();
        stringList.Add(str);
      }
      throw new \u003215302783352("Path ended with open indexer.");
    }

    private void \u003875031519365(string _param1)
    {
      if (this.\u003730485939804 >= this.\u003176855954549.Length)
        throw new \u003215302783352(_param1);
    }

    internal IEnumerable<\u003057567207975> \u003855861163323(
      \u003057567207975 _param1,
      \u003057567207975 _param2,
      bool _param3)
    {
      return \u003036551049228.\u003884115096798(this.\u003382624253426, _param1, _param2, _param3);
    }

    internal static IEnumerable<\u003057567207975> \u003884115096798(
      List<\u003893580205035> _param0,
      \u003057567207975 _param1,
      \u003057567207975 _param2,
      bool _param3)
    {
      IEnumerable<\u003057567207975> objs = (IEnumerable<\u003057567207975>) new \u003057567207975[1]
      {
        _param2
      };
      foreach (\u003893580205035 obj in _param0)
        objs = obj.\u003321667512956(_param1, objs, _param3);
      return objs;
    }
  }
}
