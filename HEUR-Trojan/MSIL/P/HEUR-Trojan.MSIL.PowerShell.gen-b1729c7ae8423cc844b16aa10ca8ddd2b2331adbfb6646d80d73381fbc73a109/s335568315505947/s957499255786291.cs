// Decompiled with JetBrains decompiler
// Type: s335568315505947.s957499255786291
// Assembly: s968508024776124, Version=2.0.47.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: E3596912-35E7-405B-A05A-F5F12AB5E292
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-b1729c7ae8423cc844b16aa10ca8ddd2b2331adbfb6646d80d73381fbc73a109.exe

using s025420649509424;
using s111377166353221;
using s214170901478238;
using s430663705211726;
using s528813736053581;
using s564412675469531;
using s852002970843533;
using s878358404072606;
using s962360155664524;
using s985393833263885;
using System;
using System.Collections.Generic;
using System.IO;
using System.IO.MemoryMappedFiles;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace s335568315505947
{
  public sealed class s957499255786291 : s726691949965431
  {
    private const int s298251586939634 = 88;
    private const int s870547524310472 = 64;
    private const ushort s738693616632658 = 4;
    private const int s424175996941077 = 2097152;
    private const int s672264677119736 = 1048576;
    private const int s961163033327951 = 65533;
    private static readonly Guid s301078038879511 = new Guid("{79430003-51bf-5f05-ed34-99cf32652c26}");
    private static readonly Guid s757630673248969 = new Guid("{e13c0d23-ccbc-4e12-931b-d9cc2eee27e4}");
    private static readonly Guid s528360856027011 = new Guid("{68fdd900-4a3e-11d1-84f4-0000f80464e3}");
    private static readonly Guid s931746105652289 = new Guid("{2cb15d1d-5fc1-11d2-abe1-00a0c911f518}");
    private static readonly Guid s294455480308273 = new Guid("{9b79ee91-b5fd-41c0-a243-4248e266e9d0}");
    private static readonly Guid s718909719256588 = new Guid("{9b79ee91-b5fd-41c0-a243-4248e266e9d0}");
    private readonly string s585118492184205;
    private readonly byte[] s158237226410935;
    private readonly byte[] s177046059326448;
    private readonly byte[] s390410237643393;
    private readonly Dictionary<int, string> s894135992534275 = new Dictionary<int, string>();
    private readonly long s499577189110575;
    private readonly long s713888033794510;
    private readonly long s804913590870361;
    private int s779788288915404;
    private long s517149816183077;

    public s957499255786291(string btlFilePath)
      : this(btlFilePath, new s748366080249292())
    {
    }

    public s957499255786291(string btlFilePath, s748366080249292 traceEventDispatcherOptions)
      : this(btlFilePath, traceEventDispatcherOptions, new byte[2097152], new byte[2097152], new byte[2097152])
    {
    }

    public s957499255786291(
      string btlFilePath,
      s748366080249292 options,
      byte[] workspace,
      byte[] uncompressedBuffer,
      byte[] compressedBuffer)
    {
      DateTime s856377647421006_1 = options.s727696653614022 == new DateTime() ? DateTime.MinValue : options.s727696653614022;
      DateTime s856377647421006_2 = options.s560553222843327 == new DateTime() ? DateTime.MaxValue : options.s560553222843327;
      this.s585118492184205 = btlFilePath;
      this.s517149816183077 = 0L;
      this.s499577189110575 = 0L;
      this.s713888033794510 = long.MaxValue;
      this.s804913590870361 = long.MaxValue;
      string str = this.s585118492184205 + ".id";
      bool flag = File.Exists(str);
      long s840811161384526;
      if (s856377647421006_1 > DateTime.MinValue & flag)
        this.s517149816183077 = s957499255786291.s993256028143163(str, s856377647421006_1, out this.s499577189110575, out s840811161384526);
      if (s856377647421006_2 < DateTime.MaxValue & flag)
        this.s713888033794510 = s957499255786291.s993256028143163(str, s856377647421006_2, out this.s804913590870361, out s840811161384526);
      this.s158237226410935 = workspace;
      this.s177046059326448 = uncompressedBuffer;
      this.s390410237643393 = compressedBuffer;
      this.s121737619801344();
    }

    public virtual int s881778817903956 => this.s779788288915404;

    public virtual long s673522619025594 => !File.Exists(this.s585118492184205) ? 0L : new FileInfo(this.s585118492184205).Length;

    public virtual bool s734034458002513()
    {
      this.s121737619801344();
      return true;
    }

    internal virtual string s813031857463973(int s310465977889152, long s666580651909469)
    {
      string empty;
      if (!this.s894135992534275.TryGetValue(s310465977889152, out empty))
        empty = string.Empty;
      return empty;
    }

    private unsafe bool s853163048178936()
    {
      string path = this.s585118492184205 + ".md";
      if (!File.Exists(path))
        return false;
      byte[] buffer;
      using (FileStream fileStream = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
      {
        int length = (int) fileStream.Length;
        buffer = new byte[length];
        int val1 = 65536;
        int offset = 0;
        int num;
        while ((num = fileStream.Read(buffer, offset, Math.Min(val1, length - offset))) > 0)
        {
          offset += num;
          if (offset == length)
            break;
        }
      }
      int index1 = 0;
      while (index1 + 80 + 4 < buffer.Length)
      {
        fixed (byte* numPtr1 = &buffer[index1])
        {
          s134995860702422.s648877553938236 s648877553938236;
          // ISSUE: cast to a reference type
          // ISSUE: explicit reference operation
          (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507 = ((s134995860702422.s728170393225391*) numPtr1)->s870227314561507;
          int startIndex = index1 + 80;
          int int32 = BitConverter.ToInt32(buffer, startIndex);
          int index2 = startIndex + 4;
          if (index2 + int32 <= buffer.Length)
          {
            fixed (byte* numPtr2 = &buffer[index2])
            {
              s648877553938236.s855605335439496 = (ushort) int32;
              s648877553938236.s066345635431405 = (IntPtr) (void*) numPtr2;
              this.s803925408114751(&s648877553938236, false);
            }
          }
          index1 = index2 + int32;
        }
      }
      return true;
    }

    private void s121737619801344()
    {
      if (this.s517149816183077 > 0L && this.s432147997440474 != 0L && !this.s853163048178936())
        this.s517149816183077 = 0L;
      long offset1 = 0;
      using (FileStream fileStream = new FileStream(this.s585118492184205, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
      {
        if (this.s432147997440474 != 0L)
        {
          offset1 = this.s517149816183077;
          fileStream.Seek(offset1, SeekOrigin.Begin);
        }
        long val1 = Math.Min(this.s713888033794510 - offset1, fileStream.Length - offset1 + 15L & -16L);
        int num1 = 0;
        int num2;
        for (; val1 > 0L && !this.s301783657697048; val1 -= (long) num2)
        {
          bool flag = false;
          int num3 = (int) Math.Min(val1, 1048576L);
          int offset2 = num1;
          int num4 = 0;
          if (num3 < 1048576)
          {
            num4 = num1;
            num1 = 0;
          }
          num2 = 0;
          while (num3 > num1)
          {
            int num5 = fileStream.Read(this.s390410237643393, offset2, num3 - num1);
            if (num5 == 0)
            {
              flag = true;
              break;
            }
            num1 += num5;
            num2 += num5;
          }
          int sourceIndex = this.s663414831694402(num1 + num4);
          if (flag || sourceIndex == -1)
            break;
          Array.Copy((Array) this.s390410237643393, sourceIndex, (Array) this.s390410237643393, 0, num3 + num4 - sourceIndex);
          num1 = num3 - sourceIndex;
        }
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private unsafe bool s211250884227684(
      s134995860702422.s648877553938236* s836285493351793)
    {
      if (!(((s134995860702422.s728170393225391*) s836285493351793)->s870227314561507.s865414040669856 == s957499255786291.s528360856027011))
        return false;
      s957499255786291.s326697951241381* s066345635431405 = (s957499255786291.s326697951241381*) (void*) s836285493351793->s066345635431405;
      this.s824321134384686 = (int) s066345635431405->s865168763087229;
      this.s605285401142765 = s066345635431405->s412733670813556;
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      this.s745687107734249 = new Version((int) (byte) ((s435790585148060.s599453117253623*) s066345635431405)->s990191955743970, (int) (byte) (((s435790585148060.s599453117253623*) s066345635431405)->s990191955743970 >> 8));
      this.s336446448723642 = (int) s066345635431405->s595516365595677;
      this.s558633164156824 = (int) s066345635431405->s370894082130115;
      this.s348947355737433 = new int?(s066345635431405->s092761210964819);
      this.s715999696684854 = DateTime.FromFileTimeUtc(s066345635431405->s038969378403040);
      this.s843632117898745 = ((s134995860702422.s728170393225391*) s836285493351793)->s870227314561507.s473266651679490;
      this.s432147997440474 = ((s134995860702422.s728170393225391*) s836285493351793)->s870227314561507.s473266651679490;
      this.s560950662468685 = ((s134995860702422.s728170393225391*) s836285493351793)->s870227314561507.s473266651679490;
      this.s779788288915404 = (int) s066345635431405->s145360521226033;
      s137522757078529 s137522757078529 = new s137522757078529((s470725726477034) this, (s137522757078529.s438235676929797) 0);
      s137522757078529.s274896781471519 += (Action<s435513404871277>) (s549832950249905 => Marshal.WriteInt32(s549832950249905.s969799445044717, 64, this.s348947355737433.Value));
      s137522757078529.s567329967493575 += (Action<s499525253300813>) (s625518489335437 =>
      {
        string s473287231010914 = s625518489335437.s473287231010914;
        int num1 = s473287231010914.LastIndexOf('\\');
        int startIndex = 0 > num1 ? 0 : num1 + 1;
        int num2 = s473287231010914.LastIndexOf('.');
        if (num2 <= startIndex)
          num2 = s473287231010914.Length;
        this.s894135992534275[s625518489335437.s102913512010943] = s473287231010914.Substring(startIndex, num2 - startIndex);
      });
      s137522757078529.s496436999410637 += (Action<s499525253300813>) (s568828434040263 => this.s894135992534275.Remove(s568828434040263.s102913512010943));
      return true;
    }

    private unsafe s134995860702422.s648877553938236* s860618733093735(
      byte* s965980368675169,
      ref int s866436733075707)
    {
      int num1 = 112;
      s134995860702422.s648877553938236* s648877553938236Ptr = (s134995860702422.s648877553938236*) s965980368675169;
      s648877553938236Ptr->s066345635431405 = new IntPtr((void*) (s965980368675169 + num1));
      int num2 = s957499255786291.s016970760692806(num1 + (int) s648877553938236Ptr->s855605335439496, 8);
      s648877553938236Ptr->s884679247404646 = s648877553938236Ptr->s934424027936993 > (ushort) 0 ? (s134995860702422.s042871462687652*) (s965980368675169 + num2) : (s134995860702422.s042871462687652*) null;
      int s616013709687464 = num2 + sizeof (s134995860702422.s042871462687652) * (int) s648877553938236Ptr->s934424027936993;
      for (ushort index = 0; (int) index < (int) s648877553938236Ptr->s934424027936993; ++index)
      {
        s648877553938236Ptr->s884679247404646[index].s566029008717659 = (ulong) (s965980368675169 + s616013709687464);
        s616013709687464 = s957499255786291.s016970760692806(s616013709687464 + (int) s648877553938236Ptr->s884679247404646[index].s711754183083976, 8);
      }
      int num3 = s957499255786291.s016970760692806(s616013709687464, 16);
      s866436733075707 += num3;
      return s648877553938236Ptr;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private unsafe void s229438257557115(
      s134995860702422.s648877553938236* s441631133865753)
    {
      string path = Path.Combine(Path.GetDirectoryName(this.s585118492184205), Path.GetFileName(Marshal.PtrToStringAnsi(s441631133865753->s066345635431405)));
      if (!File.Exists(path))
        return;
      int startIndex = path.IndexOf('.') + 1;
      int num1 = path.IndexOf('.', startIndex);
      int num2 = int.Parse(path.Substring(startIndex, num1 - startIndex));
      long length;
      using (FileStream fileStream = new FileStream(path, FileMode.Open, FileAccess.ReadWrite))
        length = fileStream.Length;
      using (MemoryMappedFile fromFile = MemoryMappedFile.CreateFromFile(path))
      {
        MemoryMappedViewAccessor viewAccessor = fromFile.CreateViewAccessor(0L, length, MemoryMappedFileAccess.Read);
        byte* pointer = (byte*) null;
        viewAccessor.SafeMemoryMappedViewHandle.AcquirePointer(ref pointer);
        ushort num3;
        long num4;
        for (long position = 0; position + 16L < length; position = num4 + (long) num3)
        {
          byte num5 = viewAccessor.ReadByte(position);
          byte num6 = viewAccessor.ReadByte(position + 1L);
          ushort num7 = viewAccessor.ReadUInt16(position + 2L);
          ushort num8 = viewAccessor.ReadUInt16(position + 4L);
          num3 = viewAccessor.ReadUInt16(position + 6L);
          long num9 = viewAccessor.ReadInt64(position + 8L);
          num4 = position + 16L;
          if (num4 + (long) num3 <= length && num9 <= this.s804913590870361)
          {
            s134995860702422.s648877553938236 s648877553938236;
            s648877553938236.s934424027936993 = (ushort) 0;
            s648877553938236.s855605335439496 = num3;
            s648877553938236.s066345635431405 = new IntPtr((void*) (pointer + num4));
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s473266651679490 = num9 < this.s560950662468685 ? this.s560950662468685 : num9;
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s957198854550732 = num7;
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s722228102271116 = 0;
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s001274643318731 = num2;
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s000023591405563 = num6;
            // ISSUE: cast to a reference type
            // ISSUE: explicit reference operation
            (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s301818044239639 = num8;
            if (num5 == (byte) 0)
            {
              // ISSUE: cast to a reference type
              // ISSUE: explicit reference operation
              (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s000023591405563 = (byte) 0;
              // ISSUE: cast to a reference type
              // ISSUE: explicit reference operation
              (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s611740701286585 = (byte) 35;
              // ISSUE: cast to a reference type
              // ISSUE: explicit reference operation
              (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s957198854550732 = (ushort) 320;
              // ISSUE: cast to a reference type
              // ISSUE: explicit reference operation
              (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s865414040669856 = s957499255786291.s294455480308273;
              this.s803925408114751(&s648877553938236, true);
            }
            else if (num5 == (byte) 1 && num8 == (ushort) 5)
            {
              // ISSUE: cast to a reference type
              // ISSUE: explicit reference operation
              (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s000023591405563 = (byte) 3;
              // ISSUE: cast to a reference type
              // ISSUE: explicit reference operation
              (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s611740701286585 = (byte) 10;
              // ISSUE: cast to a reference type
              // ISSUE: explicit reference operation
              (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s957198854550732 = (ushort) 320;
              // ISSUE: cast to a reference type
              // ISSUE: explicit reference operation
              (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s865414040669856 = s957499255786291.s931746105652289;
              s648877553938236.s855605335439496 = (ushort) ((int) num3 - 36 + 56);
              byte[] destination = new byte[(int) s648877553938236.s855605335439496];
              Marshal.Copy(s648877553938236.s066345635431405, destination, 0, 36);
              Marshal.Copy(s648877553938236.s066345635431405 + 36, destination, 56, (int) num3 - 36);
              fixed (byte* numPtr = &destination[0])
              {
                s648877553938236.s066345635431405 = new IntPtr((void*) numPtr);
                this.s803925408114751(&s648877553938236, true);
              }
            }
            else if (num5 == (byte) 2)
            {
              // ISSUE: cast to a reference type
              // ISSUE: explicit reference operation
              (^(s134995860702422.s728170393225391&) ref s648877553938236).s870227314561507.s865414040669856 = s957499255786291.s757630673248969;
              this.s803925408114751(&s648877553938236, true);
            }
          }
        }
      }
    }

    private unsafe void s803925408114751(
      s134995860702422.s648877553938236* s319726893359963,
      bool s276012190951974)
    {
      if (((s134995860702422.s728170393225391*) s319726893359963)->s870227314561507.s301818044239639 == (ushort) 65533 && ((s134995860702422.s728170393225391*) s319726893359963)->s870227314561507.s865414040669856 == s957499255786291.s301078038879511)
        this.s229438257557115(s319726893359963);
      if (((int) ((s134995860702422.s728170393225391*) s319726893359963)->s870227314561507.s957198854550732 & 256) != 0)
        ((s134995860702422.s728170393225391*) s319726893359963)->s870227314561507.s301818044239639 = (ushort) 0;
      s034852122986107 s180318052354735 = this.s128380686175907(s319726893359963);
      if (s180318052354735.s841790547125492)
        s180318052354735.s204978232629101();
      if (!s276012190951974)
        return;
      this.s551418563715328(s180318052354735);
      this.s560950662468685 = Math.Max(((s134995860702422.s728170393225391*) s319726893359963)->s870227314561507.s473266651679490, this.s560950662468685);
    }

    private unsafe int s663414831694402(int s442928714346539)
    {
      int startIndex1 = 0;
      while (startIndex1 + 8 < s442928714346539 && !this.s301783657697048)
      {
        int int32_1 = BitConverter.ToInt32(this.s390410237643393, startIndex1);
        int startIndex2 = startIndex1 + 4;
        int int32_2 = BitConverter.ToInt32(this.s390410237643393, startIndex2);
        int num = startIndex2 + 4;
        if (num + int32_1 > s442928714346539)
          return num - 8;
        fixed (byte* s135811297569496 = &this.s177046059326448[0])
          fixed (byte* numPtr = &this.s390410237643393[0])
            fixed (byte* s415643678544241 = &this.s158237226410935[0])
            {
              int s749806693249501;
              if (s957499255786291.s946103892361307((ushort) 4, s135811297569496, int32_2, numPtr + num, int32_1, out s749806693249501, s415643678544241) != 0U)
                throw new Exception("Decompression failed");
              int s866436733075707 = 0;
              while (s866436733075707 < s749806693249501 && !this.s301783657697048)
              {
                s134995860702422.s648877553938236* s648877553938236Ptr = this.s860618733093735(s135811297569496 + s866436733075707, ref s866436733075707);
                if (this.s432147997440474 == 0L)
                {
                  if (this.s211250884227684(s648877553938236Ptr))
                    return -1;
                }
                else
                  this.s803925408114751(s648877553938236Ptr, true);
              }
              startIndex1 = s957499255786291.s016970760692806(num + int32_1, 4);
            }
      }
      return startIndex1;
    }

    private static int s016970760692806(int s616013709687464, int s263009114829657) => s616013709687464 + (s263009114829657 - 1) & ~(s263009114829657 - 1);

    private static long s993256028143163(
      string s641624222747820,
      DateTime s856377647421006,
      out long s429755749490088,
      out long s840811161384526)
    {
      s429755749490088 = 0L;
      s840811161384526 = 0L;
      if (!File.Exists(s641624222747820))
        return 0;
      byte[] numArray;
      using (FileStream input = new FileStream(s641624222747820, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
      {
        using (BinaryReader binaryReader = new BinaryReader((Stream) input))
          numArray = binaryReader.ReadBytes((int) input.Length);
      }
      if (numArray.Length < 32)
        return 0;
      DateTime dateTime = DateTime.FromFileTime(BitConverter.ToInt64(numArray, 0));
      s840811161384526 = BitConverter.ToInt64(numArray, 8);
      s429755749490088 = BitConverter.ToInt64(numArray, 16);
      int num1 = (numArray.Length - 16) / 16;
      for (int index = 1; index < num1; ++index)
      {
        long num2 = (BitConverter.ToInt64(numArray, 16 + index * 16) - s429755749490088) * 1000000L / s840811161384526 / 1000L;
        if (dateTime + TimeSpan.FromMilliseconds((double) num2) >= s856377647421006)
          return BitConverter.ToInt64(numArray, 16 + (index - 1) * 16 + 8);
      }
      return 0;
    }

    [DllImport("ntdll.dll", EntryPoint = "RtlDecompressBufferEx")]
    private static extern unsafe uint s946103892361307(
      ushort s829896436893894,
      byte* s135811297569496,
      int s505610350554995,
      byte* s605638265249691,
      int s766969839437653,
      out int s749806693249501,
      byte* s415643678544241);

    [StructLayout(LayoutKind.Explicit)]
    private struct s326697951241381
    {
      [FieldOffset(12)]
      public uint s370894082130115;
      [FieldOffset(44)]
      public uint s865168763087229;
      [FieldOffset(48)]
      public uint s145360521226033;
      [FieldOffset(52)]
      public uint s595516365595677;
      [FieldOffset(68)]
      public int s092761210964819;
      [FieldOffset(248)]
      public long s412733670813556;
      [FieldOffset(256)]
      public long s038969378403040;
      public s528638463248059 s592920982921318;
    }
  }
}
