// Decompiled with JetBrains decompiler
// Type: ram_machine.Instructions.CopyValue2Instruction
// Assembly: InternalCrossContextDelega, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D2AB7CD5-4913-4369-B066-3ED6411FFDD0
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.Stosek.gen-a7018ff4aaaaebda06615da54ab7d3dcfe06ffda501254eb9654aa27152629bb.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace ram_machine.Instructions
{
  internal class CopyValue2Instruction : Instruction
  {
    public override int run(int[] tape)
    {
      tape[tape[this.parameters[0]]] = tape[this.parameters[1]];
label_1:
      int num1 = 1021096244;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 2008247853)) % 4U)
        {
          case 0:
            num1 = (int) num3 * 908196259 ^ 1134753418;
            continue;
          case 1:
            num2 = this.line + 1;
            num1 = (int) num3 * -1103735924 ^ 474227629;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return num2;
    }

    public override void setParameters(List<int> parameters)
    {
label_1:
      int num1 = -1299773284;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1929594696)) % 7U)
        {
          case 0:
            this.parameters.Add(parameters[0]);
            num1 = -1435541934;
            continue;
          case 1:
            this.parameters.Add(parameters[1]);
            num1 = (int) num2 * 1376972980 ^ 1391679808;
            continue;
          case 2:
            num1 = (int) num2 * -1107377 ^ 94904851;
            continue;
          case 3:
            goto label_1;
          case 4:
            goto label_3;
          case 5:
            int num3 = parameters.Count == 2 ? 1666820807 : (num3 = 1689453467);
            num1 = num3 ^ (int) num2 * -205016102;
            continue;
          case 6:
            goto label_7;
          default:
            goto label_9;
        }
      }
label_3:
      return;
label_9:
      return;
label_7:
      throw CopyValue2Instruction.\u206C‭‌‏⁪‌‬⁮‫⁯‎‎‫‬⁯‌‪‫⁫⁫⁭‭​‌‎⁮‍⁪⁯⁭‭‮‎‬‎‭⁮‌⁯⁫‮(\u003CModule\u003E.\u206E⁯‍‎‏⁭⁫⁭⁬‪‬‬‏⁮⁮‍⁫‍⁮⁫‫⁭‬‎‮‎⁮⁮‎⁮‪​‌‫​‫‫⁫⁫‬‮<string>(3395949037U));
    }

    public override string ToString()
    {
label_1:
      int num1 = 1274239079;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1256025067)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = CopyValue2Instruction.\u206C⁬⁪‎‮⁭⁫⁬‫‎⁯‍‬‌‮⁪⁮⁪⁫⁬⁫‭⁫‫‪⁬‎⁭‪⁪‬⁮‍‌⁮‪‪⁪⁭‌‮(new string[6]
            {
              this.line.ToString(),
              \u003CModule\u003E.\u206C‪⁪‭​‪‍‏⁪‭‬⁭⁭⁬‌‭⁯‪‭‪⁭‮⁮‫⁯​‌‌⁫‎‭‮⁬⁭‫⁬⁭‌⁯‮<string>(2220560777U),
              this.parameters[0].ToString(),
              \u003CModule\u003E.\u206C‪⁪‭​‪‍‏⁪‭‬⁭⁭⁬‌‭⁯‪‭‪⁭‮⁮‫⁯​‌‌⁫‎‭‮⁬⁭‫⁬⁭‌⁯‮<string>(567475400U),
              this.parameters[1].ToString(),
              \u003CModule\u003E.\u200C⁮⁪‭‮⁬‏​‮⁪‭‍⁫‌‍‫⁬​⁫‬‬​⁪‍​​‏⁯⁫‏‬⁫⁭⁪‬‌⁯‪​⁭‮<string>(3420804419U)
            });
            num1 = (int) num2 * -762052443 ^ 2053158752;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public CopyValue2Instruction()
    {
label_1:
      int num1 = -1710869652;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -20619681)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -1181427725 ^ 1931684703;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static ArgumentException \u206C‭‌‏⁪‌‬⁮‫⁯‎‎‫‬⁯‌‪‫⁫⁫⁭‭​‌‎⁮‍⁪⁯⁭‭‮‎‬‎‭⁮‌⁯⁫‮(
      [In] string obj0)
    {
      return new ArgumentException(obj0);
    }

    static string \u206C⁬⁪‎‮⁭⁫⁬‫‎⁯‍‬‌‮⁪⁮⁪⁫⁬⁫‭⁫‫‪⁬‎⁭‪⁪‬⁮‍‌⁮‪‪⁪⁭‌‮([In] string[] obj0) => string.Concat(obj0);
  }
}
