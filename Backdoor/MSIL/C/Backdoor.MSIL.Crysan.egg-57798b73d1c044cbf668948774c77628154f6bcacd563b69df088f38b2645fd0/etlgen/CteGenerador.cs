// Decompiled with JetBrains decompiler
// Type: etlgen.CteGenerador
// Assembly: UCOMIEnumConnecti, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5D827560-3619-4F41-B7F7-70598092DF43
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.MSIL.Crysan.egg-57798b73d1c044cbf668948774c77628154f6bcacd563b69df088f38b2645fd0.exe

using System;
using System.Xml;

namespace etlgen
{
  public class CteGenerador : ObjGenerador
  {
    private string constante;

    public CteGenerador()
    {
      this.entidad = this.id = "cte";
      this.constante = "";
    }

    public override object Generar(Random random) => (object) this.constante;

    public override ObjGenerador Clonar()
    {
      CteGenerador cteGenerador = new CteGenerador();
      cteGenerador.entidad = this.entidad;
      cteGenerador.id = cteGenerador.id;
      cteGenerador.constante = this.constante;
      return (ObjGenerador) cteGenerador;
    }

    public override void Cargar(XmlTextReader reader, ETLConfig configuracion)
    {
      if (reader.NodeType != XmlNodeType.Element || reader.Name != this.entidad)
        this.ErrorEntidad(this.entidad);
      string str = (string) null;
      while (reader.MoveToNextAttribute())
      {
        if (reader.Name == "id")
          str = reader.Value;
        else
          this.ErrorAtributo(this.entidad, reader.Name, reader.Value, reader.LineNumber);
      }
      this.constante = reader.Read() && reader.NodeType == XmlNodeType.Text ? reader.Value : throw new XmlException(this.GetType()?.ToString() + ": se esperaba un nodo de texto (línea " + reader.LineNumber.ToString() + ")");
      if (!reader.Read() || reader.NodeType != XmlNodeType.EndElement)
        throw new XmlException("se esperaba la etiqueta de cierre");
      if (str == null)
        return;
      this.id = str;
    }

    public override string ToString() => "<" + this.entidad + " id=\"" + this.id + "\">" + this.constante + "</" + this.entidad + ">";
  }
}
