// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BitGenerator, Version=37.0.2.5583, Culture=neutral, PublicKeyToken=70e4c26ef2031892
// MVID: D3922F89-E00A-4D10-8BC9-9309D5539F14
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.Win32.Scar.nxii-31823040d8ccb20eab0b8653d01af370a6537017e69ead69f6f7b73d6ef7ac14.exe

using \u0004;
using \u000F;
using \u0010;
using \u0015;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0015
{
  internal abstract class \u0013 : 
    IEnumerable,
    IEnumerable<\u0013>,
    \u0008<\u0013>,
    ICloneable,
    \u0001
  {
    internal \u0011 \u0001;
    internal \u0013 \u0001;
    internal \u0013 \u0002;
    internal object \u0001;
    internal static readonly JTokenType[] \u0001;
    internal static readonly JTokenType[] \u0002;
    internal static readonly JTokenType[] \u0003;
    internal static readonly JTokenType[] \u0004;
    internal static readonly JTokenType[] \u0005;
    internal static readonly JTokenType[] \u0006;
    internal static readonly JTokenType[] \u0007;
    internal static readonly JTokenType[] \u0008;
    private static readonly JTokenType[] \u000E;
    [NonSerialized]
    internal static GetString \u008C;

    [SpecialName]
    public \u0011 \u0001() => this.\u0001;

    internal abstract \u0013 \u0001();

    [SpecialName]
    public abstract JTokenType \u0001();

    [SpecialName]
    public abstract bool \u0001();

    internal \u0013()
    {
    }

    public virtual \u0013 this[[In] object obj0]
    {
      get => throw new InvalidOperationException(\u0002.\u0002.\u0001(\u0013.\u008C(26982), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u0017\u0004((object) this)));
      [param: In] set => throw new InvalidOperationException(\u0002.\u0002.\u0001(\u0013.\u008C(27027), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u0017\u0004((object) this)));
    }

    public virtual \u0001 \u0001<\u0001>([In] object obj0)
    {
      \u0001 obj1;
      while (true)
      {
        \u0013 obj2 = this[obj0];
        if (true)
        {
          if (obj2 != null)
            return \u0014.\u0004.\u0001<\u0013, \u0001>(obj2);
          obj1 = default (\u0001);
          break;
        }
      }
      return obj1;
    }

    [SpecialName]
    public virtual \u0013 \u0002() => throw new InvalidOperationException(\u0002.\u0002.\u0001(\u0013.\u008C(26982), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u0017\u0004((object) this)));

    [SpecialName]
    public virtual \u0013 \u0003() => throw new InvalidOperationException(\u0002.\u0002.\u0001(\u0013.\u008C(26982), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0001\u0002.\u0017\u0004((object) this)));

    public virtual \u0008<\u0013> \u0001() => \u0008<\u0013>.\u0001;

    public abstract void \u0001([In] JsonWriter obj0, [In] \u0005.\u0005[] obj1);

    public override string ToString() => \u0014.\u0006.\u0001(\u0004.\u0002.\u0002, new \u0005.\u0005[0], this);

    [CLSCompliant(false)]
    [SpecialName]
    public static ushort \u0001([In] \u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0013.\u0002, (\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0013.\u008C(27068), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u0089\u0005.\u0084\u000E(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    [CLSCompliant(false)]
    [SpecialName]
    public static char \u0001([In] \u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0013.\u0007, (\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0013.\u008C(18223), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u008A\u0005.\u0086\u000E(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    [CLSCompliant(false)]
    [SpecialName]
    public static sbyte \u0001([In] \u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0013.\u0002, (\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0013.\u008C(27109), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u008B\u0005.\u0087\u000E(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    [CLSCompliant(false)]
    [SpecialName]
    public static ushort? \u0001([In] \u0013 obj0)
    {
      ushort? nullable;
      if (obj0 == null)
        nullable = new ushort?();
      else
        goto label_13;
label_12:
      return nullable;
label_13:
      \u0006.\u0005 obj1 = \u0014.\u0006.\u0001(obj0);
      if (obj1 != null)
      {
        int num = 1;
        int uint16;
        while (true)
        {
          JTokenType[] jtokenTypeArray = \u0013.\u0002;
          \u0006.\u0005 obj2 = obj1;
          if (\u0014.\u0006.\u0001(num != 0, jtokenTypeArray, (\u0013) obj2))
          {
            if (true)
            {
              if (obj1.\u0001 != null)
              {
                uint16 = (int) Convert.ToUInt16(obj1.\u0001, (IFormatProvider) CultureInfo.InvariantCulture);
                if (false)
                  num = uint16;
                else
                  goto label_11;
              }
              else
                break;
            }
            else
              goto label_12;
          }
          else
            goto label_5;
        }
        if (true)
          return new ushort?();
        goto label_12;
label_11:
        return new ushort?((ushort) uint16);
      }
label_5:
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0013.\u008C(27068), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    [CLSCompliant(false)]
    [SpecialName]
    public static sbyte? \u0001([In] \u0013 obj0)
    {
      sbyte? nullable;
      if (obj0 == null)
        nullable = new sbyte?();
      else
        goto label_13;
label_12:
      return nullable;
label_13:
      \u0006.\u0005 obj1 = \u0014.\u0006.\u0001(obj0);
      if (obj1 != null)
      {
        int num1 = 1;
        int num2;
        while (true)
        {
          JTokenType[] jtokenTypeArray = \u0013.\u0002;
          \u0006.\u0005 obj2 = obj1;
          if (\u0014.\u0006.\u0001(num1 != 0, jtokenTypeArray, (\u0013) obj2))
          {
            if (true)
            {
              if (obj1.\u0001 != null)
              {
                num2 = (int) Convert.ToSByte(obj1.\u0001, (IFormatProvider) CultureInfo.InvariantCulture);
                if (false)
                  num1 = num2;
                else
                  goto label_11;
              }
              else
                break;
            }
            else
              goto label_12;
          }
          else
            goto label_5;
        }
        if (true)
          return new sbyte?();
        goto label_12;
label_11:
        return new sbyte?((sbyte) num2);
      }
label_5:
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0013.\u008C(27109), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    [CLSCompliant(false)]
    [SpecialName]
    public static uint? \u0001([In] \u0013 obj0)
    {
      uint? nullable;
      if (obj0 == null)
        nullable = new uint?();
      else
        goto label_13;
label_12:
      return nullable;
label_13:
      \u0006.\u0005 obj1 = \u0014.\u0006.\u0001(obj0);
      if (obj1 != null)
      {
        int num = 1;
        int uint32;
        while (true)
        {
          JTokenType[] jtokenTypeArray = \u0013.\u0002;
          \u0006.\u0005 obj2 = obj1;
          if (\u0014.\u0006.\u0001(num != 0, jtokenTypeArray, (\u0013) obj2))
          {
            if (true)
            {
              if (obj1.\u0001 != null)
              {
                uint32 = (int) Convert.ToUInt32(obj1.\u0001, (IFormatProvider) CultureInfo.InvariantCulture);
                if (false)
                  num = uint32;
                else
                  goto label_11;
              }
              else
                break;
            }
            else
              goto label_12;
          }
          else
            goto label_5;
        }
        if (true)
          return new uint?();
        goto label_12;
label_11:
        return new uint?((uint) uint32);
      }
label_5:
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0013.\u008C(27150), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    [CLSCompliant(false)]
    [SpecialName]
    public static ulong? \u0001([In] \u0013 obj0)
    {
      if (obj0 == null)
        return new ulong?();
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj != null)
      {
        int num = 1;
        if (num != 0)
          num = \u0014.\u0006.\u0001(num != 0, \u0013.\u0002, (\u0013) obj) ? 1 : 0;
        if (num != 0)
          return obj.\u0001 == null ? new ulong?() : new ulong?(Convert.ToUInt64(obj.\u0001, (IFormatProvider) CultureInfo.InvariantCulture));
      }
      throw new ArgumentException(\u0002.\u0002.\u0001(\u0013.\u008C(27191), (IFormatProvider) CultureInfo.InvariantCulture, (object) \u0014.\u0006.\u0001(obj0)));
    }

    [CLSCompliant(false)]
    [SpecialName]
    public static uint \u0001([In] \u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0013.\u0002, (\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0013.\u008C(27150), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u008C\u0005.\u0088\u000E(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    [CLSCompliant(false)]
    [SpecialName]
    public static ulong \u0001([In] \u0013 obj0)
    {
      \u0006.\u0005 obj = \u0014.\u0006.\u0001(obj0);
      if (obj == null || !\u0014.\u0006.\u0001(false, \u0013.\u0002, (\u0013) obj))
        throw new ArgumentException(\u0002.\u0002.\u0001(\u0013.\u008C(27191), (IFormatProvider) \u0098.\u0002\u0004(), (object) \u0014.\u0006.\u0001(obj0)));
      return \u008D\u0005.\u0089\u000E(obj.\u0001, (IFormatProvider) \u0098.\u0002\u0004());
    }

    IEnumerator IEnumerable.\u0001() => (IEnumerator) ((IEnumerable<\u0013>) this).GetEnumerator();

    IEnumerator<\u0013> IEnumerable<\u0013>.\u0002() => this.\u0001().\u0001();

    [SpecialName]
    \u0008<\u0013> \u0008<\u0013>.\u0002([In] object obj0) => (\u0008<\u0013>) this[obj0];

    bool \u0001.\u0014() => this.\u0001<\u0013.\u0001>() != null;

    [SpecialName]
    int \u0001.\u0001()
    {
      \u0013.\u0001 obj = this.\u0001<\u0013.\u0001>();
      return obj == null ? 0 : obj.\u0001;
    }

    [SpecialName]
    int \u0001.\u0004()
    {
      \u0013.\u0001 obj = this.\u0001<\u0013.\u0001>();
      return obj == null ? 0 : obj.\u0002;
    }

    object ICloneable.\u0003() => (object) \u0014.\u0006.\u0001(this);

    public \u0001 \u0001<\u0001>() where \u0001 : class
    {
      if (true)
        goto label_12;
label_2:
      int index = 0;
      while (true)
      {
        int num1 = index;
        int num2 = objArray.Length;
        while (true)
        {
          int num3 = num2;
          if (false)
            num2 = num3;
          else if (num1 < num3)
          {
            object obj1 = objArray[index];
            if (obj1 != null)
            {
              if (obj1 is \u0001 obj2)
                return obj2;
              int num4 = index;
              num2 = 1;
              num1 = num4;
              break;
            }
            goto label_11;
          }
          else
            goto label_11;
        }
        index = num1 + num2;
      }
label_11:
      return default (\u0001);
label_12:
      if (this.\u0001 != null)
      {
        if (!(this.\u0001 is object[] objArray))
          return this.\u0001 as \u0001;
        goto label_2;
      }
      else
        goto label_11;
    }

    static \u0013()
    {
      Strings.CreateGetStringDelegate(typeof (\u0013));
      \u0013.\u0001 = new JTokenType[6]
      {
        JTokenType.Integer,
        JTokenType.Float,
        JTokenType.String,
        JTokenType.Comment,
        JTokenType.Raw,
        JTokenType.Boolean
      };
      \u0013.\u0002 = new JTokenType[6]
      {
        JTokenType.Integer,
        JTokenType.Float,
        JTokenType.String,
        JTokenType.Comment,
        JTokenType.Raw,
        JTokenType.Boolean
      };
      \u0013.\u0003 = new JTokenType[11]
      {
        JTokenType.Date,
        JTokenType.Integer,
        JTokenType.Float,
        JTokenType.String,
        JTokenType.Comment,
        JTokenType.Raw,
        JTokenType.Boolean,
        JTokenType.Bytes,
        JTokenType.Guid,
        JTokenType.TimeSpan,
        JTokenType.Uri
      };
      \u0013.\u0004 = new JTokenType[5]
      {
        JTokenType.String,
        JTokenType.Comment,
        JTokenType.Raw,
        JTokenType.Guid,
        JTokenType.Bytes
      };
      \u0013.\u0005 = new JTokenType[4]
      {
        JTokenType.String,
        JTokenType.Comment,
        JTokenType.Raw,
        JTokenType.TimeSpan
      };
      \u0013.\u0006 = new JTokenType[4]
      {
        JTokenType.String,
        JTokenType.Comment,
        JTokenType.Raw,
        JTokenType.Uri
      };
      \u0013.\u0007 = new JTokenType[5]
      {
        JTokenType.Integer,
        JTokenType.Float,
        JTokenType.String,
        JTokenType.Comment,
        JTokenType.Raw
      };
      \u0013.\u0008 = new JTokenType[4]
      {
        JTokenType.Date,
        JTokenType.String,
        JTokenType.Comment,
        JTokenType.Raw
      };
      \u0013.\u000E = new JTokenType[5]
      {
        JTokenType.Bytes,
        JTokenType.String,
        JTokenType.Comment,
        JTokenType.Raw,
        JTokenType.Integer
      };
    }

    internal sealed class \u0001
    {
      internal readonly int \u0001;
      internal readonly int \u0002;

      public \u0001([In] int obj0, [In] int obj1)
      {
        this.\u0001 = obj0;
        this.\u0002 = obj1;
      }
    }
  }
}
