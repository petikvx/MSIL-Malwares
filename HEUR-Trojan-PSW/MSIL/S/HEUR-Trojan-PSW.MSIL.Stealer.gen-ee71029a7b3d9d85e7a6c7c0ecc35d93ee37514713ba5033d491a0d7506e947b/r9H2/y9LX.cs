// Decompiled with JetBrains decompiler
// Type: r9H2.y9LX
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using Microsoft.VisualBasic.CompilerServices;
using s7Q;
using System;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace r9H2
{
  [DesignerGenerated]
  public class y9LX : Form
  {
    [AccessedThroughProperty("Ⴍ")]
    private ToolStripSeparator ႣႤ;
    [AccessedThroughProperty("Ⴐ")]
    private ToolStripMenuItem ႣႨ;
    [AccessedThroughProperty("Ⴅ")]
    private MenuStrip ႣႷ;
    [AccessedThroughProperty("Ⴓ")]
    private ToolStripMenuItem ႣႠ;
    [AccessedThroughProperty("Ⴄ")]
    private ToolStripMenuItem ႣႭ;
    [AccessedThroughProperty("Ⴀ")]
    private ToolStripMenuItem ႣႼ;
    [AccessedThroughProperty("ႭႷ")]
    private ToolStripMenuItem ႤႣ;
    [AccessedThroughProperty("ႭႭ")]
    private ToolStripMenuItem ႤႤ;
    private int ႤႷ;
    private r5G.Qm2 Ⴅ = new r5G.Qm2();

    public y9LX()
    {
      this.Load += new EventHandler(this.n8F2);
      this.a5C1();
    }

    protected virtual void k8GR([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.Ⴅ.Ⴍ == null)
          return;
        this.Ⴅ.Ⴍ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void a5C1()
    {
      this.Ⴅ = new MenuStrip();
      this.Ⴐ = new ToolStripMenuItem();
      this.Ⴍ = new ToolStripSeparator();
      this.Ⴗ = new ToolStripMenuItem();
      this.Ⴓ = new ToolStripMenuItem();
      this.Ⴄ = new ToolStripMenuItem();
      this.Ⴈ = new ToolStripMenuItem();
      this.ႭႭ = new ToolStripMenuItem();
      this.Ⴃ = new ToolStripMenuItem();
      this.Ⴀ = new ToolStripMenuItem();
      this.Ⴜ = new ToolStripMenuItem();
      this.ႭႷ = new ToolStripMenuItem();
      this.ႭႰ = new ToolStripMenuItem();
      this.Ⴅ.SuspendLayout();
      this.SuspendLayout();
      this.Ⴅ.ImageScalingSize = new Size(24, 24);
      this.Ⴅ.Items.AddRange(new ToolStripItem[5]
      {
        (ToolStripItem) this.Ⴐ,
        (ToolStripItem) this.Ⴓ,
        (ToolStripItem) this.Ⴃ,
        (ToolStripItem) this.Ⴀ,
        (ToolStripItem) this.ႭႷ
      });
      this.Ⴅ.Location = new Point(0, 0);
      this.Ⴅ.Name = "MenuStrip";
      this.Ⴅ.Padding = new Padding(9, 2, 0, 2);
      this.Ⴅ.Size = new Size(948, 33);
      this.Ⴅ.TabIndex = 5;
      this.Ⴅ.Text = "MenuStrip";
      this.Ⴐ.DropDownItems.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.ႭႰ,
        (ToolStripItem) this.Ⴍ,
        (ToolStripItem) this.Ⴗ
      });
      this.Ⴐ.ImageTransparentColor = SystemColors.ActiveBorder;
      this.Ⴐ.Name = "FileMenu";
      this.Ⴐ.Size = new Size(50, 29);
      this.Ⴐ.Text = "&File";
      this.Ⴍ.Name = "ToolStripSeparator5";
      this.Ⴍ.Size = new Size(249, 6);
      this.Ⴗ.Name = "ExitToolStripMenuItem";
      this.Ⴗ.ShortcutKeys = Keys.X | Keys.Control;
      this.Ⴗ.Size = new Size(252, 30);
      this.Ⴗ.Text = "E&xit";
      this.Ⴓ.DropDownItems.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.Ⴄ,
        (ToolStripItem) this.Ⴈ,
        (ToolStripItem) this.ႭႭ
      });
      this.Ⴓ.Name = "AccountManagementToolStripMenuItem";
      this.Ⴓ.Size = new Size(199, 29);
      this.Ⴓ.Text = "Account Management";
      this.Ⴄ.Name = "AddNewHRToolStripMenuItem";
      this.Ⴄ.ShortcutKeys = Keys.A | Keys.Control;
      this.Ⴄ.Size = new Size(297, 30);
      this.Ⴄ.Text = "Add New HR";
      this.Ⴈ.Name = "UpdateHRFetailsToolStripMenuItem";
      this.Ⴈ.ShortcutKeys = Keys.M | Keys.Control;
      this.Ⴈ.Size = new Size(297, 30);
      this.Ⴈ.Text = "HR Management";
      this.ႭႭ.Name = "ReportStaffToolStripMenuItem";
      this.ႭႭ.ShortcutKeys = Keys.R | Keys.Control;
      this.ႭႭ.Size = new Size(297, 30);
      this.ႭႭ.Text = "Report (Staff)";
      this.Ⴃ.Name = "TimeAndAttendanceToolStripMenuItem";
      this.Ⴃ.ShortcutKeys = Keys.T | Keys.Control;
      this.Ⴃ.Size = new Size(192, 29);
      this.Ⴃ.Text = "Time and Attendance";
      this.Ⴀ.DropDownItems.AddRange(new ToolStripItem[1]
      {
        (ToolStripItem) this.Ⴜ
      });
      this.Ⴀ.Name = "ViewLeaveToolStripMenuItem";
      this.Ⴀ.Size = new Size(110, 29);
      this.Ⴀ.Text = "&View Leave";
      this.Ⴜ.Name = "ViewTheLeaveToolStripMenuItem";
      this.Ⴜ.ShortcutKeys = Keys.L | Keys.Control;
      this.Ⴜ.Size = new Size(271, 30);
      this.Ⴜ.Text = "View the Leave";
      this.ႭႷ.Name = "LogOutToolStripMenuItem";
      this.ႭႷ.ShortcutKeys = Keys.O | Keys.Control;
      this.ႭႷ.Size = new Size(89, 29);
      this.ႭႷ.Text = "Log Out";
      this.ႭႰ.Name = "HomepageToolStripMenuItem";
      this.ႭႰ.Size = new Size(252, 30);
      this.ႭႰ.Text = "&Homepage";
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(948, 698);
      this.Controls.Add((Control) this.Ⴅ);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.IsMdiContainer = true;
      this.MainMenuStrip = this.Ⴅ;
      this.Margin = new Padding(4, 5, 4, 5);
      this.Name = "ႥႭ";
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "MDIManager";
      this.Ⴅ.ResumeLayout(false);
      this.Ⴅ.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual ToolStripMenuItem Ⴗ
    {
      get => this.Ⴅ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Xj2w);
        ToolStripDropDownItem ⴈ1 = (ToolStripDropDownItem) this.Ⴅ.Ⴈ;
        if (ⴈ1 is ToolStripMenuItem)
          (ⴈ1 as ToolStripMenuItem).Click -= multicastDelegate as EventHandler;
        this.Ⴅ.Ⴈ = (ToolStripDropDownItem) value as ToolStripMenuItem;
        ToolStripDropDownItem ⴈ2 = (ToolStripDropDownItem) this.Ⴅ.Ⴈ;
        if ((ToolStripMenuItem) ⴈ2 == null)
          return;
        ⴈ2.Click += (EventHandler) multicastDelegate;
      }
    }

    internal virtual ToolStripSeparator Ⴍ
    {
      get => this.ႣႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႣႤ = value;
    }

    internal virtual ToolStripMenuItem Ⴐ
    {
      get => this.ႣႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႣႨ = value;
    }

    internal virtual MenuStrip Ⴅ
    {
      get => this.ႣႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႣႷ = value;
    }

    internal virtual ToolStripMenuItem Ⴓ
    {
      get => this.ႣႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႣႠ = value;
    }

    internal virtual ToolStripMenuItem Ⴈ
    {
      get => this.Ⴅ.Ⴄ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Ne7c);
        object ⴄ1 = (object) this.Ⴅ.Ⴄ;
        if ((ToolStripMenuItem) ⴄ1 != null)
          ((ToolStripItem) ⴄ1).Click -= (EventHandler) multicastDelegate;
        this.Ⴅ.Ⴄ = (ToolStripDropDownItem) value as ToolStripMenuItem;
        object ⴄ2 = (object) this.Ⴅ.Ⴄ;
        if ((ToolStripMenuItem) ⴄ2 == null)
          return;
        ((ToolStripItem) ⴄ2).Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem Ⴄ
    {
      get => this.ႣႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.x9FG);
        ToolStripDropDownItem ⴃⴍ1 = (ToolStripDropDownItem) this.ႣႭ;
        if ((ToolStripMenuItem) ⴃⴍ1 != null)
          ⴃⴍ1.Click -= (EventHandler) multicastDelegate;
        this.ႣႭ = value;
        ToolStripDropDownItem ⴃⴍ2 = (ToolStripDropDownItem) this.ႣႭ;
        if (!(ⴃⴍ2 is ToolStripMenuItem))
          return;
        (ⴃⴍ2 as ToolStripMenuItem).Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem Ⴃ
    {
      get => this.Ⴅ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.z3XT);
        ToolStripDropDownItem ⴀ1 = (ToolStripDropDownItem) this.Ⴅ.Ⴀ;
        if (ⴀ1 is ToolStripMenuItem)
          ⴀ1.Click -= multicastDelegate as EventHandler;
        this.Ⴅ.Ⴀ = (ToolStripDropDownItem) value as ToolStripMenuItem;
        ToolStripDropDownItem ⴀ2 = (ToolStripDropDownItem) this.Ⴅ.Ⴀ;
        if (!(ⴀ2 is ToolStripMenuItem))
          return;
        ⴀ2.Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem Ⴀ
    {
      get => this.ႣႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႣႼ = value;
    }

    internal virtual ToolStripMenuItem Ⴜ
    {
      get => this.Ⴅ.Ⴗ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Jj0t);
        object ⴗ1 = (object) this.Ⴅ.Ⴗ;
        if ((ToolStripMenuItem) ⴗ1 != null)
          (ⴗ1 as ToolStripMenuItem).Click -= (EventHandler) multicastDelegate;
        this.Ⴅ.Ⴗ = (object) value as ToolStripMenuItem;
        object ⴗ2 = (object) this.Ⴅ.Ⴗ;
        if ((ToolStripMenuItem) ⴗ2 == null)
          return;
        (ⴗ2 as ToolStripMenuItem).Click += (EventHandler) multicastDelegate;
      }
    }

    internal virtual ToolStripMenuItem ႭႷ
    {
      get => this.ႤႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Yq28);
        object ⴄⴃ1 = (object) this.ႤႣ;
        if (ⴄⴃ1 is ToolStripMenuItem)
          ((ToolStripItem) ⴄⴃ1).Click -= (EventHandler) multicastDelegate;
        this.ႤႣ = value;
        object ⴄⴃ2 = (object) this.ႤႣ;
        if (!(ⴄⴃ2 is ToolStripMenuItem))
          return;
        (ⴄⴃ2 as ToolStripMenuItem).Click += (EventHandler) multicastDelegate;
      }
    }

    internal virtual ToolStripMenuItem ႭႭ
    {
      get => this.ႤႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Ey9e);
        ToolStripDropDownItem ⴄⴄ1 = (ToolStripDropDownItem) this.ႤႤ;
        if (ⴄⴄ1 is ToolStripMenuItem)
          ⴄⴄ1.Click -= obj as EventHandler;
        this.ႤႤ = value;
        ToolStripDropDownItem ⴄⴄ2 = (ToolStripDropDownItem) this.ႤႤ;
        if ((ToolStripMenuItem) ⴄⴄ2 == null)
          return;
        ⴄⴄ2.Click += obj as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem ႭႰ
    {
      get => this.Ⴅ.Ⴅ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Ao1x);
        object ⴅ1 = (object) this.Ⴅ.Ⴅ;
        if (ⴅ1 is ToolStripMenuItem)
          (ⴅ1 as ToolStripMenuItem).Click -= (EventHandler) multicastDelegate;
        this.Ⴅ.Ⴅ = value;
        object ⴅ2 = (object) this.Ⴅ.Ⴅ;
        if (!(ⴅ2 is ToolStripMenuItem))
          return;
        ((ToolStripItem) ⴅ2).Click += multicastDelegate as EventHandler;
      }
    }

    private void n8F2([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴄ.Enabled = true;
      this.Ⴈ.Enabled = true;
      object obj = (object) new Form();
      Array mdiChildren = (Array) this.MdiChildren;
      int index = 0;
      while (index < (mdiChildren as Form[]).Length)
      {
        ContainerControl containerControl = (ContainerControl) ((Form[]) mdiChildren)[index];
        if ((Form) obj != (Form) containerControl)
          (containerControl as Form).Close();
        checked { ++index; }
      }
      object ⴀ = (object) En6.Ⴈ.Ⴀ;
      ((Form) ⴀ).MdiParent = (Form) this;
      // ISSUE: variable of a reference type
      int& local;
      // ISSUE: explicit reference operation
      int num = checked (^(local = ref this.ႤႷ) + 1);
      local = num;
      ((Control) ⴀ).Dock = DockStyle.Fill;
      ((Control) ⴀ).Show();
      this.Text = "Human Resource Management System - ";
    }

    public void m5E6([In] Form obj0)
    {
      Array mdiChildren = (Array) this.MdiChildren;
      int index = 0;
      while (index < (mdiChildren as Form[]).Length)
      {
        ContainerControl containerControl = (ContainerControl) (mdiChildren as Form[])[index];
        if (obj0 != (Form) containerControl)
          ((Form) containerControl).Close();
        checked { ++index; }
      }
      // ISSUE: variable of a reference type
      int& local;
      // ISSUE: explicit reference operation
      int num = checked (^(local = ref this.ႤႷ) + 1);
      local = num;
      obj0.MdiParent = (Form) this;
      obj0.Dock = DockStyle.Fill;
      obj0.Show();
    }

    private void z3XT([In] object obj0, [In] EventArgs obj1) => this.m5E6((Form) En6.Ⴈ.Ⴄ);

    private void Jj0t([In] object obj0, [In] EventArgs obj1) => this.m5E6((Form) En6.Ⴈ.Ⴀ);

    private void x9FG([In] object obj0, [In] EventArgs obj1) => this.m5E6((Form) En6.Ⴈ.Ⴃ);

    private void Ne7c([In] object obj0, [In] EventArgs obj1) => this.m5E6((Form) En6.Ⴈ.Ⴗ);

    private void d2C5([In] object obj0, [In] EventArgs obj1) => this.m5E6((Form) En6.Ⴈ.Ⴗ);

    private void Yq28([In] object obj0, [In] EventArgs obj1) => this.Close();

    private void Ey9e([In] object obj0, [In] EventArgs obj1) => this.m5E6((Form) En6.Ⴈ.Ⴀ);

    private void Xj2w([In] object obj0, [In] EventArgs obj1) => this.Close();

    private void Ao1x([In] object obj0, [In] EventArgs obj1) => this.m5E6((Form) En6.Ⴈ.Ⴀ);

    internal static int o1BE([In] int obj0, [In] int obj1) => obj0 % obj1;
  }
}
