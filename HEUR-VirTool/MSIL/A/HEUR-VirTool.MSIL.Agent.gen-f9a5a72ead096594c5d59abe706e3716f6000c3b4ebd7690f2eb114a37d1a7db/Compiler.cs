// Decompiled with JetBrains decompiler
// Type: CustomWindowsForm.Compiler
// Assembly: Yashma ransomware builder v1.2, Version=2.0.0.1, Culture=neutral, PublicKeyToken=null
// MVID: 22C18137-3576-4359-994F-BB1A6613DCFC
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-VirTool.MSIL.Agent.gen-f9a5a72ead096594c5d59abe706e3716f6000c3b4ebd7690f2eb114a37d1a7db.exe

using Microsoft.CSharp;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using System.Windows.Forms;

namespace CustomWindowsForm
{
  public class Compiler
  {
    public Compiler(string sourceCode, string savePath, string iconLocation)
    {
      string[] assemblyNames = new string[7]
      {
        "System.dll",
        "System.Linq.dll",
        "System.Windows.Forms.dll",
        "System.Text.RegularExpressions.dll",
        "System.Runtime.InteropServices.dll",
        "System.ServiceProcess.dll",
        "System.Security.dll"
      };
      Dictionary<string, string> providerOptions = new Dictionary<string, string>()
      {
        {
          "CompilerVersion",
          "v4.0"
        }
      };
      string str = "/target:winexe /platform:anycpu /optimize+ ";
      if (iconLocation != "")
        str = str + "/win32icon:" + iconLocation;
      using (CSharpCodeProvider csharpCodeProvider = new CSharpCodeProvider((IDictionary<string, string>) providerOptions))
      {
        CompilerParameters options = new CompilerParameters(assemblyNames)
        {
          GenerateExecutable = true,
          GenerateInMemory = false,
          OutputAssembly = savePath,
          CompilerOptions = str,
          TreatWarningsAsErrors = false,
          IncludeDebugInformation = false
        };
        CompilerResults compilerResults = csharpCodeProvider.CompileAssemblyFromSource(options, sourceCode);
        if (compilerResults.Errors.Count > 0)
        {
          foreach (CompilerError error in (CollectionBase) compilerResults.Errors)
          {
            int num = (int) MessageBox.Show(string.Format("{0}\nLine: {1} - Column: {2}\nFile: {3}", (object) error.ErrorText, (object) error.Line, (object) error.Column, (object) error.FileName));
          }
        }
        else
        {
          int num1 = (int) MessageBox.Show("Done!");
        }
      }
    }
  }
}
