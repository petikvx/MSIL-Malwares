// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: SecurityContextSwitch, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: B550A3E4-7AB3-42E5-BA1E-9838306CED9A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-633b443e56df746071e4f5c91d3f721ff0886afac579db94deaef37dc64fde58.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = -707613585;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1197431428)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -123423678 ^ 1723208752;
            continue;
          case 3:
            this.m_Key = (string) null;
            num1 = (int) num2 * -1167543689 ^ -1124746016;
            continue;
          case 4:
            this.m_Node = aNode;
            num1 = (int) num2 * -1762450229 ^ 1613284093;
            continue;
          case 5:
            num1 = (int) num2 * 1282492794 ^ -2019750848;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
      this.m_Node = aNode;
      this.m_Key = aKey;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -494074007;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1901985744)) % 10U)
        {
          case 0:
            num1 = (int) num2 * 87604472 ^ 887716032;
            continue;
          case 1:
            flag = this.m_Key == null;
            num1 = (int) num2 * -1647294731 ^ 979193612;
            continue;
          case 2:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = -515554567;
            continue;
          case 3:
            num1 = (int) num2 * 1772713541 ^ -1115185558;
            continue;
          case 4:
            goto label_1;
          case 5:
            int num3 = !flag ? -1769068873 : (num3 = -1108809846);
            num1 = num3 ^ (int) num2 * 1325208391;
            continue;
          case 6:
            num1 = (int) num2 * -84264971 ^ -1189669260;
            continue;
          case 7:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 1171919375 ^ 1201520995;
            continue;
          case 9:
            num1 = (int) num2 * 199668439 ^ -654690753;
            continue;
          default:
            goto label_11;
        }
      }
label_11:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1744006464;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2061212355)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1972314985 ^ -744883566;
              continue;
            case 2:
              goto label_1;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 101288480 ^ -1085104481;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -2006090905;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1626720806)) % 7U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 1459073609 ^ -354128053;
              continue;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * -1040225520 ^ 490485390;
              continue;
            case 3:
              goto label_1;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -2067005235 ^ -829009008;
              continue;
            case 5:
              aVal.Add(value);
              num1 = (int) num2 * 644197549 ^ -2015338983;
              continue;
            case 6:
              num1 = (int) num2 * -1117286697 ^ 427926668;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1085896703;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -131985205)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = (int) num2 * 1276723978 ^ -165478148;
              continue;
            case 3:
              num1 = (int) num2 * -1024071139 ^ 988005077;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 884579581;
        JSONClass aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 917301793)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              aVal = new JSONClass();
              num1 = (int) num2 * -959601240 ^ -548167817;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -305135041 ^ 1825038269;
              continue;
            case 3:
              goto label_1;
            case 4:
              aVal.Add(aKey, value);
              num1 = (int) num2 * -1381720551 ^ -137534518;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = -564480315;
      JSONArray aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1869590190)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 938143195 ^ 1238463401;
            continue;
          case 3:
            aVal.Add(aItem);
            num1 = (int) num2 * -2089624169 ^ 1688169849;
            continue;
          case 4:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 957007513 ^ -765978226;
            continue;
          case 5:
            aVal = new JSONArray();
            num1 = (int) num2 * -308696989 ^ 176644580;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = -6998069;
      JSONClass aVal;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1331927654)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            aVal = new JSONClass();
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * 1096501354 ^ -898980747;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.Set((JSONNode) aVal);
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 893333980;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1307518264)) % 7U)
        {
          case 0:
            num1 = (int) num2 * 1922002330 ^ -1669546816;
            continue;
          case 1:
            num1 = (int) num2 * 136204633 ^ 1828344534;
            continue;
          case 2:
            flag = (object) a == b;
            num1 = 1451654989;
            continue;
          case 3:
            flag = true;
            num1 = (int) num2 * 901472383 ^ -856696765;
            continue;
          case 4:
            int num3 = b != null ? -623958410 : (num3 = -2044007027);
            num1 = num3 ^ (int) num2 * -1555368879;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_8:
      return flag;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = -1238067592;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -205115947)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = !(a == b);
            num1 = (int) num2 * 1809345458 ^ 31946731;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
      bool flag1 = obj == null;
label_1:
      int num1 = -595590153;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -174567117)) % 6U)
        {
          case 0:
            flag2 = (object) this == obj;
            num1 = -2076388886;
            continue;
          case 1:
            num1 = (int) num2 * -1809870666 ^ -907150802;
            continue;
          case 2:
            goto label_1;
          case 4:
            int num3 = flag1 ? 544799566 : (num3 = 764930513);
            num1 = num3 ^ (int) num2 * 782307502;
            continue;
          case 5:
            flag2 = true;
            num1 = (int) num2 * -288421191 ^ 1118545589;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = 1147945355;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2075024640)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1148437143 ^ 1119350507;
            continue;
          case 3:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * 1262272920 ^ -845187434;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString()
    {
      string str = "";
label_1:
      int num1 = 1930441793;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1435069241)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 253241122 ^ 1977333757;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1646967616;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2041212650)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            str = "";
            num1 = (int) num2 * 252665377 ^ 1953879871;
            continue;
          case 3:
            num1 = (int) num2 * -1349248541 ^ 580857078;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = 746357444;
        JSONData aVal;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1783827610)) % 5U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1625411280 ^ 434870217;
              continue;
            case 3:
              aVal = new JSONData(0);
              num1 = (int) num2 * 97932114 ^ -962600100;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              asInt = 0;
              num1 = (int) num2 * -2030012244 ^ 507952860;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = 921322789;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 280349128)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1752707821 ^ 654693084;
              continue;
            case 2:
              goto label_3;
            case 3:
              num1 = (int) num2 * 235844559 ^ -2100177825;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override float AsFloat
    {
      get
      {
        this.Set((JSONNode) new JSONData(0.0f));
label_1:
        int num1 = 1256946959;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 430452616)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -759630352 ^ 1483164529;
              continue;
            case 2:
              goto label_1;
            case 3:
              asFloat = 0.0f;
              num1 = (int) num2 * -213787080 ^ -728432268;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 281624966;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 804733161)) % 5U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 525255570 ^ -1821309112;
              continue;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * 523735511 ^ -1438365119;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * -2145868760 ^ 580718548;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override double AsDouble
    {
      get
      {
        this.Set((JSONNode) new JSONData(0.0));
label_1:
        int num1 = 224483364;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1047888133)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              asDouble = 0.0;
              num1 = (int) num2 * 1324052970 ^ 2081071528;
              continue;
            case 3:
              num1 = (int) num2 * -1426196506 ^ -1614637083;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1935917089;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -561955442)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * 1625515582 ^ 541592975;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override bool AsBool
    {
      get
      {
        JSONData aVal = new JSONData(false);
label_1:
        int num1 = -122663056;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1205211559)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              asBool = false;
              num1 = (int) num2 * -1575929635 ^ -1715307509;
              continue;
            case 3:
              num1 = (int) num2 * -606134771 ^ 384587668;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asBool;
      }
      set
      {
        this.Set((JSONNode) new JSONData(value));
label_1:
        int num1 = -1751041594;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -174049147)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -1835601217 ^ -1741228440;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 577345581;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1507867000)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 456718754 ^ -1491668492;
              continue;
            case 1:
              num1 = (int) num2 * 1689246581 ^ -702794646;
              continue;
            case 2:
              goto label_1;
            case 4:
              asArray = aVal;
              num1 = (int) num2 * -1323435401 ^ 1739689923;
              continue;
            case 5:
              aVal = new JSONArray();
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 567330907 ^ 826149363;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = 1064979542;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1059488513)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              asObject = aVal;
              num1 = (int) num2 * 265349441 ^ -2080428158;
              continue;
            case 3:
              num1 = (int) num2 * -1798986859 ^ -1438954607;
              continue;
            case 4:
              num1 = (int) num2 * 169331121 ^ -2143641491;
              continue;
            case 5:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 388085230 ^ -904520594;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asObject;
      }
    }
  }
}
