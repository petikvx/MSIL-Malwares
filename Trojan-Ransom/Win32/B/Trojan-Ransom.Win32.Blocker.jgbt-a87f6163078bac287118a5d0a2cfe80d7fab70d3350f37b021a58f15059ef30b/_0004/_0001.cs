// Decompiled with JetBrains decompiler
// Type: .
// Assembly: tunnel, Version=5.33.30.2, Culture=neutral, PublicKeyToken=c03e3aaf025faf44
// MVID: A9BB91E8-EB42-44AA-8017-DD55B6CE8F16
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.jgbt-a87f6163078bac287118a5d0a2cfe80d7fab70d3350f37b021a58f15059ef30b.exe

using \u0001;
using \u0003;
using Microsoft.VisualBasic.ApplicationServices;
using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;

namespace \u0004
{
  internal sealed class \u0001
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;
    private static readonly \u0004.\u0001.\u0002<\u0003.\u0003> \u0001;
    private static readonly \u0004.\u0001.\u0002<\u0002> \u0001;
    private static readonly \u0004.\u0001.\u0002<User> \u0001;
    private static readonly \u0004.\u0001.\u0002<\u0004.\u0001.\u0001> \u0001;

    [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode, PreserveSig = false)]
    [return: MarshalAs(UnmanagedType.Bool)]
    private static extern bool \u0006([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] ref bool _param2);

    static \u0001()
    {
      \u0002.\u0002(typeof (\u0004.\u0001));
      bool flag = false;
      Assembly executingAssembly = Assembly.GetExecutingAssembly();
      \u0004.\u0001.\u0006(executingAssembly.Location, true, ref flag);
      if (!flag || !executingAssembly.FullName.EndsWith(\u0004.\u0001.\u0001(205)))
        throw new SecurityException(\u0004.\u0001.\u0001(230));
      \u0004.\u0001.\u0001 = new \u0004.\u0001.\u0002<\u0003.\u0003>();
      \u0004.\u0001.\u0001 = new \u0004.\u0001.\u0002<\u0002>();
      \u0004.\u0001.\u0001 = new \u0004.\u0001.\u0002<User>();
      \u0004.\u0001.\u0001 = new \u0004.\u0001.\u0002<\u0004.\u0001.\u0001>();
    }

    [SpecialName]
    internal static \u0003.\u0003 \u0002() => \u0004.\u0001.\u0001.\u0002();

    internal sealed class \u0001
    {
      [NonSerialized]
      internal static \u0001.\u0001 \u0001;

      static \u0001()
      {
        \u0002.\u0002(typeof (\u0004.\u0001.\u0001));
        bool flag = false;
        Assembly executingAssembly = Assembly.GetExecutingAssembly();
        \u0004.\u0001.\u0001.\u0008(executingAssembly.Location, true, ref flag);
        if (!flag || !executingAssembly.FullName.EndsWith(\u0004.\u0001.\u0001.\u0001(210)))
          throw new SecurityException(\u0004.\u0001.\u0001.\u0001(235));
      }

      [DllImport("mscorwks.dll", EntryPoint = "StrongNameSignatureVerificationEx", CharSet = CharSet.Unicode, PreserveSig = false)]
      [return: MarshalAs(UnmanagedType.Bool)]
      private static extern bool \u0008([MarshalAs(UnmanagedType.LPWStr)] string _param0, [MarshalAs(UnmanagedType.Bool)] bool _param1, [MarshalAs(UnmanagedType.Bool)] ref bool _param2);

      public override bool Equals([In] object obj0) => base.Equals(RuntimeHelpers.GetObjectValue(obj0));

      public override int GetHashCode() => base.GetHashCode();

      public override string ToString() => base.ToString();
    }

    [ComVisible(false)]
    internal sealed class \u0002<\u0001> where \u0001 : new()
    {
      [ThreadStatic]
      private static \u0001 \u0001;

      [SpecialName]
      internal \u0001 \u0002()
      {
        if ((object) \u0004.\u0001.\u0002<\u0001>.\u0001 == null)
          goto label_2;
label_1:
        return \u0004.\u0001.\u0002<\u0001>.\u0001;
label_2:
        \u0004.\u0001.\u0002<\u0001>.\u0001 = new \u0001();
        goto label_1;
      }
    }
  }
}
