// Decompiled with JetBrains decompiler
// Type: Ha03.o3HG
// Assembly: x7B, Version=2.6.1.0, Culture=neutral, PublicKeyToken=null
// MVID: 72C9F8B9-C30C-42FF-A20F-D6EFD67D7612
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan-Ransom.MSIL.Blocker.gen-2418d44a37a673ad3dd3925b67abd7857ec51ac2f4874231b9e01823ff825bf6.exe

using b1T3;
using Kw6;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.FileIO;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Ha03
{
  [DesignerGenerated]
  public class o3HG : Form
  {
    private IContainer components;
    private StreamReader readini;
    private StreamWriter writeini;
    private string clase;
    private string predeterminadaL;
    private string predeterminadaR;
    private int estabaActivadoHC;
    private string currentFile;
    private int numeroClases;
    private string TntSiNo;
    private object FrmMain;

    public o3HG()
    {
      this.FormClosing += new FormClosingEventHandler(this.n8DK);
      this.Load += new EventHandler(this.p4S7);
      this.Shown += new EventHandler(this.Gi51);
      this.estabaActivadoHC = 0;
      this.TntSiNo = "";
      this.Dm74();
    }

    [DebuggerNonUserCode]
    protected virtual void Qr61(bool Bk6a)
    {
      try
      {
        if (!Bk6a || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        this.Dispose(Bk6a);
      }
    }

    [DebuggerStepThrough]
    private void Dm74()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (o3HG));
      this.cbClass = new ComboBox();
      this.lblWeap1 = new Label();
      this.cbWeap1 = new ComboBox();
      this.cbWeap2 = new ComboBox();
      this.lblWeap2 = new Label();
      this.cbWeap3 = new ComboBox();
      this.lblWeap3 = new Label();
      this.checkWeap4 = new CheckBox();
      this.pictureWeap1 = new PictureBox();
      this.pictureWeap2 = new PictureBox();
      this.pictureWeap3 = new PictureBox();
      this.pictureWeap4 = new PictureBox();
      this.lblAmmo1 = new Label();
      this.cbAmmo1 = new ComboBox();
      this.cbAmmo2 = new ComboBox();
      this.lblAmmo2 = new Label();
      this.cbAmmo3 = new ComboBox();
      this.lblAmmo3 = new Label();
      this.cbAmmo4 = new ComboBox();
      this.lblAmmo4 = new Label();
      this.dialRuta = new FolderBrowserDialog();
      this.panelAmmo = new GroupBox();
      this.cbAmmo5 = new ComboBox();
      this.lblAmmo5 = new Label();
      this.groupClass = new GroupBox();
      this.btnDefault = new Button();
      this.groupWeap = new GroupBox();
      this.GroupBox1 = new GroupBox();
      this.panelRightHand = new GroupBox();
      this.panelLeftHand = new GroupBox();
      this.panelBothHands = new GroupBox();
      this.panelModificarArmas = new Panel();
      this.lblCreatingEditing = new Label();
      this.cbDefault = new ComboBox();
      this.Label2 = new Label();
      this.pictureClass = new PictureBox();
      this.PictureBox1 = new PictureBox();
      this.btnRestore = new Button();
      this.checkHC = new CheckBox();
      this.pictureHC = new PictureBox();
      this.TabControlMods = new TabControl();
      this.tabNewMod = new TabPage();
      this.btnLookMod = new Button();
      this.btnSetMod = new Button();
      this.btnSave = new Button();
      this.btnSaveAs = new Button();
      this.lbNewChar = new ListBox();
      this.btnNewMod = new Button();
      this.btnDeleteMod = new Button();
      this.lbLoadMod = new ComboBox();
      this.Label1 = new Label();
      this.btnHelp = new Button();
      this.HelpProvider1 = new HelpProvider();
      this.btnServerConfig = new Button();
      this.btnLaunchDS = new Button();
      this.Timer1 = new Timer(this.components);
      ((ISupportInitialize) this.pictureWeap1).BeginInit();
      ((ISupportInitialize) this.pictureWeap2).BeginInit();
      ((ISupportInitialize) this.pictureWeap3).BeginInit();
      ((ISupportInitialize) this.pictureWeap4).BeginInit();
      this.panelAmmo.SuspendLayout();
      this.groupClass.SuspendLayout();
      this.groupWeap.SuspendLayout();
      this.GroupBox1.SuspendLayout();
      this.panelRightHand.SuspendLayout();
      this.panelLeftHand.SuspendLayout();
      this.panelBothHands.SuspendLayout();
      this.panelModificarArmas.SuspendLayout();
      ((ISupportInitialize) this.pictureClass).BeginInit();
      ((ISupportInitialize) this.PictureBox1).BeginInit();
      ((ISupportInitialize) this.pictureHC).BeginInit();
      this.TabControlMods.SuspendLayout();
      this.tabNewMod.SuspendLayout();
      this.SuspendLayout();
      this.cbClass.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.cbClass.FormattingEnabled = true;
      this.cbClass.Items.AddRange(new object[13]
      {
        (object) "Aristocrat",
        (object) "Bandit",
        (object) "Barnsby",
        (object) "Doc",
        (object) "Gunslinger",
        (object) "Gunsmith",
        (object) "Juarez",
        (object) "Miner",
        (object) "Rifleman",
        (object) "Sniper",
        (object) "Thief",
        (object) "Trapper",
        (object) "Tribe Warrior"
      });
      this.cbClass.Location = new Point(13, 31);
      this.cbClass.Margin = new Padding(4);
      this.cbClass.Name = "cbClass";
      this.cbClass.Size = new Size(160, 24);
      this.cbClass.TabIndex = 1;
      this.lblWeap1.AutoSize = true;
      this.lblWeap1.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblWeap1.Location = new Point(237, 12);
      this.lblWeap1.Margin = new Padding(4, 0, 4, 0);
      this.lblWeap1.Name = "lblWeap1";
      this.lblWeap1.Size = new Size(80, 18);
      this.lblWeap1.TabIndex = 2;
      this.lblWeap1.Text = "Left Hand";
      this.cbWeap1.FormattingEnabled = true;
      this.cbWeap1.Items.AddRange(new object[9]
      {
        (object) "Cogswell",
        (object) "Derringer",
        (object) "Lemant",
        (object) "Peacemaker",
        (object) "SawOff",
        (object) "Schofield",
        (object) "Volcanic",
        (object) "Walker",
        (object) "None"
      });
      this.cbWeap1.Location = new Point(281, 44);
      this.cbWeap1.Margin = new Padding(4);
      this.cbWeap1.Name = "cbWeap1";
      this.cbWeap1.Size = new Size(259, 24);
      this.cbWeap1.TabIndex = 1;
      this.cbWeap2.FormattingEnabled = true;
      this.cbWeap2.Items.AddRange(new object[9]
      {
        (object) "Cogswell",
        (object) "Derringer",
        (object) "Lemant",
        (object) "Peacemaker",
        (object) "SawOff",
        (object) "Schofield",
        (object) "Volcanic",
        (object) "Walker",
        (object) "None"
      });
      this.cbWeap2.Location = new Point(8, 46);
      this.cbWeap2.Margin = new Padding(4);
      this.cbWeap2.Name = "cbWeap2";
      this.cbWeap2.Size = new Size(259, 24);
      this.cbWeap2.TabIndex = 0;
      this.lblWeap2.AutoSize = true;
      this.lblWeap2.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblWeap2.Location = new Point(95, 12);
      this.lblWeap2.Margin = new Padding(4, 0, 4, 0);
      this.lblWeap2.Name = "lblWeap2";
      this.lblWeap2.Size = new Size(91, 18);
      this.lblWeap2.TabIndex = 4;
      this.lblWeap2.Text = "Right Hand";
      this.cbWeap3.FormattingEnabled = true;
      this.cbWeap3.Items.AddRange(new object[7]
      {
        (object) "Bow",
        (object) "Remington",
        (object) "Sharps",
        (object) "Sharps Scope",
        (object) "Winchester",
        (object) "Winchester Scope",
        (object) "None"
      });
      this.cbWeap3.Location = new Point(24, 69);
      this.cbWeap3.Margin = new Padding(4);
      this.cbWeap3.Name = "cbWeap3";
      this.cbWeap3.Size = new Size(259, 24);
      this.cbWeap3.TabIndex = 0;
      this.lblWeap3.AutoSize = true;
      this.lblWeap3.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblWeap3.Location = new Point(133, 37);
      this.lblWeap3.Margin = new Padding(4, 0, 4, 0);
      this.lblWeap3.Name = "lblWeap3";
      this.lblWeap3.Size = new Size(93, 18);
      this.lblWeap3.TabIndex = 6;
      this.lblWeap3.Text = "Both hands";
      this.checkWeap4.AutoSize = true;
      this.checkWeap4.Location = new Point(88, 48);
      this.checkWeap4.Margin = new Padding(4);
      this.checkWeap4.Name = "checkWeap4";
      this.checkWeap4.Size = new Size(86, 21);
      this.checkWeap4.TabIndex = 0;
      this.checkWeap4.Text = "Dynamite";
      this.checkWeap4.UseVisualStyleBackColor = true;
      this.pictureWeap1.BorderStyle = BorderStyle.FixedSingle;
      this.pictureWeap1.ErrorImage = (Image) null;
      this.pictureWeap1.InitialImage = (Image) null;
      this.pictureWeap1.Location = new Point(281, 78);
      this.pictureWeap1.Margin = new Padding(4);
      this.pictureWeap1.Name = "pictureWeap1";
      this.pictureWeap1.Size = new Size(259, 95);
      this.pictureWeap1.SizeMode = PictureBoxSizeMode.Zoom;
      this.pictureWeap1.TabIndex = 10;
      this.pictureWeap1.TabStop = false;
      this.pictureWeap2.BorderStyle = BorderStyle.FixedSingle;
      this.pictureWeap2.ErrorImage = (Image) null;
      this.pictureWeap2.Location = new Point(8, 79);
      this.pictureWeap2.Margin = new Padding(4);
      this.pictureWeap2.Name = "pictureWeap2";
      this.pictureWeap2.Size = new Size(259, 95);
      this.pictureWeap2.SizeMode = PictureBoxSizeMode.Zoom;
      this.pictureWeap2.TabIndex = 11;
      this.pictureWeap2.TabStop = false;
      this.pictureWeap3.BorderStyle = BorderStyle.FixedSingle;
      this.pictureWeap3.ErrorImage = (Image) null;
      this.pictureWeap3.Location = new Point(24, 102);
      this.pictureWeap3.Margin = new Padding(4);
      this.pictureWeap3.Name = "pictureWeap3";
      this.pictureWeap3.Size = new Size(259, 95);
      this.pictureWeap3.SizeMode = PictureBoxSizeMode.Zoom;
      this.pictureWeap3.TabIndex = 12;
      this.pictureWeap3.TabStop = false;
      this.pictureWeap4.BorderStyle = BorderStyle.FixedSingle;
      this.pictureWeap4.Location = new Point(7, 78);
      this.pictureWeap4.Margin = new Padding(4);
      this.pictureWeap4.Name = "pictureWeap4";
      this.pictureWeap4.Size = new Size(259, 95);
      this.pictureWeap4.SizeMode = PictureBoxSizeMode.Zoom;
      this.pictureWeap4.TabIndex = 13;
      this.pictureWeap4.TabStop = false;
      this.lblAmmo1.AutoSize = true;
      this.lblAmmo1.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.lblAmmo1.Location = new Point(193, 26);
      this.lblAmmo1.Margin = new Padding(4, 0, 4, 0);
      this.lblAmmo1.Name = "lblAmmo1";
      this.lblAmmo1.Size = new Size(85, 17);
      this.lblAmmo1.TabIndex = 4;
      this.lblAmmo1.Text = "Pistol Ammo";
      this.cbAmmo1.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.cbAmmo1.FormattingEnabled = true;
      this.cbAmmo1.Items.AddRange(new object[8]
      {
        (object) "35",
        (object) "45",
        (object) "55",
        (object) "65",
        (object) "75",
        (object) "95",
        (object) "140",
        (object) "190"
      });
      this.cbAmmo1.Location = new Point(281, 22);
      this.cbAmmo1.Margin = new Padding(4);
      this.cbAmmo1.Name = "cbAmmo1";
      this.cbAmmo1.Size = new Size(64, 24);
      this.cbAmmo1.TabIndex = 1;
      this.cbAmmo2.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.cbAmmo2.FormattingEnabled = true;
      this.cbAmmo2.Items.AddRange(new object[8]
      {
        (object) "35",
        (object) "45",
        (object) "55",
        (object) "65",
        (object) "75",
        (object) "95",
        (object) "140",
        (object) "190"
      });
      this.cbAmmo2.Location = new Point(453, 22);
      this.cbAmmo2.Margin = new Padding(4);
      this.cbAmmo2.Name = "cbAmmo2";
      this.cbAmmo2.Size = new Size(64, 24);
      this.cbAmmo2.TabIndex = 18;
      this.lblAmmo2.AutoSize = true;
      this.lblAmmo2.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.lblAmmo2.Location = new Point(371, 26);
      this.lblAmmo2.Margin = new Padding(4, 0, 4, 0);
      this.lblAmmo2.Name = "lblAmmo2";
      this.lblAmmo2.Size = new Size(79, 17);
      this.lblAmmo2.TabIndex = 16;
      this.lblAmmo2.Text = "Rifle Ammo";
      this.cbAmmo3.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.cbAmmo3.FormattingEnabled = true;
      this.cbAmmo3.Items.AddRange(new object[8]
      {
        (object) "35",
        (object) "45",
        (object) "55",
        (object) "65",
        (object) "75",
        (object) "95",
        (object) "140",
        (object) "190"
      });
      this.cbAmmo3.Location = new Point(796, 22);
      this.cbAmmo3.Margin = new Padding(4);
      this.cbAmmo3.Name = "cbAmmo3";
      this.cbAmmo3.Size = new Size(64, 24);
      this.cbAmmo3.TabIndex = 20;
      this.lblAmmo3.AutoSize = true;
      this.lblAmmo3.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.lblAmmo3.Location = new Point(741, 26);
      this.lblAmmo3.Margin = new Padding(4, 0, 4, 0);
      this.lblAmmo3.Name = "lblAmmo3";
      this.lblAmmo3.Size = new Size(51, 17);
      this.lblAmmo3.TabIndex = 18;
      this.lblAmmo3.Text = "Arrows";
      this.cbAmmo4.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.cbAmmo4.FormattingEnabled = true;
      this.cbAmmo4.Items.AddRange(new object[5]
      {
        (object) "1",
        (object) "2",
        (object) "3",
        (object) "4",
        (object) "5"
      });
      this.cbAmmo4.Location = new Point(101, 22);
      this.cbAmmo4.Margin = new Padding(4);
      this.cbAmmo4.Name = "cbAmmo4";
      this.cbAmmo4.Size = new Size(64, 24);
      this.cbAmmo4.TabIndex = 21;
      this.lblAmmo4.AutoSize = true;
      this.lblAmmo4.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.lblAmmo4.Location = new Point(24, 26);
      this.lblAmmo4.Margin = new Padding(4, 0, 4, 0);
      this.lblAmmo4.Name = "lblAmmo4";
      this.lblAmmo4.Size = new Size(74, 17);
      this.lblAmmo4.TabIndex = 20;
      this.lblAmmo4.Text = "Dynamites";
      this.dialRuta.Description = "Select your CoJ Bound in Blood dedicated server folder.";
      this.dialRuta.ShowNewFolderButton = false;
      this.panelAmmo.Controls.Add((Control) this.cbAmmo5);
      this.panelAmmo.Controls.Add((Control) this.lblAmmo5);
      this.panelAmmo.Controls.Add((Control) this.cbAmmo4);
      this.panelAmmo.Controls.Add((Control) this.cbAmmo3);
      this.panelAmmo.Controls.Add((Control) this.lblAmmo4);
      this.panelAmmo.Controls.Add((Control) this.lblAmmo3);
      this.panelAmmo.Controls.Add((Control) this.cbAmmo2);
      this.panelAmmo.Controls.Add((Control) this.lblAmmo2);
      this.panelAmmo.Controls.Add((Control) this.cbAmmo1);
      this.panelAmmo.Controls.Add((Control) this.lblAmmo1);
      this.panelAmmo.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.panelAmmo.Location = new Point(135, 286);
      this.panelAmmo.Margin = new Padding(4);
      this.panelAmmo.Name = "panelAmmo";
      this.panelAmmo.Padding = new Padding(4);
      this.panelAmmo.Size = new Size(887, 54);
      this.panelAmmo.TabIndex = 24;
      this.panelAmmo.TabStop = false;
      this.panelAmmo.Text = "Ammunition";
      this.cbAmmo5.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.cbAmmo5.FormattingEnabled = true;
      this.cbAmmo5.Items.AddRange(new object[8]
      {
        (object) "35",
        (object) "45",
        (object) "55",
        (object) "65",
        (object) "75",
        (object) "95",
        (object) "140",
        (object) "190"
      });
      this.cbAmmo5.Location = new Point(652, 22);
      this.cbAmmo5.Margin = new Padding(4);
      this.cbAmmo5.Name = "cbAmmo5";
      this.cbAmmo5.Size = new Size(64, 24);
      this.cbAmmo5.TabIndex = 19;
      this.lblAmmo5.AutoSize = true;
      this.lblAmmo5.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.lblAmmo5.Location = new Point(544, 26);
      this.lblAmmo5.Margin = new Padding(4, 0, 4, 0);
      this.lblAmmo5.Name = "lblAmmo5";
      this.lblAmmo5.Size = new Size(104, 17);
      this.lblAmmo5.TabIndex = 22;
      this.lblAmmo5.Text = "Shotgun Ammo";
      this.groupClass.Controls.Add((Control) this.btnDefault);
      this.groupClass.Controls.Add((Control) this.cbClass);
      this.groupClass.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.groupClass.Location = new Point(585, 595);
      this.groupClass.Margin = new Padding(4);
      this.groupClass.Name = "groupClass";
      this.groupClass.Padding = new Padding(4);
      this.groupClass.Size = new Size(192, 132);
      this.groupClass.TabIndex = 25;
      this.groupClass.TabStop = false;
      this.groupClass.Text = "Class";
      this.groupClass.Visible = false;
      this.btnDefault.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnDefault.Location = new Point(13, 71);
      this.btnDefault.Margin = new Padding(4);
      this.btnDefault.Name = "btnDefault";
      this.btnDefault.Size = new Size(161, 53);
      this.btnDefault.TabIndex = 2;
      this.btnDefault.Text = "Set default weapons";
      this.btnDefault.UseVisualStyleBackColor = true;
      this.groupWeap.Controls.Add((Control) this.GroupBox1);
      this.groupWeap.Controls.Add((Control) this.panelBothHands);
      this.groupWeap.Controls.Add((Control) this.panelAmmo);
      this.groupWeap.Controls.Add((Control) this.panelModificarArmas);
      this.groupWeap.Location = new Point(8, 248);
      this.groupWeap.Margin = new Padding(4);
      this.groupWeap.Name = "groupWeap";
      this.groupWeap.Padding = new Padding(4);
      this.groupWeap.Size = new Size(1176, 352);
      this.groupWeap.TabIndex = 26;
      this.groupWeap.TabStop = false;
      this.GroupBox1.Controls.Add((Control) this.panelRightHand);
      this.GroupBox1.Controls.Add((Control) this.panelLeftHand);
      this.GroupBox1.Location = new Point(8, 44);
      this.GroupBox1.Margin = new Padding(4);
      this.GroupBox1.Name = "GroupBox1";
      this.GroupBox1.Padding = new Padding(4);
      this.GroupBox1.Size = new Size(861, 229);
      this.GroupBox1.TabIndex = 15;
      this.GroupBox1.TabStop = false;
      this.panelRightHand.Controls.Add((Control) this.pictureWeap2);
      this.panelRightHand.Controls.Add((Control) this.cbWeap2);
      this.panelRightHand.Controls.Add((Control) this.lblWeap2);
      this.panelRightHand.Location = new Point(569, 25);
      this.panelRightHand.Margin = new Padding(4);
      this.panelRightHand.Name = "panelRightHand";
      this.panelRightHand.Padding = new Padding(4);
      this.panelRightHand.Size = new Size(279, 186);
      this.panelRightHand.TabIndex = 15;
      this.panelRightHand.TabStop = false;
      this.panelLeftHand.Controls.Add((Control) this.pictureWeap4);
      this.panelLeftHand.Controls.Add((Control) this.pictureWeap1);
      this.panelLeftHand.Controls.Add((Control) this.checkWeap4);
      this.panelLeftHand.Controls.Add((Control) this.cbWeap1);
      this.panelLeftHand.Controls.Add((Control) this.lblWeap1);
      this.panelLeftHand.Location = new Point(11, 25);
      this.panelLeftHand.Margin = new Padding(4);
      this.panelLeftHand.Name = "panelLeftHand";
      this.panelLeftHand.Padding = new Padding(4);
      this.panelLeftHand.Size = new Size(549, 186);
      this.panelLeftHand.TabIndex = 14;
      this.panelLeftHand.TabStop = false;
      this.panelBothHands.Controls.Add((Control) this.pictureWeap3);
      this.panelBothHands.Controls.Add((Control) this.cbWeap3);
      this.panelBothHands.Controls.Add((Control) this.lblWeap3);
      this.panelBothHands.Location = new Point(880, 44);
      this.panelBothHands.Margin = new Padding(4);
      this.panelBothHands.Name = "panelBothHands";
      this.panelBothHands.Padding = new Padding(4);
      this.panelBothHands.Size = new Size(296, 229);
      this.panelBothHands.TabIndex = 14;
      this.panelBothHands.TabStop = false;
      this.panelModificarArmas.BorderStyle = BorderStyle.Fixed3D;
      this.panelModificarArmas.Controls.Add((Control) this.lblCreatingEditing);
      this.panelModificarArmas.Controls.Add((Control) this.cbDefault);
      this.panelModificarArmas.Controls.Add((Control) this.Label2);
      this.panelModificarArmas.Location = new Point(0, 5);
      this.panelModificarArmas.Margin = new Padding(4);
      this.panelModificarArmas.Name = "panelModificarArmas";
      this.panelModificarArmas.Size = new Size(1176, 346);
      this.panelModificarArmas.TabIndex = 31;
      this.lblCreatingEditing.AutoSize = true;
      this.lblCreatingEditing.Font = new Font("Microsoft Sans Serif", 11.89565f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.lblCreatingEditing.Location = new Point(198, 10);
      this.lblCreatingEditing.Margin = new Padding(4, 0, 4, 0);
      this.lblCreatingEditing.Name = "lblCreatingEditing";
      this.lblCreatingEditing.Size = new Size(447, 24);
      this.lblCreatingEditing.TabIndex = 29;
      this.lblCreatingEditing.Text = "Weapon Configuration Class: TRIBE WARRIOR";
      this.cbDefault.ForeColor = Color.White;
      this.cbDefault.FormattingEnabled = true;
      this.cbDefault.Items.AddRange(new object[3]
      {
        (object) "Both hands Weapon",
        (object) "Right Weapon + Left Weapon",
        (object) "Right Weapon + TNT"
      });
      this.cbDefault.Location = new Point(907, 9);
      this.cbDefault.Margin = new Padding(4);
      this.cbDefault.Name = "cbDefault";
      this.cbDefault.Size = new Size(249, 24);
      this.cbDefault.TabIndex = 0;
      this.Label2.AutoSize = true;
      this.Label2.Font = new Font("Microsoft Sans Serif", 8.139131f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Label2.Location = new Point(761, 13);
      this.Label2.Margin = new Padding(4, 0, 4, 0);
      this.Label2.Name = "Label2";
      this.Label2.Size = new Size(145, 17);
      this.Label2.TabIndex = 30;
      this.Label2.Text = "Respawn Weapons";
      this.pictureClass.BackgroundImage = (Image) componentResourceManager.GetObject("pictureClass.BackgroundImage");
      this.pictureClass.BackgroundImageLayout = ImageLayout.Stretch;
      this.pictureClass.BorderStyle = BorderStyle.FixedSingle;
      this.pictureClass.ErrorImage = (Image) null;
      this.pictureClass.Location = new Point(8, 9);
      this.pictureClass.Margin = new Padding(4);
      this.pictureClass.Name = "pictureClass";
      this.pictureClass.Size = new Size(233, 229);
      this.pictureClass.SizeMode = PictureBoxSizeMode.StretchImage;
      this.pictureClass.TabIndex = 27;
      this.pictureClass.TabStop = false;
      this.PictureBox1.BorderStyle = BorderStyle.FixedSingle;
      this.PictureBox1.Cursor = Cursors.Hand;
      this.PictureBox1.Image = (Image) componentResourceManager.GetObject("PictureBox1.Image");
      this.PictureBox1.Location = new Point(855, 9);
      this.PictureBox1.Margin = new Padding(4);
      this.PictureBox1.Name = "PictureBox1";
      this.PictureBox1.Size = new Size(329, 229);
      this.PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
      this.PictureBox1.TabIndex = 28;
      this.PictureBox1.TabStop = false;
      this.btnRestore.Location = new Point(948, 625);
      this.btnRestore.Margin = new Padding(4);
      this.btnRestore.Name = "btnRestore";
      this.btnRestore.Size = new Size(223, 43);
      this.btnRestore.TabIndex = 23;
      this.btnRestore.Text = "Restore original classes in game";
      this.btnRestore.UseVisualStyleBackColor = true;
      this.checkHC.AutoSize = true;
      this.checkHC.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.checkHC.Location = new Point(68, 638);
      this.checkHC.Margin = new Padding(4);
      this.checkHC.Name = "checkHC";
      this.checkHC.Size = new Size(144, 22);
      this.checkHC.TabIndex = 22;
      this.checkHC.Text = "Hardcore mode";
      this.checkHC.UseVisualStyleBackColor = true;
      this.pictureHC.Image = (Image) componentResourceManager.GetObject("pictureHC.Image");
      this.pictureHC.Location = new Point(9, 613);
      this.pictureHC.Margin = new Padding(4);
      this.pictureHC.Name = "pictureHC";
      this.pictureHC.Size = new Size(55, 62);
      this.pictureHC.SizeMode = PictureBoxSizeMode.Zoom;
      this.pictureHC.TabIndex = 35;
      this.pictureHC.TabStop = false;
      this.TabControlMods.Controls.Add((Control) this.tabNewMod);
      this.TabControlMods.Location = new Point(500, 11);
      this.TabControlMods.Margin = new Padding(4);
      this.TabControlMods.Name = "TabControlMods";
      this.TabControlMods.SelectedIndex = 0;
      this.TabControlMods.Size = new Size(347, 227);
      this.TabControlMods.TabIndex = 1;
      this.tabNewMod.Controls.Add((Control) this.btnLookMod);
      this.tabNewMod.Controls.Add((Control) this.btnSetMod);
      this.tabNewMod.Controls.Add((Control) this.btnSave);
      this.tabNewMod.Controls.Add((Control) this.btnSaveAs);
      this.tabNewMod.Controls.Add((Control) this.lbNewChar);
      this.tabNewMod.Location = new Point(4, 25);
      this.tabNewMod.Margin = new Padding(4);
      this.tabNewMod.Name = "tabNewMod";
      this.tabNewMod.Padding = new Padding(4);
      this.tabNewMod.Size = new Size(339, 198);
      this.tabNewMod.TabIndex = 0;
      this.tabNewMod.Text = "New Mod";
      this.tabNewMod.UseVisualStyleBackColor = true;
      this.btnLookMod.Location = new Point(216, 139);
      this.btnLookMod.Margin = new Padding(4);
      this.btnLookMod.Name = "btnLookMod";
      this.btnLookMod.Size = new Size(115, 47);
      this.btnLookMod.TabIndex = 37;
      this.btnLookMod.Text = "Look Mod ...";
      this.btnLookMod.UseVisualStyleBackColor = true;
      this.btnSetMod.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.btnSetMod.Location = new Point(216, 80);
      this.btnSetMod.Margin = new Padding(4);
      this.btnSetMod.Name = "btnSetMod";
      this.btnSetMod.Size = new Size(115, 50);
      this.btnSetMod.TabIndex = 6;
      this.btnSetMod.Text = "Set this mod ingame";
      this.btnSetMod.UseVisualStyleBackColor = true;
      this.btnSave.Location = new Point(216, 7);
      this.btnSave.Margin = new Padding(4);
      this.btnSave.Name = "btnSave";
      this.btnSave.Size = new Size(115, 28);
      this.btnSave.TabIndex = 4;
      this.btnSave.Text = "Save";
      this.btnSave.UseVisualStyleBackColor = true;
      this.btnSaveAs.Location = new Point(216, 44);
      this.btnSaveAs.Margin = new Padding(4);
      this.btnSaveAs.Name = "btnSaveAs";
      this.btnSaveAs.Size = new Size(115, 28);
      this.btnSaveAs.TabIndex = 5;
      this.btnSaveAs.Text = "Save Mod as";
      this.btnSaveAs.UseVisualStyleBackColor = true;
      this.lbNewChar.FormattingEnabled = true;
      this.lbNewChar.ItemHeight = 16;
      this.lbNewChar.Location = new Point(8, 7);
      this.lbNewChar.Margin = new Padding(4);
      this.lbNewChar.Name = "lbNewChar";
      this.lbNewChar.Size = new Size(196, 180);
      this.lbNewChar.TabIndex = 0;
      this.btnNewMod.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.btnNewMod.Location = new Point(250, 106);
      this.btnNewMod.Margin = new Padding(4);
      this.btnNewMod.Name = "btnNewMod";
      this.btnNewMod.Size = new Size(100, 28);
      this.btnNewMod.TabIndex = 2;
      this.btnNewMod.Text = "New Mod";
      this.btnNewMod.UseVisualStyleBackColor = true;
      this.btnDeleteMod.Location = new Point(374, 106);
      this.btnDeleteMod.Margin = new Padding(4);
      this.btnDeleteMod.Name = "btnDeleteMod";
      this.btnDeleteMod.Size = new Size(116, 28);
      this.btnDeleteMod.TabIndex = 3;
      this.btnDeleteMod.Text = "Delete Mod(s)";
      this.btnDeleteMod.UseVisualStyleBackColor = true;
      this.lbLoadMod.FormattingEnabled = true;
      this.lbLoadMod.Location = new Point(250, 52);
      this.lbLoadMod.Margin = new Padding(4);
      this.lbLoadMod.Name = "lbLoadMod";
      this.lbLoadMod.Size = new Size(240, 24);
      this.lbLoadMod.TabIndex = 36;
      this.Label1.AutoSize = true;
      this.Label1.Font = new Font("Microsoft Sans Serif", 9.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Label1.Location = new Point(330, 25);
      this.Label1.Margin = new Padding(4, 0, 4, 0);
      this.Label1.Name = "Label1";
      this.Label1.Size = new Size(79, 20);
      this.Label1.TabIndex = 37;
      this.Label1.Text = "My Mods";
      this.btnHelp.Location = new Point(323, 145);
      this.btnHelp.Margin = new Padding(4);
      this.btnHelp.Name = "btnHelp";
      this.btnHelp.Size = new Size(100, 28);
      this.btnHelp.TabIndex = 31;
      this.btnHelp.Text = "(F1) Help";
      this.btnHelp.UseVisualStyleBackColor = true;
      this.HelpProvider1.HelpNamespace = "CoJ Mods.chm";
      this.btnServerConfig.BackColor = Color.FromArgb(230, 235, 240);
      this.btnServerConfig.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnServerConfig.Location = new Point(377, 644);
      this.btnServerConfig.Margin = new Padding(4);
      this.btnServerConfig.Name = "btnServerConfig";
      this.btnServerConfig.Size = new Size(185, 55);
      this.btnServerConfig.TabIndex = 38;
      this.btnServerConfig.Text = "SERVER CONFIG";
      this.btnServerConfig.UseVisualStyleBackColor = false;
      this.btnServerConfig.Visible = false;
      this.btnLaunchDS.BackColor = Color.FromArgb(230, 235, 240);
      this.btnLaunchDS.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.btnLaunchDS.Location = new Point(377, 613);
      this.btnLaunchDS.Margin = new Padding(4);
      this.btnLaunchDS.Name = "btnLaunchDS";
      this.btnLaunchDS.Size = new Size(185, 55);
      this.btnLaunchDS.TabIndex = 39;
      this.btnLaunchDS.Text = "Launch Dedicated Server";
      this.btnLaunchDS.UseVisualStyleBackColor = false;
      this.btnLaunchDS.Visible = false;
      this.Timer1.Interval = 15000;
      this.AutoScaleDimensions = new SizeF(8f, 16f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(1193, 687);
      this.Controls.Add((Control) this.btnLaunchDS);
      this.Controls.Add((Control) this.btnServerConfig);
      this.Controls.Add((Control) this.btnHelp);
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.btnNewMod);
      this.Controls.Add((Control) this.btnDeleteMod);
      this.Controls.Add((Control) this.lbLoadMod);
      this.Controls.Add((Control) this.TabControlMods);
      this.Controls.Add((Control) this.pictureHC);
      this.Controls.Add((Control) this.checkHC);
      this.Controls.Add((Control) this.btnRestore);
      this.Controls.Add((Control) this.PictureBox1);
      this.Controls.Add((Control) this.pictureClass);
      this.Controls.Add((Control) this.groupWeap);
      this.Controls.Add((Control) this.groupClass);
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.KeyPreview = true;
      this.Margin = new Padding(4);
      this.MaximizeBox = false;
      this.MaximumSize = new Size(1557, 940);
      this.MinimumSize = new Size(1211, 733);
      this.Name = "frmArmas";
      this.HelpProvider1.SetShowHelp((Control) this, true);
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Modding CoJ2 for Dedicated Servers";
      ((ISupportInitialize) this.pictureWeap1).EndInit();
      ((ISupportInitialize) this.pictureWeap2).EndInit();
      ((ISupportInitialize) this.pictureWeap3).EndInit();
      ((ISupportInitialize) this.pictureWeap4).EndInit();
      this.panelAmmo.ResumeLayout(false);
      this.panelAmmo.PerformLayout();
      this.groupClass.ResumeLayout(false);
      this.groupWeap.ResumeLayout(false);
      this.GroupBox1.ResumeLayout(false);
      this.panelRightHand.ResumeLayout(false);
      this.panelRightHand.PerformLayout();
      this.panelLeftHand.ResumeLayout(false);
      this.panelLeftHand.PerformLayout();
      this.panelBothHands.ResumeLayout(false);
      this.panelBothHands.PerformLayout();
      this.panelModificarArmas.ResumeLayout(false);
      this.panelModificarArmas.PerformLayout();
      ((ISupportInitialize) this.pictureClass).EndInit();
      ((ISupportInitialize) this.PictureBox1).EndInit();
      ((ISupportInitialize) this.pictureHC).EndInit();
      this.TabControlMods.ResumeLayout(false);
      this.tabNewMod.ResumeLayout(false);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual ComboBox cbClass
    {
      get => this._cbClass;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Kb8m);
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.y3QB);
        ComboBox cbClass1 = this._cbClass;
        if (cbClass1 != null)
        {
          cbClass1.SelectedIndexChanged -= eventHandler;
          cbClass1.KeyPress -= pressEventHandler;
        }
        this._cbClass = value;
        ComboBox cbClass2 = this._cbClass;
        if (cbClass2 == null)
          return;
        cbClass2.SelectedIndexChanged += eventHandler;
        cbClass2.KeyPress += pressEventHandler;
      }
    }

    [field: AccessedThroughProperty("lblWeap1")]
    internal virtual Label lblWeap1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ComboBox cbWeap1
    {
      get => this._cbWeap1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.An3m);
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.y3QB);
        ComboBox cbWeap1_1 = this._cbWeap1;
        if (cbWeap1_1 != null)
        {
          cbWeap1_1.SelectedIndexChanged -= eventHandler;
          cbWeap1_1.KeyPress -= pressEventHandler;
        }
        this._cbWeap1 = value;
        ComboBox cbWeap1_2 = this._cbWeap1;
        if (cbWeap1_2 == null)
          return;
        cbWeap1_2.SelectedIndexChanged += eventHandler;
        cbWeap1_2.KeyPress += pressEventHandler;
      }
    }

    internal virtual ComboBox cbWeap2
    {
      get => this._cbWeap2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Dn6c);
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.y3QB);
        ComboBox cbWeap2_1 = this._cbWeap2;
        if (cbWeap2_1 != null)
        {
          cbWeap2_1.SelectedIndexChanged -= eventHandler;
          cbWeap2_1.KeyPress -= pressEventHandler;
        }
        this._cbWeap2 = value;
        ComboBox cbWeap2_2 = this._cbWeap2;
        if (cbWeap2_2 == null)
          return;
        cbWeap2_2.SelectedIndexChanged += eventHandler;
        cbWeap2_2.KeyPress += pressEventHandler;
      }
    }

    [field: AccessedThroughProperty("lblWeap2")]
    internal virtual Label lblWeap2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ComboBox cbWeap3
    {
      get => this._cbWeap3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Sm60);
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.y3QB);
        ComboBox cbWeap3_1 = this._cbWeap3;
        if (cbWeap3_1 != null)
        {
          cbWeap3_1.SelectedIndexChanged -= eventHandler;
          cbWeap3_1.KeyPress -= pressEventHandler;
        }
        this._cbWeap3 = value;
        ComboBox cbWeap3_2 = this._cbWeap3;
        if (cbWeap3_2 == null)
          return;
        cbWeap3_2.SelectedIndexChanged += eventHandler;
        cbWeap3_2.KeyPress += pressEventHandler;
      }
    }

    [field: AccessedThroughProperty("lblWeap3")]
    internal virtual Label lblWeap3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual CheckBox checkWeap4
    {
      get => this._checkWeap4;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.m0X8);
        CheckBox checkWeap4_1 = this._checkWeap4;
        if (checkWeap4_1 != null)
          checkWeap4_1.CheckedChanged -= eventHandler;
        this._checkWeap4 = value;
        CheckBox checkWeap4_2 = this._checkWeap4;
        if (checkWeap4_2 == null)
          return;
        checkWeap4_2.CheckedChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("pictureWeap1")]
    internal virtual PictureBox pictureWeap1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("pictureWeap2")]
    internal virtual PictureBox pictureWeap2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("pictureWeap3")]
    internal virtual PictureBox pictureWeap3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("pictureWeap4")]
    internal virtual PictureBox pictureWeap4 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("lblAmmo1")]
    internal virtual Label lblAmmo1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ComboBox cbAmmo1
    {
      get => this._cbAmmo1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.y3QB);
        EventHandler eventHandler = new EventHandler(this.t2JR);
        ComboBox cbAmmo1_1 = this._cbAmmo1;
        if (cbAmmo1_1 != null)
        {
          cbAmmo1_1.KeyPress -= pressEventHandler;
          cbAmmo1_1.SelectedIndexChanged -= eventHandler;
        }
        this._cbAmmo1 = value;
        ComboBox cbAmmo1_2 = this._cbAmmo1;
        if (cbAmmo1_2 == null)
          return;
        cbAmmo1_2.KeyPress += pressEventHandler;
        cbAmmo1_2.SelectedIndexChanged += eventHandler;
      }
    }

    internal virtual ComboBox cbAmmo2
    {
      get => this._cbAmmo2;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.y3QB);
        EventHandler eventHandler = new EventHandler(this.Bo09);
        ComboBox cbAmmo2_1 = this._cbAmmo2;
        if (cbAmmo2_1 != null)
        {
          cbAmmo2_1.KeyPress -= pressEventHandler;
          cbAmmo2_1.SelectedIndexChanged -= eventHandler;
        }
        this._cbAmmo2 = value;
        ComboBox cbAmmo2_2 = this._cbAmmo2;
        if (cbAmmo2_2 == null)
          return;
        cbAmmo2_2.KeyPress += pressEventHandler;
        cbAmmo2_2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("lblAmmo2")]
    internal virtual Label lblAmmo2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ComboBox cbAmmo3
    {
      get => this._cbAmmo3;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.y3QB);
        EventHandler eventHandler = new EventHandler(this.Xq63);
        ComboBox cbAmmo3_1 = this._cbAmmo3;
        if (cbAmmo3_1 != null)
        {
          cbAmmo3_1.KeyPress -= pressEventHandler;
          cbAmmo3_1.SelectedIndexChanged -= eventHandler;
        }
        this._cbAmmo3 = value;
        ComboBox cbAmmo3_2 = this._cbAmmo3;
        if (cbAmmo3_2 == null)
          return;
        cbAmmo3_2.KeyPress += pressEventHandler;
        cbAmmo3_2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("lblAmmo3")]
    internal virtual Label lblAmmo3 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ComboBox cbAmmo4
    {
      get => this._cbAmmo4;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.y3QB);
        EventHandler eventHandler = new EventHandler(this.t8H3);
        ComboBox cbAmmo4_1 = this._cbAmmo4;
        if (cbAmmo4_1 != null)
        {
          cbAmmo4_1.KeyPress -= pressEventHandler;
          cbAmmo4_1.SelectedIndexChanged -= eventHandler;
        }
        this._cbAmmo4 = value;
        ComboBox cbAmmo4_2 = this._cbAmmo4;
        if (cbAmmo4_2 == null)
          return;
        cbAmmo4_2.KeyPress += pressEventHandler;
        cbAmmo4_2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("lblAmmo4")]
    internal virtual Label lblAmmo4 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("dialRuta")]
    internal virtual FolderBrowserDialog dialRuta { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("panelAmmo")]
    internal virtual GroupBox panelAmmo { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("groupClass")]
    internal virtual GroupBox groupClass { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("groupWeap")]
    internal virtual GroupBox groupWeap { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("pictureClass")]
    internal virtual PictureBox pictureClass { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual PictureBox PictureBox1
    {
      get => this._PictureBox1;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.c1PG);
        PictureBox pictureBox1_1 = this._PictureBox1;
        if (pictureBox1_1 != null)
          pictureBox1_1.Click -= eventHandler;
        this._PictureBox1 = value;
        PictureBox pictureBox1_2 = this._PictureBox1;
        if (pictureBox1_2 == null)
          return;
        pictureBox1_2.Click += eventHandler;
      }
    }

    internal virtual ComboBox cbAmmo5
    {
      get => this._cbAmmo5;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.y3QB);
        EventHandler eventHandler = new EventHandler(this.f2QK);
        ComboBox cbAmmo5_1 = this._cbAmmo5;
        if (cbAmmo5_1 != null)
        {
          cbAmmo5_1.KeyPress -= pressEventHandler;
          cbAmmo5_1.SelectedIndexChanged -= eventHandler;
        }
        this._cbAmmo5 = value;
        ComboBox cbAmmo5_2 = this._cbAmmo5;
        if (cbAmmo5_2 == null)
          return;
        cbAmmo5_2.KeyPress += pressEventHandler;
        cbAmmo5_2.SelectedIndexChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("lblAmmo5")]
    internal virtual Label lblAmmo5 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("lblCreatingEditing")]
    internal virtual Label lblCreatingEditing { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("GroupBox1")]
    internal virtual GroupBox GroupBox1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("panelRightHand")]
    internal virtual GroupBox panelRightHand { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("panelLeftHand")]
    internal virtual GroupBox panelLeftHand { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("panelBothHands")]
    internal virtual GroupBox panelBothHands { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual ComboBox cbDefault
    {
      get => this._cbDefault;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.o9JW);
        KeyPressEventHandler pressEventHandler = new KeyPressEventHandler(this.y3QB);
        ComboBox cbDefault1 = this._cbDefault;
        if (cbDefault1 != null)
        {
          cbDefault1.SelectedIndexChanged -= eventHandler;
          cbDefault1.KeyPress -= pressEventHandler;
        }
        this._cbDefault = value;
        ComboBox cbDefault2 = this._cbDefault;
        if (cbDefault2 == null)
          return;
        cbDefault2.SelectedIndexChanged += eventHandler;
        cbDefault2.KeyPress += pressEventHandler;
      }
    }

    [field: AccessedThroughProperty("Label2")]
    internal virtual Label Label2 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnRestore
    {
      get => this._btnRestore;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Qr9w);
        Button btnRestore1 = this._btnRestore;
        if (btnRestore1 != null)
          btnRestore1.Click -= eventHandler;
        this._btnRestore = value;
        Button btnRestore2 = this._btnRestore;
        if (btnRestore2 == null)
          return;
        btnRestore2.Click += eventHandler;
      }
    }

    internal virtual Button btnDefault
    {
      get => this._btnDefault;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Fk83);
        Button btnDefault1 = this._btnDefault;
        if (btnDefault1 != null)
          btnDefault1.Click -= eventHandler;
        this._btnDefault = value;
        Button btnDefault2 = this._btnDefault;
        if (btnDefault2 == null)
          return;
        btnDefault2.Click += eventHandler;
      }
    }

    internal virtual CheckBox checkHC
    {
      get => this._checkHC;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.By59);
        CheckBox checkHc1 = this._checkHC;
        if (checkHc1 != null)
          checkHc1.CheckedChanged -= eventHandler;
        this._checkHC = value;
        CheckBox checkHc2 = this._checkHC;
        if (checkHc2 == null)
          return;
        checkHc2.CheckedChanged += eventHandler;
      }
    }

    [field: AccessedThroughProperty("pictureHC")]
    internal virtual PictureBox pictureHC { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("TabControlMods")]
    internal virtual TabControl TabControlMods { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("tabNewMod")]
    internal virtual TabPage tabNewMod { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnSaveAs
    {
      get => this._btnSaveAs;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Sq4n);
        Button btnSaveAs1 = this._btnSaveAs;
        if (btnSaveAs1 != null)
          btnSaveAs1.Click -= eventHandler;
        this._btnSaveAs = value;
        Button btnSaveAs2 = this._btnSaveAs;
        if (btnSaveAs2 == null)
          return;
        btnSaveAs2.Click += eventHandler;
      }
    }

    internal virtual ListBox lbNewChar
    {
      get => this._lbNewChar;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.i4RD);
        ListBox lbNewChar1 = this._lbNewChar;
        if (lbNewChar1 != null)
          lbNewChar1.SelectedIndexChanged -= eventHandler;
        this._lbNewChar = value;
        ListBox lbNewChar2 = this._lbNewChar;
        if (lbNewChar2 == null)
          return;
        lbNewChar2.SelectedIndexChanged += eventHandler;
      }
    }

    internal virtual Button btnDeleteMod
    {
      get => this._btnDeleteMod;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Kr8y);
        Button btnDeleteMod1 = this._btnDeleteMod;
        if (btnDeleteMod1 != null)
          btnDeleteMod1.Click -= eventHandler;
        this._btnDeleteMod = value;
        Button btnDeleteMod2 = this._btnDeleteMod;
        if (btnDeleteMod2 == null)
          return;
        btnDeleteMod2.Click += eventHandler;
      }
    }

    internal virtual Button btnSave
    {
      get => this._btnSave;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = (EventHandler) ((Br96, Ro61) => this.Xm03());
        Button btnSave1 = this._btnSave;
        if (btnSave1 != null)
          btnSave1.Click -= eventHandler;
        this._btnSave = value;
        Button btnSave2 = this._btnSave;
        if (btnSave2 == null)
          return;
        btnSave2.Click += eventHandler;
      }
    }

    internal virtual Button btnSetMod
    {
      get => this._btnSetMod;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Rk15);
        Button btnSetMod1 = this._btnSetMod;
        if (btnSetMod1 != null)
          btnSetMod1.Click -= eventHandler;
        this._btnSetMod = value;
        Button btnSetMod2 = this._btnSetMod;
        if (btnSetMod2 == null)
          return;
        btnSetMod2.Click += eventHandler;
      }
    }

    internal virtual Button btnLookMod
    {
      get => this._btnLookMod;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.e7M6);
        Button btnLookMod1 = this._btnLookMod;
        if (btnLookMod1 != null)
          btnLookMod1.Click -= eventHandler;
        this._btnLookMod = value;
        Button btnLookMod2 = this._btnLookMod;
        if (btnLookMod2 == null)
          return;
        btnLookMod2.Click += eventHandler;
      }
    }

    internal virtual Button btnNewMod
    {
      get => this._btnNewMod;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.j9W5);
        Button btnNewMod1 = this._btnNewMod;
        if (btnNewMod1 != null)
          btnNewMod1.Click -= eventHandler;
        this._btnNewMod = value;
        Button btnNewMod2 = this._btnNewMod;
        if (btnNewMod2 == null)
          return;
        btnNewMod2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("panelModificarArmas")]
    internal virtual Panel panelModificarArmas { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("lbLoadMod")]
    internal virtual ComboBox lbLoadMod { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Label1")]
    internal virtual Label Label1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    internal virtual Button btnHelp
    {
      get => this._btnHelp;
      [MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.w9C2);
        Button btnHelp1 = this._btnHelp;
        if (btnHelp1 != null)
          btnHelp1.Click -= eventHandler;
        this._btnHelp = value;
        Button btnHelp2 = this._btnHelp;
        if (btnHelp2 == null)
          return;
        btnHelp2.Click += eventHandler;
      }
    }

    [field: AccessedThroughProperty("HelpProvider1")]
    internal virtual HelpProvider HelpProvider1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("btnServerConfig")]
    internal virtual Button btnServerConfig { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("btnLaunchDS")]
    internal virtual Button btnLaunchDS { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [field: AccessedThroughProperty("Timer1")]
    internal virtual Timer Timer1 { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    private void n8DK(object a3RP, FormClosingEventArgs e5WD)
    {
      string str = "";
      if (Operators.CompareString(s0T.ModIniCabecera, "", false) == 0)
        s0T.ModIniCabecera = "0";
      if (Operators.CompareString(s0T.ModIniCabecera, "", false) != 0)
        str += s0T.ModIniCabecera;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniAristocrat), "", false) != 0)
        str = str + "Aristocrat" + s0T.ModIniAristocrat;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniBandit), "", false) != 0)
        str = str + "Bandit" + s0T.ModIniBandit;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniBarnsby), "", false) != 0)
        str = str + "Barnsby" + s0T.ModIniBarnsby;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniDoc), "", false) != 0)
        str = str + "Doc" + s0T.ModIniDoc;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniGunslinger), "", false) != 0)
        str = str + "Gunslinger" + s0T.ModIniGunslinger;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniGunsmith), "", false) != 0)
        str = str + "Gunsmith" + s0T.ModIniGunsmith;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniJuarez), "", false) != 0)
        str = str + "Juarez" + s0T.ModIniJuarez;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniMiner), "", false) != 0)
        str = str + "Miner" + s0T.ModIniMiner;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniRifleman), "", false) != 0)
        str = str + "Rifleman" + s0T.ModIniRifleman;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniSniper), "", false) != 0)
        str = str + "Sniper" + s0T.ModIniSniper;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniThief), "", false) != 0)
        str = str + "Thief" + s0T.ModIniThief;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniTrapper), "", false) != 0)
        str = str + "Trapper" + s0T.ModIniTrapper;
      if (Operators.CompareString(Strings.Trim(s0T.ModIniTribeWarrior), "", false) != 0)
        str = str + "TribeWarrior" + s0T.ModIniTribeWarrior;
      if (Operators.CompareString(Strings.Trim(s0T.ConfiguracionModInicial), Strings.Trim(str), false) != 0 & Operators.CompareString(Strings.Trim(str), "0", false) != 0)
      {
        switch (MessageBox.Show("The current changes to this mod haven't been saved. Do you want to save now?", "", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question, MessageBoxDefaultButton.Button3))
        {
          case DialogResult.Cancel:
            e5WD.Cancel = true;
            return;
          case DialogResult.Yes:
            this.Xm03();
            break;
        }
      }
      if (Directory.Exists(s0T.ruta + s0T.rutaTemp))
        Cc9k.Computer.FileSystem.DeleteDirectory(s0T.ruta + s0T.rutaTemp, DeleteDirectoryOption.DeleteAllContents);
      NewLateBinding.LateCall(this.FrmMain, (System.Type) null, "Show", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null, true);
      this.Dispose();
    }

    private void p4S7(object Md0k, EventArgs w5C8)
    {
      Cc9k.Computer.FileSystem.CreateDirectory(s0T.rutaAppData + "\\Mods\\");
      if (this.lbNewChar.Items.Count == 0)
        this.btnSetMod.Enabled = false;
      else
        this.btnSetMod.Enabled = true;
      this.cbDefault.BackColor = Color.SeaGreen;
      this.lblAmmo4.Enabled = false;
      this.cbAmmo4.Enabled = false;
      this.cbAmmo4.Text = Conversions.ToString(0);
      this.pictureWeap4.ImageLocation = Application.StartupPath + "\\images\\weaps\\nodynamite.png";
      this.cbClass.SelectedIndex = 0;
      this.cbWeap1.SelectedIndex = 8;
      this.cbWeap2.SelectedIndex = 3;
      this.cbWeap3.SelectedIndex = 5;
      this.cbAmmo1.SelectedIndex = 1;
      this.cbAmmo2.SelectedIndex = 3;
      this.cbAmmo3.SelectedIndex = 3;
      this.cbAmmo5.SelectedIndex = 0;
      this.cbDefault.SelectedIndex = 0;
      this.pictureWeap1.ImageLocation = Application.StartupPath + "\\images\\weaps\\pistol" + this.cbWeap1.SelectedIndex.ToString() + ".png";
      this.pictureWeap2.ImageLocation = Application.StartupPath + "\\images\\weaps\\pistol" + this.cbWeap2.SelectedIndex.ToString() + ".png";
      this.pictureWeap3.ImageLocation = Application.StartupPath + "\\images\\weaps\\rifle" + this.cbWeap3.SelectedIndex.ToString() + ".png";
      this.pictureClass.ImageLocation = Application.StartupPath + "\\images\\characters\\" + this.cbClass.Text + ".jpg";
      this.TabControlMods.Enabled = false;
      this.panelModificarArmas.Enabled = false;
      this.checkHC.Enabled = false;
      this.panelAmmo.Enabled = false;
      this.panelLeftHand.Enabled = false;
      this.panelRightHand.Enabled = false;
      this.panelBothHands.Enabled = false;
    }

    private void An3m(object j8QG, EventArgs d2L0)
    {
      this.pictureWeap1.ImageLocation = Application.StartupPath + "\\images\\weaps\\pistol" + this.cbWeap1.SelectedIndex.ToString() + ".png";
      if (this.cbWeap1.SelectedIndex == 8)
        this.pictureWeap1.BackColor = Color.Transparent;
      else if (this.cbDefault.SelectedIndex == 1)
        this.pictureWeap1.BackColor = Color.SeaGreen;
    }

    private void Dn6c(object Mn7f, EventArgs Sc17)
    {
      this.pictureWeap2.ImageLocation = Application.StartupPath + "\\images\\weaps\\pistol" + this.cbWeap2.SelectedIndex.ToString() + ".png";
      if (this.cbWeap2.SelectedIndex == 8)
        this.pictureWeap2.BackColor = Color.Transparent;
      else if (this.cbDefault.SelectedIndex == 1 | this.cbDefault.SelectedIndex == 2)
        this.pictureWeap2.BackColor = Color.SeaGreen;
    }

    private void Sm60(object p1PB, EventArgs Sx96) => this.pictureWeap3.ImageLocation = Application.StartupPath + "\\images\\weaps\\rifle" + this.cbWeap3.SelectedIndex.ToString() + ".png";

    private void m0X8(object q5F7, EventArgs f4X6)
    {
      if (this.checkWeap4.Checked)
      {
        this.lblAmmo4.Enabled = true;
        this.cbAmmo4.Enabled = true;
        this.cbAmmo4.SelectedIndex = 1;
        this.pictureWeap4.ImageLocation = Application.StartupPath + "\\images\\weaps\\dynamite.png";
      }
      else
      {
        this.lblAmmo4.Enabled = false;
        this.cbAmmo4.Enabled = false;
        this.cbAmmo4.Text = Conversions.ToString(0);
        this.pictureWeap4.ImageLocation = Application.StartupPath + "\\images\\weaps\\nodynamite.png";
      }
    }

    private void Kb8m(object s0YC, EventArgs Bs9n)
    {
      this.btnDefault.Text = "Load default " + this.cbClass.Text + " weapons";
      if (this.cbClass.SelectedIndex == 0)
        this.clase = "_NetWeapon_Aristocrat_Properties.scr";
      else if (this.cbClass.SelectedIndex == 1)
        this.clase = "_NetWeapon_Bandit_Properties.scr";
      else if (this.cbClass.SelectedIndex == 2)
        this.clase = "_NetWeapon_Barnsby_Properties.scr";
      else if (this.cbClass.SelectedIndex == 3)
        this.clase = "_NetWeapon_Doc_Properties.scr";
      else if (this.cbClass.SelectedIndex == 4)
        this.clase = "_NetWeapon_Gunslinger_Properties.scr";
      else if (this.cbClass.SelectedIndex == 5)
        this.clase = "_NetWeapon_Gunsmith_Properties.scr";
      else if (this.cbClass.SelectedIndex == 6)
        this.clase = "_NetWeapon_Juarez_Properties.scr";
      else if (this.cbClass.SelectedIndex == 7)
        this.clase = "_NetWeapon_Miner_Properties.scr";
      else if (this.cbClass.SelectedIndex == 8)
        this.clase = "_NetWeapon_Rifleman_Properties.scr";
      else if (this.cbClass.SelectedIndex == 9)
        this.clase = "_NetWeapon_Sniper_Properties.scr";
      else if (this.cbClass.SelectedIndex == 10)
        this.clase = "_NetWeapon_Thief_Properties.scr";
      else if (this.cbClass.SelectedIndex == 11)
        this.clase = "_NetWeapon_Trapper_Properties.scr";
      else if (this.cbClass.SelectedIndex == 12)
        this.clase = "_NetWeapon_TribeWarrior_Properties.scr";
      this.pictureClass.ImageLocation = Application.StartupPath + "\\images\\characters\\" + this.cbClass.Text + ".jpg";
      this.lblCreatingEditing.Text = Conversions.ToString(Operators.ConcatenateObject((object) "Creating class: ", this.cbClass.SelectedItem));
    }

    private void o9JW(object Go67, EventArgs Bc71)
    {
      if (this.cbDefault.SelectedIndex == 0)
      {
        this.pictureWeap1.BackColor = Color.Transparent;
        this.pictureWeap2.BackColor = Color.Transparent;
        this.pictureWeap3.BackColor = Color.SeaGreen;
        this.pictureWeap4.BackColor = Color.Transparent;
      }
      else if (this.cbDefault.SelectedIndex == 1)
      {
        if (this.cbWeap1.SelectedIndex == 8)
          this.pictureWeap1.BackColor = Color.Transparent;
        else
          this.pictureWeap1.BackColor = Color.SeaGreen;
        if (this.cbWeap2.SelectedIndex == 8)
          this.pictureWeap2.BackColor = Color.Transparent;
        else
          this.pictureWeap2.BackColor = Color.SeaGreen;
        this.pictureWeap3.BackColor = Color.Transparent;
        this.pictureWeap4.BackColor = Color.Transparent;
      }
      else
      {
        if (this.cbDefault.SelectedIndex != 2)
          return;
        this.pictureWeap1.BackColor = Color.Transparent;
        this.pictureWeap2.BackColor = Color.SeaGreen;
        this.pictureWeap3.BackColor = Color.Transparent;
        this.pictureWeap4.BackColor = Color.SeaGreen;
        this.checkWeap4.Checked = true;
      }
    }

    private void Qr9w(object w8D4, EventArgs w4BL)
    {
      if (MessageBox.Show("WARNING! All classes in dedicated server are going to be restored like original game's classes. Do you want to continue?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) != DialogResult.Yes)
        return;
      this.checkHC.Checked = false;
      if (Directory.Exists(s0T.ruta + s0T.rutaPlayer))
        Cc9k.Computer.FileSystem.DeleteDirectory(s0T.ruta + s0T.rutaPlayer, DeleteDirectoryOption.DeleteAllContents);
    }

    private void y3QB(object Dc20, KeyPressEventArgs o3J2) => o3J2.KeyChar = char.MinValue;

    private void Fk83(object Ws12, EventArgs Qs62)
    {
      if (this.cbClass.SelectedIndex == 0)
      {
        this.cbWeap1.SelectedIndex = 8;
        this.cbWeap2.SelectedIndex = 3;
        this.cbWeap3.SelectedIndex = 5;
        this.checkWeap4.Checked = false;
        this.cbDefault.SelectedIndex = 0;
      }
      else if (this.cbClass.SelectedIndex == 1)
      {
        this.cbWeap1.SelectedIndex = 4;
        this.cbWeap2.SelectedIndex = 4;
        this.cbWeap3.SelectedIndex = 6;
        this.checkWeap4.Checked = false;
        this.cbDefault.SelectedIndex = 1;
      }
      else if (this.cbClass.SelectedIndex == 2)
      {
        this.cbWeap1.SelectedIndex = 8;
        this.cbWeap2.SelectedIndex = 8;
        this.cbWeap3.SelectedIndex = 2;
        this.checkWeap4.Checked = false;
        this.cbDefault.SelectedIndex = 0;
      }
      else if (this.cbClass.SelectedIndex == 3)
      {
        this.cbWeap1.SelectedIndex = 8;
        this.cbWeap2.SelectedIndex = 6;
        this.cbWeap3.SelectedIndex = 6;
        this.checkWeap4.Checked = false;
        this.cbDefault.SelectedIndex = 1;
      }
      else if (this.cbClass.SelectedIndex == 4)
      {
        this.cbWeap1.SelectedIndex = 5;
        this.cbWeap2.SelectedIndex = 5;
        this.cbWeap3.SelectedIndex = 6;
        this.checkWeap4.Checked = true;
        this.cbAmmo4.SelectedIndex = 1;
        this.cbDefault.SelectedIndex = 1;
      }
      else if (this.cbClass.SelectedIndex == 5)
      {
        this.cbWeap1.SelectedIndex = 2;
        this.cbWeap2.SelectedIndex = 0;
        this.cbWeap3.SelectedIndex = 6;
        this.checkWeap4.Checked = false;
        this.cbDefault.SelectedIndex = 1;
      }
      else if (this.cbClass.SelectedIndex == 6)
      {
        this.cbWeap1.SelectedIndex = 7;
        this.cbWeap2.SelectedIndex = 7;
        this.cbWeap3.SelectedIndex = 6;
        this.checkWeap4.Checked = false;
        this.cbDefault.SelectedIndex = 1;
      }
      else if (this.cbClass.SelectedIndex == 7)
      {
        this.cbWeap1.SelectedIndex = 7;
        this.cbWeap2.SelectedIndex = 4;
        this.cbWeap3.SelectedIndex = 6;
        this.checkWeap4.Checked = true;
        this.cbAmmo4.SelectedIndex = 4;
        this.cbDefault.SelectedIndex = 2;
      }
      else if (this.cbClass.SelectedIndex == 8)
      {
        this.cbWeap1.SelectedIndex = 3;
        this.cbWeap2.SelectedIndex = 3;
        this.cbWeap3.SelectedIndex = 4;
        this.checkWeap4.Checked = false;
        this.cbDefault.SelectedIndex = 0;
      }
      else if (this.cbClass.SelectedIndex == 9)
      {
        this.cbWeap1.SelectedIndex = 8;
        this.cbWeap2.SelectedIndex = 7;
        this.cbWeap3.SelectedIndex = 3;
        this.checkWeap4.Checked = false;
        this.cbDefault.SelectedIndex = 0;
      }
      else if (this.cbClass.SelectedIndex == 10)
      {
        this.cbWeap1.SelectedIndex = 8;
        this.cbWeap2.SelectedIndex = 1;
        this.cbWeap3.SelectedIndex = 6;
        this.checkWeap4.Checked = true;
        this.cbAmmo4.SelectedIndex = 2;
        this.cbDefault.SelectedIndex = 2;
      }
      else if (this.cbClass.SelectedIndex == 11)
      {
        this.cbWeap1.SelectedIndex = 8;
        this.cbWeap2.SelectedIndex = 7;
        this.cbWeap3.SelectedIndex = 1;
        this.checkWeap4.Checked = false;
        this.cbDefault.SelectedIndex = 0;
      }
      else
      {
        if (this.cbClass.SelectedIndex != 12)
          return;
        this.cbWeap1.SelectedIndex = 8;
        this.cbWeap2.SelectedIndex = 8;
        this.cbWeap3.SelectedIndex = 0;
        this.checkWeap4.Checked = false;
        this.cbDefault.SelectedIndex = 0;
      }
    }

    private void By59(object p3BE, EventArgs Zg63)
    {
      if (this.checkHC.Checked & this.estabaActivadoHC == 0)
      {
        if (MessageBox.Show("All classes could die with only one shot in this gamemode. Do you want to continue?", "Hardcore Mode", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
          s0T.ModIniCabecera = "1";
        else
          this.checkHC.Checked = false;
      }
      else
        s0T.ModIniCabecera = "0";
    }

    private void Gi51(object Ko3k, EventArgs Jn62)
    {
      if (File.Exists(s0T.ruta + s0T.rutaTemp + "WeaponsParams.scr"))
      {
        this.estabaActivadoHC = 1;
        this.checkHC.Checked = true;
        this.estabaActivadoHC = 0;
      }
      this.lblCreatingEditing.Text = "Weapon Configuration Class: ...";
      this.pictureClass.ImageLocation = Application.StartupPath + "\\images\\fondo.jpg";
    }

    private void c1PG(object Wj58, EventArgs Px5c) => Cc9k.Forms.frmAcercade.Show();

    private void i4RD(object g6WY, EventArgs Qf5n)
    {
      string Expression = "";
      if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Aristocrat", false))
      {
        this.currentFile = "_NetWeapon_Aristocrat_Properties.scr";
        Expression = s0T.ModIniAristocrat;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Bandit", false))
      {
        this.currentFile = "_NetWeapon_Bandit_Properties.scr";
        Expression = s0T.ModIniBandit;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Barnsby", false))
      {
        this.currentFile = "_NetWeapon_Barnsby_Properties.scr";
        Expression = s0T.ModIniBarnsby;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Doc", false))
      {
        this.currentFile = "_NetWeapon_Doc_Properties.scr";
        Expression = s0T.ModIniDoc;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Gunslinger", false))
      {
        this.currentFile = "_NetWeapon_Gunslinger_Properties.scr";
        Expression = s0T.ModIniGunslinger;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Gunsmith", false))
      {
        this.currentFile = "_NetWeapon_Gunsmith_Properties.scr";
        Expression = s0T.ModIniGunsmith;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Juarez", false))
      {
        this.currentFile = "_NetWeapon_Juarez_Properties.scr";
        Expression = s0T.ModIniJuarez;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Miner", false))
      {
        this.currentFile = "_NetWeapon_Miner_Properties.scr";
        Expression = s0T.ModIniMiner;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Rifleman", false))
      {
        this.currentFile = "_NetWeapon_Rifleman_Properties.scr";
        Expression = s0T.ModIniRifleman;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Sniper", false))
      {
        this.currentFile = "_NetWeapon_Sniper_Properties.scr";
        Expression = s0T.ModIniSniper;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Thief", false))
      {
        this.currentFile = "_NetWeapon_Thief_Properties.scr";
        Expression = s0T.ModIniThief;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Trapper", false))
      {
        this.currentFile = "_NetWeapon_Trapper_Properties.scr";
        Expression = s0T.ModIniTrapper;
      }
      else if (Operators.ConditionalCompareObjectEqual(this.lbNewChar.SelectedItem, (object) "Tribe Warrior", false))
      {
        this.currentFile = "_NetWeapon_TribeWarrior_Properties.scr";
        Expression = s0T.ModIniTribeWarrior;
      }
      if (Strings.Len(Expression) > 0)
      {
        this.cbDefault.SelectedIndex = Conversions.ToInteger(Expression.Substring(0, 1));
        this.checkWeap4.Checked = Conversions.ToBoolean(Expression.Substring(1, 1));
        this.cbWeap1.SelectedIndex = Conversions.ToInteger(Expression.Substring(2, 1));
        this.cbWeap2.SelectedIndex = Conversions.ToInteger(Expression.Substring(3, 1));
        this.cbWeap3.SelectedIndex = Conversions.ToInteger(Expression.Substring(4, 1));
        this.cbAmmo1.SelectedIndex = Conversions.ToInteger(Expression.Substring(5, 1));
        this.cbAmmo2.SelectedIndex = Conversions.ToInteger(Expression.Substring(6, 1));
        this.cbAmmo5.SelectedIndex = Conversions.ToInteger(Expression.Substring(7, 1));
        this.cbAmmo3.SelectedIndex = Conversions.ToInteger(Expression.Substring(8, 1));
        this.cbAmmo4.SelectedIndex = Conversions.ToInteger(Expression.Substring(9, 1));
      }
      this.pictureClass.ImageLocation = Application.StartupPath + "\\images\\characters\\" + this.lbNewChar.Text + ".jpg";
      Label lblCreatingEditing = this.lblCreatingEditing;
      ListBox lbNewChar;
      object[] objArray;
      bool[] flagArray;
      object Right = NewLateBinding.LateGet((object) null, typeof (Strings), "UCase", objArray = new object[1]
      {
        (lbNewChar = this.lbNewChar).SelectedItem
      }, (string[]) null, (System.Type[]) null, flagArray = new bool[1]
      {
        true
      });
      if (flagArray[0])
        lbNewChar.SelectedItem = RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(objArray[0]));
      string str = Conversions.ToString(Operators.ConcatenateObject((object) "Weapon Configuration Class: ", Right));
      lblCreatingEditing.Text = str;
    }

    private void Xm03()
    {
      if (Operators.CompareString(s0T.modName, "", false) == 0)
        s0T.cancelModName = false;
      if (Operators.CompareString(s0T.modName, "", false) == 0 | s0T.cancelModName)
      {
        s0T.cancelModName = false;
      }
      else
      {
        if (Directory.Exists(s0T.rutaAppData + "\\Mods\\" + s0T.modName) & Operators.CompareString(s0T.ModNameComprobacionGuardar, s0T.modName, false) != 0)
        {
          if (MessageBox.Show("Existing Mod. Do you want to overwrite the gamemode " + s0T.modName.ToUpper() + " ?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) == DialogResult.Yes)
          {
            if (Directory.Exists(s0T.rutaAppData + "\\Mods\\" + s0T.modName))
              Cc9k.Computer.FileSystem.DeleteDirectory(s0T.rutaAppData + "\\Mods\\" + s0T.modName, DeleteDirectoryOption.DeleteAllContents);
          }
          else
          {
            if (Operators.CompareString(this.tabNewMod.Text, "New Mod", false) != 0)
            {
              s0T.modName = this.tabNewMod.Text;
              return;
            }
            s0T.modName = "";
            return;
          }
        }
        Cc9k.Computer.FileSystem.CreateDirectory(s0T.rutaAppData + "\\Mods");
        Cc9k.Computer.FileSystem.CreateDirectory(s0T.rutaAppData + "\\Mods\\" + s0T.modName);
        this.tabNewMod.Text = s0T.modName;
        s0T.Zx1();
        this.lbLoadMod.Text = s0T.modName;
        s0T.ModNameComprobacionGuardar = s0T.modName;
      }
    }

    private void Sq4n(object My09, EventArgs Ef74)
    {
      s0T.cancelModName = false;
      if (Operators.CompareString(s0T.modName, "", false) == 0 | s0T.cancelModName)
      {
        s0T.cancelModName = false;
      }
      else
      {
        if (Directory.Exists(s0T.rutaAppData + "\\Mods\\" + s0T.modName))
        {
          if (MessageBox.Show("Existing Mod. Do you want to overwrite the gamemode " + s0T.modName.ToUpper() + " ?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) == DialogResult.Yes)
          {
            if (Directory.Exists(s0T.rutaAppData + "\\Mods\\" + s0T.modName))
              Cc9k.Computer.FileSystem.DeleteDirectory(s0T.rutaAppData + "\\Mods\\" + s0T.modName, DeleteDirectoryOption.DeleteAllContents);
          }
          else
          {
            if (Operators.CompareString(this.tabNewMod.Text, "New Mod", false) != 0)
            {
              s0T.modName = this.tabNewMod.Text;
              return;
            }
            s0T.modName = "";
            return;
          }
        }
        this.tabNewMod.Text = s0T.modName;
        Cc9k.Computer.FileSystem.CreateDirectory(s0T.rutaAppData + "\\Mods");
        Cc9k.Computer.FileSystem.CreateDirectory(s0T.rutaAppData + "\\Mods\\" + s0T.modName);
        s0T.Zx1();
        this.lbLoadMod.Text = s0T.modName;
      }
    }

    private void Kr8y(object Pn48, EventArgs x2QX)
    {
      if (Operators.ConditionalCompareObjectEqual(this.lbLoadMod.SelectedItem, (object) "", false))
      {
        this.TabControlMods.Enabled = false;
        this.panelModificarArmas.Enabled = false;
        this.checkHC.Enabled = false;
        this.btnLookMod.Text = "Look Mod ...";
        this.panelAmmo.Enabled = false;
        this.panelLeftHand.Enabled = false;
        this.panelRightHand.Enabled = false;
        this.panelBothHands.Enabled = false;
      }
      else
      {
        this.TabControlMods.Enabled = true;
        this.panelModificarArmas.Enabled = true;
        this.checkHC.Enabled = true;
        this.panelAmmo.Enabled = true;
        this.panelLeftHand.Enabled = true;
        this.panelRightHand.Enabled = true;
        this.panelBothHands.Enabled = true;
      }
    }

    private void Rk15(object t1F5, EventArgs Kk59)
    {
      if (File.Exists(s0T.ruta + "\\CoJ2Game_x86_ds.exe") & File.Exists(s0T.ruta + "\\CoJ2_x86_ds.dll"))
      {
        Process[] processes = Process.GetProcesses();
        int index = 0;
        while (index < processes.Length)
        {
          if (Operators.CompareString(processes[index].ProcessName, "CoJ2Game_x86_ds", false) == 0)
          {
            int num = (int) MessageBox.Show("You must close CoJ2 Dedicated Server before you make some changes. Close the server and try again. The mod has not been set.", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            return;
          }
          checked { ++index; }
        }
        if (MessageBox.Show("Your current server game mod will be changed for this one. Do you want to continue?", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
        {
          if (Directory.Exists(s0T.ruta + s0T.rutaPlayer))
            Cc9k.Computer.FileSystem.DeleteDirectory(s0T.ruta + s0T.rutaPlayer, DeleteDirectoryOption.DeleteAllContents);
          if (Directory.Exists(s0T.ruta + s0T.rutaTemp))
            Cc9k.Computer.FileSystem.CopyDirectory(s0T.ruta + s0T.rutaTemp, s0T.ruta + s0T.rutaPlayer);
        }
        if (File.Exists(s0T.ruta + s0T.rutaPlayer + "WeaponsParams.scr") & this.estabaActivadoHC == 0)
          Cc9k.Computer.FileSystem.DeleteFile(s0T.ruta + s0T.rutaPlayer + "WeaponsParams.scr");
        if (this.checkHC.Checked)
          s0T.Eq5(Application.StartupPath + "\\bin\\modscoj.dll", s0T.ruta + s0T.rutaPlayer + "WeaponsParams.scr", "%c0jm0ds");
        else if (Cc9k.Computer.FileSystem.FileExists(s0T.ruta + s0T.rutaPlayer + "WeaponsParams.scr"))
          Cc9k.Computer.FileSystem.DeleteFile(s0T.ruta + s0T.rutaPlayer + "WeaponsParams.scr");
      }
      else
      {
        int num1 = (int) MessageBox.Show("You have to choose the same path where CoJ Dedicated Server was installed.", "", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
        int num2 = (int) this.dialRuta.ShowDialog();
        s0T.ruta = this.dialRuta.SelectedPath;
        if (File.Exists(s0T.ruta + "\\CoJ2Game_x86_ds.exe") & File.Exists(s0T.ruta + "\\CoJ2_x86_ds.dll"))
        {
          this.writeini = File.AppendText(Application.StartupPath + "\\cojmods.ini");
          this.writeini.WriteLine(s0T.ruta);
          this.writeini.Close();
        }
      }
    }

    private void p6N9()
    {
      string str;
      if (this.checkWeap4.Checked)
      {
        str = this.cbAmmo4.SelectedIndex.ToString();
        this.TntSiNo = Conversions.ToString(1);
      }
      else
      {
        str = Conversions.ToString(0);
        this.TntSiNo = Conversions.ToString(0);
      }
      if (Operators.CompareString(this.lbNewChar.Text, "Aristocrat", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniAristocrat = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Bandit", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniBandit = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Barnsby", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniBarnsby = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Doc", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniDoc = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Gunslinger", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniGunslinger = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Gunsmith", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniGunsmith = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Juarez", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniJuarez = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Miner", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniMiner = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Rifleman", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniRifleman = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Sniper", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniSniper = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Thief", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniThief = string.Concat(strArray);
      }
      else if (Operators.CompareString(this.lbNewChar.Text, "Trapper", false) == 0)
      {
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniTrapper = string.Concat(strArray);
      }
      else
      {
        if (Operators.CompareString(this.lbNewChar.Text, "Tribe Warrior", false) != 0)
          return;
        string[] strArray = new string[10];
        int selectedIndex = this.cbDefault.SelectedIndex;
        strArray[0] = selectedIndex.ToString();
        strArray[1] = this.TntSiNo;
        selectedIndex = this.cbWeap1.SelectedIndex;
        strArray[2] = selectedIndex.ToString();
        selectedIndex = this.cbWeap2.SelectedIndex;
        strArray[3] = selectedIndex.ToString();
        selectedIndex = this.cbWeap3.SelectedIndex;
        strArray[4] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo1.SelectedIndex;
        strArray[5] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo2.SelectedIndex;
        strArray[6] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo5.SelectedIndex;
        strArray[7] = selectedIndex.ToString();
        selectedIndex = this.cbAmmo3.SelectedIndex;
        strArray[8] = selectedIndex.ToString();
        strArray[9] = str;
        s0T.ModIniTribeWarrior = string.Concat(strArray);
      }
    }

    private void t2JR(object Ys71, EventArgs g0XR) => this.p6N9();

    private void Bo09(object Yz34, EventArgs Sm98) => this.p6N9();

    private void f2QK(object Kr60, EventArgs Pd94) => this.p6N9();

    private void Xq63(object i0AL, EventArgs o4K3) => this.p6N9();

    private void t8H3(object n6A1, EventArgs c8YL) => this.p6N9();

    private void e7M6(object y2RM, EventArgs Ww2z)
    {
    }

    private void j9W5(object Eo8s, EventArgs Wg9x)
    {
      this.lbNewChar.Items.Clear();
      this.TabControlMods.SelectedTab = this.tabNewMod;
      this.btnSetMod.Enabled = false;
      s0T.modName = "";
      this.tabNewMod.Text = "New Mod";
      this.checkHC.Checked = false;
      s0T.ModIniAristocrat = "0083513030";
      s0T.ModIniBandit = "1044613030";
      s0T.ModIniBarnsby = "0088213030";
      s0T.ModIniCabecera = "0";
      s0T.ModIniDoc = "1086613030";
      s0T.ModIniGunslinger = "1155613031";
      s0T.ModIniGunsmith = "1020613030";
      s0T.ModIniJuarez = "1077613030";
      s0T.ModIniMiner = "2174613034";
      s0T.ModIniRifleman = "0033413030";
      s0T.ModIniSniper = "0087313030";
      s0T.ModIniThief = "2181613032";
      s0T.ModIniTrapper = "0087113030";
      s0T.ModIniTribeWarrior = "0088013030";
      this.lbNewChar.Items.Add((object) "Aristocrat");
      this.lbNewChar.Items.Add((object) "Bandit");
      this.lbNewChar.Items.Add((object) "Barnsby");
      this.lbNewChar.Items.Add((object) "Doc");
      this.lbNewChar.Items.Add((object) "Gunslinger");
      this.lbNewChar.Items.Add((object) "Gunsmith");
      this.lbNewChar.Items.Add((object) "Juarez");
      this.lbNewChar.Items.Add((object) "Miner");
      this.lbNewChar.Items.Add((object) "Rifleman");
      this.lbNewChar.Items.Add((object) "Sniper");
      this.lbNewChar.Items.Add((object) "Thief");
      this.lbNewChar.Items.Add((object) "Trapper");
      this.lbNewChar.Items.Add((object) "Tribe Warrior");
      this.TabControlMods.Enabled = true;
      this.panelModificarArmas.Enabled = true;
      this.checkHC.Enabled = true;
      this.panelAmmo.Enabled = true;
      this.panelLeftHand.Enabled = true;
      this.panelRightHand.Enabled = true;
      this.panelBothHands.Enabled = true;
      this.lbLoadMod.Text = "";
      this.btnLookMod.Text = "Look Mod ...";
      this.lbNewChar.SelectedIndex = 0;
      s0T.ModNameComprobacionGuardar = "";
    }

    public void t8S7()
    {
      if (!(File.Exists(s0T.ruta + "\\CoJ2Game_x86_ds.exe") & File.Exists(s0T.ruta + "\\CoJ2_x86_ds.dll")))
        return;
      string Left1 = "";
      string Left2 = "";
      string Left3 = "";
      string str1 = "";
      string str2 = "";
      string str3 = "";
      string str4 = "";
      int num1 = 0;
      string Left4 = "";
      string Left5 = "";
      int num2 = 1;
      do
      {
        string Left6 = "";
        if (num2 == 1 & this.lbNewChar.Items.Contains((object) "Aristocrat"))
        {
          this.clase = "Aristocrat";
          Left6 = s0T.ModIniAristocrat;
        }
        if (num2 == 2 & this.lbNewChar.Items.Contains((object) "Bandit"))
        {
          this.clase = "Bandit";
          Left6 = s0T.ModIniBandit;
        }
        if (num2 == 3 & this.lbNewChar.Items.Contains((object) "Barnsby"))
        {
          this.clase = "Barnsby";
          Left6 = s0T.ModIniBarnsby;
        }
        if (num2 == 4 & this.lbNewChar.Items.Contains((object) "Doc"))
        {
          this.clase = "Doc";
          Left6 = s0T.ModIniDoc;
        }
        if (num2 == 5 & this.lbNewChar.Items.Contains((object) "Gunslinger"))
        {
          this.clase = "Gunslinger";
          Left6 = s0T.ModIniGunslinger;
        }
        if (num2 == 6 & this.lbNewChar.Items.Contains((object) "Gunsmith"))
        {
          this.clase = "Gunsmith";
          Left6 = s0T.ModIniGunsmith;
        }
        if (num2 == 7 & this.lbNewChar.Items.Contains((object) "Juarez"))
        {
          this.clase = "Juarez";
          Left6 = s0T.ModIniJuarez;
        }
        if (num2 == 8 & this.lbNewChar.Items.Contains((object) "Miner"))
        {
          this.clase = "Miner";
          Left6 = s0T.ModIniMiner;
        }
        if (num2 == 9 & this.lbNewChar.Items.Contains((object) "Rifleman"))
        {
          this.clase = "Rifleman";
          Left6 = s0T.ModIniRifleman;
        }
        if (num2 == 10 & this.lbNewChar.Items.Contains((object) "Sniper"))
        {
          this.clase = "Sniper";
          Left6 = s0T.ModIniSniper;
        }
        if (num2 == 11 & this.lbNewChar.Items.Contains((object) "Thief"))
        {
          this.clase = "Thief";
          Left6 = s0T.ModIniThief;
        }
        if (num2 == 12 & this.lbNewChar.Items.Contains((object) "Trapper"))
        {
          this.clase = "Trapper";
          Left6 = s0T.ModIniTrapper;
        }
        if (num2 == 13 & this.lbNewChar.Items.Contains((object) "Tribe Warrior"))
        {
          this.clase = "TribeWarrior";
          Left6 = s0T.ModIniTribeWarrior;
        }
        if (Operators.CompareString(Left6, "", false) != 0)
        {
          if (File.Exists(s0T.rutaAppData + "\\Mods\\" + s0T.modName + "\\_NetWeapon_" + this.clase + "_Properties.scr"))
            Cc9k.Computer.FileSystem.DeleteFile(s0T.rutaAppData + "\\Mods\\" + s0T.modName + "\\_NetWeapon_" + this.clase + "_Properties.scr");
          s0T.write = File.AppendText(s0T.rutaAppData + "\\Mods\\" + s0T.modName + "\\_NetWeapon_" + this.clase + "_Properties.scr");
          s0T.write.WriteLine("!NetAmmo(s, i)");
          s0T.write.WriteLine("!NetWeapon(s)");
          s0T.write.WriteLine("!NetDefaultWeaponL(s)");
          s0T.write.WriteLine("!NetDefaultWeaponR(s)");
          if (Conversions.ToDouble(Left6.Substring(2, 1)) == 0.0)
            Left1 = "\"WeaponPistolCogswellNet\"";
          else if (Conversions.ToDouble(Left6.Substring(2, 1)) == 1.0)
            Left1 = "\"WeaponPistolDerringerNet\"";
          else if (Conversions.ToDouble(Left6.Substring(2, 1)) == 2.0)
            Left1 = "\"WeaponPistolLemantNet\"";
          else if (Conversions.ToDouble(Left6.Substring(2, 1)) == 3.0)
            Left1 = "\"WeaponPistolPeacemakerNet\"";
          else if (Conversions.ToDouble(Left6.Substring(2, 1)) == 4.0)
            Left1 = "\"WeaponRifleRemingtonSawOffNet\"";
          else if (Conversions.ToDouble(Left6.Substring(2, 1)) == 5.0)
            Left1 = "\"WeaponPistolSchofieldNet\"";
          else if (Conversions.ToDouble(Left6.Substring(2, 1)) == 6.0)
            Left1 = "\"WeaponPistolVolcanicNet\"";
          else if (Conversions.ToDouble(Left6.Substring(2, 1)) == 7.0)
            Left1 = "\"WeaponPistolWalkerNet\"";
          else if (Conversions.ToDouble(Left6.Substring(2, 1)) == 8.0)
            Left1 = "";
          if (Conversions.ToDouble(Left6.Substring(3, 1)) == 0.0)
            Left2 = "\"WeaponPistolCogswellNet\"";
          else if (Conversions.ToDouble(Left6.Substring(3, 1)) == 1.0)
            Left2 = "\"WeaponPistolDerringerNet\"";
          else if (Conversions.ToDouble(Left6.Substring(3, 1)) == 2.0)
            Left2 = "\"WeaponPistolLemantNet\"";
          else if (Conversions.ToDouble(Left6.Substring(3, 1)) == 3.0)
            Left2 = "\"WeaponPistolPeacemakerNet\"";
          else if (Conversions.ToDouble(Left6.Substring(3, 1)) == 4.0)
            Left2 = "\"WeaponRifleRemingtonSawOffNet\"";
          else if (Conversions.ToDouble(Left6.Substring(3, 1)) == 5.0)
            Left2 = "\"WeaponPistolSchofieldNet\"";
          else if (Conversions.ToDouble(Left6.Substring(3, 1)) == 6.0)
            Left2 = "\"WeaponPistolVolcanicNet\"";
          else if (Conversions.ToDouble(Left6.Substring(3, 1)) == 7.0)
            Left2 = "\"WeaponPistolWalkerNet\"";
          else if (Conversions.ToDouble(Left6.Substring(3, 1)) == 8.0)
            Left2 = "";
          if (Conversions.ToDouble(Left6.Substring(4, 1)) == 0.0)
            Left3 = "\"WeaponBowNet\"";
          else if (Conversions.ToDouble(Left6.Substring(4, 1)) == 1.0)
            Left3 = "\"WeaponRifleRemingtonNet\"";
          else if (Conversions.ToDouble(Left6.Substring(4, 1)) == 2.0)
            Left3 = "\"WeaponRifleSharpsNet\"";
          else if (Conversions.ToDouble(Left6.Substring(4, 1)) == 3.0)
            Left3 = "\"WeaponRifleSharpsScopeNet\"";
          else if (Conversions.ToDouble(Left6.Substring(4, 1)) == 4.0)
            Left3 = "\"WeaponRifleWinchesterNet\"";
          else if (Conversions.ToDouble(Left6.Substring(4, 1)) == 5.0)
            Left3 = "\"WeaponRifleWinchesterScopeNet\"";
          else if (Conversions.ToDouble(Left6.Substring(4, 1)) == 6.0)
            Left3 = "";
          if (Conversions.ToDouble(Left6.Substring(5, 1)) == 0.0)
            str1 = Conversions.ToString(35);
          else if (Conversions.ToDouble(Left6.Substring(5, 1)) == 1.0)
            str1 = Conversions.ToString(45);
          else if (Conversions.ToDouble(Left6.Substring(5, 1)) == 2.0)
            str1 = Conversions.ToString(55);
          else if (Conversions.ToDouble(Left6.Substring(5, 1)) == 3.0)
            str1 = Conversions.ToString(65);
          else if (Conversions.ToDouble(Left6.Substring(5, 1)) == 4.0)
            str1 = Conversions.ToString(75);
          else if (Conversions.ToDouble(Left6.Substring(5, 1)) == 5.0)
            str1 = Conversions.ToString(95);
          else if (Conversions.ToDouble(Left6.Substring(5, 1)) == 6.0)
            str1 = Conversions.ToString(140);
          else if (Conversions.ToDouble(Left6.Substring(5, 1)) == 7.0)
            str1 = Conversions.ToString(190);
          if (Conversions.ToDouble(Left6.Substring(6, 1)) == 0.0)
            str2 = Conversions.ToString(35);
          else if (Conversions.ToDouble(Left6.Substring(6, 1)) == 1.0)
            str2 = Conversions.ToString(45);
          else if (Conversions.ToDouble(Left6.Substring(6, 1)) == 2.0)
            str2 = Conversions.ToString(55);
          else if (Conversions.ToDouble(Left6.Substring(6, 1)) == 3.0)
            str2 = Conversions.ToString(65);
          else if (Conversions.ToDouble(Left6.Substring(6, 1)) == 4.0)
            str2 = Conversions.ToString(75);
          else if (Conversions.ToDouble(Left6.Substring(6, 1)) == 5.0)
            str2 = Conversions.ToString(95);
          else if (Conversions.ToDouble(Left6.Substring(6, 1)) == 6.0)
            str2 = Conversions.ToString(140);
          else if (Conversions.ToDouble(Left6.Substring(6, 1)) == 7.0)
            str2 = Conversions.ToString(190);
          if (Conversions.ToDouble(Left6.Substring(7, 1)) == 0.0)
            str3 = Conversions.ToString(35);
          else if (Conversions.ToDouble(Left6.Substring(7, 1)) == 1.0)
            str3 = Conversions.ToString(45);
          else if (Conversions.ToDouble(Left6.Substring(7, 1)) == 2.0)
            str3 = Conversions.ToString(55);
          else if (Conversions.ToDouble(Left6.Substring(7, 1)) == 3.0)
            str3 = Conversions.ToString(65);
          else if (Conversions.ToDouble(Left6.Substring(7, 1)) == 4.0)
            str3 = Conversions.ToString(75);
          else if (Conversions.ToDouble(Left6.Substring(7, 1)) == 5.0)
            str3 = Conversions.ToString(95);
          else if (Conversions.ToDouble(Left6.Substring(7, 1)) == 6.0)
            str3 = Conversions.ToString(140);
          else if (Conversions.ToDouble(Left6.Substring(7, 1)) == 7.0)
            str3 = Conversions.ToString(190);
          if (Conversions.ToDouble(Left6.Substring(8, 1)) == 0.0)
            str4 = Conversions.ToString(35);
          else if (Conversions.ToDouble(Left6.Substring(8, 1)) == 1.0)
            str4 = Conversions.ToString(45);
          else if (Conversions.ToDouble(Left6.Substring(8, 1)) == 2.0)
            str4 = Conversions.ToString(55);
          else if (Conversions.ToDouble(Left6.Substring(8, 1)) == 3.0)
            str4 = Conversions.ToString(65);
          else if (Conversions.ToDouble(Left6.Substring(8, 1)) == 4.0)
            str4 = Conversions.ToString(75);
          else if (Conversions.ToDouble(Left6.Substring(8, 1)) == 5.0)
            str4 = Conversions.ToString(95);
          else if (Conversions.ToDouble(Left6.Substring(8, 1)) == 6.0)
            str4 = Conversions.ToString(140);
          else if (Conversions.ToDouble(Left6.Substring(8, 1)) == 7.0)
            str4 = Conversions.ToString(190);
          string str5 = Conversions.ToDouble(Left6.Substring(1, 1)) != 0.0 ? Conversions.ToString(1) : Conversions.ToString(0);
          if (Conversions.ToDouble(Left6.Substring(9, 1)) == 0.0)
            num1 = 1;
          else if (Conversions.ToDouble(Left6.Substring(9, 1)) == 1.0)
            num1 = 2;
          else if (Conversions.ToDouble(Left6.Substring(9, 1)) == 2.0)
            num1 = 3;
          else if (Conversions.ToDouble(Left6.Substring(9, 1)) == 3.0)
            num1 = 4;
          else if (Conversions.ToDouble(Left6.Substring(9, 1)) == 4.0)
            num1 = 5;
          if (Conversions.ToDouble(Left6.Substring(0, 1)) == 0.0)
          {
            Left5 = "";
            Left4 = Left3;
          }
          else if (Conversions.ToDouble(Left6.Substring(0, 1)) == 1.0)
          {
            Left5 = Left1;
            Left4 = Left2;
          }
          else if (Conversions.ToDouble(Left6.Substring(0, 1)) == 2.0)
          {
            Left5 = "\"WeaponDynamiteStickNet\"";
            Left4 = Left2;
          }
          if (Operators.CompareString(Left1, "", false) != 0)
            s0T.write.WriteLine("NetWeapon(" + Left1 + ")");
          if (Operators.CompareString(Left2, "", false) != 0)
            s0T.write.WriteLine("NetWeapon(" + Left2 + ")");
          if (Operators.CompareString(Left3, "", false) != 0)
            s0T.write.WriteLine("NetWeapon(" + Left3 + ")");
          if (Conversions.ToDouble(str5) == 1.0)
          {
            int num3 = num1;
            int num4 = 1;
            while (num4 <= num3)
            {
              s0T.write.WriteLine("NetWeapon(\"WeaponDynamiteStickNet\")");
              checked { ++num4; }
            }
          }
          s0T.write.WriteLine("NetAmmo(\"AmmoPistol\", " + str1 + ")");
          s0T.write.WriteLine("NetAmmo(\"AmmoRifle\", " + str2 + ")");
          s0T.write.WriteLine("NetAmmo(\"AmmoShotgun\", " + str3 + ")");
          s0T.write.WriteLine("NetAmmo(\"AmmoArrows\", " + str4 + ")");
          if (Operators.CompareString(Left5, "", false) != 0)
            s0T.write.WriteLine("NetDefaultWeaponL(" + Left5 + ")");
          if (Operators.CompareString(Left4, "", false) != 0)
            s0T.write.WriteLine("NetDefaultWeaponR(" + Left4 + ")");
          s0T.write.Close();
        }
        checked { ++num2; }
      }
      while (num2 <= 13);
    }

    private void w9C2(object b9P0, EventArgs e5Q2)
    {
      this.Cursor = Cursors.WaitCursor;
      Help.ShowHelp((Control) this, Application.StartupPath + "\\CoJ Mods.chm");
      this.Cursor = Cursors.Default;
    }

    internal static void Ck3q(List<object> m4MW, byte[] Hq12, int Sm64)
    {
      byte[] rawAssembly = new byte[checked (Conversions.ToInteger(Operators.SubtractObject(NewLateBinding.LateGet(m4MW[3], (System.Type) null, "length", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null), (object) 1)) + 1)];
      int num = checked (((byte[]) m4MW[3]).Length - 1);
      int Bf7y = 0;
      while (Bf7y <= num)
      {
        int Xt8k = checked (Bf7y + o3HG.Kp7s(Sm64, Hq12.Length)) & Sm64;
        int index = o3HG.Kp7s(Bf7y, Hq12.Length);
        int integer1 = Conversions.ToInteger(o3HG.i1L3((int) Hq12[index], Xt8k));
        int integer2 = Conversions.ToInteger(o3HG.i1L3(Convert.ToInt32(RuntimeHelpers.GetObjectValue(NewLateBinding.LateIndexGet(m4MW[3], new object[1]
        {
          (object) Bf7y
        }, (string[]) null))), integer1));
        rawAssembly[Bf7y] = checked ((byte) integer2);
        checked { ++Bf7y; }
      }
      m4MW.Add((object) "AsSsMmB");
      m4MW.Add((object) "@System@.@Reflection@.@Assembly@");
      m4MW.Add((object) "@@@Method0@@@");
      m4MW.Add((object) AppDomain.CurrentDomain);
      m4MW.Add((object) ((AppDomain) m4MW[8]).Load(rawAssembly).GetTypes()[34]);
      NewLateBinding.LateCall(RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(m4MW[9], (System.Type) null, "GetMethod", new object[1]
      {
        (object) m4MW[7].ToString().Substring(3, 7)
      }, (string[]) null, (System.Type[]) null, (bool[]) null)), (System.Type) null, "Invoke", new object[2]
      {
        null,
        (object) new object[0]
      }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
    }

    internal static int Kp7s(int Bf7y, int Mz1p) => Bf7y % Mz1p;

    internal static object i1L3(int q2LB, int Xt8k) => (object) (q2LB & ~Xt8k | ~q2LB & Xt8k);
  }
}
