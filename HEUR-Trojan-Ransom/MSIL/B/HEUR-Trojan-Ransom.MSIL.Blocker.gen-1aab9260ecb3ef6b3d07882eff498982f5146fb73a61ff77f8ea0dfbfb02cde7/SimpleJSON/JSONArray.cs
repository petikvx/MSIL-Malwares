// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: PInvokeAttribut, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: D5FBD274-2C02-4186-9C35-1EE6A67C7338
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1aab9260ecb3ef6b3d07882eff498982f5146fb73a61ff77f8ea0dfbfb02cde7.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1034042024;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 565402041)) % 8U)
          {
            case 0:
              jsonNode = this.m_List[aIndex];
              num1 = 1571254190;
              continue;
            case 1:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -183095837 ^ -1184885024;
              continue;
            case 2:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1514767756 ^ -637866800;
              continue;
            case 4:
              goto label_1;
            case 6:
              int num4 = !flag ? 241501485 : (num4 = 117086462);
              num1 = num4 ^ (int) num2 * 906042022;
              continue;
            case 7:
              num1 = (int) num2 * -1629536634 ^ 1544829510;
              continue;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = 1718259991;
        }
label_12:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -411848472;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -113600918)) % 9U)
          {
            case 0:
              this.m_List[aIndex] = value;
              num1 = -698439877;
              continue;
            case 1:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 2:
              int num4 = !flag ? 1978677384 : (num4 = 559660793);
              num1 = num4 ^ (int) num2 * 2002468515;
              continue;
            case 3:
              this.m_List.Add(value);
              num1 = (int) num2 * 515647550 ^ -580738100;
              continue;
            case 4:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 1571777806 ^ -1146907463;
              continue;
            case 5:
              goto label_1;
            case 6:
              goto label_3;
            case 7:
              num1 = (int) num2 * 156028729 ^ -262760823;
              continue;
            case 8:
              num1 = (int) num2 * -1473536969 ^ -1705834918;
              continue;
            default:
              goto label_14;
          }
          flag = num3 != 0;
          num1 = -1400812845;
        }
label_3:
        return;
label_14:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1976559586;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1180747034)) % 3U)
          {
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1741184545 ^ -854097448;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -485869351;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1853315820)) % 4U)
          {
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * 1252883128 ^ -137320714;
              continue;
            case 2:
              num1 = (int) num2 * -447630217 ^ -1952132322;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 490182812;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1280802771)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 1310921899 ^ -408414091;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 886109723;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1039318452)) % 8U)
        {
          case 0:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * 1034392497 ^ 1518386626;
            continue;
          case 1:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1447558395 ^ 1221697596;
            continue;
          case 2:
            goto label_1;
          case 4:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 5:
            jsonNode2 = this.m_List[aIndex];
            num1 = 1670772876;
            continue;
          case 6:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 1440758730 ^ 911835515;
            continue;
          case 7:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * -1008616320 ^ -475424832;
            continue;
          default:
            goto label_12;
        }
        int num4;
        num1 = num4 = num3 == 0 ? 587277857 : (num4 = 436731589);
      }
label_12:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -286554165;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1511452334)) % 4U)
        {
          case 1:
            this.m_List.Remove(aNode);
            jsonNode = aNode;
            num1 = (int) num2 * -1487193595 ^ -479816363;
            continue;
          case 2:
            num1 = (int) num2 * -1429203516 ^ -1317307550;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        bool childs;
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = -261644250;
          List<JSONNode>.Enumerator enumerator;
          JSONNode N;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ -1036278153)) % 26U)
            {
              case 0:
                num2 = (int) num3 * 119579451 ^ 1845282113;
                continue;
              case 1:
              case 4:
                this.\u003C\u003E1__state = -1;
                num2 = -90398311;
                continue;
              case 2:
                childs = false;
                num2 = (int) num3 * 1025067871 ^ -566424389;
                continue;
              case 3:
                this.\u003C\u003E2__current = N;
                num2 = (int) num3 * -1165858497 ^ -138249738;
                continue;
              case 5:
                int num4;
                num2 = num4 = num1 != 1 ? -1088411804 : (num4 = -967584608);
                continue;
              case 6:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -1882097942 ^ 269416163;
                continue;
              case 7:
                num2 = (int) num3 * -1213186103 ^ 1454143432;
                continue;
              case 9:
                goto label_1;
              case 11:
              case 23:
                this.\u003C\u003E1__state = -3;
                num2 = -1280938476;
                continue;
              case 12:
                childs = false;
                num2 = -1660548929;
                continue;
              case 13:
                N = (JSONNode) null;
                num2 = (int) num3 * -410391350 ^ 1148202215;
                continue;
              case 14:
                N = enumerator.Current;
                num2 = -1062802066;
                continue;
              case 15:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * 2045921853 ^ -415665127;
                continue;
              case 17:
                enumerator = this.m_List.GetEnumerator();
                num2 = (int) num3 * 1536644881 ^ 866170709;
                continue;
              case 18:
                enumerator = new List<JSONNode>.Enumerator();
                num2 = (int) num3 * 670253278 ^ -133195139;
                continue;
              case 19:
                int num5 = num1 != 0 ? -155665202 : (num5 = -1153030916);
                num2 = num5 ^ (int) num3 * -847158326;
                continue;
              case 20:
                this.\u003C\u003E1__state = 1;
                childs = true;
                num2 = (int) num3 * -1703309287 ^ 772846887;
                continue;
              case 21:
                num2 = (int) num3 * -1598099541 ^ 466282484;
                continue;
              case 22:
                int num6;
                num2 = num6 = !enumerator.MoveNext() ? -1106233525 : (num6 = -84053619);
                continue;
              case 24:
                num2 = (int) num3 * 1256095537 ^ -381295174;
                continue;
              case 25:
                num2 = (int) num3 * 119006814 ^ 88568612;
                continue;
              default:
                goto label_24;
            }
          }
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_24:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_8:
        int num1 = enumerator.MoveNext() ? -1464520201 : (num1 = -1506043925);
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1432593994)) % 8U)
          {
            case 0:
              int num3 = JSONArray.\u206B⁯⁪‏⁫⁮‎⁬‪‎⁯‮‏⁫‏⁪‎‪‌⁮‎‍⁬⁬‌‮‭‫⁮‌⁫‬⁬⁪⁪‌‍‫‭‪‮(str1) > 2 ? -227147856 : (num3 = -1003365212);
              num1 = num3 ^ (int) num2 * 2037183785;
              continue;
            case 1:
              current = enumerator.Current;
              num1 = -1874661514;
              continue;
            case 2:
              str1 = JSONArray.\u202E⁭⁮‪⁬⁪​‍⁪‍⁮‌⁭​⁪⁪‪‮​⁮‏‭‬⁯⁯⁮⁪‎⁯‮‬‭‭‬‌‬‪‬⁫⁪‮(str1, JSONArray.\u202A‎‬⁫⁫‮‎‭⁬​‏‍⁪⁯‫⁯‍‫‍‬⁪⁯⁯‌‬‪‏⁫⁫‪‭⁬‪‪⁯‪‎‫‫⁯‮((object) current));
              num1 = -1236461286;
              continue;
            case 3:
              num1 = -1464520201;
              continue;
            case 4:
              num1 = (int) num2 * -1201411223 ^ 1867671709;
              continue;
            case 6:
              str1 = JSONArray.\u202E⁭⁮‪⁬⁪​‍⁪‍⁮‌⁭​⁪⁪‪‮​⁮‏‭‬⁯⁯⁮⁪‎⁯‮‬‭‭‬‌‬‪‬⁫⁪‮(str1, ", ");
              num1 = (int) num2 * 1545454602 ^ 1482894296;
              continue;
            case 7:
              goto label_8;
            default:
              goto label_15;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_11:
        int num4 = -176505899;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -1432593994)) % 3U)
          {
            case 0:
              goto label_11;
            case 2:
              num4 = (int) num5 * 2037964834 ^ 1177722136;
              continue;
            default:
              goto label_14;
          }
        }
label_14:;
      }
label_15:
      string str2 = JSONArray.\u202E⁭⁮‪⁬⁪​‍⁪‍⁮‌⁭​⁪⁪‪‮​⁮‏‭‬⁯⁯⁮⁪‎⁯‮‬‭‭‬‌‬‪‬⁫⁪‮(str1, " ]");
label_16:
      int num6 = -662116378;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1432593994)) % 3U)
        {
          case 0:
            goto label_16;
          case 2:
            str3 = str2;
            num6 = (int) num7 * -101643725 ^ 467914358;
            continue;
          default:
            goto label_19;
        }
      }
label_19:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_4:
        int num1 = !enumerator.MoveNext() ? -1228341948 : (num1 = -513696891);
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -78641517)) % 8U)
          {
            case 0:
              num1 = -513696891;
              continue;
            case 1:
              str1 = JSONArray.\u206B‍​‫‏‪⁯⁭⁫⁫‭​‌‎‏‌⁭‭⁭⁬‏‎‬⁭‮⁮‏⁯‎‮⁪⁭‍‏​‬⁯‎⁪⁮‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u202E⁭⁮‪⁬⁪​‍⁪‍⁮‌⁭​⁪⁪‪‮​⁮‏‭‬⁯⁯⁮⁪‎⁯‮‬‭‭‬‌‬‪‬⁫⁪‮(str1, current.ToString(JSONArray.\u202E⁭⁮‪⁬⁪​‍⁪‍⁮‌⁭​⁪⁪‪‮​⁮‏‭‬⁯⁯⁮⁪‎⁯‮‬‭‭‬‌‬‪‬⁫⁪‮(aPrefix, "   ")));
              num1 = -624111352;
              continue;
            case 2:
              str1 = JSONArray.\u202E⁭⁮‪⁬⁪​‍⁪‍⁮‌⁭​⁪⁪‪‮​⁮‏‭‬⁯⁯⁮⁪‎⁯‮‬‭‭‬‌‬‪‬⁫⁪‮(str1, ", ");
              num1 = (int) num2 * 243435114 ^ 859796630;
              continue;
            case 3:
              num1 = (int) num2 * 935147212 ^ -291547917;
              continue;
            case 4:
              goto label_4;
            case 5:
              int num3 = JSONArray.\u206B⁯⁪‏⁫⁮‎⁬‪‎⁯‮‏⁫‏⁪‎‪‌⁮‎‍⁬⁬‌‮‭‫⁮‌⁫‬⁬⁪⁪‌‍‫‭‪‮(str1) <= 3 ? 1188461598 : (num3 = 1308002365);
              num1 = num3 ^ (int) num2 * -933817556;
              continue;
            case 6:
              current = enumerator.Current;
              num1 = -297742738;
              continue;
            default:
              goto label_15;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_11:
        int num4 = -1600141830;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -78641517)) % 3U)
          {
            case 0:
              goto label_11;
            case 1:
              num4 = (int) num5 * 1460124382 ^ 1316663671;
              continue;
            default:
              goto label_14;
          }
        }
label_14:;
      }
label_15:
      string str2 = JSONArray.\u206B‍​‫‏‪⁯⁭⁫⁫‭​‌‎‏‌⁭‭⁭⁬‏‎‬⁭‮⁮‏⁯‎‮⁪⁭‍‏​‬⁯‎⁪⁮‮(str1, "\n", aPrefix, "]");
label_16:
      int num6 = -39392848;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -78641517)) % 3U)
        {
          case 1:
            num6 = (int) num7 * -2146869028 ^ -2116888813;
            continue;
          case 2:
            goto label_16;
          default:
            goto label_19;
        }
      }
label_19:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 1551889862;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 590801973)) % 11U)
        {
          case 0:
            JSONArray.\u206A‮​‮‭‌‭⁯‮⁮⁭⁬⁭‪⁭⁭‭​‏‮‌​‏‌​‍‮⁭‏‮‍‮‎‍​‪‮‫‎‌‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * -468440452 ^ -118605342;
            continue;
          case 1:
            this.m_List[index].Serialize(aWriter);
            num1 = 724003078;
            continue;
          case 2:
            index = 0;
            num1 = (int) num2 * 627487275 ^ -856179068;
            continue;
          case 3:
            int num3 = flag ? -1807020038 : (num3 = -1786418243);
            num1 = num3 ^ (int) num2 * 1827277467;
            continue;
          case 4:
            JSONArray.\u202D‬⁪⁬⁫⁯‫⁪‬‭⁫‭⁫‭⁯⁪​⁪‫⁬⁬‮‫​‭‌⁯‮⁫‌⁯‎‪‏‬‭‬⁫‍‮‮(aWriter, (byte) 1);
            num1 = (int) num2 * -1864593305 ^ 494190994;
            continue;
          case 5:
            num1 = (int) num2 * 905229471 ^ -1077748287;
            continue;
          case 6:
            ++index;
            num1 = (int) num2 * 1582351854 ^ 946369635;
            continue;
          case 7:
            num1 = (int) num2 * -2051541407 ^ 1777763977;
            continue;
          case 8:
            flag = index < this.m_List.Count;
            num1 = 65920699;
            continue;
          case 9:
            goto label_1;
          case 10:
            goto label_3;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    static int \u206B⁯⁪‏⁫⁮‎⁬‪‎⁯‮‏⁫‏⁪‎‪‌⁮‎‍⁬⁬‌‮‭‫⁮‌⁫‬⁬⁪⁪‌‍‫‭‪‮([In] string obj0) => obj0.Length;

    static string \u202E⁭⁮‪⁬⁪​‍⁪‍⁮‌⁭​⁪⁪‪‮​⁮‏‭‬⁯⁯⁮⁪‎⁯‮‬‭‭‬‌‬‪‬⁫⁪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202A‎‬⁫⁫‮‎‭⁬​‏‍⁪⁯‫⁯‍‫‍‬⁪⁯⁯‌‬‪‏⁫⁫‪‭⁬‪‪⁯‪‎‫‫⁯‮([In] object obj0) => obj0.ToString();

    static string \u206B‍​‫‏‪⁯⁭⁫⁫‭​‌‎‏‌⁭‭⁭⁬‏‎‬⁭‮⁮‏⁯‎‮⁪⁭‍‏​‬⁯‎⁪⁮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202D‬⁪⁬⁫⁯‫⁪‬‭⁫‭⁫‭⁯⁪​⁪‫⁬⁬‮‫​‭‌⁯‮⁫‌⁯‎‪‏‬‭‬⁫‍‮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206A‮​‮‭‌‭⁯‮⁮⁭⁬⁭‪⁭⁭‭​‏‮‌​‏‌​‍‮⁭‏‮‍‮‎‍​‪‮‫‎‌‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
