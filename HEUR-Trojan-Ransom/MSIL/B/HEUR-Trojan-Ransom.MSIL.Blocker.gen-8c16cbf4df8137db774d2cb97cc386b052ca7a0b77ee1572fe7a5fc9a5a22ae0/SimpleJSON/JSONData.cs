// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: SZGenericArrayEnumerat, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: E834FD24-872B-47C0-BFE1-9B14E3D5CFBB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-8c16cbf4df8137db774d2cb97cc386b052ca7a0b77ee1572fe7a5fc9a5a22ae0.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
        string data = this.m_Data;
label_1:
        int num1 = -746154314;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1270559105)) % 3U)
          {
            case 1:
              num1 = (int) num2 * 61901522 ^ -1207709182;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData)
    {
label_1:
      int num1 = -80894718;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1973482737)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -805599835 ^ 676732268;
            continue;
          case 2:
            this.m_Data = aData;
            num1 = (int) num2 * -2135225056 ^ -1461811780;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONData(float aData) => this.AsFloat = aData;

    public JSONData(double aData)
    {
label_1:
      int num1 = 2145762598;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 828232433)) % 5U)
        {
          case 0:
            this.AsDouble = aData;
            num1 = (int) num2 * 2044595071 ^ -1607933981;
            continue;
          case 1:
            num1 = (int) num2 * -163331675 ^ -1581153908;
            continue;
          case 2:
            goto label_3;
          case 3:
            num1 = (int) num2 * -1146882781 ^ -841942271;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(bool aData)
    {
label_1:
      int num1 = 1495784262;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2109327383)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1975463736 ^ -593115195;
            continue;
          case 2:
            this.AsBool = aData;
            num1 = (int) num2 * -599756695 ^ -74566607;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONData(int aData) => this.AsInt = aData;

    public override string ToString()
    {
label_1:
      int num1 = -1631261756;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1064284318)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -839971211 ^ 1589176640;
            continue;
          case 2:
            str = JSONData.\u200E‎‮‎​⁯‬⁬‬⁯⁮‮‫‏⁫‮⁬‏⁪‭‏‌‎‌⁯‎‭⁪‮‮‍‎⁮‪‭⁫⁮‮‭⁭‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -455360506 ^ -1932590453;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1059641241;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1954026587)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str = JSONData.\u200E‎‮‎​⁯‬⁬‬⁯⁮‮‫‏⁫‮⁬‏⁪‭‏‌‎‌⁯‎‭⁪‮‮‍‎⁮‪‭⁫⁮‮‭⁭‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * 407700865 ^ -1977250275;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -317030344;
      bool flag1;
      JSONData jsonData;
      bool flag2;
      bool flag3;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2136699388)) % 40U)
        {
          case 0:
            flag2 = JSONData.\u206A⁮⁮‮⁭‭‍‪⁫⁭⁭⁬‬⁮‮‬‏⁭‌‎⁮‮‭‌⁪⁮‎‌⁯⁯‏⁫‫⁭⁮‎⁮⁬‍‫‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -574453048 ^ -837607605;
            continue;
          case 1:
            JSONData.\u202A‍⁯⁬​⁭​‍‍‮‎⁮⁮‪⁪‎‪⁫​⁪‭‮⁬​⁫‪‏‪‭⁪⁯‏‭‍‍⁪⁪‫⁭‫‮(aWriter, this.AsInt);
            num1 = (int) num2 * 1228062340 ^ -323341232;
            continue;
          case 2:
            JSONData.\u200F‪‎⁪‫​‪‎‌‌‬‏⁯‬⁮⁭⁭⁮⁪‬⁭‭⁬‭‌‮‫‎⁫‫‮⁯⁯‍​‍‬‪‫‭‮(aWriter, (byte) 5);
            num1 = (int) num2 * -1672311184 ^ -521140116;
            continue;
          case 3:
            num1 = (int) num2 * -1004954560 ^ 566369283;
            continue;
          case 4:
            num1 = (int) num2 * 704281933 ^ 770006157;
            continue;
          case 5:
            num1 = (int) num2 * -1946281944 ^ 181902731;
            continue;
          case 6:
            num1 = (int) num2 * -755122510 ^ 1969224370;
            continue;
          case 7:
            int num3 = flag2 ? -1860222727 : (num3 = -1533671851);
            num1 = num3 ^ (int) num2 * -962120555;
            continue;
          case 8:
            num1 = (int) num2 * 343405330 ^ 459412016;
            continue;
          case 9:
            num1 = (int) num2 * 938073809 ^ -1165306070;
            continue;
          case 10:
            num1 = (int) num2 * -745842487 ^ 699215891;
            continue;
          case 11:
            num1 = (int) num2 * 852793913 ^ -1040256500;
            continue;
          case 12:
            num1 = (int) num2 * -274809030 ^ -1421742645;
            continue;
          case 13:
            flag1 = JSONData.\u206A⁮⁮‮⁭‭‍‪⁫⁭⁭⁬‬⁮‮‬‏⁭‌‎⁮‮‭‌⁪⁮‎‌⁯⁯‏⁫‫⁭⁮‎⁮⁬‍‫‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 827293493 ^ 448507779;
            continue;
          case 14:
            num1 = (int) num2 * -155180920 ^ 630845760;
            continue;
          case 15:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * -180602624 ^ 967207018;
            continue;
          case 16:
            JSONData.\u202C⁮‮⁪‬‫‏‌‎‎⁫‫⁪‭⁫‎‪⁮‪‮‏⁯‫‏‏‪⁯⁮‏​‏⁭‪‪‫⁭‪⁪‎‍‮(aWriter, this.AsDouble);
            num1 = (int) num2 * 801359562 ^ 429440839;
            continue;
          case 17:
            goto label_1;
          case 18:
            jsonData.AsBool = this.AsBool;
            num1 = -1800567534;
            continue;
          case 19:
            jsonData.AsDouble = this.AsDouble;
            num1 = -464845155;
            continue;
          case 20:
            int num4 = JSONData.\u206A⁮⁮‮⁭‭‍‪⁫⁭⁭⁬‬⁮‮‬‏⁭‌‎⁮‮‭‌⁪⁮‎‌⁯⁯‏⁫‫⁭⁮‎⁮⁬‍‫‮(jsonData.m_Data, this.m_Data) ? 1601366895 : (num4 = 1863870432);
            num1 = num4 ^ (int) num2 * 1323751606;
            continue;
          case 21:
            JSONData.\u200F‪‎⁪‫​‪‎‌‌‬‏⁯‬⁮⁭⁭⁮⁪‬⁭‭⁬‭‌‮‫‎⁫‫‮⁯⁯‍​‍‬‪‫‭‮(aWriter, (byte) 3);
            num1 = -1342177516;
            continue;
          case 22:
            num1 = (int) num2 * -70965378 ^ -1351165851;
            continue;
          case 23:
            JSONData.\u202E⁮⁫‭⁮‬⁯‪⁭⁮‌‮⁬​‭‭⁮⁮‫‭‍⁫‪‏‫​‬⁫⁮‬‪‍⁯‫‏‬‎‮⁬‪‮(aWriter, this.AsBool);
            num1 = (int) num2 * -859882586 ^ 487940262;
            continue;
          case 24:
            num1 = (int) num2 * 361742447 ^ 1991105765;
            continue;
          case 25:
            num1 = (int) num2 * 1308908394 ^ 556630361;
            continue;
          case 26:
            JSONData.\u200F‪‎⁪‫​‪‎‌‌‬‏⁯‬⁮⁭⁭⁮⁪‬⁭‭⁬‭‌‮‫‎⁫‫‮⁯⁯‍​‍‬‪‫‭‮(aWriter, (byte) 6);
            num1 = (int) num2 * -449464701 ^ 476103605;
            continue;
          case 27:
            int num5 = flag3 ? 1891793220 : (num5 = 1628820981);
            num1 = num5 ^ (int) num2 * 1078954078;
            continue;
          case 28:
            jsonData = new JSONData("");
            num1 = (int) num2 * -514314933 ^ -1059716177;
            continue;
          case 29:
            JSONData.\u200F‪‎⁪‫​‪‎‌‌‬‏⁯‬⁮⁭⁭⁮⁪‬⁭‭⁬‭‌‮‫‎⁫‫‮⁯⁯‍​‍‬‪‫‭‮(aWriter, (byte) 7);
            JSONData.\u206F‭‌‮⁯​‮⁭‍⁭⁪​⁯‍‎⁫‏​⁪⁮‭‫‌‭⁮⁭‪⁬‮‪⁫⁪‌‬‏⁭‏‬‭‎‮(aWriter, this.AsFloat);
            num1 = (int) num2 * 1830956197 ^ -227162487;
            continue;
          case 30:
            int num6 = flag1 ? 1978187684 : (num6 = 1591366751);
            num1 = num6 ^ (int) num2 * 663874481;
            continue;
          case 31:
            goto label_3;
          case 32:
            JSONData.\u202A⁬‎⁫⁬‭⁪⁫‫⁯‬⁯⁬⁮‌⁮⁪⁪‌‌​‭⁯⁮‍⁫⁮⁯⁪‪⁬‍⁮‬⁪⁭⁫‬⁯⁯‮(aWriter, this.m_Data);
            num1 = (int) num2 * 1266286870 ^ 2020096253;
            continue;
          case 33:
            num1 = (int) num2 * -882365769 ^ -1518978301;
            continue;
          case 34:
            JSONData.\u200F‪‎⁪‫​‪‎‌‌‬‏⁯‬⁮⁭⁭⁮⁪‬⁭‭⁬‭‌‮‫‎⁫‫‮⁯⁯‍​‍‬‪‫‭‮(aWriter, (byte) 4);
            num1 = (int) num2 * 542928385 ^ -1874931585;
            continue;
          case 35:
            num1 = (int) num2 * -512988952 ^ 1041864702;
            continue;
          case 36:
            jsonData.AsFloat = this.AsFloat;
            num1 = -1011620447;
            continue;
          case 37:
            flag3 = JSONData.\u206A⁮⁮‮⁭‭‍‪⁫⁭⁭⁬‬⁮‮‬‏⁭‌‎⁮‮‭‌⁪⁮‎‌⁯⁯‏⁫‫⁭⁮‎⁮⁬‍‫‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * -1733488982 ^ 1738275853;
            continue;
          case 38:
            num1 = (int) num2 * -1743719740 ^ 1276581966;
            continue;
          case 39:
            num1 = (int) num2 * 2004460275 ^ -952562306;
            continue;
          default:
            goto label_42;
        }
      }
label_3:
      return;
label_42:;
    }

    static string \u200E‎‮‎​⁯‬⁬‬⁯⁮‮‫‏⁫‮⁬‏⁪‭‏‌‎‌⁯‎‭⁪‮‮‍‎⁮‪‭⁫⁮‮‭⁭‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u206A⁮⁮‮⁭‭‍‪⁫⁭⁭⁬‬⁮‮‬‏⁭‌‎⁮‮‭‌⁪⁮‎‌⁯⁯‏⁫‫⁭⁮‎⁮⁬‍‫‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u200F‪‎⁪‫​‪‎‌‌‬‏⁯‬⁮⁭⁭⁮⁪‬⁭‭⁬‭‌‮‫‎⁫‫‮⁯⁯‍​‍‬‪‫‭‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202A‍⁯⁬​⁭​‍‍‮‎⁮⁮‪⁪‎‪⁫​⁪‭‮⁬​⁫‪‏‪‭⁪⁯‏‭‍‍⁪⁪‫⁭‫‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206F‭‌‮⁯​‮⁭‍⁭⁪​⁯‍‎⁫‏​⁪⁮‭‫‌‭⁮⁭‪⁬‮‪⁫⁪‌‬‏⁭‏‬‭‎‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u202C⁮‮⁪‬‫‏‌‎‎⁫‫⁪‭⁫‎‪⁮‪‮‏⁯‫‏‏‪⁯⁮‏​‏⁭‪‪‫⁭‪⁪‎‍‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u202E⁮⁫‭⁮‬⁯‪⁭⁮‌‮⁬​‭‭⁮⁮‫‭‍⁫‪‏‫​‬⁫⁮‬‪‍⁯‫‏‬‎‮⁬‪‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u202A⁬‎⁫⁬‭⁪⁫‫⁯‬⁯⁬⁮‌⁮⁪⁪‌‌​‭⁯⁮‍⁫⁮⁯⁪‪⁬‍⁮‬⁪⁭⁫‬⁯⁯‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
