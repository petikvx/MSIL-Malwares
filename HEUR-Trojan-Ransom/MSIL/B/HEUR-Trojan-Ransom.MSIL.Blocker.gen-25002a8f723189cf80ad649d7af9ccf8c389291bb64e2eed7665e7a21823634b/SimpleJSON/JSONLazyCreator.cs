// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: Eviden, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 0FBAEA8D-82D6-42CE-BC01-F979DED3F8E4
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-25002a8f723189cf80ad649d7af9ccf8c389291bb64e2eed7665e7a21823634b.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
label_1:
      int num1 = -1770390246;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -327243322)) % 3U)
        {
          case 1:
            this.m_Node = aNode;
            num1 = (int) num2 * -1461309427 ^ -987061493;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = 961560890;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1404463868)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 1329841849 ^ -407721651;
            continue;
          case 3:
            this.m_Node = aNode;
            this.m_Key = aKey;
            num1 = (int) num2 * -870550168 ^ -1062551827;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = 104063379;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1999190470)) % 12U)
        {
          case 0:
            goto label_1;
          case 1:
            int num3 = flag ? -62068429 : (num3 = -1140986498);
            num1 = num3 ^ (int) num2 * 1876872431;
            continue;
          case 2:
            num1 = (int) num2 * 1381574516 ^ -2117980535;
            continue;
          case 3:
            num1 = (int) num2 * -583555345 ^ -418697161;
            continue;
          case 4:
            this.m_Node = (JSONNode) null;
            num1 = 2087280341;
            continue;
          case 5:
            flag = this.m_Key == null;
            num1 = (int) num2 * -1301587751 ^ -171632086;
            continue;
          case 6:
            num1 = (int) num2 * -1891872663 ^ 1221772680;
            continue;
          case 7:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = 825199200;
            continue;
          case 8:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * -100360771 ^ -2027983160;
            continue;
          case 9:
            num1 = (int) num2 * 1765491364 ^ -1182963142;
            continue;
          case 10:
            num1 = (int) num2 * -934735345 ^ 481896325;
            continue;
          case 11:
            goto label_3;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -26502212;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -976291419)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1630509388 ^ -799575458;
              continue;
            case 3:
              num1 = (int) num2 * 1508480524 ^ -1364381381;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 256436054;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 136564804)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 652211316 ^ -898557471;
              continue;
            case 2:
              aVal.Add(value);
              num1 = (int) num2 * 1898478161 ^ 2022031573;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -631670367 ^ 2120513004;
              continue;
            case 4:
              aVal = new JSONArray();
              num1 = (int) num2 * -532944063 ^ -1946901500;
              continue;
            case 5:
              goto label_3;
            default:
              goto label_8;
          }
        }
label_3:
        return;
label_8:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
label_1:
        int num1 = -416623845;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1735233587)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1539964971 ^ -634481112;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
        JSONClass aVal = new JSONClass();
        aVal.Add(aKey, value);
label_1:
        int num1 = -831960444;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1426976583)) % 4U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 726146473 ^ -1192762093;
              continue;
            case 1:
              num1 = (int) num2 * 928049839 ^ -274343182;
              continue;
            case 2:
              goto label_3;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override void Add(JSONNode aItem)
    {
label_1:
      int num1 = -382438368;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -824740279)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            JSONArray aVal = new JSONArray();
            aVal.Add(aItem);
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * -1013223728 ^ -902292131;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
label_1:
      int num1 = -1382379882;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -696355973)) % 5U)
        {
          case 0:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1511265167 ^ -2072793637;
            continue;
          case 1:
            aVal.Add(aKey, aItem);
            num1 = (int) num2 * -1686915330 ^ -2073473439;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          case 4:
            num1 = (int) num2 * -2062544495 ^ 475937217;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = 1805621117;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 883414293)) % 5U)
        {
          case 0:
            goto label_4;
          case 1:
            flag = true;
            num1 = (int) num2 * 1523240562 ^ -909704835;
            continue;
          case 2:
            num1 = (int) num2 * -1817130340 ^ 712632501;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      return flag;
label_4:
      flag = (object) a == b;
      num1 = 719629759;
      goto label_2;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 897764828;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 738319795)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -25298976 ^ 2043987129;
            continue;
          case 3:
            flag = !(a == b);
            num1 = (int) num2 * 1996172699 ^ -1646571325;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 178345044;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1832668314)) % 7U)
        {
          case 0:
            flag2 = true;
            num1 = (int) num2 * 353378868 ^ 834388791;
            continue;
          case 2:
            flag2 = (object) this == obj;
            num1 = 2129983161;
            continue;
          case 3:
            goto label_1;
          case 4:
            int num3 = flag1 ? -1989771367 : (num3 = -115162169);
            num1 = num3 ^ (int) num2 * -21582735;
            continue;
          case 5:
            flag1 = obj == null;
            num1 = (int) num2 * 514185115 ^ -1006316559;
            continue;
          case 6:
            num1 = (int) num2 * 920229694 ^ 478576655;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return flag2;
    }

    public override int GetHashCode()
    {
label_1:
      int num1 = -1070853700;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1146119902)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 1513261873 ^ -1940757581;
            continue;
          case 2:
            hashCode = base.GetHashCode();
            num1 = (int) num2 * -1400377407 ^ -29487747;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return hashCode;
    }

    public override string ToString()
    {
label_1:
      int num1 = 1451858614;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2072074428)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * 199769898 ^ 1440381385;
            continue;
          case 2:
            str = "";
            num1 = (int) num2 * 1602402506 ^ 519425145;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -1311953266;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -74514251)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = "";
            num1 = (int) num2 * -1424119660 ^ -1607592589;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
        JSONData aVal = new JSONData(0);
label_1:
        int num1 = 569986312;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1092366050)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              this.Set((JSONNode) aVal);
              asInt = 0;
              num1 = (int) num2 * 343523150 ^ 4956941;
              continue;
            case 3:
              num1 = (int) num2 * -961471451 ^ -852189436;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asInt;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = 35880903;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1512220394)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -1232433043 ^ -1898667203;
              continue;
            case 3:
              asFloat = 0.0f;
              num1 = (int) num2 * -182093518 ^ 1140143394;
              continue;
            case 4:
              num1 = (int) num2 * -1763299715 ^ -1872159858;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 1583470720;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1260056821)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              aVal = new JSONData(value);
              num1 = (int) num2 * 401301387 ^ 57695584;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 23211011 ^ 1104040059;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = -1409061859;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1901541498)) % 4U)
          {
            case 0:
              goto label_1;
            case 2:
              asDouble = 0.0;
              num1 = (int) num2 * -361926583 ^ 2060184561;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -544296625 ^ 1678736489;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -1945102036;
        JSONData aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1102232541)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              aVal = new JSONData(value);
              num1 = (int) num2 * -1252505462 ^ -692319030;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        this.Set((JSONNode) aVal);
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 294635277;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 776337982)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              asBool = false;
              num1 = (int) num2 * 1093792045 ^ -1763392291;
              continue;
            case 2:
              num1 = (int) num2 * -1466925658 ^ 285693958;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 384823474 ^ 247556961;
              continue;
            case 5:
              aVal = new JSONData(false);
              num1 = (int) num2 * -475685525 ^ 1437886504;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override JSONArray AsArray
    {
      get
      {
        JSONArray aVal = new JSONArray();
label_1:
        int num1 = 1909111667;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2142914219)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Set((JSONNode) aVal);
              asArray = aVal;
              num1 = (int) num2 * -1497590354 ^ 978040308;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = -1949339245;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1893033632)) % 5U)
          {
            case 1:
              asObject = aVal;
              num1 = (int) num2 * -1945128396 ^ 367386140;
              continue;
            case 2:
              num1 = (int) num2 * 819338342 ^ -269999280;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * -194360242 ^ 1725727208;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asObject;
      }
    }
  }
}
