// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: ILegacyEvidenceAdapt, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7C8AEC27-D027-41D5-B71C-E99019A8E594
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a42b3919356aa815980faeac0fc6222bd4a2d6f6cc5bdc01c5a5f55014a9c66e.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u206A‬⁮​‍‮⁫‫‍⁫‏‪⁮⁫​⁬⁬‮‮⁭‍‍⁬‌⁭⁭⁬⁫⁬‭‪‏⁯⁬‪⁮⁯⁪⁮‫‮();

    public static void Shuffle<T>(IList<T> list)
    {
      int count = list.Count;
label_1:
      int num1 = -2005523477;
      int index;
      T obj;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1700317819)) % 12U)
        {
          case 0:
            num1 = (int) num2 * 983119217 ^ 1437870433;
            continue;
          case 1:
            --count;
            num1 = (int) num2 * 799476111 ^ 1516122729;
            continue;
          case 2:
            num1 = (int) num2 * -881702906 ^ -259853967;
            continue;
          case 3:
            num1 = (int) num2 * 838793306 ^ -1115616611;
            continue;
          case 4:
            flag = count > 1;
            num1 = -1482096619;
            continue;
          case 5:
            goto label_1;
          case 6:
            list[count] = obj;
            num1 = (int) num2 * 396522970 ^ 288831341;
            continue;
          case 7:
            goto label_3;
          case 8:
            int num3 = flag ? 165725140 : (num3 = 55919142);
            num1 = num3 ^ (int) num2 * 658765191;
            continue;
          case 9:
            num1 = -533099664;
            continue;
          case 10:
            obj = list[index];
            list[index] = list[count];
            num1 = (int) num2 * 176293296 ^ -982020286;
            continue;
          case 11:
            index = ScrambleExtention.\u202D‭⁪‍‬​⁭‪‮⁫‪‫⁬‭‎⁯⁪‪⁯⁪⁫‭⁫‪​‮‌⁮⁮​‏⁮​​‏‏‫‬‭⁯‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * -1770057724 ^ 903272339;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u202D‭⁪‍‬​⁭‪‮⁫‪‫⁬‭‎⁯⁪‪⁯⁪⁫‭⁫‪​‮‌⁮⁮​‏⁮​​‏‏‫‬‭⁯‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u206A‬⁮​‍‮⁫‫‍⁫‏‪⁮⁫​⁬⁬‮‮⁭‍‍⁬‌⁭⁭⁬⁫⁬‭‪‏⁯⁬‪⁮⁯⁪⁮‫‮() => new Random();
  }
}
