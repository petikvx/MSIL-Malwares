// Decompiled with JetBrains decompiler
// Type: $¬
// Assembly: Adobe8, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CC9D478A-E5DC-4ECF-AC7E-9A744313F8C7
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.Win32.Pakes.snf-786c0f0942749383e883c0a3f69d54abb170ffb0ff93e36a3df7c76bec2de739.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

[GeneratedCode("MyTemplate", "8.0.0.0")]
[SuppressIldasm]
[HideModuleName]
[StandardModule]
internal sealed class \u0024\u00AC
{
  private static readonly \u0024\u00AC.\u003E\u00AC<\u0021\u00AC> \u0040;
  private static readonly \u0024\u00AC.\u003E\u00AC<\u0025\u00AC> \u003B;
  private static readonly \u0024\u00AC.\u003E\u00AC<User> \u003F;
  private static readonly \u0024\u00AC.\u003E\u00AC<\u0024\u00AC.\u00A3\u00AC> \u00AC;

  static \u0024\u00AC()
  {
    if (false)
      ;
    \u0024\u00AC.\u0040 = new \u0024\u00AC.\u003E\u00AC<\u0021\u00AC>();
    \u0024\u00AC.\u003B = new \u0024\u00AC.\u003E\u00AC<\u0025\u00AC>();
    \u0024\u00AC.\u003F = new \u0024\u00AC.\u003E\u00AC<User>();
    \u0024\u00AC.\u00AC = new \u0024\u00AC.\u003E\u00AC<\u0024\u00AC.\u00A3\u00AC>();
  }

  [DebuggerHidden]
  [SpecialName]
  internal static \u0021\u00AC \u0040()
  {
    if (false)
      ;
    return \u0024\u00AC.\u0040.\u0040();
  }

  [DebuggerHidden]
  [SpecialName]
  internal static \u0025\u00AC \u003B()
  {
    if (false)
      ;
    return \u0024\u00AC.\u003B.\u0040();
  }

  [DebuggerHidden]
  [SpecialName]
  internal static User \u003F()
  {
    if (false)
      ;
    return \u0024\u00AC.\u003F.\u0040();
  }

  [DebuggerHidden]
  [SpecialName]
  internal static \u0024\u00AC.\u00A3\u00AC \u00AC()
  {
    if (false)
      ;
    return \u0024\u00AC.\u00AC.\u0040();
  }

  [SuppressIldasm]
  [EditorBrowsable(EditorBrowsableState.Never)]
  [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
  internal sealed class \u00A3\u00AC
  {
    [DebuggerHidden]
    [EditorBrowsable(EditorBrowsableState.Never)]
    public override bool Equals([In] object obj0)
    {
      if (false)
        ;
      return base.Equals(RuntimeHelpers.GetObjectValue(obj0));
    }

    [DebuggerHidden]
    [EditorBrowsable(EditorBrowsableState.Never)]
    public override int GetHashCode()
    {
      if (false)
        ;
      return base.GetHashCode();
    }

    [DebuggerHidden]
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal Type \u0040()
    {
      if (false)
        ;
      return typeof (\u0024\u00AC.\u00A3\u00AC);
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [DebuggerHidden]
    public override string ToString()
    {
      if (false)
        ;
      return base.ToString();
    }

    [DebuggerHidden]
    private static T \u0040<T>([In] T obj0) where T : new()
    {
      if (false)
        ;
      return (object) obj0 == null ? new T() : obj0;
    }

    [DebuggerHidden]
    private void \u0040<T>([In] ref T obj0)
    {
      if (false)
        ;
      obj0 = default (T);
    }

    [DebuggerHidden]
    [EditorBrowsable(EditorBrowsableState.Never)]
    public \u00A3\u00AC()
    {
      if (false)
        ;
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }
  }

  [ComVisible(false)]
  [EditorBrowsable(EditorBrowsableState.Never)]
  [SuppressIldasm]
  internal sealed class \u003E\u00AC<T> where T : new()
  {
    [DebuggerHidden]
    [SpecialName]
    internal T \u0040()
    {
      if (false)
        ;
      // ISSUE: reference to a compiler-generated field
      if ((object) \u0024\u00AC.\u003E\u00AC<T>.\u0040 == null)
      {
        // ISSUE: reference to a compiler-generated field
        \u0024\u00AC.\u003E\u00AC<T>.\u0040 = new T();
      }
      // ISSUE: reference to a compiler-generated field
      return \u0024\u00AC.\u003E\u00AC<T>.\u0040;
    }

    [DebuggerHidden]
    [EditorBrowsable(EditorBrowsableState.Never)]
    public \u003E\u00AC()
    {
      if (false)
        ;
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }
  }
}
