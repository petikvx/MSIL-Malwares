// Decompiled with JetBrains decompiler
// Type: g4M2.Td49
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using e9H1;
using Fe7;
using Fm49;
using Le76;
using m3P9;
using m5F8;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.InteropServices;
using x7X;
using Zp76;

namespace g4M2
{
  [StandardModule]
  internal sealed class Td49
  {
    internal static Zx5f ႣႤ;
    internal static int[] ႣႣ;

    public static void Bn6t()
    {
      double num1 = 0.0;
      double num2 = 0.0;
      int num3 = 0;
      double num4 = 0.0;
      double num5 = 0.0;
      int num6 = 0;
      double num7 = 0.0;
      DataContext dataContext = (DataContext) new Tt1();
      Table<Af03> ⴃ1 = (dataContext as Tt1).Ⴃ;
      object obj1 = (object) Expression.Parameter(typeof (Af03), "d");
      // ISSUE: method reference
      // ISSUE: method reference
      Expression<Func<Af03, bool>> predicate1 = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) (obj1 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.f5CG))),
        (Expression) Expression.Constant((object) "Staff", typeof (string)),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), obj1 as ParameterExpression);
      object list1 = (object) ⴃ1.Where<Af03>(predicate1).ToList<Af03>();
      Table<Ex7f> ⴀ = ((Tt1) dataContext).Ⴀ;
      object body = (object) Expression.Parameter(typeof (Ex7f), "d");
      Expression<Func<Ex7f, Ex7f>> selector = Expression.Lambda<Func<Ex7f, Ex7f>>((Expression) (body as ParameterExpression), body as ParameterExpression);
      object list2 = (object) ⴀ.Select<Ex7f, Ex7f>(selector).ToList<Ex7f>();
      try
      {
        foreach (INotifyPropertyChanging propertyChanging in (List<Ex7f>) list2)
        {
          if (((Ex7f) propertyChanging).Ⴈ.Equals("money"))
            num4 += Convert.ToDouble(Convert.ToDecimal((object) (propertyChanging as Ex7f).Ⴅ));
          else
            num5 += Convert.ToDouble(Convert.ToDecimal((object) ((Ex7f) propertyChanging).Ⴅ));
        }
      }
      finally
      {
        List<Ex7f>.Enumerator enumerator;
        enumerator.Dispose();
      }
      try
      {
        foreach (Af03 af03 in list1 as List<Af03>)
        {
          object obj2 = (object) new Td49.Ta46(obj2 as Td49.Ta46);
          ((Td49.Ta46) obj2).Ⴄ = af03;
          double num8 = Convert.ToDouble(Decimal.Multiply(Decimal.Multiply((obj2 as Td49.Ta46).Ⴄ.Ⴃ, 9M), 23M));
          double num9 = num4 + num8 * num5 / 100.0;
          Table<Wf2> ⴃ2 = ((Tt1) dataContext).Ⴃ;
          object obj3 = (object) Expression.Parameter(typeof (Wf2), "c");
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: field reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: type reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: type reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          Expression<Func<Wf2, bool>> predicate2 = Expression.Lambda<Func<Wf2, bool>>((Expression) Expression.And((Expression) Expression.And((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
          {
            (Expression) Expression.Property((Expression) (obj3 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Wf2.Gj5))),
            (Expression) Expression.Property((Expression) Expression.Field((Expression) Expression.Constant((object) (Td49.Ta46) obj2, typeof (Td49.Ta46)), FieldInfo.GetFieldFromHandle(__fieldref (Td49.Ta46.Ⴄ))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
            (Expression) Expression.Constant((object) false, typeof (bool))
          }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Call((Expression) Expression.Property((Expression) Expression.Property((Expression) Expression.Property((Expression) obj3, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Wf2.z8W))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime?.get_Value), __typeref (DateTime?))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Month))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (int.Equals)), (Expression) Expression.Property((Expression) Expression.Property((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Now))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Month))))), (Expression) Expression.Call((Expression) Expression.Property((Expression) Expression.Property((Expression) Expression.Property((Expression) (obj3 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Wf2.z8W))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime?.get_Value), __typeref (DateTime?))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Year))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (int.Equals)), (Expression) Expression.Property((Expression) Expression.Property((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Now))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Year))))), obj3 as ParameterExpression);
          object list3 = (object) ⴃ2.Where<Wf2>(predicate2).ToList<Wf2>();
          if (((List<Wf2>) list3).Count > 0)
          {
            try
            {
              foreach (INotifyPropertyChanging propertyChanging in (List<Wf2>) list3)
              {
                if ((propertyChanging as Wf2).Ⴍ.Equals("money"))
                  num1 += (propertyChanging as Wf2).Ⴓ;
                else
                  num2 += ((Wf2) propertyChanging).Ⴓ;
                checked { ++num3; }
              }
            }
            finally
            {
              List<Wf2>.Enumerator enumerator;
              enumerator.Dispose();
            }
          }
          Table<Ck51> ⴐ = ((Tt1) dataContext).Ⴐ;
          object obj4 = (object) Expression.Parameter(typeof (Ck51), "c");
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: field reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: type reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: type reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          Expression<Func<Ck51, bool>> predicate3 = Expression.Lambda<Func<Ck51, bool>>((Expression) Expression.And((Expression) Expression.And((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
          {
            (Expression) Expression.Property((Expression) (obj4 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Ck51.Cj52))),
            (Expression) Expression.Property((Expression) Expression.Field((Expression) Expression.Constant((object) (Td49.Ta46) obj2, typeof (Td49.Ta46)), FieldInfo.GetFieldFromHandle(__fieldref (Td49.Ta46.Ⴄ))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
            (Expression) Expression.Constant((object) false, typeof (bool))
          }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Call((Expression) Expression.Property((Expression) Expression.Property((Expression) Expression.Property((Expression) (obj4 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Ck51.z3H8))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime?.get_Value), __typeref (DateTime?))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Month))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (int.Equals)), (Expression) Expression.Property((Expression) Expression.Property((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Now))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Month))))), (Expression) Expression.Call((Expression) Expression.Property((Expression) Expression.Property((Expression) Expression.Property((Expression) obj4, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Ck51.z3H8))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime?.get_Value), __typeref (DateTime?))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Year))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (int.Equals)), (Expression) Expression.Property((Expression) Expression.Property((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Now))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Year))))), obj4 as ParameterExpression);
          object list4 = (object) ⴐ.Where<Ck51>(predicate3).ToList<Ck51>();
          if (((List<Ck51>) list4).Count > 0)
          {
            try
            {
              foreach (INotifyPropertyChanging propertyChanging in (List<Ck51>) list4)
                checked { num6 += (int) Convert.ToInt16((object) ((Ck51) propertyChanging).Ⴄ); }
            }
            finally
            {
              List<Ck51>.Enumerator enumerator;
              enumerator.Dispose();
            }
            num7 = Convert.ToDouble(Decimal.Multiply(new Decimal(num6), ((Td49.Ta46) obj2).Ⴄ.Ⴃ));
          }
          double num10 = num8 - num8 * num2 - num1 - num9 + num7;
          Table<Xz10> ⴈ1 = (dataContext as Tt1).Ⴈ;
          object obj5 = (object) Expression.Parameter(typeof (Xz10), "o");
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: field reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: type reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: type reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          // ISSUE: method reference
          Expression<Func<Xz10, bool>> predicate4 = Expression.Lambda<Func<Xz10, bool>>((Expression) Expression.AndAlso((Expression) Expression.AndAlso((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
          {
            (Expression) Expression.Property((Expression) obj5, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Xz10.Np20))),
            (Expression) Expression.Property((Expression) Expression.Field((Expression) Expression.Constant((object) (obj2 as Td49.Ta46), typeof (Td49.Ta46)), FieldInfo.GetFieldFromHandle(__fieldref (Td49.Ta46.Ⴄ))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
            (Expression) Expression.Constant((object) false, typeof (bool))
          }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Call((Expression) Expression.Property((Expression) Expression.Property((Expression) Expression.Property((Expression) (obj5 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Xz10.s8Y4))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime?.get_Value), __typeref (DateTime?))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Year))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (int.Equals)), (Expression) Expression.Property((Expression) Expression.Property((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Now))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Year))))), (Expression) Expression.Call((Expression) Expression.Property((Expression) Expression.Property((Expression) Expression.Property((Expression) obj5, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Xz10.s8Y4))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime?.get_Value), __typeref (DateTime?))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Month))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (int.Equals)), (Expression) Expression.Property((Expression) Expression.Property((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Now))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Month))))), obj5 as ParameterExpression);
          if (ⴈ1.Any<Xz10>(predicate4))
          {
            Table<Xz10> ⴈ2 = ((Tt1) dataContext).Ⴈ;
            object obj6 = (object) Expression.Parameter(typeof (Xz10), "c");
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: field reference
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: type reference
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: type reference
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: method reference
            // ISSUE: method reference
            Expression<Func<Xz10, bool>> predicate5 = Expression.Lambda<Func<Xz10, bool>>((Expression) Expression.And((Expression) Expression.And((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
            {
              (Expression) Expression.Property((Expression) obj6, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Xz10.Np20))),
              (Expression) Expression.Property((Expression) Expression.Field((Expression) Expression.Constant((object) (obj2 as Td49.Ta46), typeof (Td49.Ta46)), FieldInfo.GetFieldFromHandle(__fieldref (Td49.Ta46.Ⴄ))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
              (Expression) Expression.Constant((object) false, typeof (bool))
            }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Call((Expression) Expression.Property((Expression) Expression.Property((Expression) Expression.Property((Expression) (obj6 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Xz10.s8Y4))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime?.get_Value), __typeref (DateTime?))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Month))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (int.Equals)), (Expression) Expression.Property((Expression) Expression.Property((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Now))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Month))))), (Expression) Expression.Call((Expression) Expression.Property((Expression) Expression.Property((Expression) Expression.Property((Expression) obj6, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Xz10.s8Y4))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime?.get_Value), __typeref (DateTime?))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Year))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (int.Equals)), (Expression) Expression.Property((Expression) Expression.Property((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Now))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Year))))), (ParameterExpression) obj6);
            INotifyPropertyChanged notifyPropertyChanged = (INotifyPropertyChanged) ⴈ2.Where<Xz10>(predicate5).FirstOrDefault<Xz10>();
            (notifyPropertyChanged as Xz10).Ⴅ = new int?(checked (23 - num3));
            (notifyPropertyChanged as Xz10).Ⴐ = new int?(num3);
            ((Xz10) notifyPropertyChanged).Ⴅ = new Decimal?(Convert.ToDecimal(num10));
            (notifyPropertyChanged as Xz10).Ⴓ = new DateTime?(DateTime.Now);
            ((Xz10) notifyPropertyChanged).Ⴗ = new Decimal?(Convert.ToDecimal(num9));
            (notifyPropertyChanged as Xz10).Ⴐ = new Decimal?(Convert.ToDecimal(num1 + num8 * num2));
          }
          else
          {
            INotifyPropertyChanged entity = (INotifyPropertyChanged) new Xz10();
            ((Xz10) entity).Ⴐ = int.Parse(Cw81.t3QH());
            ((Xz10) entity).Ⴗ = ((Td49.Ta46) obj2).Ⴄ.Ⴐ;
            (entity as Xz10).Ⴅ = new int?(checked (23 - num3));
            (entity as Xz10).Ⴐ = new int?(num3);
            (entity as Xz10).Ⴅ = new Decimal?(Convert.ToDecimal(num10));
            ((Xz10) entity).Ⴓ = new DateTime?(DateTime.Now);
            (entity as Xz10).Ⴗ = new Decimal?(Convert.ToDecimal(num9));
            ((Xz10) entity).Ⴐ = new Decimal?(Convert.ToDecimal(num1 + num8 * num2));
            ((Tt1) dataContext).Ⴈ.InsertOnSubmit(entity as Xz10);
          }
          dataContext.SubmitChanges();
        }
      }
      finally
      {
        List<Af03>.Enumerator enumerator;
        enumerator.Dispose();
      }
    }

    internal sealed class Ta46
    {
      public Af03 Ⴄ;

      public Ta46([In] Td49.Ta46 obj0)
      {
        if (obj0 == null)
          return;
        this.Ⴄ = obj0.Ⴄ;
      }
    }
  }
}
