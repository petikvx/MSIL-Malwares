// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: WaitHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: A25291C7-A109-4713-B14B-FDD04827C77F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-c95b09c6ffd61a284edc93ed78ccae28eae9cbf5eb73943fd588e31dfe8b57dc.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -789708088;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ -950033060)) % 9U)
          {
            case 0:
              int num4 = !flag ? 1853734057 : (num4 = 100246057);
              num1 = num4 ^ (int) num2 * -1686688903;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * 1063773786 ^ -1560553793;
              continue;
            case 4:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 5:
              num1 = (int) num2 * -1113478045 ^ 2093800037;
              continue;
            case 6:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -2124807847 ^ -1759129664;
              continue;
            case 7:
              jsonNode = this.m_List[aIndex];
              num1 = -405900028;
              continue;
            case 8:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -821082874 ^ 1178168208;
              continue;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = -1593933040;
        }
label_13:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1519426473;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 71038337)) % 9U)
          {
            case 0:
              this.m_List[aIndex] = value;
              num1 = 885522233;
              continue;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 645460748 ^ -1684006628;
              continue;
            case 3:
              int num4 = !flag ? -990540566 : (num4 = -1159771935);
              num1 = num4 ^ (int) num2 * 1951561222;
              continue;
            case 4:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * -1891654417 ^ -953992490;
              continue;
            case 7:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -1966838670 ^ 981648440;
                continue;
              }
              num3 = 1;
              break;
            case 8:
              this.m_List.Add(value);
              num1 = (int) num2 * -170497784 ^ -251145081;
              continue;
            default:
              goto label_14;
          }
          flag = num3 != 0;
          num1 = 1560338320;
        }
label_3:
        return;
label_14:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 251560043;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 19383405)) % 4U)
          {
            case 1:
              num1 = (int) num2 * -2027108352 ^ 877633673;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -98440065 ^ -598872066;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = -1862448646;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -388900891)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 2023745920 ^ -750834040;
              continue;
            case 3:
              this.m_List.Add(value);
              num1 = (int) num2 * 227850995 ^ -1829749830;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -252545003;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1098217948)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * -2063598717 ^ -419745247;
              continue;
            case 2:
              num1 = (int) num2 * -715725599 ^ 1967494901;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem) => this.m_List.Add(aItem);

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = 194009415;
label_2:
      bool flag;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 317107202)) % 6U)
        {
          case 0:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 2088276363 ^ -1297239757;
            continue;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 4:
            JSONNode jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            jsonNode1 = jsonNode2;
            num1 = 1976331119;
            continue;
          case 5:
            int num3 = !flag ? 1648514534 : (num3 = 542791662);
            num1 = num3 ^ (int) num2 * -1297826680;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      int num4 = aIndex >= this.m_List.Count ? 1 : 0;
      goto label_5;
label_9:
      return jsonNode1;
label_4:
      num4 = 1;
label_5:
      flag = num4 != 0;
      num1 = 674906813;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = -1109006540;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1813160445)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1015346865 ^ 1495201426;
            continue;
          case 2:
            goto label_1;
          case 3:
            jsonNode = aNode;
            num1 = (int) num2 * -773533933 ^ -1652426982;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        bool childs;
        try
        {
          int num1 = this.\u003C\u003E1__state;
          if (num1 == 0)
            goto label_11;
label_1:
          int num2 = 968536808;
label_2:
          List<JSONNode>.Enumerator enumerator;
          JSONNode N;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ 1901470771)) % 23U)
            {
              case 0:
              case 5:
                this.\u003C\u003E1__state = -3;
                num2 = 549580174;
                continue;
              case 1:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * 1381274929 ^ 105614263;
                continue;
              case 2:
                num2 = (int) num3 * -993562909 ^ -1729895967;
                continue;
              case 3:
              case 7:
                goto label_11;
              case 4:
                childs = true;
                num2 = (int) num3 * -2052001293 ^ -1078775203;
                continue;
              case 6:
                goto label_1;
              case 8:
                num2 = (int) num3 * -1773344942 ^ 255903531;
                continue;
              case 9:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -243938381 ^ -1530330832;
                continue;
              case 10:
              case 17:
                goto label_22;
              case 11:
                int num4;
                num2 = num4 = num1 != 1 ? 429645129 : (num4 = 314030322);
                continue;
              case 12:
                num2 = (int) num3 * 2050073337 ^ -837468554;
                continue;
              case 13:
                num2 = (int) num3 * -1594703880 ^ 1885059345;
                continue;
              case 14:
                N = (JSONNode) null;
                num2 = (int) num3 * 2138273629 ^ -2015149956;
                continue;
              case 16:
                childs = false;
                num2 = 1391876865;
                continue;
              case 18:
                N = enumerator.Current;
                this.\u003C\u003E2__current = N;
                this.\u003C\u003E1__state = 1;
                num2 = 579702339;
                continue;
              case 19:
                enumerator = new List<JSONNode>.Enumerator();
                num2 = (int) num3 * 685435550 ^ -588215750;
                continue;
              case 20:
                int num5;
                num2 = num5 = enumerator.MoveNext() ? 1078588629 : (num5 = 2102600960);
                continue;
              case 21:
                enumerator = this.m_List.GetEnumerator();
                num2 = (int) num3 * 1644464813 ^ -259239850;
                continue;
              case 22:
                num2 = (int) num3 * -283169408 ^ -1021132638;
                continue;
              default:
                goto label_20;
            }
          }
label_20:
          childs = false;
          goto label_22;
label_11:
          this.\u003C\u003E1__state = -1;
          num2 = 211334544;
          goto label_2;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_22:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_9:
        int num1 = enumerator.MoveNext() ? -626986160 : (num1 = -1763675753);
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1517544115)) % 8U)
          {
            case 0:
              int num3 = JSONArray.\u200B‫‏‫‍⁫⁮‮‫⁯‮⁯⁬‌‍⁬‎‍⁮⁮⁭⁭⁫‏⁮‪‏‍‬‭⁫​‌‪‍‮‬​⁮⁫‮(str1) > 2 ? -445499754 : (num3 = -2095946997);
              num1 = num3 ^ (int) num2 * 114282621;
              continue;
            case 1:
              goto label_9;
            case 3:
              str1 = JSONArray.\u200F⁬​‬‍⁬‌‭⁮‪‎‮⁬⁫‮⁫​‪⁭‎‬⁫⁭⁫‎‌‍⁬⁮⁯⁮⁪​⁮‭‏⁪‎‏‏‮(str1, ", ");
              num1 = (int) num2 * -660315939 ^ -2104316188;
              continue;
            case 4:
              num1 = (int) num2 * -305606051 ^ 271262856;
              continue;
            case 5:
              current = enumerator.Current;
              num1 = -1985278787;
              continue;
            case 6:
              str1 = JSONArray.\u200F⁬​‬‍⁬‌‭⁮‪‎‮⁬⁫‮⁫​‪⁭‎‬⁫⁭⁫‎‌‍⁬⁮⁯⁮⁪​⁮‭‏⁪‎‏‏‮(str1, JSONArray.\u202A‬‏‪⁭⁭‌⁮‫‌⁮‎‌⁯‮​‍⁭⁬‏‫⁬⁭⁬⁯⁬‌‏‏‮‫‏‌⁬‬⁫‭​‮‭‮((object) current));
              num1 = -1220019799;
              continue;
            case 7:
              num1 = -626986160;
              continue;
            default:
              goto label_11;
          }
        }
      }
label_11:
      string str2 = JSONArray.\u200F⁬​‬‍⁬‌‭⁮‪‎‮⁬⁫‮⁫​‪⁭‎‬⁫⁭⁫‎‌‍⁬⁮⁯⁮⁪​⁮‭‏⁪‎‏‏‮(str1, " ]");
label_12:
      int num4 = -96830066;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -1517544115)) % 3U)
        {
          case 0:
            goto label_12;
          case 1:
            str3 = str2;
            num4 = (int) num5 * 235319328 ^ -1517956051;
            continue;
          default:
            goto label_15;
        }
      }
label_15:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_9:
        int num1 = enumerator.MoveNext() ? 1699955033 : (num1 = 300871572);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1122493654)) % 10U)
          {
            case 0:
              num1 = 1699955033;
              continue;
            case 1:
              str1 = JSONArray.\u200F⁬​‬‍⁬‌‭⁮‪‎‮⁬⁫‮⁫​‪⁭‎‬⁫⁭⁫‎‌‍⁬⁮⁯⁮⁪​⁮‭‏⁪‎‏‏‮(str1, current.ToString(JSONArray.\u200F⁬​‬‍⁬‌‭⁮‪‎‮⁬⁫‮⁫​‪⁭‎‬⁫⁭⁫‎‌‍⁬⁮⁯⁮⁪​⁮‭‏⁪‎‏‏‮(aPrefix, "   ")));
              num1 = (int) num2 * -305732890 ^ -426747861;
              continue;
            case 2:
              flag = JSONArray.\u200B‫‏‫‍⁫⁮‮‫⁯‮⁯⁬‌‍⁬‎‍⁮⁮⁭⁭⁫‏⁮‪‏‍‬‭⁫​‌‪‍‮‬​⁮⁫‮(str1) > 3;
              num1 = (int) num2 * 1401228543 ^ 1893724457;
              continue;
            case 3:
              str1 = JSONArray.\u200F⁬​‬‍⁬‌‭⁮‪‎‮⁬⁫‮⁫​‪⁭‎‬⁫⁭⁫‎‌‍⁬⁮⁯⁮⁪​⁮‭‏⁪‎‏‏‮(str1, ", ");
              num1 = (int) num2 * 489158665 ^ -1628423879;
              continue;
            case 5:
              num1 = (int) num2 * 14367288 ^ -802004888;
              continue;
            case 6:
              goto label_9;
            case 7:
              current = enumerator.Current;
              num1 = 530700192;
              continue;
            case 8:
              str1 = JSONArray.\u200B‎‏‎⁭‭‍‭⁫‫⁪‭‎‪⁪‌‭⁮⁭⁬⁫‪⁫​⁫⁫‬⁮⁪‭‬​‬⁮⁫‏‏‪‪‮‮(str1, "\n", aPrefix, "   ");
              num1 = 714287287;
              continue;
            case 9:
              int num3 = !flag ? -116150715 : (num3 = -251341438);
              num1 = num3 ^ (int) num2 * -1011954989;
              continue;
            default:
              goto label_13;
          }
        }
      }
label_13:
      string str2 = JSONArray.\u200B‎‏‎⁭‭‍‭⁫‫⁪‭‎‪⁪‌‭⁮⁭⁬⁫‪⁫​⁫⁫‬⁮⁪‭‬​‬⁮⁫‏‏‪‪‮‮(str1, "\n", aPrefix, "]");
label_14:
      int num4 = 998044587;
      string str3;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ 1122493654)) % 4U)
        {
          case 1:
            str3 = str2;
            num4 = (int) num5 * 1574595111 ^ 531861126;
            continue;
          case 2:
            goto label_14;
          case 3:
            num4 = (int) num5 * 2062308057 ^ -1756048639;
            continue;
          default:
            goto label_18;
        }
      }
label_18:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONArray.\u202A‏⁬​‌⁮‏‮⁪⁪‭​⁮‪‏‍⁬⁭⁯‭‭‪‌‏​⁯‫‎​⁬⁭‮‌⁫​‫‪‭⁭‍‮(aWriter, (byte) 1);
label_1:
      int num1 = -1248273425;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -305424538)) % 10U)
        {
          case 0:
            goto label_1;
          case 1:
            ++index;
            num1 = (int) num2 * -1228532469 ^ -1353648633;
            continue;
          case 2:
            index = 0;
            num1 = (int) num2 * -1433717338 ^ 384943493;
            continue;
          case 3:
            int num3 = flag ? 610621928 : (num3 = 1188749152);
            num1 = num3 ^ (int) num2 * -890138972;
            continue;
          case 4:
            this.m_List[index].Serialize(aWriter);
            num1 = -824426009;
            continue;
          case 5:
            JSONArray.\u200D‮‬‮⁫‮‮⁫‏⁫⁯‎‍⁭⁮‏‌‏⁪‏‌‏​⁮‍‮⁬‭⁮‫‍⁫⁮‎⁭⁯‮‪‍⁪‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 20093285 ^ -1871493147;
            continue;
          case 6:
            goto label_3;
          case 7:
            num1 = (int) num2 * 1232221231 ^ 1151841025;
            continue;
          case 8:
            flag = index < this.m_List.Count;
            num1 = -1516766373;
            continue;
          case 9:
            num1 = (int) num2 * -1748421709 ^ -753452166;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public JSONArray()
    {
label_1:
      int num1 = -396903755;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -516846578)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -1499466296 ^ -1529204231;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static int \u200B‫‏‫‍⁫⁮‮‫⁯‮⁯⁬‌‍⁬‎‍⁮⁮⁭⁭⁫‏⁮‪‏‍‬‭⁫​‌‪‍‮‬​⁮⁫‮([In] string obj0) => obj0.Length;

    static string \u200F⁬​‬‍⁬‌‭⁮‪‎‮⁬⁫‮⁫​‪⁭‎‬⁫⁭⁫‎‌‍⁬⁮⁯⁮⁪​⁮‭‏⁪‎‏‏‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202A‬‏‪⁭⁭‌⁮‫‌⁮‎‌⁯‮​‍⁭⁬‏‫⁬⁭⁬⁯⁬‌‏‏‮‫‏‌⁬‬⁫‭​‮‭‮([In] object obj0) => obj0.ToString();

    static string \u200B‎‏‎⁭‭‍‭⁫‫⁪‭‎‪⁪‌‭⁮⁭⁬⁫‪⁫​⁫⁫‬⁮⁪‭‬​‬⁮⁫‏‏‪‪‮‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202A‏⁬​‌⁮‏‮⁪⁪‭​⁮‪‏‍⁬⁭⁯‭‭‪‌‏​⁯‫‎​⁬⁭‮‌⁫​‫‪‭⁭‍‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200D‮‬‮⁫‮‮⁫‏⁫⁯‎‍⁭⁮‏‌‏⁪‏‌‏​⁮‍‮⁬‭⁮‫‍⁫⁮‎⁭⁯‮‪‍⁪‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
