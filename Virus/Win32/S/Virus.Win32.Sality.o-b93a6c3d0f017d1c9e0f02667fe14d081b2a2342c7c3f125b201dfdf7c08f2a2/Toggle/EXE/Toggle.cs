// Decompiled with JetBrains decompiler
// Type: Toggle.EXE.Toggle
// Assembly: Toggle, Version=1.2.11.0, Culture=neutral, PublicKeyToken=null
// MVID: 153CC43F-2BBE-46AD-9359-CBBEFED04D2C
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Virus.Win32.Sality.o-b93a6c3d0f017d1c9e0f02667fe14d081b2a2342c7c3f125b201dfdf7c08f2a2.exe

using ATI.ACE.ACE.Graphics.DisplaysManager.Shared;
using ATI.ACE.CLI.Caste.Graphics.Shared;
using ATI.ACE.CLI.Foundation;
using ATI.ACE.LOG.Foundation;
using System;
using System.Drawing;
using System.Windows.Forms;

namespace Toggle.EXE
{
  internal class Toggle
  {
    private const string FORM_NAME = "Toggle";
    private const string RUNTIME_NAME = "Runtime";

    [STAThread]
    private static void Main(string[] args)
    {
      Services.DefaultDomainInitialize(false, nameof (Toggle), (ShellType) 2);
      if (!(Services.ConnectToObject("Runtime") is IComponent iComponent))
        return;
      iComponent.Detect();
      SCaste scaste = iComponent.GetSCaste(SGraphicsCaste.CasteName);
      if (scaste == null)
        return;
      ICaste iCaste = scaste.iCaste;
      if (iCaste == null || !(iCaste is IGraphicsCaste igraphicsCaste))
        return;
      int positionAdapterIndex = Toggle.EXE.Toggle.GetMousePositionAdapterIndex(igraphicsCaste);
      if (-1 == positionAdapterIndex || !(((ICaste) igraphicsCaste).GetSAdapter(positionAdapterIndex) is SGraphicsAdapter sadapter))
        return;
      DMHotkeysHandling.TogglePossibleModes(igraphicsCaste, sadapter, iComponent);
    }

    private static int GetMousePositionAdapterIndex(IGraphicsCaste igc)
    {
      Point mousePosition = Control.MousePosition;
      int positionAdapterIndex = -1;
      foreach (SAdapter sadapter in ((ICaste) igc).GetSAdapters())
      {
        SGraphicsAdapter sgraphicsAdapter = sadapter as SGraphicsAdapter;
        if (((SAdapter) sgraphicsAdapter).active)
        {
          int xPos = ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C.xPos;
          int yPos = ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C.yPos;
          ANGLES orientation = ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C.orientation;
          if (orientation <= 90)
          {
            if (orientation == 0 || orientation != 90)
              goto label_6;
          }
          else if (orientation == 180 || orientation != 270)
            goto label_6;
          int num1 = ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C.yRes;
          int num2 = ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C.xRes;
          goto label_7;
label_6:
          num1 = ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C.xRes;
          num2 = ((SPropertySetting_MODEINFO) sgraphicsAdapter.displaysManagerInfo.mode.Control).C.yRes;
label_7:
          if (mousePosition.X >= xPos && mousePosition.X < xPos + num1 && mousePosition.Y >= yPos && mousePosition.Y < yPos + num2)
          {
            positionAdapterIndex = ((SAdapter) sgraphicsAdapter).index;
            break;
          }
        }
      }
      return positionAdapterIndex;
    }
  }
}
