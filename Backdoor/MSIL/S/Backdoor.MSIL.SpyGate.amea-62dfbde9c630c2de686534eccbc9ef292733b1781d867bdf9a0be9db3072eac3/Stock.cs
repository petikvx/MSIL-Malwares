// Decompiled with JetBrains decompiler
// Type: Stock
// Assembly: AssertFilt, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D82097A6-A4CE-4A4A-9933-E78378BA7CC6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\Backdoor.MSIL.SpyGate.amea-62dfbde9c630c2de686534eccbc9ef292733b1781d867bdf9a0be9db3072eac3.exe

using System;

public class Stock
{
  private string symbol;
  private Decimal purchasePrice;
  private Decimal currentPrice;
  private long sharesOwned;

  public Stock(string symbol, Decimal purchasePrice, long sharesOwned)
  {
label_1:
    int num1 = 2089196810;
    while (true)
    {
      uint num2;
      switch ((num2 = (uint) (num1 ^ 1865541457)) % 6U)
      {
        case 0:
          this.symbol = symbol;
          num1 = (int) num2 * 820492876 ^ 1836112504;
          continue;
        case 1:
          num1 = (int) num2 * -1604755515 ^ -1571386649;
          continue;
        case 3:
          this.purchasePrice = this.currentPrice = purchasePrice;
          num1 = (int) num2 * 1183231348 ^ 50315251;
          continue;
        case 4:
          goto label_1;
        case 5:
          num1 = (int) num2 * 1015754581 ^ -1738882650;
          continue;
        default:
          goto label_7;
      }
    }
label_7:
    this.sharesOwned = sharesOwned;
  }

  public Decimal CurrentPrice
  {
    get
    {
      Decimal currentPrice = this.currentPrice;
label_1:
      int num1 = -288513682;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1352745265)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * 955261910 ^ 377301699;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return currentPrice;
    }
    set => this.currentPrice = value;
  }

  public string Symbol
  {
    get
    {
label_1:
      int num1 = 1289452358;
      string symbol;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 506063361)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -273557177 ^ -229546722;
            continue;
          case 3:
            symbol = this.symbol;
            num1 = (int) num2 * 557301444 ^ -237201069;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return symbol;
    }
    set
    {
label_1:
      int num1 = -783752530;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -777670292)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            this.symbol = value;
            num1 = (int) num2 * -36039296 ^ 206586876;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }
  }

  public Decimal PurchasePrice
  {
    get
    {
label_1:
      int num1 = -410849628;
      Decimal purchasePrice;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2009264219)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -957766371 ^ 1736856758;
            continue;
          case 1:
            purchasePrice = this.purchasePrice;
            num1 = (int) num2 * 1281454810 ^ -1771131237;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return purchasePrice;
    }
  }

  public long SharesOwned
  {
    get
    {
label_1:
      int num1 = 861678863;
      long sharesOwned;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1031819361)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            sharesOwned = this.sharesOwned;
            num1 = (int) num2 * 1365767411 ^ -1088443630;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return sharesOwned;
    }
  }

  public Decimal Worth
  {
    get
    {
label_1:
      int num1 = -1773634779;
      Decimal worth;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2040147267)) % 3U)
        {
          case 1:
            worth = this.CurrentPrice * (Decimal) this.SharesOwned;
            num1 = (int) num2 * -1752282130 ^ -1109167133;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return worth;
    }
  }
}
