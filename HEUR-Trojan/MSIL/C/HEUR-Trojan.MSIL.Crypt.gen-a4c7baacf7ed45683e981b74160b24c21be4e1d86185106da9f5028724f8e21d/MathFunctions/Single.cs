// Decompiled with JetBrains decompiler
// Type: GenericMath.MathFunctions.Single
// Assembly: Yu77, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CEBE5E3D-11C5-45E0-97BE-FD3217A3B672
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.Crypt.gen-a4c7baacf7ed45683e981b74160b24c21be4e1d86185106da9f5028724f8e21d.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;

namespace GenericMath.MathFunctions
{
  [StandardModule]
  [HideModuleName]
  internal sealed class Single
  {
    private static float UnitStep(float value) => (double) value <= 0.0 ? 0.0f : 1f;

    private static float Asinh(float value) => (float) Math.Log((double) value + Math.Sqrt((double) value * (double) value + 1.0));

    private static float Acosh(float value) => (float) Math.Log((double) value + Math.Sqrt((double) value * (double) value - 1.0));

    private static float Atanh(float value) => (float) (0.5 * Math.Log((1.0 + (double) value) / (1.0 - (double) value)));

    private static float Acosech(float value)
    {
      value = 1f / value;
      return (float) Math.Log((double) value + Math.Sqrt((double) value * (double) value + 1.0));
    }

    private static float Asech(float value)
    {
      value = 1f / value;
      return (float) Math.Log((double) value + Math.Sqrt((double) value * (double) value - 1.0));
    }

    private static float Acoth(float value) => (float) (0.5 * Math.Log(((double) value + 1.0) / ((double) value - 1.0)));

    internal static void Initialize()
    {
      Func<float, float> func1;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D0 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func1 = Single._Closure\u0024__.\u0024I7\u002D0;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D0 = func1 = (Func<float, float>) (V => (float) Math.Sqrt((double) V));
      }
      Math<float>.Sqrt = func1;
      Func<float, float> func2;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D1 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func2 = Single._Closure\u0024__.\u0024I7\u002D1;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D1 = func2 = (Func<float, float>) (V => (float) Math.Pow((double) V, 1.0 / 3.0));
      }
      Math<float>.Cubrt = func2;
      Func<float, float> func3;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D2 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func3 = Single._Closure\u0024__.\u0024I7\u002D2;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D2 = func3 = (Func<float, float>) (V => Math.Abs(V));
      }
      Math<float>.Abs = func3;
      Func<float, float> func4;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D3 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func4 = Single._Closure\u0024__.\u0024I7\u002D3;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D3 = func4 = (Func<float, float>) (V => (float) Math.Sign(V));
      }
      Math<float>.Sign = func4;
      Func<float, float> func5;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D4 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func5 = Single._Closure\u0024__.\u0024I7\u002D4;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D4 = func5 = (Func<float, float>) (V => (float) Math.Ceiling((double) V));
      }
      Math<float>.Ceiling = func5;
      Func<float, float> func6;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D5 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func6 = Single._Closure\u0024__.\u0024I7\u002D5;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D5 = func6 = (Func<float, float>) (V => (float) Math.Floor((double) V));
      }
      Math<float>.Floor = func6;
      Func<float, float> func7;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D6 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func7 = Single._Closure\u0024__.\u0024I7\u002D6;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D6 = func7 = (Func<float, float>) (V => (float) Math.Truncate((double) V));
      }
      Math<float>.Truncate = func7;
      Math<float>.UnitStep = new Func<float, float>(Single.UnitStep);
      Func<float, float> func8;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D7 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func8 = Single._Closure\u0024__.\u0024I7\u002D7;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D7 = func8 = (Func<float, float>) (V => (float) Math.Sin((double) V));
      }
      Math<float>.Sin = func8;
      Func<float, float> func9;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D8 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func9 = Single._Closure\u0024__.\u0024I7\u002D8;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D8 = func9 = (Func<float, float>) (V => (float) Math.Cos((double) V));
      }
      Math<float>.Cos = func9;
      Func<float, float> func10;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D9 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func10 = Single._Closure\u0024__.\u0024I7\u002D9;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D9 = func10 = (Func<float, float>) (V => (float) Math.Tan((double) V));
      }
      Math<float>.Tan = func10;
      Func<float, float> func11;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D10 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func11 = Single._Closure\u0024__.\u0024I7\u002D10;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D10 = func11 = (Func<float, float>) (V => (float) (1.0 / Math.Sin((double) V)));
      }
      Math<float>.Cosec = func11;
      Func<float, float> func12;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D11 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func12 = Single._Closure\u0024__.\u0024I7\u002D11;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D11 = func12 = (Func<float, float>) (V => (float) (1.0 / Math.Cos((double) V)));
      }
      Math<float>.Sec = func12;
      Func<float, float> func13;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D12 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func13 = Single._Closure\u0024__.\u0024I7\u002D12;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D12 = func13 = (Func<float, float>) (V => (float) (1.0 / Math.Tan((double) V)));
      }
      Math<float>.Cot = func13;
      Func<float, float> func14;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D13 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func14 = Single._Closure\u0024__.\u0024I7\u002D13;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D13 = func14 = (Func<float, float>) (V => (float) Math.Sinh((double) V));
      }
      Math<float>.Sinh = func14;
      Func<float, float> func15;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D14 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func15 = Single._Closure\u0024__.\u0024I7\u002D14;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D14 = func15 = (Func<float, float>) (V => (float) Math.Cosh((double) V));
      }
      Math<float>.Cosh = func15;
      Func<float, float> func16;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D15 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func16 = Single._Closure\u0024__.\u0024I7\u002D15;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D15 = func16 = (Func<float, float>) (V => (float) Math.Tanh((double) V));
      }
      Math<float>.Tanh = func16;
      Func<float, float> func17;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D16 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func17 = Single._Closure\u0024__.\u0024I7\u002D16;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D16 = func17 = (Func<float, float>) (V => (float) (1.0 / Math.Sinh((double) V)));
      }
      Math<float>.Cosech = func17;
      Func<float, float> func18;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D17 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func18 = Single._Closure\u0024__.\u0024I7\u002D17;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D17 = func18 = (Func<float, float>) (V => (float) (1.0 / Math.Cosh((double) V)));
      }
      Math<float>.Sech = func18;
      Func<float, float> func19;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D18 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func19 = Single._Closure\u0024__.\u0024I7\u002D18;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D18 = func19 = (Func<float, float>) (V => (float) (1.0 / Math.Tanh((double) V)));
      }
      Math<float>.Coth = func19;
      Func<float, float> func20;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D19 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func20 = Single._Closure\u0024__.\u0024I7\u002D19;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D19 = func20 = (Func<float, float>) (V => (float) Math.Asin((double) V));
      }
      Math<float>.Asin = func20;
      Func<float, float> func21;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D20 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func21 = Single._Closure\u0024__.\u0024I7\u002D20;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D20 = func21 = (Func<float, float>) (V => (float) Math.Acos((double) V));
      }
      Math<float>.Acos = func21;
      Func<float, float> func22;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D21 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func22 = Single._Closure\u0024__.\u0024I7\u002D21;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D21 = func22 = (Func<float, float>) (V => (float) Math.Atan((double) V));
      }
      Math<float>.Atan = func22;
      Func<float, float> func23;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D22 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func23 = Single._Closure\u0024__.\u0024I7\u002D22;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D22 = func23 = (Func<float, float>) (V => (float) Math.Asin(1.0 / (double) V));
      }
      Math<float>.Acosec = func23;
      Func<float, float> func24;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D23 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func24 = Single._Closure\u0024__.\u0024I7\u002D23;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D23 = func24 = (Func<float, float>) (V => (float) Math.Acos(1.0 / (double) V));
      }
      Math<float>.Asec = func24;
      Func<float, float> func25;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D24 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func25 = Single._Closure\u0024__.\u0024I7\u002D24;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D24 = func25 = (Func<float, float>) (V => (float) Math.Atan(1.0 / (double) V));
      }
      Math<float>.Acot = func25;
      Math<float>.Asinh = new Func<float, float>(Single.Asinh);
      Math<float>.Acosh = new Func<float, float>(Single.Acosh);
      Math<float>.Atanh = new Func<float, float>(Single.Atanh);
      Math<float>.Acosech = new Func<float, float>(Single.Acosech);
      Math<float>.Asech = new Func<float, float>(Single.Asech);
      Math<float>.Acoth = new Func<float, float>(Single.Acoth);
      Func<float, float> func26;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D25 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func26 = Single._Closure\u0024__.\u0024I7\u002D25;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D25 = func26 = (Func<float, float>) (V => (float) Math.Exp((double) V));
      }
      Math<float>.Exp = func26;
      Func<float, float> func27;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D26 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func27 = Single._Closure\u0024__.\u0024I7\u002D26;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D26 = func27 = (Func<float, float>) (V => (float) Math.Pow(10.0, (double) V));
      }
      Math<float>.Exp10 = func27;
      Func<float, float> func28;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D27 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func28 = Single._Closure\u0024__.\u0024I7\u002D27;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D27 = func28 = (Func<float, float>) (V => (float) Math.Log((double) V));
      }
      Math<float>.Log = func28;
      Func<float, float> func29;
      // ISSUE: reference to a compiler-generated field
      if (Single._Closure\u0024__.\u0024I7\u002D28 != null)
      {
        // ISSUE: reference to a compiler-generated field
        func29 = Single._Closure\u0024__.\u0024I7\u002D28;
      }
      else
      {
        // ISSUE: reference to a compiler-generated field
        Single._Closure\u0024__.\u0024I7\u002D28 = func29 = (Func<float, float>) (V => (float) Math.Log10((double) V));
      }
      Math<float>.Log10 = func29;
    }
  }
}
