// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.UploadReportLoginService
// Assembly: 5, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D96FE905-3567-4568-B7BF-8C667D038E34
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.DarkKomet.aykq-fdc0862a8406ebbcbbf4f093602f275a5f88cc2d88940d115e6108504c21b1f4.exe

using SmartAssembly.Delegates;
using System;
using System.Net;
using System.Web.Services;
using System.Web.Services.Protocols;

namespace SmartAssembly.SmartExceptionsCore
{
  [WebServiceBinding(Name = "LoginServiceSoap", Namespace = "http://www.smartassembly.com/webservices/UploadReportLogin/")]
  internal sealed class UploadReportLoginService : SoapHttpClientProtocol
  {
    [NonSerialized]
    internal static GetString \u001F;

    public UploadReportLoginService()
    {
      string uploadReportServer = WebServicesClient.UploadReportServer;
      this.Url = WebServicesClient.UploadReportServer + UploadReportLoginService.\u001F(1192);
      this.Timeout = 30000;
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/UploadReportLogin/GetServerURL")]
    public string GetServerURL(string licenseID) => (string) this.Invoke(UploadReportLoginService.\u001F(1225), new object[1]
    {
      (object) licenseID
    })[0];

    protected override WebRequest GetWebRequest(Uri uri)
    {
      WebRequest webRequest = base.GetWebRequest(uri);
      if (webRequest is HttpWebRequest httpWebRequest)
        goto label_2;
label_1:
      return webRequest;
label_2:
      httpWebRequest.ServicePoint.Expect100Continue = false;
      goto label_1;
    }

    static UploadReportLoginService() => SmartAssembly.HouseOfCards.Strings.CreateGetStringDelegate(typeof (UploadReportLoginService));
  }
}
