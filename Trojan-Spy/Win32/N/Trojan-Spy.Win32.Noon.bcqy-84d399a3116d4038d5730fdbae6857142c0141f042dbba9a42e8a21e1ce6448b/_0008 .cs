// Decompiled with JetBrains decompiler
// Type:  
// Assembly: ProgIdRedirectionEn, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: B81F1514-ABAD-442F-0D6D-30821B04B8DB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqy-84d399a3116d4038d5730fdbae6857142c0141f042dbba9a42e8a21e1ce6448b.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Windows.Media;
using System.Windows.Media.Media3D;

internal sealed class \u0008\u2002
{
  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u0008\u2002()
  {
    \u0003\u2004.\u0002();
    // ISSUE: explicit constructor call
    base.\u002Ector();
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static bool \u0002(
    ref \u0005\u2001 _param0,
    ref \u0008\u2001 _param1,
    ref \u0006\u2000 _param2,
    ref \u0005\u2001 _param3,
    ref \u0005\u2001 _param4)
  {
    int num1 = 11;
    bool flag1;
    GeometryModel3D geometryModel3D;
    while (true)
    {
      int num2 = num1;
      \u0005\u2001 obj1;
      bool flag2;
      bool flag3;
      bool flag4;
      while (true)
      {
        switch (num2)
        {
          case 0:
            flag2 = \u0008\u2002.\u0002(obj1, _param2) != null;
            if (!\u0008\u2002.\u0003())
            {
              num2 = 8;
              continue;
            }
            goto label_2;
          case 1:
          case 9:
            if (!flag4)
            {
              _param3.\u0005.X = _param4.\u0005.X;
              _param3.\u0005.Y = _param4.\u0005.Y;
              _param3.\u0005.Z = _param4.\u0005.Z;
              geometryModel3D = _param2.\u0006\u2002;
              if (!\u0008\u2002.\u0003())
              {
                num2 = 2;
                continue;
              }
              goto label_16;
            }
            else
              goto label_14;
          case 2:
            goto label_19;
          case 3:
            goto label_17;
          case 4:
            if (!flag3)
            {
              obj1 = new \u0005\u2001(0U);
              obj1.\u0008 = geometryModel3D;
              goto case 0;
            }
            else
            {
              _param2.\u000E.Children.Remove((Model3D) geometryModel3D);
              _param2.\u0008\u2002.\u0006 = \u0005\u2007.\u0002(-1359008037);
              _param2.\u0003();
              num2 = 6;
              continue;
            }
          case 5:
            goto label_12;
          case 6:
            goto label_2;
          case 7:
          case 8:
            goto label_9;
          case 10:
            goto label_18;
          case 11:
            goto label_16;
          case 12:
            goto label_20;
          default:
            num2 = 0;
            continue;
        }
      }
label_9:
      if (!flag2)
      {
        _param2.\u000E.Children.Remove((Model3D) geometryModel3D);
        _param2.\u0008\u2002.\u0006 = \u0005\u2007.\u0002(-1359008037);
        _param2.\u0003();
        num1 = 10;
        continue;
      }
      goto label_10;
label_12:
      \u000E\u2003 obj2 = (\u000E\u2003) null;
      flag3 = !\u0008\u2002.\u0002(ref obj2, ref _param3, ref _param2);
      num1 = 4;
      continue;
label_16:
      flag4 = !_param1.\u0003;
      num1 = 9;
      continue;
label_17:
      flag1 = true;
      num1 = 12;
      continue;
label_18:
      _param3.\u0002();
      num1 = 3;
      continue;
label_19:
      geometryModel3D = \u0003\u2001.\u0005(new Point3D(_param3.\u0003.X + _param3.\u0005.X, _param3.\u0003.Y + _param3.\u0005.Y, _param3.\u0003.Z + _param3.\u0005.Z), (Brush) Brushes.AntiqueWhite);
      _param2.\u000E.Children.Add((Model3D) geometryModel3D);
      _param2.\u0008\u2002.\u0006 = geometryModel3D.Bounds.ToString();
      _param2.\u0003();
      num1 = 5;
    }
label_2:
    flag1 = false;
    goto label_20;
label_10:
    _param2.\u000E.Children.Remove((Model3D) geometryModel3D);
    _param2.\u0008\u2002.\u0006 = \u0005\u2007.\u0002(-1359008037);
    _param2.\u0003();
    flag1 = false;
    goto label_20;
label_14:
    flag1 = false;
label_20:
    return flag1;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private static bool \u0002(
    ref \u000E\u2003 _param0,
    ref \u0005\u2001 _param1,
    ref \u0006\u2000 _param2)
  {
    int num1 = 4;
    bool flag1;
    while (true)
    {
      int num2 = num1;
      bool flag2;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
          case 2:
            if (flag2)
            {
              num2 = 0;
              continue;
            }
            goto label_1;
          case 3:
          case 5:
          case 6:
            goto label_10;
          case 4:
            flag2 = _param2.\u0005\u2000;
            if (\u0008\u2002.\u0002())
            {
              num2 = 2;
              continue;
            }
            goto label_3;
          default:
            goto label_7;
        }
      }
label_1:
      flag1 = true;
      num1 = 6;
      continue;
label_3:
      _param0 = _param2.\u0002(new Point3D(_param1.\u0003.X + _param1.\u0005.X, _param1.\u0003.Y + _param1.\u0005.Y, _param1.\u0003.Z + _param1.\u0005.Z - 0.1));
      if (_param0 != null)
        goto label_1;
      else
        break;
label_7:
      num1 = 5;
    }
    flag1 = false;
label_10:
    return flag1;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static bool \u0002(
    ref \u0005\u2001 _param0,
    ref \u0008\u2001 _param1,
    \u0006\u2000 _param2)
  {
    int num1 = 0;
    bool flag1;
    while (true)
    {
      \u0005\u2001 obj1;
      int num2;
      \u0005\u2001 obj2;
      \u0005\u2001 obj3;
      bool flag2;
      switch (num1)
      {
        case 0:
          _param2.\u0006\u2002 = \u0003\u2001.\u0005(new Point3D(_param0.\u0003.X + _param0.\u0005.X, _param0.\u0003.Y + _param0.\u0005.Y, _param0.\u0003.Z + _param0.\u0005.Z), (Brush) Brushes.Black);
          num2 = 4;
          break;
        case 1:
        case 4:
          _param2.\u000E.Children.Add((Model3D) _param2.\u0006\u2002);
          _param2.\u0008\u2002.\u0006 = _param2.\u0006\u2002.Bounds.ToString();
          _param2.\u0003();
          \u000E\u2003 obj4 = (\u000E\u2003) null;
          if (\u0008\u2002.\u0002(ref obj4, ref _param0, ref _param2))
          {
            obj1 = new \u0005\u2001(0U);
            num2 = 3;
            break;
          }
          _param2.\u000E.Children.Remove((Model3D) _param2.\u0006\u2002);
          _param2.\u0008\u2002.\u0006 = \u0005\u2007.\u0002(-1359008037);
          if (\u0008\u2002.\u0002())
          {
            num1 = 7;
            continue;
          }
          goto case 0;
        case 2:
        case 7:
          goto label_1;
        case 3:
          obj1.\u0008 = _param2.\u0006\u2002;
          obj2 = \u0008\u2002.\u0002(obj1, _param2);
          flag2 = obj2 != null;
          num1 = 8;
          continue;
        case 5:
          obj3 = _param2.\u0008\u2000[obj2.\u0002];
          if (\u0008\u2002.\u0002())
          {
            num1 = 10;
            continue;
          }
          goto case 10;
        case 6:
          _param2.\u0003();
          flag1 = false;
          num1 = 9;
          continue;
        case 8:
          if (!flag2)
            goto label_15;
          else
            goto case 5;
        case 9:
        case 11:
          goto label_16;
        case 10:
          \u0008\u2001 obj5 = _param2.\u0006\u2000[obj2.\u0002];
          if (!\u0008\u2002.\u0002(ref obj3, ref obj5, ref _param2, ref obj2, ref _param0))
          {
            _param2.\u000E.Children.Remove((Model3D) _param2.\u0006\u2002);
            _param2.\u0008\u2002.\u0006 = \u0005\u2007.\u0002(-1359008037);
            num1 = 6;
            continue;
          }
          goto label_15;
        default:
          num2 = 5;
          break;
      }
label_11:
      num1 = num2;
      continue;
label_15:
      _param2.\u000E.Children.Remove((Model3D) _param2.\u0006\u2002);
      _param2.\u0008\u2002.\u0006 = \u0005\u2007.\u0002(-1359008037);
      _param2.\u0003();
      _param0.\u0002();
      flag1 = true;
      num2 = 11;
      goto label_11;
    }
label_1:
    _param2.\u0003();
    flag1 = false;
label_16:
    return flag1;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static GeometryModel3D \u0002(\u0005\u2001 _param0, \u0006\u2000 _param1)
  {
    int num1 = 3;
    Model3DCollection.Enumerator enumerator;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 3:
          enumerator = _param1.\u0006.Children.GetEnumerator();
          if (\u0008\u2002.\u0002())
          {
            num1 = 2;
            continue;
          }
          goto label_17;
        case 1:
        case 2:
          goto label_1;
        case 4:
          goto label_17;
        default:
          if (\u0008\u2002.\u0002())
          {
            num1 = 4;
            continue;
          }
          goto case 0;
      }
    }
label_1:
    GeometryModel3D geometryModel3D;
    try
    {
label_10:
      while (enumerator.MoveNext())
      {
        GeometryModel3D current = (GeometryModel3D) enumerator.Current;
        int num2 = 3;
        while (true)
        {
          int num3 = num2;
          bool flag;
          Rect3D bounds;
          while (true)
          {
            switch (num3)
            {
              case 0:
              case 3:
                goto label_9;
              case 1:
              case 4:
                flag = bounds.IntersectsWith(current.Bounds);
                goto case 2;
              case 2:
                if (flag)
                {
                  geometryModel3D = current;
                  if (!\u0008\u2002.\u0003())
                  {
                    num3 = 5;
                    continue;
                  }
                  goto case 1;
                }
                else
                  goto label_10;
              case 5:
                goto label_17;
              default:
                if (\u0008\u2002.\u0002())
                {
                  num3 = 2;
                  continue;
                }
                goto label_9;
            }
          }
label_9:
          bounds = _param0.\u0008.Bounds;
          num2 = 4;
        }
      }
    }
    finally
    {
      enumerator.Dispose();
    }
    geometryModel3D = (GeometryModel3D) null;
label_17:
    return geometryModel3D;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public static \u0005\u2001 \u0002(\u0005\u2001 _param0, \u0006\u2000 _param1)
  {
    int num1 = 2;
    Dictionary<uint, \u0005\u2001>.ValueCollection.Enumerator enumerator;
    while (true)
    {
      int num2 = num1;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
            goto label_1;
          case 1:
          case 3:
            goto label_2;
          case 4:
            goto label_18;
          default:
            if (\u0008\u2002.\u0002())
            {
              num2 = 4;
              continue;
            }
            goto label_18;
        }
      }
label_1:
      enumerator = _param1.\u0008\u2000.Values.GetEnumerator();
      num1 = 3;
    }
label_2:
    \u0005\u2001 obj;
    try
    {
label_12:
      while (enumerator.MoveNext())
      {
        \u0005\u2001 current = enumerator.Current;
        int num3 = 2;
        while (true)
        {
          bool flag;
          int num4;
          switch (num3)
          {
            case 0:
            case 2:
              if ((int) current.\u0002 != (int) _param0.\u0002)
              {
                num4 = 3;
                break;
              }
              goto label_12;
            case 1:
            case 3:
              flag = current.\u0008.Bounds.IntersectsWith(_param0.\u0008.Bounds);
              goto case 4;
            case 4:
              if (flag)
              {
                obj = current;
                num4 = 5;
                break;
              }
              goto label_12;
            case 5:
              goto label_18;
            default:
              num3 = 4;
              continue;
          }
          num3 = num4;
        }
      }
    }
    finally
    {
      enumerator.Dispose();
    }
    obj = (\u0005\u2001) null;
label_18:
    return obj;
  }

  internal static bool \u0002() => true;

  internal static bool \u0003() => false;
}
