// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: AdjustmentRu, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 295D2DB0-E85F-4EE4-A4D8-BB22DC4EE57D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-56431be0898e907a3b97e42a4c9d74cbdb487ed8617dcf64fb3a8dddef6dded1.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 632661156;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1544185719)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1415390669 ^ -1310111369;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -140770556;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1413549146)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 317359103 ^ -513169107;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 218562398 ^ 398267495;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = -2060923533;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1698026874)) % 3U)
          {
            case 1:
              str = "";
              num1 = (int) num2 * -192435577 ^ -972259278;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count => 0;

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 975008724;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1291017488)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * 1658780781 ^ -1291771612;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -2005901041;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1300642776)) % 3U)
        {
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1053831019 ^ 1572831368;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1834541477;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -837544071)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 1303268873 ^ 1753693140;
            continue;
          case 2:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -587449649 ^ 2025117446;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -1501992846;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1061408619)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1638627961 ^ 270539192;
            continue;
          case 2:
            goto label_1;
          case 3:
            jsonNode = aNode;
            num1 = (int) num2 * 532309791 ^ -1609006280;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONNode.\u003Cget_Childs\u003Ed__17(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        bool deepChilds;
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = 1424793585;
          IEnumerator<JSONNode> enumerator1;
          JSONNode C;
          IEnumerator<JSONNode> enumerator2;
          JSONNode D;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ 609219445)) % 29U)
            {
              case 0:
                enumerator1 = this.Childs.GetEnumerator();
                num2 = (int) num3 * -1423897846 ^ 1860348578;
                continue;
              case 1:
                goto label_26;
              case 2:
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * -1132843797 ^ -394866852;
                continue;
              case 3:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * 1671203959 ^ 440341823;
                continue;
              case 4:
                enumerator1 = (IEnumerator<JSONNode>) null;
                deepChilds = false;
                num2 = (int) num3 * 1453631431 ^ -1975244391;
                continue;
              case 5:
                int num4;
                num2 = num4 = JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u206A‬‮⁭⁪‍‏‬⁪⁬‭⁮⁫‮⁪⁫‏​‍‭⁭‌‪‬⁮⁫‪‭‮⁫‫‮⁪⁯⁪⁫‌​‪‮‮((IEnumerator) enumerator1) ? 501606502 : (num4 = 1641528253);
                continue;
              case 6:
              case 10:
                this.\u003C\u003E1__state = -4;
                num2 = 487198264;
                continue;
              case 7:
                this.\u003C\u003E1__state = 1;
                deepChilds = true;
                num2 = (int) num3 * 991468028 ^ 914119353;
                continue;
              case 8:
                num2 = (int) num3 * -237097847 ^ 1339336350;
                continue;
              case 9:
                num2 = (int) num3 * 787310671 ^ 569953064;
                continue;
              case 11:
              case 15:
                this.\u003C\u003E1__state = -1;
                num2 = 197180508;
                continue;
              case 12:
                D = enumerator2.Current;
                this.\u003C\u003E2__current = D;
                num2 = 2088020881;
                continue;
              case 13:
                enumerator2 = C.DeepChilds.GetEnumerator();
                this.\u003C\u003E1__state = -4;
                num2 = (int) num3 * 1300117169 ^ -2125680489;
                continue;
              case 14:
                num2 = (int) num3 * -971243238 ^ -217297375;
                continue;
              case 16:
                num2 = (int) num3 * 2115555246 ^ 967346912;
                continue;
              case 17:
                goto label_1;
              case 18:
                this.\u003C\u003Em__Finally2();
                num2 = (int) num3 * 576024206 ^ -890201847;
                continue;
              case 20:
                int num5 = num1 == 0 ? 970786356 : (num5 = 1105912993);
                num2 = num5 ^ (int) num3 * 174862737;
                continue;
              case 21:
                num2 = (int) num3 * 263626328 ^ 1717517645;
                continue;
              case 22:
                num2 = (int) num3 * -46948367 ^ 427497203;
                continue;
              case 24:
                D = (JSONNode) null;
                num2 = (int) num3 * 1438126426 ^ 188666280;
                continue;
              case 25:
                C = enumerator1.Current;
                num2 = 1480188569;
                continue;
              case 26:
                int num6;
                num2 = num6 = JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u206A‬‮⁭⁪‍‏‬⁪⁬‭⁮⁫‮⁪⁫‏​‍‭⁭‌‪‬⁮⁫‪‭‮⁫‫‮⁪⁯⁪⁫‌​‪‮‮((IEnumerator) enumerator2) ? 6724439 : (num6 = 77741133);
                continue;
              case 27:
                enumerator2 = (IEnumerator<JSONNode>) null;
                C = (JSONNode) null;
                num2 = (int) num3 * 204504245 ^ 645396593;
                continue;
              case 28:
                int num7;
                num2 = num7 = num1 == 1 ? 1329315498 : (num7 = 71753053);
                continue;
              default:
                goto label_28;
            }
          }
label_26:
          deepChilds = false;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_28:
        return deepChilds;
      }
    }

    public override string ToString()
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -272777395;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -951061392)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -545877459 ^ -1450448872;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
        int result = 0;
        bool flag = int.TryParse(this.Value, out result);
label_1:
        int num1 = -2136655300;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -948247699)) % 7U)
          {
            case 0:
              asInt = result;
              num1 = (int) num2 * 1508471856 ^ 1539119238;
              continue;
            case 1:
              num1 = (int) num2 * -1294906775 ^ 124243739;
              continue;
            case 3:
              int num3 = flag ? 1204423512 : (num3 = 727339628);
              num1 = num3 ^ (int) num2 * -1849646776;
              continue;
            case 4:
              goto label_1;
            case 5:
              asInt = 0;
              num1 = -274454595;
              continue;
            case 6:
              num1 = (int) num2 * 1059432669 ^ -1839788776;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return asInt;
      }
      set
      {
label_1:
        int num1 = -544612695;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -954888427)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * -1755908326 ^ 64357398;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = -1157428984;
        float result;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -75653942)) % 6U)
          {
            case 0:
              asFloat = 0.0f;
              num1 = -1468740091;
              continue;
            case 2:
              result = 0.0f;
              int num3 = !float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u200D‏‏‫⁬‏⁫‬⁯‫⁪⁭⁫⁬⁯‏⁬‍‌‭⁪‫‫‪‌⁫‬‌‬⁯⁫‍‪‏‬⁭​‭⁯‌‮(), out result) ? 786412480 : (num3 = 1211058233);
              num1 = num3 ^ (int) num2 * -2030294650;
              continue;
            case 3:
              num1 = (int) num2 * 369634536 ^ -1290195735;
              continue;
            case 4:
              goto label_1;
            case 5:
              asFloat = result;
              num1 = (int) num2 * 232825186 ^ -1039596817;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asFloat;
      }
      set => this.Value = value.ToString();
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = 264923143;
        bool flag;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1570241372)) % 9U)
          {
            case 0:
              flag = double.TryParse(this.Value, out result);
              num1 = (int) num2 * -327793164 ^ 924996088;
              continue;
            case 1:
              int num3 = flag ? 225626968 : (num3 = 1455316367);
              num1 = num3 ^ (int) num2 * -443999855;
              continue;
            case 2:
              goto label_1;
            case 3:
              num1 = (int) num2 * -1652421189 ^ -1634574452;
              continue;
            case 4:
              asDouble = 0.0;
              num1 = 1993666079;
              continue;
            case 5:
              asDouble = result;
              num1 = (int) num2 * 179563232 ^ 1049428687;
              continue;
            case 6:
              num1 = (int) num2 * -98567491 ^ 1087062938;
              continue;
            case 8:
              result = 0.0;
              num1 = (int) num2 * -1696024595 ^ 224762849;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -2074998885;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -933643942)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value.ToString();
              num1 = (int) num2 * 2132790974 ^ 742631191;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
        bool flag = bool.TryParse(this.Value, out result);
label_1:
        int num1 = -1019765158;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1310594595)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1177885977 ^ -1196177864;
              continue;
            case 3:
              int num3 = !flag ? -2079904965 : (num3 = -2020817306);
              num1 = num3 ^ (int) num2 * -1088392875;
              continue;
            case 4:
              asBool = result;
              num1 = (int) num2 * -155587462 ^ 1181161682;
              continue;
            case 5:
              asBool = !JSONNode.\u206A⁫⁫‮‫⁫⁫⁭‭⁯‏‭⁫‮‭‮‎⁫‌⁬⁯‫⁬⁪⁪⁮‪⁪‌⁯‮‬‏⁪⁮‫⁬‫⁭‍‮(this.Value);
              num1 = -411030849;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set => this.Value = value ? "true" : "false";
    }

    public virtual JSONArray AsArray => this as JSONArray;

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 174279151;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 615350178)) % 4U)
          {
            case 0:
              num1 = (int) num2 * 1609532890 ^ 1971849085;
              continue;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * 578987912 ^ 1708887438;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 836538862;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1697419652)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * 112064713 ^ -150798719;
            continue;
          case 3:
            num1 = (int) num2 * -1074742968 ^ 1182248393;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -1528237084;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -1827763310)) % 5U)
        {
          case 1:
            num1 = (int) num2 * -321328870 ^ 959054550;
            continue;
          case 2:
            str2 = d.Value;
            break;
          case 3:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * 1735453049 ^ -1336700535;
              continue;
            }
            str2 = (string) null;
            break;
          case 4:
            goto label_1;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -1495949657;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -778332386;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1352400262)) % 8U)
        {
          case 1:
            num1 = (int) num2 * 1160951454 ^ -1988807924;
            continue;
          case 2:
            goto label_1;
          case 3:
            flag2 = (object) a == b;
            num1 = -1071221092;
            continue;
          case 4:
            goto label_3;
          case 5:
            flag2 = true;
            num1 = (int) num2 * -1713590254 ^ 2088237505;
            continue;
          case 6:
            num1 = (int) num2 * 245575719 ^ -1208846888;
            continue;
          case 7:
            int num3 = flag1 ? 361418467 : (num3 = 79586349);
            num1 = num3 ^ (int) num2 * 43794372;
            continue;
          default:
            goto label_11;
        }
      }
label_3:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_11:
      return flag2;
label_4:
      num4 = 0;
label_5:
      flag1 = num4 != 0;
      num1 = -2058929219;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b) => !(a == b);

    public override bool Equals(object obj)
    {
label_1:
      int num1 = -1210253145;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -885271583)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            flag = (object) this == obj;
            num1 = (int) num2 * 1796500357 ^ -151941500;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override int GetHashCode() => this.\u202D‍‎‬‌⁯⁮​‎⁪‎⁬⁮‬‎‮⁪‎‭​‫⁯⁯‮⁫‏⁬⁯​‎⁯⁬​‌⁭‎‎⁯‏‬‮();

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 1122250528;
      int num2;
      string str1;
      string str2;
      char ch1;
      string str3;
      char ch2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 290190732)) % 30U)
        {
          case 0:
            int num4;
            num1 = num4 = num2 < JSONNode.\u200E⁬⁬‍⁬‪‏‏⁫⁯‍‏‏‏‏‎⁭​⁪‫‏‎‏‎⁫‮‎‌‭⁫‭​⁬‪⁭‏‏‌⁫‬‮(str1) ? 1697680204 : (num4 = 749006948);
            continue;
          case 1:
            num1 = (int) num3 * -1320022354 ^ 1364044704;
            continue;
          case 2:
            ch1 = JSONNode.\u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮(str1, num2);
            num1 = 904272264;
            continue;
          case 3:
            num1 = (int) num3 * -12696725 ^ -1206156777;
            continue;
          case 4:
            num1 = (int) num3 * -1654177029 ^ 1936921048;
            continue;
          case 5:
label_23:
            str2 = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(str2, "\\b");
            num1 = 1632801252;
            continue;
          case 6:
            int num5;
            num1 = num5 = ch2 != '"' ? 824371061 : (num5 = 1195132029);
            continue;
          case 7:
label_9:
            str2 = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(str2, "\\t");
            num1 = 1892795174;
            continue;
          case 8:
            num1 = (int) num3 * -828688724 ^ -1093403818;
            continue;
          case 9:
            str2 = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(str2, "\\\\");
            num1 = 1892795174;
            continue;
          case 10:
            num1 = 2145703390;
            continue;
          case 12:
            str3 = str2;
            num1 = (int) num3 * -1538573561 ^ 317704981;
            continue;
          case 13:
            str1 = aText;
            num2 = 0;
            num1 = (int) num3 * -503644960 ^ -252496239;
            continue;
          case 14:
            ch2 = ch1;
            num1 = (int) num3 * -1316319033 ^ 1228992858;
            continue;
          case 15:
label_20:
            str2 = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(str2, "\\r");
            num1 = 686730635;
            continue;
          case 16:
            num1 = (int) num3 * 1571660157 ^ -1268616080;
            continue;
          case 17:
            num1 = (int) num3 * -349241244 ^ 1779343770;
            continue;
          case 18:
            str2 = "";
            num1 = (int) num3 * -2045158053 ^ 967483311;
            continue;
          case 19:
            goto label_1;
          case 20:
label_28:
            str2 = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(str2, "\\f");
            num1 = 1987803001;
            continue;
          case 21:
label_21:
            str2 = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(str2, "\\n");
            num1 = 182845698;
            continue;
          case 22:
label_30:
            str2 = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(str2, ch1.ToString());
            num1 = 1892795174;
            continue;
          case 23:
            str2 = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(str2, "\\\"");
            num1 = 1919075288;
            continue;
          case 24:
            ++num2;
            num1 = (int) num3 * 645726690 ^ 1079970572;
            continue;
          case 25:
            num1 = (int) num3 * -1091488765 ^ -1364548421;
            continue;
          case 26:
            num1 = (int) num3 * 1361421973 ^ 1346053038;
            continue;
          case 27:
            int num6;
            num1 = num6 = ch2 == '\\' ? 120976639 : (num6 = 670001110);
            continue;
          case 28:
            switch (ch2)
            {
              case '\b':
                goto label_23;
              case '\t':
                goto label_9;
              case '\n':
                goto label_21;
              case '\v':
                goto label_30;
              case '\f':
                goto label_28;
              case '\r':
                goto label_20;
              default:
                num1 = (int) num3 * -899037965 ^ -568552421;
                continue;
            }
          case 29:
            num1 = (int) num3 * 1109104674 ^ -1476798597;
            continue;
          default:
            goto label_32;
        }
      }
label_32:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
label_1:
      int num1 = -239377956;
      bool flag1;
      int num2;
      char ch1;
      string aItem;
      char ch2;
      char ch3;
      JSONNode jsonNode1;
      string aKey;
      Stack<JSONNode> jsonNodeStack;
      bool flag2;
      bool flag3;
      bool flag4;
      bool flag5;
      string s;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      bool flag14;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -2029402253)) % 156U)
        {
          case 0:
            int num4;
            num1 = num4 = ch3 != 'f' ? -1684722690 : (num4 = -459446315);
            continue;
          case 1:
            num1 = (int) num3 * -1226976733 ^ 1800341696;
            continue;
          case 2:
            ch3 = ch2;
            num1 = (int) num3 * -1349152278 ^ 742011624;
            continue;
          case 3:
            num1 = (int) num3 * 1127399869 ^ -1016962976;
            continue;
          case 4:
            num1 = (int) num3 * -1293024641 ^ -1049664999;
            continue;
          case 5:
          case 59:
          case 92:
          case 119:
          case 123:
label_124:
            ++num2;
            num1 = -1711487375;
            continue;
          case 6:
            num1 = (int) num3 * -1126159895 ^ -1056313379;
            continue;
          case 7:
            jsonNodeStack = new Stack<JSONNode>();
            num1 = (int) num3 * -1010957715 ^ 1201489230;
            continue;
          case 8:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, "\b");
            num1 = -1885754511;
            continue;
          case 9:
            aKey = "";
            flag4 = false;
            num1 = (int) num3 * -616047387 ^ 944037838;
            continue;
          case 10:
            num1 = (int) num3 * 1859862503 ^ 1824079257;
            continue;
          case 11:
            int num5 = flag9 ? 258756937 : (num5 = 2125319609);
            num1 = num5 ^ (int) num3 * -1784008053;
            continue;
          case 12:
            goto label_90;
          case 13:
            flag14 = flag4;
            num1 = -1470974458;
            continue;
          case 14:
            num1 = (int) num3 * -492833576 ^ -981524391;
            continue;
          case 15:
            num1 = -2093384859;
            continue;
          case 16:
label_7:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, "\t");
            num1 = -366817705;
            continue;
          case 17:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, JSONNode.\u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 24833650 ^ -1227802107;
            continue;
          case 18:
label_42:
            s = JSONNode.\u200E‏​‬‭‏‭‬‬⁫⁭‮‮‭⁭‌⁮⁪‬⁪⁮‌‫⁫‎‮‭⁬‮‬⁫‍‫⁪‭‪‬⁮‫‮(aJSON, num2 + 1, 4);
            num1 = -1936933683;
            continue;
          case 19:
            int num6;
            num1 = num6 = ch1 != '{' ? -759672534 : (num6 = -707227034);
            continue;
          case 20:
            aKey = JSONNode.\u200B‫‍⁫‭‍⁬‭⁮‪⁯‮‭⁮‬‪‪⁮⁬‫⁮⁯⁪⁮‍⁪⁪‬​‭‏‏‏​​‮‌‭‬‍‮(aKey);
            num1 = (int) num3 * 1771023137 ^ -1351446286;
            continue;
          case 21:
            num1 = (int) num3 * -838479033 ^ -1785270376;
            continue;
          case 22:
            num1 = (int) num3 * 609692570 ^ -70287823;
            continue;
          case 23:
            num1 = (int) num3 * -920911725 ^ 1320246726;
            continue;
          case 24:
            aKey = JSONNode.\u200B‫‍⁫‭‍⁬‭⁮‪⁯‮‭⁮‬‪‪⁮⁬‫⁮⁯⁪⁮‍⁪⁪‬​‭‏‏‏​​‮‌‭‬‍‮(aKey);
            int num7 = jsonNode1 is JSONArray ? 1781103668 : (num7 = 1472590863);
            num1 = num7 ^ (int) num3 * 1203633344;
            continue;
          case 25:
            num1 = (int) num3 * -975986198 ^ -805992589;
            continue;
          case 26:
            flag12 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -662852659 ^ 129549424;
            continue;
          case 27:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1613945054 ^ 1449744735;
            continue;
          case 28:
            num1 = (int) num3 * -2129030411 ^ -1639494564;
            continue;
          case 29:
            int num8;
            num1 = num8 = ch1 <= ']' ? -881068588 : (num8 = -1639328080);
            continue;
          case 30:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, "\f");
            num1 = -366817705;
            continue;
          case 31:
            int num9;
            num1 = num9 = !JSONNode.\u206F⁪⁮⁪‍‎‭⁭‏​​‎⁭‌‎⁪⁫​⁭‪⁬‎⁭‏​‎‍‎‪⁬‬⁬‮‮‍‎​‫⁬‮(aKey, "") ? -432361960 : (num9 = -586573487);
            continue;
          case 32:
            aItem = "";
            num1 = (int) num3 * 1699046922 ^ -1188538590;
            continue;
          case 33:
            aKey = JSONNode.\u200B‫‍⁫‭‍⁬‭⁮‪⁯‮‭⁮‬‪‪⁮⁬‫⁮⁯⁪⁮‍⁪⁪‬​‭‏‏‏​​‮‌‭‬‍‮(aKey);
            flag1 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -73427855 ^ 1761453971;
            continue;
          case 34:
            num1 = -1559072414;
            continue;
          case 35:
            num1 = (int) num3 * -787635844 ^ -968360970;
            continue;
          case 36:
            int num10;
            num1 = num10 = !JSONNode.\u206F⁪⁮⁪‍‎‭⁭‏​​‎⁭‌‎⁪⁫​⁭‪⁬‎⁭‏​‎‍‎‪⁬‬⁬‮‮‍‎​‫⁬‮(aKey, "") ? -1347506591 : (num10 = -522437539);
            continue;
          case 37:
            num1 = (int) num3 * -181679058 ^ 1732812057;
            continue;
          case 38:
            num1 = (int) num3 * 367924272 ^ -518809633;
            continue;
          case 39:
            switch (ch3)
            {
              case 'r':
                goto label_119;
              case 's':
                goto label_115;
              case 't':
                goto label_7;
              case 'u':
                goto label_42;
              default:
                num1 = -1816160831;
                continue;
            }
          case 40:
            num1 = (int) num3 * 1573903134 ^ -314240445;
            continue;
          case 41:
            num1 = (int) num3 * -1784173927 ^ -408510718;
            continue;
          case 42:
            int num11 = flag10 ? 1653604950 : (num11 = 936044502);
            num1 = num11 ^ (int) num3 * -2132044375;
            continue;
          case 43:
            switch (ch1)
            {
              case '[':
                goto label_80;
              case '\\':
                goto label_139;
              case ']':
                goto label_95;
              default:
                num1 = -52455502;
                continue;
            }
          case 44:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, JSONNode.\u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -16979996 ^ 1179301405;
            continue;
          case 45:
            num1 = (int) num3 * -1868169023 ^ -112189954;
            continue;
          case 46:
            int num12;
            num1 = num12 = ch1 != '"' ? -425390379 : (num12 = -688018367);
            continue;
          case 47:
            int num13 = ch1 == ':' ? 935966863 : (num13 = 1133344120);
            num1 = num13 ^ (int) num3 * 67505084;
            continue;
          case 48:
            flag5 = flag4;
            num1 = (int) num3 * 1082875480 ^ -2060619389;
            continue;
          case 49:
            int num14 = !flag11 ? -26372468 : (num14 = -417128319);
            num1 = num14 ^ (int) num3 * 1713664599;
            continue;
          case 50:
            aItem = "";
            num1 = (int) num3 * 270370609 ^ 1302783367;
            continue;
          case 51:
            num2 = 0;
            num1 = (int) num3 * -801370688 ^ 1413468779;
            continue;
          case 52:
            num1 = (int) num3 * 1342013834 ^ 1634460320;
            continue;
          case 53:
            num1 = (int) num3 * -1080525321 ^ 1234304099;
            continue;
          case 54:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, JSONNode.\u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 735226504 ^ 189052227;
            continue;
          case 55:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1735872703 ^ 1892781595;
            continue;
          case 56:
            num1 = -429042520;
            continue;
          case 57:
            num1 = (int) num3 * -232487992 ^ -1625333505;
            continue;
          case 58:
            int num15;
            num1 = num15 = ch1 == ' ' ? -590137669 : (num15 = -2073514502);
            continue;
          case 60:
            num1 = -1860187501;
            continue;
          case 61:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 220988594 ^ 1109208666;
            continue;
          case 62:
            int num16 = flag8 ? -1182515639 : (num16 = -1533426410);
            num1 = num16 ^ (int) num3 * -122841420;
            continue;
          case 63:
            num1 = (int) num3 * -325341156 ^ -2054904384;
            continue;
          case 64:
            num1 = (int) num3 * 1912271294 ^ -1465339240;
            continue;
          case 65:
            goto label_92;
          case 66:
            num1 = (int) num3 * 493695225 ^ -1804842395;
            continue;
          case 67:
            num2 += 4;
            num1 = (int) num3 * -1781938117 ^ 1020733674;
            continue;
          case 68:
label_115:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, ch2.ToString());
            num1 = -366817705;
            continue;
          case 69:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1464638491 ^ -1262165768;
            continue;
          case 70:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -1253973262 ^ -216358115;
            continue;
          case 71:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 258892478 ^ -1894904751;
            continue;
          case 72:
label_133:
            flag8 = flag4;
            num1 = -1255019431;
            continue;
          case 73:
            num1 = (int) num3 * -220686429 ^ 539969185;
            continue;
          case 74:
            num1 = (int) num3 * 1827966878 ^ 1714339244;
            continue;
          case 75:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, JSONNode.\u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 722386296 ^ 1451836218;
            continue;
          case 76:
            flag2 = JSONNode.\u206F⁪⁮⁪‍‎‭⁭‏​​‎⁭‌‎⁪⁫​⁭‪⁬‎⁭‏​‎‍‎‪⁬‬⁬‮‮‍‎​‫⁬‮(aKey, "");
            num1 = -627196814;
            continue;
          case 77:
            int num17 = flag13 ? 1712581861 : (num17 = 73721203);
            num1 = num17 ^ (int) num3 * 1685174899;
            continue;
          case 78:
            num1 = (int) num3 * -1273478075 ^ 1101792301;
            continue;
          case 79:
            num1 = (int) num3 * -1064034159 ^ 555607548;
            continue;
          case 80:
            num1 = (int) num3 * -97268280 ^ -1953509823;
            continue;
          case 81:
label_139:
            ++num2;
            flag9 = flag4;
            num1 = -490560224;
            continue;
          case 82:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * 1104950004 ^ 1850760972;
            continue;
          case 83:
            int num18 = ch1 > ' ' ? -622441917 : (num18 = -419505256);
            num1 = num18 ^ (int) num3 * 1772887866;
            continue;
          case 84:
label_109:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, JSONNode.\u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮(aJSON, num2).ToString());
            num1 = -285134611;
            continue;
          case 85:
            num1 = (int) num3 * -191670213 ^ -958729936;
            continue;
          case 86:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -785250347 ^ -272634286;
            continue;
          case 87:
            int num19;
            num1 = num19 = num2 >= JSONNode.\u200E⁬⁬‍⁬‪‏‏⁫⁯‍‏‏‏‏‎⁭​⁪‫‏‎‏‎⁫‮‎‌‭⁫‭​⁬‪⁭‏‏‌⁫‬‮(aJSON) ? -822931353 : (num19 = -1396668948);
            continue;
          case 88:
            int num20 = flag6 ? -479611478 : (num20 = -1859959543);
            num1 = num20 ^ (int) num3 * 1241142767;
            continue;
          case 89:
            int num21 = !flag14 ? -395923166 : (num21 = -1269558313);
            num1 = num21 ^ (int) num3 * -501449012;
            continue;
          case 90:
            int num22 = ch1 > ',' ? -1268988690 : (num22 = -835041968);
            num1 = num22 ^ (int) num3 * 516296912;
            continue;
          case 91:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1718625070 ^ -1685942175;
            continue;
          case 93:
            num1 = (int) num3 * -725517711 ^ -218070462;
            continue;
          case 94:
            aKey = "";
            num1 = -1986413220;
            continue;
          case 95:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, JSONNode.\u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * 2001719194 ^ -319698311;
            continue;
          case 96:
            num1 = (int) num3 * 1820368428 ^ 190210725;
            continue;
          case 97:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -760115381;
            continue;
          case 98:
            flag3 = JSONNode.\u206F⁪⁮⁪‍‎‭⁭‏​​‎⁭‌‎⁪⁫​⁭‪⁬‎⁭‏​‎‍‎‪⁬‬⁬‮‮‍‎​‫⁬‮(aItem, "");
            num1 = -5922282;
            continue;
          case 99:
            int num23 = ch3 > 'f' ? 457552548 : (num23 = 849810588);
            num1 = num23 ^ (int) num3 * -1033748953;
            continue;
          case 100:
            int num24 = !flag5 ? -39760042 : (num24 = -1131264437);
            num1 = num24 ^ (int) num3 * 759421760;
            continue;
          case 101:
            jsonNode2 = jsonNode1;
            num1 = -398823262;
            continue;
          case 102:
            int num25 = JSONNode.\u206F⁪⁮⁪‍‎‭⁭‏​​‎⁭‌‎⁪⁫​⁭‪⁬‎⁭‏​‎‍‎‪⁬‬⁬‮‮‍‎​‫⁬‮(aItem, "") ? 1780189730 : (num25 = 1588741624);
            num1 = num25 ^ (int) num3 * -2099628205;
            continue;
          case 104:
            aKey = "";
            num1 = -742442439;
            continue;
          case 105:
            num1 = (int) num3 * -1144594738 ^ -1714158566;
            continue;
          case 106:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * 2118043720 ^ 992746396;
            continue;
          case 107:
            aKey = aItem;
            num1 = -1265027108;
            continue;
          case 108:
            flag6 = jsonNodeStack.Count == 0;
            num1 = -442471065;
            continue;
          case 109:
            int num26 = flag12 ? -650128426 : (num26 = -1236353023);
            num1 = num26 ^ (int) num3 * -1965396746;
            continue;
          case 110:
            flag4 = !flag4;
            num1 = -1956348816;
            continue;
          case 111:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -138903442 ^ -2138247338;
            continue;
          case 112:
            aKey = "";
            num1 = -2038432503;
            continue;
          case 113:
            int num27 = !flag1 ? -1323257606 : (num27 = -1994392210);
            num1 = num27 ^ (int) num3 * 1346504129;
            continue;
          case 114:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, JSONNode.\u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1743988082 ^ -2124173790;
            continue;
          case 115:
            int num28 = !(jsonNode1 != (object) null) ? 1711499546 : (num28 = 763812938);
            num1 = num28 ^ (int) num3 * -291648903;
            continue;
          case 116:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, "\n");
            num1 = -366817705;
            continue;
          case 117:
            int num29 = jsonNode1 is JSONArray ? 1537526039 : (num29 = 1464004147);
            num1 = num29 ^ (int) num3 * -385598125;
            continue;
          case 118:
            jsonNodeStack.Pop();
            num1 = -1835704115;
            continue;
          case 120:
            num1 = (int) num3 * -225555169 ^ -1373549665;
            continue;
          case 121:
            aKey = "";
            aItem = "";
            num1 = -1362516722;
            continue;
          case 122:
            int num30;
            num1 = num30 = ch3 == 'n' ? -1330720853 : (num30 = -724018236);
            continue;
          case 124:
label_95:
            int num31;
            num1 = num31 = !flag4 ? -110348433 : (num31 = -321239850);
            continue;
          case 125:
            int num32 = !flag3 ? -957132513 : (num32 = -204689915);
            num1 = num32 ^ (int) num3 * -823548512;
            continue;
          case 126:
            num1 = -554358465;
            continue;
          case (uint) sbyte.MaxValue:
            aItem = "";
            num1 = (int) num3 * 155030160 ^ -1751576817;
            continue;
          case 128:
            flag13 = flag4;
            num1 = -1874082430;
            continue;
          case 129:
            flag10 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * 770723253 ^ 1642107616;
            continue;
          case 130:
            num1 = (int) num3 * 1923623467 ^ 1899412725;
            continue;
          case 131:
            int num33;
            num1 = num33 = !flag4 ? -661201479 : (num33 = -983886774);
            continue;
          case 132:
            goto label_1;
          case 133:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -485021971;
            continue;
          case 134:
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -1070077658 ^ -87257398;
            continue;
          case 135:
            aItem = "";
            num1 = (int) num3 * -381266691 ^ 1183203845;
            continue;
          case 136:
            int num34;
            num1 = num34 = ch1 == ',' ? -1491738808 : (num34 = -1858257918);
            continue;
          case 137:
            int num35 = !flag2 ? -2045122002 : (num35 = -1673487981);
            num1 = num35 ^ (int) num3 * 10307439;
            continue;
          case 138:
            num1 = (int) num3 * -1611438660 ^ -312347785;
            continue;
          case 139:
            num1 = (int) num3 * 794030394 ^ 976997702;
            continue;
          case 140:
            num1 = (int) num3 * 877435067 ^ -1678235605;
            continue;
          case 141:
            num1 = (int) num3 * -2092318235 ^ 380911149;
            continue;
          case 142:
            num1 = (int) num3 * 512239669 ^ -1576367451;
            continue;
          case 143:
            num1 = (int) num3 * -731190582 ^ 1063918360;
            continue;
          case 144:
            int num36 = flag7 ? -1894916258 : (num36 = -957053938);
            num1 = num36 ^ (int) num3 * 908225399;
            continue;
          case 145:
            ch2 = JSONNode.\u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮(aJSON, num2);
            num1 = (int) num3 * -514999386 ^ 1210557239;
            continue;
          case 146:
label_119:
            aItem = JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮(aItem, "\r");
            num1 = -192355430;
            continue;
          case 147:
            int num37;
            num1 = num37 = ch1 != '}' ? -1859581213 : (num37 = -1510461837);
            continue;
          case 148:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 812819911 ^ -1416168155;
            continue;
          case 149:
            num1 = (int) num3 * -1497742182 ^ -1719701166;
            continue;
          case 150:
            int num38 = jsonNode1 != (object) null ? -272571 : (num38 = -823347403);
            num1 = num38 ^ (int) num3 * -231298371;
            continue;
          case 151:
            ch1 = JSONNode.\u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮(aJSON, num2);
            num1 = -1213073295;
            continue;
          case 152:
            flag11 = JSONNode.\u206F⁪⁮⁪‍‎‭⁭‏​​‎⁭‌‎⁪⁫​⁭‪⁬‎⁭‏​‎‍‎‪⁬‬⁬‮‮‍‎​‫⁬‮(aKey, "");
            num1 = -1920780578;
            continue;
          case 153:
            switch (ch1)
            {
              case '\t':
                goto label_133;
              case '\n':
              case '\r':
                goto label_124;
              case '\v':
              case '\f':
                goto label_109;
              default:
                num1 = (int) num3 * 20028278 ^ -956894399;
                continue;
            }
          case 154:
            int num39 = ch3 == 'b' ? 1830228601 : (num39 = 1534137878);
            num1 = num39 ^ (int) num3 * 988195461;
            continue;
          case 155:
label_80:
            flag7 = flag4;
            num1 = -789420221;
            continue;
          default:
            goto label_156;
        }
      }
label_90:
      throw JSONNode.\u200E‏⁪⁯‮⁭⁭‌‫⁫‍‫​⁭‮‎‫⁮⁪​‎‫⁪‮‮‌‬‫‎​‪‫‫‫​‬⁬⁮‮⁬‮("JSON Parse: Quotation marks seems to be messed up.");
label_92:
      throw JSONNode.\u200E‏⁪⁯‮⁭⁭‌‫⁫‍‫​⁭‮‎‫⁮⁪​‎‫⁪‮‮‌‬‫‎​‪‫‫‫​‬⁬⁮‮⁬‮("JSON Parse: Too many closing brackets");
label_156:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -719679622;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -504075575)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -205745112 ^ 1207549347;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.Serialize(JSONNode.\u206C‬‭⁯‮‍​⁬⁪‍⁯‮‫⁯‍⁮⁭‪⁯‪⁫‮‎⁪⁫‎‭‮‫‍‫⁫⁬‌‫‬⁪⁯​‮‮(aData));
            num1 = (int) num2 * -1298978790 ^ -1990389814;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u200E‏⁪⁯‮⁭⁭‌‫⁫‍‫​⁭‮‎‫⁮⁪​‎‫⁪‮‮‌‬‫‎​‪‫‫‫​‬⁬⁮‮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u200E‏⁪⁯‮⁭⁭‌‫⁫‍‫​⁭‮‎‫⁮⁪​‎‫⁪‮‮‌‬‫‎​‪‫‫‫​‬⁬⁮‮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u200E‏⁪⁯‮⁭⁭‌‫⁫‍‫​⁭‮‎‫⁮⁪​‎‫⁪‮‮‌‬‫‎​‪‫‫‫​‬⁬⁮‮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
label_1:
      int num1 = -1096274597;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1335705749)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            JSONNode.\u200F⁯⁮⁪‭⁮⁫‭‭‍⁬‌⁫‌‮‌‎‎‏‏‬​‪⁮⁯⁭​‍⁭‭⁪⁭‎​‮‫‍‬⁫⁫‮(JSONNode.\u202C​⁯‫‏⁮⁬‏⁬‏⁮‮‎⁫​⁯⁮‍⁯‭‫‌‎⁮⁬‮⁮‏‍‭‏⁯‬⁪‪‎⁪⁮‏‌‮((FileSystemInfo) JSONNode.\u200F‮‏⁯⁫⁭⁮‍⁬‭​⁯⁬⁯⁯‍​‬‫⁯‎⁬‍⁪‪‎‬‪‫⁫​⁬⁯⁪⁪⁬‍⁫‬‎‮(JSONNode.\u200C​‮‭⁭‍⁪⁯‏⁬‫‪‪​‍‬⁫‫​⁮‬⁯⁮‬⁮⁮‬‭‮⁪‏⁮‍‬⁭​‌⁬‬‍‮(aFileName))));
            num1 = (int) num2 * 495369192 ^ -1766924465;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      FileStream aData = JSONNode.\u206B⁯‏‪‮⁮‌‬‭⁫‪‫‪‬‮‮⁭‬‭⁮‬‫‏⁯‫‭‭‎‬‮⁯‎⁮‭⁫⁯⁪⁬‭⁫‮(aFileName);
      try
      {
label_6:
        int num3 = -338935051;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1335705749)) % 3U)
          {
            case 0:
              goto label_13;
            case 1:
              this.SaveToStream((Stream) aData);
              num3 = (int) num4 * 2046474237 ^ -1612140252;
              continue;
            case 2:
              goto label_6;
            default:
              goto label_9;
          }
        }
label_13:
        return;
label_9:;
      }
      finally
      {
        if (aData != null)
        {
label_11:
          int num5 = -376119666;
          while (true)
          {
            uint num6;
            switch ((num6 = (uint) (num5 ^ -1335705749)) % 3U)
            {
              case 0:
                goto label_11;
              case 1:
                JSONNode.\u200F‏⁭‫‎‭‭⁯​‏⁫‏⁭⁯⁬⁬⁯‍‌‬‭‏‫‌​​⁬‬⁯‭⁮⁭‎‌⁪‏‭⁪‪‎‮((IDisposable) aData);
                num5 = (int) num6 * -681662265 ^ 2118303652;
                continue;
              default:
                goto label_15;
            }
          }
        }
label_15:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u200D‭⁪⁮⁪‫⁯‭⁭‍‪‬‭⁬‭‭‬‬‮⁯‌​⁯⁬‪​‍‮⁪⁪‫‏⁮⁫‌‫‮⁮⁪⁭‮();
      string base64;
      try
      {
label_2:
        int num1 = -986014456;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -358224691)) % 6U)
          {
            case 0:
              JSONNode.\u202B⁫‫⁯⁯⁯⁬‌‏‎‍‏‎⁪⁬⁪⁬‫‎‮‭‍‪‎​‬‮⁬‬‬‏‏⁮⁮‏⁭‎‏‍‮‮((Stream) aData, 0L);
              num1 = (int) num2 * -948959313 ^ 2139517650;
              continue;
            case 1:
              base64 = JSONNode.\u200E‫‫‎⁫‬‫​‏‫⁪⁪‫‌‍‮‭‫‪⁭⁫‫⁮⁭⁯‭‌​‬⁫‪​‎‌​⁪‏‎⁭‌‮(JSONNode.\u206B⁯‍‭⁬‫‏‮‬‭‎⁪⁭‬‬‫‬‌‭‎‍‬​⁮⁬⁬‎‏⁪‪‎⁯​⁭‫‭⁬‬‫‏‮(aData));
              num1 = (int) num2 * 687757141 ^ 2129093886;
              continue;
            case 2:
              goto label_2;
            case 3:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 2081754506 ^ 1744824417;
              continue;
            case 5:
              num1 = (int) num2 * 1809389822 ^ -419094982;
              continue;
            default:
              goto label_13;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_9:
          int num3 = -1341429665;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -358224691)) % 3U)
            {
              case 0:
                goto label_9;
              case 2:
                JSONNode.\u200F‏⁭‫‎‭‭⁯​‏⁫‏⁭⁯⁬⁬⁯‍‌‬‭‏‫‌​​⁬‬⁯‭⁮⁭‎‌⁪‏‭⁪‪‎‮((IDisposable) aData);
                num3 = (int) num4 * -360470750 ^ -929598537;
                continue;
              default:
                goto label_12;
            }
          }
        }
label_12:;
      }
label_13:
      return base64;
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u206F‌‫‏‬‍⁪‍‫⁮‪‬⁫‮‫​‬⁪‮⁯‌‏⁫‬‬‪⁯‭​⁬⁫⁬⁫‬⁫‪‏⁯⁬⁫‮(aReader);
label_1:
      int num1 = 1832252160;
      int num2;
      JSONBinaryTag jsonBinaryTag2;
      JSONBinaryTag jsonBinaryTag3;
      int num3;
      JSONArray jsonArray;
      JSONNode aItem;
      int num4;
      JSONNode jsonNode;
      JSONClass jsonClass;
      string aKey;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ 1285867771)) % 39U)
        {
          case 0:
label_30:
            num4 = JSONNode.\u202C‏⁮‎‭‏‪‏⁪⁭⁯⁮​‍⁫‍‮‌​‌⁭⁯‍⁭⁬‬‌⁮‏⁬⁫​⁪‌‍‮⁫‪‏⁯‮(aReader);
            num1 = 1827647389;
            continue;
          case 1:
            num1 = (int) num6 * -1735805136 ^ -767512865;
            continue;
          case 2:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * -1135854025 ^ -1169398019;
            continue;
          case 3:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 1268936616 ^ -247994441;
            continue;
          case 4:
            num1 = (int) num6 * -678277604 ^ -1055474621;
            continue;
          case 5:
            num3 = 0;
            num1 = (int) num6 * -1695435490 ^ -1712685584;
            continue;
          case 6:
            aKey = JSONNode.\u206D‏‎‎‮‭‫⁪⁮⁭‭​‍⁪‎‏⁯‏⁪‍⁯​‭​⁮‮​⁫‍⁭⁯⁯⁮⁭⁪‭‏‏⁯‭‮(aReader);
            num1 = 1553230768;
            continue;
          case 7:
            num1 = (int) num6 * -855900881 ^ 395442930;
            continue;
          case 8:
label_11:
            num1 = 262495554;
            continue;
          case 9:
label_33:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C‏⁮‎‭‏‪‏⁪⁭⁯⁮​‍⁫‍‮‌​‌⁭⁯‍⁭⁬‬‌⁮‏⁬⁫​⁪‌‍‮⁫‪‏⁯‮(aReader));
            num1 = 1201249023;
            continue;
          case 10:
            ++num3;
            num1 = (int) num6 * 1176449318 ^ 1708871768;
            continue;
          case 11:
label_10:
            num1 = 1719734919;
            continue;
          case 12:
            jsonArray = new JSONArray();
            num1 = (int) num6 * -231083773 ^ -483460240;
            continue;
          case 13:
            num2 = 0;
            num1 = (int) num6 * 966536413 ^ -1280600796;
            continue;
          case 14:
label_3:
            num1 = 191175615;
            continue;
          case 15:
            num5 = JSONNode.\u202C‏⁮‎‭‏‪‏⁪⁭⁯⁮​‍⁫‍‮‌​‌⁭⁯‍⁭⁬‬‌⁮‏⁬⁫​⁪‌‍‮⁫‪‏⁯‮(aReader);
            jsonClass = new JSONClass();
            num1 = (int) num6 * 395631028 ^ -372398954;
            continue;
          case 16:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B⁮⁯‮‍‬‬⁬‮⁯‮⁪‭⁭⁫⁪‎​‌‎‬⁮‎‍⁯⁫‮⁬‌⁬‮⁯⁯‌‌⁬‍‏‪‎‮(aReader));
            num1 = (int) num6 * 1537688429 ^ 1556617290;
            continue;
          case 17:
            num1 = (int) num6 * -1211970085 ^ 1058827024;
            continue;
          case 18:
            int num7;
            num1 = num7 = num3 < num4 ? 606178996 : (num7 = 1826938526);
            continue;
          case 19:
            ++num2;
            num1 = (int) num6 * 92160190 ^ 1892581798;
            continue;
          case 20:
            num1 = (int) num6 * -1044798870 ^ -889758729;
            continue;
          case 21:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 1251489189 ^ 1345030459;
            continue;
          case 22:
label_19:
            num1 = 1416702363;
            continue;
          case 23:
            switch (jsonBinaryTag3)
            {
              case JSONBinaryTag.Array:
                goto label_30;
              case JSONBinaryTag.Class:
                goto label_19;
              case JSONBinaryTag.Value:
                goto label_21;
              case JSONBinaryTag.IntValue:
                goto label_33;
              case JSONBinaryTag.DoubleValue:
                goto label_3;
              case JSONBinaryTag.BoolValue:
                goto label_10;
              case JSONBinaryTag.FloatValue:
                goto label_11;
              default:
                num1 = (int) num6 * -433072660 ^ -890028930;
                continue;
            }
          case 24:
            num1 = (int) num6 * 329530953 ^ -1054694840;
            continue;
          case 25:
            goto label_1;
          case 27:
            int num8;
            num1 = num8 = num2 >= num5 ? 1888301330 : (num8 = 917666376);
            continue;
          case 28:
label_21:
            num1 = 101605941;
            continue;
          case 29:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = 1114886774;
            continue;
          case 30:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202E⁮‬‫‎‭‪‭⁮⁪‍‍‎‏‭‮‮‏‭‮‍‬⁫‏‭‭⁫⁬⁪‭‫​⁮⁭‎‎‍‮⁬‮‮(aReader));
            num1 = (int) num6 * 1367792253 ^ 1835633211;
            continue;
          case 31:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 415707890 ^ 1761958589;
            continue;
          case 32:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206D‏‎‎‮‭‫⁪⁮⁭‭​‍⁪‎‏⁯‏⁪‍⁯​‭​⁮‮​⁫‍⁭⁯⁯⁮⁭⁪‭‏‏⁯‭‮(aReader));
            num1 = (int) num6 * 175791753 ^ 1975727708;
            continue;
          case 33:
            num1 = (int) num6 * -470077248 ^ -2133599382;
            continue;
          case 34:
            num1 = (int) num6 * 1181917925 ^ 1021583794;
            continue;
          case 35:
            jsonBinaryTag3 = jsonBinaryTag2;
            num1 = (int) num6 * -1154061379 ^ 723142780;
            continue;
          case 36:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202C⁮⁪‬⁯‬‎‭⁯‏⁮‌⁭‏‎‮‬‬⁮‭⁭⁮⁯​⁮‭‎‪‫‪⁫‏‬⁪‏‫‎⁯⁯⁯‮(aReader));
            num1 = (int) num6 * 881708975 ^ 1529998266;
            continue;
          case 37:
            goto label_8;
          case 38:
            aItem = JSONNode.Deserialize(aReader);
            num1 = (int) num6 * -1982369261 ^ 1433338140;
            continue;
          default:
            goto label_41;
        }
      }
label_8:
      throw JSONNode.\u200E‏⁪⁯‮⁭⁭‌‫⁫‍‫​⁭‮‎‫⁮⁪​‎‫⁪‮‮‌‬‫‎​‪‫‫‫​‬⁬⁮‮⁬‮(JSONNode.\u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_41:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u200E‏⁪⁯‮⁭⁭‌‫⁫‍‫​⁭‮‎‫⁮⁪​‎‫⁪‮‮‌‬‫‎​‪‫‫‫​‬⁬⁮‮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u200E‏⁪⁯‮⁭⁭‌‫⁫‍‫​⁭‮‎‫⁮⁪​‎‫⁪‮‮‌‬‫‎​‪‫‫‫​‬⁬⁮‮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u200E‏⁪⁯‮⁭⁭‌‫⁫‍‫​⁭‮‎‫⁮⁪​‎‫⁪‮‮‌‬‫‎​‪‫‫‫​‬⁬⁮‮⁬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u200D‌‪‮‌‬‭⁫‏‪⁭‭‭⁮​‫⁬⁭‭‏‌⁭‫‫​‍‎⁬​⁭⁯‭⁫​‏⁮⁪‪‪⁬‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1289026081;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1252732466)) % 3U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u200F‏⁭‫‎‭‭⁯​‏⁫‏⁭⁯⁬⁬⁯‍‌‬‭‏‫‌​​⁬‬⁯‭⁮⁭‎‌⁪‏‭⁪‪‎‮((IDisposable) aReader);
                num1 = (int) num2 * -788608164 ^ -1032063684;
                continue;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u202C‌⁭‏⁪‎‪⁭‬‫⁪⁪‍​⁮⁪​⁯‭​⁭‫⁬‍⁯‎‬⁫⁮‎​⁯⁮‬⁫‌⁯⁯⁪‬‮(aFileName);
      try
      {
        return JSONNode.LoadFromStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = -209317162;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -323253249)) % 4U)
            {
              case 0:
                num1 = (int) num2 * -320069525 ^ -966428728;
                continue;
              case 1:
                JSONNode.\u200F‏⁭‫‎‭‭⁯​‏⁫‏⁭⁯⁬⁬⁯‍‌‬‭‏‫‌​​⁬‬⁯‭⁮⁭‎‌⁪‏‭⁪‪‎‮((IDisposable) aData);
                num1 = (int) num2 * 139756921 ^ -1622835382;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -2018466738;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -594907901)) % 6U)
        {
          case 0:
            num1 = (int) num2 * -821425776 ^ -1323207384;
            continue;
          case 1:
            aData = JSONNode.\u206F‭⁮‮‏‫‪⁪⁬‎⁭‮⁮‏⁫⁪‬‌‍⁪‏⁫‬‌‎​‮⁬⁭⁪‬⁯‌‪​⁪‭‫‏⁪‮(JSONNode.\u202C​⁬⁬​‪​⁭‫‌⁮​‮⁭‪‎⁯⁪⁯‭‪‍‪‫⁯⁬⁪⁬⁯⁬‏⁭‏‌‪⁬‪⁬‍‭‮(aBase64));
            num1 = (int) num2 * -76393226 ^ -908183296;
            continue;
          case 2:
            goto label_1;
          case 3:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 1381960175 ^ 1833693374;
            continue;
          case 5:
            JSONNode.\u202B⁫‫⁯⁯⁯⁬‌‏‎‍‏‎⁪⁬⁪⁬‫‎‮‭‍‪‎​‬‮⁬‬‬‏‏⁮⁮‏⁭‎‏‍‮‮((Stream) aData, 0L);
            num1 = (int) num2 * -366585377 ^ 169215146;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return jsonNode;
    }

    public JSONNode()
    {
label_1:
      int num1 = -1755007204;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1314950298)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -835859067 ^ 534385362;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static CultureInfo \u200D‏‏‫⁬‏⁫‬⁯‫⁪⁭⁫⁬⁯‏⁬‍‌‭⁪‫‫‪‌⁫‬‌‬⁯⁫‍‪‏‬⁭​‭⁯‌‮() => CultureInfo.InvariantCulture;

    static bool \u206A⁫⁫‮‫⁫⁫⁭‭⁯‏‭⁫‮‭‮‎⁫‌⁬⁯‫⁬⁪⁪⁮‪⁪‌⁯‮‬‏⁪⁮‫⁬‫⁭‍‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u202D‍‎‬‌⁯⁮​‎⁪‎⁬⁮‬‎‮⁪‎‭​‫⁯⁯‮⁫‏⁬⁯​‎⁯⁬​‌⁭‎‎⁯‏‬‮() => base.GetHashCode();

    static char \u202C⁮‪‭⁮‬​⁯⁪‪‍⁬‏‌‬⁭‏‭‌⁮‌⁫⁫‎‮‭⁭‬‬⁮‮⁮​‎⁫‏‭⁭‭‭‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206E‭‮‮⁬‌​⁮‍‏‭‮‍‮⁮‬⁬​⁫⁬⁪‏⁯‏⁭‌‮⁯⁮⁪‬‏‏​‏‫⁮‫‌⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u200E⁬⁬‍⁬‪‏‏⁫⁯‍‏‏‏‏‎⁭​⁪‫‏‎‏‎⁫‮‎‌‭⁫‭​⁬‪⁭‏‏‌⁫‬‮([In] string obj0) => obj0.Length;

    static string \u200B‫‍⁫‭‍⁬‭⁮‪⁯‮‭⁮‬‪‪⁮⁬‫⁮⁯⁪⁮‍⁪⁪‬​‭‏‏‏​​‮‌‭‬‍‮([In] string obj0) => obj0.Trim();

    static bool \u206F⁪⁮⁪‍‎‭⁭‏​​‎⁭‌‎⁪⁫​⁭‪⁬‎⁭‏​‎‍‎‪⁬‬⁬‮‮‍‎​‫⁬‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u200E‏⁪⁯‮⁭⁭‌‫⁫‍‫​⁭‮‎‫⁮⁪​‎‫⁪‮‮‌‬‫‎​‪‫‫‫​‬⁬⁮‮⁬‮([In] string obj0) => new Exception(obj0);

    static string \u200E‏​‬‭‏‭‬‬⁫⁭‮‮‭⁭‌⁮⁪‬⁪⁮‌‫⁫‎‮‭⁬‮‬⁫‍‫⁪‭‪‬⁮‫‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206C‬‭⁯‮‍​⁬⁪‍⁯‮‫⁯‍⁮⁭‪⁯‪⁫‮‎⁪⁫‎‭‮‫‍‫⁫⁬‌‫‬⁪⁯​‮‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200C​‮‭⁭‍⁪⁯‏⁬‫‪‪​‍‬⁫‫​⁮‬⁯⁮‬⁮⁮‬‭‮⁪‏⁮‍‬⁭​‌⁬‬‍‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u200F‮‏⁯⁫⁭⁮‍⁬‭​⁯⁬⁯⁯‍​‬‫⁯‎⁬‍⁪‪‎‬‪‫⁫​⁬⁯⁪⁪⁬‍⁫‬‎‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202C​⁯‫‏⁮⁬‏⁬‏⁮‮‎⁫​⁯⁮‍⁯‭‫‌‎⁮⁬‮⁮‏‍‭‏⁯‬⁪‪‎⁪⁮‏‌‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200F⁯⁮⁪‭⁮⁫‭‭‍⁬‌⁫‌‮‌‎‎‏‏‬​‪⁮⁯⁭​‍⁭‭⁪⁭‎​‮‫‍‬⁫⁫‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206B⁯‏‪‮⁮‌‬‭⁫‪‫‪‬‮‮⁭‬‭⁮‬‫‏⁯‫‭‭‎‬‮⁯‎⁮‭⁫⁯⁪⁬‭⁫‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200F‏⁭‫‎‭‭⁯​‏⁫‏⁭⁯⁬⁬⁯‍‌‬‭‏‫‌​​⁬‬⁯‭⁮⁭‎‌⁪‏‭⁪‪‎‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u200D‭⁪⁮⁪‫⁯‭⁭‍‪‬‭⁬‭‭‬‬‮⁯‌​⁯⁬‪​‍‮⁪⁪‫‏⁮⁫‌‫‮⁮⁪⁭‮() => new MemoryStream();

    static void \u202B⁫‫⁯⁯⁯⁬‌‏‎‍‏‎⁪⁬⁪⁬‫‎‮‭‍‪‎​‬‮⁬‬‬‏‏⁮⁮‏⁭‎‏‍‮‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206B⁯‍‭⁬‫‏‮‬‭‎⁪⁭‬‬‫‬‌‭‎‍‬​⁮⁬⁬‎‏⁪‪‎⁯​⁭‫‭⁬‬‫‏‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u200E‫‫‎⁫‬‫​‏‫⁪⁪‫‌‍‮‭‫‪⁭⁫‫⁮⁭⁯‭‌​‬⁫‪​‎‌​⁪‏‎⁭‌‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u206F‌‫‏‬‍⁪‍‫⁮‪‬⁫‮‫​‬⁪‮⁯‌‏⁫‬‬‪⁯‭​⁬⁫⁬⁫‬⁫‪‏⁯⁬⁫‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202C‏⁮‎‭‏‪‏⁪⁭⁯⁮​‍⁫‍‮‌​‌⁭⁯‍⁭⁬‬‌⁮‏⁬⁫​⁪‌‍‮⁫‪‏⁯‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206D‏‎‎‮‭‫⁪⁮⁭‭​‍⁪‎‏⁯‏⁪‍⁯​‭​⁮‮​⁫‍⁭⁯⁯⁮⁭⁪‭‏‏⁯‭‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u202E⁮‬‫‎‭‪‭⁮⁪‍‍‎‏‭‮‮‏‭‮‍‬⁫‏‭‭⁫⁬⁪‭‫​⁮⁭‎‎‍‮⁬‮‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200B⁮⁯‮‍‬‬⁬‮⁯‮⁪‭⁭⁫⁪‎​‌‎‬⁮‎‍⁯⁫‮⁬‌⁬‮⁯⁯‌‌⁬‍‏‪‎‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202C⁮⁪‬⁯‬‎‭⁯‏⁮‌⁭‏‎‮‬‬⁮‭⁭⁮⁯​⁮‭‎‪‫‪⁫‏‬⁪‏‫‎⁯⁯⁯‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u200D‌‪‮‌‬‭⁫‏‪⁭‭‭⁮​‫⁬⁭‭‏‌⁭‫‫​‍‎⁬​⁭⁯‭⁫​‏⁮⁪‪‪⁬‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u202C‌⁭‏⁪‎‪⁭‬‫⁪⁪‍​⁮⁪​⁯‭​⁭‫⁬‍⁯‎‬⁫⁮‎​⁯⁮‬⁫‌⁯⁯⁪‬‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u202C​⁬⁬​‪​⁭‫‌⁮​‮⁭‪‎⁯⁪⁯‭‪‍‪‫⁯⁬⁪⁬⁯⁬‏⁭‏‌‪⁬‪⁬‍‭‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206F‭⁮‮‏‫‪⁪⁬‎⁭‮⁮‏⁫⁪‬‌‍⁪‏⁫‬‌‎​‮⁬⁭⁪‬⁯‌‪​⁪‭‫‏⁪‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
