// Decompiled with JetBrains decompiler
// Type: Total_Links.Form1
// Assembly: Total Links, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: AE77C445-6617-4DC2-9FD1-217817F736BF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00021-msil\HEUR-Trojan-Ransom.MSIL.Encoder.gen-3d11b59771be4edbc89a40908781f06513cbd7db9dd4f2938e9f4f1034c5fdf6.exe

using Microsoft.Office.Interop.Excel;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Total_Links
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("Button1")]
    private Button _Button1;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    [DebuggerNonUserCode]
    public Form1()
    {
      lock (Form1.__ENCList)
        Form1.__ENCList.Add(new WeakReference((object) this));
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.Button1 = new Button();
      this.Label1 = new Label();
      this.SuspendLayout();
      this.Button1.Font = new Font("Comic Sans MS", 15.75f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      Button button1_1 = this.Button1;
      Point point1 = new Point(49, 44);
      Point point2 = point1;
      button1_1.Location = point2;
      this.Button1.Name = "Button1";
      Button button1_2 = this.Button1;
      Size size1 = new Size(126, 46);
      Size size2 = size1;
      button1_2.Size = size2;
      this.Button1.TabIndex = 0;
      this.Button1.Text = "Browse";
      this.Button1.UseVisualStyleBackColor = true;
      this.Label1.AutoSize = true;
      this.Label1.Font = new Font("Impact", 15.75f, FontStyle.Bold | FontStyle.Underline, GraphicsUnit.Point, (byte) 0);
      Label label1_1 = this.Label1;
      point1 = new Point(53, 9);
      Point point3 = point1;
      label1_1.Location = point3;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      size1 = new Size(112, 26);
      Size size3 = size1;
      label1_2.Size = size3;
      this.Label1.TabIndex = 1;
      this.Label1.Text = "Aimseeker";
      this.AutoScaleDimensions = new SizeF(7f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(215, 102);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.Label1);
      this.Controls.Add((Control) this.Button1);
      this.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.MaximizeBox = false;
      this.Name = nameof (Form1);
      this.Text = "Total Links (Aimseeker)";
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode] get => this._Button1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Button1_Click);
        if (this._Button1 != null)
          this._Button1.Click -= eventHandler;
        this._Button1 = value;
        if (this._Button1 == null)
          return;
        this._Button1.Click += eventHandler;
      }
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode] get => this._Label1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    private void Button1_Click(object sender, EventArgs e)
    {
      string[] files = Directory.GetFiles(Conversions.ToString(new BrowseForFolder().BrowseDialog("Browse For The Excel Folder")));
      Application application = (Application) new ApplicationClass();
      int num1 = 0;
      string[] strArray = files;
      int index = 0;
      while (index < strArray.Length)
      {
        string str = strArray[index];
        Workbook workbook = ((_Application) application).Workbooks.Open(str, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value, (object) Missing.Value);
        try
        {
          foreach (Worksheet worksheet in ((_Workbook) workbook).Worksheets)
            checked { num1 += ((_Worksheet) worksheet).Hyperlinks.Count; }
        }
        finally
        {
          IEnumerator enumerator;
          if (enumerator is IDisposable)
            (enumerator as IDisposable).Dispose();
        }
        ((_Workbook) workbook).Close((object) Missing.Value, (object) Missing.Value, (object) Missing.Value);
        checked { ++index; }
      }
      int num2 = (int) Interaction.MsgBox((object) ("total links are " + Conversions.ToString(num1)));
    }
  }
}
