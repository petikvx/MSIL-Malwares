// Decompiled with JetBrains decompiler
// Type: w1NB.Yk6d
// Assembly: Kw9, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 454AB7CE-9D73-4F30-B915-379BCB1A28FE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.09-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0427c1890b6afe33b5647e2a756353d61092f9e0631bcb8cc3109a25a81f5068.exe

using Gg6i;
using Qs4z;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using System.Diagnostics;
using System.Runtime.CompilerServices;

namespace w1NB
{
  [DesignerCategory("code")]
  [ToolboxItem(true)]
  [DataObject(true)]
  [Designer("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
  [HelpKeyword("vs.data.TableAdapter")]
  public class Yk6d : Component
  {
    private SqlConnection _connection;
    private SqlTransaction _transaction;
    private SqlCommand[] _commandCollection;
    private bool _clearBeforeFill;

    [field: AccessedThroughProperty("_adapter")]
    private virtual SqlDataAdapter _adapter { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public Yk6d() => this.ClearBeforeFill = true;

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected internal SqlDataAdapter Adapter
    {
      get
      {
        if (this._adapter == null)
          this.n4RL();
        return this._adapter;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal SqlConnection Connection
    {
      get
      {
        if (this._connection == null)
          this.n5W2();
        return this._connection;
      }
      set
      {
        this._connection = value;
        if (this.Adapter.InsertCommand != null)
          this.Adapter.InsertCommand.Connection = value;
        if (this.Adapter.DeleteCommand != null)
          this.Adapter.DeleteCommand.Connection = value;
        if (this.Adapter.UpdateCommand != null)
          this.Adapter.UpdateCommand.Connection = value;
        int index = 0;
        while (index < this.CommandCollection.Length)
        {
          if (this.CommandCollection[index] != null)
            this.CommandCollection[index].Connection = value;
          checked { ++index; }
        }
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    internal SqlTransaction Transaction
    {
      get => this._transaction;
      set
      {
        this._transaction = value;
        int index = 0;
        while (index < this.CommandCollection.Length)
        {
          this.CommandCollection[index].Transaction = this._transaction;
          checked { ++index; }
        }
        if (this.Adapter != null && this.Adapter.DeleteCommand != null)
          this.Adapter.DeleteCommand.Transaction = this._transaction;
        if (this.Adapter != null && this.Adapter.InsertCommand != null)
          this.Adapter.InsertCommand.Transaction = this._transaction;
        if (this.Adapter == null || this.Adapter.UpdateCommand == null)
          return;
        this.Adapter.UpdateCommand.Transaction = this._transaction;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    protected SqlCommand[] CommandCollection
    {
      get
      {
        if (this._commandCollection == null)
          this.Yf6m();
        return this._commandCollection;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    public bool ClearBeforeFill
    {
      get => this._clearBeforeFill;
      set => this._clearBeforeFill = value;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void n4RL()
    {
      this._adapter = new SqlDataAdapter();
      this._adapter.TableMappings.Add((object) new DataTableMapping()
      {
        SourceTable = "Table",
        DataSetTable = "Fees",
        ColumnMappings = {
          {
            "Id",
            "Id"
          },
          {
            "Registration No",
            "Registration No"
          },
          {
            "Full Name",
            "Full Name"
          },
          {
            "Class",
            "Class"
          },
          {
            "Fees",
            "Fees"
          },
          {
            "Fees Paid",
            "Fees Paid"
          },
          {
            "Balance",
            "Balance"
          },
          {
            "Status",
            "Status"
          }
        }
      });
      this._adapter.DeleteCommand = new SqlCommand();
      this._adapter.DeleteCommand.Connection = this.Connection;
      this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Fees] WHERE (([Id] = @Original_Id) AND ((@IsNull_Registration_No = 1 AND [Registration No] IS NULL) OR ([Registration No] = @Original_Registration_No)) AND ((@IsNull_Full_Name = 1 AND [Full Name] IS NULL) OR ([Full Name] = @Original_Full_Name)) AND ((@IsNull_Class = 1 AND [Class] IS NULL) OR ([Class] = @Original_Class)) AND ((@IsNull_Fees = 1 AND [Fees] IS NULL) OR ([Fees] = @Original_Fees)) AND ((@IsNull_Fees_Paid = 1 AND [Fees Paid] IS NULL) OR ([Fees Paid] = @Original_Fees_Paid)) AND ((@IsNull_Balance = 1 AND [Balance] IS NULL) OR ([Balance] = @Original_Balance)) AND ((@IsNull_Status = 1 AND [Status] IS NULL) OR ([Status] = @Original_Status)))";
      this._adapter.DeleteCommand.CommandType = CommandType.Text;
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Id", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Id", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Registration_No", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Registration No", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Registration_No", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Registration No", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Full_Name", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Full Name", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Full_Name", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Full Name", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Class", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Class", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Class", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Class", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Fees", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Fees", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Fees", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Fees", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Fees_Paid", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Fees Paid", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Fees_Paid", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Fees Paid", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Balance", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Balance", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Balance", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Balance", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Status", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Status", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Status", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Status", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.InsertCommand = new SqlCommand();
      this._adapter.InsertCommand.Connection = this.Connection;
      this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Fees] ([Registration No], [Full Name], [Class], [Fees], [Fees Paid], [Balance], [Status]) VALUES (@Registration_No, @Full_Name, @Class, @Fees, @Fees_Paid, @Balance, @Status);\r\nSELECT Id, [Registration No], [Full Name], Class, Fees, [Fees Paid], Balance, Status FROM Fees WHERE (Id = SCOPE_IDENTITY())";
      this._adapter.InsertCommand.CommandType = CommandType.Text;
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Registration_No", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Registration No", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Full_Name", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Full Name", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Class", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Class", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Fees", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Fees", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Fees_Paid", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Fees Paid", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Balance", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Balance", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Status", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Status", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand = new SqlCommand();
      this._adapter.UpdateCommand.Connection = this.Connection;
      this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Fees] SET [Registration No] = @Registration_No, [Full Name] = @Full_Name, [Class] = @Class, [Fees] = @Fees, [Fees Paid] = @Fees_Paid, [Balance] = @Balance, [Status] = @Status WHERE (([Id] = @Original_Id) AND ((@IsNull_Registration_No = 1 AND [Registration No] IS NULL) OR ([Registration No] = @Original_Registration_No)) AND ((@IsNull_Full_Name = 1 AND [Full Name] IS NULL) OR ([Full Name] = @Original_Full_Name)) AND ((@IsNull_Class = 1 AND [Class] IS NULL) OR ([Class] = @Original_Class)) AND ((@IsNull_Fees = 1 AND [Fees] IS NULL) OR ([Fees] = @Original_Fees)) AND ((@IsNull_Fees_Paid = 1 AND [Fees Paid] IS NULL) OR ([Fees Paid] = @Original_Fees_Paid)) AND ((@IsNull_Balance = 1 AND [Balance] IS NULL) OR ([Balance] = @Original_Balance)) AND ((@IsNull_Status = 1 AND [Status] IS NULL) OR ([Status] = @Original_Status)));\r\nSELECT Id, [Registration No], [Full Name], Class, Fees, [Fees Paid], Balance, Status FROM Fees WHERE (Id = @Id)";
      this._adapter.UpdateCommand.CommandType = CommandType.Text;
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Registration_No", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Registration No", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Full_Name", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Full Name", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Class", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Class", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Fees", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Fees", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Fees_Paid", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Fees Paid", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Balance", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Balance", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Status", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Status", DataRowVersion.Current, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Id", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Id", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Registration_No", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Registration No", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Registration_No", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Registration No", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Full_Name", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Full Name", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Full_Name", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Full Name", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Class", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Class", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Class", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Class", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Fees", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Fees", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Fees", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Fees", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Fees_Paid", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Fees Paid", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Fees_Paid", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Fees Paid", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Balance", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Balance", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Balance", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 18, (byte) 2, "Balance", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Status", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Status", DataRowVersion.Original, true, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Status", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Status", DataRowVersion.Original, false, (object) null, "", "", ""));
      this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Id", SqlDbType.Int, 4, ParameterDirection.Input, (byte) 0, (byte) 0, "Id", DataRowVersion.Current, false, (object) null, "", "", ""));
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void n5W2()
    {
      this._connection = new SqlConnection();
      this._connection.ConnectionString = f6CG.Default.SMSDBConnectionString;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    private void Yf6m()
    {
      this._commandCollection = new SqlCommand[1];
      this._commandCollection[0] = new SqlCommand();
      this._commandCollection[0].Connection = this.Connection;
      this._commandCollection[0].CommandText = "SELECT Id, [Registration No], [Full Name], Class, Fees, [Fees Paid], Balance, Status FROM dbo.Fees";
      this._commandCollection[0].CommandType = CommandType.Text;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Fill, true)]
    public virtual int r3G6(k5H3.a9MQ n3G6)
    {
      this.Adapter.SelectCommand = this.CommandCollection[0];
      if (this.ClearBeforeFill)
        n3G6.Clear();
      return this.Adapter.Fill((DataTable) n3G6);
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public virtual k5H3.a9MQ b2EL()
    {
      this.Adapter.SelectCommand = this.CommandCollection[0];
      k5H3.a9MQ a9Mq = new k5H3.a9MQ();
      this.Adapter.Fill((DataTable) a9Mq);
      return a9Mq;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    public virtual int Kg9e(k5H3.a9MQ p7A5) => this.Adapter.Update((DataTable) p7A5);

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    public virtual int Ex87(k5H3 r9CE) => this.Adapter.Update((DataSet) r9CE, "Fees");

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    public virtual int Np41(DataRow Zx89) => this.Adapter.Update(new DataRow[1]
    {
      Zx89
    });

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    public virtual int y2C1(DataRow[] Tt3s) => this.Adapter.Update(Tt3s);

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Delete, true)]
    public virtual int Xq15(
      int Lw65,
      string a0MP,
      string Sq91,
      string w3DX,
      Decimal? Lg9n,
      Decimal? Tx2p,
      Decimal? Rg2i,
      string Bd69)
    {
      this.Adapter.DeleteCommand.Parameters[0].Value = (object) Lw65;
      if (a0MP == null)
      {
        this.Adapter.DeleteCommand.Parameters[1].Value = (object) 1;
        this.Adapter.DeleteCommand.Parameters[2].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.DeleteCommand.Parameters[1].Value = (object) 0;
        this.Adapter.DeleteCommand.Parameters[2].Value = (object) a0MP;
      }
      if (Sq91 == null)
      {
        this.Adapter.DeleteCommand.Parameters[3].Value = (object) 1;
        this.Adapter.DeleteCommand.Parameters[4].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.DeleteCommand.Parameters[3].Value = (object) 0;
        this.Adapter.DeleteCommand.Parameters[4].Value = (object) Sq91;
      }
      if (w3DX == null)
      {
        this.Adapter.DeleteCommand.Parameters[5].Value = (object) 1;
        this.Adapter.DeleteCommand.Parameters[6].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.DeleteCommand.Parameters[5].Value = (object) 0;
        this.Adapter.DeleteCommand.Parameters[6].Value = (object) w3DX;
      }
      if (Lg9n.HasValue)
      {
        this.Adapter.DeleteCommand.Parameters[7].Value = (object) 0;
        this.Adapter.DeleteCommand.Parameters[8].Value = (object) Lg9n.Value;
      }
      else
      {
        this.Adapter.DeleteCommand.Parameters[7].Value = (object) 1;
        this.Adapter.DeleteCommand.Parameters[8].Value = (object) DBNull.Value;
      }
      if (Tx2p.HasValue)
      {
        this.Adapter.DeleteCommand.Parameters[9].Value = (object) 0;
        this.Adapter.DeleteCommand.Parameters[10].Value = (object) Tx2p.Value;
      }
      else
      {
        this.Adapter.DeleteCommand.Parameters[9].Value = (object) 1;
        this.Adapter.DeleteCommand.Parameters[10].Value = (object) DBNull.Value;
      }
      if (Rg2i.HasValue)
      {
        this.Adapter.DeleteCommand.Parameters[11].Value = (object) 0;
        this.Adapter.DeleteCommand.Parameters[12].Value = (object) Rg2i.Value;
      }
      else
      {
        this.Adapter.DeleteCommand.Parameters[11].Value = (object) 1;
        this.Adapter.DeleteCommand.Parameters[12].Value = (object) DBNull.Value;
      }
      if (Bd69 == null)
      {
        this.Adapter.DeleteCommand.Parameters[13].Value = (object) 1;
        this.Adapter.DeleteCommand.Parameters[14].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.DeleteCommand.Parameters[13].Value = (object) 0;
        this.Adapter.DeleteCommand.Parameters[14].Value = (object) Bd69;
      }
      ConnectionState state = this.Adapter.DeleteCommand.Connection.State;
      if ((this.Adapter.DeleteCommand.Connection.State & ConnectionState.Open) != ConnectionState.Open)
        this.Adapter.DeleteCommand.Connection.Open();
      try
      {
        return this.Adapter.DeleteCommand.ExecuteNonQuery();
      }
      finally
      {
        if (state == ConnectionState.Closed)
          this.Adapter.DeleteCommand.Connection.Close();
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Insert, true)]
    public virtual int s9BS(
      string We28,
      string k1H7,
      string y4B5,
      Decimal? g4B5,
      Decimal? a1WX,
      Decimal? Wx9r,
      string n8PR)
    {
      this.Adapter.InsertCommand.Parameters[0].Value = We28 != null ? (object) We28 : (object) DBNull.Value;
      this.Adapter.InsertCommand.Parameters[1].Value = k1H7 != null ? (object) k1H7 : (object) DBNull.Value;
      this.Adapter.InsertCommand.Parameters[2].Value = y4B5 != null ? (object) y4B5 : (object) DBNull.Value;
      this.Adapter.InsertCommand.Parameters[3].Value = !g4B5.HasValue ? (object) DBNull.Value : (object) g4B5.Value;
      this.Adapter.InsertCommand.Parameters[4].Value = !a1WX.HasValue ? (object) DBNull.Value : (object) a1WX.Value;
      this.Adapter.InsertCommand.Parameters[5].Value = !Wx9r.HasValue ? (object) DBNull.Value : (object) Wx9r.Value;
      this.Adapter.InsertCommand.Parameters[6].Value = n8PR != null ? (object) n8PR : (object) DBNull.Value;
      ConnectionState state = this.Adapter.InsertCommand.Connection.State;
      if ((this.Adapter.InsertCommand.Connection.State & ConnectionState.Open) != ConnectionState.Open)
        this.Adapter.InsertCommand.Connection.Open();
      try
      {
        return this.Adapter.InsertCommand.ExecuteNonQuery();
      }
      finally
      {
        if (state == ConnectionState.Closed)
          this.Adapter.InsertCommand.Connection.Close();
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Update, true)]
    public virtual int Xb6x(
      string m6N1,
      string Et6c,
      string j8M9,
      Decimal? Kj4d,
      Decimal? Lj21,
      Decimal? Wn92,
      string s5X7,
      int Yk74,
      string j5Y4,
      string s0J4,
      string Db37,
      Decimal? x1M0,
      Decimal? d3ZA,
      Decimal? Re6r,
      string Ka1r,
      int b1S8)
    {
      this.Adapter.UpdateCommand.Parameters[0].Value = m6N1 != null ? (object) m6N1 : (object) DBNull.Value;
      this.Adapter.UpdateCommand.Parameters[1].Value = Et6c != null ? (object) Et6c : (object) DBNull.Value;
      this.Adapter.UpdateCommand.Parameters[2].Value = j8M9 != null ? (object) j8M9 : (object) DBNull.Value;
      this.Adapter.UpdateCommand.Parameters[3].Value = !Kj4d.HasValue ? (object) DBNull.Value : (object) Kj4d.Value;
      this.Adapter.UpdateCommand.Parameters[4].Value = !Lj21.HasValue ? (object) DBNull.Value : (object) Lj21.Value;
      this.Adapter.UpdateCommand.Parameters[5].Value = !Wn92.HasValue ? (object) DBNull.Value : (object) Wn92.Value;
      this.Adapter.UpdateCommand.Parameters[6].Value = s5X7 != null ? (object) s5X7 : (object) DBNull.Value;
      this.Adapter.UpdateCommand.Parameters[7].Value = (object) Yk74;
      if (j5Y4 == null)
      {
        this.Adapter.UpdateCommand.Parameters[8].Value = (object) 1;
        this.Adapter.UpdateCommand.Parameters[9].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.UpdateCommand.Parameters[8].Value = (object) 0;
        this.Adapter.UpdateCommand.Parameters[9].Value = (object) j5Y4;
      }
      if (s0J4 == null)
      {
        this.Adapter.UpdateCommand.Parameters[10].Value = (object) 1;
        this.Adapter.UpdateCommand.Parameters[11].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.UpdateCommand.Parameters[10].Value = (object) 0;
        this.Adapter.UpdateCommand.Parameters[11].Value = (object) s0J4;
      }
      if (Db37 == null)
      {
        this.Adapter.UpdateCommand.Parameters[12].Value = (object) 1;
        this.Adapter.UpdateCommand.Parameters[13].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.UpdateCommand.Parameters[12].Value = (object) 0;
        this.Adapter.UpdateCommand.Parameters[13].Value = (object) Db37;
      }
      if (x1M0.HasValue)
      {
        this.Adapter.UpdateCommand.Parameters[14].Value = (object) 0;
        this.Adapter.UpdateCommand.Parameters[15].Value = (object) x1M0.Value;
      }
      else
      {
        this.Adapter.UpdateCommand.Parameters[14].Value = (object) 1;
        this.Adapter.UpdateCommand.Parameters[15].Value = (object) DBNull.Value;
      }
      if (d3ZA.HasValue)
      {
        this.Adapter.UpdateCommand.Parameters[16].Value = (object) 0;
        this.Adapter.UpdateCommand.Parameters[17].Value = (object) d3ZA.Value;
      }
      else
      {
        this.Adapter.UpdateCommand.Parameters[16].Value = (object) 1;
        this.Adapter.UpdateCommand.Parameters[17].Value = (object) DBNull.Value;
      }
      if (Re6r.HasValue)
      {
        this.Adapter.UpdateCommand.Parameters[18].Value = (object) 0;
        this.Adapter.UpdateCommand.Parameters[19].Value = (object) Re6r.Value;
      }
      else
      {
        this.Adapter.UpdateCommand.Parameters[18].Value = (object) 1;
        this.Adapter.UpdateCommand.Parameters[19].Value = (object) DBNull.Value;
      }
      if (Ka1r == null)
      {
        this.Adapter.UpdateCommand.Parameters[20].Value = (object) 1;
        this.Adapter.UpdateCommand.Parameters[21].Value = (object) DBNull.Value;
      }
      else
      {
        this.Adapter.UpdateCommand.Parameters[20].Value = (object) 0;
        this.Adapter.UpdateCommand.Parameters[21].Value = (object) Ka1r;
      }
      this.Adapter.UpdateCommand.Parameters[22].Value = (object) b1S8;
      ConnectionState state = this.Adapter.UpdateCommand.Connection.State;
      if ((this.Adapter.UpdateCommand.Connection.State & ConnectionState.Open) != ConnectionState.Open)
        this.Adapter.UpdateCommand.Connection.Open();
      try
      {
        return this.Adapter.UpdateCommand.ExecuteNonQuery();
      }
      finally
      {
        if (state == ConnectionState.Closed)
          this.Adapter.UpdateCommand.Connection.Close();
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Update, true)]
    public virtual int r3LT(
      string n6MA,
      string Jm62,
      string Wb4q,
      Decimal? Ps8n,
      Decimal? Ab8y,
      Decimal? As9t,
      string Pm5p,
      int q7LK,
      string Ps1p,
      string Df25,
      string Tc41,
      Decimal? c1Z0,
      Decimal? Lw9j,
      Decimal? y7PZ,
      string m6C0)
    {
      return this.Xb6x(n6MA, Jm62, Wb4q, Ps8n, Ab8y, As9t, Pm5p, q7LK, Ps1p, Df25, Tc41, c1Z0, Lw9j, y7PZ, m6C0, q7LK);
    }

    static void Xz7g()
    {
      // ISSUE: unable to decompile the method.
    }
  }
}
