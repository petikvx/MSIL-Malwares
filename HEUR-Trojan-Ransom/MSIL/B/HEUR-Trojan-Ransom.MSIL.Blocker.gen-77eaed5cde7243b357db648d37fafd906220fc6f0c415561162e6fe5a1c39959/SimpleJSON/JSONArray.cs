// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: IMuiResourceTypeIdIntEnt, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 108B0C51-A542-4D1F-972B-8772D9255CD7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-77eaed5cde7243b357db648d37fafd906220fc6f0c415561162e6fe5a1c39959.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_7;
label_1:
        int num1 = 1339423234;
label_2:
        JSONNode jsonNode;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 998819037)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -446674923 ^ 1288058159;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1659411385 ^ -2032636206;
              continue;
            case 3:
              int num3 = flag ? 1958511237 : (num3 = 1932222968);
              num1 = num3 ^ (int) num2 * 562097875;
              continue;
            case 4:
              jsonNode = this.m_List[aIndex];
              num1 = 1769524003;
              continue;
            case 5:
              goto label_1;
            case 6:
              num1 = (int) num2 * -1815586647 ^ -838868671;
              continue;
            case 7:
              goto label_6;
            default:
              goto label_11;
          }
        }
label_6:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_8;
label_11:
        return jsonNode;
label_7:
        num4 = 1;
label_8:
        flag = num4 != 0;
        num1 = 786524070;
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 2072208517;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1409507760)) % 7U)
          {
            case 0:
              this.m_List[aIndex] = value;
              num1 = 2122761622;
              continue;
            case 1:
              num1 = (int) num2 * -162353038 ^ -116100824;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            case 4:
              int num3 = !flag ? -458101759 : (num3 = -1408466135);
              num1 = num3 ^ (int) num2 * -503732259;
              continue;
            case 5:
              goto label_4;
            case 6:
              this.m_List.Add(value);
              num1 = (int) num2 * 1445247254 ^ 481395512;
              continue;
            default:
              goto label_11;
          }
        }
label_3:
        return;
label_11:
        return;
label_4:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = 1736469455;
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = -1114967338;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1905721612)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 904400277 ^ -1048780574;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 591757111 ^ -838427461;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
        this.m_List.Add(value);
label_1:
        int num1 = 996682041;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2009751826)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * 619054482 ^ -796120234;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 708164799;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 517485190)) % 4U)
          {
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * -1071446079 ^ -96562955;
              continue;
            case 2:
              num1 = (int) num2 * -151389797 ^ -1026908212;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1779228107;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1548804306)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -53846857 ^ -1883139816;
            continue;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 1961971907 ^ 1383240153;
            continue;
          case 2:
            goto label_3;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1054224115;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        JSONNode jsonNode2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -373980621)) % 11U)
        {
          case 0:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 1:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * -2053850985 ^ 304745045;
            continue;
          case 2:
            jsonNode2 = this.m_List[aIndex];
            num1 = -1000737013;
            continue;
          case 3:
            num1 = (int) num2 * -302017216 ^ -797487525;
            continue;
          case 4:
            num1 = (int) num2 * -665874213 ^ 1261718126;
            continue;
          case 5:
            goto label_1;
          case 6:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * 185487540 ^ 1174786294;
            continue;
          case 7:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 564907866 ^ -1904058880;
            continue;
          case 9:
            int num4 = !flag ? -1155496903 : (num4 = -1716452035);
            num1 = num4 ^ (int) num2 * -1050139922;
            continue;
          case 10:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 917171404 ^ 751883652;
            continue;
          default:
            goto label_15;
        }
        flag = num3 != 0;
        num1 = -418880495;
      }
label_15:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = 622760218;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 828346391)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -1749808694 ^ -75986221;
            continue;
          case 2:
            num1 = (int) num2 * 571371692 ^ -616843164;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
        getChildsD13.\u003C\u003E4__this = this;
label_1:
        int num1 = -1366168333;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -576750725)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * 86862486 ^ 64039630;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 1621673608;
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 223616245)) % 25U)
          {
            case 0:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * -358206302 ^ 1746964533;
              continue;
            case 1:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * 1772289963 ^ 505892581;
              continue;
            case 2:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = (int) num3 * -108034767 ^ 631900068;
              continue;
            case 3:
              int num4;
              num2 = num4 = !enumerator.MoveNext() ? 1806271520 : (num4 = 344063293);
              continue;
            case 4:
              goto label_1;
            case 5:
            case 6:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 1235612372;
              continue;
            case 7:
              enumerator1 = true;
              num2 = (int) num3 * 186575993 ^ -925999299;
              continue;
            case 9:
              num2 = (int) num3 * 1306816459 ^ -591314507;
              continue;
            case 10:
              enumerator1 = false;
              num2 = 1213980319;
              continue;
            case 11:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * 1098186167 ^ -434401359;
              continue;
            case 12:
              num2 = (int) num3 * -1698573507 ^ -283140240;
              continue;
            case 13:
              int num5;
              num2 = num5 = num1 != 1 ? 1338450555 : (num5 = 1546302423);
              continue;
            case 15:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * -1015158638 ^ 1417199899;
              continue;
            case 16:
            case 22:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 868767622;
              continue;
            case 18:
              N = enumerator.Current;
              num2 = 1267603907;
              continue;
            case 19:
              enumerator = new List<JSONNode>.Enumerator();
              num2 = (int) num3 * 1494663383 ^ -742718098;
              continue;
            case 20:
              enumerator1 = false;
              num2 = (int) num3 * -774253645 ^ -1947664983;
              continue;
            case 21:
              num2 = (int) num3 * 892151124 ^ 1103785418;
              continue;
            case 23:
              N = (JSONNode) null;
              num2 = (int) num3 * 1151366833 ^ 1055533436;
              continue;
            case 24:
              int num6 = num1 != 0 ? 1165377857 : (num6 = 349371710);
              num2 = num6 ^ (int) num3 * 16667579;
              continue;
            default:
              goto label_23;
          }
        }
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_23:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = -1969944838;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1364377497)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1258281328 ^ 1244736797;
            continue;
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * -1832009491 ^ 1448462066;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_12:
        int num3 = enumerator.MoveNext() ? -1306758061 : (num3 = -1107760963);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1364377497)) % 8U)
          {
            case 0:
              flag = JSONArray.\u202C‌⁫⁪​⁯‮⁯‭‫⁪‮‌⁬‫⁮⁯⁮​‮‎‍‌⁬⁭⁭‌‭⁪⁬‭‎⁭⁪⁫‮​‏‫⁯‮(str1) > 2;
              num3 = (int) num4 * -556730201 ^ 1557307836;
              continue;
            case 1:
              goto label_12;
            case 3:
              int num5 = !flag ? -676036588 : (num5 = -246533073);
              num3 = num5 ^ (int) num4 * 519467135;
              continue;
            case 4:
              current = enumerator.Current;
              num3 = -816059433;
              continue;
            case 5:
              str1 = JSONArray.\u206D‏⁪‬‭‌‍‪‍⁯⁫‬‪‪‪‌⁬⁬⁬‫​‮⁭⁪⁫‫‏‬‍⁯‫‌⁭‏‮‬‬‌⁮⁪‮(str1, ", ");
              num3 = (int) num4 * -462511551 ^ -1153295588;
              continue;
            case 6:
              str1 = JSONArray.\u206D‏⁪‬‭‌‍‪‍⁯⁫‬‪‪‪‌⁬⁬⁬‫​‮⁭⁪⁫‫‏‬‍⁯‫‌⁭‏‮‬‬‌⁮⁪‮(str1, JSONArray.\u206D⁮‫‭⁭‭‫‌⁮⁭‏⁫⁭⁭‫‌‍⁪‎‍⁭⁯⁬‫⁭⁪⁫‏‍‮‬‏⁬⁪⁫‏‌⁮​⁯‮((object) current));
              num3 = -1998933874;
              continue;
            case 7:
              num3 = -1306758061;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONArray.\u206D‏⁪‬‭‌‍‪‍⁯⁫‬‪‪‪‌⁬⁬⁬‫​‮⁭⁪⁫‫‏‬‍⁯‫‌⁭‏‮‬‬‌⁮⁪‮(str1, " ]");
label_17:
      int num6 = -1726826943;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1364377497)) % 4U)
        {
          case 1:
            num6 = (int) num7 * 1860872897 ^ 122608714;
            continue;
          case 2:
            str3 = str2;
            num6 = (int) num7 * 208682958 ^ 1311591806;
            continue;
          case 3:
            goto label_17;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_10:
        int num1 = !enumerator.MoveNext() ? -1129608398 : (num1 = -531933920);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -620242657)) % 9U)
          {
            case 0:
              num1 = -531933920;
              continue;
            case 1:
              str1 = JSONArray.\u202E‌⁭⁮⁫‬‍‍⁬‏‪‮‭‎‬‎‍⁭‪⁮‮‏​⁬‬‫‍‎⁫⁫‌‎⁭‭⁭‏‌⁪​‌‮(str1, "\n", aPrefix, "   ");
              num1 = -1281891031;
              continue;
            case 2:
              str1 = JSONArray.\u206D‏⁪‬‭‌‍‪‍⁯⁫‬‪‪‪‌⁬⁬⁬‫​‮⁭⁪⁫‫‏‬‍⁯‫‌⁭‏‮‬‬‌⁮⁪‮(str1, current.ToString(JSONArray.\u206D‏⁪‬‭‌‍‪‍⁯⁫‬‪‪‪‌⁬⁬⁬‫​‮⁭⁪⁫‫‏‬‍⁯‫‌⁭‏‮‬‬‌⁮⁪‮(aPrefix, "   ")));
              num1 = (int) num2 * -437385075 ^ -1190925368;
              continue;
            case 3:
              flag = JSONArray.\u202C‌⁫⁪​⁯‮⁯‭‫⁪‮‌⁬‫⁮⁯⁮​‮‎‍‌⁬⁭⁭‌‭⁪⁬‭‎⁭⁪⁫‮​‏‫⁯‮(str1) > 3;
              num1 = (int) num2 * 135699148 ^ 1696254846;
              continue;
            case 4:
              str1 = JSONArray.\u206D‏⁪‬‭‌‍‪‍⁯⁫‬‪‪‪‌⁬⁬⁬‫​‮⁭⁪⁫‫‏‬‍⁯‫‌⁭‏‮‬‬‌⁮⁪‮(str1, ", ");
              num1 = (int) num2 * 1874860342 ^ -473450795;
              continue;
            case 5:
              goto label_10;
            case 7:
              int num3 = flag ? 863773859 : (num3 = 1784229197);
              num1 = num3 ^ (int) num2 * 2141140048;
              continue;
            case 8:
              current = enumerator.Current;
              num1 = -30635161;
              continue;
            default:
              goto label_16;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_12:
        int num4 = -276169879;
        while (true)
        {
          uint num5;
          switch ((num5 = (uint) (num4 ^ -620242657)) % 3U)
          {
            case 1:
              num4 = (int) num5 * 1966553323 ^ 1172470146;
              continue;
            case 2:
              goto label_12;
            default:
              goto label_15;
          }
        }
label_15:;
      }
label_16:
      string str2 = JSONArray.\u202E‌⁭⁮⁫‬‍‍⁬‏‪‮‭‎‬‎‍⁭‪⁮‮‏​⁬‬‫‍‎⁫⁫‌‎⁭‭⁭‏‌⁪​‌‮(str1, "\n", aPrefix, "]");
label_17:
      int num6 = -142496404;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -620242657)) % 3U)
        {
          case 1:
            str3 = str2;
            num6 = (int) num7 * 858273088 ^ -499141210;
            continue;
          case 2:
            goto label_17;
          default:
            goto label_20;
        }
      }
label_20:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1012220887;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1977768601)) % 12U)
        {
          case 0:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * 1886256203 ^ -2016227576;
            continue;
          case 1:
            index = 0;
            num1 = (int) num2 * -773135331 ^ 397206211;
            continue;
          case 2:
            JSONArray.\u206A‍‌⁭⁯​‫‬‍‮‮⁯‌‏‫⁯‍‍‫‏‮‮‏​‍⁮‮‭‏⁮⁫⁫‍‮​‪‏⁯‏‮‮(aWriter, (byte) 1);
            num1 = (int) num2 * 1035105594 ^ 1221320766;
            continue;
          case 3:
            JSONArray.\u202B‭‬‬⁭⁫‪‮⁭⁭​‏‌⁬​⁮⁪‬‎‫‏‎‪⁪⁫⁪⁪⁮‪‪⁪‏‫‪⁫‍‬‍‏‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 1912689517 ^ -176863715;
            continue;
          case 4:
            int num3;
            num1 = num3 = index < this.m_List.Count ? -687702060 : (num3 = -369595391);
            continue;
          case 5:
            num1 = (int) num2 * -1853984638 ^ -548914258;
            continue;
          case 6:
            ++index;
            num1 = (int) num2 * 663299922 ^ 341286831;
            continue;
          case 7:
            num1 = (int) num2 * -19097811 ^ -553530674;
            continue;
          case 8:
            goto label_1;
          case 9:
            num1 = (int) num2 * -1211846620 ^ -770411849;
            continue;
          case 10:
            goto label_3;
          case 11:
            num1 = -1199959461;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u202C‌⁫⁪​⁯‮⁯‭‫⁪‮‌⁬‫⁮⁯⁮​‮‎‍‌⁬⁭⁭‌‭⁪⁬‭‎⁭⁪⁫‮​‏‫⁯‮([In] string obj0) => obj0.Length;

    static string \u206D‏⁪‬‭‌‍‪‍⁯⁫‬‪‪‪‌⁬⁬⁬‫​‮⁭⁪⁫‫‏‬‍⁯‫‌⁭‏‮‬‬‌⁮⁪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206D⁮‫‭⁭‭‫‌⁮⁭‏⁫⁭⁭‫‌‍⁪‎‍⁭⁯⁬‫⁭⁪⁫‏‍‮‬‏⁬⁪⁫‏‌⁮​⁯‮([In] object obj0) => obj0.ToString();

    static string \u202E‌⁭⁮⁫‬‍‍⁬‏‪‮‭‎‬‎‍⁭‪⁮‮‏​⁬‬‫‍‎⁫⁫‌‎⁭‭⁭‏‌⁪​‌‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206A‍‌⁭⁯​‫‬‍‮‮⁯‌‏‫⁯‍‍‫‏‮‮‏​‍⁮‮‭‏⁮⁫⁫‍‮​‪‏⁯‏‮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202B‭‬‬⁭⁫‪‮⁭⁭​‏‌⁬​⁮⁪‬‎‫‏‎‪⁪⁫⁪⁪⁮‪‪⁪‏‫‪⁫‍‬‍‏‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
