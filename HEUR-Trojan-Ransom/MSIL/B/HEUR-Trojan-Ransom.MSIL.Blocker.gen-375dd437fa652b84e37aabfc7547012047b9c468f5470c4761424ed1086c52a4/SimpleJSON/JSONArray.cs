// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: StreamWriterBufferedDataLo, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 2A001E45-B149-45C2-9BBE-A5BA299DBD32
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-375dd437fa652b84e37aabfc7547012047b9c468f5470c4761424ed1086c52a4.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 324272684;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1568942006)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -57807633 ^ -728183256;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * 1636589083 ^ 342082139;
              continue;
            case 2:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 551005220 ^ -1128796341;
                continue;
              }
              num3 = 1;
              break;
            case 3:
              goto label_1;
            case 4:
              jsonNode = this.m_List[aIndex];
              num1 = 486269014;
              continue;
            case 5:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 7:
              int num4 = !flag ? 1620684208 : (num4 = 1462949973);
              num1 = num4 ^ (int) num2 * -1574211466;
              continue;
            default:
              goto label_12;
          }
          flag = num3 != 0;
          num1 = 1690244073;
        }
label_12:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 354368932;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 77631986)) % 9U)
          {
            case 0:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 1:
              num1 = (int) num2 * -181737268 ^ -2063910685;
              continue;
            case 2:
              int num4 = flag ? -425283860 : (num4 = -280240948);
              num1 = num4 ^ (int) num2 * -1905012991;
              continue;
            case 3:
              num1 = (int) num2 * -703890264 ^ -1928493849;
              continue;
            case 4:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 1765229569 ^ 975391717;
                continue;
              }
              num3 = 1;
              break;
            case 5:
              goto label_3;
            case 6:
              goto label_1;
            case 7:
              this.m_List.Add(value);
              num1 = (int) num2 * -1641216083 ^ -1436393655;
              continue;
            case 8:
              this.m_List[aIndex] = value;
              num1 = 2146622355;
              continue;
            default:
              goto label_14;
          }
          flag = num3 != 0;
          num1 = 504822618;
        }
label_3:
        return;
label_14:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = 475731081;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 150870241)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1732185285 ^ 110461737;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1213381033;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 494707583)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 2005158585 ^ -1199649263;
              continue;
            case 2:
              this.m_List.Add(value);
              num1 = (int) num2 * 1935402750 ^ -1768784654;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override int Count
    {
      get
      {
        int count = this.m_List.Count;
label_1:
        int num1 = 1704873438;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1028975320)) % 3U)
          {
            case 1:
              num1 = (int) num2 * -1492172176 ^ -1403543053;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 944181592;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 665275517)) % 4U)
        {
          case 0:
            goto label_3;
          case 1:
            this.m_List.Add(aItem);
            num1 = (int) num2 * 1211255346 ^ -393369767;
            continue;
          case 2:
            num1 = (int) num2 * 515215317 ^ -712401317;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1041175391;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1532395335)) % 10U)
        {
          case 0:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 973996860 ^ 1235435738;
            continue;
          case 1:
            jsonNode2 = this.m_List[aIndex];
            num1 = -1490690721;
            continue;
          case 2:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 1055972079 ^ 526743552;
              continue;
            }
            num3 = 1;
            break;
          case 3:
            num1 = (int) num2 * -994599511 ^ 1458399355;
            continue;
          case 4:
            goto label_1;
          case 6:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * 544199210 ^ -413957470;
            continue;
          case 7:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 8:
            num1 = (int) num2 * -380494971 ^ -147252686;
            continue;
          case 9:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -1809646415 ^ 1986869236;
            continue;
          default:
            goto label_14;
        }
        int num4;
        num1 = num4 = num3 == 0 ? -1295730624 : (num4 = -649488475);
      }
label_14:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -1860473022;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1885700613)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -958725671 ^ -404944187;
            continue;
          case 1:
            this.m_List.Remove(aNode);
            jsonNode = aNode;
            num1 = (int) num2 * 1220479430 ^ -1240467915;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = -1560547338;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -679010893)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              getChildsD13.\u003C\u003E4__this = this;
              num1 = (int) num2 * -1574365986 ^ -144387050;
              continue;
            case 3:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * 349065564 ^ 444458817;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
        if (num1 == 0)
          goto label_7;
label_1:
        int num2 = 826988789;
label_2:
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 1882246044)) % 20U)
          {
            case 0:
              int num4;
              num2 = num4 = num1 == 1 ? 326180867 : (num4 = 1626877685);
              continue;
            case 1:
              num2 = (int) num3 * -1447725397 ^ 1442648971;
              continue;
            case 2:
              enumerator1 = false;
              num2 = 134907666;
              continue;
            case 3:
            case 17:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              N = (JSONNode) null;
              num2 = 688214004;
              continue;
            case 4:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 2071229822 ^ 584776360;
              continue;
            case 5:
              num2 = (int) num3 * -851986644 ^ -2071853674;
              continue;
            case 6:
            case 16:
              goto label_19;
            case 7:
              enumerator1 = true;
              num2 = (int) num3 * 1550993471 ^ -1980399983;
              continue;
            case 8:
              int num5;
              num2 = num5 = enumerator.MoveNext() ? 602505771 : (num5 = 569656248);
              continue;
            case 9:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -1397327889 ^ -1925847113;
              continue;
            case 10:
              enumerator = this.m_List.GetEnumerator();
              num2 = (int) num3 * -523355295 ^ -1972846169;
              continue;
            case 11:
              N = enumerator.Current;
              num2 = 1158384191;
              continue;
            case 13:
            case 19:
              goto label_7;
            case 14:
              goto label_1;
            case 15:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = (int) num3 * 447015560 ^ 1417317718;
              continue;
            case 18:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * -1210785307 ^ 57612373;
              continue;
            default:
              goto label_17;
          }
        }
label_17:
        enumerator = new List<JSONNode>.Enumerator();
        enumerator1 = false;
        goto label_19;
label_7:
        // ISSUE: reference to a compiler-generated field
        this.\u003C\u003E1__state = -1;
        num2 = 1556835082;
        goto label_2;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_19:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = -1522800681;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -528406340)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * -1110658596 ^ -1955820593;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_11:
        int num3 = enumerator.MoveNext() ? -323327375 : (num3 = -1545258696);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -528406340)) % 9U)
          {
            case 0:
              num3 = -323327375;
              continue;
            case 1:
              str1 = JSONArray.\u200F‪⁪‬‭‍⁭‏‬‪‎​‭‪‎⁯‭⁯​⁪‬‍⁫​⁪‎‮⁫⁪‭⁭‫⁬‍⁮⁬⁬‮⁭‬‮(str1, ", ");
              num3 = (int) num4 * -1645884719 ^ 895559069;
              continue;
            case 2:
              goto label_11;
            case 3:
              current = enumerator.Current;
              num3 = -1394764467;
              continue;
            case 5:
              int num5 = !flag ? 2059312202 : (num5 = 73488811);
              num3 = num5 ^ (int) num4 * -1679798399;
              continue;
            case 6:
              str1 = JSONArray.\u200F‪⁪‬‭‍⁭‏‬‪‎​‭‪‎⁯‭⁯​⁪‬‍⁫​⁪‎‮⁫⁪‭⁭‫⁬‍⁮⁬⁬‮⁭‬‮(str1, JSONArray.\u202A‪‮‫‪‬⁮‭‮‬‮‌‮‌‫⁬‪‬⁮‬⁬​‍⁮‫⁪⁭⁪​‏‍⁬‏⁯‌‫‮⁯‭⁯‮((object) current));
              num3 = -1628976792;
              continue;
            case 7:
              flag = JSONArray.\u200F⁪⁮‭⁭‭⁭‮⁭‫‬​‮‫⁮⁮⁪⁬⁬⁯‌​⁪‍‭‏​‌⁭⁯‬‏‏‮⁯‌⁯⁮‏‪‮(str1) > 2;
              num3 = (int) num4 * 1662665188 ^ -182286517;
              continue;
            case 8:
              num3 = (int) num4 * 1670953343 ^ -37781178;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONArray.\u200F‪⁪‬‭‍⁭‏‬‪‎​‭‪‎⁯‭⁯​⁪‬‍⁫​⁪‎‮⁫⁪‭⁭‫⁬‍⁮⁬⁬‮⁭‬‮(str1, " ]");
label_17:
      int num6 = -1558210133;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -528406340)) % 4U)
        {
          case 0:
            num6 = (int) num7 * 304513318 ^ -1777812543;
            continue;
          case 2:
            goto label_17;
          case 3:
            str3 = str2;
            num6 = (int) num7 * 749323911 ^ -672161191;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 496101662;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1231638146)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * -205628776 ^ 2015821238;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_9:
        int num3 = enumerator.MoveNext() ? 1107867624 : (num3 = 2009590473);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1231638146)) % 10U)
          {
            case 0:
              str1 = JSONArray.\u200F‪⁪‬‭‍⁭‏‬‪‎​‭‪‎⁯‭⁯​⁪‬‍⁫​⁪‎‮⁫⁪‭⁭‫⁬‍⁮⁬⁬‮⁭‬‮(str1, current.ToString(JSONArray.\u200F‪⁪‬‭‍⁭‏‬‪‎​‭‪‎⁯‭⁯​⁪‬‍⁫​⁪‎‮⁫⁪‭⁭‫⁬‍⁮⁬⁬‮⁭‬‮(aPrefix, "   ")));
              num3 = (int) num4 * -1542990310 ^ -1213067509;
              continue;
            case 1:
              goto label_9;
            case 2:
              int num5 = !flag ? 91943863 : (num5 = 1097990241);
              num3 = num5 ^ (int) num4 * -824465729;
              continue;
            case 3:
              str1 = JSONArray.\u206C⁯‭‭⁫⁭‪⁪⁬‬‌‌‏​⁫⁬⁪⁪⁯⁯‮​⁭‎⁯⁭‪⁪‏‏​‏⁬‫‫‏⁪‍⁫⁬‮(str1, "\n", aPrefix, "   ");
              num3 = 1674130702;
              continue;
            case 4:
              flag = JSONArray.\u200F⁪⁮‭⁭‭⁭‮⁭‫‬​‮‫⁮⁮⁪⁬⁬⁯‌​⁪‍‭‏​‌⁭⁯‬‏‏‮⁯‌⁯⁮‏‪‮(str1) > 3;
              num3 = (int) num4 * 491406639 ^ 1728212644;
              continue;
            case 6:
              num3 = 1107867624;
              continue;
            case 7:
              num3 = (int) num4 * -556949120 ^ -722549043;
              continue;
            case 8:
              current = enumerator.Current;
              num3 = 977036090;
              continue;
            case 9:
              str1 = JSONArray.\u200F‪⁪‬‭‍⁭‏‬‪‎​‭‪‎⁯‭⁯​⁪‬‍⁫​⁪‎‮⁫⁪‭⁭‫⁬‍⁮⁬⁬‮⁭‬‮(str1, ", ");
              num3 = (int) num4 * 1170935808 ^ 98290213;
              continue;
            default:
              goto label_21;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_17:
        int num6 = 252455843;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1231638146)) % 3U)
          {
            case 0:
              goto label_17;
            case 2:
              num6 = (int) num7 * 1568712975 ^ -1355017015;
              continue;
            default:
              goto label_20;
          }
        }
label_20:;
      }
label_21:
      string str2 = JSONArray.\u206C⁯‭‭⁫⁭‪⁪⁬‬‌‌‏​⁫⁬⁪⁪⁯⁯‮​⁭‎⁯⁭‪⁪‏‏​‏⁬‫‫‏⁪‍⁫⁬‮(str1, "\n", aPrefix, "]");
label_22:
      int num8 = 997801712;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1231638146)) % 3U)
        {
          case 0:
            goto label_22;
          case 2:
            num8 = (int) num9 * -1384026402 ^ -1153881449;
            continue;
          default:
            goto label_25;
        }
      }
label_25:
      return str2;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONArray.\u206F⁬‭‎‍⁭⁮‭‌​⁭​‍‭⁪‬‮‌​⁯‏⁫‮‬‮⁮‪​⁬⁮‮⁪⁫⁮‫⁪‏‭⁫⁫‮(aWriter, (byte) 1);
      JSONArray.\u202C‮⁮⁯‌‭‎⁮‬⁯⁬⁭‫​‭‌‬‮⁯⁫‌‎⁮⁯‍‭‍‌‏⁯⁫‮⁪⁭‎⁭‍‮‏‍‮(aWriter, this.m_List.Count);
label_1:
      int num1 = 1508501919;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1692774666)) % 9U)
        {
          case 0:
            goto label_3;
          case 1:
            int num3 = flag ? 913035654 : (num3 = 397552874);
            num1 = num3 ^ (int) num2 * 1400137405;
            continue;
          case 2:
            this.m_List[index].Serialize(aWriter);
            num1 = 855545358;
            continue;
          case 3:
            num1 = (int) num2 * 145588 ^ -299962950;
            continue;
          case 4:
            num1 = (int) num2 * -227497556 ^ -1186439370;
            continue;
          case 5:
            flag = index < this.m_List.Count;
            num1 = 1708407501;
            continue;
          case 6:
            ++index;
            num1 = (int) num2 * 810106322 ^ 468649118;
            continue;
          case 7:
            index = 0;
            num1 = (int) num2 * -2079565050 ^ -1319857414;
            continue;
          case 8:
            goto label_1;
          default:
            goto label_11;
        }
      }
label_3:
      return;
label_11:;
    }

    static int \u200F⁪⁮‭⁭‭⁭‮⁭‫‬​‮‫⁮⁮⁪⁬⁬⁯‌​⁪‍‭‏​‌⁭⁯‬‏‏‮⁯‌⁯⁮‏‪‮([In] string obj0) => obj0.Length;

    static string \u200F‪⁪‬‭‍⁭‏‬‪‎​‭‪‎⁯‭⁯​⁪‬‍⁫​⁪‎‮⁫⁪‭⁭‫⁬‍⁮⁬⁬‮⁭‬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202A‪‮‫‪‬⁮‭‮‬‮‌‮‌‫⁬‪‬⁮‬⁬​‍⁮‫⁪⁭⁪​‏‍⁬‏⁯‌‫‮⁯‭⁯‮([In] object obj0) => obj0.ToString();

    static string \u206C⁯‭‭⁫⁭‪⁪⁬‬‌‌‏​⁫⁬⁪⁪⁯⁯‮​⁭‎⁯⁭‪⁪‏‏​‏⁬‫‫‏⁪‍⁫⁬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206F⁬‭‎‍⁭⁮‭‌​⁭​‍‭⁪‬‮‌​⁯‏⁫‮‬‮⁮‪​⁬⁮‮⁪⁫⁮‫⁪‏‭⁫⁫‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202C‮⁮⁯‌‭‎⁮‬⁯⁬⁭‫​‭‌‬‮⁯⁫‌‎⁮⁯‍‭‍‌‏⁯⁫‮⁪⁭‎⁭‍‮‏‍‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
