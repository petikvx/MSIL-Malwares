// Decompiled with JetBrains decompiler
// Type: SpatialController.OleDbDataProvider
// Assembly: Rea, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 014AEBFB-7EE8-4B39-A7D6-AE7A18313427
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-fb4fb24a50b7f600c65d2bbc049f44337673fa7b0e6e16b6967c06d0cfb666ad.exe

using System.Data;
using System.Data.OleDb;

namespace SpatialController
{
  public class OleDbDataProvider : IDataProvider
  {
    private OleDbConnection _connection;
    private int _commandTimeOut;
    private const string DB_SCHEMA_DATA_TYPE = "DATA_TYPE";

    private int CommandTimeOut
    {
      get => this._commandTimeOut;
      set => this._commandTimeOut = value;
    }

    public void OpenConnection(string connectionString)
    {
      this._connection = new OleDbConnection(connectionString);
      this._connection.Open();
    }

    public void ExecuteNonQuery(string commandText)
    {
      using (OleDbCommand oleDbCommand = new OleDbCommand())
      {
        oleDbCommand.CommandTimeout = this._commandTimeOut;
        oleDbCommand.CommandText = commandText;
        oleDbCommand.ExecuteNonQuery();
      }
    }

    public DataTable GetSchema(string tableName)
    {
      DataTable oleDbSchemaTable = this._connection.GetOleDbSchemaTable(OleDbSchemaGuid.Columns, new object[4]
      {
        null,
        null,
        (object) tableName,
        null
      });
      if (oleDbSchemaTable.Rows.Count == 0)
        throw new ScriptGenException("Table not found <" + tableName + ">");
      return oleDbSchemaTable.Columns["DATA_TYPE"] != null ? oleDbSchemaTable : throw new ScriptGenException("Column <DATA_TYPE> not found on table <" + oleDbSchemaTable.TableName + ">");
    }

    public DataTable GetDataTable(string query)
    {
      DataSet dataSet = new DataSet();
      using (OleDbDataAdapter oleDbDataAdapter = new OleDbDataAdapter(query, this._connection))
        oleDbDataAdapter.Fill(dataSet);
      return dataSet.Tables[0];
    }

    ~OleDbDataProvider()
    {
      if (this._connection.State != ConnectionState.Open)
        ;
    }
  }
}
