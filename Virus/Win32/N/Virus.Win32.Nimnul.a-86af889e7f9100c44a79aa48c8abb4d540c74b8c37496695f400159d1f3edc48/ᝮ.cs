// Decompiled with JetBrains decompiler
// Type: ᝮ
// Assembly: Dark Loader, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DFEE064A-49C9-4F8A-9570-A84DA8B26A81
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00009-msil\Virus.Win32.Nimnul.a-86af889e7f9100c44a79aa48c8abb4d540c74b8c37496695f400159d1f3edc48.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

[StandardModule]
[HideModuleName]
[GeneratedCode("MyTemplate", "8.0.0.0")]
internal sealed class ᝮ
{
  private static readonly ᝮ.ThreadSafeObjectProvider<ᝬ> ឤ = new ᝮ.ThreadSafeObjectProvider<ᝬ>();
  private static readonly ᝮ.ThreadSafeObjectProvider<ᝨ> ឥ = new ᝮ.ThreadSafeObjectProvider<ᝨ>();
  private static readonly ᝮ.ThreadSafeObjectProvider<User> ឦ = new ᝮ.ThreadSafeObjectProvider<User>();
  private static ᝮ.ThreadSafeObjectProvider<ᝮ.ᝰ> ឧ = new ᝮ.ThreadSafeObjectProvider<ᝮ.ᝰ>();
  private static readonly ᝮ.ThreadSafeObjectProvider<ᝮ.ប> ឨ = new ᝮ.ThreadSafeObjectProvider<ᝮ.ប>();

  [HelpKeyword("My.Computer")]
  internal static ᝬ Computer
  {
    [DebuggerHidden] get => ᝮ.ឤ.GetInstance;
  }

  [HelpKeyword("My.Application")]
  internal static ᝨ Application
  {
    [DebuggerHidden] get => ᝮ.ឥ.GetInstance;
  }

  [HelpKeyword("My.User")]
  internal static User User
  {
    [DebuggerHidden] get => ᝮ.ឦ.GetInstance;
  }

  [HelpKeyword("My.Forms")]
  internal static ᝮ.ᝰ Forms
  {
    [DebuggerHidden] get => ᝮ.ឧ.GetInstance;
  }

  [HelpKeyword("My.WebServices")]
  internal static ᝮ.ប WebServices
  {
    [DebuggerHidden] get => ᝮ.ឨ.GetInstance;
  }

  [EditorBrowsable(EditorBrowsableState.Never)]
  [MyGroupCollection("System.Windows.Forms.Form", "Create__Instance__", "Dispose__Instance__", "My.MyProject.Forms")]
  internal sealed class ᝰ
  {
    public ᙂ ឞ;
    public ᝆ ស;
    [ThreadStatic]
    private static Hashtable ឣ;

    public ᙂ គ
    {
      get
      {
        this.ឞ = ᝮ.ᝰ.Create__Instance__<ᙂ>(this.ឞ);
        return this.ឞ;
      }
      set
      {
        if (value == this.ឞ)
          return;
        if (value != null)
          throw new ArgumentException(ᙵ.ᙂ);
        this.Dispose__Instance__<ᙂ>(ref this.ឞ);
      }
    }

    public ᝆ ឈ
    {
      get
      {
        this.ស = ᝮ.ᝰ.Create__Instance__<ᝆ>(this.ស);
        return this.ស;
      }
      set
      {
        if (value == this.ស)
          return;
        if (value != null)
          throw new ArgumentException(ᙵ.ᙄ);
        this.Dispose__Instance__<ᝆ>(ref this.ស);
      }
    }

    [DebuggerHidden]
    private static T Create__Instance__<T>(T Instance) where T : Form, new()
    {
      if ((object) Instance != null && !Instance.IsDisposed)
        return Instance;
      if (ᝮ.ᝰ.ឣ != null)
      {
        if (ᝮ.ᝰ.ឣ.ContainsKey((object) typeof (T)))
          throw new InvalidOperationException(Utils.GetResourceString(ᙵ.ᙆ));
      }
      else
        ᝮ.ᝰ.ឣ = new Hashtable();
      ᝮ.ᝰ.ឣ.Add((object) typeof (T), (object) null);
      try
      {
        return new T();
      }
      catch (TargetInvocationException ex) when (
      {
        // ISSUE: unable to correctly present filter
        ProjectData.SetProjectError((Exception) ex);
        if (ex.InnerException != null)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        throw new InvalidOperationException(Utils.GetResourceString(ᙵ.ᙈ, ex.InnerException.Message), ex.InnerException);
      }
      finally
      {
        ᝮ.ᝰ.ឣ.Remove((object) typeof (T));
      }
    }

    [DebuggerHidden]
    private void Dispose__Instance__<T>(ref T instance) where T : Form
    {
      instance.Dispose();
      instance = default (T);
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [DebuggerHidden]
    public ᝰ()
    {
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    public virtual bool \u1772(object o) => this.Equals(RuntimeHelpers.GetObjectValue(o));

    [EditorBrowsable(EditorBrowsableState.Never)]
    public virtual int ល() => this.GetHashCode();

    [EditorBrowsable(EditorBrowsableState.Never)]
    internal System.Type យ() => typeof (ᝮ.ᝰ);

    [EditorBrowsable(EditorBrowsableState.Never)]
    public virtual string ឝ() => this.ToString();
  }

  [MyGroupCollection("System.Web.Services.Protocols.SoapHttpClientProtocol", "Create__Instance__", "Dispose__Instance__", "")]
  [EditorBrowsable(EditorBrowsableState.Never)]
  internal sealed class ប
  {
    [DebuggerHidden]
    [EditorBrowsable(EditorBrowsableState.Never)]
    public virtual bool \u1772(object o) => this.Equals(RuntimeHelpers.GetObjectValue(o));

    [EditorBrowsable(EditorBrowsableState.Never)]
    [DebuggerHidden]
    public virtual int ល() => this.GetHashCode();

    [EditorBrowsable(EditorBrowsableState.Never)]
    [DebuggerHidden]
    internal System.Type យ() => typeof (ᝮ.ប);

    [EditorBrowsable(EditorBrowsableState.Never)]
    [DebuggerHidden]
    public virtual string ឝ() => this.ToString();

    [DebuggerHidden]
    private static T Create__Instance__<T>(T instance) where T : new() => (object) instance == null ? new T() : instance;

    [DebuggerHidden]
    private void Dispose__Instance__<T>(ref T instance) => instance = default (T);

    [EditorBrowsable(EditorBrowsableState.Never)]
    [DebuggerHidden]
    public ប()
    {
    }
  }

  [ComVisible(false)]
  [EditorBrowsable(EditorBrowsableState.Never)]
  internal sealed class ThreadSafeObjectProvider<T> where T : new()
  {
    internal T GetInstance
    {
      [DebuggerHidden] get
      {
        if ((object) ᝮ.ThreadSafeObjectProvider<T>.m_ThreadStaticValue == null)
          ᝮ.ThreadSafeObjectProvider<T>.m_ThreadStaticValue = new T();
        return ᝮ.ThreadSafeObjectProvider<T>.m_ThreadStaticValue;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Never)]
    [DebuggerHidden]
    public ThreadSafeObjectProvider()
    {
    }
  }
}
