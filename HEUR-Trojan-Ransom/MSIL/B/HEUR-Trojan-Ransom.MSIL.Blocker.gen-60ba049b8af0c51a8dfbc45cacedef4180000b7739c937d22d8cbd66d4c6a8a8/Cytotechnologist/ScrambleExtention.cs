// Decompiled with JetBrains decompiler
// Type: Cytotechnologist.ScrambleExtention
// Assembly: AppConte, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 7B8B5733-911E-457B-A55E-DDA2927F5FA5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-60ba049b8af0c51a8dfbc45cacedef4180000b7739c937d22d8cbd66d4c6a8a8.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Cytotechnologist
{
  public static class ScrambleExtention
  {
    private static readonly Random Random = ScrambleExtention.\u206D​‌⁪​⁭‭​‫‪‪⁪‭‎‬⁭‫‮‪⁫‎‎‍‭‌​‫⁮​‎‭⁫⁮⁯⁮‏⁫‌⁯⁮‮();

    public static void Shuffle<T>(IList<T> list)
    {
label_1:
      int num1 = 1715280762;
      int count;
      int index;
      T obj;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 727297355)) % 10U)
        {
          case 0:
            goto label_3;
          case 1:
            list[count] = obj;
            num1 = (int) num2 * 922000119 ^ -1044228501;
            continue;
          case 2:
            --count;
            num1 = 1801532030;
            continue;
          case 3:
            count = list.Count;
            num1 = (int) num2 * -372981023 ^ 1260062376;
            continue;
          case 4:
            flag = count > 1;
            num1 = 615193759;
            continue;
          case 5:
            num1 = (int) num2 * 417935156 ^ -1378616619;
            continue;
          case 6:
            int num3 = flag ? 2020875209 : (num3 = 1846180399);
            num1 = num3 ^ (int) num2 * -1241793232;
            continue;
          case 7:
            index = ScrambleExtention.\u202B⁪‌⁭‫‪‮‏​‪‪‎‬⁯​‏‍‬‏⁪⁯​‫⁫‭⁫‎‎‭‎‍‫‍‬‭⁫‭⁮‬‏‮(ScrambleExtention.Random, count + 1);
            num1 = (int) num2 * 1032124449 ^ -761741090;
            continue;
          case 8:
            obj = list[index];
            list[index] = list[count];
            num1 = (int) num2 * 714420101 ^ -1780390630;
            continue;
          case 9:
            goto label_1;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    static int \u202B⁪‌⁭‫‪‮‏​‪‪‎‬⁯​‏‍‬‏⁪⁯​‫⁫‭⁫‎‎‭‎‍‫‍‬‭⁫‭⁮‬‏‮([In] Random obj0, [In] int obj1) => obj0.Next(obj1);

    static Random \u206D​‌⁪​⁭‭​‫‪‪⁪‭‎‬⁭‫‮‪⁫‎‎‍‭‌​‫⁮​‎‭⁫⁮⁯⁮‏⁫‌⁯⁮‮() => new Random();
  }
}
