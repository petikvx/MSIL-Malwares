// Decompiled with JetBrains decompiler
// Type: ___codefort.	

// Assembly: l, Version=9.7.4712.31341, Culture=neutral, PublicKeyToken=null
// MVID: 54E09185-39E1-4364-8A8C-3E5AA9242180
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00032-msil\Trojan-Ransom.Win32.Blocker.hdty-d2d2438908f517893fad04ef28c00af245015bf6f5b7b5ed70f3464ce0b2f158.exe.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Xml;

namespace ___codefort
{
  [DataContract(IsReference = true, Name = "b", Namespace = "")]
  public class \u0009\u000A
  {
    private static DataContractSerializer \u0002\u0017\u0013;

    public \u0009\u000A() => this.\u0002\u0017\u0001 = new List<\u0009\u0001>();

    [DataMember(EmitDefaultValue = false, Name = "T")]
    public List<\u0009\u0001> \u0002\u0017\u0001 { get; [param: In] set; }

    public void \u0002\u0017\u0017([In] Stream obj0)
    {
      DataContractSerializer contractSerializer = \u0009\u000A.\u0002\u0017\u0002();
      XmlDictionaryWriter dictionaryWriter = \u0016\u0015.\u0004\u0008\u0014(obj0, \u0016\u0015.\u0015\u000A);
      try
      {
        \u0016\u0014.\u0004\u0008\u0016((object) contractSerializer, dictionaryWriter, (object) this, \u0016\u0014.\u0002\u0001\u0001\u0001\u0001\u0015\u0012);
      }
      finally
      {
        if (dictionaryWriter != null)
          \u0016\u0017.\u0004\u0007\u000A((object) dictionaryWriter, \u0016\u0017.\u0002\u0001\u0001\u0001\u0001\u0015\u0013);
      }
    }

    public static \u0009\u000A \u0002\u0017\u0016([In] Stream obj0)
    {
      DataContractSerializer contractSerializer = \u0009\u000A.\u0002\u0017\u0002();
      XmlDictionaryReader dictionaryReader = \u0016\u0002.\u0004\u0007\u0015(obj0, \u0016\u0016.\u0004\u0007\u0013(\u0016\u0016.\u0016\u0004), \u0016\u0002.\u0016\u0005);
      try
      {
        return (\u0009\u000A) \u0016\u0001.\u0004\u0007\u0017((object) contractSerializer, dictionaryReader, \u0016\u0001.\u0002\u0001\u0001\u0001\u0001\u0016\u0006);
      }
      finally
      {
        if (dictionaryReader != null)
          \u0016\u0017.\u0004\u0007\u000A((object) dictionaryReader, \u0016\u0017.\u0002\u0001\u0001\u0001\u0001\u0015\u0013);
      }
    }

    private static DataContractSerializer \u0002\u0017\u0002()
    {
      if (\u0009\u000A.\u0002\u0017\u0013 == null)
      {
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        // ISSUE: type reference
        \u0009\u000A.\u0002\u0017\u0013 = \u0016\u0004.\u0004\u0007\u0002(\u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u000A), \u0017\u0015.\u0014\u0008), (IEnumerable<Type>) new Type[15]
        {
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0009), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u000A\u0007), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0013), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0012), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0005), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0004), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0017), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0008), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0007), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0002), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0016), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0006), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0001), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0003), \u0017\u0015.\u0014\u0008),
          \u0017\u0015.\u0004\u0002\u0012(__typeref (\u0009\u0015), \u0017\u0015.\u0014\u0008)
        }, \u0016\u0004.\u0003\u0001\u0001\u0001\u0001\u0016\u0007);
      }
      return \u0009\u000A.\u0002\u0017\u0013;
    }
  }
}
