// Decompiled with JetBrains decompiler
// Type: winforms3.Game15
// Assembly: cDisplayClas, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 89FB05B9-6915-4070-92A1-63732D16ABE9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-0b32f79b8abe4a232193f819dccfa47a922353e961d37d1becd35171c2b04a89.exe

using System.Drawing;
using System.Windows.Forms;

namespace winforms3
{
  internal class Game15
  {
    public int[,] arr15;
    private int boxsize;
    private int counter;
    private int arrsize;
    private int empty;
    private bool isWin;
    private Keys Keys;

    public Game15()
    {
      this.counter = 1;
      this.isWin = true;
      this.empty = 0;
      this.boxsize = 4;
      this.arrsize = this.boxsize * this.boxsize;
      this.arr15 = new int[this.boxsize, this.boxsize];
      for (int index1 = 0; index1 < this.boxsize; ++index1)
      {
        for (int index2 = 0; index2 < this.boxsize; ++index2)
        {
          this.arr15[index1, index2] = this.counter;
          ++this.counter;
        }
      }
      this.arr15[3, 3] = this.empty;
      this.isWin = true;
    }

    public void Move(ref Point point, Keys key)
    {
      int x = point.X;
      int y = point.Y;
      if (this.arr15[x, y] == this.empty)
      {
        switch (key)
        {
          case Keys.Left:
            this.arr15[x, y] = this.arr15[x, y - 1];
            this.arr15[x, y - 1] = this.empty;
            --y;
            break;
          case Keys.Up:
            this.arr15[x, y] = this.arr15[x - 1, y];
            this.arr15[x - 1, y] = this.empty;
            --x;
            break;
          case Keys.Right:
            this.arr15[x, y] = this.arr15[x, y + 1];
            this.arr15[x, y + 1] = this.empty;
            ++y;
            break;
          case Keys.Down:
            this.arr15[x, y] = this.arr15[x + 1, y];
            this.arr15[x + 1, y] = this.empty;
            ++x;
            break;
        }
      }
      point = new Point(x, y);
    }

    public void Rand()
    {
    }
  }
}
