// Decompiled with JetBrains decompiler
// Type: fLaSh.Dissembler.ResourceTable
// Assembly: Pass, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B2D05123-D1EE-4E11-B4EC-79932D637F25
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.ajjm-b001e2657b2764cdbd2d9790e4eb90ffd0dc35ed5746bdc109cf01610ec1d1c3.exe

using In2aXkPRwyNprNdGJT;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace fLaSh.Dissembler
{
  public class ResourceTable
  {
    protected Kernel32.RESOURCE_HEADER _header;
    protected string _key;

    public string Key
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this._key;
    }

    public Kernel32.RESOURCE_HEADER Header
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => this._header;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public ResourceTable()
    {
      rbdjPoeaA1BgLlupgC.XYjXOJ9ztPdU4();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public ResourceTable(IntPtr lpRes)
    {
      rbdjPoeaA1BgLlupgC.XYjXOJ9ztPdU4();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.Read(lpRes);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public virtual IntPtr Read(IntPtr lpRes)
    {
      this._header = (Kernel32.RESOURCE_HEADER) Marshal.PtrToStructure(lpRes, typeof (Kernel32.RESOURCE_HEADER));
      IntPtr ptr = new IntPtr(lpRes.ToInt32() + Marshal.SizeOf((object) this._header));
      this._key = Marshal.PtrToStringUni(ptr);
      return ResourceUtil.Align(ptr.ToInt32() + (this._key.Length + 1) * 2);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public virtual void Write(BinaryWriter w)
    {
      w.Write(this._header.wLength);
      w.Write(this._header.wValueLength);
      w.Write(this._header.wType);
      w.Write(Encoding.Unicode.GetBytes(this._key));
      w.Write((ushort) 0);
      ResourceUtil.PadToDWORD(w);
    }
  }
}
