// Decompiled with JetBrains decompiler
// Type: org.lb.lbvm.runtime.MakeClosureStatement
// Assembly: ISectionEnt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 94D57F93-A342-4E0D-9A4D-9518717BA689
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\Trojan-PSW.Win32.Stealer.aezv-723abb6b0dee5d6f012a695ca483478595a08ba3b0dc73ca2032c8d4699605cb.exe

using System.Collections.Generic;

namespace org.lb.lbvm.runtime
{
  internal sealed class MakeClosureStatement : Statement
  {
    private readonly int NumberOfPushedArguments;

    internal MakeClosureStatement(int numberOfPushedArguments)
      : base(5, "MAKECLOSURE " + numberOfPushedArguments.ToString())
    {
      this.NumberOfPushedArguments = numberOfPushedArguments;
    }

    internal override void Execute(
      ref int ip,
      ValueStack valueStack,
      EnvironmentStack envStack,
      CallStack callStack)
    {
      List<Variable> closedOverValues = new List<Variable>();
      for (int index = 0; index < this.NumberOfPushedArguments; ++index)
      {
        Symbol symbol = (Symbol) valueStack.Pop();
        closedOverValues.Add(envStack.Get(symbol));
      }
      closedOverValues.Reverse();
      valueStack.Push((object) new Closure((IP) valueStack.Pop(), closedOverValues));
      ip += this.Length;
    }
  }
}
