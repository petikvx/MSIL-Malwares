// Decompiled with JetBrains decompiler
// Type: TechService.My.MySettings
// Assembly: TechService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 9535D897-4CD1-4005-94C0-70F300366804
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan.MSIL.Zapchast.hd-863d9bad55e146b831d0d6c0458447f7f6c93dd7e52a99763a3913d697b3b8c6.exe

using \u0003;
using \u0004;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

namespace TechService.My
{
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
  [CompilerGenerated]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings \u0001 = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool \u0002;
    private static object \u0003 = RuntimeHelpers.GetObjectValue(new object());

    [DebuggerNonUserCode]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    private static void \u0001(object sender, EventArgs e)
    {
      if (!\u0002.\u0001().SaveMySettingsOnExit)
        return;
      // ISSUE: reference to a compiler-generated method
      \u0002.\u0001().Save();
    }

    public static MySettings Default
    {
      get
      {
        if (!MySettings.\u0002)
        {
          object Expression = MySettings.\u0003;
          ObjectFlowControl.CheckForSyncLockOnValueType(Expression);
          Monitor.Enter(Expression);
          try
          {
            if (!MySettings.\u0002)
            {
              \u0002.\u0001().Shutdown += (ShutdownEventHandler) ((sender, e) =>
              {
                if (!\u0002.\u0001().SaveMySettingsOnExit)
                  return;
                \u0002.\u0001().Save();
              });
              MySettings.\u0002 = true;
            }
          }
          finally
          {
            Monitor.Exit(Expression);
          }
        }
        MySettings mySettings = MySettings.\u0001;
        return mySettings;
      }
    }
  }
}
