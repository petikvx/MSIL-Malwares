// Decompiled with JetBrains decompiler
// Type: ATM_Final.AccountsDataSetTableAdapters.TableTableAdapter
// Assembly: ObjRefSurrog, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3AC6506B-4A94-4066-A76F-E3EA4A03BC27
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.06\HEUR-Trojan.MSIL.VBKrypt.gen-1a8d9888103b10597efba13da4fd7938444cf181a493a6063925d18df3fefdcf.exe

using ATM_Final.Properties;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using System.Diagnostics;

namespace ATM_Final.AccountsDataSetTableAdapters
{
  [DataObject(true)]
  [ToolboxItem(true)]
  [DesignerCategory("code")]
  [HelpKeyword("vs.data.TableAdapter")]
  [Designer("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
  public class TableTableAdapter : Component
  {
    private SqlDataAdapter _adapter;
    private SqlConnection _connection;
    private SqlTransaction _transaction;
    private SqlCommand[] _commandCollection;
    private bool _clearBeforeFill;

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public TableTableAdapter()
    {
label_1:
      int num1 = 117314674;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 191928134)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.ClearBeforeFill = true;
            num1 = (int) num2 * -1823017209 ^ -2142212218;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    protected internal SqlDataAdapter Adapter
    {
      get
      {
        bool flag = this._adapter == null;
label_1:
        int num1 = 406204988;
        SqlDataAdapter adapter;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2039695578)) % 6U)
          {
            case 1:
              adapter = this._adapter;
              num1 = 1910021680;
              continue;
            case 2:
              int num3 = flag ? 1720345975 : (num3 = 1088366397);
              num1 = num3 ^ (int) num2 * 2059075162;
              continue;
            case 3:
              this.InitAdapter();
              num1 = (int) num2 * 395287786 ^ -1295958764;
              continue;
            case 4:
              num1 = (int) num2 * 30229194 ^ -1195900983;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return adapter;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    internal SqlConnection Connection
    {
      get
      {
label_1:
        int num1 = 1639723186;
        SqlConnection connection;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 814142057)) % 8U)
          {
            case 0:
              int num3 = flag ? -1453129809 : (num3 = -2013037469);
              num1 = num3 ^ (int) num2 * -1322939032;
              continue;
            case 1:
              num1 = (int) num2 * -2100570018 ^ -576930398;
              continue;
            case 2:
              connection = this._connection;
              num1 = 586715424;
              continue;
            case 3:
              flag = this._connection == null;
              num1 = (int) num2 * -433691396 ^ 187371181;
              continue;
            case 4:
              goto label_1;
            case 6:
              num1 = (int) num2 * 1602832011 ^ 588836484;
              continue;
            case 7:
              this.InitConnection();
              num1 = (int) num2 * 2113559448 ^ -271004149;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return connection;
      }
      set
      {
        this._connection = value;
label_1:
        int num1 = -567783322;
        bool flag1;
        bool flag2;
        bool flag3;
        bool flag4;
        int index;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -819790880)) % 29U)
          {
            case 0:
              this.Adapter.UpdateCommand.Connection = value;
              num1 = (int) num2 * 1737273598 ^ 358215838;
              continue;
            case 1:
              this.Adapter.DeleteCommand.Connection = value;
              num1 = (int) num2 * 327762617 ^ 105510839;
              continue;
            case 2:
              num1 = (int) num2 * 227183484 ^ 1882226565;
              continue;
            case 3:
              int num3;
              num1 = num3 = index < this.CommandCollection.Length ? -29538195 : (num3 = -1711938629);
              continue;
            case 4:
              goto label_1;
            case 5:
              flag1 = this.CommandCollection[index] != null;
              num1 = (int) num2 * 699408069 ^ 332054574;
              continue;
            case 6:
              int num4 = !flag4 ? -1842733740 : (num4 = -2465666);
              num1 = num4 ^ (int) num2 * 1903066722;
              continue;
            case 7:
              index = 0;
              num1 = -1384096430;
              continue;
            case 8:
              int num5 = flag1 ? 1992400701 : (num5 = 1258613629);
              num1 = num5 ^ (int) num2 * 1203802777;
              continue;
            case 9:
              num1 = (int) num2 * -1396551204 ^ 27685327;
              continue;
            case 10:
              ++index;
              num1 = (int) num2 * -1926482969 ^ 459586894;
              continue;
            case 11:
              num1 = (int) num2 * -943518709 ^ 1558615556;
              continue;
            case 12:
              flag3 = this.Adapter.DeleteCommand != null;
              num1 = -572021505;
              continue;
            case 13:
              num1 = (int) num2 * 1078333375 ^ 1014396613;
              continue;
            case 14:
              flag4 = this.Adapter.InsertCommand != null;
              num1 = (int) num2 * 764059018 ^ 1246169252;
              continue;
            case 15:
              num1 = -1352647550;
              continue;
            case 16:
              num1 = -930218041;
              continue;
            case 17:
              num1 = (int) num2 * 1962878158 ^ -556997261;
              continue;
            case 18:
              num1 = (int) num2 * -304231503 ^ 2095371975;
              continue;
            case 19:
              goto label_3;
            case 20:
              this.Adapter.InsertCommand.Connection = value;
              num1 = (int) num2 * -2046002791 ^ -1281095924;
              continue;
            case 21:
              int num6 = !flag2 ? -1886019687 : (num6 = -1692164137);
              num1 = num6 ^ (int) num2 * -956950506;
              continue;
            case 22:
              num1 = (int) num2 * -1542916982 ^ -1794131317;
              continue;
            case 23:
              num1 = (int) num2 * -984334733 ^ 1990971237;
              continue;
            case 24:
              flag2 = this.Adapter.UpdateCommand != null;
              num1 = -774995289;
              continue;
            case 25:
              num1 = (int) num2 * -471596112 ^ 1751909203;
              continue;
            case 26:
              this.CommandCollection[index].Connection = value;
              num1 = (int) num2 * -1898922140 ^ -1075886825;
              continue;
            case 27:
              int num7 = !flag3 ? 1724886183 : (num7 = 2367569);
              num1 = num7 ^ (int) num2 * -1735050436;
              continue;
            case 28:
              num1 = (int) num2 * -275079816 ^ -1473335663;
              continue;
            default:
              goto label_31;
          }
        }
label_3:
        return;
label_31:;
      }
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    internal SqlTransaction Transaction
    {
      get => this._transaction;
      set
      {
label_1:
        int num1 = -1469346841;
        while (true)
        {
          uint num2;
          bool flag1;
          int index;
          bool flag2;
          int num3;
          int num4;
          int num5;
          switch ((num2 = (uint) (num1 ^ -828185883)) % 24U)
          {
            case 0:
              num1 = (int) num2 * -1548062039 ^ -455654228;
              continue;
            case 1:
              this.CommandCollection[index].Transaction = this._transaction;
              num1 = (int) num2 * 812716553 ^ 1891911865;
              continue;
            case 2:
              this._transaction = value;
              index = 0;
              num1 = (int) num2 * -1228694949 ^ -1371865100;
              continue;
            case 3:
              goto label_1;
            case 4:
              num1 = (int) num2 * 616858992 ^ 929337575;
              continue;
            case 5:
              int num6 = !flag1 ? -1343686628 : (num6 = -331025921);
              num1 = num6 ^ (int) num2 * 1071308891;
              continue;
            case 6:
              num3 = this.Adapter.UpdateCommand != null ? 1 : 0;
              goto label_31;
            case 7:
              num1 = (int) num2 * -317045441 ^ 846470680;
              continue;
            case 8:
              goto label_3;
            case 9:
              num1 = (int) num2 * -831450772 ^ 1992361537;
              continue;
            case 10:
              this.Adapter.InsertCommand.Transaction = this._transaction;
              num1 = (int) num2 * -1850366326 ^ -1264076655;
              continue;
            case 11:
              int num7 = flag2 ? 1948244899 : (num7 = 1805940884);
              num1 = num7 ^ (int) num2 * 1483094147;
              continue;
            case 12:
              this.Adapter.UpdateCommand.Transaction = this._transaction;
              num1 = (int) num2 * 1336037169 ^ 1101838801;
              continue;
            case 13:
              num1 = -1917293732;
              continue;
            case 14:
              num4 = this.Adapter.InsertCommand != null ? 1 : 0;
              goto label_34;
            case 15:
              num1 = (int) num2 * -1086272540 ^ 1792047496;
              continue;
            case 16:
              if (this.Adapter != null)
              {
                num1 = -1054455653;
                continue;
              }
              num4 = 0;
              goto label_34;
            case 17:
              if (this.Adapter != null)
              {
                num1 = -1898616949;
                continue;
              }
              num3 = 0;
              goto label_31;
            case 18:
              this.Adapter.DeleteCommand.Transaction = this._transaction;
              num1 = (int) num2 * -323549761 ^ 1895545076;
              continue;
            case 19:
              num5 = this.Adapter.DeleteCommand != null ? 1 : 0;
              break;
            case 20:
              flag1 = index < this.CommandCollection.Length;
              num1 = -863737856;
              continue;
            case 21:
              ++index;
              num1 = (int) num2 * -1479440844 ^ 482297749;
              continue;
            case 22:
              if (this.Adapter == null)
              {
                num5 = 0;
                break;
              }
              num1 = (int) num2 * 890192988 ^ 1652282558;
              continue;
            case 23:
              num1 = (int) num2 * -1804265932 ^ -1255820643;
              continue;
            default:
              goto label_35;
          }
          int num8;
          num1 = num8 = num5 == 0 ? -1361481875 : (num8 = -414608977);
          continue;
label_31:
          flag2 = num3 != 0;
          num1 = -522629378;
          continue;
label_34:
          int num9;
          num1 = num9 = num4 == 0 ? -199999156 : (num9 = -135611215);
        }
label_3:
        return;
label_35:;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    protected SqlCommand[] CommandCollection
    {
      get
      {
        bool flag = this._commandCollection == null;
label_1:
        int num1 = 2085485663;
        SqlCommand[] commandCollection;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 250864904)) % 5U)
          {
            case 0:
              commandCollection = this._commandCollection;
              num1 = 481900647;
              continue;
            case 1:
              int num3 = flag ? -48732458 : (num3 = -1959250273);
              num1 = num3 ^ (int) num2 * 1572584118;
              continue;
            case 2:
              this.InitCommandCollection();
              num1 = (int) num2 * 2098655220 ^ 389744789;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return commandCollection;
      }
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public bool ClearBeforeFill
    {
      get
      {
label_1:
        int num1 = -2034879731;
        bool clearBeforeFill;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2045200022)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 748201830 ^ 972871150;
              continue;
            case 3:
              clearBeforeFill = this._clearBeforeFill;
              num1 = (int) num2 * -150344311 ^ -235586160;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return clearBeforeFill;
      }
      set => this._clearBeforeFill = value;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    private void InitAdapter()
    {
      this._adapter = new SqlDataAdapter();
label_1:
      int num1 = 570901701;
      DataTableMapping dataTableMapping;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1801846200)) % 41U)
        {
          case 0:
            this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Id", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Id", DataRowVersion.Original, false, (object) null, "", "", ""));
            num1 = (int) num2 * -1289423302 ^ 270071155;
            continue;
          case 1:
            dataTableMapping.ColumnMappings.Add("Id", "Id");
            num1 = (int) num2 * 1729991831 ^ 422785054;
            continue;
          case 2:
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@PIN", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 4, (byte) 0, "PIN", DataRowVersion.Current, false, (object) null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Balance", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 10, (byte) 0, "Balance", DataRowVersion.Current, false, (object) null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Id", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Id", DataRowVersion.Original, false, (object) null, "", "", ""));
            num1 = (int) num2 * 989420284 ^ 905526761;
            continue;
          case 3:
            this._adapter.UpdateCommand.CommandType = CommandType.Text;
            num1 = (int) num2 * -309408732 ^ -1994724878;
            continue;
          case 4:
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@AccNo", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 4, (byte) 0, "AccNo", DataRowVersion.Current, false, (object) null, "", "", ""));
            num1 = (int) num2 * -2131959922 ^ -1863815165;
            continue;
          case 5:
            num1 = (int) num2 * 1464571311 ^ -1396558714;
            continue;
          case 6:
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_AccNo", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "AccNo", DataRowVersion.Original, true, (object) null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_AccNo", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 4, (byte) 0, "AccNo", DataRowVersion.Original, false, (object) null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_PIN", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "PIN", DataRowVersion.Original, true, (object) null, "", "", ""));
            num1 = (int) num2 * -1619988116 ^ -636643108;
            continue;
          case 7:
            num1 = (int) num2 * -1670009474 ^ -86414693;
            continue;
          case 8:
            this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Name", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Name", DataRowVersion.Original, true, (object) null, "", "", ""));
            num1 = (int) num2 * 1666931771 ^ -205378518;
            continue;
          case 9:
            goto label_1;
          case 10:
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Name", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Name", DataRowVersion.Original, false, (object) null, "", "", ""));
            num1 = (int) num2 * 612937840 ^ 639358875;
            continue;
          case 11:
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_PIN", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 4, (byte) 0, "PIN", DataRowVersion.Original, false, (object) null, "", "", ""));
            num1 = (int) num2 * 463728962 ^ 371894097;
            continue;
          case 12:
            this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_PIN", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 4, (byte) 0, "PIN", DataRowVersion.Original, false, (object) null, "", "", ""));
            num1 = (int) num2 * 210870548 ^ 1183974254;
            continue;
          case 13:
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Name", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Name", DataRowVersion.Current, false, (object) null, "", "", ""));
            num1 = (int) num2 * 557304259 ^ -1700728660;
            continue;
          case 14:
            this._adapter.TableMappings.Add((object) dataTableMapping);
            num1 = (int) num2 * -896369369 ^ -510740189;
            continue;
          case 15:
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Id", SqlDbType.Int, 4, ParameterDirection.Input, (byte) 0, (byte) 0, "Id", DataRowVersion.Current, false, (object) null, "", "", ""));
            num1 = (int) num2 * -848889448 ^ -1816900585;
            continue;
          case 16:
            this._adapter.UpdateCommand = new SqlCommand();
            num1 = (int) num2 * -677042223 ^ -1811553507;
            continue;
          case 17:
            num1 = (int) num2 * -1648335460 ^ 400329113;
            continue;
          case 18:
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Balance", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Balance", DataRowVersion.Original, true, (object) null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@Original_Balance", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 10, (byte) 0, "Balance", DataRowVersion.Original, false, (object) null, "", "", ""));
            num1 = (int) num2 * 424672147 ^ -2001542135;
            continue;
          case 19:
            dataTableMapping.ColumnMappings.Add("Name", "Name");
            dataTableMapping.ColumnMappings.Add("AccNo", "AccNo");
            num1 = (int) num2 * 853146887 ^ 1678520200;
            continue;
          case 20:
            this._adapter.UpdateCommand.Connection = this.Connection;
            num1 = (int) num2 * 2118935983 ^ 1534978171;
            continue;
          case 21:
            dataTableMapping.ColumnMappings.Add("Balance", "Balance");
            num1 = (int) num2 * 426419865 ^ -1353261635;
            continue;
          case 22:
            num1 = (int) num2 * 1766694827 ^ -2056596034;
            continue;
          case 23:
            this._adapter.InsertCommand.Connection = this.Connection;
            num1 = (int) num2 * 1319778320 ^ 296108534;
            continue;
          case 24:
            this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_PIN", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "PIN", DataRowVersion.Original, true, (object) null, "", "", ""));
            num1 = (int) num2 * 330104196 ^ -1284811914;
            continue;
          case 25:
            this._adapter.DeleteCommand.CommandType = CommandType.Text;
            num1 = (int) num2 * 2120876300 ^ -1351012394;
            continue;
          case 26:
            dataTableMapping.ColumnMappings.Add("PIN", "PIN");
            num1 = (int) num2 * 1531228083 ^ -243335219;
            continue;
          case 27:
            this._adapter.UpdateCommand.Parameters.Add(new SqlParameter("@IsNull_Name", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Name", DataRowVersion.Original, true, (object) null, "", "", ""));
            num1 = (int) num2 * 612228658 ^ -1343731000;
            continue;
          case 28:
            dataTableMapping = new DataTableMapping();
            dataTableMapping.SourceTable = "Table";
            num1 = (int) num2 * -498827365 ^ 237202676;
            continue;
          case 29:
            this._adapter.DeleteCommand = new SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Table] WHERE (([Id] = @Original_Id) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_AccNo = 1 AND [AccNo] IS NULL) OR ([AccNo] = @Original_AccNo)) AND ((@IsNull_PIN = 1 AND [PIN] IS NULL) OR ([PIN] = @Original_PIN)) AND ((@IsNull_Balance = 1 AND [Balance] IS NULL) OR ([Balance] = @Original_Balance)))";
            num1 = (int) num2 * -293376379 ^ 1371694424;
            continue;
          case 30:
            this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Name", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Name", DataRowVersion.Current, false, (object) null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@AccNo", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 4, (byte) 0, "AccNo", DataRowVersion.Current, false, (object) null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@PIN", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 4, (byte) 0, "PIN", DataRowVersion.Current, false, (object) null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new SqlParameter("@Balance", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 10, (byte) 0, "Balance", DataRowVersion.Current, false, (object) null, "", "", ""));
            num1 = (int) num2 * -1817807091 ^ -1732000122;
            continue;
          case 31:
            this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_Balance", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Balance", DataRowVersion.Original, true, (object) null, "", "", ""));
            num1 = (int) num2 * -257042309 ^ 897076014;
            continue;
          case 32:
            this._adapter.InsertCommand.CommandType = CommandType.Text;
            num1 = (int) num2 * 552032702 ^ 1443275669;
            continue;
          case 33:
            this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Name", SqlDbType.NVarChar, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "Name", DataRowVersion.Original, false, (object) null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@IsNull_AccNo", SqlDbType.Int, 0, ParameterDirection.Input, (byte) 0, (byte) 0, "AccNo", DataRowVersion.Original, true, (object) null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_AccNo", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 4, (byte) 0, "AccNo", DataRowVersion.Original, false, (object) null, "", "", ""));
            num1 = (int) num2 * 295903146 ^ -961099130;
            continue;
          case 34:
            dataTableMapping.DataSetTable = "Table";
            num1 = (int) num2 * 918334530 ^ -1049980222;
            continue;
          case 35:
            num1 = (int) num2 * 857374642 ^ 1621240999;
            continue;
          case 36:
            this._adapter.DeleteCommand.Parameters.Add(new SqlParameter("@Original_Balance", SqlDbType.Decimal, 0, ParameterDirection.Input, (byte) 10, (byte) 0, "Balance", DataRowVersion.Original, false, (object) null, "", "", ""));
            this._adapter.InsertCommand = new SqlCommand();
            num1 = (int) num2 * -1842302969 ^ 1078385152;
            continue;
          case 37:
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Table] SET [Name] = @Name, [AccNo] = @AccNo, [PIN] = @PIN, [Balance] = @Balance WHERE (([Id] = @Original_Id) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ((@IsNull_AccNo = 1 AND [AccNo] IS NULL) OR ([AccNo] = @Original_AccNo)) AND ((@IsNull_PIN = 1 AND [PIN] IS NULL) OR ([PIN] = @Original_PIN)) AND ((@IsNull_Balance = 1 AND [Balance] IS NULL) OR ([Balance] = @Original_Balance)));\nSELECT Id, Name, AccNo, PIN, Balance FROM [Table] WHERE (Id = @Id)";
            num1 = (int) num2 * -1541664492 ^ 483253080;
            continue;
          case 38:
            num1 = (int) num2 * 860474187 ^ 1108611500;
            continue;
          case 39:
            goto label_3;
          case 40:
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Table] ([Name], [AccNo], [PIN], [Balance]) VALUES (@Name, @AccNo, @PIN, @Balance);\nSELECT Id, Name, AccNo, PIN, Balance FROM [Table] WHERE (Id = SCOPE_IDENTITY())";
            num1 = (int) num2 * -449122674 ^ -928932643;
            continue;
          default:
            goto label_43;
        }
      }
label_3:
      return;
label_43:;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    private void InitConnection()
    {
label_1:
      int num1 = -1249544375;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -755043272)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            this._connection = new SqlConnection();
            num1 = (int) num2 * -1402521948 ^ -11958225;
            continue;
          case 2:
            goto label_3;
          case 3:
            this._connection.ConnectionString = Settings.Default.AccountsConnectionString;
            num1 = (int) num2 * -2053236021 ^ 698747075;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    private void InitCommandCollection()
    {
label_1:
      int num1 = 503878250;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 543507889)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this._commandCollection[0].CommandType = CommandType.Text;
            num1 = (int) num2 * -575172083 ^ 1009224226;
            continue;
          case 3:
            this._commandCollection = new SqlCommand[1];
            this._commandCollection[0] = new SqlCommand();
            num1 = (int) num2 * -470715920 ^ 1523055149;
            continue;
          case 4:
            this._commandCollection[0].Connection = this.Connection;
            num1 = (int) num2 * 1096114790 ^ 703386566;
            continue;
          case 5:
            num1 = (int) num2 * -1805108927 ^ -1150431322;
            continue;
          case 6:
            this._commandCollection[0].CommandText = "SELECT Id, Name, AccNo, PIN, Balance FROM dbo.[Table]";
            num1 = (int) num2 * 2143022817 ^ -444072686;
            continue;
          case 7:
            num1 = (int) num2 * -2066541804 ^ 606737347;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      return;
label_10:;
    }

    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Fill, true)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public virtual int Fill(AccountsDataSet.TableDataTable dataTable)
    {
label_1:
      int num1 = -2024494748;
      int num2;
      int num3;
      bool clearBeforeFill;
      while (true)
      {
        uint num4;
        switch ((num4 = (uint) (num1 ^ -315832355)) % 10U)
        {
          case 0:
            num2 = this.Adapter.Fill((DataTable) dataTable);
            num1 = -1302281720;
            continue;
          case 1:
            this.Adapter.SelectCommand = this.CommandCollection[0];
            clearBeforeFill = this.ClearBeforeFill;
            num1 = (int) num4 * 51719217 ^ -350031613;
            continue;
          case 2:
            num1 = (int) num4 * -817817342 ^ -1398237814;
            continue;
          case 3:
            num1 = (int) num4 * -277774999 ^ 1016240222;
            continue;
          case 5:
            dataTable.Clear();
            num1 = (int) num4 * 266496302 ^ 715258255;
            continue;
          case 6:
            num1 = (int) num4 * 1930750859 ^ -676901664;
            continue;
          case 7:
            int num5 = clearBeforeFill ? 826285411 : (num5 = 1946248961);
            num1 = num5 ^ (int) num4 * -1590785296;
            continue;
          case 8:
            goto label_1;
          case 9:
            num3 = num2;
            num1 = (int) num4 * 1052772229 ^ 319201606;
            continue;
          default:
            goto label_11;
        }
      }
label_11:
      return num3;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Select, true)]
    public virtual AccountsDataSet.TableDataTable GetData()
    {
label_1:
      int num1 = -1290725961;
      AccountsDataSet.TableDataTable tableDataTable;
      AccountsDataSet.TableDataTable data;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1219966068)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1454207582 ^ 1778050331;
            continue;
          case 2:
            this.Adapter.SelectCommand = this.CommandCollection[0];
            num1 = (int) num2 * 1628614657 ^ 1989881638;
            continue;
          case 3:
            num1 = (int) num2 * -1930932774 ^ -2129442590;
            continue;
          case 4:
            data = tableDataTable;
            num1 = (int) num2 * 1031088187 ^ -904320450;
            continue;
          case 6:
            tableDataTable = new AccountsDataSet.TableDataTable();
            this.Adapter.Fill((DataTable) tableDataTable);
            num1 = (int) num2 * -1625196702 ^ -1695375967;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return data;
    }

    [HelpKeyword("vs.data.TableAdapter")]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public virtual int Update(AccountsDataSet.TableDataTable dataTable)
    {
label_1:
      int num1 = -1959286859;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -371398736)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num2 = this.Adapter.Update((DataTable) dataTable);
            num1 = (int) num3 * 1731526965 ^ 1382718322;
            continue;
          case 3:
            num1 = (int) num3 * 806463617 ^ 338044617;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return num2;
    }

    [DebuggerNonUserCode]
    [HelpKeyword("vs.data.TableAdapter")]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public virtual int Update(AccountsDataSet dataSet)
    {
label_1:
      int num1 = 1464699939;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1809665678)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num2 = this.Adapter.Update((DataSet) dataSet, "Table");
            num1 = (int) num3 * -522386402 ^ -331237001;
            continue;
          case 3:
            num1 = (int) num3 * -1545392175 ^ 1024846279;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return num2;
    }

    [HelpKeyword("vs.data.TableAdapter")]
    [DebuggerNonUserCode]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    public virtual int Update(DataRow dataRow)
    {
label_1:
      int num1 = -2114746943;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -512931541)) % 4U)
        {
          case 1:
            num1 = (int) num3 * 1463654096 ^ -495340397;
            continue;
          case 2:
            num2 = this.Adapter.Update(new DataRow[1]
            {
              dataRow
            });
            num1 = (int) num3 * 2134472602 ^ 1838689334;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return num2;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    [HelpKeyword("vs.data.TableAdapter")]
    public virtual int Update(DataRow[] dataRows)
    {
label_1:
      int num1 = -1536279313;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1416411754)) % 4U)
        {
          case 0:
            num1 = (int) num3 * -301617149 ^ -780120344;
            continue;
          case 1:
            num2 = this.Adapter.Update(dataRows);
            num1 = (int) num3 * 2129437570 ^ -585841404;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return num2;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Delete, true)]
    public virtual int Delete(
      int Original_Id,
      string Original_Name,
      Decimal? Original_AccNo,
      Decimal? Original_PIN,
      Decimal? Original_Balance)
    {
label_1:
      int num1 = -628138505;
      bool hasValue1;
      bool hasValue2;
      bool flag1;
      bool hasValue3;
      ConnectionState state;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -713770378)) % 54U)
        {
          case 0:
            num1 = (int) num2 * 257116707 ^ 1056175525;
            continue;
          case 1:
            this.Adapter.DeleteCommand.Parameters[1].Value = (object) 1;
            num1 = (int) num2 * 2017159050 ^ 2118896910;
            continue;
          case 2:
            this.Adapter.DeleteCommand.Parameters[4].Value = (object) DBNull.Value;
            num1 = (int) num2 * -1707885127 ^ -1986410843;
            continue;
          case 3:
            this.Adapter.DeleteCommand.Parameters[5].Value = (object) 0;
            num1 = (int) num2 * -1751301005 ^ -1455505466;
            continue;
          case 4:
            num1 = -473488470;
            continue;
          case 5:
            this.Adapter.DeleteCommand.Parameters[1].Value = (object) 0;
            num1 = (int) num2 * -1698706524 ^ 2006025372;
            continue;
          case 6:
            this.Adapter.DeleteCommand.Parameters[7].Value = (object) 1;
            num1 = (int) num2 * -1196139568 ^ 88267476;
            continue;
          case 7:
            this.Adapter.DeleteCommand.Connection.Open();
            num1 = (int) num2 * -990609408 ^ 1509748783;
            continue;
          case 8:
            this.Adapter.DeleteCommand.Parameters[4].Value = (object) Original_AccNo.Value;
            num1 = (int) num2 * 470247817 ^ -1146654980;
            continue;
          case 9:
            this.Adapter.DeleteCommand.Parameters[6].Value = (object) Original_PIN.Value;
            num1 = (int) num2 * 226907600 ^ -1451821436;
            continue;
          case 10:
            num1 = (int) num2 * -1090747404 ^ 1047595437;
            continue;
          case 11:
            this.Adapter.DeleteCommand.Parameters[8].Value = (object) DBNull.Value;
            num1 = (int) num2 * 435091913 ^ 1955090328;
            continue;
          case 12:
            this.Adapter.DeleteCommand.Parameters[7].Value = (object) 0;
            num1 = (int) num2 * -910857559 ^ -1287694312;
            continue;
          case 13:
            hasValue2 = Original_AccNo.HasValue;
            num1 = -198388978;
            continue;
          case 14:
            num1 = (int) num2 * -1658863626 ^ -1964710049;
            continue;
          case 15:
            num1 = (int) num2 * -549917672 ^ -1328825513;
            continue;
          case 16:
            hasValue1 = Original_PIN.HasValue;
            num1 = -1860094216;
            continue;
          case 17:
            this.Adapter.DeleteCommand.Parameters[0].Value = (object) Original_Id;
            num1 = (int) num2 * -2138364079 ^ 1489372082;
            continue;
          case 18:
            num1 = (int) num2 * -196112820 ^ -1944369525;
            continue;
          case 19:
            this.Adapter.DeleteCommand.Parameters[5].Value = (object) 1;
            num1 = (int) num2 * 1829586541 ^ 2064799628;
            continue;
          case 20:
            num1 = (int) num2 * 1566232302 ^ -1003699477;
            continue;
          case 21:
            num1 = (int) num2 * 1478533167 ^ 1699864052;
            continue;
          case 22:
            num1 = (int) num2 * 636853090 ^ -392281949;
            continue;
          case 23:
            num1 = (int) num2 * -877791961 ^ -288930440;
            continue;
          case 24:
            int num3 = hasValue1 ? -1736808160 : (num3 = -285832726);
            num1 = num3 ^ (int) num2 * -577511963;
            continue;
          case 25:
            this.Adapter.DeleteCommand.Parameters[3].Value = (object) 0;
            num1 = (int) num2 * 555578179 ^ -123787509;
            continue;
          case 26:
            flag1 = Original_Name == null;
            num1 = (int) num2 * 1355855626 ^ -1815213504;
            continue;
          case 27:
            num1 = (int) num2 * 1224866523 ^ 2055679896;
            continue;
          case 28:
            int num4 = !hasValue2 ? -389291892 : (num4 = -975420119);
            num1 = num4 ^ (int) num2 * 883169778;
            continue;
          case 29:
            hasValue3 = Original_Balance.HasValue;
            num1 = -616681063;
            continue;
          case 30:
            this.Adapter.DeleteCommand.Parameters[2].Value = (object) DBNull.Value;
            num1 = (int) num2 * 663015762 ^ -561980986;
            continue;
          case 31:
            int num5 = hasValue3 ? -73030666 : (num5 = -1401254010);
            num1 = num5 ^ (int) num2 * 254339334;
            continue;
          case 32:
            num1 = (int) num2 * -536050187 ^ -149920887;
            continue;
          case 34:
            num1 = (int) num2 * 1265236135 ^ -33401308;
            continue;
          case 35:
            num1 = (int) num2 * -904785753 ^ 359252365;
            continue;
          case 36:
            this.Adapter.DeleteCommand.Parameters[3].Value = (object) 1;
            num1 = -2052059690;
            continue;
          case 37:
            this.Adapter.DeleteCommand.Parameters[8].Value = (object) Original_Balance.Value;
            num1 = (int) num2 * -649148713 ^ 1690050128;
            continue;
          case 38:
            int num6 = flag1 ? 1929758517 : (num6 = 1669618265);
            num1 = num6 ^ (int) num2 * -268696337;
            continue;
          case 39:
            state = this.Adapter.DeleteCommand.Connection.State;
            flag2 = (this.Adapter.DeleteCommand.Connection.State & ConnectionState.Open) != ConnectionState.Open;
            num1 = -327690936;
            continue;
          case 40:
            num1 = (int) num2 * -489481827 ^ -456142106;
            continue;
          case 41:
            num1 = -1978727063;
            continue;
          case 42:
            num1 = -1094620431;
            continue;
          case 43:
            num1 = (int) num2 * 2069689040 ^ -1379203870;
            continue;
          case 44:
            int num7 = !flag2 ? -577850009 : (num7 = -1780033607);
            num1 = num7 ^ (int) num2 * 1465689043;
            continue;
          case 45:
            num1 = (int) num2 * -1842729312 ^ -1170781811;
            continue;
          case 46:
            goto label_1;
          case 47:
            this.Adapter.DeleteCommand.Parameters[2].Value = (object) Original_Name;
            num1 = (int) num2 * -1720486375 ^ -570717771;
            continue;
          case 48:
            num1 = (int) num2 * 1374369260 ^ 1152831503;
            continue;
          case 49:
            num1 = (int) num2 * -1396008870 ^ -1032036814;
            continue;
          case 50:
            num1 = (int) num2 * 1853250569 ^ 1249103127;
            continue;
          case 51:
            num1 = (int) num2 * -793615631 ^ 1331447105;
            continue;
          case 52:
            this.Adapter.DeleteCommand.Parameters[6].Value = (object) DBNull.Value;
            num1 = (int) num2 * -1819744749 ^ -1975244014;
            continue;
          case 53:
            num1 = (int) num2 * 1194227729 ^ 331976990;
            continue;
          default:
            goto label_55;
        }
      }
label_55:
      try
      {
        return this.Adapter.DeleteCommand.ExecuteNonQuery();
      }
      finally
      {
label_58:
        int num8 = -1731479046;
        bool flag3;
        while (true)
        {
          uint num9;
          switch ((num9 = (uint) (num8 ^ -713770378)) % 7U)
          {
            case 0:
              this.Adapter.DeleteCommand.Connection.Close();
              num8 = (int) num9 * 1133450764 ^ 1289087119;
              continue;
            case 1:
              int num10 = !flag3 ? -1793591927 : (num10 = -1606442686);
              num8 = num10 ^ (int) num9 * -206095978;
              continue;
            case 2:
              flag3 = state == ConnectionState.Closed;
              num8 = (int) num9 * 571501871 ^ -997350631;
              continue;
            case 3:
              num8 = (int) num9 * -595907320 ^ 1625597377;
              continue;
            case 4:
              goto label_58;
            case 5:
              num8 = -1444344136;
              continue;
            default:
              goto label_65;
          }
        }
label_65:;
      }
    }

    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Insert, true)]
    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DebuggerNonUserCode]
    public virtual int Insert(string Name, Decimal? AccNo, Decimal? PIN, Decimal? Balance)
    {
label_1:
      int num1 = -839441881;
      bool hasValue;
      bool flag1;
      ConnectionState state;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -307514594)) % 40U)
        {
          case 0:
            num1 = (int) num2 * -1848041939 ^ 370663925;
            continue;
          case 1:
            flag1 = Name == null;
            num1 = (int) num2 * -460707889 ^ -1797720427;
            continue;
          case 2:
            int num3;
            num1 = num3 = !Balance.HasValue ? -1301087489 : (num3 = -650850910);
            continue;
          case 3:
            this.Adapter.InsertCommand.Parameters[0].Value = (object) DBNull.Value;
            num1 = (int) num2 * 87653037 ^ 956146692;
            continue;
          case 4:
            this.Adapter.InsertCommand.Connection.Open();
            num1 = (int) num2 * -524153348 ^ -360649724;
            continue;
          case 5:
            num1 = (int) num2 * 1113412419 ^ 107523924;
            continue;
          case 6:
            goto label_1;
          case 7:
            state = this.Adapter.InsertCommand.Connection.State;
            num1 = -1447227319;
            continue;
          case 8:
            num1 = (int) num2 * -25038182 ^ 236200082;
            continue;
          case 9:
            num1 = (int) num2 * -1093252569 ^ 852420025;
            continue;
          case 10:
            num1 = (int) num2 * 690916236 ^ 531763066;
            continue;
          case 11:
            this.Adapter.InsertCommand.Parameters[0].Value = (object) Name;
            num1 = (int) num2 * -184440510 ^ 1522585421;
            continue;
          case 12:
            int num4 = flag1 ? 1440174258 : (num4 = 776942053);
            num1 = num4 ^ (int) num2 * 514958691;
            continue;
          case 13:
            num1 = -1635621691;
            continue;
          case 14:
            this.Adapter.InsertCommand.Parameters[1].Value = (object) AccNo.Value;
            num1 = (int) num2 * 1378901042 ^ -1967046575;
            continue;
          case 15:
            int num5 = (this.Adapter.InsertCommand.Connection.State & ConnectionState.Open) == ConnectionState.Open ? -276178682 : (num5 = -1115451830);
            num1 = num5 ^ (int) num2 * -1038861924;
            continue;
          case 16:
            hasValue = PIN.HasValue;
            num1 = -56582840;
            continue;
          case 17:
            num1 = (int) num2 * -904565621 ^ -383605689;
            continue;
          case 18:
            this.Adapter.InsertCommand.Parameters[3].Value = (object) DBNull.Value;
            num1 = (int) num2 * -748161741 ^ -244717366;
            continue;
          case 19:
            num1 = (int) num2 * 1704987784 ^ -389066066;
            continue;
          case 20:
            num1 = (int) num2 * -1840889506 ^ 1055066449;
            continue;
          case 21:
            num1 = (int) num2 * 68748448 ^ 2122655649;
            continue;
          case 22:
            num1 = (int) num2 * 1571423363 ^ 1057222555;
            continue;
          case 23:
            num1 = -2140777291;
            continue;
          case 24:
            num1 = (int) num2 * -1479923176 ^ 717861129;
            continue;
          case 25:
            num1 = -63456236;
            continue;
          case 26:
            num1 = (int) num2 * 618377361 ^ 1438049876;
            continue;
          case 27:
            this.Adapter.InsertCommand.Parameters[1].Value = (object) DBNull.Value;
            num1 = (int) num2 * -868590486 ^ 1148276569;
            continue;
          case 28:
            num1 = -358695059;
            continue;
          case 29:
            num1 = (int) num2 * 127122276 ^ -1006655025;
            continue;
          case 30:
            int num6 = hasValue ? -983878231 : (num6 = -625988583);
            num1 = num6 ^ (int) num2 * -919452409;
            continue;
          case 31:
            this.Adapter.InsertCommand.Parameters[2].Value = (object) PIN.Value;
            num1 = (int) num2 * 270715752 ^ 2063881736;
            continue;
          case 32:
            num1 = (int) num2 * -1699864249 ^ 85058432;
            continue;
          case 33:
            num1 = (int) num2 * -1412515075 ^ 88802474;
            continue;
          case 34:
            num1 = (int) num2 * -425438149 ^ 1195422082;
            continue;
          case 35:
            this.Adapter.InsertCommand.Parameters[2].Value = (object) DBNull.Value;
            num1 = (int) num2 * -201996938 ^ 1992424118;
            continue;
          case 37:
            int num7;
            num1 = num7 = !AccNo.HasValue ? -155085694 : (num7 = -83846352);
            continue;
          case 38:
            num1 = (int) num2 * 2017801679 ^ 1199357253;
            continue;
          case 39:
            this.Adapter.InsertCommand.Parameters[3].Value = (object) Balance.Value;
            num1 = (int) num2 * 981565224 ^ -731718098;
            continue;
          default:
            goto label_41;
        }
      }
label_41:
      int num8;
      try
      {
label_43:
        int num9 = -1599994618;
        while (true)
        {
          uint num10;
          switch ((num10 = (uint) (num9 ^ -307514594)) % 3U)
          {
            case 1:
              num8 = this.Adapter.InsertCommand.ExecuteNonQuery();
              num9 = (int) num10 * -1029131197 ^ 1323189498;
              continue;
            case 2:
              goto label_43;
            default:
              goto label_54;
          }
        }
      }
      finally
      {
        bool flag2 = state == ConnectionState.Closed;
label_47:
        int num11 = -1595419292;
        while (true)
        {
          uint num12;
          switch ((num12 = (uint) (num11 ^ -307514594)) % 6U)
          {
            case 0:
              num11 = (int) num12 * -961348115 ^ -357785922;
              continue;
            case 1:
              this.Adapter.InsertCommand.Connection.Close();
              num11 = (int) num12 * -1395543985 ^ 418004729;
              continue;
            case 2:
              int num13 = !flag2 ? 1860975212 : (num13 = 1915361237);
              num11 = num13 ^ (int) num12 * 608013727;
              continue;
            case 3:
              goto label_47;
            case 4:
              num11 = -1007589863;
              continue;
            default:
              goto label_53;
          }
        }
label_53:;
      }
label_54:
      return num8;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [HelpKeyword("vs.data.TableAdapter")]
    [DataObjectMethod(DataObjectMethodType.Update, true)]
    [DebuggerNonUserCode]
    public virtual int Update(
      string Name,
      Decimal? AccNo,
      Decimal? PIN,
      Decimal? Balance,
      int Original_Id,
      string Original_Name,
      Decimal? Original_AccNo,
      Decimal? Original_PIN,
      Decimal? Original_Balance,
      int Id)
    {
      bool flag1 = Name == null;
label_1:
      int num1 = -1229239521;
      ConnectionState state;
      bool hasValue1;
      bool hasValue2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1639655652)) % 81U)
        {
          case 0:
            this.Adapter.UpdateCommand.Parameters[5].Value = (object) 0;
            num1 = (int) num2 * -529969868 ^ 1842341407;
            continue;
          case 1:
            num1 = (int) num2 * -485518156 ^ -60194068;
            continue;
          case 2:
            state = this.Adapter.UpdateCommand.Connection.State;
            int num3 = (this.Adapter.UpdateCommand.Connection.State & ConnectionState.Open) == ConnectionState.Open ? 1831073084 : (num3 = 389559464);
            num1 = num3 ^ (int) num2 * 348959512;
            continue;
          case 3:
            num1 = (int) num2 * -1773301261 ^ 62486851;
            continue;
          case 4:
            int num4 = flag1 ? -45578175 : (num4 = -35407935);
            num1 = num4 ^ (int) num2 * -1252793181;
            continue;
          case 5:
            int num5;
            num1 = num5 = !AccNo.HasValue ? -244174816 : (num5 = -1859430575);
            continue;
          case 6:
            num1 = (int) num2 * 932285341 ^ 2043503905;
            continue;
          case 7:
            this.Adapter.UpdateCommand.Parameters[13].Value = (object) Id;
            num1 = -450498709;
            continue;
          case 8:
            num1 = (int) num2 * -1770370779 ^ 796425459;
            continue;
          case 9:
            this.Adapter.UpdateCommand.Parameters[4].Value = (object) Original_Id;
            num1 = -256203753;
            continue;
          case 10:
            int num6 = Original_Name != null ? -618554288 : (num6 = -2133790065);
            num1 = num6 ^ (int) num2 * -1507534813;
            continue;
          case 11:
            int num7;
            num1 = num7 = !Original_PIN.HasValue ? -1823706242 : (num7 = -214179223);
            continue;
          case 12:
            this.Adapter.UpdateCommand.Parameters[10].Value = (object) DBNull.Value;
            num1 = (int) num2 * 85285581 ^ 1201164653;
            continue;
          case 13:
            this.Adapter.UpdateCommand.Parameters[11].Value = (object) 0;
            num1 = (int) num2 * 1002591237 ^ -1249425520;
            continue;
          case 14:
            num1 = (int) num2 * -1678917246 ^ 1646736214;
            continue;
          case 15:
            num1 = -185802961;
            continue;
          case 16:
            num1 = (int) num2 * -52932521 ^ -153104505;
            continue;
          case 17:
            this.Adapter.UpdateCommand.Parameters[9].Value = (object) 0;
            num1 = (int) num2 * 2013560225 ^ -788715359;
            continue;
          case 18:
            num1 = (int) num2 * 1935464413 ^ 906820919;
            continue;
          case 19:
            num1 = (int) num2 * 1681588646 ^ 464908913;
            continue;
          case 20:
            hasValue2 = Balance.HasValue;
            num1 = -1318633806;
            continue;
          case 21:
            num1 = -583240726;
            continue;
          case 22:
            int num8 = !hasValue1 ? -895356917 : (num8 = -1332553308);
            num1 = num8 ^ (int) num2 * 158644419;
            continue;
          case 23:
            int num9;
            num1 = num9 = PIN.HasValue ? -1266024335 : (num9 = -1716402341);
            continue;
          case 24:
            num1 = (int) num2 * -1509830949 ^ 872880;
            continue;
          case 25:
            goto label_1;
          case 26:
            this.Adapter.UpdateCommand.Parameters[8].Value = (object) Original_AccNo.Value;
            num1 = (int) num2 * -541425954 ^ -1385622002;
            continue;
          case 27:
            num1 = (int) num2 * 596195660 ^ 1388716577;
            continue;
          case 28:
            this.Adapter.UpdateCommand.Parameters[10].Value = (object) Original_PIN.Value;
            num1 = (int) num2 * 1142039317 ^ -2089539649;
            continue;
          case 29:
            this.Adapter.UpdateCommand.Parameters[6].Value = (object) Original_Name;
            num1 = (int) num2 * -819738245 ^ -1806145549;
            continue;
          case 30:
            int num10 = hasValue2 ? 2017769041 : (num10 = 1691649206);
            num1 = num10 ^ (int) num2 * 1400125454;
            continue;
          case 31:
            num1 = (int) num2 * 795420210 ^ 1887646608;
            continue;
          case 32:
            this.Adapter.UpdateCommand.Parameters[8].Value = (object) DBNull.Value;
            num1 = (int) num2 * -1966121929 ^ 1652249228;
            continue;
          case 33:
            num1 = (int) num2 * 369908568 ^ 443951245;
            continue;
          case 34:
            num1 = (int) num2 * 676259845 ^ 1305545428;
            continue;
          case 35:
            num1 = (int) num2 * 1832737655 ^ 704682089;
            continue;
          case 36:
            num1 = (int) num2 * 43422522 ^ 8159016;
            continue;
          case 37:
            num1 = (int) num2 * 296787086 ^ -459489499;
            continue;
          case 38:
            this.Adapter.UpdateCommand.Connection.Open();
            num1 = (int) num2 * 1326878682 ^ 47943452;
            continue;
          case 39:
            num1 = -1337737161;
            continue;
          case 40:
            num1 = -220140110;
            continue;
          case 41:
            this.Adapter.UpdateCommand.Parameters[2].Value = (object) DBNull.Value;
            num1 = (int) num2 * 1735169072 ^ 1947293557;
            continue;
          case 42:
            this.Adapter.UpdateCommand.Parameters[1].Value = (object) DBNull.Value;
            num1 = (int) num2 * -1832927223 ^ 1551633412;
            continue;
          case 43:
            num1 = (int) num2 * 1918637375 ^ 1518743963;
            continue;
          case 44:
            num1 = (int) num2 * -1196302083 ^ 725604733;
            continue;
          case 45:
            this.Adapter.UpdateCommand.Parameters[9].Value = (object) 1;
            num1 = (int) num2 * 994903213 ^ -724893338;
            continue;
          case 46:
            num1 = (int) num2 * -1707428270 ^ 641709612;
            continue;
          case 47:
            num1 = (int) num2 * 1136118381 ^ -857306397;
            continue;
          case 48:
            num1 = (int) num2 * 2001208279 ^ -356237223;
            continue;
          case 49:
            num1 = (int) num2 * 578683900 ^ 1564585842;
            continue;
          case 51:
            this.Adapter.UpdateCommand.Parameters[0].Value = (object) Name;
            num1 = (int) num2 * -1364939989 ^ -1714691035;
            continue;
          case 52:
            this.Adapter.UpdateCommand.Parameters[12].Value = (object) Original_Balance.Value;
            num1 = (int) num2 * 983895933 ^ 649309848;
            continue;
          case 53:
            num1 = -2062478396;
            continue;
          case 54:
            this.Adapter.UpdateCommand.Parameters[7].Value = (object) 1;
            num1 = -1454253369;
            continue;
          case 55:
            num1 = (int) num2 * 399508736 ^ 459196226;
            continue;
          case 56:
            this.Adapter.UpdateCommand.Parameters[12].Value = (object) DBNull.Value;
            num1 = (int) num2 * -1962863150 ^ -1181863271;
            continue;
          case 57:
            num1 = (int) num2 * -119463455 ^ -173238351;
            continue;
          case 58:
            num1 = (int) num2 * -1726782270 ^ -1368696041;
            continue;
          case 59:
            this.Adapter.UpdateCommand.Parameters[2].Value = (object) PIN.Value;
            num1 = (int) num2 * 1413674555 ^ -735490741;
            continue;
          case 60:
            this.Adapter.UpdateCommand.Parameters[7].Value = (object) 0;
            num1 = (int) num2 * 1608173810 ^ -845594709;
            continue;
          case 61:
            num1 = (int) num2 * 1908570393 ^ -305888780;
            continue;
          case 62:
            num1 = (int) num2 * -225998461 ^ -2068859447;
            continue;
          case 63:
            this.Adapter.UpdateCommand.Parameters[5].Value = (object) 1;
            num1 = (int) num2 * 1130619024 ^ 1905864485;
            continue;
          case 64:
            num1 = (int) num2 * 1914670313 ^ 93574564;
            continue;
          case 65:
            this.Adapter.UpdateCommand.Parameters[11].Value = (object) 1;
            num1 = (int) num2 * 1658559533 ^ -1028380994;
            continue;
          case 66:
            num1 = (int) num2 * 495425849 ^ -431646268;
            continue;
          case 67:
            num1 = -1376137123;
            continue;
          case 68:
            num1 = (int) num2 * 1856828210 ^ -262970383;
            continue;
          case 69:
            this.Adapter.UpdateCommand.Parameters[0].Value = (object) DBNull.Value;
            num1 = (int) num2 * -1289833252 ^ -1695733123;
            continue;
          case 70:
            hasValue1 = Original_AccNo.HasValue;
            num1 = -1218042757;
            continue;
          case 71:
            num1 = -275816944;
            continue;
          case 72:
            this.Adapter.UpdateCommand.Parameters[6].Value = (object) DBNull.Value;
            num1 = (int) num2 * 472537374 ^ 1847807855;
            continue;
          case 73:
            num1 = (int) num2 * -1236100852 ^ -1745045889;
            continue;
          case 74:
            this.Adapter.UpdateCommand.Parameters[3].Value = (object) Balance.Value;
            num1 = (int) num2 * -1505607093 ^ 57435791;
            continue;
          case 75:
            num1 = (int) num2 * -85269293 ^ -634242445;
            continue;
          case 76:
            this.Adapter.UpdateCommand.Parameters[1].Value = (object) AccNo.Value;
            num1 = (int) num2 * -548082234 ^ -1144001204;
            continue;
          case 77:
            num1 = (int) num2 * 1855587259 ^ -172504399;
            continue;
          case 78:
            this.Adapter.UpdateCommand.Parameters[3].Value = (object) DBNull.Value;
            num1 = (int) num2 * -1659485752 ^ -1352472424;
            continue;
          case 79:
            int num11;
            num1 = num11 = !Original_Balance.HasValue ? -681000944 : (num11 = -1037826128);
            continue;
          case 80:
            num1 = (int) num2 * 1443417283 ^ -261296145;
            continue;
          default:
            goto label_82;
        }
      }
label_82:
      int num12;
      try
      {
        int num13 = this.Adapter.UpdateCommand.ExecuteNonQuery();
label_84:
        int num14 = -1679132329;
        while (true)
        {
          uint num15;
          switch ((num15 = (uint) (num14 ^ -1639655652)) % 3U)
          {
            case 0:
              goto label_84;
            case 2:
              num12 = num13;
              num14 = (int) num15 * -14009782 ^ 229246381;
              continue;
            default:
              goto label_96;
          }
        }
      }
      finally
      {
label_88:
        int num16 = -1705765616;
        bool flag2;
        while (true)
        {
          uint num17;
          switch ((num17 = (uint) (num16 ^ -1639655652)) % 7U)
          {
            case 1:
              num16 = -119420050;
              continue;
            case 2:
              num16 = (int) num17 * -1350047289 ^ -688003008;
              continue;
            case 3:
              goto label_88;
            case 4:
              this.Adapter.UpdateCommand.Connection.Close();
              num16 = (int) num17 * -734352298 ^ -562361581;
              continue;
            case 5:
              flag2 = state == ConnectionState.Closed;
              num16 = (int) num17 * 61819421 ^ -2119047918;
              continue;
            case 6:
              int num18 = !flag2 ? 925477583 : (num18 = 432956073);
              num16 = num18 ^ (int) num17 * 1178986268;
              continue;
            default:
              goto label_95;
          }
        }
label_95:;
      }
label_96:
      return num12;
    }

    [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
    [DataObjectMethod(DataObjectMethodType.Update, true)]
    [DebuggerNonUserCode]
    [HelpKeyword("vs.data.TableAdapter")]
    public virtual int Update(
      string Name,
      Decimal? AccNo,
      Decimal? PIN,
      Decimal? Balance,
      int Original_Id,
      string Original_Name,
      Decimal? Original_AccNo,
      Decimal? Original_PIN,
      Decimal? Original_Balance)
    {
      int num1 = this.Update(Name, AccNo, PIN, Balance, Original_Id, Original_Name, Original_AccNo, Original_PIN, Original_Balance, Original_Id);
label_1:
      int num2 = -1585044109;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num2 ^ -1302629519)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num2 = (int) num3 * -1817919602 ^ -1342408242;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return num1;
    }
  }
}
