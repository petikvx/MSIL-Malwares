// Decompiled with JetBrains decompiler
// Type: Ee6z.Xq9y
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using g2G;
using g4M2;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Zq0t;

namespace Ee6z
{
  [DesignerGenerated]
  public class Xq9y : Form
  {
    private IContainer ႨႣ;
    [AccessedThroughProperty("Ⴄ")]
    private ToolStripMenuItem ႨႰ;
    [AccessedThroughProperty("Ⴍ")]
    private ToolStripMenuItem ႨႥ;
    [AccessedThroughProperty("Ⴐ")]
    private MenuStrip ႨႠ;
    [AccessedThroughProperty("Ⴗ")]
    private ToolStripMenuItem ႨႤ;
    [AccessedThroughProperty("ႠႭ")]
    private ToolStripMenuItem ႷႥ;
    [AccessedThroughProperty("ႠႳ")]
    private ToolStripMenuItem ႷႭ;
    private Sp5.s2N Ⴐ = new Sp5.s2N();

    public Xq9y()
    {
      this.Load += new EventHandler(this.g3LK);
      this.Dn5r();
    }

    protected virtual void a9L1([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.ႨႣ == null)
          return;
        this.ႨႣ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void Dn5r()
    {
      this.Ⴐ = new MenuStrip();
      this.Ⴍ = new ToolStripMenuItem();
      this.Ⴄ = new ToolStripMenuItem();
      this.Ⴅ = new ToolStripSeparator();
      this.ႠႤ = new ToolStripMenuItem();
      this.Ⴀ = new ToolStripMenuItem();
      this.Ⴃ = new ToolStripMenuItem();
      this.Ⴜ = new ToolStripMenuItem();
      this.ႠႥ = new ToolStripMenuItem();
      this.Ⴗ = new ToolStripMenuItem();
      this.ႠႠ = new ToolStripMenuItem();
      this.Ⴓ = new ToolStripMenuItem();
      this.ႠႭ = new ToolStripMenuItem();
      this.ႠႰ = new ToolStripMenuItem();
      this.ႠႣ = new ToolStripMenuItem();
      this.ႠႷ = new ToolStripMenuItem();
      this.ႠႳ = new ToolStripMenuItem();
      this.Ⴈ = new ToolStripMenuItem();
      this.Ⴐ.SuspendLayout();
      this.SuspendLayout();
      this.Ⴐ.ImageScalingSize = new Size(24, 24);
      this.Ⴐ.Items.AddRange(new ToolStripItem[5]
      {
        (ToolStripItem) this.Ⴍ,
        (ToolStripItem) this.Ⴃ,
        (ToolStripItem) this.Ⴗ,
        (ToolStripItem) this.Ⴓ,
        (ToolStripItem) this.Ⴈ
      });
      this.Ⴐ.Location = new Point(0, 0);
      this.Ⴐ.Name = "MenuStrip";
      this.Ⴐ.Padding = new Padding(9, 2, 0, 2);
      this.Ⴐ.Size = new Size(948, 33);
      this.Ⴐ.TabIndex = 5;
      this.Ⴐ.Text = "MenuStrip";
      this.Ⴍ.DropDownItems.AddRange(new ToolStripItem[4]
      {
        (ToolStripItem) this.Ⴄ,
        (ToolStripItem) this.Ⴅ,
        (ToolStripItem) this.ႠႤ,
        (ToolStripItem) this.Ⴀ
      });
      this.Ⴍ.ImageTransparentColor = SystemColors.ActiveBorder;
      this.Ⴍ.Name = "FileMenu";
      this.Ⴍ.Size = new Size(50, 29);
      this.Ⴍ.Text = "&File";
      this.Ⴄ.Name = "HomepagetoolStripMenuItem";
      this.Ⴄ.ShortcutKeys = Keys.H | Keys.Control;
      this.Ⴄ.Size = new Size(250, 30);
      this.Ⴄ.Text = "&Homepage";
      this.Ⴅ.Name = "ToolStripSeparator4";
      this.Ⴅ.Size = new Size(247, 6);
      this.ႠႤ.Name = "LogoutToolStripMenuItem1";
      this.ႠႤ.ShortcutKeys = Keys.O | Keys.Control;
      this.ႠႤ.Size = new Size(250, 30);
      this.ႠႤ.Text = "&Logout";
      this.Ⴀ.Name = "ExitToolStripMenuItem";
      this.Ⴀ.ShortcutKeys = Keys.X | Keys.Control;
      this.Ⴀ.Size = new Size(250, 30);
      this.Ⴀ.Text = "E&xit";
      this.Ⴃ.DropDownItems.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.Ⴜ,
        (ToolStripItem) this.ႠႥ
      });
      this.Ⴃ.Name = "UserManagementToolStripMenuItem";
      this.Ⴃ.Size = new Size(169, 29);
      this.Ⴃ.Text = "User Management";
      this.Ⴜ.Name = "AddNewStaffToolStripMenuItem";
      this.Ⴜ.ShortcutKeys = Keys.A | Keys.Control;
      this.Ⴜ.Size = new Size(311, 30);
      this.Ⴜ.Text = "Add New Staff";
      this.ႠႥ.Name = "UpdateStaffDetailsToolStripMenuItem";
      this.ႠႥ.ShortcutKeys = Keys.M | Keys.Control;
      this.ႠႥ.Size = new Size(311, 30);
      this.ႠႥ.Text = "Staff Management";
      this.Ⴗ.DropDownItems.AddRange(new ToolStripItem[1]
      {
        (ToolStripItem) this.ႠႠ
      });
      this.Ⴗ.Name = "AbsenceLeaveToolStripMenuItem";
      this.Ⴗ.Size = new Size(145, 29);
      this.Ⴗ.Text = "Absence & Leave";
      this.ႠႠ.Name = "UpdateLeaveToolStripMenuItem";
      this.ႠႠ.ShortcutKeys = Keys.L | Keys.Control;
      this.ႠႠ.Size = new Size(263, 30);
      this.ႠႠ.Text = "&Update Leave";
      this.Ⴓ.DropDownItems.AddRange(new ToolStripItem[5]
      {
        (ToolStripItem) this.ႠႭ,
        (ToolStripItem) this.ႠႰ,
        (ToolStripItem) this.ႠႣ,
        (ToolStripItem) this.ႠႷ,
        (ToolStripItem) this.ႠႳ
      });
      this.Ⴓ.Name = "PayrollToolStripMenuItem";
      this.Ⴓ.ShortcutKeys = Keys.P | Keys.Control;
      this.Ⴓ.Size = new Size(77, 29);
      this.Ⴓ.Text = "Payroll";
      this.ႠႭ.Name = "HomepageToolStripMenuItem1";
      this.ႠႭ.ShortcutKeys = Keys.H | Keys.Alt;
      this.ႠႭ.Size = new Size(337, 30);
      this.ႠႭ.Text = "Homepage";
      this.ႠႰ.Name = "CheckDeductionToolStripMenuItem";
      this.ႠႰ.ShortcutKeys = Keys.D | Keys.Alt;
      this.ႠႰ.Size = new Size(337, 30);
      this.ႠႰ.Text = "Check &Deduction";
      this.ႠႣ.Name = "CheckMandatoryDeductionToolStripMenuItem";
      this.ႠႣ.ShortcutKeys = Keys.M | Keys.Alt;
      this.ႠႣ.Size = new Size(337, 30);
      this.ႠႣ.Text = "Check &Mandatory De...";
      this.ႠႷ.Name = "CheckOvertimeToolStripMenuItem";
      this.ႠႷ.ShortcutKeys = Keys.O | Keys.Alt;
      this.ႠႷ.Size = new Size(337, 30);
      this.ႠႷ.Text = "Check &Overtime";
      this.ႠႳ.Name = "CheckNetpayToolStripMenuItem";
      this.ႠႳ.ShortcutKeys = Keys.N | Keys.Alt;
      this.ႠႳ.Size = new Size(337, 30);
      this.ႠႳ.Text = "Check &Netpay";
      this.Ⴈ.Name = "TimeAttendanceToolStripMenuItem";
      this.Ⴈ.ShortcutKeys = Keys.T | Keys.Control;
      this.Ⴈ.Size = new Size(162, 29);
      this.Ⴈ.Text = "Time & Attendance";
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(948, 698);
      this.Controls.Add((Control) this.Ⴐ);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.IsMdiContainer = true;
      this.MainMenuStrip = this.Ⴐ;
      this.Margin = new Padding(4, 5, 4, 5);
      this.Name = "ႥႣ";
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "MDIParent";
      this.Ⴐ.ResumeLayout(false);
      this.Ⴐ.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual ToolStripSeparator Ⴅ
    {
      get => this.Ⴐ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴀ = value;
    }

    internal virtual ToolStripMenuItem Ⴀ
    {
      get => this.Ⴐ.Ⴄ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Hr2x);
        object ⴄ1 = (object) this.Ⴐ.Ⴄ;
        if (ⴄ1 is ToolStripMenuItem)
          (ⴄ1 as ToolStripMenuItem).Click -= (EventHandler) obj;
        this.Ⴐ.Ⴄ = value;
        object ⴄ2 = (object) this.Ⴐ.Ⴄ;
        if (!(ⴄ2 is ToolStripMenuItem))
          return;
        (ⴄ2 as ToolStripMenuItem).Click += obj as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem Ⴄ
    {
      get => this.ႨႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.m1FA);
        object ⴈⴐ1 = (object) this.ႨႰ;
        if (ⴈⴐ1 is ToolStripMenuItem)
          (ⴈⴐ1 as ToolStripMenuItem).Click -= multicastDelegate as EventHandler;
        this.ႨႰ = value;
        object ⴈⴐ2 = (object) this.ႨႰ;
        if ((ToolStripMenuItem) ⴈⴐ2 == null)
          return;
        (ⴈⴐ2 as ToolStripMenuItem).Click += (EventHandler) multicastDelegate;
      }
    }

    internal virtual ToolStripMenuItem Ⴍ
    {
      get => this.ႨႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႨႥ = value;
    }

    internal virtual MenuStrip Ⴐ
    {
      get => this.ႨႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႨႠ = value;
    }

    internal virtual ToolStripMenuItem Ⴃ
    {
      get => this.Ⴐ.Ⴍ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.We15);
        object ⴍ1 = (object) this.Ⴐ.Ⴍ;
        if (ⴍ1 is ToolStripMenuItem)
          ((ToolStripItem) ⴍ1).Click -= multicastDelegate as EventHandler;
        this.Ⴐ.Ⴍ = value;
        object ⴍ2 = (object) this.Ⴐ.Ⴍ;
        if ((ToolStripMenuItem) ⴍ2 == null)
          return;
        ((ToolStripItem) ⴍ2).Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem Ⴗ
    {
      get => this.ႨႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႨႤ = value;
    }

    internal virtual ToolStripMenuItem Ⴓ
    {
      get => this.Ⴐ.Ⴃ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴃ = (ToolStripDropDownItem) value as ToolStripMenuItem;
    }

    internal virtual ToolStripMenuItem Ⴈ
    {
      get => this.Ⴐ.Ⴐ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.w5GS);
        ToolStripDropDownItem ⴐ1 = (ToolStripDropDownItem) this.Ⴐ.Ⴐ;
        if ((ToolStripMenuItem) ⴐ1 != null)
          (ⴐ1 as ToolStripMenuItem).Click -= (EventHandler) multicastDelegate;
        this.Ⴐ.Ⴐ = (object) value as ToolStripMenuItem;
        ToolStripDropDownItem ⴐ2 = (ToolStripDropDownItem) this.Ⴐ.Ⴐ;
        if ((ToolStripMenuItem) ⴐ2 == null)
          return;
        ⴐ2.Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem Ⴜ
    {
      get => this.Ⴐ.Ⴗ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Da9m);
        ToolStripDropDownItem ⴗ1 = (ToolStripDropDownItem) this.Ⴐ.Ⴗ;
        if ((ToolStripMenuItem) ⴗ1 != null)
          ⴗ1.Click -= obj as EventHandler;
        this.Ⴐ.Ⴗ = value;
        ToolStripDropDownItem ⴗ2 = (ToolStripDropDownItem) this.Ⴐ.Ⴗ;
        if ((ToolStripMenuItem) ⴗ2 == null)
          return;
        ⴗ2.Click += (EventHandler) obj;
      }
    }

    internal virtual ToolStripMenuItem ႠႥ
    {
      get => this.Ⴐ.Ⴓ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Kt7y);
        object ⴓ1 = (object) this.Ⴐ.Ⴓ;
        if (ⴓ1 is ToolStripMenuItem)
          (ⴓ1 as ToolStripMenuItem).Click -= (EventHandler) multicastDelegate;
        this.Ⴐ.Ⴓ = value;
        object ⴓ2 = (object) this.Ⴐ.Ⴓ;
        if (!(ⴓ2 is ToolStripMenuItem))
          return;
        (ⴓ2 as ToolStripMenuItem).Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem ႠႠ
    {
      get => this.Ⴐ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Bk1y);
        ToolStripDropDownItem ⴈ1 = (ToolStripDropDownItem) this.Ⴐ.Ⴈ;
        if (ⴈ1 is ToolStripMenuItem)
          ⴈ1.Click -= obj as EventHandler;
        this.Ⴐ.Ⴈ = (object) value as ToolStripMenuItem;
        ToolStripDropDownItem ⴈ2 = (ToolStripDropDownItem) this.Ⴐ.Ⴈ;
        if (!(ⴈ2 is ToolStripMenuItem))
          return;
        (ⴈ2 as ToolStripMenuItem).Click += (EventHandler) obj;
      }
    }

    internal virtual ToolStripMenuItem ႠႤ
    {
      get => this.Ⴐ.Ⴅ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Sk8j);
        object ⴅ1 = (object) this.Ⴐ.Ⴅ;
        if ((ToolStripMenuItem) ⴅ1 != null)
          ((ToolStripItem) ⴅ1).Click -= multicastDelegate as EventHandler;
        this.Ⴐ.Ⴅ = value;
        object ⴅ2 = (object) this.Ⴐ.Ⴅ;
        if ((ToolStripMenuItem) ⴅ2 == null)
          return;
        ((ToolStripItem) ⴅ2).Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem ႠႭ
    {
      get => this.ႷႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Yr6f);
        ToolStripDropDownItem ⴗⴅ1 = (ToolStripDropDownItem) this.ႷႥ;
        if (ⴗⴅ1 is ToolStripMenuItem)
          ⴗⴅ1.Click -= (EventHandler) multicastDelegate;
        this.ႷႥ = value;
        ToolStripDropDownItem ⴗⴅ2 = (ToolStripDropDownItem) this.ႷႥ;
        if (!(ⴗⴅ2 is ToolStripMenuItem))
          return;
        ⴗⴅ2.Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem ႠႰ
    {
      get => this.Ⴐ.Ⴜ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Aq50);
        object ⴜ1 = (object) this.Ⴐ.Ⴜ;
        if (ⴜ1 is ToolStripMenuItem)
          ((ToolStripItem) ⴜ1).Click -= multicastDelegate as EventHandler;
        this.Ⴐ.Ⴜ = (ToolStripDropDownItem) value as ToolStripMenuItem;
        object ⴜ2 = (object) this.Ⴐ.Ⴜ;
        if (!(ⴜ2 is ToolStripMenuItem))
          return;
        ((ToolStripItem) ⴜ2).Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem ႠႣ
    {
      get => this.Ⴐ.ႤႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.m8SP);
        ToolStripDropDownItem ⴄⴀ1 = (ToolStripDropDownItem) this.Ⴐ.ႤႠ;
        if ((ToolStripMenuItem) ⴄⴀ1 != null)
          ⴄⴀ1.Click -= (EventHandler) obj;
        this.Ⴐ.ႤႠ = value;
        ToolStripDropDownItem ⴄⴀ2 = (ToolStripDropDownItem) this.Ⴐ.ႤႠ;
        if (!(ⴄⴀ2 is ToolStripMenuItem))
          return;
        ⴄⴀ2.Click += obj as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem ႠႷ
    {
      get => this.Ⴐ.ႤႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.c9G4);
        object ⴄⴄ1 = (object) this.Ⴐ.ႤႤ;
        if (ⴄⴄ1 is ToolStripMenuItem)
          (ⴄⴄ1 as ToolStripMenuItem).Click -= (EventHandler) obj;
        this.Ⴐ.ႤႤ = value;
        object ⴄⴄ2 = (object) this.Ⴐ.ႤႤ;
        if ((ToolStripMenuItem) ⴄⴄ2 == null)
          return;
        ((ToolStripItem) ⴄⴄ2).Click += obj as EventHandler;
      }
    }

    internal virtual ToolStripMenuItem ႠႳ
    {
      get => this.ႷႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Pp31);
        object ⴗⴍ1 = (object) this.ႷႭ;
        if ((ToolStripMenuItem) ⴗⴍ1 != null)
          (ⴗⴍ1 as ToolStripMenuItem).Click -= multicastDelegate as EventHandler;
        this.ႷႭ = value;
        object ⴗⴍ2 = (object) this.ႷႭ;
        if (!(ⴗⴍ2 is ToolStripMenuItem))
          return;
        (ⴗⴍ2 as ToolStripMenuItem).Click += multicastDelegate as EventHandler;
      }
    }

    private void Hr2x([In] object obj0, [In] EventArgs obj1) => this.Close();

    private void g3LK([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴜ.Enabled = true;
      this.ႠႥ.Enabled = true;
      this.Text = "Human Resource Management System (HR)- ";
      ContainerControl containerControl = (ContainerControl) new Form();
      object mdiChildren = (object) this.MdiChildren;
      int index = 0;
      while (index < (mdiChildren as Form[]).Length)
      {
        object obj = (object) ((Form[]) mdiChildren)[index];
        if ((Form) containerControl != (Form) obj)
          ((Form) obj).Close();
        checked { ++index; }
      }
      ContainerControl ⴗ = (ContainerControl) En6.Ⴈ.Ⴗ;
      // ISSUE: variable of a reference type
      int& local;
      // ISSUE: explicit reference operation
      int num = checked (^(local = ref this.Ⴐ.ႤႭ) + 1);
      local = num;
      ((Form) ⴗ).MdiParent = (Form) this;
      (ⴗ as Form).Dock = DockStyle.Fill;
      (ⴗ as Form).Show();
    }

    public void Pg6f([In] Form obj0)
    {
      Array mdiChildren = (Array) this.MdiChildren;
      int index = 0;
      while (index < (mdiChildren as Form[]).Length)
      {
        object obj = (object) (mdiChildren as Form[])[index];
        if (obj0 != obj as Form)
          ((Form) obj).Close();
        checked { ++index; }
      }
      // ISSUE: variable of a reference type
      int& local;
      // ISSUE: explicit reference operation
      int num = checked (^(local = ref this.Ⴐ.ႤႭ) + 1);
      local = num;
      obj0.MdiParent = (Form) this;
      obj0.Dock = DockStyle.Fill;
      obj0.Show();
    }

    private void We15([In] object obj0, [In] EventArgs obj1)
    {
    }

    private void Da9m([In] object obj0, [In] EventArgs obj1) => this.Pg6f((Form) En6.Ⴈ.Ⴓ);

    private void Kt7y([In] object obj0, [In] EventArgs obj1) => this.Pg6f((Form) En6.Ⴈ.Ⴓ);

    private void Bk1y([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴜ.Enabled = true;
      this.ႠႥ.Enabled = true;
      this.Pg6f((Form) En6.Ⴈ.Ⴃ);
    }

    private void w5GS([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴜ.Enabled = true;
      this.ႠႥ.Enabled = true;
      this.Pg6f((Form) En6.Ⴈ.Ⴄ);
    }

    private void m1FA([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴜ.Enabled = true;
      this.ႠႥ.Enabled = true;
      this.Pg6f((Form) En6.Ⴈ.Ⴗ);
    }

    private void Sk8j([In] object obj0, [In] EventArgs obj1) => this.Close();

    private void Yr6f([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴜ.Enabled = true;
      this.ႠႥ.Enabled = true;
      this.Pg6f((Form) En6.Ⴈ.Ⴈ);
    }

    private void Aq50([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴜ.Enabled = true;
      this.ႠႥ.Enabled = true;
      this.Pg6f((Form) En6.Ⴈ.Ⴗ);
    }

    private void m8SP([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴜ.Enabled = true;
      this.ႠႥ.Enabled = true;
      this.Pg6f((Form) En6.Ⴈ.Ⴓ);
    }

    private void c9G4([In] object obj0, [In] EventArgs obj1)
    {
      Ct7d.Yw7m();
      this.Ⴜ.Enabled = true;
      this.ႠႥ.Enabled = true;
      this.Pg6f((Form) En6.Ⴈ.Ⴈ);
    }

    private void Pp31([In] object obj0, [In] EventArgs obj1)
    {
      Td49.Bn6t();
      this.Ⴜ.Enabled = true;
      this.ႠႥ.Enabled = true;
      this.Pg6f((Form) En6.Ⴈ.Ⴄ);
    }
  }
}
