// Decompiled with JetBrains decompiler
// Type: 2
// Assembly: syncui, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8C369EE2-0F8E-40F6-BD9C-ED440A7013AE
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Packed.Win32.CPEX-based.ht-72f8bd90449e3c4875b681f4afb213e7bd866e6a0e1c08546770c7c21f92eed5.exe

using System.IO;
using System.IO.Compression;
using System.Runtime.CompilerServices;

[SuppressIldasm]
internal sealed class \u0032 : \u007C
{
  public \u0032()
  {
    if (false)
      ;
    // ISSUE: explicit constructor call
    base.\u002Ector();
  }

  public override object \u0040(params object[] _param1)
  {
    if (false)
      ;
    MemoryStream memoryStream1 = new MemoryStream((byte[]) _param1[0]);
    MemoryStream memoryStream2 = new MemoryStream();
    byte[] buffer = new byte[1024];
    using (DeflateStream deflateStream = new DeflateStream((Stream) memoryStream1, CompressionMode.Decompress, true))
    {
      while (true)
      {
        int count = deflateStream.Read(buffer, 0, buffer.Length);
        if (count > 0)
          memoryStream2.Write(buffer, 0, count);
        else
          break;
      }
    }
    return (object) memoryStream2.ToArray();
  }
}
