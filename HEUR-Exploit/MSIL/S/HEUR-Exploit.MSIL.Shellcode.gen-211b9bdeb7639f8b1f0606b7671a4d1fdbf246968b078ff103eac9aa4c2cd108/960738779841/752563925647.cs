// Decompiled with JetBrains decompiler
// Type: 960738779841.752563925647
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003463056308027;
using \u003960738779841;
using Microsoft.ProgramSynthesis.Utils;
using System;
using System.Collections.Generic;
using System.Linq;

namespace \u003960738779841
{
  public abstract class \u003752563925647 : IEquatable<\u003752563925647>
  {
    private const int \u003068556529196 = 5;
    private readonly SortedSet<string> \u003366658131721 = new SortedSet<string>();

    public \u003547566135655 \u003746657177676 { get; }

    public Optional<string> \u003013635168359 { get; }

    public IReadOnlyDictionary<string, string> \u003526529034458 { get; }

    public IEnumerable<string> \u003439893257588 => (IEnumerable<string>) this.\u003366658131721;

    public IReadOnlyDictionary<string, string> \u003838478326228 { get; }

    public IReadOnlyDictionary<string, string> \u003803720777683 { get; }

    public abstract Optional<string> \u003818902709329(string _param1);

    public abstract bool \u003074401677913(string _param1);

    public abstract bool \u003266398958046(\u003752563925647 _param1);

    protected \u003752563925647(
      \u003547566135655 kind,
      Dictionary<string, string> substitutions,
      string naValue = null)
    {
      this.\u003746657177676 = kind;
      this.\u003013635168359 = OptionalUtils.SomeIfNotNull<string>(naValue);
      this.\u003526529034458 = (IReadOnlyDictionary<string, string>) ((substitutions != null ? CollectionUtils.ToDictionary<string, string>(substitutions.Where<KeyValuePair<string, string>>((Func<KeyValuePair<string, string>, bool>) (_param1 => _param1.Key != _param1.Value))) : (Dictionary<string, string>) null) ?? new Dictionary<string, string>());
      this.\u003838478326228 = (IReadOnlyDictionary<string, string>) CollectionUtils.ToDictionary<string, string>(this.\u003526529034458.Where<KeyValuePair<string, string>>((Func<KeyValuePair<string, string>, bool>) (_param1 => !string.IsNullOrEmpty(_param1.Value))));
      this.\u003803720777683 = (IReadOnlyDictionary<string, string>) CollectionUtils.ToDictionary<string, string>(this.\u003526529034458.Where<KeyValuePair<string, string>>((Func<KeyValuePair<string, string>, bool>) (_param1 => string.IsNullOrEmpty(_param1.Value))));
    }

    public virtual \u003547566135655 \u003675045363428 => this.\u003746657177676;

    public bool \u003463227775507 => this.\u003013635168359.HasValue;

    internal void \u003666697314485(string _param1)
    {
      if (this.\u003366658131721.Count >= 5)
        return;
      this.\u003366658131721.Add(_param1);
    }
  }
}
