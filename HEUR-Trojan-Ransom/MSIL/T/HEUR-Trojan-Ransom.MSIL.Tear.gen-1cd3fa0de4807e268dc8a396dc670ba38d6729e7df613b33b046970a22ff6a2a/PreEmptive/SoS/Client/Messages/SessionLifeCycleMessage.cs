// Decompiled with JetBrains decompiler
// Type: PreEmptive.SoS.Client.Messages.SessionLifeCycleMessage
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common;
using PreEmptive.Analytics.Common.Utilities;
using PreEmptive.SoS.Client.Cache;

namespace PreEmptive.SoS.Client.Messages
{
  public class SessionLifeCycleMessage : Message
  {
    public override void Send(CacheService cache, PlatformClient paclient)
    {
      int A_1 = 7;
      int num;
      BinaryInfo binary;
      ExtendedKeys keys;
      switch (0)
      {
        case 0:
label_2:
          binary = Message.ConvertBinaryInfo(this.Binary);
          keys = Message.ConvertExtendedKeys(this.GetExtendedKeys());
          num = 1;
          goto default;
        default:
          while (true)
          {
            switch (num)
            {
              case 0:
                goto label_6;
              case 1:
                num = !this.Event.Code.Equals(Utils.a("\uE8BA\uD8BC첾닀ꫂ\uAAC4꧆\uE7C8飊만껎ꏐ\uA7D2", A_1)) ? 4 : 3;
                continue;
              case 2:
                switch (true ? 1 : 0)
                {
                  case 0:
                  case 2:
                    break;
                  default:
                    if (true)
                      ;
                    if (false)
                      ;
                    cache.ShutdownBinary = binary;
                    cache.ShutdownKeys = keys;
                    num = 0;
                    continue;
                }
                break;
              case 3:
                goto label_12;
              case 4:
                if (!this.Event.Code.Equals(Utils.a("\uE8BA\uD8BC첾닀ꫂ\uAAC4꧆\uE7C8飊만ꃎꇐ", A_1)))
                  goto label_11;
                else
                  break;
              default:
                goto label_2;
            }
            num = 2;
          }
label_6:
          break;
label_11:
          break;
label_12:
          paclient.ApplicationStart(keys, binary, (PreEmptive.Analytics.Common.IFlowController) null);
          break;
      }
    }
  }
}
