// Decompiled with JetBrains decompiler
// Type: MnBotNet_v8.My.MySettings
// Assembly: MnBotNet v8, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 389331F0-F1CF-484C-B906-BAA6D2A8184D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Gimemo.amyz-a0e4baf47d25a2a864fae4260fed6436312a74603057c3e6de70e57bc8481412.exe

using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

namespace MnBotNet_v8.My
{
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings defaultInstance = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool addedHandler;
    private static object addedHandlerLockObject = RuntimeHelpers.GetObjectValue(new object());

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [DebuggerNonUserCode]
    private static void AutoSaveSettings(object sender, EventArgs e)
    {
      if (!\u0005.\u0002().SaveMySettingsOnExit)
        return;
      \u0006.\u0002().Save();
    }

    public static MySettings Default
    {
      get
      {
        if (!MySettings.addedHandler)
        {
          object handlerLockObject = MySettings.addedHandlerLockObject;
          ObjectFlowControl.CheckForSyncLockOnValueType(handlerLockObject);
          Monitor.Enter(handlerLockObject);
          try
          {
            if (!MySettings.addedHandler)
            {
              \u0005.\u0002().Shutdown += (ShutdownEventHandler) ((sender, e) =>
              {
                if (!\u0005.\u0002().SaveMySettingsOnExit)
                  return;
                \u0006.\u0002().Save();
              });
              MySettings.addedHandler = true;
            }
          }
          finally
          {
            Monitor.Exit(handlerLockObject);
          }
        }
        return MySettings.defaultInstance;
      }
    }

    [DefaultSettingValue("0")]
    [DebuggerNonUserCode]
    [UserScopedSetting]
    public int brw
    {
      get => Conversions.ToInteger(this[\u0002\u2000.\u0002(1991113089)]);
      set => this[\u0002\u2000.\u0002(1991113089)] = (object) value;
    }

    [DebuggerNonUserCode]
    [DefaultSettingValue("")]
    [UserScopedSetting]
    public string dat1
    {
      get => Conversions.ToString(this[\u0002\u2000.\u0002(1991113099)]);
      set => this[\u0002\u2000.\u0002(1991113099)] = (object) value;
    }

    [DebuggerNonUserCode]
    [DefaultSettingValue("")]
    [UserScopedSetting]
    public string dat2
    {
      get => Conversions.ToString(this[\u0002\u2000.\u0002(1991113142)]);
      set => this[\u0002\u2000.\u0002(1991113142)] = (object) value;
    }

    [DefaultSettingValue("")]
    [UserScopedSetting]
    [DebuggerNonUserCode]
    public string dat3
    {
      get => Conversions.ToString(this[\u0002\u2000.\u0002(1991113121)]);
      set => this[\u0002\u2000.\u0002(1991113121)] = (object) value;
    }

    [DefaultSettingValue("")]
    [DebuggerNonUserCode]
    [UserScopedSetting]
    public string dat4
    {
      get => Conversions.ToString(this[\u0002\u2000.\u0002(1991113132)]);
      set => this[\u0002\u2000.\u0002(1991113132)] = (object) value;
    }

    [UserScopedSetting]
    [DebuggerNonUserCode]
    [DefaultSettingValue("0")]
    public int addslvs
    {
      get => Conversions.ToInteger(this[\u0002\u2000.\u0002(1991113175)]);
      set => this[\u0002\u2000.\u0002(1991113175)] = (object) value;
    }
  }
}
