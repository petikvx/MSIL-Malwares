// Decompiled with JetBrains decompiler
// Type: PreEmptive.Analytics.Common.Messages.SessionStart
// Assembly: EncoderCSL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8BC70EB6-E222-4E38-9ED5-32744A85C676
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Tear.gen-1cd3fa0de4807e268dc8a396dc670ba38d6729e7df613b33b046970a22ff6a2a.exe

using PreEmptive.Analytics.Common.Tags;
using PreEmptive.Analytics.Common.Utilities;
using System;
using System.Runtime.InteropServices;

namespace PreEmptive.Analytics.Common.Messages
{
  public class SessionStart : Message
  {
    public override string TagName
    {
      get
      {
        int A_1 = 6;
        int num1 = 1;
        if (num1 == 0)
          ;
        num1 = -10919;
        int num2 = num1;
        num1 = -10919;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            num1 = 0;
            if (num1 == 0)
              ;
            return Utils.a("즹\uD9BB춽뎿ꯁꯃ\uA8C5\uE5C7막룋꿍ꋏꛑ", A_1);
          default:
            goto case 1;
        }
      }
    }

    public override string TagDescription
    {
      get
      {
        int A_1 = 14;
        int num1 = 26496;
        int num2 = num1;
        num1 = 26496;
        int num3 = num1;
        switch (num2 == num3)
        {
          case true:
            if (false)
              ;
            if (true)
              ;
            return Utils.a("뇁ꇃ뗅믇ꏉꏋꃍ\uF0CFꇑꃓ럕\uAAD7껙", A_1);
          default:
            goto case 1;
        }
      }
    }

    public SessionStart(Guid session, [Optional] BinaryInfoTag binary)
      : base(session, binary: binary)
    {
    }
  }
}
