// Decompiled with JetBrains decompiler
// Type: .
// Assembly: SynMood, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E74E0BE3-2156-4FD1-87D6-9C934F391488
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Blocker.asay-91a905762db9f9c40fe89fad88d7cbf29ff032af.exe

using System;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;

namespace \u0001
{
  internal class \u0001
  {
    private static Assembly \u0001 = (Assembly) null;
    private static string[] \u0001 = new string[0];

    internal static void \u0001()
    {
      try
      {
        AppDomain currentDomain = AppDomain.CurrentDomain;
        ResolveEventHandler resolveEventHandler = new ResolveEventHandler(\u0001.\u0001.\u0001);
        if (false)
          return;
        currentDomain.ResourceResolve += resolveEventHandler;
      }
      catch (Exception ex)
      {
      }
    }

    private static Assembly \u0001([In] object obj0, [In] ResolveEventArgs obj1)
    {
      do
      {
        if ((object) \u0001.\u0001.\u0001 == null)
        {
          string[] strArray1 = \u0001.\u0001.\u0001;
          if (true)
            goto label_22;
label_2:
          if (true)
            goto label_23;
label_3:
          string[] strArray2;
          try
          {
            \u0001.\u0001.\u0001 = Assembly.Load("{6c2dcaa1-060d-4206-942d-2669e65311b9}, PublicKeyToken=3e56350693f7355e");
            if ((object) \u0001.\u0001.\u0001 != null)
            {
              \u0001.\u0001.\u0001 = \u0001.\u0001.\u0001.GetManifestResourceNames();
              goto label_6;
            }
            else
              goto label_6;
          }
          finally
          {
            Monitor.Exit((object) strArray2);
          }
label_23:
          Monitor.Enter((object) strArray1);
          goto label_3;
label_22:
          strArray2 = strArray1;
          goto label_2;
        }
label_6:
        string name = obj1.Name;
        if (true)
          goto label_24;
label_7:
        if (true)
          goto label_25;
label_17:
        int index;
        string str;
        while (true)
        {
          int num1;
          do
          {
            int num2 = index;
            if (true)
              goto label_18;
label_9:
            if (true)
            {
              if (num2 == 0)
                num2 = index;
              else
                goto label_11;
            }
            int num3 = 1;
label_16:
            num1 = num2 + num3;
            continue;
label_18:
            int length = \u0001.\u0001.\u0001.Length;
            if (false)
            {
              num3 = length;
              goto label_16;
            }
            else
            {
              int num4 = length;
              if (num2 < num4)
              {
                num2 = \u0001.\u0001.\u0001[index] == str ? 1 : 0;
                goto label_9;
              }
              else
                goto label_20;
            }
          }
          while (false);
          index = num1;
        }
label_11:
        return !\u0001.\u0001.\u0001() ? (Assembly) null : \u0001.\u0001.\u0001;
label_20:
        continue;
label_25:
        index = 0;
        goto label_17;
label_24:
        str = name;
        goto label_7;
      }
      while (false);
      return (Assembly) null;
    }

    private static bool \u0001()
    {
      bool flag;
      try
      {
        StackFrame[] frames = new StackTrace().GetFrames();
        if (true)
          goto label_16;
label_1:
        int num1 = 2;
        StackFrame[] stackFrameArray;
        int num2;
        int num3;
        while (true)
        {
          if (true)
            goto label_17;
label_10:
          int index;
          while (true)
          {
            int num4;
            do
            {
              num4 = index;
              if (true)
                goto label_11;
label_9:
              continue;
label_11:
              int num5 = stackFrameArray.Length;
              if (true)
                num5 = num5;
              if (num4 < num5)
              {
                StackFrame stackFrame1 = stackFrameArray[index];
                if (true)
                  goto label_18;
label_4:
                StackFrame stackFrame2;
                if ((object) stackFrame2.GetMethod().Module.Assembly != (object) Assembly.GetExecutingAssembly())
                {
                  num2 = index;
                  if (true)
                  {
                    num4 = num2 + 1;
                    goto label_9;
                  }
                  else
                    goto label_15;
                }
                else
                  goto label_5;
label_18:
                stackFrame2 = stackFrame1;
                goto label_4;
              }
              else
                goto label_14;
            }
            while (false);
            index = num4;
          }
label_5:
          num3 = 1;
          if (num3 == 0)
          {
            num1 = num3;
            continue;
          }
          break;
label_17:
          index = num1;
          goto label_10;
        }
        if (true)
        {
          flag = num3 != 0;
          goto label_23;
        }
        else
          goto label_23;
label_14:
        num2 = 0;
label_15:
        if (true)
        {
          flag = num2 != 0;
          goto label_23;
        }
        else
          goto label_23;
label_16:
        stackFrameArray = frames;
        goto label_1;
      }
      catch
      {
        flag = true;
      }
label_23:
      return flag;
    }
  }
}
