// Decompiled with JetBrains decompiler
// Type: TemporalToolkit.TemporalExpressions.TEIntersect
// Assembly: TaskSchedulerExcept, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C99F8105-AF21-447F-A90A-9B9B26790CA7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan.Win32.Generic-c3fec857671e01d484bd82b426a3d086aa19aab28ec888f7a83bf9fb8fa96f2d.exe

using System;
using System.Collections.Generic;

namespace TemporalToolkit.TemporalExpressions
{
  public class TEIntersect : TEList
  {
    public override bool Includes(DateTime aDate)
    {
      bool flag;
      using (List<TemporalExpression>.Enumerator enumerator = this.Expressions.GetEnumerator())
      {
label_4:
        int num1 = !enumerator.MoveNext() ? 1365015061 : (num1 = 479445930);
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 533154558)) % 7U)
          {
            case 0:
              num1 = 479445930;
              continue;
            case 1:
              flag = false;
              num1 = (int) num2 * 142068252 ^ -763517145;
              continue;
            case 2:
              goto label_13;
            case 4:
              num1 = 123140435;
              continue;
            case 5:
              int num3;
              num1 = num3 = enumerator.Current.Includes(aDate) ? 755206915 : (num3 = 2085894414);
              continue;
            case 6:
              goto label_4;
            default:
              goto label_9;
          }
        }
      }
label_9:
      flag = true;
label_10:
      int num4 = 1502079534;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ 533154558)) % 3U)
        {
          case 0:
            goto label_10;
          case 1:
            num4 = (int) num5 * -614100208 ^ -326740883;
            continue;
          default:
            goto label_13;
        }
      }
label_13:
      return flag;
    }
  }
}
