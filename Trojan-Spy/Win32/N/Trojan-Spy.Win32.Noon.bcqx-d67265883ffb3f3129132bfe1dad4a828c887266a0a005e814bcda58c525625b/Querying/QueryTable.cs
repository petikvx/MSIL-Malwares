// Decompiled with JetBrains decompiler
// Type: Alero.Querying.QueryTable
// Assembly: AssemblyCopyrightAttrib, Version=2005.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6DE54395-8B54-4A88-80DE-363C4128FB08
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqx-d67265883ffb3f3129132bfe1dad4a828c887266a0a005e814bcda58c525625b.exe

using System.Collections.Generic;

namespace Alero.Querying
{
  public class QueryTable : TableBase
  {
    private readonly string _tableName;
    private readonly List<FieldReference> _fields = new List<FieldReference>();

    public QueryTable(string tableName) => this._tableName = tableName;

    public override string TableName => this._tableName;

    internal override void BuildSql(BuildSqlContext sqlContext)
    {
      sqlContext.Builder.Append("[");
      sqlContext.Builder.Append(this._tableName);
      sqlContext.Builder.Append("] ");
      sqlContext.Builder.Append(sqlContext.ResolveAlias(this));
    }

    public override string ToString() => this._tableName;

    public FieldReference Field(string name)
    {
      FieldReference fieldReference = new FieldReference(this, name);
      this._fields.Add(fieldReference);
      return fieldReference;
    }

    protected internal override IEnumerable<FieldReference> Fields => (IEnumerable<FieldReference>) this._fields.AsReadOnly();
  }
}
