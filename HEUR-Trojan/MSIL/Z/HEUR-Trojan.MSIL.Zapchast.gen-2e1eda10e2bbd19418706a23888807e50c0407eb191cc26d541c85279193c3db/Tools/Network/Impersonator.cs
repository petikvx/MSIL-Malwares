// Decompiled with JetBrains decompiler
// Type: Tools.Network.Impersonator
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Trojan.MSIL.Zapchast.gen-2e1eda10e2bbd19418706a23888807e50c0407eb191cc26d541c85279193c3db.exe

using System;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.Security.Principal;

namespace Tools.Network
{
  public class Impersonator : IDisposable
  {
    private WindowsImpersonationContext _wic;

    public Impersonator(
      string userName,
      string domainName,
      string password,
      욎㝅얺鏂멓浡卽㳨쿫硹햸\uE4F6\u2515뺱禬ꂎΡḊ괕ẛ logonType,
      \uA7AF᷎뜕㤹\uF405덠莕즏ⱸॱ섆螅\u24F7鈪夦톾赞岥冷堒 logonProvider)
    {
      this.Impersonate(userName, domainName, password, logonType, logonProvider);
    }

    public Impersonator(string userName, string domainName, string password) => this.Impersonate(userName, domainName, password, 욎㝅얺鏂멓浡卽㳨쿫硹햸\uE4F6\u2515뺱禬ꂎΡḊ괕ẛ.\uF742䆄喙᳐\u293Bצ쉪彥\uE193褦\uEAD9获㛢鳗뱄\u2544\uE81F펕\uFFF8焓, \uA7AF᷎뜕㤹\uF405덠莕즏ⱸॱ섆螅\u24F7鈪夦톾赞岥冷堒.浢禿嚡\uFE39\u2985꾞ㅖ㣦툓上ᵒ駕학윕衴윆獾\u2D71偼独);

    public Impersonator()
    {
    }

    public void Dispose() => this.UndoImpersonation();

    public void Impersonate(string userName, string domainName, string password) => this.Impersonate(userName, domainName, password, 욎㝅얺鏂멓浡卽㳨쿫硹햸\uE4F6\u2515뺱禬ꂎΡḊ괕ẛ.\uF742䆄喙᳐\u293Bצ쉪彥\uE193褦\uEAD9获㛢鳗뱄\u2544\uE81F펕\uFFF8焓, \uA7AF᷎뜕㤹\uF405덠莕즏ⱸॱ섆螅\u24F7鈪夦톾赞岥冷堒.浢禿嚡\uFE39\u2985꾞ㅖ㣦툓上ᵒ駕학윕衴윆獾\u2D71偼独);

    public void Impersonate(
      string userName,
      string domainName,
      string password,
      욎㝅얺鏂멓浡卽㳨쿫硹햸\uE4F6\u2515뺱禬ꂎΡḊ괕ẛ logonType,
      \uA7AF᷎뜕㤹\uF405덠莕즏ⱸॱ섆螅\u24F7鈪夦톾赞岥冷堒 logonProvider)
    {
      this.UndoImpersonation();
      IntPtr zero1 = IntPtr.Zero;
      IntPtr zero2 = IntPtr.Zero;
      try
      {
        this._wic = WindowsIdentity.Impersonate(IntPtr.Zero);
        if (篧㠍鈪䬨អ\u2985뱏羬좾詐᯳ǜ滭滲㶋Еᶞ\u2498\uFFFD駩.噓塔浪取谨茝웡緳\u2616켊䆘葎\u2530ჰꘉ亇੧퀨棯遾(userName, domainName, password, (int) logonType, (int) logonProvider, ref zero1) == 0)
          throw new Win32Exception(Marshal.GetLastWin32Error());
        if (篧㠍鈪䬨អ\u2985뱏羬좾詐᯳ǜ滭滲㶋Еᶞ\u2498\uFFFD駩.\u22AA谋\u4DCEŉ懸\uFFFD缭ᅙԯ\uEBE1伍\uF36A\uFFFD檕杄빃㬱醲穯絛(zero1, 2, ref zero2) == 0)
          throw new Win32Exception(Marshal.GetLastWin32Error());
        new WindowsIdentity(zero2).Impersonate();
      }
      finally
      {
        if (zero1 != IntPtr.Zero)
          篧㠍鈪䬨អ\u2985뱏羬좾詐᯳ǜ滭滲㶋Еᶞ\u2498\uFFFD駩.梐瘽䧬誙阼뫉鞵ᘢ뢬蘸\u2F10誌뫟謇\uFFFDᯞ욤鋐磕먒(zero1);
        if (zero2 != IntPtr.Zero)
          篧㠍鈪䬨អ\u2985뱏羬좾詐᯳ǜ滭滲㶋Еᶞ\u2498\uFFFD駩.梐瘽䧬誙阼뫉鞵ᘢ뢬蘸\u2F10誌뫟謇\uFFFDᯞ욤鋐磕먒(zero2);
      }
    }

    private void UndoImpersonation()
    {
      if (this._wic != null)
        this._wic.Undo();
      this._wic = (WindowsImpersonationContext) null;
    }
  }
}
