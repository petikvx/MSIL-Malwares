// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: LoadHi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 984E9D2E-DA60-4984-B27B-15EC3C1BAA14
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-5f4b796f8ee524790172ed29cc21d32e43d347e3c306781f420d7844e0a776c9.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
        if (aIndex < 0)
          goto label_4;
label_1:
        int num1 = -710843967;
label_2:
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1957635498)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -1286969541 ^ -1245166121;
              continue;
            case 2:
              goto label_1;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1650409987 ^ -1273987119;
              continue;
            case 4:
              jsonNode = this.m_List[aIndex];
              num1 = -22276341;
              continue;
            case 5:
              num1 = (int) num2 * -808950378 ^ 747538465;
              continue;
            case 6:
              int num3 = !flag ? -667170588 : (num3 = -793558261);
              num1 = num3 ^ (int) num2 * 1854666421;
              continue;
            case 7:
              goto label_3;
            default:
              goto label_11;
          }
        }
label_3:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_5;
label_11:
        return jsonNode;
label_4:
        num4 = 1;
label_5:
        flag = num4 != 0;
        num1 = -1713350744;
        goto label_2;
      }
      set
      {
        if (aIndex < 0)
          goto label_8;
label_1:
        int num1 = 1778714215;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1997665275)) % 8U)
          {
            case 0:
              num1 = (int) num2 * 1609743547 ^ 740489594;
              continue;
            case 1:
              num1 = (int) num2 * -1848241610 ^ -1501587146;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            case 4:
              goto label_7;
            case 5:
              this.m_List.Add(value);
              num1 = (int) num2 * -784509304 ^ 1077440083;
              continue;
            case 6:
              num1 = (int) num2 * -958370045 ^ -1177311910;
              continue;
            case 7:
              this.m_List[aIndex] = value;
              num1 = 2072966245;
              continue;
            default:
              goto label_12;
          }
        }
label_3:
        return;
label_12:
        return;
label_7:
        int num3 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_9;
label_8:
        num3 = 1;
label_9:
        num1 = num3 == 0 ? 1863604828 : (num1 = 1795089094);
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this);
      set
      {
        this.m_List.Add(value);
label_1:
        int num1 = -249628411;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1982582133)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * -1745172246 ^ -1029785342;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -1218650337;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1658936784)) % 3U)
          {
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * 624591225 ^ 1825097317;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem) => this.m_List.Add(aItem);

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1855671802;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        JSONNode jsonNode2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 1519014547)) % 11U)
        {
          case 0:
            num1 = (int) num2 * -1017927733 ^ 1969358092;
            continue;
          case 2:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 647856690 ^ 1129644501;
            continue;
          case 3:
            int num4 = !flag ? -1717973089 : (num4 = -1335789443);
            num1 = num4 ^ (int) num2 * -488406969;
            continue;
          case 4:
            num1 = (int) num2 * 1677472965 ^ 450993378;
            continue;
          case 5:
            goto label_1;
          case 6:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * 1604182478 ^ 835893761;
            continue;
          case 7:
            num1 = (int) num2 * -1893044576 ^ -129221337;
            continue;
          case 8:
            jsonNode2 = this.m_List[aIndex];
            this.m_List.RemoveAt(aIndex);
            num1 = 1885233893;
            continue;
          case 9:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 2086491144 ^ -702037150;
            continue;
          case 10:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          default:
            goto label_15;
        }
        flag = num3 != 0;
        num1 = 251701919;
      }
label_15:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = -1998338635;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1257397544)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1995173517 ^ -1704807969;
            continue;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * 1371569411 ^ -1366660893;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = -1156992933;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1664837902)) % 4U)
          {
            case 1:
              getChildsD13.\u003C\u003E4__this = this;
              num1 = (int) num2 * 1910847781 ^ 1976143528;
              continue;
            case 2:
              goto label_1;
            case 3:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * 601458381 ^ 1409956473;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
      string str1 = "[ ";
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_4:
        int num1 = enumerator.MoveNext() ? -1338868707 : (num1 = -424922640);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2102148002)) % 9U)
          {
            case 0:
              num1 = (int) num2 * -274438904 ^ -531178512;
              continue;
            case 1:
              current = enumerator.Current;
              num1 = -2140098080;
              continue;
            case 2:
              str1 = JSONArray.\u202C‬‌‫⁫‍‌‏⁭‮⁭‮⁮⁫⁪‮⁯⁭‌‫‪‎⁮⁬‏‭‮‪⁯‬‪‬‍‎‫⁪‪⁪‭⁫‮(str1, ", ");
              num1 = (int) num2 * -965101933 ^ -1803378527;
              continue;
            case 3:
              num1 = -1338868707;
              continue;
            case 5:
              int num3 = flag ? 1231945657 : (num3 = 1459567956);
              num1 = num3 ^ (int) num2 * 1667487874;
              continue;
            case 6:
              goto label_4;
            case 7:
              flag = JSONArray.\u202C‬‫‌‬‎‍⁬‍‪‫⁬​⁪‎​⁭‭⁫⁬⁮⁫‭‏⁪⁪⁯‭⁮‍⁬‍‎⁮‫⁬‬‎⁬⁫‮(str1) > 2;
              num1 = (int) num2 * 864369870 ^ -145927767;
              continue;
            case 8:
              str1 = JSONArray.\u202C‬‌‫⁫‍‌‏⁭‮⁭‮⁮⁫⁪‮⁯⁭‌‫‪‎⁮⁬‏‭‮‪⁯‬‪‬‍‎‫⁪‪⁪‭⁫‮(str1, JSONArray.\u206E‌⁬⁬⁮‏⁭‪‍‫⁯⁪‎⁯⁭⁯‬‭⁯‫⁬⁫‏‭‎‍⁬‏‭​⁯‌​⁪‪⁮⁭‬‪⁪‮((object) current));
              num1 = -446126081;
              continue;
            default:
              goto label_12;
          }
        }
      }
label_12:
      string str2 = JSONArray.\u202C‬‌‫⁫‍‌‏⁭‮⁭‮⁮⁫⁪‮⁯⁭‌‫‪‎⁮⁬‏‭‮‪⁯‬‪‬‍‎‫⁪‪⁪‭⁫‮(str1, " ]");
label_13:
      int num4 = -1385897341;
      while (true)
      {
        uint num5;
        switch ((num5 = (uint) (num4 ^ -2102148002)) % 3U)
        {
          case 0:
            goto label_13;
          case 2:
            num4 = (int) num5 * -1765047027 ^ 1761377041;
            continue;
          default:
            goto label_16;
        }
      }
label_16:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 420135036;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 564638054)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -733415643 ^ -871899108;
            continue;
          case 2:
            str1 = "[ ";
            num1 = (int) num2 * -136128582 ^ -426176185;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_16:
        int num3 = enumerator.MoveNext() ? 1058621769 : (num3 = 267033672);
        JSONNode current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 564638054)) % 10U)
          {
            case 0:
              num3 = 1058621769;
              continue;
            case 1:
              str1 = JSONArray.\u202C‬‌‫⁫‍‌‏⁭‮⁭‮⁮⁫⁪‮⁯⁭‌‫‪‎⁮⁬‏‭‮‪⁯‬‪‬‍‎‫⁪‪⁪‭⁫‮(str1, current.ToString(JSONArray.\u202C‬‌‫⁫‍‌‏⁭‮⁭‮⁮⁫⁪‮⁯⁭‌‫‪‎⁮⁬‏‭‮‪⁯‬‪‬‍‎‫⁪‪⁪‭⁫‮(aPrefix, "   ")));
              num3 = (int) num4 * 1124204956 ^ -1171957429;
              continue;
            case 2:
              str1 = JSONArray.\u206F‎‬‭​‎⁭⁯⁭‭‫‭⁮‎‬‍⁪‫​⁯‪‍‎‬‪‍⁯‎‎‬⁪‬​​‬⁯⁫‬‭‫‮(str1, "\n", aPrefix, "   ");
              num3 = 644845719;
              continue;
            case 3:
              goto label_16;
            case 5:
              current = enumerator.Current;
              num3 = 1492439486;
              continue;
            case 6:
              num3 = (int) num4 * -46415851 ^ 539315167;
              continue;
            case 7:
              flag = JSONArray.\u202C‬‫‌‬‎‍⁬‍‪‫⁬​⁪‎​⁭‭⁫⁬⁮⁫‭‏⁪⁪⁯‭⁮‍⁬‍‎⁮‫⁬‬‎⁬⁫‮(str1) > 3;
              num3 = (int) num4 * 570024064 ^ 772599678;
              continue;
            case 8:
              int num5 = !flag ? -1093504246 : (num5 = -1205198173);
              num3 = num5 ^ (int) num4 * -1499951084;
              continue;
            case 9:
              str1 = JSONArray.\u202C‬‌‫⁫‍‌‏⁭‮⁭‮⁮⁫⁪‮⁯⁭‌‫‪‎⁮⁬‏‭‮‪⁯‬‪‬‍‎‫⁪‪⁪‭⁫‮(str1, ", ");
              num3 = (int) num4 * -1159493743 ^ -1582721249;
              continue;
            default:
              goto label_18;
          }
        }
      }
label_18:
      string str2 = JSONArray.\u206F‎‬‭​‎⁭⁯⁭‭‫‭⁮‎‬‍⁪‫​⁯‪‍‎‬‪‍⁯‎‎‬⁪‬​​‬⁯⁫‬‭‫‮(str1, "\n", aPrefix, "]");
label_19:
      int num6 = 718348023;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 564638054)) % 4U)
        {
          case 0:
            goto label_19;
          case 1:
            str3 = str2;
            num6 = (int) num7 * -1911967245 ^ -1774546613;
            continue;
          case 2:
            num6 = (int) num7 * 1368119914 ^ -1633933699;
            continue;
          default:
            goto label_23;
        }
      }
label_23:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -421840434;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1410621007)) % 11U)
        {
          case 0:
            this.m_List[index].Serialize(aWriter);
            num1 = -1536682816;
            continue;
          case 1:
            JSONArray.\u206D‭⁭⁭‮⁭‌⁫⁮⁫⁬‏​‭‪‌‬‮‫‪⁯‭‍‌‌‮⁯‍‍⁭‏⁪‮‮‎⁭‭⁪‌⁪‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * -1450455358 ^ 1523687232;
            continue;
          case 2:
            index = 0;
            num1 = (int) num2 * -718544890 ^ -148318293;
            continue;
          case 3:
            JSONArray.\u202E‎⁬‍⁬‏‏‭‪‪​​‪​‏‭‪⁫⁬‪⁫‬⁬⁮‬‭⁯​‍⁬‏‎⁭‍‬‫‌⁭⁮⁬‮(aWriter, (byte) 1);
            num1 = (int) num2 * 2011162826 ^ 1134619248;
            continue;
          case 4:
            flag = index < this.m_List.Count;
            num1 = -1822551793;
            continue;
          case 5:
            num1 = (int) num2 * -1945775686 ^ 1535087033;
            continue;
          case 6:
            goto label_1;
          case 7:
            ++index;
            num1 = (int) num2 * -455354092 ^ 297781227;
            continue;
          case 8:
            num1 = (int) num2 * 668231759 ^ 377622423;
            continue;
          case 9:
            int num3 = !flag ? -1170854703 : (num3 = -839472136);
            num1 = num3 ^ (int) num2 * 1948727262;
            continue;
          case 10:
            goto label_3;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    static int \u202C‬‫‌‬‎‍⁬‍‪‫⁬​⁪‎​⁭‭⁫⁬⁮⁫‭‏⁪⁪⁯‭⁮‍⁬‍‎⁮‫⁬‬‎⁬⁫‮([In] string obj0) => obj0.Length;

    static string \u202C‬‌‫⁫‍‌‏⁭‮⁭‮⁮⁫⁪‮⁯⁭‌‫‪‎⁮⁬‏‭‮‪⁯‬‪‬‍‎‫⁪‪⁪‭⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206E‌⁬⁬⁮‏⁭‪‍‫⁯⁪‎⁯⁭⁯‬‭⁯‫⁬⁫‏‭‎‍⁬‏‭​⁯‌​⁪‪⁮⁭‬‪⁪‮([In] object obj0) => obj0.ToString();

    static string \u206F‎‬‭​‎⁭⁯⁭‭‫‭⁮‎‬‍⁪‫​⁯‪‍‎‬‪‍⁯‎‎‬⁪‬​​‬⁯⁫‬‭‫‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u202E‎⁬‍⁬‏‏‭‪‪​​‪​‏‭‪⁫⁬‪⁫‬⁬⁮‬‭⁯​‍⁬‏‎⁭‍‬‫‌⁭⁮⁬‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206D‭⁭⁭‮⁭‌⁫⁮⁫⁬‏​‭‪‌‬‮‫‪⁯‭‍‌‌‮⁯‍‍⁭‏⁪‮‮‎⁭‭⁪‌⁪‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
