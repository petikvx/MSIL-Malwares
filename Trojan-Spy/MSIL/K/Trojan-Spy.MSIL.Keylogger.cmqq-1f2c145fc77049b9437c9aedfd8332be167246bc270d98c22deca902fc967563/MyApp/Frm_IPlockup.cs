// Decompiled with JetBrains decompiler
// Type: MyApp.Frm_IPlockup
// Assembly: CobianRAT, Version=1.0.40.7, Culture=neutral, PublicKeyToken=null
// MVID: E2EA0EB9-E35B-43B8-8108-8D71E6EED121
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\Trojan-Spy.MSIL.Keylogger.cmqq-1f2c145fc77049b9437c9aedfd8332be167246bc270d98c22deca902fc967563.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Net;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

namespace MyApp
{
  [DesignerGenerated]
  public sealed class Frm_IPlockup : Form
  {
    private static List<WeakReference> FCPUqhF55h;
    private IContainer SyWU0OisBa;
    [AccessedThroughProperty("labelinfo")]
    private Label jbxUFqlCFB;
    [AccessedThroughProperty("PictureBox1")]
    private PictureBox o8xUIExHom;
    [AccessedThroughProperty("Label1")]
    private Label plGUrRJwXN;
    [AccessedThroughProperty("Button1")]
    private Button xUkUHfcCyd;
    private WebClient QKOU3i7FgW;
    public string connected;
    private string iiaUeufvTS;
    private Thread hOTUs1Tuk0;
    private Thread K4qUb7bptQ;

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    static Frm_IPlockup()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Frm_IPlockup()
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool disposing)
    {
      // ISSUE: unable to decompile the method.
    }

    [DebuggerStepThrough]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private void aAQUgMSSU7()
    {
      // ISSUE: unable to decompile the method.
    }

    internal virtual Label labelinfo
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual PictureBox PictureBox1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    internal virtual Button Button1
    {
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.NoInlining)] get
      {
        // ISSUE: unable to decompile the method.
      }
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized | MethodImplOptions.NoInlining)] set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void eX8UCQa15G(object _param1, EventArgs _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void viewmap()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public object displayinfo(string info)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void getmap()
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public void writetext(string text)
    {
      // ISSUE: unable to decompile the method.
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Image ByteArray2Image(byte[] ByAr)
    {
      // ISSUE: unable to decompile the method.
    }

    public delegate void WriteTextDelegate(string Text);
  }
}
