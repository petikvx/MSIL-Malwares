// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 5, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c1ca78561cb11ead
// MVID: 2D47F565-522D-4F7E-99C5-0FAB4FA0B168
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Backdoor.Win32.Poison.eqbg-1d1c34c3e9b902e7445301b77a51949865f13999db65bb166e4f7800abbf116b.exe

using \u0007;
using \u0008;
using \u000F;
using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Principal;
using System.Text;
using System.Xml;

namespace \u000F
{
  internal sealed class \u000E : \u0005
  {
    internal \u0003.\u0007 \u0001;
    internal byte[] \u0001;
    [NonSerialized]
    internal static \u0002 \u0011;

    public \u000E([In] \u0003.\u0007 obj0)
    {
      try
      {
        this.\u0001 = obj0;
      }
      catch (Exception ex)
      {
        \u0003.\u0007 obj = obj0;
        \u0004.\u0001(ex, (object) this, (object) obj);
        throw;
      }
    }

    internal unsafe void \u0001()
    {
      // ISSUE: untyped stack allocation
      IntPtr num = __untypedstackalloc(12);
      if (true)
        goto label_38;
label_1:
      ulong[] numArray;
      \u0003.\u0007 obj1;
      Dictionary<string, ulong> dictionary;
      MemoryStream w;
      XmlWriter xmlWriter1;
      \u000F.\u0007 obj2;
      DateTime dateTime;
      Guid guid1;
      WindowsIdentity windowsIdentity;
      SecurityIdentifier securityIdentifier;
      MD5CryptoServiceProvider cryptoServiceProvider;
      Guid guid2;
      string str1;
      \u000F.\u0007 obj3;
      \u000F.\u0007 obj4;
      void* voidPtr;
      \u000F.\u0007 obj5;
      KeyValuePair<string, ulong> keyValuePair1;
      try
      {
        obj1 = this.\u0001;
        this.\u0001 = (\u0003.\u0007) null;
        if (this.\u0001 != null || obj1 == null || \u0004.\u0001(obj1))
          return;
        numArray = \u0004.\u0001(obj1);
        dictionary = \u0004.\u0001(obj1);
        w = new MemoryStream();
        xmlWriter1 = (XmlWriter) new XmlTextWriter((Stream) w, (Encoding) new UTF8Encoding(false));
        \u0011.\u007E\u0016((object) xmlWriter1);
        obj2 = new \u000F.\u0007(xmlWriter1, \u000E.\u0011(4108));
        try
        {
          \u0081.\u007E\u0019\u0002((object) xmlWriter1, \u000E.\u0011(762), \u0015.\u007E\u009A((object) \u000E.\u0011(779)));
          \u0081 obj6 = \u0081.\u007E\u0019\u0002;
          XmlWriter xmlWriter2 = xmlWriter1;
          string str2 = \u000E.\u0011(832);
          dateTime = \u0091.\u0098\u0002();
          string str3 = dateTime.ToString(\u000E.\u0011(845));
          obj6((object) xmlWriter2, str2, str3);
          \u0081 obj7 = \u0081.\u007E\u0019\u0002;
          XmlWriter xmlWriter3 = xmlWriter1;
          string str4 = \u000E.\u0011(868);
          guid1 = \u0093.\u009A\u0002();
          string str5 = guid1.ToString(\u000E.\u0011(662));
          obj7((object) xmlWriter3, str4, str5);
          windowsIdentity = \u0006\u0003.\u001F\u0004();
          securityIdentifier = \u0007\u0003.\u007E\u007F\u0004((object) windowsIdentity);
          cryptoServiceProvider = new MD5CryptoServiceProvider();
          try
          {
            guid2 = new Guid(\u0001\u0003.\u007E\u001A\u0004((object) cryptoServiceProvider, \u0089\u0002.\u007E\u0099\u0003((object) \u0018.\u0007\u0002(), \u0015.\u007E\u0096((object) securityIdentifier))));
            str1 = guid2.ToString();
          }
          finally
          {
            if (cryptoServiceProvider != null)
              \u0011.\u007E\u0015((object) cryptoServiceProvider);
          }
          \u0081.\u007E\u0019\u0002((object) xmlWriter1, \u000E.\u0011(859), str1);
          obj3 = new \u000F.\u0007(xmlWriter1, \u000E.\u0011(1373));
          try
          {
            \u0081.\u007E\u0019\u0002((object) xmlWriter1, \u000E.\u0011(1364), \u000E.\u0011(4125));
          }
          finally
          {
            if (obj3 != null)
              \u0011.\u007E\u0015((object) obj3);
          }
          obj4 = new \u000F.\u0007(xmlWriter1, \u000E.\u0011(4130));
          try
          {
            *(int*) ((IntPtr) voidPtr + 8) = 0;
            while (*(int*) ((IntPtr) voidPtr + 8) < numArray.Length)
            {
              if (numArray[*(int*) ((IntPtr) voidPtr + 8)] > 0UL)
              {
                \u008C\u0002.\u007E\u0001\u0004((object) xmlWriter1, \u000E.\u0011(4143));
                \u0081.\u007E\u0019\u0002((object) xmlWriter1, \u000E.\u0011(4156), ((int*) ((IntPtr) voidPtr + 8))->ToString());
                \u0081.\u007E\u0019\u0002((object) xmlWriter1, \u000E.\u0011(1364), numArray[*(int*) ((IntPtr) voidPtr + 8)].ToString());
                \u0011.\u007E\u001A((object) xmlWriter1);
              }
              *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + 1;
            }
          }
          finally
          {
            if (obj4 != null)
              \u0011.\u007E\u0015((object) obj4);
          }
          obj5 = new \u000F.\u0007(xmlWriter1, \u000E.\u0011(4161));
          try
          {
            foreach (KeyValuePair<string, ulong> keyValuePair2 in dictionary)
            {
              keyValuePair1 = keyValuePair2;
              if (keyValuePair1.Value > 0UL)
              {
                \u008C\u0002.\u007E\u0001\u0004((object) xmlWriter1, \u000E.\u0011(4143));
                \u0081.\u007E\u0019\u0002((object) xmlWriter1, \u000E.\u0011(592), keyValuePair1.Key);
                \u0081 obj8 = \u0081.\u007E\u0019\u0002;
                XmlWriter xmlWriter4 = xmlWriter1;
                string str6 = \u000E.\u0011(1364);
                *(long*) voidPtr = (long) keyValuePair1.Value;
                string str7 = ((ulong*) voidPtr)->ToString();
                obj8((object) xmlWriter4, str6, str7);
                \u0011.\u007E\u001A((object) xmlWriter1);
              }
            }
          }
          finally
          {
            if (obj5 != null)
              \u0011.\u007E\u0015((object) obj5);
          }
        }
        finally
        {
          if (obj2 != null)
            \u0011.\u007E\u0015((object) obj2);
        }
        \u0011.\u007E\u0017((object) xmlWriter1);
        \u0011.\u007E\u0018((object) xmlWriter1);
        \u0011.\u007E\u0019((object) w);
        this.\u0001 = \u009D.\u007E\u0006\u0003((object) w);
        return;
      }
      catch (Exception ex)
      {
        Dictionary<string, ulong>.Enumerator enumerator;
        object[] objArray = new object[21]
        {
          (object) obj1,
          (object) numArray,
          (object) dictionary,
          (object) w,
          (object) xmlWriter1,
          (object) windowsIdentity,
          (object) securityIdentifier,
          (object) str1,
          (object) cryptoServiceProvider,
          (object) *(int*) ((IntPtr) voidPtr + 8),
          (object) keyValuePair1,
          (object) obj2,
          (object) dateTime,
          (object) guid1,
          (object) guid2,
          (object) obj3,
          (object) obj4,
          (object) obj5,
          (object) enumerator,
          (object) (ulong) *(long*) voidPtr,
          (object) this
        };
        \u0004.\u0001(ex, objArray);
        throw;
      }
label_38:
      voidPtr = (void*) num;
      goto label_1;
    }

    static \u000E() => \u0003.\u0003.\u0001(typeof (\u000E));
  }
}
