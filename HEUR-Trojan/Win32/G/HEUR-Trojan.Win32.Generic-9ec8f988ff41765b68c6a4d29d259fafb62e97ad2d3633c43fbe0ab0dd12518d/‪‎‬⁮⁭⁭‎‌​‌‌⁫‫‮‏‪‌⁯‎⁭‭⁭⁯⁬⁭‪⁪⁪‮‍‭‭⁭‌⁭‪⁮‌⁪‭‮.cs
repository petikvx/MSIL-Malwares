// Decompiled with JetBrains decompiler
// Type: ‪‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮ : 
  \u206F‮‪⁭⁮‮‏⁭⁮⁫‏‬‫‏‬‍‪‫⁯⁪‏⁫⁯‫⁫‮‪‮‌‌⁭‪‪‌⁮‫‭⁪⁭‪‮
{
  private static readonly int \u206C‫‎‬⁬​‌⁫⁬⁯​‭‎‌‮‌⁬​‪‎⁮⁭⁮‎⁯‏‍‬⁬‮‫​‍‏‬⁭‪‌‭‪‮ = 14;
  private static readonly int \u202C‫‬⁬⁭‮‬‍‮‍‮‬⁮‫⁮‌‌‌⁮⁫⁭​⁬⁪⁪⁮‍‬‪⁪​‬⁮​‪⁪​‍⁪‫‮ = 64;
  private static readonly byte[] \u202A⁪‍​‭‮‮‍⁮‫‬‌⁫⁬‫‮⁯⁭‍⁭‭‏⁫⁫‎⁫‫⁮⁯‎‭‌‬⁮⁮​‏​‫‬‮ = new byte[256]
  {
    (byte) 0,
    (byte) 0,
    (byte) 25,
    (byte) 1,
    (byte) 50,
    (byte) 2,
    (byte) 26,
    (byte) 198,
    (byte) 75,
    (byte) 199,
    (byte) 27,
    (byte) 104,
    (byte) 51,
    (byte) 238,
    (byte) 223,
    (byte) 3,
    (byte) 100,
    (byte) 4,
    (byte) 224,
    (byte) 14,
    (byte) 52,
    (byte) 141,
    (byte) 129,
    (byte) 239,
    (byte) 76,
    (byte) 113,
    (byte) 8,
    (byte) 200,
    (byte) 248,
    (byte) 105,
    (byte) 28,
    (byte) 193,
    (byte) 125,
    (byte) 194,
    (byte) 29,
    (byte) 181,
    (byte) 249,
    (byte) 185,
    (byte) 39,
    (byte) 106,
    (byte) 77,
    (byte) 228,
    (byte) 166,
    (byte) 114,
    (byte) 154,
    (byte) 201,
    (byte) 9,
    (byte) 120,
    (byte) 101,
    (byte) 47,
    (byte) 138,
    (byte) 5,
    (byte) 33,
    (byte) 15,
    (byte) 225,
    (byte) 36,
    (byte) 18,
    (byte) 240,
    (byte) 130,
    (byte) 69,
    (byte) 53,
    (byte) 147,
    (byte) 218,
    (byte) 142,
    (byte) 150,
    (byte) 143,
    (byte) 219,
    (byte) 189,
    (byte) 54,
    (byte) 208,
    (byte) 206,
    (byte) 148,
    (byte) 19,
    (byte) 92,
    (byte) 210,
    (byte) 241,
    (byte) 64,
    (byte) 70,
    (byte) 131,
    (byte) 56,
    (byte) 102,
    (byte) 221,
    (byte) 253,
    (byte) 48,
    (byte) 191,
    (byte) 6,
    (byte) 139,
    (byte) 98,
    (byte) 179,
    (byte) 37,
    (byte) 226,
    (byte) 152,
    (byte) 34,
    (byte) 136,
    (byte) 145,
    (byte) 16,
    (byte) 126,
    (byte) 110,
    (byte) 72,
    (byte) 195,
    (byte) 163,
    (byte) 182,
    (byte) 30,
    (byte) 66,
    (byte) 58,
    (byte) 107,
    (byte) 40,
    (byte) 84,
    (byte) 250,
    (byte) 133,
    (byte) 61,
    (byte) 186,
    (byte) 43,
    (byte) 121,
    (byte) 10,
    (byte) 21,
    (byte) 155,
    (byte) 159,
    (byte) 94,
    (byte) 202,
    (byte) 78,
    (byte) 212,
    (byte) 172,
    (byte) 229,
    (byte) 243,
    (byte) 115,
    (byte) 167,
    (byte) 87,
    (byte) 175,
    (byte) 88,
    (byte) 168,
    (byte) 80,
    (byte) 244,
    (byte) 234,
    (byte) 214,
    (byte) 116,
    (byte) 79,
    (byte) 174,
    (byte) 233,
    (byte) 213,
    (byte) 231,
    (byte) 230,
    (byte) 173,
    (byte) 232,
    (byte) 44,
    (byte) 215,
    (byte) 117,
    (byte) 122,
    (byte) 235,
    (byte) 22,
    (byte) 11,
    (byte) 245,
    (byte) 89,
    (byte) 203,
    (byte) 95,
    (byte) 176,
    (byte) 156,
    (byte) 169,
    (byte) 81,
    (byte) 160,
    (byte) 127,
    (byte) 12,
    (byte) 246,
    (byte) 111,
    (byte) 23,
    (byte) 196,
    (byte) 73,
    (byte) 236,
    (byte) 216,
    (byte) 67,
    (byte) 31,
    (byte) 45,
    (byte) 164,
    (byte) 118,
    (byte) 123,
    (byte) 183,
    (byte) 204,
    (byte) 187,
    (byte) 62,
    (byte) 90,
    (byte) 251,
    (byte) 96,
    (byte) 177,
    (byte) 134,
    (byte) 59,
    (byte) 82,
    (byte) 161,
    (byte) 108,
    (byte) 170,
    (byte) 85,
    (byte) 41,
    (byte) 157,
    (byte) 151,
    (byte) 178,
    (byte) 135,
    (byte) 144,
    (byte) 97,
    (byte) 190,
    (byte) 220,
    (byte) 252,
    (byte) 188,
    (byte) 149,
    (byte) 207,
    (byte) 205,
    (byte) 55,
    (byte) 63,
    (byte) 91,
    (byte) 209,
    (byte) 83,
    (byte) 57,
    (byte) 132,
    (byte) 60,
    (byte) 65,
    (byte) 162,
    (byte) 109,
    (byte) 71,
    (byte) 20,
    (byte) 42,
    (byte) 158,
    (byte) 93,
    (byte) 86,
    (byte) 242,
    (byte) 211,
    (byte) 171,
    (byte) 68,
    (byte) 17,
    (byte) 146,
    (byte) 217,
    (byte) 35,
    (byte) 32,
    (byte) 46,
    (byte) 137,
    (byte) 180,
    (byte) 124,
    (byte) 184,
    (byte) 38,
    (byte) 119,
    (byte) 153,
    (byte) 227,
    (byte) 165,
    (byte) 103,
    (byte) 74,
    (byte) 237,
    (byte) 222,
    (byte) 197,
    (byte) 49,
    (byte) 254,
    (byte) 24,
    (byte) 13,
    (byte) 99,
    (byte) 140,
    (byte) 128,
    (byte) 192,
    (byte) 247,
    (byte) 112,
    (byte) 7
  };
  private static readonly byte[] \u206B⁯​‌‎‮​‍⁪⁯‫⁫‪⁫‭⁪‏‬‫‏‫‮‎⁮⁮‪⁯‌‮​⁭⁫‬⁪⁪⁬‪​‌‎‮ = new byte[511]
  {
    (byte) 0,
    (byte) 3,
    (byte) 5,
    (byte) 15,
    (byte) 17,
    (byte) 51,
    (byte) 85,
    byte.MaxValue,
    (byte) 26,
    (byte) 46,
    (byte) 114,
    (byte) 150,
    (byte) 161,
    (byte) 248,
    (byte) 19,
    (byte) 53,
    (byte) 95,
    (byte) 225,
    (byte) 56,
    (byte) 72,
    (byte) 216,
    (byte) 115,
    (byte) 149,
    (byte) 164,
    (byte) 247,
    (byte) 2,
    (byte) 6,
    (byte) 10,
    (byte) 30,
    (byte) 34,
    (byte) 102,
    (byte) 170,
    (byte) 229,
    (byte) 52,
    (byte) 92,
    (byte) 228,
    (byte) 55,
    (byte) 89,
    (byte) 235,
    (byte) 38,
    (byte) 106,
    (byte) 190,
    (byte) 217,
    (byte) 112,
    (byte) 144,
    (byte) 171,
    (byte) 230,
    (byte) 49,
    (byte) 83,
    (byte) 245,
    (byte) 4,
    (byte) 12,
    (byte) 20,
    (byte) 60,
    (byte) 68,
    (byte) 204,
    (byte) 79,
    (byte) 209,
    (byte) 104,
    (byte) 184,
    (byte) 211,
    (byte) 110,
    (byte) 178,
    (byte) 205,
    (byte) 76,
    (byte) 212,
    (byte) 103,
    (byte) 169,
    (byte) 224,
    (byte) 59,
    (byte) 77,
    (byte) 215,
    (byte) 98,
    (byte) 166,
    (byte) 241,
    (byte) 8,
    (byte) 24,
    (byte) 40,
    (byte) 120,
    (byte) 136,
    (byte) 131,
    (byte) 158,
    (byte) 185,
    (byte) 208,
    (byte) 107,
    (byte) 189,
    (byte) 220,
    (byte) 127,
    (byte) 129,
    (byte) 152,
    (byte) 179,
    (byte) 206,
    (byte) 73,
    (byte) 219,
    (byte) 118,
    (byte) 154,
    (byte) 181,
    (byte) 196,
    (byte) 87,
    (byte) 249,
    (byte) 16,
    (byte) 48,
    (byte) 80,
    (byte) 240,
    (byte) 11,
    (byte) 29,
    (byte) 39,
    (byte) 105,
    (byte) 187,
    (byte) 214,
    (byte) 97,
    (byte) 163,
    (byte) 254,
    (byte) 25,
    (byte) 43,
    (byte) 125,
    (byte) 135,
    (byte) 146,
    (byte) 173,
    (byte) 236,
    (byte) 47,
    (byte) 113,
    (byte) 147,
    (byte) 174,
    (byte) 233,
    (byte) 32,
    (byte) 96,
    (byte) 160,
    (byte) 251,
    (byte) 22,
    (byte) 58,
    (byte) 78,
    (byte) 210,
    (byte) 109,
    (byte) 183,
    (byte) 194,
    (byte) 93,
    (byte) 231,
    (byte) 50,
    (byte) 86,
    (byte) 250,
    (byte) 21,
    (byte) 63,
    (byte) 65,
    (byte) 195,
    (byte) 94,
    (byte) 226,
    (byte) 61,
    (byte) 71,
    (byte) 201,
    (byte) 64,
    (byte) 192,
    (byte) 91,
    (byte) 237,
    (byte) 44,
    (byte) 116,
    (byte) 156,
    (byte) 191,
    (byte) 218,
    (byte) 117,
    (byte) 159,
    (byte) 186,
    (byte) 213,
    (byte) 100,
    (byte) 172,
    (byte) 239,
    (byte) 42,
    (byte) 126,
    (byte) 130,
    (byte) 157,
    (byte) 188,
    (byte) 223,
    (byte) 122,
    (byte) 142,
    (byte) 137,
    (byte) 128,
    (byte) 155,
    (byte) 182,
    (byte) 193,
    (byte) 88,
    (byte) 232,
    (byte) 35,
    (byte) 101,
    (byte) 175,
    (byte) 234,
    (byte) 37,
    (byte) 111,
    (byte) 177,
    (byte) 200,
    (byte) 67,
    (byte) 197,
    (byte) 84,
    (byte) 252,
    (byte) 31,
    (byte) 33,
    (byte) 99,
    (byte) 165,
    (byte) 244,
    (byte) 7,
    (byte) 9,
    (byte) 27,
    (byte) 45,
    (byte) 119,
    (byte) 153,
    (byte) 176,
    (byte) 203,
    (byte) 70,
    (byte) 202,
    (byte) 69,
    (byte) 207,
    (byte) 74,
    (byte) 222,
    (byte) 121,
    (byte) 139,
    (byte) 134,
    (byte) 145,
    (byte) 168,
    (byte) 227,
    (byte) 62,
    (byte) 66,
    (byte) 198,
    (byte) 81,
    (byte) 243,
    (byte) 14,
    (byte) 18,
    (byte) 54,
    (byte) 90,
    (byte) 238,
    (byte) 41,
    (byte) 123,
    (byte) 141,
    (byte) 140,
    (byte) 143,
    (byte) 138,
    (byte) 133,
    (byte) 148,
    (byte) 167,
    (byte) 242,
    (byte) 13,
    (byte) 23,
    (byte) 57,
    (byte) 75,
    (byte) 221,
    (byte) 124,
    (byte) 132,
    (byte) 151,
    (byte) 162,
    (byte) 253,
    (byte) 28,
    (byte) 36,
    (byte) 108,
    (byte) 180,
    (byte) 199,
    (byte) 82,
    (byte) 246,
    (byte) 1,
    (byte) 3,
    (byte) 5,
    (byte) 15,
    (byte) 17,
    (byte) 51,
    (byte) 85,
    byte.MaxValue,
    (byte) 26,
    (byte) 46,
    (byte) 114,
    (byte) 150,
    (byte) 161,
    (byte) 248,
    (byte) 19,
    (byte) 53,
    (byte) 95,
    (byte) 225,
    (byte) 56,
    (byte) 72,
    (byte) 216,
    (byte) 115,
    (byte) 149,
    (byte) 164,
    (byte) 247,
    (byte) 2,
    (byte) 6,
    (byte) 10,
    (byte) 30,
    (byte) 34,
    (byte) 102,
    (byte) 170,
    (byte) 229,
    (byte) 52,
    (byte) 92,
    (byte) 228,
    (byte) 55,
    (byte) 89,
    (byte) 235,
    (byte) 38,
    (byte) 106,
    (byte) 190,
    (byte) 217,
    (byte) 112,
    (byte) 144,
    (byte) 171,
    (byte) 230,
    (byte) 49,
    (byte) 83,
    (byte) 245,
    (byte) 4,
    (byte) 12,
    (byte) 20,
    (byte) 60,
    (byte) 68,
    (byte) 204,
    (byte) 79,
    (byte) 209,
    (byte) 104,
    (byte) 184,
    (byte) 211,
    (byte) 110,
    (byte) 178,
    (byte) 205,
    (byte) 76,
    (byte) 212,
    (byte) 103,
    (byte) 169,
    (byte) 224,
    (byte) 59,
    (byte) 77,
    (byte) 215,
    (byte) 98,
    (byte) 166,
    (byte) 241,
    (byte) 8,
    (byte) 24,
    (byte) 40,
    (byte) 120,
    (byte) 136,
    (byte) 131,
    (byte) 158,
    (byte) 185,
    (byte) 208,
    (byte) 107,
    (byte) 189,
    (byte) 220,
    (byte) 127,
    (byte) 129,
    (byte) 152,
    (byte) 179,
    (byte) 206,
    (byte) 73,
    (byte) 219,
    (byte) 118,
    (byte) 154,
    (byte) 181,
    (byte) 196,
    (byte) 87,
    (byte) 249,
    (byte) 16,
    (byte) 48,
    (byte) 80,
    (byte) 240,
    (byte) 11,
    (byte) 29,
    (byte) 39,
    (byte) 105,
    (byte) 187,
    (byte) 214,
    (byte) 97,
    (byte) 163,
    (byte) 254,
    (byte) 25,
    (byte) 43,
    (byte) 125,
    (byte) 135,
    (byte) 146,
    (byte) 173,
    (byte) 236,
    (byte) 47,
    (byte) 113,
    (byte) 147,
    (byte) 174,
    (byte) 233,
    (byte) 32,
    (byte) 96,
    (byte) 160,
    (byte) 251,
    (byte) 22,
    (byte) 58,
    (byte) 78,
    (byte) 210,
    (byte) 109,
    (byte) 183,
    (byte) 194,
    (byte) 93,
    (byte) 231,
    (byte) 50,
    (byte) 86,
    (byte) 250,
    (byte) 21,
    (byte) 63,
    (byte) 65,
    (byte) 195,
    (byte) 94,
    (byte) 226,
    (byte) 61,
    (byte) 71,
    (byte) 201,
    (byte) 64,
    (byte) 192,
    (byte) 91,
    (byte) 237,
    (byte) 44,
    (byte) 116,
    (byte) 156,
    (byte) 191,
    (byte) 218,
    (byte) 117,
    (byte) 159,
    (byte) 186,
    (byte) 213,
    (byte) 100,
    (byte) 172,
    (byte) 239,
    (byte) 42,
    (byte) 126,
    (byte) 130,
    (byte) 157,
    (byte) 188,
    (byte) 223,
    (byte) 122,
    (byte) 142,
    (byte) 137,
    (byte) 128,
    (byte) 155,
    (byte) 182,
    (byte) 193,
    (byte) 88,
    (byte) 232,
    (byte) 35,
    (byte) 101,
    (byte) 175,
    (byte) 234,
    (byte) 37,
    (byte) 111,
    (byte) 177,
    (byte) 200,
    (byte) 67,
    (byte) 197,
    (byte) 84,
    (byte) 252,
    (byte) 31,
    (byte) 33,
    (byte) 99,
    (byte) 165,
    (byte) 244,
    (byte) 7,
    (byte) 9,
    (byte) 27,
    (byte) 45,
    (byte) 119,
    (byte) 153,
    (byte) 176,
    (byte) 203,
    (byte) 70,
    (byte) 202,
    (byte) 69,
    (byte) 207,
    (byte) 74,
    (byte) 222,
    (byte) 121,
    (byte) 139,
    (byte) 134,
    (byte) 145,
    (byte) 168,
    (byte) 227,
    (byte) 62,
    (byte) 66,
    (byte) 198,
    (byte) 81,
    (byte) 243,
    (byte) 14,
    (byte) 18,
    (byte) 54,
    (byte) 90,
    (byte) 238,
    (byte) 41,
    (byte) 123,
    (byte) 141,
    (byte) 140,
    (byte) 143,
    (byte) 138,
    (byte) 133,
    (byte) 148,
    (byte) 167,
    (byte) 242,
    (byte) 13,
    (byte) 23,
    (byte) 57,
    (byte) 75,
    (byte) 221,
    (byte) 124,
    (byte) 132,
    (byte) 151,
    (byte) 162,
    (byte) 253,
    (byte) 28,
    (byte) 36,
    (byte) 108,
    (byte) 180,
    (byte) 199,
    (byte) 82,
    (byte) 246,
    (byte) 1
  };
  private static readonly byte[] \u202D‌‪‍‌‌‎​‍‎‫⁫‎‌‎‮‌‎‭‫⁪‮⁫‎‌⁭‬‭⁬‍‬‪‬‎‪⁯‮⁯‎‌‮ = new byte[256]
  {
    (byte) 99,
    (byte) 124,
    (byte) 119,
    (byte) 123,
    (byte) 242,
    (byte) 107,
    (byte) 111,
    (byte) 197,
    (byte) 48,
    (byte) 1,
    (byte) 103,
    (byte) 43,
    (byte) 254,
    (byte) 215,
    (byte) 171,
    (byte) 118,
    (byte) 202,
    (byte) 130,
    (byte) 201,
    (byte) 125,
    (byte) 250,
    (byte) 89,
    (byte) 71,
    (byte) 240,
    (byte) 173,
    (byte) 212,
    (byte) 162,
    (byte) 175,
    (byte) 156,
    (byte) 164,
    (byte) 114,
    (byte) 192,
    (byte) 183,
    (byte) 253,
    (byte) 147,
    (byte) 38,
    (byte) 54,
    (byte) 63,
    (byte) 247,
    (byte) 204,
    (byte) 52,
    (byte) 165,
    (byte) 229,
    (byte) 241,
    (byte) 113,
    (byte) 216,
    (byte) 49,
    (byte) 21,
    (byte) 4,
    (byte) 199,
    (byte) 35,
    (byte) 195,
    (byte) 24,
    (byte) 150,
    (byte) 5,
    (byte) 154,
    (byte) 7,
    (byte) 18,
    (byte) 128,
    (byte) 226,
    (byte) 235,
    (byte) 39,
    (byte) 178,
    (byte) 117,
    (byte) 9,
    (byte) 131,
    (byte) 44,
    (byte) 26,
    (byte) 27,
    (byte) 110,
    (byte) 90,
    (byte) 160,
    (byte) 82,
    (byte) 59,
    (byte) 214,
    (byte) 179,
    (byte) 41,
    (byte) 227,
    (byte) 47,
    (byte) 132,
    (byte) 83,
    (byte) 209,
    (byte) 0,
    (byte) 237,
    (byte) 32,
    (byte) 252,
    (byte) 177,
    (byte) 91,
    (byte) 106,
    (byte) 203,
    (byte) 190,
    (byte) 57,
    (byte) 74,
    (byte) 76,
    (byte) 88,
    (byte) 207,
    (byte) 208,
    (byte) 239,
    (byte) 170,
    (byte) 251,
    (byte) 67,
    (byte) 77,
    (byte) 51,
    (byte) 133,
    (byte) 69,
    (byte) 249,
    (byte) 2,
    (byte) 127,
    (byte) 80,
    (byte) 60,
    (byte) 159,
    (byte) 168,
    (byte) 81,
    (byte) 163,
    (byte) 64,
    (byte) 143,
    (byte) 146,
    (byte) 157,
    (byte) 56,
    (byte) 245,
    (byte) 188,
    (byte) 182,
    (byte) 218,
    (byte) 33,
    (byte) 16,
    byte.MaxValue,
    (byte) 243,
    (byte) 210,
    (byte) 205,
    (byte) 12,
    (byte) 19,
    (byte) 236,
    (byte) 95,
    (byte) 151,
    (byte) 68,
    (byte) 23,
    (byte) 196,
    (byte) 167,
    (byte) 126,
    (byte) 61,
    (byte) 100,
    (byte) 93,
    (byte) 25,
    (byte) 115,
    (byte) 96,
    (byte) 129,
    (byte) 79,
    (byte) 220,
    (byte) 34,
    (byte) 42,
    (byte) 144,
    (byte) 136,
    (byte) 70,
    (byte) 238,
    (byte) 184,
    (byte) 20,
    (byte) 222,
    (byte) 94,
    (byte) 11,
    (byte) 219,
    (byte) 224,
    (byte) 50,
    (byte) 58,
    (byte) 10,
    (byte) 73,
    (byte) 6,
    (byte) 36,
    (byte) 92,
    (byte) 194,
    (byte) 211,
    (byte) 172,
    (byte) 98,
    (byte) 145,
    (byte) 149,
    (byte) 228,
    (byte) 121,
    (byte) 231,
    (byte) 200,
    (byte) 55,
    (byte) 109,
    (byte) 141,
    (byte) 213,
    (byte) 78,
    (byte) 169,
    (byte) 108,
    (byte) 86,
    (byte) 244,
    (byte) 234,
    (byte) 101,
    (byte) 122,
    (byte) 174,
    (byte) 8,
    (byte) 186,
    (byte) 120,
    (byte) 37,
    (byte) 46,
    (byte) 28,
    (byte) 166,
    (byte) 180,
    (byte) 198,
    (byte) 232,
    (byte) 221,
    (byte) 116,
    (byte) 31,
    (byte) 75,
    (byte) 189,
    (byte) 139,
    (byte) 138,
    (byte) 112,
    (byte) 62,
    (byte) 181,
    (byte) 102,
    (byte) 72,
    (byte) 3,
    (byte) 246,
    (byte) 14,
    (byte) 97,
    (byte) 53,
    (byte) 87,
    (byte) 185,
    (byte) 134,
    (byte) 193,
    (byte) 29,
    (byte) 158,
    (byte) 225,
    (byte) 248,
    (byte) 152,
    (byte) 17,
    (byte) 105,
    (byte) 217,
    (byte) 142,
    (byte) 148,
    (byte) 155,
    (byte) 30,
    (byte) 135,
    (byte) 233,
    (byte) 206,
    (byte) 85,
    (byte) 40,
    (byte) 223,
    (byte) 140,
    (byte) 161,
    (byte) 137,
    (byte) 13,
    (byte) 191,
    (byte) 230,
    (byte) 66,
    (byte) 104,
    (byte) 65,
    (byte) 153,
    (byte) 45,
    (byte) 15,
    (byte) 176,
    (byte) 84,
    (byte) 187,
    (byte) 22
  };
  private static readonly byte[] \u206E‌⁮‮‪‫‍‏‎‮‮⁭‬‏⁭⁮‮‮⁮‭‏‌‌⁭‬‏⁭‭‎‏‏⁭‌⁯‭⁮⁫‏⁬‫‮ = new byte[256]
  {
    (byte) 82,
    (byte) 9,
    (byte) 106,
    (byte) 213,
    (byte) 48,
    (byte) 54,
    (byte) 165,
    (byte) 56,
    (byte) 191,
    (byte) 64,
    (byte) 163,
    (byte) 158,
    (byte) 129,
    (byte) 243,
    (byte) 215,
    (byte) 251,
    (byte) 124,
    (byte) 227,
    (byte) 57,
    (byte) 130,
    (byte) 155,
    (byte) 47,
    byte.MaxValue,
    (byte) 135,
    (byte) 52,
    (byte) 142,
    (byte) 67,
    (byte) 68,
    (byte) 196,
    (byte) 222,
    (byte) 233,
    (byte) 203,
    (byte) 84,
    (byte) 123,
    (byte) 148,
    (byte) 50,
    (byte) 166,
    (byte) 194,
    (byte) 35,
    (byte) 61,
    (byte) 238,
    (byte) 76,
    (byte) 149,
    (byte) 11,
    (byte) 66,
    (byte) 250,
    (byte) 195,
    (byte) 78,
    (byte) 8,
    (byte) 46,
    (byte) 161,
    (byte) 102,
    (byte) 40,
    (byte) 217,
    (byte) 36,
    (byte) 178,
    (byte) 118,
    (byte) 91,
    (byte) 162,
    (byte) 73,
    (byte) 109,
    (byte) 139,
    (byte) 209,
    (byte) 37,
    (byte) 114,
    (byte) 248,
    (byte) 246,
    (byte) 100,
    (byte) 134,
    (byte) 104,
    (byte) 152,
    (byte) 22,
    (byte) 212,
    (byte) 164,
    (byte) 92,
    (byte) 204,
    (byte) 93,
    (byte) 101,
    (byte) 182,
    (byte) 146,
    (byte) 108,
    (byte) 112,
    (byte) 72,
    (byte) 80,
    (byte) 253,
    (byte) 237,
    (byte) 185,
    (byte) 218,
    (byte) 94,
    (byte) 21,
    (byte) 70,
    (byte) 87,
    (byte) 167,
    (byte) 141,
    (byte) 157,
    (byte) 132,
    (byte) 144,
    (byte) 216,
    (byte) 171,
    (byte) 0,
    (byte) 140,
    (byte) 188,
    (byte) 211,
    (byte) 10,
    (byte) 247,
    (byte) 228,
    (byte) 88,
    (byte) 5,
    (byte) 184,
    (byte) 179,
    (byte) 69,
    (byte) 6,
    (byte) 208,
    (byte) 44,
    (byte) 30,
    (byte) 143,
    (byte) 202,
    (byte) 63,
    (byte) 15,
    (byte) 2,
    (byte) 193,
    (byte) 175,
    (byte) 189,
    (byte) 3,
    (byte) 1,
    (byte) 19,
    (byte) 138,
    (byte) 107,
    (byte) 58,
    (byte) 145,
    (byte) 17,
    (byte) 65,
    (byte) 79,
    (byte) 103,
    (byte) 220,
    (byte) 234,
    (byte) 151,
    (byte) 242,
    (byte) 207,
    (byte) 206,
    (byte) 240,
    (byte) 180,
    (byte) 230,
    (byte) 115,
    (byte) 150,
    (byte) 172,
    (byte) 116,
    (byte) 34,
    (byte) 231,
    (byte) 173,
    (byte) 53,
    (byte) 133,
    (byte) 226,
    (byte) 249,
    (byte) 55,
    (byte) 232,
    (byte) 28,
    (byte) 117,
    (byte) 223,
    (byte) 110,
    (byte) 71,
    (byte) 241,
    (byte) 26,
    (byte) 113,
    (byte) 29,
    (byte) 41,
    (byte) 197,
    (byte) 137,
    (byte) 111,
    (byte) 183,
    (byte) 98,
    (byte) 14,
    (byte) 170,
    (byte) 24,
    (byte) 190,
    (byte) 27,
    (byte) 252,
    (byte) 86,
    (byte) 62,
    (byte) 75,
    (byte) 198,
    (byte) 210,
    (byte) 121,
    (byte) 32,
    (byte) 154,
    (byte) 219,
    (byte) 192,
    (byte) 254,
    (byte) 120,
    (byte) 205,
    (byte) 90,
    (byte) 244,
    (byte) 31,
    (byte) 221,
    (byte) 168,
    (byte) 51,
    (byte) 136,
    (byte) 7,
    (byte) 199,
    (byte) 49,
    (byte) 177,
    (byte) 18,
    (byte) 16,
    (byte) 89,
    (byte) 39,
    (byte) 128,
    (byte) 236,
    (byte) 95,
    (byte) 96,
    (byte) 81,
    (byte) 127,
    (byte) 169,
    (byte) 25,
    (byte) 181,
    (byte) 74,
    (byte) 13,
    (byte) 45,
    (byte) 229,
    (byte) 122,
    (byte) 159,
    (byte) 147,
    (byte) 201,
    (byte) 156,
    (byte) 239,
    (byte) 160,
    (byte) 224,
    (byte) 59,
    (byte) 77,
    (byte) 174,
    (byte) 42,
    (byte) 245,
    (byte) 176,
    (byte) 200,
    (byte) 235,
    (byte) 187,
    (byte) 60,
    (byte) 131,
    (byte) 83,
    (byte) 153,
    (byte) 97,
    (byte) 23,
    (byte) 43,
    (byte) 4,
    (byte) 126,
    (byte) 186,
    (byte) 119,
    (byte) 214,
    (byte) 38,
    (byte) 225,
    (byte) 105,
    (byte) 20,
    (byte) 99,
    (byte) 85,
    (byte) 33,
    (byte) 12,
    (byte) 125
  };
  private static readonly byte[] \u202D‪‪⁪‫‎‭‪‎‎‏⁫⁪‎‪​‭⁬‫‎⁫‭⁭⁯‍​‌‪​‎‮⁭‭⁫‮⁭⁯‫‪⁬‮ = new byte[30]
  {
    (byte) 1,
    (byte) 2,
    (byte) 4,
    (byte) 8,
    (byte) 16,
    (byte) 32,
    (byte) 64,
    (byte) 128,
    (byte) 27,
    (byte) 54,
    (byte) 108,
    (byte) 216,
    (byte) 171,
    (byte) 77,
    (byte) 154,
    (byte) 47,
    (byte) 94,
    (byte) 188,
    (byte) 99,
    (byte) 198,
    (byte) 151,
    (byte) 53,
    (byte) 106,
    (byte) 212,
    (byte) 179,
    (byte) 125,
    (byte) 250,
    (byte) 239,
    (byte) 197,
    (byte) 145
  };
  private static readonly byte[][] \u202B‌⁪⁫‌⁫⁫‫⁭‍⁮⁮⁭⁫⁫⁫⁯⁫⁫​‭⁪‍⁬‎‎⁪‬‭‬‍‍⁮⁬‍‮​⁭‭‭‮ = new byte[5][]
  {
    new byte[4]{ (byte) 0, (byte) 8, (byte) 16, (byte) 24 },
    new byte[4]{ (byte) 0, (byte) 8, (byte) 16, (byte) 24 },
    new byte[4]{ (byte) 0, (byte) 8, (byte) 16, (byte) 24 },
    new byte[4]{ (byte) 0, (byte) 8, (byte) 16, (byte) 32 },
    new byte[4]{ (byte) 0, (byte) 8, (byte) 24, (byte) 32 }
  };
  private static readonly byte[][] \u206E‬‮‬‮​‫⁫‌‎⁭⁭⁬‫‫⁯⁮‏‭‌‫‬⁪⁫​‍⁫​⁯⁯⁬‫‪⁪‮‫⁪‪⁬‫‮ = new byte[5][]
  {
    new byte[4]{ (byte) 0, (byte) 24, (byte) 16, (byte) 8 },
    new byte[4]{ (byte) 0, (byte) 32, (byte) 24, (byte) 16 },
    new byte[4]{ (byte) 0, (byte) 40, (byte) 32, (byte) 24 },
    new byte[4]{ (byte) 0, (byte) 48, (byte) 40, (byte) 24 },
    new byte[4]{ (byte) 0, (byte) 56, (byte) 40, (byte) 32 }
  };
  private int \u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮;
  private long \u202B‎‬‭‮‍‫⁬⁯‌‫‮‍⁯⁫‭‫‮‍⁪⁮‫‪​⁮⁫‫⁯⁫‮‍‫‎‪‍‬‭‮;
  private int \u206E⁮⁮⁮⁫‮​⁯‎⁬⁮‌⁮‬​‮⁭⁫⁬‭‭⁮‌⁯⁫‪‭‏‫‎⁯‍‪‫⁫‎​‭‏‬‮;
  private int \u200B⁭⁫⁯⁯‬‭⁯⁫⁫‏‮‮⁪‫⁭‎⁬‏‮​‌‮‭‌‭⁭‍‪‪‮​⁫‬‫⁯⁫⁪‭⁭‮;
  private long[][] \u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮;
  private long \u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮;
  private long \u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮;
  private long \u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮;
  private long \u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮;
  private bool \u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮;
  private byte[] \u206F⁮⁯‎⁪‏‬‏⁪‍‏‪​⁫‎‫‏‌⁭‬⁪‍‮‬‬‮‌⁬⁭⁪⁫‏‍‬‮⁮‌‫‏‍‮;
  private byte[] \u202B‎‪⁫​⁮‪‮‍‏‮‭‭‍⁭⁬⁫⁭‏⁯‏‫‍⁪‏‎‮⁬‭‮‎‪‪‬‫‮‪‌⁫‏‮;

  private byte \u200E​‏⁫⁬⁬⁮⁮‌⁬‌⁯‫‍‪‮‫⁭⁭⁬‌⁭⁯‎‭⁯⁬‬⁫⁭⁪⁪‫⁪​‎⁯⁬‍⁭‮(int _param1) => _param1 != 0 ? \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206B⁯​‌‎‮​‍⁪⁯‫⁫‪⁫‭⁪‏‬‫‏‫‮‎⁮⁮‪⁯‌‮​⁭⁫‬⁪⁪⁬‪​‌‎‮[25 + ((int) \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202A⁪‍​‭‮‮‍⁮‫‬‌⁫⁬‫‮⁯⁭‍⁭‭‏⁫⁫‎⁫‫⁮⁯‎‭‌‬⁮⁮​‏​‫‬‮[_param1] & (int) byte.MaxValue)] : (byte) 0;

  private byte \u200D⁭‬‏​⁬‏​‍​⁭⁪⁮‮⁮⁮‫‏⁭‎​‪‎⁪‏⁯‏‭‪⁫‮⁮‌⁬‬‎‏⁮‬‏‮(int _param1) => _param1 != 0 ? \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206B⁯​‌‎‮​‍⁪⁯‫⁫‪⁫‭⁪‏‬‫‏‫‮‎⁮⁮‪⁯‌‮​⁭⁫‬⁪⁪⁬‪​‌‎‮[1 + ((int) \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202A⁪‍​‭‮‮‍⁮‫‬‌⁫⁬‫‮⁯⁭‍⁭‭‏⁫⁫‎⁫‫⁮⁯‎‭‌‬⁮⁮​‏​‫‬‮[_param1] & (int) byte.MaxValue)] : (byte) 0;

  private byte \u200E‍⁭‬‬‪‮‬⁮⁬⁬‭‎‏⁪⁬‍⁫⁯‮​​‏​‮‌⁪‌⁮​‎​‌⁮‍​‌‍⁭‏‮(int _param1) => _param1 >= 0 ? \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206B⁯​‌‎‮​‍⁪⁯‫⁫‪⁫‭⁪‏‬‫‏‫‮‎⁮⁮‪⁯‌‮​⁭⁫‬⁪⁪⁬‪​‌‎‮[199 + _param1] : (byte) 0;

  private byte \u206D⁮⁪⁮‪‭‍⁫‬⁮‎‮‍‭‎​⁪‬‪⁭‫⁬​⁬​‫⁮‎‍⁭⁪⁮⁬⁬‌‍⁫‏⁭‮(int _param1) => _param1 >= 0 ? \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206B⁯​‌‎‮​‍⁪⁯‫⁫‪⁫‭⁪‏‬‫‏‫‮‎⁮⁮‪⁯‌‮​⁭⁫‬⁪⁪⁬‪​‌‎‮[104 + _param1] : (byte) 0;

  private byte \u206D⁮‏‭‬‍⁯‍‬⁮⁪‍‮​⁯‎​‭⁮⁯⁫⁭‪⁮‍‏⁯‏‍⁫⁮‌‌⁬‎⁮‍⁫‫⁫‮(int _param1) => _param1 >= 0 ? \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206B⁯​‌‎‮​‍⁪⁯‫⁫‪⁫‭⁪‏‬‫‏‫‮‎⁮⁮‪⁯‌‮​⁭⁫‬⁪⁪⁬‪​‌‎‮[238 + _param1] : (byte) 0;

  private byte \u200C‬⁮‭⁫‌⁫‌⁬⁭‍​⁪⁪‭‮‪‭‏⁫⁪⁭⁫‌‍⁫‪‬⁯⁭‍⁭⁭‬⁮⁬‎‫‏‮‮(int _param1) => _param1 >= 0 ? \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206B⁯​‌‎‮​‍⁪⁯‫⁫‪⁫‭⁪‏‬‫‏‫‮‎⁮⁮‪⁯‌‮​⁭⁫‬⁪⁪⁬‪​‌‎‮[223 + _param1] : (byte) 0;

  private void \u200E⁭‪‌‬⁯‏⁪​‌‭‮​​⁯‭‭‮‭⁫‍‪⁬⁫‮‮‎‎​⁮‏‭‎‏⁯‏‍⁪⁮‎‮(long[] _param1)
  {
    this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮ ^= _param1[0];
    this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮ ^= _param1[1];
    this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮ ^= _param1[2];
    this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮ ^= _param1[3];
  }

  private long \u206F‍‌⁫‍‪⁫‏‮‮⁪⁫⁯⁯‬‮‪‫⁭⁭⁬‌‪‭⁯‫‮⁫⁯‫‏‏‫‏⁫‎‪‌​‪‮(long _param1, int _param2)
  {
    ulong num = (ulong) _param1 >> _param2;
    if (_param2 > 31)
      num &= (ulong) uint.MaxValue;
    return ((long) num | _param1 << this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ - _param2) & this.\u202B‎‬‭‮‍‫⁬⁯‌‫‮‍⁯⁫‭‫‮‍⁪⁮‫‪​⁮⁫‫⁯⁫‮‍‫‎‪‍‬‭‮;
  }

  private void \u200E‏⁮‎⁮⁫‮‪‮⁭⁫⁫‪⁫‫⁫⁬‭‫⁮⁭‮‫⁪⁬‪‪‎⁪⁫‪⁯‭‎⁯‫⁭‭‫‎‮(byte[] _param1)
  {
    this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮ = this.\u206F‍‌⁫‍‪⁫‏‮‮⁪⁫⁯⁯‬‮‪‫⁭⁭⁬‌‪‭⁯‫‮⁫⁯‫‏‏‫‏⁫‎‪‌​‪‮(this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮, (int) _param1[1]);
    this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮ = this.\u206F‍‌⁫‍‪⁫‏‮‮⁪⁫⁯⁯‬‮‪‫⁭⁭⁬‌‪‭⁯‫‮⁫⁯‫‏‏‫‏⁫‎‪‌​‪‮(this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮, (int) _param1[2]);
    this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮ = this.\u206F‍‌⁫‍‪⁫‏‮‮⁪⁫⁯⁯‬‮‪‫⁭⁭⁬‌‪‭⁯‫‮⁫⁯‫‏‏‫‏⁫‎‪‌​‪‮(this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮, (int) _param1[3]);
  }

  private long \u200B⁭‭‫‏⁮‌⁮‭​‪⁯‮‬⁬‍⁮⁮‭‫‌‌‍⁯‏​‮⁭‮​‭⁯⁮⁬⁯⁭⁫⁯⁮‭‮(long _param1, byte[] _param2)
  {
    long num = 0;
    for (int index = 0; index < this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮; index += 8)
      num |= (long) ((int) _param2[(int) (_param1 >> index & (long) byte.MaxValue)] & (int) byte.MaxValue) << index;
    return num;
  }

  private void \u206D​‏‪‎⁬⁭‮⁬‎‭⁭⁬‫‬⁬⁭‪‏‭⁫‭‌⁭⁭‬‎​‏‬‍⁮⁫‭⁮‏⁮‌​‌‮(byte[] _param1)
  {
    this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮ = this.\u200B⁭‭‫‏⁮‌⁮‭​‪⁯‮‬⁬‍⁮⁮‭‫‌‌‍⁯‏​‮⁭‮​‭⁯⁮⁬⁯⁭⁫⁯⁮‭‮(this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮, _param1);
    this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮ = this.\u200B⁭‭‫‏⁮‌⁮‭​‪⁯‮‬⁬‍⁮⁮‭‫‌‌‍⁯‏​‮⁭‮​‭⁯⁮⁬⁯⁭⁫⁯⁮‭‮(this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮, _param1);
    this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮ = this.\u200B⁭‭‫‏⁮‌⁮‭​‪⁯‮‬⁬‍⁮⁮‭‫‌‌‍⁯‏​‮⁭‮​‭⁯⁮⁬⁯⁭⁫⁯⁮‭‮(this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮, _param1);
    this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮ = this.\u200B⁭‭‫‏⁮‌⁮‭​‪⁯‮‬⁬‍⁮⁮‭‫‌‌‍⁯‏​‮⁭‮​‭⁯⁮⁬⁯⁭⁫⁯⁮‭‮(this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮, _param1);
  }

  private void \u200C‌⁪‫‫‬‮⁮⁮‮‏‪⁫‭‏⁯⁯‪⁯⁯⁯⁫‭‬‫⁯‍‫‫‫⁮‏‬⁮‌‎‏⁪⁬⁯‮()
  {
    long num1;
    long num2 = num1 = 0L;
    long num3 = num1;
    long num4 = num1;
    long num5 = num1;
    for (int index = 0; index < this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮; index += 8)
    {
      int num6 = (int) (this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮ >> index & (long) byte.MaxValue);
      int num7 = (int) (this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮ >> index & (long) byte.MaxValue);
      int num8 = (int) (this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮ >> index & (long) byte.MaxValue);
      int num9 = (int) (this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮ >> index & (long) byte.MaxValue);
      num5 |= (long) (((int) this.\u200E​‏⁫⁬⁬⁮⁮‌⁬‌⁯‫‍‪‮‫⁭⁭⁬‌⁭⁯‎‭⁯⁬‬⁫⁭⁪⁪‫⁪​‎⁯⁬‍⁭‮(num6) ^ (int) this.\u200D⁭‬‏​⁬‏​‍​⁭⁪⁮‮⁮⁮‫‏⁭‎​‪‎⁪‏⁯‏‭‪⁫‮⁮‌⁬‬‎‏⁮‬‏‮(num7) ^ num8 ^ num9) & (int) byte.MaxValue) << index;
      num4 |= (long) (((int) this.\u200E​‏⁫⁬⁬⁮⁮‌⁬‌⁯‫‍‪‮‫⁭⁭⁬‌⁭⁯‎‭⁯⁬‬⁫⁭⁪⁪‫⁪​‎⁯⁬‍⁭‮(num7) ^ (int) this.\u200D⁭‬‏​⁬‏​‍​⁭⁪⁮‮⁮⁮‫‏⁭‎​‪‎⁪‏⁯‏‭‪⁫‮⁮‌⁬‬‎‏⁮‬‏‮(num8) ^ num9 ^ num6) & (int) byte.MaxValue) << index;
      num3 |= (long) (((int) this.\u200E​‏⁫⁬⁬⁮⁮‌⁬‌⁯‫‍‪‮‫⁭⁭⁬‌⁭⁯‎‭⁯⁬‬⁫⁭⁪⁪‫⁪​‎⁯⁬‍⁭‮(num8) ^ (int) this.\u200D⁭‬‏​⁬‏​‍​⁭⁪⁮‮⁮⁮‫‏⁭‎​‪‎⁪‏⁯‏‭‪⁫‮⁮‌⁬‬‎‏⁮‬‏‮(num9) ^ num6 ^ num7) & (int) byte.MaxValue) << index;
      num2 |= (long) (((int) this.\u200E​‏⁫⁬⁬⁮⁮‌⁬‌⁯‫‍‪‮‫⁭⁭⁬‌⁭⁯‎‭⁯⁬‬⁫⁭⁪⁪‫⁪​‎⁯⁬‍⁭‮(num9) ^ (int) this.\u200D⁭‬‏​⁬‏​‍​⁭⁪⁮‮⁮⁮‫‏⁭‎​‪‎⁪‏⁯‏‭‪⁫‮⁮‌⁬‬‎‏⁮‬‏‮(num6) ^ num7 ^ num8) & (int) byte.MaxValue) << index;
    }
    this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮ = num5;
    this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮ = num4;
    this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮ = num3;
    this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮ = num2;
  }

  private void \u206B‎​‍⁪‬‬⁫⁬‮‪‍⁫⁪‫​⁬‬‭‪‬⁪​⁬‎‏⁮⁫‏‮‫‌⁪⁬⁬‬‍‬‎‪‮()
  {
    long num1;
    long num2 = num1 = 0L;
    long num3 = num1;
    long num4 = num1;
    long num5 = num1;
    for (int index = 0; index < this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮; index += 8)
    {
      int num6 = (int) (this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮ >> index & (long) byte.MaxValue);
      int num7 = (int) (this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮ >> index & (long) byte.MaxValue);
      int num8 = (int) (this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮ >> index & (long) byte.MaxValue);
      int num9 = (int) (this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮ >> index & (long) byte.MaxValue);
      int num10 = num6 != 0 ? (int) \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202A⁪‍​‭‮‮‍⁮‫‬‌⁫⁬‫‮⁯⁭‍⁭‭‏⁫⁫‎⁫‫⁮⁯‎‭‌‬⁮⁮​‏​‫‬‮[num6 & (int) byte.MaxValue] & (int) byte.MaxValue : -1;
      int num11 = num7 != 0 ? (int) \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202A⁪‍​‭‮‮‍⁮‫‬‌⁫⁬‫‮⁯⁭‍⁭‭‏⁫⁫‎⁫‫⁮⁯‎‭‌‬⁮⁮​‏​‫‬‮[num7 & (int) byte.MaxValue] & (int) byte.MaxValue : -1;
      int num12 = num8 != 0 ? (int) \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202A⁪‍​‭‮‮‍⁮‫‬‌⁫⁬‫‮⁯⁭‍⁭‭‏⁫⁫‎⁫‫⁮⁯‎‭‌‬⁮⁮​‏​‫‬‮[num8 & (int) byte.MaxValue] & (int) byte.MaxValue : -1;
      int num13 = num9 != 0 ? (int) \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202A⁪‍​‭‮‮‍⁮‫‬‌⁫⁬‫‮⁯⁭‍⁭‭‏⁫⁫‎⁫‫⁮⁯‎‭‌‬⁮⁮​‏​‫‬‮[num9 & (int) byte.MaxValue] & (int) byte.MaxValue : -1;
      num5 |= (long) (((int) this.\u200C‬⁮‭⁫‌⁫‌⁬⁭‍​⁪⁪‭‮‪‭‏⁫⁪⁭⁫‌‍⁫‪‬⁯⁭‍⁭⁭‬⁮⁬‎‫‏‮‮(num10) ^ (int) this.\u206D⁮⁪⁮‪‭‍⁫‬⁮‎‮‍‭‎​⁪‬‪⁭‫⁬​⁬​‫⁮‎‍⁭⁪⁮⁬⁬‌‍⁫‏⁭‮(num11) ^ (int) this.\u206D⁮‏‭‬‍⁯‍‬⁮⁪‍‮​⁯‎​‭⁮⁯⁫⁭‪⁮‍‏⁯‏‍⁫⁮‌‌⁬‎⁮‍⁫‫⁫‮(num12) ^ (int) this.\u200E‍⁭‬‬‪‮‬⁮⁬⁬‭‎‏⁪⁬‍⁫⁯‮​​‏​‮‌⁪‌⁮​‎​‌⁮‍​‌‍⁭‏‮(num13)) & (int) byte.MaxValue) << index;
      num4 |= (long) (((int) this.\u200C‬⁮‭⁫‌⁫‌⁬⁭‍​⁪⁪‭‮‪‭‏⁫⁪⁭⁫‌‍⁫‪‬⁯⁭‍⁭⁭‬⁮⁬‎‫‏‮‮(num11) ^ (int) this.\u206D⁮⁪⁮‪‭‍⁫‬⁮‎‮‍‭‎​⁪‬‪⁭‫⁬​⁬​‫⁮‎‍⁭⁪⁮⁬⁬‌‍⁫‏⁭‮(num12) ^ (int) this.\u206D⁮‏‭‬‍⁯‍‬⁮⁪‍‮​⁯‎​‭⁮⁯⁫⁭‪⁮‍‏⁯‏‍⁫⁮‌‌⁬‎⁮‍⁫‫⁫‮(num13) ^ (int) this.\u200E‍⁭‬‬‪‮‬⁮⁬⁬‭‎‏⁪⁬‍⁫⁯‮​​‏​‮‌⁪‌⁮​‎​‌⁮‍​‌‍⁭‏‮(num10)) & (int) byte.MaxValue) << index;
      num3 |= (long) (((int) this.\u200C‬⁮‭⁫‌⁫‌⁬⁭‍​⁪⁪‭‮‪‭‏⁫⁪⁭⁫‌‍⁫‪‬⁯⁭‍⁭⁭‬⁮⁬‎‫‏‮‮(num12) ^ (int) this.\u206D⁮⁪⁮‪‭‍⁫‬⁮‎‮‍‭‎​⁪‬‪⁭‫⁬​⁬​‫⁮‎‍⁭⁪⁮⁬⁬‌‍⁫‏⁭‮(num13) ^ (int) this.\u206D⁮‏‭‬‍⁯‍‬⁮⁪‍‮​⁯‎​‭⁮⁯⁫⁭‪⁮‍‏⁯‏‍⁫⁮‌‌⁬‎⁮‍⁫‫⁫‮(num10) ^ (int) this.\u200E‍⁭‬‬‪‮‬⁮⁬⁬‭‎‏⁪⁬‍⁫⁯‮​​‏​‮‌⁪‌⁮​‎​‌⁮‍​‌‍⁭‏‮(num11)) & (int) byte.MaxValue) << index;
      num2 |= (long) (((int) this.\u200C‬⁮‭⁫‌⁫‌⁬⁭‍​⁪⁪‭‮‪‭‏⁫⁪⁭⁫‌‍⁫‪‬⁯⁭‍⁭⁭‬⁮⁬‎‫‏‮‮(num13) ^ (int) this.\u206D⁮⁪⁮‪‭‍⁫‬⁮‎‮‍‭‎​⁪‬‪⁭‫⁬​⁬​‫⁮‎‍⁭⁪⁮⁬⁬‌‍⁫‏⁭‮(num10) ^ (int) this.\u206D⁮‏‭‬‍⁯‍‬⁮⁪‍‮​⁯‎​‭⁮⁯⁫⁭‪⁮‍‏⁯‏‍⁫⁮‌‌⁬‎⁮‍⁫‫⁫‮(num11) ^ (int) this.\u200E‍⁭‬‬‪‮‬⁮⁬⁬‭‎‏⁪⁬‍⁫⁯‮​​‏​‮‌⁪‌⁮​‎​‌⁮‍​‌‍⁭‏‮(num12)) & (int) byte.MaxValue) << index;
    }
    this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮ = num5;
    this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮ = num4;
    this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮ = num3;
    this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮ = num2;
  }

  private long[][] \u206F‌‌‌‫‎‪⁪⁫‎⁪​‫‎⁪⁯⁪‮‎‪⁬‫‪‫⁫‎⁮‍⁫⁭‭⁮⁯⁫⁯⁭‎‪⁬‭‮(byte[] _param1)
  {
    int num1 = 0;
    int num2 = _param1.Length * 8;
    byte[,] numArray1 = new byte[4, \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202C‫‬⁬⁭‮‬‍‮‍‮‬⁮‫⁮‌‌‌⁮⁫⁭​⁬⁪⁪⁮‍‬‪⁪​‬⁮​‪⁪​‍⁪‫‮];
    long[][] numArray2 = new long[\u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206C‫‎‬⁬​‌⁫⁬⁯​‭‎‌‮‌⁬​‪‎⁮⁭⁮‎⁯‏‍‬⁬‮‫​‍‏‬⁭‪‌‭‪‮ + 1][];
    for (int index = 0; index < \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206C‫‎‬⁬​‌⁫⁬⁯​‭‎‌‮‌⁬​‪‎⁮⁭⁮‎⁯‏‍‬⁬‮‫​‍‏‬⁭‪‌‭‪‮ + 1; ++index)
      numArray2[index] = new long[4];
    int num3;
    switch (num2)
    {
      case 128:
        num3 = 4;
        break;
      case 160:
        num3 = 5;
        break;
      case 192:
        num3 = 6;
        break;
      case 224:
        num3 = 7;
        break;
      case 256:
        num3 = 8;
        break;
      default:
        throw new ArgumentException("Key length not 128/160/192/224/256 bits.");
    }
    this.\u206E⁮⁮⁮⁫‮​⁯‎⁬⁮‌⁮‬​‮⁭⁫⁬‭‭⁮‌⁯⁫‪‭‏‫‎⁯‍‪‫⁫‎​‭‏‬‮ = num2 < this.\u200B⁭⁫⁯⁯‬‭⁯⁫⁫‏‮‮⁪‫⁭‎⁬‏‮​‌‮‭‌‭⁭‍‪‪‮​⁫‬‫⁯⁫⁪‭⁭‮ ? this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ / 8 + 6 : num3 + 6;
    int num4 = 0;
    for (int index = 0; index < _param1.Length; ++index)
      numArray1[index % 4, index / 4] = _param1[num4++];
    int num5 = 0;
    for (int index1 = 0; index1 < num3 && num5 < (this.\u206E⁮⁮⁮⁫‮​⁯‎⁬⁮‌⁮‬​‮⁭⁫⁬‭‭⁮‌⁯⁫‪‭‏‫‎⁯‍‪‫⁫‎​‭‏‬‮ + 1) * (this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ / 8); ++num5)
    {
      for (int index2 = 0; index2 < 4; ++index2)
        numArray2[num5 / (this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ / 8)][index2] |= (long) ((int) numArray1[index2, index1] & (int) byte.MaxValue) << num5 * 8 % this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮;
      ++index1;
    }
label_50:
    while (num5 < (this.\u206E⁮⁮⁮⁫‮​⁯‎⁬⁮‌⁮‬​‮⁭⁫⁬‭‭⁮‌⁯⁫‪‭‏‫‎⁯‍‪‫⁫‎​‭‏‬‮ + 1) * (this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ / 8))
    {
      for (int index = 0; index < 4; ++index)
        numArray1[index, 0] ^= \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202D‌‪‍‌‌‎​‍‎‫⁫‎‌‎‮‌‎‭‫⁪‮⁫‎‌⁭‬‭⁬‍‬‪‬‎‪⁯‮⁯‎‌‮[(int) numArray1[(index + 1) % 4, num3 - 1] & (int) byte.MaxValue];
      numArray1[0, 0] ^= \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202D‪‪⁪‫‎‭‪‎‎‏⁫⁪‎‪​‭⁬‫‎⁫‭⁭⁯‍​‌‪​‎‮⁭‭⁫‮⁭⁯‫‪⁬‮[num1++];
      if (num3 <= 6)
      {
        for (int index3 = 1; index3 < num3; ++index3)
        {
          for (int index4 = 0; index4 < 4; ++index4)
            numArray1[index4, index3] ^= numArray1[index4, index3 - 1];
        }
      }
      else
      {
        for (int index5 = 1; index5 < 4; ++index5)
        {
          for (int index6 = 0; index6 < 4; ++index6)
            numArray1[index6, index5] ^= numArray1[index6, index5 - 1];
        }
        for (int index = 0; index < 4; ++index)
          numArray1[index, 4] ^= \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202D‌‪‍‌‌‎​‍‎‫⁫‎‌‎‮‌‎‭‫⁪‮⁫‎‌⁭‬‭⁬‍‬‪‬‎‪⁯‮⁯‎‌‮[(int) numArray1[index, 3] & (int) byte.MaxValue];
        for (int index7 = 5; index7 < num3; ++index7)
        {
          for (int index8 = 0; index8 < 4; ++index8)
            numArray1[index8, index7] ^= numArray1[index8, index7 - 1];
        }
      }
      int index9 = 0;
      while (true)
      {
        if (index9 < num3 && num5 < (this.\u206E⁮⁮⁮⁫‮​⁯‎⁬⁮‌⁮‬​‮⁭⁫⁬‭‭⁮‌⁯⁫‪‭‏‫‎⁯‍‪‫⁫‎​‭‏‬‮ + 1) * (this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ / 8))
        {
          for (int index10 = 0; index10 < 4; ++index10)
            numArray2[num5 / (this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ / 8)][index10] |= (long) ((int) numArray1[index10, index9] & (int) byte.MaxValue) << num5 * 8 % this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮;
          ++index9;
          ++num5;
        }
        else
          goto label_50;
      }
    }
    return numArray2;
  }

  public \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮()
    : this(128)
  {
  }

  public \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮(int _param1)
  {
    switch (_param1)
    {
      case 128:
        this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ = 32;
        this.\u202B‎‬‭‮‍‫⁬⁯‌‫‮‍⁯⁫‭‫‮‍⁪⁮‫‪​⁮⁫‫⁯⁫‮‍‫‎‪‍‬‭‮ = (long) uint.MaxValue;
        this.\u206F⁮⁯‎⁪‏‬‏⁪‍‏‪​⁫‎‫‏‌⁭‬⁪‍‮‬‬‮‌⁬⁭⁪⁫‏‍‬‮⁮‌‫‏‍‮ = \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202B‌⁪⁫‌⁫⁫‫⁭‍⁮⁮⁭⁫⁫⁫⁯⁫⁫​‭⁪‍⁬‎‎⁪‬‭‬‍‍⁮⁬‍‮​⁭‭‭‮[0];
        this.\u202B‎‪⁫​⁮‪‮‍‏‮‭‭‍⁭⁬⁫⁭‏⁯‏‫‍⁪‏‎‮⁬‭‮‎‪‪‬‫‮‪‌⁫‏‮ = \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206E‬‮‬‮​‫⁫‌‎⁭⁭⁬‫‫⁯⁮‏‭‌‫‬⁪⁫​‍⁫​⁯⁯⁬‫‪⁪‮‫⁪‪⁬‫‮[0];
        break;
      case 160:
        this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ = 40;
        this.\u202B‎‬‭‮‍‫⁬⁯‌‫‮‍⁯⁫‭‫‮‍⁪⁮‫‪​⁮⁫‫⁯⁫‮‍‫‎‪‍‬‭‮ = 1099511627775L;
        this.\u206F⁮⁯‎⁪‏‬‏⁪‍‏‪​⁫‎‫‏‌⁭‬⁪‍‮‬‬‮‌⁬⁭⁪⁫‏‍‬‮⁮‌‫‏‍‮ = \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202B‌⁪⁫‌⁫⁫‫⁭‍⁮⁮⁭⁫⁫⁫⁯⁫⁫​‭⁪‍⁬‎‎⁪‬‭‬‍‍⁮⁬‍‮​⁭‭‭‮[1];
        this.\u202B‎‪⁫​⁮‪‮‍‏‮‭‭‍⁭⁬⁫⁭‏⁯‏‫‍⁪‏‎‮⁬‭‮‎‪‪‬‫‮‪‌⁫‏‮ = \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206E‬‮‬‮​‫⁫‌‎⁭⁭⁬‫‫⁯⁮‏‭‌‫‬⁪⁫​‍⁫​⁯⁯⁬‫‪⁪‮‫⁪‪⁬‫‮[1];
        break;
      case 192:
        this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ = 48;
        this.\u202B‎‬‭‮‍‫⁬⁯‌‫‮‍⁯⁫‭‫‮‍⁪⁮‫‪​⁮⁫‫⁯⁫‮‍‫‎‪‍‬‭‮ = 281474976710655L;
        this.\u206F⁮⁯‎⁪‏‬‏⁪‍‏‪​⁫‎‫‏‌⁭‬⁪‍‮‬‬‮‌⁬⁭⁪⁫‏‍‬‮⁮‌‫‏‍‮ = \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202B‌⁪⁫‌⁫⁫‫⁭‍⁮⁮⁭⁫⁫⁫⁯⁫⁫​‭⁪‍⁬‎‎⁪‬‭‬‍‍⁮⁬‍‮​⁭‭‭‮[2];
        this.\u202B‎‪⁫​⁮‪‮‍‏‮‭‭‍⁭⁬⁫⁭‏⁯‏‫‍⁪‏‎‮⁬‭‮‎‪‪‬‫‮‪‌⁫‏‮ = \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206E‬‮‬‮​‫⁫‌‎⁭⁭⁬‫‫⁯⁮‏‭‌‫‬⁪⁫​‍⁫​⁯⁯⁬‫‪⁪‮‫⁪‪⁬‫‮[2];
        break;
      case 224:
        this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ = 56;
        this.\u202B‎‬‭‮‍‫⁬⁯‌‫‮‍⁯⁫‭‫‮‍⁪⁮‫‪​⁮⁫‫⁯⁫‮‍‫‎‪‍‬‭‮ = 72057594037927935L;
        this.\u206F⁮⁯‎⁪‏‬‏⁪‍‏‪​⁫‎‫‏‌⁭‬⁪‍‮‬‬‮‌⁬⁭⁪⁫‏‍‬‮⁮‌‫‏‍‮ = \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202B‌⁪⁫‌⁫⁫‫⁭‍⁮⁮⁭⁫⁫⁫⁯⁫⁫​‭⁪‍⁬‎‎⁪‬‭‬‍‍⁮⁬‍‮​⁭‭‭‮[3];
        this.\u202B‎‪⁫​⁮‪‮‍‏‮‭‭‍⁭⁬⁫⁭‏⁯‏‫‍⁪‏‎‮⁬‭‮‎‪‪‬‫‮‪‌⁫‏‮ = \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206E‬‮‬‮​‫⁫‌‎⁭⁭⁬‫‫⁯⁮‏‭‌‫‬⁪⁫​‍⁫​⁯⁯⁬‫‪⁪‮‫⁪‪⁬‫‮[3];
        break;
      case 256:
        this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ = 64;
        this.\u202B‎‬‭‮‍‫⁬⁯‌‫‮‍⁯⁫‭‫‮‍⁪⁮‫‪​⁮⁫‫⁯⁫‮‍‫‎‪‍‬‭‮ = -1L;
        this.\u206F⁮⁯‎⁪‏‬‏⁪‍‏‪​⁫‎‫‏‌⁭‬⁪‍‮‬‬‮‌⁬⁭⁪⁫‏‍‬‮⁮‌‫‏‍‮ = \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202B‌⁪⁫‌⁫⁫‫⁭‍⁮⁮⁭⁫⁫⁫⁯⁫⁫​‭⁪‍⁬‎‎⁪‬‭‬‍‍⁮⁬‍‮​⁭‭‭‮[4];
        this.\u202B‎‪⁫​⁮‪‮‍‏‮‭‭‍⁭⁬⁫⁭‏⁯‏‫‍⁪‏‎‮⁬‭‮‎‪‪‬‫‮‪‌⁫‏‮ = \u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206E‬‮‬‮​‫⁫‌‎⁭⁭⁬‫‫⁯⁮‏‭‌‫‬⁪⁫​‍⁫​⁯⁯⁬‫‪⁪‮‫⁪‪⁬‫‮[4];
        break;
      default:
        throw new ArgumentException("unknown blocksize to Rijndael");
    }
    this.\u200B⁭⁫⁯⁯‬‭⁯⁫⁫‏‮‮⁪‫⁭‎⁬‏‮​‌‮‭‌‭⁭‍‪‪‮​⁫‬‫⁯⁫⁪‭⁭‮ = _param1;
  }

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮ = typeof (\u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮).IsInstanceOfType((object) _param2) ? this.\u206F‌‌‌‫‎‪⁪⁫‎⁪​‫‎⁪⁯⁪‮‎‪⁬‫‪‫⁫‎⁮‍⁫⁭‭⁮⁯⁫⁯⁭‎‪⁬‭‮(((\u200C⁭‎‪‬⁪⁭⁮‌​⁯‫⁪⁭⁬⁭‌‎⁮⁮⁯⁯​‏‎⁮‌‬⁪⁭⁬​⁯‏⁪‌‮‍⁮‮) _param2).\u202B‫⁬⁬⁮‍‏⁪‭‎⁪‏‬⁪​⁭‍⁮​​⁬‭‌‮‬‎‍⁭⁯‮⁫⁬⁯⁭​‪‬‍‎‭‮()) : throw new ArgumentException("invalid parameter passed to Rijndael init - " + \u206F‫‍⁮‍‏‭‌‫⁯‎‎​⁮‏⁮‎‮​⁭⁬⁬⁭‌‎‎‎‬⁯⁮‏⁮‭‎⁫⁯‭‌⁯‍‮.\u200B‮‬​‭‮⁪‫‫‍‌⁮‎‍‬‪‫⁬⁮​⁯⁭‎‫⁯‎⁭⁯‍‭‮⁫​‪‮‭⁪‭‫‭‮((object) _param2));
    this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮ = _param1;
  }

  public virtual string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => "Rijndael";

  public virtual bool \u200F‍‌⁭‬⁯‪‌‍‮‬‏​⁭‪‬‌​‬‍‭‮‬​⁭‬‎‬‌‪‬⁪‏​‎‎​‮⁬‎‮ => false;

  public virtual int \u206C⁭‮‍⁯‮⁮⁬‍‭‌⁬⁭‍⁫⁭⁫‌⁪⁮‬⁪⁪‬‏‏⁫‬⁫‏‪⁮‎⁮‮‭⁫‏⁪⁪‮() => this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ / 2;

  public virtual int \u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(
    byte[] _param1,
    int _param2,
    byte[] _param3,
    int _param4)
  {
    if (this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮ == null)
      throw new InvalidOperationException("Rijndael engine not initialised");
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‮⁭⁫‎⁮‏⁬⁫‍‬​‬‪‫‬‭‭‭⁬⁪‎‭⁮⁭‬‭⁭⁬⁬‪‍‌‎‏‬⁪‫‫‌‮(_param1, _param2, this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ / 2, "input buffer too short");
    \u200B‪⁭⁮⁫⁯‌‭‏‫⁭⁯⁯‫‪‎‬‍⁪‬⁮⁪‮‍‮‎‬⁬‎⁪⁬⁫‌‍⁬‮‏‫‭⁬‮.\u200D‬⁫‬‬⁯⁭‭⁪‮‪‬⁬⁫⁮‎‪‌⁭‎⁫⁯‍⁭⁮⁪‭​⁫⁫‭‏‍⁮‏‬​⁪⁯‎‮(_param3, _param4, this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ / 2, "output buffer too short");
    this.\u200B‫⁬‌‌‏⁬⁪‪‏‌‪⁫⁮‌​⁬‭‭‫‪⁪‍⁮⁫‪‪⁭⁮‍⁮‌‭‮⁭⁮⁮⁫‫‭‮(_param1, _param2);
    if (this.\u206F⁬⁪‪‪‫‎⁪‍​‭​⁭⁫‍⁪⁮‮⁫‮⁭⁪‌‫‮​⁯‬‬⁪‭‮​​‌‎‬⁬‮‮‮)
      this.\u202C⁭‬‪⁪‎‮⁫‪‮‫‏‪⁮‬‭‌⁮⁮‪‬⁯⁫⁬⁬​‏​‏​‮‪‪⁬‍⁫‎​‌‮(this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮);
    else
      this.\u206F‮‎‌‮‍‬‌​‫⁮‮⁪​‪‮‍⁯‏​‌⁫‫‬‫⁭‌⁯‮‪⁫⁬‎⁭⁫⁪‎‮‮‭‮(this.\u200C​⁬⁭‏⁫‬⁮‍‍​⁯‬‪‪‏‫​⁯‌⁭‭‬‎‮‮​‭‬‍​‏⁭‬‏‎⁪​⁭⁮‮);
    this.\u202A‎⁯‎⁮‬‌‎‮​‬‏‫⁭‫‭‫⁭⁫‏‫⁭‍‍‌‌⁬‌⁬‍​​⁫⁮⁮⁪⁬‌⁪‮‮(_param3, _param4);
    return this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮ / 2;
  }

  public virtual void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮()
  {
  }

  private void \u200B‫⁬‌‌‏⁬⁪‪‏‌‪⁫⁮‌​⁬‭‭‫‪⁪‍⁮⁫‪‪⁭⁮‍⁮‌‭‮⁭⁮⁮⁫‫‭‮(byte[] _param1, int _param2)
  {
    int num1 = _param2;
    byte[] numArray1 = _param1;
    int index1 = num1;
    int num2 = index1 + 1;
    this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮ = (long) ((int) numArray1[index1] & (int) byte.MaxValue);
    byte[] numArray2 = _param1;
    int index2 = num2;
    int num3 = index2 + 1;
    this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮ = (long) ((int) numArray2[index2] & (int) byte.MaxValue);
    byte[] numArray3 = _param1;
    int index3 = num3;
    int num4 = index3 + 1;
    this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮ = (long) ((int) numArray3[index3] & (int) byte.MaxValue);
    byte[] numArray4 = _param1;
    int index4 = num4;
    int num5 = index4 + 1;
    this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮ = (long) ((int) numArray4[index4] & (int) byte.MaxValue);
    for (int index5 = 8; index5 != this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮; index5 += 8)
    {
      long num6 = this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮;
      byte[] numArray5 = _param1;
      int index6 = num5;
      int num7 = index6 + 1;
      long num8 = (long) ((int) numArray5[index6] & (int) byte.MaxValue) << index5;
      this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮ = num6 | num8;
      long num9 = this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮;
      byte[] numArray6 = _param1;
      int index7 = num7;
      int num10 = index7 + 1;
      long num11 = (long) ((int) numArray6[index7] & (int) byte.MaxValue) << index5;
      this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮ = num9 | num11;
      long num12 = this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮;
      byte[] numArray7 = _param1;
      int index8 = num10;
      int num13 = index8 + 1;
      long num14 = (long) ((int) numArray7[index8] & (int) byte.MaxValue) << index5;
      this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮ = num12 | num14;
      long num15 = this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮;
      byte[] numArray8 = _param1;
      int index9 = num13;
      num5 = index9 + 1;
      long num16 = (long) ((int) numArray8[index9] & (int) byte.MaxValue) << index5;
      this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮ = num15 | num16;
    }
  }

  private void \u202A‎⁯‎⁮‬‌‎‮​‬‏‫⁭‫‭‫⁭⁫‏‫⁭‍‍‌‌⁬‌⁬‍​​⁫⁮⁮⁪⁬‌⁪‮‮(byte[] _param1, int _param2)
  {
    int num1 = _param2;
    for (int index1 = 0; index1 != this.\u200D‌​‌‍‭‮‬⁯⁫‏‎⁯⁭⁭‍⁮‏‬‌‮‏‪‏⁮⁯‭‭‭‫‬‏⁮⁫‍‌‮⁪‎⁫‮; index1 += 8)
    {
      byte[] numArray1 = _param1;
      int index2 = num1;
      int num2 = index2 + 1;
      int num3 = (int) (byte) (this.\u202B‬⁯⁭‮⁯‮‭⁪‍⁮‎⁪‎‌‬⁭‮‬‫‬‬‏⁪‫⁪‎​‍​‬‪‪⁫‫⁯‬‪‭⁪‮ >> index1);
      numArray1[index2] = (byte) num3;
      byte[] numArray2 = _param1;
      int index3 = num2;
      int num4 = index3 + 1;
      int num5 = (int) (byte) (this.\u206F‏⁫‎⁮​​‏⁪⁮⁬​‮⁯​⁯⁯‬⁯‪‭‏‌⁪‏⁪⁪‭‫‫⁬‬‏⁪‪‍‏‍‭‮ >> index1);
      numArray2[index3] = (byte) num5;
      byte[] numArray3 = _param1;
      int index4 = num4;
      int num6 = index4 + 1;
      int num7 = (int) (byte) (this.\u202D‮‌⁭‎‎⁪‏⁫‮‭​​‭‮⁫‬‏‎‎‪‎⁮​‫‫⁯‏‮⁫‍⁯‪‏‪‬⁭‮‏⁪‮ >> index1);
      numArray3[index4] = (byte) num7;
      byte[] numArray4 = _param1;
      int index5 = num6;
      num1 = index5 + 1;
      int num8 = (int) (byte) (this.\u206D‮‎⁪‎⁬‫‬⁯⁫‍‪⁭⁪‪‮‌⁫​⁫‎⁪⁬⁮⁯‬‪‎‏‎⁯‮⁭⁯‫‌‬‪⁮‮‮ >> index1);
      numArray4[index5] = (byte) num8;
    }
  }

  private void \u202C⁭‬‪⁪‎‮⁫‪‮‫‏‪⁮‬‭‌⁮⁮‪‬⁯⁫⁬⁬​‏​‏​‮‪‪⁬‍⁫‎​‌‮(long[][] _param1)
  {
    this.\u200E⁭‪‌‬⁯‏⁪​‌‭‮​​⁯‭‭‮‭⁫‍‪⁬⁫‮‮‎‎​⁮‏‭‎‏⁯‏‍⁪⁮‎‮(_param1[0]);
    for (int index = 1; index < this.\u206E⁮⁮⁮⁫‮​⁯‎⁬⁮‌⁮‬​‮⁭⁫⁬‭‭⁮‌⁯⁫‪‭‏‫‎⁯‍‪‫⁫‎​‭‏‬‮; ++index)
    {
      this.\u206D​‏‪‎⁬⁭‮⁬‎‭⁭⁬‫‬⁬⁭‪‏‭⁫‭‌⁭⁭‬‎​‏‬‍⁮⁫‭⁮‏⁮‌​‌‮(\u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202D‌‪‍‌‌‎​‍‎‫⁫‎‌‎‮‌‎‭‫⁪‮⁫‎‌⁭‬‭⁬‍‬‪‬‎‪⁯‮⁯‎‌‮);
      this.\u200E‏⁮‎⁮⁫‮‪‮⁭⁫⁫‪⁫‫⁫⁬‭‫⁮⁭‮‫⁪⁬‪‪‎⁪⁫‪⁯‭‎⁯‫⁭‭‫‎‮(this.\u206F⁮⁯‎⁪‏‬‏⁪‍‏‪​⁫‎‫‏‌⁭‬⁪‍‮‬‬‮‌⁬⁭⁪⁫‏‍‬‮⁮‌‫‏‍‮);
      this.\u200C‌⁪‫‫‬‮⁮⁮‮‏‪⁫‭‏⁯⁯‪⁯⁯⁯⁫‭‬‫⁯‍‫‫‫⁮‏‬⁮‌‎‏⁪⁬⁯‮();
      this.\u200E⁭‪‌‬⁯‏⁪​‌‭‮​​⁯‭‭‮‭⁫‍‪⁬⁫‮‮‎‎​⁮‏‭‎‏⁯‏‍⁪⁮‎‮(_param1[index]);
    }
    this.\u206D​‏‪‎⁬⁭‮⁬‎‭⁭⁬‫‬⁬⁭‪‏‭⁫‭‌⁭⁭‬‎​‏‬‍⁮⁫‭⁮‏⁮‌​‌‮(\u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u202D‌‪‍‌‌‎​‍‎‫⁫‎‌‎‮‌‎‭‫⁪‮⁫‎‌⁭‬‭⁬‍‬‪‬‎‪⁯‮⁯‎‌‮);
    this.\u200E‏⁮‎⁮⁫‮‪‮⁭⁫⁫‪⁫‫⁫⁬‭‫⁮⁭‮‫⁪⁬‪‪‎⁪⁫‪⁯‭‎⁯‫⁭‭‫‎‮(this.\u206F⁮⁯‎⁪‏‬‏⁪‍‏‪​⁫‎‫‏‌⁭‬⁪‍‮‬‬‮‌⁬⁭⁪⁫‏‍‬‮⁮‌‫‏‍‮);
    this.\u200E⁭‪‌‬⁯‏⁪​‌‭‮​​⁯‭‭‮‭⁫‍‪⁬⁫‮‮‎‎​⁮‏‭‎‏⁯‏‍⁪⁮‎‮(_param1[this.\u206E⁮⁮⁮⁫‮​⁯‎⁬⁮‌⁮‬​‮⁭⁫⁬‭‭⁮‌⁯⁫‪‭‏‫‎⁯‍‪‫⁫‎​‭‏‬‮]);
  }

  private void \u206F‮‎‌‮‍‬‌​‫⁮‮⁪​‪‮‍⁯‏​‌⁫‫‬‫⁭‌⁯‮‪⁫⁬‎⁭⁫⁪‎‮‮‭‮(long[][] _param1)
  {
    this.\u200E⁭‪‌‬⁯‏⁪​‌‭‮​​⁯‭‭‮‭⁫‍‪⁬⁫‮‮‎‎​⁮‏‭‎‏⁯‏‍⁪⁮‎‮(_param1[this.\u206E⁮⁮⁮⁫‮​⁯‎⁬⁮‌⁮‬​‮⁭⁫⁬‭‭⁮‌⁯⁫‪‭‏‫‎⁯‍‪‫⁫‎​‭‏‬‮]);
    this.\u206D​‏‪‎⁬⁭‮⁬‎‭⁭⁬‫‬⁬⁭‪‏‭⁫‭‌⁭⁭‬‎​‏‬‍⁮⁫‭⁮‏⁮‌​‌‮(\u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206E‌⁮‮‪‫‍‏‎‮‮⁭‬‏⁭⁮‮‮⁮‭‏‌‌⁭‬‏⁭‭‎‏‏⁭‌⁯‭⁮⁫‏⁬‫‮);
    this.\u200E‏⁮‎⁮⁫‮‪‮⁭⁫⁫‪⁫‫⁫⁬‭‫⁮⁭‮‫⁪⁬‪‪‎⁪⁫‪⁯‭‎⁯‫⁭‭‫‎‮(this.\u202B‎‪⁫​⁮‪‮‍‏‮‭‭‍⁭⁬⁫⁭‏⁯‏‫‍⁪‏‎‮⁬‭‮‎‪‪‬‫‮‪‌⁫‏‮);
    for (int index = this.\u206E⁮⁮⁮⁫‮​⁯‎⁬⁮‌⁮‬​‮⁭⁫⁬‭‭⁮‌⁯⁫‪‭‏‫‎⁯‍‪‫⁫‎​‭‏‬‮ - 1; index > 0; --index)
    {
      this.\u200E⁭‪‌‬⁯‏⁪​‌‭‮​​⁯‭‭‮‭⁫‍‪⁬⁫‮‮‎‎​⁮‏‭‎‏⁯‏‍⁪⁮‎‮(_param1[index]);
      this.\u206B‎​‍⁪‬‬⁫⁬‮‪‍⁫⁪‫​⁬‬‭‪‬⁪​⁬‎‏⁮⁫‏‮‫‌⁪⁬⁬‬‍‬‎‪‮();
      this.\u206D​‏‪‎⁬⁭‮⁬‎‭⁭⁬‫‬⁬⁭‪‏‭⁫‭‌⁭⁭‬‎​‏‬‍⁮⁫‭⁮‏⁮‌​‌‮(\u202A‎‬⁮⁭⁭‎‌​‌‌⁫‫‮‏‪‌⁯‎⁭‭⁭⁯⁬⁭‪⁪⁪‮‍‭‭⁭‌⁭‪⁮‌⁪‭‮.\u206E‌⁮‮‪‫‍‏‎‮‮⁭‬‏⁭⁮‮‮⁮‭‏‌‌⁭‬‏⁭‭‎‏‏⁭‌⁯‭⁮⁫‏⁬‫‮);
      this.\u200E‏⁮‎⁮⁫‮‪‮⁭⁫⁫‪⁫‫⁫⁬‭‫⁮⁭‮‫⁪⁬‪‪‎⁪⁫‪⁯‭‎⁯‫⁭‭‫‎‮(this.\u202B‎‪⁫​⁮‪‮‍‏‮‭‭‍⁭⁬⁫⁭‏⁯‏‫‍⁪‏‎‮⁬‭‮‎‪‪‬‫‮‪‌⁫‏‮);
    }
    this.\u200E⁭‪‌‬⁯‏⁪​‌‭‮​​⁯‭‭‮‭⁫‍‪⁬⁫‮‮‎‎​⁮‏‭‎‏⁯‏‍⁪⁮‎‮(_param1[0]);
  }
}
