// Decompiled with JetBrains decompiler
// Type: Gs7.p9J
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using f0WL;
using Fw5y;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Pz9;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Drawing.Printing;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Windows.Forms;
using System.Windows.Forms.Automation;
using x7X;
using z0R5;

namespace Gs7
{
  [DesignerGenerated]
  public class p9J : Form
  {
    private IContainer ႷႰ;
    [AccessedThroughProperty("Ⴗ")]
    private ComboBox ႷႷ;
    [AccessedThroughProperty("Ⴍ")]
    private Label ႷႳ;
    [AccessedThroughProperty("Ⴅ")]
    private Label ႷႭ;
    [AccessedThroughProperty("Ⴓ")]
    private Label ႷႠ;
    [AccessedThroughProperty("Ⴄ")]
    private DataGridView ႷႤ;
    [AccessedThroughProperty("Ⴈ")]
    private MenuStrip ႷႥ;
    [AccessedThroughProperty("Ⴐ")]
    private ToolStripMenuItem ႷႼ;
    [AccessedThroughProperty("ႭႳ")]
    private ToolStripMenuItem ႳႠ;
    [AccessedThroughProperty("ႭႨ")]
    private ComboBox ႳႥ;
    [AccessedThroughProperty("ႭႰ")]
    private Label ႳႼ;
    [AccessedThroughProperty("ႭႼ")]
    private Button ႠႰ;
    private o7G0.Sx2o.j1JF Ⴐ = new o7G0.Sx2o.j1JF();

    public p9J()
    {
      this.Load += new EventHandler(this.Mg2);
      this.s4X();
    }

    protected virtual void Ff0([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.ႷႰ == null)
          return;
        this.ႷႰ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void s4X()
    {
      ResourceManager resourceManager = (ResourceManager) new ComponentResourceManager(typeof (p9J));
      this.Ⴗ = new ComboBox();
      this.Ⴍ = new Label();
      this.Ⴅ = new Label();
      this.Ⴓ = new Label();
      this.Ⴃ = new Label();
      this.Ⴄ = new DataGridView();
      this.Ⴀ = new Label();
      this.Ⴈ = new MenuStrip();
      this.Ⴐ = new ToolStripMenuItem();
      this.Ⴜ = new ToolStripMenuItem();
      this.ႭႷ = new ToolStripSeparator();
      this.ႭႭ = new ToolStripMenuItem();
      this.ႭႥ = new ToolStripMenuItem();
      this.ႭႳ = new ToolStripMenuItem();
      this.ႭႤ = new PrintDocument();
      this.ႭႠ = new PrintPreviewDialog();
      this.ႭႨ = new ComboBox();
      this.ႭႰ = new Label();
      this.ႭႣ = new Button();
      this.ႭႼ = new Button();
      ((ISupportInitialize) this.Ⴄ).BeginInit();
      this.Ⴈ.SuspendLayout();
      this.SuspendLayout();
      this.Ⴗ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.Ⴗ.FormattingEnabled = true;
      this.Ⴗ.Items.AddRange(new object[4]
      {
        (object) "All",
        (object) "Pending",
        (object) "Approved",
        (object) "Rejected"
      });
      this.Ⴗ.Location = new Point(14, 68);
      this.Ⴗ.Margin = new Padding(3, 4, 3, 4);
      this.Ⴗ.Name = "cboStatus";
      this.Ⴗ.Size = new Size(136, 28);
      this.Ⴗ.TabIndex = 0;
      this.Ⴍ.AutoSize = true;
      this.Ⴍ.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴍ.ForeColor = SystemColors.ControlText;
      this.Ⴍ.Location = new Point(156, 76);
      this.Ⴍ.Name = "Label1";
      this.Ⴍ.Size = new Size(118, 22);
      this.Ⴍ.TabIndex = 1;
      this.Ⴍ.Text = "Manager ID:";
      this.Ⴅ.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴅ.ForeColor = Color.DarkBlue;
      this.Ⴅ.Location = new Point(307, 76);
      this.Ⴅ.Name = "lblID";
      this.Ⴅ.Size = new Size(134, 36);
      this.Ⴅ.TabIndex = 2;
      this.Ⴅ.Text = "Label2";
      this.Ⴓ.AutoSize = true;
      this.Ⴓ.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴓ.ForeColor = SystemColors.ControlText;
      this.Ⴓ.Location = new Point(448, 75);
      this.Ⴓ.Name = "Label3";
      this.Ⴓ.Size = new Size(144, 22);
      this.Ⴓ.TabIndex = 3;
      this.Ⴓ.Text = "Manager Name";
      this.Ⴃ.AutoSize = true;
      this.Ⴃ.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴃ.ForeColor = Color.DarkBlue;
      this.Ⴃ.Location = new Point(634, 75);
      this.Ⴃ.Name = "lblName";
      this.Ⴃ.Size = new Size(70, 22);
      this.Ⴃ.TabIndex = 4;
      this.Ⴃ.Text = "Label4";
      this.Ⴄ.AllowUserToAddRows = false;
      this.Ⴄ.AllowUserToDeleteRows = false;
      this.Ⴄ.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.Ⴄ.BackgroundColor = SystemColors.InactiveCaption;
      this.Ⴄ.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.Ⴄ.Location = new Point(14, 134);
      this.Ⴄ.Margin = new Padding(3, 4, 3, 4);
      this.Ⴄ.Name = "dgvLeave";
      this.Ⴄ.ReadOnly = true;
      this.Ⴄ.RowTemplate.Height = 24;
      this.Ⴄ.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
      this.Ⴄ.Size = new Size(685, 321);
      this.Ⴄ.TabIndex = 5;
      this.Ⴀ.AutoSize = true;
      this.Ⴀ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴀ.Location = new Point(14, 548);
      this.Ⴀ.Name = "lblCount";
      this.Ⴀ.Size = new Size(63, 20);
      this.Ⴀ.TabIndex = 6;
      this.Ⴀ.Text = "Label5";
      this.Ⴈ.ImageScalingSize = new Size(20, 20);
      this.Ⴈ.Items.AddRange(new ToolStripItem[2]
      {
        (ToolStripItem) this.Ⴐ,
        (ToolStripItem) this.ႭႥ
      });
      this.Ⴈ.Location = new Point(0, 0);
      this.Ⴈ.Name = "MenuStrip1";
      this.Ⴈ.Padding = new Padding(7, 2, 0, 2);
      this.Ⴈ.Size = new Size(855, 33);
      this.Ⴈ.TabIndex = 7;
      this.Ⴈ.Text = "MenuStrip1";
      this.Ⴐ.DropDownItems.AddRange(new ToolStripItem[3]
      {
        (ToolStripItem) this.Ⴜ,
        (ToolStripItem) this.ႭႷ,
        (ToolStripItem) this.ႭႭ
      });
      this.Ⴐ.Name = "FileToolStripMenuItem";
      this.Ⴐ.Size = new Size(50, 29);
      this.Ⴐ.Text = "File";
      this.Ⴜ.Name = "PrintToolStripMenuItem";
      this.Ⴜ.ShortcutKeys = Keys.P | Keys.Control;
      this.Ⴜ.Size = new Size(194, 30);
      this.Ⴜ.Text = "Print";
      this.ႭႷ.Name = "ToolStripMenuItem1";
      this.ႭႷ.Size = new Size(191, 6);
      this.ႭႭ.Name = "ExitToolStripMenuItem";
      this.ႭႭ.ShortcutKeys = Keys.E | Keys.Control;
      this.ႭႭ.Size = new Size(194, 30);
      this.ႭႭ.Text = "Exit";
      this.ႭႥ.DropDownItems.AddRange(new ToolStripItem[1]
      {
        (ToolStripItem) this.ႭႳ
      });
      this.ႭႥ.Name = "HelpToolStripMenuItem";
      this.ႭႥ.Size = new Size(61, 29);
      this.ႭႥ.Text = "Help";
      this.ႭႳ.Name = "AboutUsToolStripMenuItem";
      this.ႭႳ.Size = new Size(172, 30);
      this.ႭႳ.Text = "&About Us";
      this.ႭႠ.AutoScrollMargin = new Size(0, 0);
      this.ႭႠ.AutoScrollMinSize = new Size(0, 0);
      this.ႭႠ.ClientSize = new Size(400, 300);
      this.ႭႠ.Enabled = true;
      this.ႭႠ.Icon = (Icon) resourceManager.GetObject("dlgPreview.Icon");
      this.ႭႠ.Name = "dlgPreview";
      this.ႭႠ.UseAntiAlias = true;
      this.ႭႠ.Visible = false;
      this.ႭႨ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.ႭႨ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႨ.FormattingEnabled = true;
      this.ႭႨ.Items.AddRange(new object[13]
      {
        (object) "All",
        (object) "1",
        (object) "2",
        (object) "3",
        (object) "4",
        (object) "5",
        (object) "6",
        (object) "7",
        (object) "8",
        (object) "9",
        (object) "10",
        (object) "11",
        (object) "12"
      });
      this.ႭႨ.Location = new Point(291, 539);
      this.ႭႨ.Margin = new Padding(3, 4, 3, 4);
      this.ႭႨ.Name = "cboMonth";
      this.ႭႨ.Size = new Size(149, 28);
      this.ႭႨ.TabIndex = 9;
      this.ႭႰ.AutoSize = true;
      this.ႭႰ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႰ.Location = new Point(129, 548);
      this.ႭႰ.Name = "Label2";
      this.ႭႰ.Size = new Size(124, 20);
      this.ႭႰ.TabIndex = 10;
      this.ႭႰ.Text = "Select Months";
      this.ႭႣ.BackColor = SystemColors.Highlight;
      this.ႭႣ.BackgroundImageLayout = ImageLayout.Center;
      this.ႭႣ.Cursor = Cursors.Hand;
      this.ႭႣ.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႣ.ForeColor = SystemColors.Control;
      this.ႭႣ.ImageAlign = ContentAlignment.MiddleLeft;
      this.ႭႣ.Location = new Point(483, 534);
      this.ႭႣ.Margin = new Padding(3, 4, 3, 4);
      this.ႭႣ.Name = "btnPrint";
      this.ႭႣ.RightToLeft = RightToLeft.Yes;
      this.ႭႣ.Size = new Size(158, 68);
      this.ႭႣ.TabIndex = 0;
      this.ႭႣ.Text = "&Print";
      this.ႭႣ.UseVisualStyleBackColor = false;
      this.ႭႼ.BackColor = Color.IndianRed;
      this.ႭႼ.Cursor = Cursors.Hand;
      this.ႭႼ.DialogResult = DialogResult.Cancel;
      this.ႭႼ.Font = new Font("Modern No. 20", 10.2f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႭႼ.ForeColor = SystemColors.Window;
      this.ႭႼ.Location = new Point(647, 536);
      this.ႭႼ.Margin = new Padding(3, 4, 3, 4);
      this.ႭႼ.Name = "btnClose";
      this.ႭႼ.Size = new Size(126, 65);
      this.ႭႼ.TabIndex = 1;
      this.ႭႼ.Text = "&Close";
      this.ႭႼ.UseVisualStyleBackColor = false;
      this.AcceptButton = (IButtonControl) this.ႭႣ;
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.GradientActiveCaption;
      this.CancelButton = (IButtonControl) this.ႭႼ;
      this.ClientSize = new Size(855, 614);
      this.Controls.Add((Control) this.ႭႼ);
      this.Controls.Add((Control) this.ႭႰ);
      this.Controls.Add((Control) this.ႭႨ);
      this.Controls.Add((Control) this.ႭႣ);
      this.Controls.Add((Control) this.Ⴀ);
      this.Controls.Add((Control) this.Ⴄ);
      this.Controls.Add((Control) this.Ⴃ);
      this.Controls.Add((Control) this.Ⴓ);
      this.Controls.Add((Control) this.Ⴅ);
      this.Controls.Add((Control) this.Ⴍ);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴈ);
      this.FormBorderStyle = FormBorderStyle.None;
      this.MainMenuStrip = this.Ⴈ;
      this.Margin = new Padding(3, 4, 3, 4);
      this.Name = "ႭႭ";
      this.Text = "ManagerViewLeave";
      ((ISupportInitialize) this.Ⴄ).EndInit();
      this.Ⴈ.ResumeLayout(false);
      this.Ⴈ.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual ComboBox Ⴗ
    {
      get => this.ႷႷ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.z2T);
        ListControl ⴗⴗ1 = (ListControl) this.ႷႷ;
        if ((ComboBox) ⴗⴗ1 != null)
          ((ComboBox) ⴗⴗ1).SelectedIndexChanged -= (EventHandler) multicastDelegate;
        this.ႷႷ = value;
        ListControl ⴗⴗ2 = (ListControl) this.ႷႷ;
        if ((ComboBox) ⴗⴗ2 == null)
          return;
        (ⴗⴗ2 as ComboBox).SelectedIndexChanged += (EventHandler) multicastDelegate;
      }
    }

    internal virtual Label Ⴍ
    {
      get => this.ႷႳ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႷႳ = value;
    }

    internal virtual Label Ⴅ
    {
      get => this.ႷႭ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႷႭ = value;
    }

    internal virtual Label Ⴓ
    {
      get => this.ႷႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႷႠ = value;
    }

    internal virtual Label Ⴃ
    {
      get => this.Ⴐ.Ⴃ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴃ = (IAutomationLiveRegion) value as Label;
    }

    internal virtual DataGridView Ⴄ
    {
      get => this.ႷႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႷႤ = value;
    }

    internal virtual Label Ⴀ
    {
      get => this.Ⴐ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴈ = value;
    }

    internal virtual MenuStrip Ⴈ
    {
      get => this.ႷႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႷႥ = value;
    }

    internal virtual ToolStripMenuItem Ⴐ
    {
      get => this.ႷႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႷႼ = value;
    }

    internal virtual ToolStripMenuItem Ⴜ
    {
      get => this.Ⴐ.Ⴗ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴗ = value;
    }

    internal virtual ToolStripSeparator ႭႷ
    {
      get => this.Ⴐ.Ⴐ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴐ = (object) value as ToolStripSeparator;
    }

    internal virtual ToolStripMenuItem ႭႭ
    {
      get => this.Ⴐ.Ⴅ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Td9);
        ToolStripDropDownItem ⴅ1 = (ToolStripDropDownItem) this.Ⴐ.Ⴅ;
        if ((ToolStripMenuItem) ⴅ1 != null)
          ⴅ1.Click -= (EventHandler) multicastDelegate;
        this.Ⴐ.Ⴅ = (ToolStripDropDownItem) value as ToolStripMenuItem;
        ToolStripDropDownItem ⴅ2 = (ToolStripDropDownItem) this.Ⴐ.Ⴅ;
        if (!(ⴅ2 is ToolStripMenuItem))
          return;
        (ⴅ2 as ToolStripMenuItem).Click += (EventHandler) multicastDelegate;
      }
    }

    internal virtual ToolStripMenuItem ႭႥ
    {
      get => this.Ⴐ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴀ = (object) value as ToolStripMenuItem;
    }

    internal virtual ToolStripMenuItem ႭႳ
    {
      get => this.ႳႠ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.b1J);
        object ⴓⴀ1 = (object) this.ႳႠ;
        if ((ToolStripMenuItem) ⴓⴀ1 != null)
          ((ToolStripItem) ⴓⴀ1).Click -= obj as EventHandler;
        this.ႳႠ = value;
        object ⴓⴀ2 = (object) this.ႳႠ;
        if ((ToolStripMenuItem) ⴓⴀ2 == null)
          return;
        (ⴓⴀ2 as ToolStripMenuItem).Click += (EventHandler) obj;
      }
    }

    internal virtual Button ႭႣ
    {
      get => this.Ⴐ.Ⴓ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.r6E);
        ButtonBase ⴓ1 = (ButtonBase) this.Ⴐ.Ⴓ;
        if (ⴓ1 is Button)
          ⴓ1.Click -= (EventHandler) multicastDelegate;
        this.Ⴐ.Ⴓ = value;
        ButtonBase ⴓ2 = (ButtonBase) this.Ⴐ.Ⴓ;
        if ((Button) ⴓ2 == null)
          return;
        (ⴓ2 as Button).Click += multicastDelegate as EventHandler;
      }
    }

    internal virtual PrintDocument ႭႤ
    {
      get => this.Ⴐ.Ⴄ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new PrintPageEventHandler(this.Zt5);
        object ⴄ1 = (object) this.Ⴐ.Ⴄ;
        if (ⴄ1 is PrintDocument)
          ((PrintDocument) ⴄ1).PrintPage -= multicastDelegate as PrintPageEventHandler;
        this.Ⴐ.Ⴄ = value;
        object ⴄ2 = (object) this.Ⴐ.Ⴄ;
        if (!(ⴄ2 is PrintDocument))
          return;
        (ⴄ2 as PrintDocument).PrintPage += (PrintPageEventHandler) multicastDelegate;
      }
    }

    internal virtual PrintPreviewDialog ႭႠ
    {
      get => this.Ⴐ.Ⴍ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴐ.Ⴍ = value;
    }

    internal virtual ComboBox ႭႨ
    {
      get => this.ႳႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.i5W);
        ListControl ⴓⴅ1 = (ListControl) this.ႳႥ;
        if (ⴓⴅ1 is ComboBox)
          ((ComboBox) ⴓⴅ1).SelectedIndexChanged -= obj as EventHandler;
        this.ႳႥ = value;
        ListControl ⴓⴅ2 = (ListControl) this.ႳႥ;
        if ((ComboBox) ⴓⴅ2 == null)
          return;
        ((ComboBox) ⴓⴅ2).SelectedIndexChanged += (EventHandler) obj;
      }
    }

    internal virtual Label ႭႰ
    {
      get => this.ႳႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႼ = value;
    }

    internal virtual Button ႭႼ
    {
      get => this.ႠႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Zc9);
        ButtonBase ⴀⴐ1 = (ButtonBase) this.ႠႰ;
        if ((Button) ⴀⴐ1 != null)
          (ⴀⴐ1 as Button).Click -= (EventHandler) multicastDelegate;
        this.ႠႰ = value;
        ButtonBase ⴀⴐ2 = (ButtonBase) this.ႠႰ;
        if (!(ⴀⴐ2 is Button))
          return;
        (ⴀⴐ2 as Button).Click += (EventHandler) multicastDelegate;
      }
    }

    private void So5()
    {
      object obj = (object) new p9J.Ax1();
      (obj as p9J.Ax1).Ⴃ = this.Ⴗ.Text;
      ((p9J.Ax1) obj).Ⴐ = this.ႭႨ.Text;
      Table<w2M> ⴍ = ((DataContext) new Tt1() as Tt1).Ⴍ;
      Expression expression = (Expression) Expression.Parameter(typeof (w2M), "c");
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<w2M, bool>> predicate = Expression.Lambda<Func<w2M, bool>>((Expression) Expression.And((Expression) Expression.Or((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj as p9J.Ax1), typeof (p9J.Ax1)), FieldInfo.GetFieldFromHandle(__fieldref (p9J.Ax1.Ⴃ))),
        (Expression) Expression.Constant((object) "All", typeof (string)),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property(expression, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (w2M.Wb1a))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj as p9J.Ax1), typeof (p9J.Ax1)), FieldInfo.GetFieldFromHandle(__fieldref (p9J.Ax1.Ⴃ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null)), (Expression) Expression.Or((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Field((Expression) Expression.Constant((object) (p9J.Ax1) obj, typeof (p9J.Ax1)), FieldInfo.GetFieldFromHandle(__fieldref (p9J.Ax1.Ⴐ))),
        (Expression) Expression.Constant((object) "All", typeof (string)),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Call((Expression) Expression.Property((Expression) Expression.Property(expression, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (w2M.Xf2))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (DateTime.get_Month))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (int.ToString)), new Expression[0]),
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj as p9J.Ax1), typeof (p9J.Ax1)), FieldInfo.GetFieldFromHandle(__fieldref (p9J.Ax1.Ⴐ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null))), expression as ParameterExpression);
      object source = (object) ⴍ.Where<w2M>(predicate);
      this.Ⴄ.DataSource = (object) (source as IQueryable<w2M>);
      this.Ⴀ.Text = (source as IQueryable<w2M>).Count<w2M>().ToString("0 record(s)");
      this.Ⴀ.ForeColor = Color.Red;
    }

    private void z2T([In] object obj0, [In] EventArgs obj1) => this.So5();

    private void Mg2([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴗ.Text = "All";
      this.ႭႨ.Text = "All";
      this.Ⴅ.Text = Ec63.Ⴅ;
      this.Ⴃ.Text = Ec63.Ⴀ;
      this.Ⴅ.BackColor = Color.AliceBlue;
      this.Ⴃ.BackColor = Color.AliceBlue;
      IDisposable disposable = (IDisposable) new Font("Times New Roman", 12f, FontStyle.Bold);
      this.Ⴅ.Font = disposable as Font;
      this.Ⴃ.Font = (Font) disposable;
      this.Ⴍ.Font = (Font) disposable;
      this.Ⴓ.Font = (Font) disposable;
      this.So5();
      En6.Ⴈ.Ⴈ.Text = "Human Resource Management System - View Leave";
      En6.Ⴈ.Ⴈ.Ⴄ.Enabled = true;
      En6.Ⴈ.Ⴈ.Ⴈ.Enabled = true;
    }

    private void Td9([In] object obj0, [In] EventArgs obj1) => En6.Ⴈ.Ⴈ.m5E6((Form) En6.Ⴈ.Ⴀ);

    private void b1J([In] object obj0, [In] EventArgs obj1)
    {
      int num = (int) MessageBox.Show("Programmed By JJ", "About");
    }

    private void r6E([In] object obj0, [In] EventArgs obj1)
    {
      this.ႭႠ.Document = this.ႭႤ;
      int num = (int) this.ႭႠ.ShowDialog((IWin32Window) this);
    }

    private void Zt5([In] object obj0, [In] PrintPageEventArgs obj1)
    {
      DataContext dataContext = (DataContext) new Tt1();
      ICloneable cloneable1 = (ICloneable) new Font("Calibri", 24f, FontStyle.Bold);
      ICloneable cloneable2 = (ICloneable) new Font("Calibri", 12f);
      IDisposable disposable = (IDisposable) new Font("Consolas", 10f);
      object s1 = (object) "Leave Listing";
      IEnumerable<char> s2 = (IEnumerable<char>) string.Format("Printed on {0:dd-MMMM-yyyy hh:mm:ss tt}\r\nPrepared by JUNKIT", (object) DateTime.Now);
      ISerializable serializable = (ISerializable) new StringBuilder();
      ((StringBuilder) serializable).AppendLine("Leave ID     Staff ID     Leave Date    Apply Date   Duration    Status");
      (serializable as StringBuilder).AppendLine("----------   --------     -----------   ----------   ---------   -------");
      int num1 = 0;
      object enumerator;
      try
      {
        enumerator = (object) ((Tt1) dataContext).Ⴍ.GetEnumerator();
        while (((IEnumerator) enumerator).MoveNext())
        {
          INotifyPropertyChanged current = (INotifyPropertyChanged) ((IEnumerator<w2M>) enumerator).Current;
          DateTime dateTime = ((w2M) current).Ⴈ;
          int num2 = Operators.CompareString(dateTime.Month.ToString(), this.ႭႨ.Text, false) == 0 | Operators.CompareString(this.ႭႨ.Text, "All", false) == 0 ? 1 : 0;
          dateTime = ((w2M) current).Ⴈ;
          int num3 = dateTime.Year == DateAndTime.Year(DateAndTime.Now) ? 1 : 0;
          if ((num2 & num3) != 0)
          {
            checked { ++num1; }
            StringBuilder stringBuilder = (StringBuilder) serializable;
            object[] objArray = new object[6]
            {
              (object) ((w2M) current).Ⴍ,
              (object) (current as w2M).Ⴐ,
              null,
              null,
              null,
              null
            };
            dateTime = (current as w2M).Ⴈ;
            objArray[2] = (object) dateTime.ToShortTimeString();
            dateTime = (current as w2M).Ⴀ;
            objArray[3] = (object) dateTime.ToShortTimeString();
            objArray[4] = (object) (current as w2M).Ⴀ;
            objArray[5] = (object) (current as w2M).Ⴃ;
            stringBuilder.AppendFormat("{0,10} {1,10} {2,13} {3,12} {4,10} {5,13}\r\n", objArray);
          }
        }
      }
      finally
      {
        if (enumerator is IEnumerator<w2M>)
          (enumerator as IEnumerator<w2M>).Dispose();
      }
      (serializable as StringBuilder).AppendLine();
      ((StringBuilder) serializable).AppendFormat("{0,2} record(s)", (object) num1);
      MarshalByRefObject graphics = (MarshalByRefObject) obj1.Graphics;
      (graphics as Graphics).DrawString((string) s1, (Font) cloneable1, Brushes.Purple, 100f, 0.0f);
      ((Graphics) graphics).DrawString((string) s2, (Font) cloneable2, Brushes.Black, 100f, 40f);
      ((Graphics) graphics).DrawString(((StringBuilder) serializable).ToString(), (Font) disposable, Brushes.Black, 0.0f, 120f);
    }

    private void i5W([In] object obj0, [In] EventArgs obj1) => this.So5();

    private void Zc9([In] object obj0, [In] EventArgs obj1) => En6.Ⴈ.Ⴈ.m5E6((Form) En6.Ⴈ.Ⴀ);

    internal sealed class Ax1
    {
      public string Ⴃ;
      public string Ⴐ;
      internal static Yo0w Ⴅ;
      internal static int[] Ⴗ;
    }
  }
}
