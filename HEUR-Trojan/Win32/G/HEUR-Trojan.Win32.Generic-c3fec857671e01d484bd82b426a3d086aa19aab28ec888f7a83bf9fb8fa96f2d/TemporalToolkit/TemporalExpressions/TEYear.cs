// Decompiled with JetBrains decompiler
// Type: TemporalToolkit.TemporalExpressions.TEYear
// Assembly: TaskSchedulerExcept, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C99F8105-AF21-447F-A90A-9B9B26790CA7
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.05\HEUR-Trojan.Win32.Generic-c3fec857671e01d484bd82b426a3d086aa19aab28ec888f7a83bf9fb8fa96f2d.exe

using System;

namespace TemporalToolkit.TemporalExpressions
{
  public class TEYear : TemporalExpression
  {
    public int Start { get; set; }

    public int? End { get; set; }

    public TEYear(int year)
    {
label_1:
      int num1 = 1748852796;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1131114095)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.Start = year;
            num1 = (int) num2 * 1511758714 ^ -33439450;
            continue;
          case 3:
            num1 = (int) num2 * 656170007 ^ 2056657724;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public TEYear(int start, int end)
    {
label_1:
      int num1 = 1727576446;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 66865309)) % 7U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 1051083906 ^ -2015836934;
            continue;
          case 2:
            num1 = (int) num2 * 212147888 ^ -1872857330;
            continue;
          case 3:
            this.End = new int?(end);
            num1 = (int) num2 * -1023301674 ^ 1145293714;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * -319064772 ^ 762590292;
            continue;
          case 6:
            this.Start = start;
            num1 = (int) num2 * 271914361 ^ -404903534;
            continue;
          default:
            goto label_9;
        }
      }
label_3:
      return;
label_9:;
    }

    public override bool Includes(DateTime aDate)
    {
      int? end = this.End;
label_1:
      int num1 = -2019111860;
      bool flag;
      while (true)
      {
        uint num2;
        int start;
        int num3;
        switch ((num2 = (uint) (num1 ^ -937962045)) % 12U)
        {
          case 0:
            goto label_15;
          case 2:
            num1 = (int) num2 * 2077393879 ^ 1858657348;
            continue;
          case 3:
            end = this.End;
            start = this.Start;
            num1 = (int) num2 * 481195319 ^ 859242589;
            continue;
          case 4:
            flag = aDate.Year == this.Start;
            num1 = -501260550;
            continue;
          case 5:
            goto label_1;
          case 6:
            num1 = (int) num2 * -2130736510 ^ 1633934572;
            continue;
          case 7:
            int num4 = end.HasValue ? -1346333343 : (num4 = -181717817);
            num1 = num4 ^ (int) num2 * 1310780420;
            continue;
          case 8:
            int year = aDate.Year;
            end = this.End;
            int valueOrDefault = end.GetValueOrDefault();
            num3 = year <= valueOrDefault & end.HasValue ? 1 : 0;
            break;
          case 9:
            num1 = (int) num2 * -336382314 ^ 132673100;
            continue;
          case 10:
            if (aDate.Year >= this.Start)
            {
              num1 = -1170580193;
              continue;
            }
            num3 = 0;
            break;
          case 11:
            int num5 = !(end.GetValueOrDefault() < start & end.HasValue) ? 441154285 : (num5 = 620912735);
            num1 = num5 ^ (int) num2 * -35296680;
            continue;
          default:
            goto label_16;
        }
        flag = num3 != 0;
        num1 = -690989183;
      }
label_15:
      throw TEYear.\u206D‪‫‍⁯⁪​‪‍⁭‫‌⁯⁮⁪​‮⁭⁮‬⁫⁭‭⁪‍‏‫‭‏‫‫‌‏​​⁫‮‎‮‎‮();
label_16:
      return flag;
    }

    static ArgumentException \u206D‪‫‍⁯⁪​‪‍⁭‫‌⁯⁮⁪​‮⁭⁮‬⁫⁭‭⁪‍‏‫‭‏‫‫‌‏​​⁫‮‎‮‎‮() => new ArgumentException();
  }
}
