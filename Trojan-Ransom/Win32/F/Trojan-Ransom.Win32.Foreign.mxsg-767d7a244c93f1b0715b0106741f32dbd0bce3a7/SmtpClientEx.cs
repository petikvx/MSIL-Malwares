// Decompiled with JetBrains decompiler
// Type: svchost.SmtpClientEx
// Assembly: svchost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 5F810CD7-4751-4516-A451-E3D5DB1E7D3C
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00060-msil\Trojan-Ransom.Win32.Foreign.mxsg-767d7a244c93f1b0715b0106741f32dbd0bce3a7.exe

using System;
using System.Net.Mail;
using System.Net.NetworkInformation;
using System.Reflection;

namespace svchost
{
  public class SmtpClientEx : SmtpClient
  {
    private static readonly FieldInfo localHostName = SmtpClientEx.GetLocalHostNameField();

    public SmtpClientEx(string host, int port)
      : base(host, port)
    {
      this.Initialize();
    }

    public SmtpClientEx(string host)
      : base(host)
    {
      this.Initialize();
    }

    public SmtpClientEx() => this.Initialize();

    public string LocalHostName
    {
      get => (object) SmtpClientEx.localHostName == null ? (string) null : (string) SmtpClientEx.localHostName.GetValue((object) this);
      set
      {
        if (string.IsNullOrEmpty(value))
          throw new ArgumentNullException(nameof (value));
        if ((object) SmtpClientEx.localHostName == null)
          return;
        SmtpClientEx.localHostName.SetValue((object) this, (object) value);
      }
    }

    private static FieldInfo GetLocalHostNameField() => typeof (SmtpClient).GetField("clientDomain", BindingFlags.Instance | BindingFlags.NonPublic);

    private void Initialize()
    {
      IPGlobalProperties globalProperties = IPGlobalProperties.GetIPGlobalProperties();
      if (string.IsNullOrEmpty(globalProperties.HostName) || string.IsNullOrEmpty(globalProperties.DomainName))
        return;
      this.LocalHostName = globalProperties.HostName + "." + globalProperties.DomainName;
    }
  }
}
