// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.ReportingService2
// Assembly: file, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71f2cf7c2509b8fe
// MVID: 1F473243-1123-401F-8099-7648B7C34C41
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan-Dropper.Win32.Injector.deqx-3dcf304237ebec8756d9362ccf0259126c1c62ff5c0b09096876be2cdc64ae5a.exe

using \u0001;
using \u0008;
using System;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace SmartAssembly.SmartExceptionsCore
{
  [WebServiceBinding(Name = "ReportingServiceSoap", Namespace = "http://www.smartassembly.com/webservices/Reporting/")]
  internal class ReportingService2 : SoapHttpClientProtocol
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;

    static ReportingService2() => \u0003.\u0002(typeof (ReportingService2));

    public ReportingService2(string serverURL)
    {
      try
      {
        \u0004\u0004.\u0011((object) this, \u0092\u0004.\u0007\u0003(serverURL, ReportingService2.\u0001(1509)));
        \u0005\u0004.\u0012((object) this, 180000);
      }
      catch (Exception ex)
      {
        string o2 = serverURL;
        \u0004.\u0002(ex, (object) this, (object) o2);
        throw;
      }
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/Reporting/UploadReport2")]
    public string UploadReport2(
      string licenseID,
      [XmlElement(DataType = "base64Binary")] byte[] data,
      string email,
      string appFriendlyName,
      string buildFriendlyNumber)
    {
      object[] objArray1;
      try
      {
        string methodName = ReportingService2.\u0001(1530);
        object[] objArray2 = new object[5];
        if (true)
          goto label_2;
label_1:
        objArray1[0] = (object) licenseID;
        objArray1[1] = (object) data;
        objArray1[2] = (object) email;
        objArray1[3] = (object) appFriendlyName;
        objArray1[4] = (object) buildFriendlyNumber;
        object[] parameters = objArray1;
        return (string) this.Invoke(methodName, parameters)[0];
label_2:
        objArray1 = objArray2;
        goto label_1;
      }
      catch (Exception ex)
      {
        object[] o1 = objArray1;
        string o3 = licenseID;
        byte[] o4 = data;
        string o5 = email;
        string o6 = appFriendlyName;
        string o7 = buildFriendlyNumber;
        \u0004.\u0002(ex, (object) o1, (object) this, (object) o3, (object) o4, (object) o5, (object) o6, (object) o7);
        throw;
      }
    }
  }
}
