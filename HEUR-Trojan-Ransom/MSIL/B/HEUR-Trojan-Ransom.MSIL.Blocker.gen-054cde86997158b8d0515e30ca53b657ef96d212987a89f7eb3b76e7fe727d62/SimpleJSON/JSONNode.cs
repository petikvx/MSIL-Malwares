// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: InternalSi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: F44F14A9-876B-4F73-A898-F3E4E8A5FAFC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-054cde86997158b8d0515e30ca53b657ef96d212987a89f7eb3b76e7fe727d62.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) null;
label_1:
        int num1 = -499223996;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -314191055)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1223210311 ^ -1415240496;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 1517957096;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 957829238)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 12411710 ^ -1103230672;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1346223832 ^ -857830385;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
label_1:
        int num1 = 1096576065;
        string str;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1038365156)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -703398046 ^ 867493731;
              continue;
            case 1:
              str = "";
              num1 = (int) num2 * 693523252 ^ -332325876;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = -161318094;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1447861698)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              count = 0;
              num1 = (int) num2 * 1989623170 ^ 750174779;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem)
    {
label_1:
      int num1 = 1170575212;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 836182713)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -225777600 ^ 1480748974;
            continue;
          case 1:
            this.Add("", aItem);
            num1 = (int) num2 * 689991187 ^ 1831436326;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = -179191191;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1137958884)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 601356000 ^ -1930361505;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
      JSONNode jsonNode = (JSONNode) null;
label_1:
      int num1 = -2017422068;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1928072825)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1373569163 ^ -1673373702;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode = aNode;
label_1:
      int num1 = -1514101489;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -267509007)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1244305839 ^ -669804279;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = -1910452887;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ -560986276)) % 8U)
          {
            case 0:
              goto label_1;
            case 1:
              num2 = (int) num3 * -347350790 ^ -1658054171;
              continue;
            case 2:
            case 4:
              this.\u003C\u003E1__state = -1;
              num2 = -910237843;
              continue;
            case 5:
              int num4 = num1 == 0 ? -792159733 : (num4 = -703997591);
              num2 = num4 ^ (int) num3 * 1169894567;
              continue;
            case 6:
              num2 = (int) num3 * 240112500 ^ -352837693;
              continue;
            case 7:
              goto label_7;
            default:
              goto label_8;
          }
        }
label_7:
        return false;
label_8:
        return false;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        bool deepChilds;
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = -1326046764;
          IEnumerator<JSONNode> enumerator1;
          JSONNode C;
          IEnumerator<JSONNode> enumerator2;
          JSONNode D;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ -1066484104)) % 31U)
            {
              case 0:
                num2 = (int) num3 * -91441259 ^ -1419233685;
                continue;
              case 1:
                deepChilds = false;
                num2 = -931188609;
                continue;
              case 2:
                num2 = (int) num3 * 204393495 ^ 1173929715;
                continue;
              case 3:
              case 23:
                goto label_30;
              case 5:
                D = enumerator2.Current;
                this.\u003C\u003E2__current = D;
                num2 = -62608454;
                continue;
              case 6:
                int num4 = num1 != 0 ? -1173598025 : (num4 = -14630454);
                num2 = num4 ^ (int) num3 * -1699340260;
                continue;
              case 7:
                enumerator1 = this.Childs.GetEnumerator();
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * -573319400 ^ 429944527;
                continue;
              case 8:
                num2 = (int) num3 * 1755547030 ^ 1313504006;
                continue;
              case 9:
                num2 = (int) num3 * -172707940 ^ -1052332578;
                continue;
              case 10:
              case 27:
                this.\u003C\u003E1__state = -1;
                num2 = -2100128245;
                continue;
              case 11:
                this.\u003C\u003E1__state = 1;
                num2 = (int) num3 * 1710022448 ^ 514622716;
                continue;
              case 12:
              case 13:
                this.\u003C\u003E1__state = -4;
                num2 = -2141033111;
                continue;
              case 14:
                int num5;
                num2 = num5 = !JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u200F‍⁬‌⁫⁯⁯‎⁬⁫⁬⁫‮⁬‬‌⁬‎⁯‭‬⁪‎⁪⁪‌‬‫‎⁬⁭‮⁭‪‎⁬‭​⁯⁬‮((IEnumerator) enumerator1) ? -2110981621 : (num5 = -1105665945);
                continue;
              case 15:
                enumerator2 = (IEnumerator<JSONNode>) null;
                C = (JSONNode) null;
                num2 = (int) num3 * 1930709019 ^ 305672138;
                continue;
              case 16:
                enumerator2 = C.DeepChilds.GetEnumerator();
                num2 = (int) num3 * -2035960806 ^ -1229275377;
                continue;
              case 17:
                this.\u003C\u003Em__Finally2();
                num2 = (int) num3 * -1996839483 ^ 539009158;
                continue;
              case 18:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * 1675395158 ^ 1147154459;
                continue;
              case 19:
                num2 = (int) num3 * -866038736 ^ -1580610739;
                continue;
              case 20:
                num2 = (int) num3 * -457909038 ^ 588017624;
                continue;
              case 21:
                goto label_1;
              case 22:
                int num6;
                num2 = num6 = num1 != 1 ? -1964462815 : (num6 = -872503391);
                continue;
              case 24:
                this.\u003C\u003E1__state = -4;
                num2 = (int) num3 * 2144110254 ^ -1245387958;
                continue;
              case 25:
                D = (JSONNode) null;
                num2 = (int) num3 * -591273127 ^ -1157805633;
                continue;
              case 26:
                enumerator1 = (IEnumerator<JSONNode>) null;
                num2 = (int) num3 * -172426552 ^ 1973590273;
                continue;
              case 28:
                C = enumerator1.Current;
                num2 = -479335325;
                continue;
              case 29:
                deepChilds = true;
                num2 = (int) num3 * -319634532 ^ -1130992816;
                continue;
              case 30:
                int num7;
                num2 = num7 = JSONNode.\u003Cget_DeepChilds\u003Ed__19.\u200F‍⁬‌⁫⁯⁯‎⁬⁫⁬⁫‮⁬‬‌⁬‎⁯‭‬⁪‎⁪⁪‌‬‫‎⁬⁭‮⁭‪‎⁬‭​⁯⁬‮((IEnumerator) enumerator2) ? -661550790 : (num7 = -890057736);
                continue;
              default:
                goto label_28;
            }
          }
label_28:
          deepChilds = false;
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_30:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = 1148302426;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 512747473)) % 4U)
        {
          case 0:
            num1 = (int) num2 * 1775578397 ^ 616056520;
            continue;
          case 2:
            goto label_1;
          case 3:
            str = nameof (JSONNode);
            num1 = (int) num2 * 1273229716 ^ -1792425359;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual string ToString(string aPrefix) => nameof (JSONNode);

    public virtual int AsInt
    {
      get
      {
        int result = 0;
        bool flag = int.TryParse(this.Value, out result);
label_1:
        int num1 = 1316438917;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2127562466)) % 6U)
          {
            case 1:
              num1 = (int) num2 * -1657292903 ^ 347494479;
              continue;
            case 2:
              goto label_1;
            case 3:
              int num3 = !flag ? -1805163365 : (num3 = -532999504);
              num1 = num3 ^ (int) num2 * -1529207001;
              continue;
            case 4:
              asInt = 0;
              num1 = 1846020775;
              continue;
            case 5:
              asInt = result;
              num1 = (int) num2 * 164880879 ^ -292847713;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asInt;
      }
      set => this.Value = value.ToString();
    }

    public virtual float AsFloat
    {
      get
      {
        float result = 0.0f;
        if (!float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206C‬‌⁪‏⁪⁬​⁮‏‫‬‍‮‬‌⁮‏‎‮‏‌⁯‌‮‮⁬‮⁫⁬⁯⁪‏‎‭​‮​‭‌‮(), out result))
          goto label_4;
label_1:
        int num1 = 1065557830;
label_2:
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 762101890)) % 5U)
          {
            case 0:
              num1 = (int) num2 * 529403774 ^ -1509465841;
              continue;
            case 1:
              asFloat = result;
              num1 = (int) num2 * -1943399018 ^ -587737093;
              continue;
            case 3:
              goto label_1;
            case 4:
              goto label_4;
            default:
              goto label_6;
          }
        }
label_6:
        return asFloat;
label_4:
        asFloat = 0.0f;
        num1 = 1845539560;
        goto label_2;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = -898573563;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1875355805)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -1444386481 ^ -203424585;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
        double result = 0.0;
        bool flag = double.TryParse(this.Value, out result);
label_1:
        int num1 = -291110271;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -547194821)) % 5U)
          {
            case 0:
              asDouble = result;
              num1 = (int) num2 * 765007709 ^ 1595964185;
              continue;
            case 1:
              asDouble = 0.0;
              num1 = -795985333;
              continue;
            case 2:
              goto label_1;
            case 3:
              int num3 = !flag ? -2142200423 : (num3 = -704476121);
              num1 = num3 ^ (int) num2 * 580862031;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = 1411094469;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1393965682)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * -1689658949 ^ 1806429106;
              continue;
            case 2:
              goto label_3;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
        if (!bool.TryParse(this.Value, out result))
          goto label_4;
label_1:
        int num1 = 2135294629;
label_2:
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 394310841)) % 5U)
          {
            case 1:
              goto label_4;
            case 2:
              asBool = result;
              num1 = (int) num2 * -26540055 ^ -1828141337;
              continue;
            case 3:
              num1 = (int) num2 * -1516918129 ^ -1140178659;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asBool;
label_4:
        asBool = !JSONNode.\u200E⁮‭⁪‍‭‍⁭‪‮‎‌‬​⁭‭⁪‏⁪‏⁪‫⁫‎‭‎‫⁮‍‫‮‍​‭⁫‎‭‬​‭‮(this.Value);
        num1 = 2019662499;
        goto label_2;
      }
      set
      {
label_1:
        int num1 = -2087773077;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2083395534)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              this.Value = value ? "true" : "false";
              num1 = -243964324;
              continue;
            case 2:
              num1 = (int) num2 * 1684881585 ^ -1873552749;
              continue;
            case 3:
              goto label_3;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1214340746;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1103804107)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * -1895123294 ^ -1146542898;
              continue;
            case 3:
              num1 = (int) num2 * -569918469 ^ 537538564;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 1962664810;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1203374759)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              asObject = this as JSONClass;
              num1 = (int) num2 * 1962885531 ^ -676586622;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = 449586445;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2123852781)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -1203834251 ^ 1319855350;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
label_1:
      int num1 = -1124007721;
      string str1;
      while (true)
      {
        uint num2;
        string str2;
        switch ((num2 = (uint) (num1 ^ -1472589220)) % 5U)
        {
          case 0:
            goto label_1;
          case 2:
            if (!(d == (object) null))
            {
              num1 = (int) num2 * -1393514749 ^ 1250250714;
              continue;
            }
            str2 = (string) null;
            break;
          case 3:
            num1 = (int) num2 * -1757732188 ^ -1933703714;
            continue;
          case 4:
            str2 = d.Value;
            break;
          default:
            goto label_9;
        }
        str1 = str2;
        num1 = -626713704;
      }
label_9:
      return str1;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_4;
label_1:
      int num1 = -1907546667;
label_2:
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -595542298)) % 7U)
        {
          case 0:
            num1 = (int) num2 * 577406194 ^ 346960419;
            continue;
          case 1:
            goto label_3;
          case 2:
            flag = true;
            num1 = (int) num2 * 951749756 ^ -321116014;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * 1213463256 ^ 1951131987;
            continue;
          case 6:
            flag = (object) a == b;
            num1 = -1858307771;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      int num3 = a is JSONLazyCreator ? 1 : 0;
      goto label_5;
label_10:
      return flag;
label_4:
      num3 = 0;
label_5:
      num1 = num3 != 0 ? -1187191152 : (num1 = -68742419);
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
label_1:
      int num1 = -712361327;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -977918614)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -2139338637 ^ 1432013303;
            continue;
          case 3:
            flag = !(a == b);
            num1 = (int) num2 * 109789741 ^ 473226864;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj) => (object) this == obj;

    public override int GetHashCode()
    {
label_1:
      int num1 = -2142059824;
      int hashCode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1302502388)) % 3U)
        {
          case 1:
            hashCode = this.\u206B‏⁫‎‪‪‏⁮‫⁫​⁬‏‍‮‎‍‭⁯‎⁪⁫⁫‍‫‏‪‍‍⁫‭⁮‌‪⁮​‍‎⁪‏‮();
            num1 = (int) num2 * 1988552247 ^ 844574285;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return hashCode;
    }

    internal static string Escape(string aText)
    {
label_1:
      int num1 = 2144751116;
      string str1;
      int num2;
      char ch1;
      string str2;
      string str3;
      char ch2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 1714191447)) % 28U)
        {
          case 0:
            ch1 = JSONNode.\u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮(str1, num2);
            num1 = 303845329;
            continue;
          case 1:
            str2 = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(str2, "\\\"");
            num1 = 405167056;
            continue;
          case 2:
label_11:
            str2 = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(str2, ch1.ToString());
            num1 = 405167056;
            continue;
          case 3:
            num1 = 1279939726;
            continue;
          case 4:
            num1 = (int) num3 * -2037341141 ^ -750212896;
            continue;
          case 5:
            num1 = (int) num3 * 1715452370 ^ -714549843;
            continue;
          case 6:
            num1 = (int) num3 * 580177872 ^ 1722206675;
            continue;
          case 7:
label_20:
            str2 = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(str2, "\\r");
            num1 = 541459022;
            continue;
          case 8:
            num1 = (int) num3 * -1831713874 ^ 1326337992;
            continue;
          case 9:
            int num4;
            num1 = num4 = ch2 == '\\' ? 1080504160 : (num4 = 1775267133);
            continue;
          case 10:
label_8:
            str2 = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(str2, "\\f");
            num1 = 405167056;
            continue;
          case 11:
            str2 = "";
            num1 = (int) num3 * -1509253174 ^ -1790066901;
            continue;
          case 12:
            num1 = (int) num3 * -1651230002 ^ 19998330;
            continue;
          case 13:
            num1 = (int) num3 * -1189369643 ^ -824702691;
            continue;
          case 14:
            num1 = (int) num3 * 259916342 ^ 969818017;
            continue;
          case 15:
            str2 = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(str2, "\\\\");
            num1 = 405167056;
            continue;
          case 16:
            int num5;
            num1 = num5 = num2 < JSONNode.\u202D⁮‍​‌⁮⁭‫‌⁬‎⁪​‍‪‬⁪‍‭‬⁬⁭‎‍⁮​‍⁯‍‏‪⁬‪⁬​⁭‬‫‏⁫‮(str1) ? 1566241631 : (num5 = 729820696);
            continue;
          case 17:
label_23:
            str2 = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(str2, "\\n");
            num1 = 537155900;
            continue;
          case 18:
            ch2 = ch1;
            switch (ch2)
            {
              case '\b':
                goto label_19;
              case '\t':
                goto label_29;
              case '\n':
                goto label_23;
              case '\v':
                goto label_11;
              case '\f':
                goto label_8;
              case '\r':
                goto label_20;
              default:
                num1 = (int) num3 * 996908893 ^ -721278877;
                continue;
            }
          case 19:
label_19:
            str2 = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(str2, "\\b");
            num1 = 982507651;
            continue;
          case 20:
            int num6;
            num1 = num6 = ch2 == '"' ? 1714002794 : (num6 = 1044480723);
            continue;
          case 21:
            ++num2;
            num1 = (int) num3 * -424186888 ^ -1497200361;
            continue;
          case 22:
            str1 = aText;
            num2 = 0;
            num1 = (int) num3 * 924625663 ^ -1776618496;
            continue;
          case 23:
            str3 = str2;
            num1 = (int) num3 * 2108232281 ^ 1747305192;
            continue;
          case 25:
            goto label_1;
          case 26:
label_29:
            str2 = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(str2, "\\t");
            num1 = 718220743;
            continue;
          case 27:
            num1 = (int) num3 * -1968824620 ^ -1490690740;
            continue;
          default:
            goto label_30;
        }
      }
label_30:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
label_1:
      int num1 = 1902370401;
      bool flag1;
      bool flag2;
      string aItem;
      bool flag3;
      string aKey;
      JSONNode jsonNode1;
      string s;
      char ch1;
      char ch2;
      int num2;
      char ch3;
      bool flag4;
      bool flag5;
      char ch4;
      bool flag6;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      char ch5;
      bool flag13;
      bool flag14;
      bool flag15;
      JSONNode jsonNode2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ 631246858)) % 156U)
        {
          case 0:
            aItem = "";
            num1 = (int) num3 * -587957281 ^ 1358567535;
            continue;
          case 1:
            int num4 = flag1 ? 706508152 : (num4 = 454049898);
            num1 = num4 ^ (int) num3 * 310381908;
            continue;
          case 2:
label_11:
            int num5;
            num1 = num5 = flag2 ? 1330983312 : (num5 = 1039176773);
            continue;
          case 3:
            int num6 = !flag6 ? 383064321 : (num6 = 2037634052);
            num1 = num6 ^ (int) num3 * -1119471983;
            continue;
          case 4:
            num1 = (int) num3 * -1484214509 ^ 1518750773;
            continue;
          case 5:
            int num7;
            num1 = num7 = ch4 != '"' ? 2136873700 : (num7 = 1205189077);
            continue;
          case 6:
            s = JSONNode.\u200C‌‎⁬‬⁪⁫‏‮‫⁮​‌‌⁯‫‎‪⁫‭⁪⁭‭‮​‎⁫‎⁯⁫‎⁬‍‭‌⁮‬⁯⁭⁫‮(aJSON, num2 + 1, 4);
            num1 = (int) num3 * 916522419 ^ -451747420;
            continue;
          case 7:
            num1 = 502358690;
            continue;
          case 8:
            int num8 = jsonNode1 != (object) null ? -1426342005 : (num8 = -113125012);
            num1 = num8 ^ (int) num3 * 208582225;
            continue;
          case 9:
            flag9 = num2 < JSONNode.\u202D⁮‍​‌⁮⁭‫‌⁬‎⁪​‍‪‬⁪‍‭‬⁬⁭‎‍⁮​‍⁯‍‏‪⁬‪⁬​⁭‬‫‏⁫‮(aJSON);
            num1 = 1545906133;
            continue;
          case 10:
            num1 = (int) num3 * 37450817 ^ -427790528;
            continue;
          case 11:
            int num9;
            num1 = num9 = ch4 == '}' ? 1588240665 : (num9 = 1323876587);
            continue;
          case 12:
            int num10;
            num1 = num10 = ch4 != ',' ? 2024575565 : (num10 = 321116496);
            continue;
          case 13:
            num1 = (int) num3 * 2093024470 ^ 1372857693;
            continue;
          case 14:
            num1 = 1454016094;
            continue;
          case 15:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = 634508419;
            continue;
          case 16:
            int num11 = flag7 ? -1495705724 : (num11 = -754121114);
            num1 = num11 ^ (int) num3 * 313978495;
            continue;
          case 17:
            flag1 = jsonNode1 != (object) null;
            num1 = (int) num3 * 239818539 ^ -64952496;
            continue;
          case 18:
            flag14 = JSONNode.\u206A‏⁮‫⁭‮‌‏‍⁮‌‭‮‎⁯‪⁬⁯‏​‬‌​⁯⁮‭‭⁯‎‭‏‬⁭‌‮‫⁫‮​‎‮(aItem, "");
            num1 = 1611049553;
            continue;
          case 19:
            ch5 = JSONNode.\u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮(aJSON, num2);
            num1 = 1914760609;
            continue;
          case 20:
            num1 = (int) num3 * -1729496313 ^ 952191114;
            continue;
          case 21:
            num1 = 558354569;
            continue;
          case 22:
            int num12 = flag11 ? -2142233296 : (num12 = -318305165);
            num1 = num12 ^ (int) num3 * -215314458;
            continue;
          case 23:
label_56:
            flag7 = flag2;
            num1 = 1378907554;
            continue;
          case 24:
            num1 = (int) num3 * 1767899552 ^ -1143941714;
            continue;
          case 25:
            num1 = (int) num3 * -543914388 ^ 960339164;
            continue;
          case 26:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -1964474801 ^ 742623733;
            continue;
          case 27:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -758901822 ^ 1322463326;
            continue;
          case 28:
            num1 = (int) num3 * 2096478629 ^ 1519597277;
            continue;
          case 29:
            num1 = (int) num3 * 77019954 ^ 1725171682;
            continue;
          case 30:
            goto label_64;
          case 31:
            num2 += 4;
            num1 = (int) num3 * -769199817 ^ 514337329;
            continue;
          case 32:
            aKey = "";
            num1 = 1119807254;
            continue;
          case 33:
            num1 = (int) num3 * -1216745723 ^ 1982874647;
            continue;
          case 34:
          case 52:
          case 68:
          case 75:
          case 128:
label_95:
            ++num2;
            num1 = 1696935834;
            continue;
          case 35:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -52860407 ^ -1729062297;
            continue;
          case 36:
            int num13 = ch2 <= 'f' ? 936809387 : (num13 = 601401100);
            num1 = num13 ^ (int) num3 * 647689990;
            continue;
          case 37:
            aItem = "";
            aKey = "";
            num1 = (int) num3 * -1108831861 ^ 1424283669;
            continue;
          case 38:
            int num14 = flag8 ? 1372984020 : (num14 = 546217951);
            num1 = num14 ^ (int) num3 * 289829292;
            continue;
          case 39:
            num1 = (int) num3 * 171662445 ^ 1844445086;
            continue;
          case 40:
            flag2 = false;
            num1 = (int) num3 * 971463520 ^ -2001581185;
            continue;
          case 41:
            int num15;
            num1 = num15 = JSONNode.\u206A‏⁮‫⁭‮‌‏‍⁮‌‭‮‎⁯‪⁬⁯‏​‬‌​⁯⁮‭‭⁯‎‭‏‬⁭‌‮‫⁫‮​‎‮(aKey, "") ? 10713837 : (num15 = 179211146);
            continue;
          case 42:
            int num16 = ch4 == ':' ? -534976596 : (num16 = -133119117);
            num1 = num16 ^ (int) num3 * -1163331780;
            continue;
          case 43:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num3 * -1930491287 ^ -1733530871;
            continue;
          case 44:
            goto label_1;
          case 45:
            flag3 = JSONNode.\u206A‏⁮‫⁭‮‌‏‍⁮‌‭‮‎⁯‪⁬⁯‏​‬‌​⁯⁮‭‭⁯‎‭‏‬⁭‌‮‫⁫‮​‎‮(aItem, "");
            num1 = (int) num3 * 1316250113 ^ -732503226;
            continue;
          case 46:
            aItem = "";
            num1 = (int) num3 * 866126884 ^ -1650386258;
            continue;
          case 47:
            int num17 = flag9 ? 1203837370 : (num17 = 1665684347);
            num1 = num17 ^ (int) num3 * 2031596993;
            continue;
          case 48:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, JSONNode.\u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * 1419288776 ^ 1740055903;
            continue;
          case 49:
            num1 = (int) num3 * 1818705020 ^ -394187534;
            continue;
          case 50:
            num1 = 42357812;
            continue;
          case 51:
label_10:
            int num18;
            num1 = num18 = flag2 ? 448726039 : (num18 = 1175810744);
            continue;
          case 53:
            num1 = (int) num3 * 1751827979 ^ -1917743295;
            continue;
          case 54:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, JSONNode.\u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * -2115851878 ^ -2130408891;
            continue;
          case 55:
            int num19;
            num1 = num19 = ch4 > ']' ? 751954480 : (num19 = 1454586360);
            continue;
          case 56:
            num1 = (int) num3 * -1453805299 ^ 1501438511;
            continue;
          case 57:
            num1 = (int) num3 * -1935712459 ^ -1529727365;
            continue;
          case 58:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, JSONNode.\u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * -784486358 ^ -1537738666;
            continue;
          case 59:
label_54:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, JSONNode.\u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮(aJSON, num2).ToString());
            num1 = 2067958334;
            continue;
          case 60:
            int num20;
            num1 = num20 = jsonNodeStack.Count == 0 ? 40339812 : (num20 = 1240928414);
            continue;
          case 61:
            int num21 = flag12 ? 517306171 : (num21 = 2109028493);
            num1 = num21 ^ (int) num3 * 1125677399;
            continue;
          case 62:
label_94:
            num1 = 736685440;
            continue;
          case 63:
            num1 = (int) num3 * -1850142418 ^ -667802604;
            continue;
          case 64:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, "\f");
            num1 = 166466290;
            continue;
          case 65:
label_88:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, "\t");
            num1 = 1117638317;
            continue;
          case 66:
            int num22 = ch4 > ' ' ? 1353748385 : (num22 = 1350064943);
            num1 = num22 ^ (int) num3 * -1387740657;
            continue;
          case 67:
            int num23;
            num1 = num23 = ch4 != ' ' ? 1541472561 : (num23 = 1520341628);
            continue;
          case 69:
            jsonNode2 = jsonNode1;
            num1 = 1351773978;
            continue;
          case 70:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, JSONNode.\u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * 184525531 ^ 648914683;
            continue;
          case 71:
            switch (ch4)
            {
              case '\t':
                goto label_11;
              case '\n':
              case '\r':
                goto label_95;
              case '\v':
              case '\f':
                goto label_54;
              default:
                num1 = (int) num3 * 1615767447 ^ -782035732;
                continue;
            }
          case 72:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, JSONNode.\u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * -1021840185 ^ -1244513262;
            continue;
          case 73:
            aKey = JSONNode.\u200C‍⁫‍‮‬‎‎⁪⁬⁪​‎⁫‬‬​‬​​‍‌‌⁬⁭‮‬⁫‎‏‍⁬‍⁬‬‬⁪‎‬⁬‮(aKey);
            num1 = (int) num3 * 837879138 ^ 1124268885;
            continue;
          case 74:
            num1 = (int) num3 * 1971583525 ^ -1333289248;
            continue;
          case 76:
            num2 = 0;
            num1 = (int) num3 * 1273387824 ^ -1569764497;
            continue;
          case 77:
            int num24 = jsonNode1 is JSONArray ? -1254059184 : (num24 = -113663918);
            num1 = num24 ^ (int) num3 * 467472877;
            continue;
          case 78:
            flag4 = flag2;
            num1 = (int) num3 * -2111479645 ^ -533360221;
            continue;
          case 79:
            flag10 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -317446784 ^ -1810091059;
            continue;
          case 80:
            aKey = JSONNode.\u200C‍⁫‍‮‬‎‎⁪⁬⁪​‎⁫‬‬​‬​​‍‌‌⁬⁭‮‬⁫‎‏‍⁬‍⁬‬‬⁪‎‬⁬‮(aKey);
            num1 = (int) num3 * -961708260 ^ 2124751895;
            continue;
          case 81:
            aKey = aItem;
            num1 = 1835767200;
            continue;
          case 82:
            int num25;
            num1 = num25 = ch4 == '{' ? 694821224 : (num25 = 1802364131);
            continue;
          case 83:
            int num26 = !flag14 ? 255231281 : (num26 = 1223606184);
            num1 = num26 ^ (int) num3 * 485802015;
            continue;
          case 84:
            flag6 = jsonNodeStack.Count > 0;
            num1 = (int) num3 * -1142974259 ^ 1087452633;
            continue;
          case 85:
            int num27 = flag3 ? 106913268 : (num27 = 1470048519);
            num1 = num27 ^ (int) num3 * 1673562702;
            continue;
          case 86:
            num1 = (int) num3 * 1259949718 ^ 521296569;
            continue;
          case 87:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1765525615 ^ -1722660615;
            continue;
          case 88:
            jsonNodeStack.Pop();
            num1 = 621597223;
            continue;
          case 89:
            int num28 = flag5 ? -1946152341 : (num28 = -1887921558);
            num1 = num28 ^ (int) num3 * 1181767756;
            continue;
          case 90:
            num1 = (int) num3 * 338033263 ^ 715131108;
            continue;
          case 91:
            num1 = (int) num3 * 1319176202 ^ -1472200794;
            continue;
          case 92:
            num1 = (int) num3 * -452363716 ^ -227468514;
            continue;
          case 93:
            num1 = (int) num3 * -309114074 ^ -2019386905;
            continue;
          case 94:
            int num29;
            num1 = num29 = ch2 != 'n' ? 172656853 : (num29 = 1771770379);
            continue;
          case 95:
            num1 = (int) num3 * -790671214 ^ -652871013;
            continue;
          case 96:
            num1 = (int) num3 * -1384362595 ^ 44576502;
            continue;
          case 97:
label_35:
            ++num2;
            flag12 = flag2;
            num1 = 727529187;
            continue;
          case 98:
            aItem = "";
            num1 = (int) num3 * -834633864 ^ 63273815;
            continue;
          case 99:
            aKey = "";
            num1 = 1905187716;
            continue;
          case 100:
            num1 = (int) num3 * 2145801382 ^ -1992051515;
            continue;
          case 101:
            flag8 = JSONNode.\u206A‏⁮‫⁭‮‌‏‍⁮‌‭‮‎⁯‪⁬⁯‏​‬‌​⁯⁮‭‭⁯‎‭‏‬⁭‌‮‫⁫‮​‎‮(aKey, "");
            num1 = 847147800;
            continue;
          case 102:
            ch3 = JSONNode.\u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮(aJSON, num2);
            ch1 = ch3;
            num1 = (int) num3 * 613194724 ^ -1992939419;
            continue;
          case 104:
            num1 = 2069020248;
            continue;
          case 105:
            num1 = (int) num3 * -860614461 ^ 632340672;
            continue;
          case 106:
label_145:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, "\r");
            num1 = 799573833;
            continue;
          case 107:
            num1 = (int) num3 * 1936977623 ^ 1078680330;
            continue;
          case 108:
label_59:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, ch3.ToString());
            num1 = 1117638317;
            continue;
          case 109:
            flag5 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -1064992040 ^ -1933951341;
            continue;
          case 110:
            int num30;
            num1 = num30 = !flag2 ? 1344258552 : (num30 = 161379053);
            continue;
          case 111:
            ch4 = ch5;
            num1 = (int) num3 * 1148209516 ^ 804115077;
            continue;
          case 112:
            switch (ch4)
            {
              case '[':
                goto label_10;
              case '\\':
                goto label_35;
              case ']':
                goto label_56;
              default:
                num1 = 1347710026;
                continue;
            }
          case 113:
            int num31 = flag15 ? 1275640335 : (num31 = 1928066142);
            num1 = num31 ^ (int) num3 * 1600196526;
            continue;
          case 114:
            num1 = (int) num3 * 1189807860 ^ 717238738;
            continue;
          case 115:
            int num32 = flag4 ? -680694772 : (num32 = -1193350156);
            num1 = num32 ^ (int) num3 * -1990137191;
            continue;
          case 116:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 1065910809 ^ 139046109;
            continue;
          case 117:
            goto label_144;
          case 118:
            switch (ch2)
            {
              case 'r':
                goto label_145;
              case 's':
                goto label_59;
              case 't':
                goto label_88;
              case 'u':
                goto label_94;
              default:
                num1 = 1255942066;
                continue;
            }
          case 119:
            aItem = "";
            num1 = (int) num3 * 312156310 ^ 231436252;
            continue;
          case 120:
            int num33 = flag13 ? -2071661841 : (num33 = -1765269641);
            num1 = num33 ^ (int) num3 * 1590740412;
            continue;
          case 121:
            flag11 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1295930767 ^ 218368667;
            continue;
          case 122:
            num1 = (int) num3 * -433213652 ^ 1880466;
            continue;
          case 123:
            ch2 = ch1;
            num1 = (int) num3 * -1600876459 ^ -29939779;
            continue;
          case 124:
            flag15 = JSONNode.\u206A‏⁮‫⁭‮‌‏‍⁮‌‭‮‎⁯‪⁬⁯‏​‬‌​⁯⁮‭‭⁯‎‭‏‬⁭‌‮‫⁫‮​‎‮(aKey, "");
            num1 = 1942855235;
            continue;
          case 125:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1513725846 ^ 2114793987;
            continue;
          case 126:
            int num34;
            num1 = num34 = ch2 != 'f' ? 1949093342 : (num34 = 1017652366);
            continue;
          case (uint) sbyte.MaxValue:
            num1 = (int) num3 * 886353418 ^ -1457719101;
            continue;
          case 129:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, "\n");
            num1 = 61627322;
            continue;
          case 130:
            int num35;
            num1 = num35 = !flag2 ? 424341121 : (num35 = 738744510);
            continue;
          case 131:
            int num36 = ch4 > ',' ? 2044294600 : (num36 = 709076069);
            num1 = num36 ^ (int) num3 * -563774133;
            continue;
          case 132:
            num1 = (int) num3 * 998416120 ^ -1878287616;
            continue;
          case 133:
            int num37 = ch2 != 'b' ? -996384232 : (num37 = -1918246701);
            num1 = num37 ^ (int) num3 * -122080325;
            continue;
          case 134:
            flag13 = flag2;
            num1 = 796608402;
            continue;
          case 135:
            num1 = (int) num3 * -1527490175 ^ -472571578;
            continue;
          case 136:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, JSONNode.\u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮(aJSON, num2).ToString());
            num1 = (int) num3 * -635686226 ^ 1557883678;
            continue;
          case 137:
            num1 = (int) num3 * -924169422 ^ 1190252486;
            continue;
          case 138:
            aKey = "";
            num1 = 920325177;
            continue;
          case 139:
            flag2 = !flag2;
            num1 = 2067958334;
            continue;
          case 140:
            aKey = JSONNode.\u200C‍⁫‍‮‬‎‎⁪⁬⁪​‎⁫‬‬​‬​​‍‌‌⁬⁭‮‬⁫‎‏‍⁬‍⁬‬‬⁪‎‬⁬‮(aKey);
            num1 = (int) num3 * 1425916769 ^ -1793686453;
            continue;
          case 141:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -614528765 ^ -1141650883;
            continue;
          case 142:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = 644944638;
            continue;
          case 143:
            num1 = (int) num3 * -1159842703 ^ 1146549755;
            continue;
          case 144:
            num1 = (int) num3 * -1190424169 ^ -1547371455;
            continue;
          case 145:
            num1 = (int) num3 * 1524325291 ^ 1139123314;
            continue;
          case 146:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1378914311 ^ 1492973741;
            continue;
          case 147:
            num1 = (int) num3 * -1707468900 ^ -870384578;
            continue;
          case 148:
            num1 = (int) num3 * -985556991 ^ -1516598187;
            continue;
          case 149:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -289915416 ^ 1541564678;
            continue;
          case 150:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, "\b");
            num1 = 1404116482;
            continue;
          case 151:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1892067944 ^ 30282808;
            continue;
          case 152:
            aItem = JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮(aItem, ((char) int.Parse(s, NumberStyles.AllowHexSpecifier)).ToString());
            num1 = (int) num3 * -1061596054 ^ 1882039273;
            continue;
          case 153:
            int num38;
            num1 = num38 = !JSONNode.\u206A‏⁮‫⁭‮‌‏‍⁮‌‭‮‎⁯‪⁬⁯‏​‬‌​⁯⁮‭‭⁯‎‭‏‬⁭‌‮‫⁫‮​‎‮(aKey, "") ? 1698315880 : (num38 = 834852977);
            continue;
          case 154:
            aKey = "";
            aItem = "";
            jsonNode1 = jsonNodeStack.Peek();
            num1 = 538936998;
            continue;
          case 155:
            int num39 = !flag10 ? -452214757 : (num39 = -1668520790);
            num1 = num39 ^ (int) num3 * -1906473804;
            continue;
          default:
            goto label_156;
        }
      }
label_64:
      throw JSONNode.\u206D⁭⁯⁬‪⁮‏⁯‮‮⁭‮⁫​⁪⁮⁫⁬⁬‌‫⁭⁪​⁯⁮‫⁫‮‍‎‎​⁫‎‮⁪⁯⁭‬‮("JSON Parse: Too many closing brackets");
label_144:
      throw JSONNode.\u206D⁭⁯⁬‪⁮‏⁯‮‮⁭‮⁫​⁪⁮⁫⁬⁬‌‫⁭⁪​⁯⁮‫⁫‮‍‎‎​⁫‎‮⁪⁯⁭‬‮("JSON Parse: Quotation marks seems to be messed up.");
label_156:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = 115897091;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1618336086)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            aWriter = JSONNode.\u202A‭‭⁫⁪⁭‍‮⁯‌​‏‎‪‬‬⁬⁪‫‪‎‮⁯‬⁮​‏‌‏‭‍⁮⁮⁮‌⁭‬‪‏⁭‮(aData);
            num1 = (int) num2 * -478327828 ^ 544710024;
            continue;
          case 2:
            this.Serialize(aWriter);
            num1 = (int) num2 * 1480871934 ^ 501882469;
            continue;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u206D⁭⁯⁬‪⁮‏⁯‮‮⁭‮⁫​⁪⁮⁫⁬⁬‌‫⁭⁪​⁯⁮‫⁫‮‍‎‎​⁫‎‮⁪⁯⁭‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u206D⁭⁯⁬‪⁮‏⁯‮‮⁭‮⁫​⁪⁮⁫⁬⁬‌‫⁭⁪​⁯⁮‫⁫‮‍‎‎​⁫‎‮⁪⁯⁭‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u206D⁭⁯⁬‪⁮‏⁯‮‮⁭‮⁫​⁪⁮⁫⁬⁬‌‫⁭⁪​⁯⁮‫⁫‮‍‎‎​⁫‎‮⁪⁯⁭‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u200E‏‬‌‫​⁮⁯‌‪⁮‮​​‬‬‪‌⁭‎‭‪‪‎‪⁮‪‭⁬‫‌​⁯⁮‍⁬‏‌​‏‮(JSONNode.\u202D‌⁬⁮⁫‬‎‏‮⁪⁫‏⁬‮‫⁫​‪‫‪‭‮‏‫⁪⁫⁯‫⁬‎‌‬‍‭⁬‬⁭⁫‫⁫‮((FileSystemInfo) JSONNode.\u202D‍⁮‭⁯‫⁭​⁯‬‍‪⁫⁫⁯⁪⁫‭‏‎‌‪‍‌‏‏‍⁮⁪‪‪‬‍‌‪‮‫‍‪‎‮(JSONNode.\u202B‫⁪⁫⁫‪‏⁭‎‬‪‪⁭‭⁭​⁫​⁫‎‬​‬‪‭⁪⁫‫‍‫‏‌⁭‏‌‮‪⁪⁬‮‮(aFileName))));
      FileStream aData = JSONNode.\u200D‎‫‫‫⁬⁫‌⁮⁫⁪‍⁫⁪‏​​‬⁮‮⁭⁭⁮‏‏⁭‍‌‌⁫‬⁪⁪‮⁭⁭‏‫⁯⁭‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
      }
      finally
      {
        if (aData != null)
        {
label_3:
          int num1 = 162093748;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 2140628829)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u200E⁯⁭⁬⁭‭‏‭⁯⁯‍⁮‪​⁭‌​⁮⁬⁫‌‪‏⁪⁬⁪‏⁯‍‍‎‍‎⁬‪‍⁭‍⁬⁪‮((IDisposable) aData);
                num1 = (int) num2 * -2054373336 ^ 1359514486;
                continue;
              case 3:
                num1 = (int) num2 * -1193800397 ^ 1300540998;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u206A‏⁪‍‎‬‎⁫​⁪⁬‫​‭‌‎‏‏⁭​⁮⁮⁪‏‫⁫​‎‮⁫‮⁯⁯⁪⁭⁯​⁯⁬‏‮();
      try
      {
label_2:
        int num1 = -1622611514;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -942353773)) % 6U)
          {
            case 0:
              goto label_2;
            case 1:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * 500867783 ^ 1072596541;
              continue;
            case 2:
              JSONNode.\u202D‎‎⁭‍‍‎⁮‭‏⁭‍‭‎‭‫‬‍⁬‪​‮‭‬⁯‏‌‏‌‭​⁪‬⁫‬⁭⁮‌‎‍‮((Stream) aData, 0L);
              num1 = (int) num2 * 268838127 ^ 1909890217;
              continue;
            case 4:
              num1 = (int) num2 * -709052391 ^ -1744527618;
              continue;
            case 5:
              num1 = (int) num2 * -1249577082 ^ 2045452815;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return JSONNode.\u202A⁯‪‮‭⁮‬‮‍‫⁭⁪‪⁪‌⁯‌⁫⁮‌‍‭⁫⁮⁭⁭‭‮⁪⁯‍⁫⁯⁭‎‍‏‭‪‪‮(JSONNode.\u206B⁫⁪‪‎⁬‪‭⁬‍‮⁬⁮⁮‬⁬‮‍⁭‎⁪‍‮‭‪⁬‍⁪‪⁭‍⁮‪‎⁭⁪⁯‎‪‪‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_10:
          int num3 = -1387165822;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -942353773)) % 3U)
            {
              case 0:
                goto label_10;
              case 2:
                JSONNode.\u200E⁯⁭⁬⁭‭‏‭⁯⁯‍⁮‪​⁭‌​⁮⁬⁫‌‪‏⁪⁬⁪‏⁯‍‍‎‍‎⁬‪‍⁭‍⁬⁪‮((IDisposable) aData);
                num3 = (int) num4 * -514891114 ^ 131871183;
                continue;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
      JSONBinaryTag jsonBinaryTag1 = (JSONBinaryTag) JSONNode.\u202C‎⁫⁫⁯⁮‭‪‪‫⁯‭⁫‫‫‬⁯​⁯‪‭‬​‪‎⁬‭‌⁪‎‮‏​⁭‬⁬‭⁫​⁪‮(aReader);
label_1:
      int num1 = -669013260;
      JSONClass jsonClass;
      JSONNode jsonNode;
      int num2;
      JSONArray jsonArray;
      int num3;
      bool flag;
      JSONBinaryTag jsonBinaryTag2;
      int num4;
      string aKey;
      int num5;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -750323641)) % 35U)
        {
          case 0:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * 2057285038 ^ 588460332;
            continue;
          case 2:
            int num7;
            num1 = num7 = num4 < num5 ? -372943060 : (num7 = -1674986399);
            continue;
          case 3:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            num1 = -908914195;
            continue;
          case 4:
label_10:
            num1 = -768360811;
            continue;
          case 5:
label_19:
            num1 = -447487297;
            continue;
          case 6:
label_21:
            num1 = -963164391;
            continue;
          case 7:
            num1 = (int) num6 * 1425630414 ^ -1884612774;
            continue;
          case 8:
            ++num4;
            num1 = (int) num6 * 977203543 ^ 1165126618;
            continue;
          case 9:
            num1 = (int) num6 * -1572702071 ^ -288810039;
            continue;
          case 10:
            JSONNode aItem = JSONNode.Deserialize(aReader);
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * -870885716 ^ 506373995;
            continue;
          case 11:
label_7:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D‌‫‎⁬‪‏‭‎​⁭‭⁯‌⁫⁫⁭​⁮⁮⁫‍‍⁭⁮⁮‎​‪‪​‍‫‍‭⁮‮‮‫‮‮(aReader));
            num1 = -1707961774;
            continue;
          case 12:
            goto label_1;
          case 13:
            num1 = (int) num6 * 1310129940 ^ -991158622;
            continue;
          case 14:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202D‍⁯⁮‏‮‫⁯‎⁭⁬⁭‭⁯⁪⁫‌⁪‮‫‍‏⁯⁭⁬‍⁭⁬⁭‫⁭​‍⁮‭‪‌⁫‬‏‮(aReader));
            num1 = (int) num6 * 2027054623 ^ -829454758;
            continue;
          case 15:
            jsonClass = new JSONClass();
            num1 = (int) num6 * 1196875690 ^ 1612030492;
            continue;
          case 16:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1034246545 ^ 1023827412;
            continue;
          case 17:
            flag = num3 < num2;
            num1 = -1277180389;
            continue;
          case 18:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206A‪‏⁮⁬‪‍‎‭⁬‮⁯⁮⁮‪‎‫‮‍‪‌⁪​‫‫⁫‏‭​⁫⁯⁫‍⁯‫‏‭‎‎⁮‮(aReader));
            num1 = (int) num6 * -1843081041 ^ -485274463;
            continue;
          case 19:
label_34:
            num5 = JSONNode.\u202D‌‫‎⁬‪‏‭‎​⁭‭⁯‌⁫⁫⁭​⁮⁮⁫‍‍⁭⁮⁮‎​‪‪​‍‫‍‭⁮‮‮‫‮‮(aReader);
            num1 = -683504978;
            continue;
          case 20:
            num4 = 0;
            num1 = (int) num6 * -1191649814 ^ -1945419001;
            continue;
          case 21:
            aKey = JSONNode.\u206C‪‪‪‬‎‫‮‭‏‬⁫⁫⁮‮‏‎⁫⁬⁯‫‫‭‫⁫⁬‫‬​‭‌⁫⁯⁯⁫⁪‎⁯‎‌‮(aReader);
            num1 = -191717348;
            continue;
          case 22:
            ++num3;
            num1 = (int) num6 * -1511971213 ^ 1062784646;
            continue;
          case 23:
            num1 = (int) num6 * -1169214612 ^ -23993530;
            continue;
          case 24:
            goto label_35;
          case 25:
            num1 = (int) num6 * 573156688 ^ 744549074;
            continue;
          case 26:
label_18:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C‪‪‪‬‎‫‮‭‏‬⁫⁫⁮‮‏‎⁫⁬⁯‫‫‭‫⁫⁬‫‬​‭‌⁫⁯⁯⁫⁪‎⁯‎‌‮(aReader));
            num1 = -1707961774;
            continue;
          case 27:
            switch (jsonBinaryTag2)
            {
              case JSONBinaryTag.Array:
                goto label_21;
              case JSONBinaryTag.Class:
                goto label_34;
              case JSONBinaryTag.Value:
                goto label_18;
              case JSONBinaryTag.IntValue:
                goto label_7;
              case JSONBinaryTag.DoubleValue:
                goto label_16;
              case JSONBinaryTag.BoolValue:
                goto label_19;
              case JSONBinaryTag.FloatValue:
                goto label_10;
              default:
                num1 = (int) num6 * -591565408 ^ -2116188997;
                continue;
            }
          case 28:
            int num8 = !flag ? -1176046234 : (num8 = -1563637005);
            num1 = num8 ^ (int) num6 * -1984104942;
            continue;
          case 29:
            num1 = (int) num6 * -1117206264 ^ 290465767;
            continue;
          case 30:
            num2 = JSONNode.\u202D‌‫‎⁬‪‏‭‎​⁭‭⁯‌⁫⁫⁭​⁮⁮⁫‍‍⁭⁮⁮‎​‪‪​‍‫‍‭⁮‮‮‫‮‮(aReader);
            jsonArray = new JSONArray();
            num1 = (int) num6 * 609767680 ^ -415209303;
            continue;
          case 31:
            jsonBinaryTag2 = jsonBinaryTag1;
            num1 = (int) num6 * 1288837646 ^ 1515327328;
            continue;
          case 32:
            num3 = 0;
            num1 = (int) num6 * 25028946 ^ -1196520390;
            continue;
          case 33:
            num1 = (int) num6 * -1106557452 ^ 2060818895;
            continue;
          case 34:
label_16:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‏⁮‏‎‏⁭⁬‎⁭⁭‫‪⁮‭‬‏‪‫​‬‍​⁮⁮‎‭‬⁪‪⁪‬‌‮‌‪⁫‫⁬‎‮(aReader));
            num1 = -690317749;
            continue;
          default:
            goto label_37;
        }
      }
label_35:
      throw JSONNode.\u206D⁭⁯⁬‪⁮‏⁯‮‮⁭‮⁫​⁪⁮⁫⁬⁬‌‫⁭⁪​⁯⁮‫⁫‮‍‎‎​⁫‎‮⁪⁯⁭‬‮(JSONNode.\u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag1.ToString()));
label_37:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u206D⁭⁯⁬‪⁮‏⁯‮‮⁭‮⁫​⁪⁮⁫⁬⁬‌‫⁭⁪​⁯⁮‫⁫‮‍‎‎​⁫‎‮⁪⁯⁭‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u206D⁭⁯⁬‪⁮‏⁯‮‮⁭‮⁫​⁪⁮⁫⁬⁬‌‫⁭⁪​⁯⁮‫⁫‮‍‎‎​⁫‎‮⁪⁯⁭‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u206D⁭⁯⁬‪⁮‏⁯‮‮⁭‮⁫​⁪⁮⁫⁬⁬‌‫⁭⁪​⁯⁮‫⁫‮‍‎‎​⁫‎‮⁪⁯⁭‬‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u206F⁬‍‪‌‮‭‍‮‎‎‮⁮⁬‫‎⁬⁭​‌‭​‍​⁫‬‏‮‎⁪‫⁬⁯‭⁮​‬‪‬‍‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = 1685607497;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ 1517408252)) % 4U)
            {
              case 0:
                goto label_3;
              case 1:
                JSONNode.\u200E⁯⁭⁬⁭‭‏‭⁯⁯‍⁮‪​⁭‌​⁮⁬⁫‌‪‏⁪⁬⁪‏⁯‍‍‎‍‎⁬‪‍⁭‍⁬⁪‮((IDisposable) aReader);
                num1 = (int) num2 * 1233906144 ^ 1509546687;
                continue;
              case 3:
                num1 = (int) num2 * 1105101816 ^ 50081622;
                continue;
              default:
                goto label_7;
            }
          }
        }
label_7:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u200B⁯‬⁭⁪⁫‏‮⁪‪‮‍⁬⁬‏‍‍⁫‭​⁬‫‮⁬‪‏⁮⁮‪⁫​‬​⁬⁫‏‍⁮⁮‪‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -890661250;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1175896637)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * 1757555468 ^ -1210636622;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_10;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -582343889;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1175896637)) % 3U)
            {
              case 0:
                goto label_6;
              case 1:
                JSONNode.\u200E⁯⁭⁬⁭‭‏‭⁯⁯‍⁮‪​⁭‌​⁮⁬⁫‌‪‏⁪⁬⁪‏⁯‍‍‎‍‎⁬‪‍⁭‍⁬⁪‮((IDisposable) aData);
                num3 = (int) num4 * 640990584 ^ 522800608;
                continue;
              default:
                goto label_9;
            }
          }
        }
label_9:;
      }
label_10:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -121156116;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1277349653)) % 5U)
        {
          case 1:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * 740209141 ^ -937494287;
            continue;
          case 2:
            goto label_1;
          case 3:
            aData = JSONNode.\u206E‫‮⁪‮‪‪‬‭‪⁪⁭⁮‬⁭⁫‏⁪‭⁯‍‭‫‏‍​⁮⁫⁮⁬⁭‮‍‫‏⁮​‍‮⁯‮(JSONNode.\u206B‏‎‭​⁭‮‮⁮‪‫‎​‬‬‎⁬‬‪‎‬⁪‭‫‍‭⁪⁪​‌⁪⁪‮⁪‎⁯⁫‎‭‌‮(aBase64));
            num1 = (int) num2 * -912403380 ^ -756461035;
            continue;
          case 4:
            JSONNode.\u202D‎‎⁭‍‍‎⁮‭‏⁭‍‭‎‭‫‬‍⁬‪​‮‭‬⁯‏‌‏‌‭​⁪‬⁫‬⁭⁮‌‎‍‮((Stream) aData, 0L);
            num1 = (int) num2 * -2141615038 ^ -1387038859;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return jsonNode;
    }

    static CultureInfo \u206C‬‌⁪‏⁪⁬​⁮‏‫‬‍‮‬‌⁮‏‎‮‏‌⁯‌‮‮⁬‮⁫⁬⁯⁪‏‎‭​‮​‭‌‮() => CultureInfo.InvariantCulture;

    static bool \u200E⁮‭⁪‍‭‍⁭‪‮‎‌‬​⁭‭⁪‏⁪‏⁪‫⁫‎‭‎‫⁮‍‫‮‍​‭⁫‎‭‬​‭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206B‏⁫‎‪‪‏⁮‫⁫​⁬‏‍‮‎‍‭⁯‎⁪⁫⁫‍‫‏‪‍‍⁫‭⁮‌‪⁮​‍‎⁪‏‮() => base.GetHashCode();

    static char \u202D‫‌⁬‮​​‪‏‫‌⁮‮‎‮‫‮‮‌‪‪⁪‭⁭⁮‮‎‎⁮‏⁯⁮⁮‭‎‮​‍⁮‏‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u200D‬‍⁪⁪‮⁮⁭‬‬‌‏‎‮‌‍‬⁮⁮⁭⁮⁫⁫‫‫​‭‎​⁮‌‭‭‏⁫‪⁯⁯‎‭‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u202D⁮‍​‌⁮⁭‫‌⁬‎⁪​‍‪‬⁪‍‭‬⁬⁭‎‍⁮​‍⁯‍‏‪⁬‪⁬​⁭‬‫‏⁫‮([In] string obj0) => obj0.Length;

    static string \u200C‍⁫‍‮‬‎‎⁪⁬⁪​‎⁫‬‬​‬​​‍‌‌⁬⁭‮‬⁫‎‏‍⁬‍⁬‬‬⁪‎‬⁬‮([In] string obj0) => obj0.Trim();

    static bool \u206A‏⁮‫⁭‮‌‏‍⁮‌‭‮‎⁯‪⁬⁯‏​‬‌​⁯⁮‭‭⁯‎‭‏‬⁭‌‮‫⁫‮​‎‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u206D⁭⁯⁬‪⁮‏⁯‮‮⁭‮⁫​⁪⁮⁫⁬⁬‌‫⁭⁪​⁯⁮‫⁫‮‍‎‎​⁫‎‮⁪⁯⁭‬‮([In] string obj0) => new Exception(obj0);

    static string \u200C‌‎⁬‬⁪⁫‏‮‫⁮​‌‌⁯‫‎‪⁫‭⁪⁭‭‮​‎⁫‎⁯⁫‎⁬‍‭‌⁮‬⁯⁭⁫‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u202A‭‭⁫⁪⁭‍‮⁯‌​‏‎‪‬‬⁬⁪‫‪‎‮⁯‬⁮​‏‌‏‭‍⁮⁮⁮‌⁭‬‪‏⁭‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u202B‫⁪⁫⁫‪‏⁭‎‬‪‪⁭‭⁭​⁫​⁫‎‬​‬‪‭⁪⁫‫‍‫‏‌⁭‏‌‮‪⁪⁬‮‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202D‍⁮‭⁯‫⁭​⁯‬‍‪⁫⁫⁯⁪⁫‭‏‎‌‪‍‌‏‏‍⁮⁪‪‪‬‍‌‪‮‫‍‪‎‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202D‌⁬⁮⁫‬‎‏‮⁪⁫‏⁬‮‫⁫​‪‫‪‭‮‏‫⁪⁫⁯‫⁬‎‌‬‍‭⁬‬⁭⁫‫⁫‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u200E‏‬‌‫​⁮⁯‌‪⁮‮​​‬‬‪‌⁭‎‭‪‪‎‪⁮‪‭⁬‫‌​⁯⁮‍⁬‏‌​‏‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u200D‎‫‫‫⁬⁫‌⁮⁫⁪‍⁫⁪‏​​‬⁮‮⁭⁭⁮‏‏⁭‍‌‌⁫‬⁪⁪‮⁭⁭‏‫⁯⁭‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200E⁯⁭⁬⁭‭‏‭⁯⁯‍⁮‪​⁭‌​⁮⁬⁫‌‪‏⁪⁬⁪‏⁯‍‍‎‍‎⁬‪‍⁭‍⁬⁪‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u206A‏⁪‍‎‬‎⁫​⁪⁬‫​‭‌‎‏‏⁭​⁮⁮⁪‏‫⁫​‎‮⁫‮⁯⁯⁪⁭⁯​⁯⁬‏‮() => new MemoryStream();

    static void \u202D‎‎⁭‍‍‎⁮‭‏⁭‍‭‎‭‫‬‍⁬‪​‮‭‬⁯‏‌‏‌‭​⁪‬⁫‬⁭⁮‌‎‍‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u206B⁫⁪‪‎⁬‪‭⁬‍‮⁬⁮⁮‬⁬‮‍⁭‎⁪‍‮‭‪⁬‍⁪‪⁭‍⁮‪‎⁭⁪⁯‎‪‪‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202A⁯‪‮‭⁮‬‮‍‫⁭⁪‪⁪‌⁯‌⁫⁮‌‍‭⁫⁮⁭⁭‭‮⁪⁯‍⁫⁯⁭‎‍‏‭‪‪‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u202C‎⁫⁫⁯⁮‭‪‪‫⁯‭⁫‫‫‬⁯​⁯‪‭‬​‪‎⁬‭‌⁪‎‮‏​⁭‬⁬‭⁫​⁪‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u202D‌‫‎⁬‪‏‭‎​⁭‭⁯‌⁫⁫⁭​⁮⁮⁫‍‍⁭⁮⁮‎​‪‪​‍‫‍‭⁮‮‮‫‮‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u206C‪‪‪‬‎‫‮‭‏‬⁫⁫⁮‮‏‎⁫⁬⁯‫‫‭‫⁫⁬‫‬​‭‌⁫⁯⁯⁫⁪‎⁯‎‌‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200F‏⁮‏‎‏⁭⁬‎⁭⁭‫‪⁮‭‬‏‪‫​‬‍​⁮⁮‎‭‬⁪‪⁪‬‌‮‌‪⁫‫⁬‎‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u202D‍⁯⁮‏‮‫⁯‎⁭⁬⁭‭⁯⁪⁫‌⁪‮‫‍‏⁯⁭⁬‍⁭⁬⁭‫⁭​‍⁮‭‪‌⁫‬‏‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u206A‪‏⁮⁬‪‍‎‭⁬‮⁯⁮⁮‪‎‫‮‍‪‌⁪​‫‫⁫‏‭​⁫⁯⁫‍⁯‫‏‭‎‎⁮‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u206F⁬‍‪‌‮‭‍‮‎‎‮⁮⁬‫‎⁬⁭​‌‭​‍​⁫‬‏‮‎⁪‫⁬⁯‭⁮​‬‪‬‍‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u200B⁯‬⁭⁪⁫‏‮⁪‪‮‍⁬⁬‏‍‍⁫‭​⁬‫‮⁬‪‏⁮⁮‪⁫​‬​⁬⁫‏‍⁮⁮‪‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u206B‏‎‭​⁭‮‮⁮‪‫‎​‬‬‎⁬‬‪‎‬⁪‭‫‍‭⁪⁪​‌⁪⁪‮⁪‎⁯⁫‎‭‌‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206E‫‮⁪‮‪‪‬‭‪⁪⁭⁮‬⁭⁫‏⁪‭⁯‍‭‫‏‍​⁮⁫⁮⁬⁭‮‍‫‏⁮​‍‮⁯‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
