// Decompiled with JetBrains decompiler
// Type: <Module>
// Assembly: ổọỞἃồỔỾἐἂỵỖỖἁἄἂ, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FAF82406-93DC-4D5D-948A-CEB8E42B10A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.12-msil\HEUR-Trojan-Ransom.MSIL.Purgen.gen-8c022231f5d0be9ac46ed5de8c075e8d79e0960be4fe6adeda24ee16f274a028.exe

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

internal class \u003CModule\u003E
{
  public static string 鵱鴾鵁鵅鵁鴼鵁鵞鵀鵱鴿鵁鵱鵁鶆()
  {
    string source = "롐";
    string str = "47126";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㨻㨐㨽㨑㨐㨩㨉㨺㨒㨽㨛㨾㨽㩈㩍()
  {
    string source = "㸊㸯㸨㸵㸮㸬";
    string str = "15815";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 좆좱좄좁종좔좆좵좸좲죄좯좓좻좇()
  {
    string source = "朚杍杌杌杇杆";
    string str = "26328";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 嗚嗗嘗嗚嘔嘈嘆嗕嘏嗔嘇嘜嗛嗝嗕()
  {
    string source = "䑮";
    string str = "17430";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 奼妻妀妟奻妭妭妹妌她妀妖妽妙妬()
  {
    string source = "뮗";
    string str = "47934";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u337B\u33A9\u33AB\u337A\u3377\u337A\u3378\u33AA\u33A9\u337A\u33AF\u3391\u33AC\u337A\u3377()
  {
    string source = "\uF44B\uF46C\uF41D\uF46A\uF45E\uF471\uF46F\uF466\uF475";
    string str = "62461";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 瞰睻瞂瞎瞀睼瞪瞕瞭睹瞀瞚瞂瞽瞯()
  {
    string source = "⍷⎤⎤⎡⎤";
    string str = "9010";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ꩅ\uAA3Fꨪ\uAA5Aꨥ\uAA5Bꨮ꩗ꨥꨥ\uAA3Cꨭꨨ\uAA5A\uAA5E()
  {
    string source = "\uA7DCꠉꠉ꠆ꠉ";
    string str = "42903";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD()
  {
    string source = "㯩㯴㯿㯼㯷";
    string str = "15251";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䝧䝯䝧䞘䞜䞮䞐䝦䝬䝸䞗䞛䝮䞚䞆()
  {
    string source = "鱬鱷鲂鱿鱺";
    string str = "39958";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 뎰뎦뎸뎊덺뎏뎄덷뎧덻덶뎅뎄뎦뎤()
  {
    string source = "瀖瀡瀬瀩瀤";
    string str = "28608";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 眛睉睌眜眽眘真眗眝眗眝睊睠眪眖()
  {
    string source = "膭臚臚臗臚";
    string str = "33128";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uAA2Fꩠ\uAA5Fꩦꨯꩠꩨꨭ\uAA5Dꩪꩦꨬꨮꩠꨲ()
  {
    string source = "⧸⧬⧿⧽⧴⨃⧔⧹⧻⨀⧿⦼";
    string str = "10635";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 扇戡戣打扟戡打戠戟扟扑戼戥戧戧()
  {
    string source = "";
    string str = "45846";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 耡翯翵耰翷翰耢翵翯翳耏翷翰耖翸()
  {
    string source = "긶깁까깉깄";
    string str = "44512";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 듦딂듑들듖듢듯듔딒듒듒딃듘듘듒()
  {
    string source = "⍏⍚⍥⍢⍝";
    string str = "8953";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 滐溥溼滠溞溯溦滓滐溢滑溢滢溤溤()
  {
    string source = "ꚡꛂꛑꛂꛏꛊꛆꛋꚾꛋꛑ";
    string str = "42589";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 窎窊竐窊窎竁窎窇窌窐窱窌窨窐窏()
  {
    string source = "妦始姓姂姏姐姂";
    string str = "22877";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u3308\u32D9\u32DE\u32D9\u32DC\u32DA\u32F4\u32DC\u330E\u32D8\u32D6\u331D\u3309\u3308\u3307()
  {
    string source = "呁呟呎呛呠呝呜呠呒";
    string str = "21485";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 禰禥禎禎禒禐禑禎秂秂禎秋秗禗禬()
  {
    string source = "魯拏肋";
    string str = "63718";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 뼺뽎뽋뼝뽌뼟뼛뽌뼢뼡뽏뽌뼴뼣뼝()
  {
    string source = "僩儋僸儊儈僷價儊僿儅億";
    string str = "20630";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 如奺妽妯如妰妳妣妐妁妁奿妕妳妫()
  {
    string source = "晷暟暖暞暓暚暖暓暍暋暞暓暙暘";
    string str = "26154";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ǕƛƷƛƛǋƠƞǉơơǊƠƴǖ()
  {
    string source = "ᙍᙝᙛᙦᙛᙬᘚᙇᙯᙦ᙮ᙣᙪᙦᙣᙝᙛ᙮ᙣᙩᙨ";
    string str = "5626";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㴏㵁㵀㵂㵇㴐㴔㵀㵔㵌㴾㴑㴐㴕㴍()
  {
    string source = "淰渑渠渑渞渙渕渚渍渚渠";
    string str = "28076";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 曧朗未會木替曢朗朂曩朖曧曪曥曽()
  {
    string source = "쾩쿎쿖쿅쿒쿓쿅";
    string str = "53088";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䙟䚌䙟䙘䚋䙸䙙䙷䚈䙵䚡䚌䚋䚈䚉()
  {
    string source = "祷禕禄禑禖禓禒禖禈";
    string str = "31011";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uA490\uA491ꑢꑥꑝ\uA493ꑦ\uA48E\uA4A2ꑻ\uA48Fꑡ\uA492ꑦꑟ()
  {
    string source = "\uDAC4\uDACC\uDAC3";
    string str = "55895";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㗠㗡㘎㘠㗥㗣㘑㗤㗠㘆㗝㗤㘝㗞㘛()
  {
    string source = "ꍼ";
    string str = "41808";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uF78B\uF790\uF7BC\uF7B0\uF789\uF7C0\uF7BE\uF7B9\uF7BC\uF7BC\uF788\uF7A1\uF79A\uF7B9\uF790()
  {
    string source = "";
    string str = "23427";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 홐화횁화횑홽횈홐홐홓홒홽확횎홿()
  {
    string source = "蜍";
    string str = "34525";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ঊ\u098D\u098D\u098Dঌ\u09C5\u09BAএ\u09BBস\u09BAউঈ\u09BB\u09BA()
  {
    string source = "";
    string str = "16288";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u0EFF\u0EF0\u0F1D\u0EF4\u0EF4\u0EEF༡\u0EEC\u0F11\u0EEB༩\u0EF1\u0EF0\u0EED\u0F0B()
  {
    string source = "㽄";
    string str = "16148";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 歭殰歴殃殡歭歭殁歲殣殟歮歮殟殢()
  {
    string source = "";
    string str = "39443";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u0F3Dའནགཔའཁ༡༥ཐ༣\u0F1Eན\u0F34༤()
  {
    string source = "좞";
    string str = "51310";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 뒀둽두둑둽둎둮둈둢둑둠둎둼둍둊()
  {
    string source = "";
    string str = "59316";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 刑刏剂刍刢刏刺刿刐刮刽則刻刽刐()
  {
    string source = "楾";
    string str = "26957";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 摔摓摬撃摿摔摕撀撓摎撃摐撋摍摨()
  {
    string source = "";
    string str = "44048";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 치칗캈칖캛칓칯칚캆칖칤캄캇치캆()
  {
    string source = "륝";
    string str = "47404";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 怤忲怠忦忣忧忨忨忟忦忢怑忨怔怑()
  {
    string source = "";
    string str = "47378";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㭄㭄㭩㭶㭇㭳㭴㭽㭇㭂㭃㭓㭉㭁㭴()
  {
    string source = "";
    string str = "40641";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 䶈䶅䵒䶋䵗䵙䵶䵖䶌䵛䶆䵹䶆䵕䵒()
  {
    string source = "\u09C9ঢ়\u09F4জভব\u09F4ভব";
    string str = "2428";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 璂瑔璖璄璁璔璍瑘瑖瑷瑣璀瑠瑗瑴()
  {
    string source = "\uF00E\uF022\uF039\uEFE1\uEFF2\uEFF1\uF039\uEFF2\uEFF1";
    string str = "61377";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 僷僲儰儋僶儤僴僴儂僳儲儣儤儍儥()
  {
    string source = "㠪㠪㡘㠪㠪㡘㡅㡩㡝㡣㡡㡯㡘㡴㡛㡤㡫㡲㡡㡮㠪㡬㡪㡣";
    string str = "14332";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㤞㥈㥎㤚㤞㤨㥋㤶㥊㤛㤬㤯㤬㤕㥈()
  {
    string source = "襘襘覆襘襘覆襳覗見覑規覝覆覢襘覚覘覑";
    string str = "35114";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 蛏蛏蛌蛬蛼蜊蛻蛼蛭蛉蛾蛼蛩蛪蛿()
  {
    string source = "㯺㯺㰨㯺㯺㰨㰕㰹㰭㰳㰱㰿㰨㰹㰫㰴㰻㱂㰱㰾㯺㰼㰺㰳";
    string str = "15308";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uE1FD\uE1FA\uE1F7\uE21E\uE216\uE212\uE1FD\uE1F8\uE22C\uE216\uE1FD\uE218\uE21A\uE1FB\uE1FF()
  {
    string source = "쳤쳤촒쳤쳤촒쳿촣촗총촛촩촒촣쳤촦촤총";
    string str = "52406";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 弄弴开弁弾弄弱弓弄弸弪异弉弃弴()
  {
    string source = "탌탴탭탣턉턆턋턁탾턌탘턀턌턊턍턌턋턂턋턑탌턊탾턆턋턔턆턋턁턌턔탋턕탾턊턉";
    string str = "53405";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 軿軂軷軇軆軁躿軃軴軐軆軯軆軟軄()
  {
    string source = "ᔱᕄᔼᔾᔱᔿᔿᔵᔻᔺ";
    string str = "5324";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 鏊鏍鎡鎞鎳鎝鏠鎙鎟鎝鎟鎡鎟鏚鎞()
  {
    string source = "℃№ℎℐ℃ℑℑℇℍℌ";
    string str = "8350";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uF2D0\uF308\uF2CC\uF2D0\uF2F2\uF2CB\uF2D1\uF2CE\uF2CD\uF30C\uF2FD\uF2CE\uF2C9\uF30B\uF30A()
  {
    string source = "\uE165";
    string str = "57653";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uE06A\uE069\uE040\uE04B\uE04E\uE03B\uE052\uE03A\uE048\uE06B\uE03C\uE06B\uE038\uE03F\uE037()
  {
    string source = "誯誴諁";
    string str = "35403";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uE1D5\uE1A5\uE1A7\uE1A7\uE1A7\uE1D6\uE1A9\uE1CA\uE1A3\uE1E8\uE1DD\uE1A3\uE1D8\uE1A8\uE1AB()
  {
    string source = "↭↯↧";
    string str = "8506";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u264F\u2613\u2611\u2617\u2643\u2619\u2641\u2617\u2631\u2642\u2611\u2642\u2649\u2611\u2643()
  {
    string source = "ᦉᦋ\u1978";
    string str = "6422";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ⲂⱖⱵⱗⱒⱿⱥⲃⲀⱔⱏⱑⱑⱖⲁ()
  {
    string source = "䌧䌯䌦";
    string str = "17082";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㲦㱼㲧㲜㲶㱼㲧㲪㱶㱻㲙㱼㲏㱻㱾()
  {
    string source = "\uF821\uF826\uF833";
    string str = "63421";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string Ⴙႆ\u109FႜႅႣႋႍႸႇႺႸႠႢႪ()
  {
    string source = "❊✽❋";
    string str = "9944";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 㩘㩮㩀㩀㩄㩁㩒㩕㩻㩁㩙㩒㩭㩓㩅()
  {
    string source = "숨숦숧숩";
    string str = "49589";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 叛厮变叝厨厯友叛叛发厪厪叝厯叏()
  {
    string source = "\uE2CC\uE2CB\uE2D3";
    string str = "57948";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 碈碅硘硩碕硙硜硽硧碄碅碆硙硓硯()
  {
    string source = "␙␜␔";
    string str = "9133";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 貔豧貣貐豳豠豣貑貈貕豰貔豨豧豿()
  {
    string source = "";
    string str = "1567";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \u2A4E\u2A7E\u2A4C\u2A7D\u2A7D\u2A51\u2A4E\u2A7F\u2A51\u2A6E\u2A83\u2A4D\u2A64\u2A81\u2A4F()
  {
    string source = "潆";
    string str = "28454";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string \uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD()
  {
    string source = "瑹";
    string str = "29712";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string ᤏᣪᣗᣟᣚᤊᤋᤉᣟᣝᣚᣠᤍᤊᤎ()
  {
    string source = "㡣";
    string str = "14329";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }

  public static string 樑槝樐樂樎槣槺樖槢槣槝樏槟槠槣()
  {
    string source = "훸휌휔휙휂휔휙휏휚휢훙휣휌휘휗";
    string str = "54955";
    StringBuilder stringBuilder = new StringBuilder();
    try
    {
      foreach (char ch in source.ToList<char>())
      {
        int utf32 = checked (Convert.ToInt32(ch) - Convert.ToInt32(str));
        stringBuilder.Append(char.ConvertFromUtf32(utf32));
      }
    }
    finally
    {
      List<char>.Enumerator enumerator;
      enumerator.Dispose();
    }
    return stringBuilder.ToString();
  }
}
