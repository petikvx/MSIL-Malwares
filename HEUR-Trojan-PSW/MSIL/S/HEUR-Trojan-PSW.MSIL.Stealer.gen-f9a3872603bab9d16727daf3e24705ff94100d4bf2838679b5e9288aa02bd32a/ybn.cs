// Decompiled with JetBrains decompiler
// Type: ib.ybn
// Assembly: ContingentPropert, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 10450B75-DDB2-42D8-896D-5D92C0FA5DAE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-f9a3872603bab9d16727daf3e24705ff94100d4bf2838679b5e9288aa02bd32a.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace ib
{
  public class ybn : j7, Ho
  {
    internal static ybn N25;

    [CompilerGenerated]
    [SpecialName]
    public Hi aSZ() => this.Iw0;

    [CompilerGenerated]
    [SpecialName]
    public void cSE(Hi _param1) => this.Iw0 = _param1;

    [CompilerGenerated]
    [SpecialName]
    public IList<wu> AwD() => this.MwY;

    [CompilerGenerated]
    [SpecialName]
    public void swp(IList<wu> _param1) => this.MwY = _param1;

    [SpecialName]
    public wu Cw2() => this.AwD()[this.AwD().Count - 1];

    [SpecialName]
    public void NwW(wu _param1) => this.AwD()[this.AwD().Count - 1] = _param1;

    [SpecialName]
    public JK Bw8() => ((Y1) ybn.V2B((object) this.Cw2())).nhO();

    public ybn()
    {
      Jnb.vbPcO4();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.swp((IList<wu>) new List<wu>());
    }

    public override string ToString()
    {
      string str = "";
      foreach (wu wu in (IEnumerable<wu>) this.AwD())
        str = str + wu.vSF() + ".";
      return str.TrimEnd(".".ToCharArray());
    }

    public override bool Equals(object _param1)
    {
      if (_param1 is ybn)
        goto label_5;
      else
        goto label_7;
label_1:
      int num1;
      switch (num1)
      {
        case 1:
        case 2:
        case 3:
          goto label_3;
        default:
          goto label_6;
      }
label_2:
      int index;
      bool flag;
      if (index >= this.AwD().Count)
      {
        flag = true;
        num1 = 0;
        if (ybn.d2R())
        {
          num1 = 1;
          goto label_1;
        }
        else
          goto label_1;
      }
      else
        goto label_6;
label_3:
      return flag;
label_5:
      ybn ybn = _param1 as ybn;
      if (this.AwD().Count != ybn.AwD().Count)
      {
        flag = false;
        num1 = 2;
        goto label_1;
      }
      else
      {
        index = 0;
        goto label_2;
      }
label_6:
      if (!(this.AwD()[index].vSF() != ybn.AwD()[index].vSF()) && this.AwD()[index].Pvb().nhO() == ybn.AwD()[index].Pvb().nhO())
      {
        ++index;
        goto label_2;
      }
      else
      {
        flag = false;
        goto label_3;
      }
label_7:
      flag = false;
      int num2;
      num1 = ybn.P2N() == null ? 3 : num2;
      goto label_1;
    }

    public override int GetHashCode()
    {
      int hashCode = 0;
      int index = 0;
      while (true)
      {
        if (index < this.AwD().Count)
          goto label_6;
        else
          goto label_5;
label_1:
        int num1;
        switch (num1)
        {
          case 1:
            goto label_2;
          default:
            ++index;
            continue;
        }
label_5:
        int num2;
        num1 = ybn.P2N() == null ? 1 : num2;
        goto label_1;
label_6:
        hashCode = hashCode + ybn.X2W((object) this.AwD()[index]).GetHashCode() + ((Y1) ybn.V2B((object) this.AwD()[index])).nhO().GetHashCode();
        num1 = 0;
        if (ybn.P2N() == null)
        {
          num1 = 0;
          goto label_1;
        }
        else
          goto label_1;
      }
label_2:
      return hashCode;
    }

    internal static bool d2R() => ybn.N25 == null;

    internal static ybn P2N() => ybn.N25;

    internal static object V2B([In] object obj0) => (object) ((wu) obj0).Pvb();

    internal static object X2W([In] object obj0) => (object) ((wu) obj0).vSF();
  }
}
