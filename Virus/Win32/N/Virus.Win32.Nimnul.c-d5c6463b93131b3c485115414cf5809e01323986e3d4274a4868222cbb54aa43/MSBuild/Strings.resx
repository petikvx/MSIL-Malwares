<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UnknownSwitchError" xml:space="preserve">
    <value>MSBUILD : error MSB1001: Unknown switch.</value>
  </data>
  <data name="MissingProjectError" xml:space="preserve">
    <value>MSBUILD : error MSB1003: Specify a project or solution file. The current working directory does not contain a project or solution file.</value>
  </data>
  <data name="CopyrightMessage" xml:space="preserve">
    <value>Microsoft (R) Build Engine Version {0}
[Microsoft .NET Framework, Version {1}]
Copyright (C) Microsoft Corporation 2005. All rights reserved.
</value>
  </data>
  <data name="FatalError" xml:space="preserve">
    <value>MSBUILD : error MSB1025: An internal failure occurred while running MSBuild.</value>
  </data>
  <data name="LoggerFatalError" xml:space="preserve">
    <value>MSBUILD : error MSB1028: The logger failed unexpectedly.</value>
  </data>
  <data name="HelpMessage" xml:space="preserve">
    <value>Syntax:              MSBuild.exe [options] [project file]

Description:         Builds the specified targets in the project file. If
                     a project file is not specified, MSBuild searches the
                     current working directory for a file that has a file
                     extension that ends in "proj" and uses that file.

Switches:

  /help              Display this usage message. (Short form: /? or /h)

  /nologo            Do not display the startup banner and copyright message.

  /version           Display version information only. (Short form: /ver)

  @&lt;file&gt;            Insert command-line settings from a text file. To specify
                     multiple response files, specify each response file
                     separately.

  /noautoresponse    Do not auto-include the MSBuild.rsp file. (Short form:
                     /noautorsp)

  /target:&lt;targets&gt;  Build these targets in this project. Use a semicolon or a
                     comma to separate multiple targets, or specify each
                     target separately. (Short form: /t)
                     Example:
                       /target:Resources;Compile

  /property:&lt;n&gt;=&lt;v&gt;  Set or override these project-level properties. &lt;n&gt; is
                     the property name, and &lt;v&gt; is the property value. Use a
                     semicolon or a comma to separate multiple properties, or
                     specify each property separately. (Short form: /p)
                     Example:
                       /property:WarningLevel=2;OutDir=bin\Debug\

  /logger:&lt;logger&gt;   Use this logger to log events from MSBuild. To specify
                     multiple loggers, specify each logger separately.
                     The &lt;logger&gt; syntax is:
                        [&lt;logger class&gt;,]&lt;logger assembly&gt;[;&lt;logger parameters&gt;]
                     The &lt;logger class&gt; syntax is:
                        [&lt;partial or full namespace&gt;.]&lt;logger class name&gt;
                     The &lt;logger assembly&gt; syntax is:
                        {&lt;assembly name&gt;[,&lt;strong name&gt;] | &lt;assembly file&gt;}
                     The &lt;logger parameters&gt; are optional, and are passed
                     to the logger exactly as you typed them. (Short form: /l)
                     Examples:
                       /logger:XMLLogger,MyLogger,Version=1.0.2,Culture=neutral
                       /logger:XMLLogger,C:\Loggers\MyLogger.dll;OutputAsHTML

  /verbosity:&lt;level&gt; Display this amount of information in the event log.
                     The available verbosity levels are: q[uiet], m[inimal],
                     n[ormal], d[etailed], and diag[nostic]. (Short form: /v)
                     Example:
                       /verbosity:quiet

  /consoleloggerparameters:&lt;parameters&gt;
                     Parameters to console logger. (Short form: /clp)
                     The available parameters are:
                        PerformanceSummary--show time spent in tasks, targets
                            and projects.
                        NoSummary--don't show error and warning summary at the
                            end.
                        NoItemAndPropertyList--don't show list of items and
                            properties at the start of each project build.                           
                     Example:
                        /consoleloggerparameters:PerformanceSummary;NoSummary

  /noconsolelogger   Disable the default console logger and do not log events
                     to the console. (Short form: /noconlog)

  /validate          Validate the project against the default schema. (Short
                     form: /val)

  /validate:&lt;schema&gt; Validate the project against the specified schema. (Short
                     form: /val)
                     Example:
                       /validate:MyExtendedBuildSchema.xsd

Examples:

        MSBuild MyApp.sln /t:Rebuild /p:Configuration=Release
        MSBuild MyApp.csproj /t:Clean /p:Configuration=Debug
</value>
  </data>
  <data name="ProjectNotFoundError" xml:space="preserve">
    <value>MSBUILD : error MSB1009: Project file does not exist.</value>
  </data>
  <data name="ResponseFileNotFoundError" xml:space="preserve">
    <value>MSBUILD : error MSB1022: Response file does not exist.</value>
  </data>
  <data name="LoggerCreationError" xml:space="preserve">
    <value>MSBUILD : error MSB1021: Cannot create an instance of the logger. {0}</value>
  </data>
  <data name="CannotAutoDisableAutoResponseFile" xml:space="preserve">
    <value>MSBUILD : error MSB1027: The /noautoresponse switch cannot be specified in the MSBuild.rsp auto-response file, nor in any response file that is referenced by the auto-response file.</value>
  </data>
  <data name="RepeatedResponseFileError" xml:space="preserve">
    <value>MSBUILD : error MSB1013: The response file was specified twice. A response file can be specified only once.</value>
  </data>
  <data name="PickedUpSwitchesFromAutoResponse" xml:space="preserve">
    <value>Some command line switches were read from the auto-response file "{0}". To disable this file, use the "/noautoresponse" switch.
     </value>
  </data>
  <data name="UnexpectedParametersError" xml:space="preserve">
    <value>MSBUILD : error MSB1002: This switch does not take any parameters.</value>
  </data>
  <data name="MultipleSchemasError" xml:space="preserve">
    <value>MSBUILD : error MSB1024: Only one schema can be specified for validation of the project.</value>
  </data>
  <data name="InvalidVerbosityError" xml:space="preserve">
    <value>MSBUILD : error MSB1018: Verbosity level is not valid.</value>
  </data>
  <data name="MissingVerbosityError" xml:space="preserve">
    <value>MSBUILD : error MSB1016: Specify the verbosity level.</value>
  </data>
  <data name="MissingPropertyError" xml:space="preserve">
    <value>MSBUILD : error MSB1005: Specify a property and its value.</value>
  </data>
  <data name="InvalidPropertyError" xml:space="preserve">
    <value>MSBUILD : error MSB1006: Property is not valid.</value>
  </data>
  <data name="UnsupportedOS" xml:space="preserve">
    <value>MSBUILD : error MSB1015: MSBuild does not run on this version of the operating system. It is only supported on Windows 2000, Windows XP, and later versions.</value>
  </data>
  <data name="LoggerNotFoundError" xml:space="preserve">
    <value>MSBUILD : error MSB1020: The logger was not found. Check the following: 1.) The logger name specified is the same as the name of the logger class. 2.) The logger class is "public" and implements the Microsoft.Build.Framework.ILogger interface. 3.) The path to the logger assembly is correct, or the logger can be loaded using only the assembly name provided.</value>
  </data>
  <data name="ReadResponseFileError" xml:space="preserve">
    <value>MSBUILD : error MSB1023: Cannot read the response file. {0}</value>
  </data>
  <data name="AmbiguousProjectError" xml:space="preserve">
    <value>MSBUILD : error MSB1011: Specify which project or solution file to use because this folder contains more than one project or solution file.</value>
  </data>
  <data name="LoggerFailurePrefixWithErrorCode" xml:space="preserve">
    <value>MSBUILD : Logger error MSB1029: {0}</value>
  </data>
  <data name="MissingLoggerError" xml:space="preserve">
    <value>MSBUILD : error MSB1007: Specify a logger.</value>
  </data>
  <data name="DuplicateProjectSwitchError" xml:space="preserve">
    <value>MSBUILD : error MSB1008: Only one project can be specified.</value>
  </data>
  <data name="InvalidLoggerError" xml:space="preserve">
    <value>MSBUILD : error MSB1019: Logger switch was not correctly formed.</value>
  </data>
  <data name="MissingResponseFileError" xml:space="preserve">
    <value>MSBUILD : error MSB1012: Specify a response file.</value>
  </data>
  <data name="HelpPrompt" xml:space="preserve">
    <value>For switch syntax, type "MSBuild /help"</value>
  </data>
  <data name="SchemaNotFoundError" xml:space="preserve">
    <value>MSBUILD : error MSB1026: Schema file does not exist.</value>
  </data>
  <data name="InvalidSwitchIndicator" xml:space="preserve">
    <value>Switch: {0}</value>
  </data>
  <data name="LoggerFailurePrefixNoErrorCode" xml:space="preserve">
    <value>MSBUILD: Logger error {0}: {1}</value>
  </data>
  <data name="MissingTargetError" xml:space="preserve">
    <value>MSBUILD : error MSB1004: Specify the name of the target.</value>
  </data>
</root>