// Decompiled with JetBrains decompiler
// Type: ProjNet.Visitors.DecoratorConsumer
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Windows.Forms;
using TYPELIBA.Identifiers;
using TYPELIBA.Wrappers;

namespace ProjNet.Visitors
{
  public class DecoratorConsumer : Form
  {
    private IContainer _ContextConsumer;
    private Label comparatorConsumer;
    private Button m_IdentifierConsumer;
    private Label _ManagerConsumer;
    private Label _IndexerConsumer;
    private Label m_VisitorConsumer;
    private TextBox m_WriterConsumer;
    private TextBox m_ObserverConsumer;
    private TextBox taskConsumer;
    private TextBox m_ReponseConsumer;

    [MethodImpl(MethodImplOptions.NoInlining)]
    public DecoratorConsumer()
    {
      int num1 = 3;
      while (true)
      {
        int num2 = num1;
        while (true)
        {
          switch (num2)
          {
            case 0:
            case 1:
              this._ContextConsumer = (IContainer) null;
              // ISSUE: explicit constructor call
              base.\u002Ector();
              goto case 2;
            case 2:
            case 4:
              this.ConnectRepository();
              if (true)
              {
                num2 = 5;
                continue;
              }
              goto label_6;
            case 3:
              goto label_6;
            case 5:
              goto label_8;
            default:
              num2 = 4;
              continue;
          }
        }
label_6:
        ManagerParamsID.NewExpression();
        num1 = 0;
      }
label_8:;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void SelectRepository(object i, EventArgs pred)
    {
      try
      {
        string text1 = this.m_WriterConsumer.Text;
        int num1 = 1;
        if (true)
          goto label_5;
label_2:
        string text2;
        int filter;
        string text3;
        MethodProcess.LogoutConsumer(text1, text2, filter, text3);
        int num2 = (int) MessageBox.Show("Title Added.");
        this.m_WriterConsumer.Text = "";
        this.m_ObserverConsumer.Text = "";
        this.m_ReponseConsumer.Text = "";
        this.taskConsumer.Text = "";
        if (DecoratorConsumer.InsertCreator())
        {
          num1 = 6;
          goto label_5;
        }
label_3:
        filter = int.Parse(this.taskConsumer.Text);
        num1 = 5;
label_5:
        while (true)
        {
          switch (num1)
          {
            case 0:
            case 1:
              text2 = this.m_ObserverConsumer.Text;
              int num3 = 3;
              num1 = DecoratorConsumer.DefineCreator() ? num3 : num3;
              continue;
            case 2:
            case 4:
              goto label_3;
            case 3:
              goto label_4;
            case 5:
              goto label_2;
            case 6:
              goto label_8;
            default:
              int num4 = 4;
              num1 = DecoratorConsumer.DefineCreator() ? num4 : num4;
              continue;
          }
        }
label_4:
        text3 = this.m_ReponseConsumer.Text;
        goto label_3;
label_8:;
      }
      catch (Exception ex)
      {
        int num = (int) MessageBox.Show("Unable to Insert Title");
      }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    protected override void Dispose(bool deletev)
    {
      int num1 = 3;
      if (!DecoratorConsumer.DefineCreator())
        goto label_8;
label_1:
      int num2;
      int num3;
      if (deletev)
      {
        num2 = 4;
        goto label_7;
      }
      else
        num3 = 0;
label_5:
      if (num3 != 0)
      {
        this._ContextConsumer.Dispose();
        goto label_10;
      }
      else
        goto label_11;
label_7:
      num1 = num2;
label_8:
      switch (num1)
      {
        case 0:
        case 2:
          break;
        case 1:
        case 4:
          num3 = this._ContextConsumer != null ? 1 : 0;
          goto label_5;
        case 3:
          goto label_1;
        case 5:
          return;
        default:
          num2 = 0;
          goto label_7;
      }
label_10:
label_11:
      base.Dispose(deletev);
      if (DecoratorConsumer.DefineCreator())
        return;
      num1 = 5;
      goto label_8;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private void ConnectRepository()
    {
      int num1 = 9;
      if (DecoratorConsumer.InsertCreator())
        goto label_12;
label_1:
      this.Controls.Add((Control) this.m_ReponseConsumer);
      this.Controls.Add((Control) this.taskConsumer);
      this.Controls.Add((Control) this.m_ObserverConsumer);
      this.Controls.Add((Control) this.m_WriterConsumer);
      this.Controls.Add((Control) this.m_VisitorConsumer);
      this.Controls.Add((Control) this._IndexerConsumer);
      this.Controls.Add((Control) this._ManagerConsumer);
      int num2 = 13;
label_11:
      num1 = num2;
label_12:
      while (true)
      {
        switch (num1)
        {
          case 0:
          case 11:
            this.m_VisitorConsumer.Location = new Point(117, 293);
            this.m_VisitorConsumer.Margin = new Padding(8, 0, 8, 0);
            this.m_VisitorConsumer.Name = "label4";
            this.m_VisitorConsumer.Size = new Size(137, 32);
            this.m_VisitorConsumer.TabIndex = 4;
            this.m_VisitorConsumer.Text = "Copyright";
            this.m_WriterConsumer.Location = new Point(269, 83);
            this.m_WriterConsumer.Margin = new Padding(8, 7, 8, 7);
            this.m_WriterConsumer.Name = "ISBNTextBox";
            this.m_WriterConsumer.Size = new Size(260, 38);
            this.m_WriterConsumer.TabIndex = 5;
            if (true)
            {
              num1 = 4;
              continue;
            }
            goto case 8;
          case 1:
            goto label_18;
          case 2:
            this.comparatorConsumer.Margin = new Padding(8, 0, 8, 0);
            this.comparatorConsumer.Name = "label1";
            this.comparatorConsumer.Size = new Size(88, 32);
            this.comparatorConsumer.TabIndex = 0;
            this.comparatorConsumer.Text = "ISBN:";
            this.m_IdentifierConsumer.Location = new Point(269, 351);
            this.m_IdentifierConsumer.Margin = new Padding(8, 7, 8, 7);
            this.m_IdentifierConsumer.Name = "InsertButton";
            this.m_IdentifierConsumer.Size = new Size(200, 55);
            this.m_IdentifierConsumer.TabIndex = 1;
            this.m_IdentifierConsumer.Text = "Insert";
            num1 = 8;
            continue;
          case 3:
            this.SuspendLayout();
            this.comparatorConsumer.AutoSize = true;
            this.comparatorConsumer.Location = new Point(160, 83);
            if (DecoratorConsumer.InsertCreator())
            {
              num1 = 2;
              continue;
            }
            goto label_25;
          case 4:
            goto label_15;
          case 5:
            this._ManagerConsumer = new Label();
            this._IndexerConsumer = new Label();
            this.m_VisitorConsumer = new Label();
            this.m_WriterConsumer = new TextBox();
            this.m_ObserverConsumer = new TextBox();
            this.taskConsumer = new TextBox();
            if (true)
            {
              num1 = 1;
              continue;
            }
            goto label_3;
          case 6:
            goto label_3;
          case 7:
            goto label_8;
          case 8:
            this.m_IdentifierConsumer.UseVisualStyleBackColor = true;
            this.m_IdentifierConsumer.Click += new EventHandler(this.SelectRepository);
            if (true)
            {
              num1 = 6;
              continue;
            }
            goto case 10;
          case 9:
            this.comparatorConsumer = new Label();
            if (true)
            {
              num1 = 10;
              continue;
            }
            goto case 17;
          case 10:
            this.m_IdentifierConsumer = new Button();
            num1 = 5;
            continue;
          case 12:
            goto label_20;
          case 13:
            goto label_7;
          case 14:
            this._IndexerConsumer.Location = new Point(35, 227);
            if (!DecoratorConsumer.DefineCreator())
            {
              num1 = 16;
              continue;
            }
            goto case 22;
          case 15:
            goto label_1;
          case 16:
            this._IndexerConsumer.Margin = new Padding(8, 0, 8, 0);
            this._IndexerConsumer.Name = "label3";
            this._IndexerConsumer.Size = new Size(219, 32);
            this._IndexerConsumer.TabIndex = 3;
            this._IndexerConsumer.Text = "Edition Number:";
            num1 = 17;
            continue;
          case 17:
            this.m_VisitorConsumer.AutoSize = true;
            goto case 0;
          case 18:
            this.AutoScaleDimensions = new SizeF(16f, 31f);
            if (DecoratorConsumer.InsertCreator())
            {
              num1 = 12;
              continue;
            }
            goto label_20;
          case 19:
          case 20:
            goto label_21;
          case 21:
            this.Controls.Add((Control) this.comparatorConsumer);
            if (true)
            {
              num1 = 22;
              continue;
            }
            goto case 16;
          case 22:
            this.Margin = new Padding(8, 7, 8, 7);
            this.Name = "InsertTitle";
            if (true)
            {
              num1 = 20;
              continue;
            }
            goto label_18;
          case 23:
            goto label_27;
          default:
            goto label_13;
        }
      }
label_3:
      this._ManagerConsumer.AutoSize = true;
      this._ManagerConsumer.Location = new Point(99, 153);
      this._ManagerConsumer.Margin = new Padding(8, 0, 8, 0);
      this._ManagerConsumer.Name = "label2";
      this._ManagerConsumer.Size = new Size(150, 32);
      this._ManagerConsumer.TabIndex = 2;
      this._ManagerConsumer.Text = "Book Title:";
      this._IndexerConsumer.AutoSize = true;
      num2 = 14;
      goto label_11;
label_7:
      this.Controls.Add((Control) this.m_IdentifierConsumer);
      num2 = 21;
      goto label_11;
label_8:
      this.ResumeLayout(false);
      this.PerformLayout();
      num2 = 23;
      goto label_11;
label_27:
      return;
label_13:
      num2 = 0;
      goto label_11;
label_15:
      this.m_ObserverConsumer.Location = new Point(269, 153);
      this.m_ObserverConsumer.Margin = new Padding(8, 7, 8, 7);
      this.m_ObserverConsumer.Name = "BookTitleTextBox";
      this.m_ObserverConsumer.Size = new Size(260, 38);
      this.m_ObserverConsumer.TabIndex = 6;
      this.taskConsumer.Location = new Point(269, 227);
      this.taskConsumer.Margin = new Padding(8, 7, 8, 7);
      this.taskConsumer.Name = "EditionTextBox";
      this.taskConsumer.Size = new Size(260, 38);
      this.taskConsumer.TabIndex = 7;
      this.m_ReponseConsumer.Location = new Point(269, 289);
      this.m_ReponseConsumer.Margin = new Padding(8, 7, 8, 7);
      this.m_ReponseConsumer.Name = "CopyrightTextBox";
      this.m_ReponseConsumer.Size = new Size(260, 38);
      this.m_ReponseConsumer.TabIndex = 8;
      num2 = 18;
      goto label_11;
label_18:
      this.m_ReponseConsumer = new TextBox();
      num2 = 3;
      goto label_11;
label_20:
      this.AutoScaleMode = AutoScaleMode.Font;
      this.ClientSize = new Size(779, 451);
      num2 = 15;
      goto label_11;
label_21:
      this.Text = "Insert Title";
      num2 = 7;
      goto label_11;
label_25:;
    }

    internal static bool InsertCreator() => true;

    internal static bool DefineCreator() => false;
  }
}
