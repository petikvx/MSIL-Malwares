// Decompiled with JetBrains decompiler
// Type: linqdb.Properties.Settings
// Assembly: TYPELIBA, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 97BB50BA-9882-4DFE-999C-7A4E4B448F1C
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-080eff3ceefca287dc59d176676559ae1aa3f1faec807805114bae214a11f586.exe

using System.CodeDom.Compiler;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using TYPELIBA.Identifiers;

namespace linqdb.Properties
{
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.0.0.0")]
  [CompilerGenerated]
  internal sealed class Settings : ApplicationSettingsBase
  {
    private static Settings defaultInstance;

    public static Settings Default
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        Settings defaultInstance = Settings.defaultInstance;
        return defaultInstance;
      }
    }

    [ApplicationScopedSetting]
    [DebuggerNonUserCode]
    [SpecialSetting(SpecialSetting.ConnectionString)]
    [DefaultSettingValue("Data Source=.\\SQLEXPRESS;AttachDbFilename=|DataDirectory|\\Books.mdf;Integrated Security=True;Connect Timeout=30;User Instance=True")]
    public string BooksConnectionString
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get => (string) this[nameof (BooksConnectionString)];
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public Settings()
    {
      ManagerParamsID.NewExpression();
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static Settings()
    {
      ManagerParamsID.NewExpression();
      // ISSUE: reference to a compiler-generated field
      // ISSUE: object of a compiler-generated type is created
      Settings.defaultInstance = (Settings) SettingsBase.Synchronized((SettingsBase) new Settings());
    }

    internal static bool CloneCreator() => true;

    internal static bool SearchCreator() => false;
  }
}
