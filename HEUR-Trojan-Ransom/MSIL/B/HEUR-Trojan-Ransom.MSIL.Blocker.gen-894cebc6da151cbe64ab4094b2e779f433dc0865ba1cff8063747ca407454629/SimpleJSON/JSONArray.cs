// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: CriticalHand, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 8F3AACC8-AAA3-4E3C-B88D-04522F6F341D
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-894cebc6da151cbe64ab4094b2e779f433dc0865ba1cff8063747ca407454629.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 238165258;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 728141781)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -473281059 ^ 1433389552;
              continue;
            case 1:
              jsonNode = this.m_List[aIndex];
              num1 = 171120277;
              continue;
            case 2:
              num1 = (int) num2 * 526813483 ^ -2011484250;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -526486324 ^ -1410057037;
              continue;
            case 4:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 6:
              goto label_1;
            case 7:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -856656594 ^ -1769583229;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_12;
          }
          int num4;
          num1 = num4 = num3 != 0 ? 2008249094 : (num4 = 389086220);
        }
label_12:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_8;
label_1:
        int num1 = 2116771423;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2113154843)) % 8U)
          {
            case 0:
              this.m_List.Add(value);
              num1 = (int) num2 * -1218359138 ^ 1728869514;
              continue;
            case 1:
              num1 = (int) num2 * 1643962659 ^ 42577771;
              continue;
            case 2:
              goto label_3;
            case 3:
              num1 = (int) num2 * -1142892832 ^ -1528891919;
              continue;
            case 4:
              goto label_7;
            case 5:
              this.m_List[aIndex] = value;
              num1 = 333050193;
              continue;
            case 6:
              goto label_1;
            case 7:
              int num3 = !flag ? 375954116 : (num3 = 228407337);
              num1 = num3 ^ (int) num2 * 368456206;
              continue;
            default:
              goto label_12;
          }
        }
label_3:
        return;
label_12:
        return;
label_7:
        int num4 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_9;
label_8:
        num4 = 1;
label_9:
        flag = num4 != 0;
        num1 = 2029218876;
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get
      {
        JSONNode jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
label_1:
        int num1 = -1860917265;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -167964092)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -493782228 ^ -717351306;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set => this.m_List.Add(value);
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 363240587;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1384785609)) % 3U)
          {
            case 1:
              count = this.m_List.Count;
              num1 = (int) num2 * 2132635829 ^ -1181848387;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 933901456;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1356239309)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            this.m_List.Add(aItem);
            num1 = (int) num2 * -75156880 ^ -369682954;
            continue;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 1482381046;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        JSONNode jsonNode2;
        int num3;
        switch ((num2 = (uint) (num1 ^ 488941011)) % 11U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * 1632988655 ^ -1369405410;
            continue;
          case 2:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 3:
            num1 = (int) num2 * -1734041681 ^ -788356282;
            continue;
          case 5:
            jsonNode2 = this.m_List[aIndex];
            num1 = 1126190987;
            continue;
          case 6:
            num1 = (int) num2 * -153409376 ^ 814892399;
            continue;
          case 7:
            num1 = (int) num2 * -709106727 ^ -241552459;
            continue;
          case 8:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -397020029 ^ -1949529997;
            continue;
          case 9:
            this.m_List.RemoveAt(aIndex);
            num1 = (int) num2 * -2114214772 ^ -932381789;
            continue;
          case 10:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * -1655545886 ^ 107810688;
              continue;
            }
            num3 = 1;
            break;
          default:
            goto label_15;
        }
        int num4;
        num1 = num4 = num3 == 0 ? 462736333 : (num4 = 447639503);
      }
label_15:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = -130696883;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1036187883)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            jsonNode = aNode;
            num1 = (int) num2 * -1163699114 ^ 845692337;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONArray.\u003Cget_Childs\u003Ed__13 getChildsD13 = new JSONArray.\u003Cget_Childs\u003Ed__13(-2);
label_1:
        int num1 = 1045478338;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1940189001)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              childs = (IEnumerable<JSONNode>) getChildsD13;
              num1 = (int) num2 * 144095730 ^ -1924197659;
              continue;
            case 3:
              getChildsD13.\u003C\u003E4__this = this;
              num1 = (int) num2 * 791435632 ^ 900177252;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONArray.\u003CGetEnumerator\u003Ed__14(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = -1240455447;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1553966235)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str = "[ ";
            num1 = (int) num2 * 539012992 ^ 1840282416;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_12:
        int num3 = !enumerator.MoveNext() ? -2026742625 : (num3 = -573189306);
        bool flag;
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1553966235)) % 9U)
          {
            case 0:
              int num5 = flag ? -1165667242 : (num5 = -1521937322);
              num3 = num5 ^ (int) num4 * -1849876188;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = -2125577691;
              continue;
            case 2:
              num3 = (int) num4 * 1756926951 ^ -477333117;
              continue;
            case 3:
              goto label_12;
            case 4:
              str = JSONArray.\u206B‍‬‌⁪‎‏‪‮‎⁭‭‎‭⁮‫⁭⁪⁬‬‬⁪‮⁪‎‪‭‭​‏‏‭‪⁭‏‏‮‫⁯‌‮(str, JSONArray.\u202C‌‌‍‪⁪‏‪⁪⁪‪‭⁯⁬‍‭‫⁫‮⁬⁮⁭⁮⁬⁬⁭‍⁬⁪⁭‎⁯⁪‭‌‭‍‬⁫⁬‮((object) current));
              num3 = -1120681809;
              continue;
            case 5:
              str = JSONArray.\u206B‍‬‌⁪‎‏‪‮‎⁭‭‎‭⁮‫⁭⁪⁬‬‬⁪‮⁪‎‪‭‭​‏‏‭‪⁭‏‏‮‫⁯‌‮(str, ", ");
              num3 = (int) num4 * -1037282905 ^ 2105504787;
              continue;
            case 7:
              flag = JSONArray.\u206E‏‭‏‎⁬‬⁯‫‏⁫⁮‌‭‌⁬⁬⁬‎‬⁬‌​​‏⁫⁮⁫​‍⁫‭‏‪‫‬‌⁯⁮‮‮(str) > 2;
              num3 = (int) num4 * -1279351785 ^ -1847628243;
              continue;
            case 8:
              num3 = -573189306;
              continue;
            default:
              goto label_20;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_16:
        int num6 = -103592186;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ -1553966235)) % 3U)
          {
            case 1:
              num6 = (int) num7 * -53116102 ^ 232935996;
              continue;
            case 2:
              goto label_16;
            default:
              goto label_19;
          }
        }
label_19:;
      }
label_20:
      return JSONArray.\u206B‍‬‌⁪‎‏‪‮‎⁭‭‎‭⁮‫⁭⁪⁬‬‬⁪‮⁪‎‪‭‭​‏‏‭‪⁭‏‏‮‫⁯‌‮(str, " ]");
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = -10672895;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1378064355)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * -221419325 ^ 1191658632;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator())
      {
label_8:
        int num3 = enumerator.MoveNext() ? -790967705 : (num3 = -1205330168);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1378064355)) % 9U)
          {
            case 0:
              str1 = JSONArray.\u206B‍‬‌⁪‎‏‪‮‎⁭‭‎‭⁮‫⁭⁪⁬‬‬⁪‮⁪‎‪‭‭​‏‏‭‪⁭‏‏‮‫⁯‌‮(str1, ", ");
              num3 = (int) num4 * 1959734946 ^ -252895745;
              continue;
            case 1:
              current = enumerator.Current;
              num3 = -2141527179;
              continue;
            case 2:
              int num5 = JSONArray.\u206E‏‭‏‎⁬‬⁯‫‏⁫⁮‌‭‌⁬⁬⁬‎‬⁬‌​​‏⁫⁮⁫​‍⁫‭‏‪‫‬‌⁯⁮‮‮(str1) > 3 ? -1270047216 : (num5 = -369322754);
              num3 = num5 ^ (int) num4 * 677459215;
              continue;
            case 4:
              str1 = JSONArray.\u206B‏⁯‏​‮⁯‭⁫‮⁭‫‏⁯​‌‪​‍⁬‪⁮⁯⁯⁪⁫⁮‪‮‌⁮‍‪‍‭⁬​⁬⁫⁬‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u206B‍‬‌⁪‎‏‪‮‎⁭‭‎‭⁮‫⁭⁪⁬‬‬⁪‮⁪‎‪‭‭​‏‏‭‪⁭‏‏‮‫⁯‌‮(str1, current.ToString(JSONArray.\u206B‍‬‌⁪‎‏‪‮‎⁭‭‎‭⁮‫⁭⁪⁬‬‬⁪‮⁪‎‪‭‭​‏‏‭‪⁭‏‏‮‫⁯‌‮(aPrefix, "   ")));
              num3 = -878471885;
              continue;
            case 5:
              num3 = (int) num4 * 1627614998 ^ -879473654;
              continue;
            case 6:
              num3 = (int) num4 * 950912339 ^ 1537417092;
              continue;
            case 7:
              goto label_8;
            case 8:
              num3 = -790967705;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONArray.\u206B‏⁯‏​‮⁯‭⁫‮⁭‫‏⁯​‌‪​‍⁬‪⁮⁯⁯⁪⁫⁮‪‮‌⁮‍‪‍‭⁬​⁬⁫⁬‮(str1, "\n", aPrefix, "]");
label_17:
      int num6 = -524649408;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -1378064355)) % 4U)
        {
          case 1:
            str3 = str2;
            num6 = (int) num7 * 1750190182 ^ 929983337;
            continue;
          case 2:
            num6 = (int) num7 * 1604360123 ^ 1314783219;
            continue;
          case 3:
            goto label_17;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONArray.\u206B‫‍⁫⁫‪​‌⁫⁬‮​​⁫⁯‭‏⁪‭‫‎​⁮‭‭‬‬⁮‌⁭‮⁬‪‪‍⁮‭⁪⁯⁮‮(aWriter, (byte) 1);
      JSONArray.\u206E‏‭‎⁫⁫​‪‮⁮⁭‍‎‪‮⁫‎⁯‮⁭‫⁮‮⁮⁫⁬⁮‫‌‪‬‫‫‪‏‫⁭‍‭‌‮(aWriter, this.m_List.Count);
label_1:
      int num1 = -580507091;
      bool flag;
      int index;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1860273215)) % 10U)
        {
          case 0:
            num1 = -214048352;
            continue;
          case 1:
            flag = index < this.m_List.Count;
            num1 = -151980728;
            continue;
          case 2:
            index = 0;
            num1 = (int) num2 * -1232066951 ^ 1546534262;
            continue;
          case 3:
            ++index;
            num1 = (int) num2 * 1362263672 ^ 548333056;
            continue;
          case 4:
            goto label_3;
          case 5:
            int num3 = flag ? -1550805454 : (num3 = -686240988);
            num1 = num3 ^ (int) num2 * -1437363855;
            continue;
          case 6:
            goto label_1;
          case 7:
            num1 = (int) num2 * -1156987906 ^ 15815522;
            continue;
          case 8:
            num1 = (int) num2 * 819643046 ^ 226829719;
            continue;
          case 9:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * -2138660054 ^ -1167738974;
            continue;
          default:
            goto label_12;
        }
      }
label_3:
      return;
label_12:;
    }

    public JSONArray()
    {
label_1:
      int num1 = -1742714258;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2102989902)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * -414240492 ^ -1867254776;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    static int \u206E‏‭‏‎⁬‬⁯‫‏⁫⁮‌‭‌⁬⁬⁬‎‬⁬‌​​‏⁫⁮⁫​‍⁫‭‏‪‫‬‌⁯⁮‮‮([In] string obj0) => obj0.Length;

    static string \u206B‍‬‌⁪‎‏‪‮‎⁭‭‎‭⁮‫⁭⁪⁬‬‬⁪‮⁪‎‪‭‭​‏‏‭‪⁭‏‏‮‫⁯‌‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202C‌‌‍‪⁪‏‪⁪⁪‪‭⁯⁬‍‭‫⁫‮⁬⁮⁭⁮⁬⁬⁭‍⁬⁪⁭‎⁯⁪‭‌‭‍‬⁫⁬‮([In] object obj0) => obj0.ToString();

    static string \u206B‏⁯‏​‮⁯‭⁫‮⁭‫‏⁯​‌‪​‍⁬‪⁮⁯⁯⁪⁫⁮‪‮‌⁮‍‪‍‭⁬​⁬⁫⁬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206B‫‍⁫⁫‪​‌⁫⁬‮​​⁫⁯‭‏⁪‭‫‎​⁮‭‭‬‬⁮‌⁭‮⁬‪‪‍⁮‭⁪⁯⁮‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206E‏‭‎⁫⁫​‪‮⁮⁭‍‎‪‮⁫‎⁯‮⁭‫⁮‮⁮⁫⁬⁮‫‌‪‬‫‫‪‏‫⁭‍‭‌‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
