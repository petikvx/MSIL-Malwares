// Decompiled with JetBrains decompiler
// Type: 745821265174.659418788009
// Assembly: 087135227926, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
// MVID: 0DB320EA-9C28-4716-BA63-69641BABDE67
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-3283830ccf60d4481608cb301a1e81f6b89bd02ff08e41f6034488bc28baf010.exe

using \u003081856973272;
using \u003132966078364;
using \u003133004791854;
using \u003293966627255;
using \u003462605226301;
using \u003573940117928;
using \u003603600525092;
using \u003721510544101;
using \u003745821265174;
using \u003774003589282;
using \u003776591164401;
using \u003803837926758;
using \u003874656485198;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.CompilerServices;

namespace \u003745821265174
{
  internal abstract class \u003659418788009
  {
    private \u003177964709183 \u003388147301623;
    private \u003384997559785<string, object> \u003834345878962;
    internal readonly \u003131478599170 \u003766645839190;
    internal readonly ITraceWriter \u003019764769381;
    protected \u003760500179276 InternalSerializer;

    protected \u003659418788009(\u003131478599170 serializer)
    {
      \u003821784578685.\u003260732825936((object) serializer, nameof (serializer));
      this.\u003766645839190 = serializer;
      this.\u003019764769381 = serializer.\u003617729505267;
    }

    internal \u003384997559785<string, object> \u003854696911497
    {
      get
      {
        if (this.\u003834345878962 == null)
          this.\u003834345878962 = new \u003384997559785<string, object>((IEqualityComparer<string>) EqualityComparer<string>.Default, (IEqualityComparer<object>) new \u003659418788009.\u003251224198319(), "A different value already has the Id '{0}'.", "A different Id has already been assigned for value '{0}'.");
        return this.\u003834345878962;
      }
    }

    private \u003177964709183 \u003377986395100(
      object _param1,
      object _param2,
      string _param3,
      Exception _param4)
    {
      if (this.\u003388147301623 == null)
        this.\u003388147301623 = new \u003177964709183(_param1, _param2, _param3, _param4);
      if (this.\u003388147301623.\u003265815215373 != _param4)
        throw new InvalidOperationException("Current error context error is different to requested error.");
      return this.\u003388147301623;
    }

    protected void ClearErrorContext() => this.\u003388147301623 = this.\u003388147301623 != null ? (\u003177964709183) null : throw new InvalidOperationException("Could not clear error context. Error context is already null.");

    protected bool IsErrorHandled(
      object currentObject,
      \u003138066013867 contract,
      object keyValue,
      IJsonLineInfo lineInfo,
      string path,
      Exception ex)
    {
      \u003177964709183 errorContext = this.\u003377986395100(currentObject, keyValue, path, ex);
      if (this.\u003019764769381 != null && this.\u003019764769381.LevelFilter >= TraceLevel.Error && !errorContext.\u003718620137315)
      {
        errorContext.\u003718620137315 = true;
        string str = this.GetType() == typeof (\u003006253321973) ? "Error serializing" : "Error deserializing";
        if (contract != null)
          str = str + " " + (object) contract.\u003587454762815;
        string message = str + ". " + ex.Message;
        if (!(ex is \u003215302783352))
          message = \u003822255978171.\u003358142129139(lineInfo, path, message);
        this.\u003019764769381.Trace(TraceLevel.Error, message, ex);
      }
      if (contract != null && currentObject != null)
        contract.\u003644584963908(currentObject, this.\u003766645839190.\u003814844904698, errorContext);
      if (!errorContext.\u003999092603989)
        this.\u003766645839190.\u003826014104073(new \u003720136178044(currentObject, errorContext));
      return errorContext.\u003999092603989;
    }

    private class \u003251224198319 : IEqualityComparer<object>
    {
      int IEqualityComparer<object>.\u003411927387702(object _param1) => RuntimeHelpers.GetHashCode(_param1);

      public \u003251224198319()
      {
      }

      public \u003251224198319()
      {
      }
    }
  }
}
