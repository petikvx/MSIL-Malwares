// Decompiled with JetBrains decompiler
// Type:  
// Assembly: Jbkttgjy, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2E2A819A-CCD1-40A6-A838-713DABA6E2A0
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\UDS-Trojan.Multi.GenericML.xnet-ba0fec15d6c5e15df9fd3ac351711716a58c081b27b0f60fa90a77affd84a123.exe

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Threading;

internal static class \u0003\u2006
{
  private static readonly Assembly \u0002;
  private static volatile Dictionary<string, \u0003\u2006.\u0002> \u0003;
  [ThreadStatic]
  private static bool \u0005;

  static \u0003\u2006()
  {
    Assembly assembly = typeof (\u0003\u2006).Assembly;
    if (false)
      return;
    \u0003\u2006.\u0002 = assembly;
  }

  internal static void \u0002() => AppDomain.CurrentDomain.ResourceResolve += new ResolveEventHandler(\u0003\u2006.\u0002);

  [MethodImpl(MethodImplOptions.NoInlining)]
  private static Assembly \u0002(object _param0, ResolveEventArgs _param1)
  {
    ResolveEventArgs resolveEventArgs1 = _param1;
    if (true)
      ;
    if ((object) resolveEventArgs1.RequestingAssembly != (object) \u0003\u2006.\u0002)
      return (Assembly) null;
    if (\u0003\u2006.\u0005)
      return (Assembly) null;
    ResolveEventArgs resolveEventArgs2 = _param1;
    if (true)
      ;
    return \u0003\u2006.\u0002(resolveEventArgs2.Name);
  }

  [MethodImpl(MethodImplOptions.NoInlining)]
  private static Assembly \u0002(string _param0)
  {
    if (true)
      \u0003\u2006.\u0005 = true;
    Assembly assembly;
    try
    {
      if (true)
        goto label_4;
label_3:
      \u0003\u2006.\u0002 obj;
      if (!\u0003\u2006.\u0003.TryGetValue(_param0, out obj))
      {
        if (true)
        {
          assembly = (Assembly) null;
          goto label_9;
        }
        else
          goto label_9;
      }
      else
      {
        assembly = obj.\u0002();
        goto label_9;
      }
label_4:
      \u0003\u2006.\u0003();
      goto label_3;
    }
    finally
    {
      \u0003\u2006.\u0005 = false;
    }
label_9:
    return assembly;
  }

  private static void \u0003()
  {
    if (\u0003\u2006.\u0003 != null)
      return;
    Assembly assembly1 = \u0003\u2006.\u0002;
    if (true)
      goto label_3;
label_2:
    Assembly assembly2;
    Assembly assembly3 = assembly2;
    if (true)
      Monitor.Enter((object) assembly3);
    try
    {
      if (\u0003\u2006.\u0003 != null)
        return;
      string str1 = \u0008\u2006.\u0002(2093219336);
      if (true)
        goto label_8;
label_7:
      string str2;
      string[] strArray1 = str2.Split(':');
      int length1 = strArray1.Length;
      Dictionary<string, \u0003\u2006.\u0002> dictionary = new Dictionary<string, \u0003\u2006.\u0002>(3, (IEqualityComparer<string>) StringComparer.Ordinal);
      for (int index1 = 0; index1 != length1; ++index1)
      {
        string[] strArray2 = strArray1[index1].Split('|');
        \u0003\u2006.\u0002 obj = new \u0003\u2006.\u0002(strArray2[0]);
        int length2 = strArray2.Length;
        for (int index2 = 1; index2 != length2; ++index2)
        {
          string key = strArray2[index2];
          dictionary.Add(key, obj);
        }
      }
      \u0003\u2006.\u0003 = dictionary;
      return;
label_8:
      str2 = str1;
      goto label_7;
    }
    finally
    {
      Monitor.Exit((object) assembly2);
    }
label_3:
    assembly2 = assembly1;
    goto label_2;
  }

  private sealed class \u0002
  {
    private readonly string \u0002;
    private volatile Assembly \u0003;

    internal \u0002(string _param1)
    {
      string str = _param1;
      if (false)
        return;
      this.\u0002 = str;
    }

    internal Assembly \u0002()
    {
      if ((object) this.\u0003 == null)
      {
        if (true)
          goto label_3;
label_2:
        \u0003\u2006.\u0002 obj1;
        \u0003\u2006.\u0002 obj2 = obj1;
        if (true)
          Monitor.Enter((object) obj2);
        try
        {
          if ((object) this.\u0003 == null)
          {
            this.\u0003 = \u0003\u2006.\u0002.\u0002(this.\u0002);
            goto label_10;
          }
          else
            goto label_10;
        }
        finally
        {
          \u0003\u2006.\u0002 obj3 = obj1;
          if (true)
            goto label_9;
label_8:
label_9:
          Monitor.Exit((object) obj3);
          goto label_8;
        }
label_3:
        obj1 = this;
        goto label_2;
      }
label_10:
      return this.\u0003;
    }

    private static Assembly \u0002(string _param0)
    {
      string str = _param0;
      if (true)
        ;
      Assembly assembly = \u0005\u2006.\u0002(str);
      if ((object) assembly != null)
        return assembly;
      if (true)
        ;
      string assemblyString = _param0;
      if (true)
        ;
      return Assembly.Load(assemblyString);
    }
  }
}
