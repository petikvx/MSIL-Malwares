// Decompiled with JetBrains decompiler
// Type: ⁮⁬‮‌‏‭‏‫⁯‎‫⁪‫​⁬⁭‌​⁬⁭⁫‮‭⁪⁯‮‬‭‪​⁫‬‭⁭⁭⁭‭⁬⁬‬‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

internal abstract class \u206E⁬‮‌‏‭‏‫⁯‎‫⁪‫​⁬⁭‌​⁬⁭⁫‮‭⁪⁯‮‬‭‪​⁫‬‭⁭⁭⁭‭⁬⁬‬‮
{
  public static void \u200D⁬‌⁮‌⁬‬⁫⁫‪⁯​⁭‪⁭⁫‎‫‬‫‭‭‌‪⁫​‍​‮‭⁯‬‍‮⁬⁪‎‬‬⁭‮(
    ulong[] _param0,
    ulong[] _param1)
  {
    _param1[0] = _param0[0];
    _param1[1] = _param0[1];
    _param1[2] = _param0[2];
    _param1[3] = _param0[3];
    _param1[4] = _param0[4];
    _param1[5] = _param0[5];
    _param1[6] = _param0[6];
    _param1[7] = _param0[7];
    _param1[8] = _param0[8];
  }

  public static void \u200D⁬‌⁮‌⁬‬⁫⁫‪⁯​⁭‪⁭⁫‎‫‬‫‭‭‌‪⁫​‍​‮‭⁯‬‍‮⁬⁪‎‬‬⁭‮(
    ulong[] _param0,
    int _param1,
    ulong[] _param2,
    int _param3)
  {
    _param2[_param3] = _param0[_param1];
    _param2[_param3 + 1] = _param0[_param1 + 1];
    _param2[_param3 + 2] = _param0[_param1 + 2];
    _param2[_param3 + 3] = _param0[_param1 + 3];
    _param2[_param3 + 4] = _param0[_param1 + 4];
    _param2[_param3 + 5] = _param0[_param1 + 5];
    _param2[_param3 + 6] = _param0[_param1 + 6];
    _param2[_param3 + 7] = _param0[_param1 + 7];
    _param2[_param3 + 8] = _param0[_param1 + 8];
  }

  public static ulong[] \u202A‭‫‎‫⁪‏‪⁯‪‏⁫‪‍‌⁫‭‬⁫⁬⁫⁪⁭⁬‍⁮‍‏‍‮⁮‍⁭⁮‫⁬⁬‭‮⁪‮() => new ulong[9];

  public static ulong[] \u202B‌‬‌⁮‬‎‬‭‪⁭⁬⁫​⁮‭⁯⁬‪⁫‍‬⁫‬⁯‍‎‪‭⁪⁫⁮‪‬‍⁭⁬‭‭‫‮() => new ulong[18];

  public static bool \u206D‭⁬‪⁯‍‍‍​‎‭‭​⁯⁭⁬‬‫‬‭‭‫‌‎‭‬⁬⁭⁫⁪‎‍⁭⁪⁬‭‎⁯⁭‍‮(
    ulong[] _param0,
    ulong[] _param1)
  {
    for (int index = 8; index >= 0; --index)
    {
      if ((long) _param0[index] != (long) _param1[index])
        return false;
    }
    return true;
  }

  public static bool \u200E‍⁫‫⁬⁬‎‎‫‬‎‮‭⁯‌⁪‭‎‫‮‬‬‍⁮‫⁯‫‌⁭⁮⁭​⁬‬​‍​‪⁭⁯‮(ulong[] _param0)
  {
    if (_param0[0] != 1UL)
      return false;
    for (int index = 1; index < 9; ++index)
    {
      if (_param0[index] != 0UL)
        return false;
    }
    return true;
  }

  public static bool \u206E⁬‭‫⁮‎‏‭‌⁭‎‫⁬‍⁭‫⁪⁭‮⁫⁬⁮​⁬‪⁮⁪⁪⁫‪⁫‍⁭⁭‎⁭‍‫⁯‌‮(ulong[] _param0)
  {
    for (int index = 0; index < 9; ++index)
    {
      if (_param0[index] != 0UL)
        return false;
    }
    return true;
  }

  public static \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮ \u202E⁫‍‭‍‪‏⁫⁮‬⁭‭‍‎‏‫⁭⁯‏⁮⁮‬‍‬​‍⁯‫​⁮‌⁯‎‫‪‫⁯‌⁬⁬‮(
    ulong[] _param0)
  {
    byte[] numArray = new byte[72];
    for (int index = 0; index < 9; ++index)
    {
      ulong num = _param0[index];
      if (num != 0UL)
        \u200F⁬‏‬⁭⁬⁮‮⁪‌‎⁯‮⁪⁯⁭⁯⁮‏‭⁪⁭⁬‭‍​⁮‍⁯‌‌⁬⁬⁫⁭‎‫​‍⁪‮.\u206C‏‫​‫‎‮⁬⁫‭⁪⁫‫​⁬‫‍⁯​‌‏⁬⁪⁮⁮⁬⁪‫‪‫‎​‫‎‎‎⁫⁫‮⁭‮(num, numArray, 8 - index << 3);
    }
    return new \u200B‌‏⁫⁬⁬‬⁬‌‎‪⁮‭​‎​‬‎⁯⁮‏​‫‬‫⁫⁫‫⁫​‮‫⁭​⁬⁬⁬‎‭‍‮(1, numArray);
  }
}
