// Decompiled with JetBrains decompiler
// Type: 1r7.744
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u0032Zv;
using \u0034gV;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0031r7
{
  internal sealed class \u003744 : Stream
  {
    private H85 EIa;
    private Stream \u003341;
    private LzE G7N;

    public \u003744([In] Stream obj0, [In] H85 obj1, [In] LzE obj2)
    {
      if (obj0 == null)
        throw new ArgumentNullException("s");
      this.EIa = obj1;
      this.\u003341 = obj0;
      this.G7N = obj2;
    }

    int Stream.\u0039zC([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      if (this.G7N == LzE.\u0023a)
        throw new NotSupportedException("This stream does not encrypt via Read()");
      if (obj0 == null)
        throw new ArgumentNullException("buffer");
      byte[] buffer = new byte[obj2];
      int num = this.\u003341.Read(buffer, 0, obj2);
      byte[] numArray = this.EIa.ypX(buffer, num);
      for (int index = 0; index < num; ++index)
        obj0[obj1 + index] = numArray[index];
      return num;
    }

    void Stream.Ob6([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      if (this.G7N == LzE.\u0023b)
        throw new NotSupportedException("This stream does not Decrypt via Write()");
      if (obj0 == null)
        throw new ArgumentNullException("buffer");
      if (obj2 == 0)
        return;
      byte[] numArray;
      if (obj1 != 0)
      {
        numArray = new byte[obj2];
        for (int index = 0; index < obj2; ++index)
          numArray[index] = obj0[obj1 + index];
      }
      else
        numArray = obj0;
      byte[] buffer = this.EIa.\u0033Hx(numArray, obj2);
      this.\u003341.Write(buffer, 0, buffer.Length);
    }

    [SpecialName]
    bool Stream.RVL() => this.G7N == LzE.\u0023b;

    [SpecialName]
    bool Stream.Ne3() => false;

    [SpecialName]
    bool Stream.\u00392Y() => this.G7N == LzE.\u0023a;

    void Stream.DHh()
    {
    }

    [SpecialName]
    long Stream.\u003117() => throw new NotSupportedException();

    [SpecialName]
    long Stream.\u00347U() => throw new NotSupportedException();

    [SpecialName]
    void Stream.hAM([In] long obj0) => throw new NotSupportedException();

    long Stream.\u0034A9([In] long obj0, [In] SeekOrigin obj1) => throw new NotSupportedException();

    void Stream.qbX([In] long obj0) => throw new NotSupportedException();
  }
}
