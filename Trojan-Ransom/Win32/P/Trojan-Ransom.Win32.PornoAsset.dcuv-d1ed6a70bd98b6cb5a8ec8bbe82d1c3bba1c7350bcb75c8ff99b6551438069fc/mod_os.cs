// Decompiled with JetBrains decompiler
// Type: ABC_Bot.mod_os
// Assembly: ABC-Bot LITE, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C2CB4D60-1596-4A45-B5DE-4321788ED925
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00013-msil\Trojan-Ransom.Win32.PornoAsset.dcuv-d1ed6a70bd98b6cb5a8ec8bbe82d1c3bba1c7350bcb75c8ff99b6551438069fc.exe

using Microsoft.VisualBasic.CompilerServices;
using System;

namespace ABC_Bot
{
  [StandardModule]
  internal sealed class mod_os
  {
    public static string getOs()
    {
label_0:
      int num1;
      string str1;
      int num2;
      try
      {
        ProjectData.ClearProjectError();
        num1 = -2;
label_1:
        int num3 = 2;
        OperatingSystem osVersion = Environment.OSVersion;
label_2:
        num3 = 3;
        string str2 = "";
label_3:
        num3 = 4;
        if (osVersion.Version.Major != 5)
          goto label_9;
label_4:
        num3 = 5;
        switch (osVersion.Version.Minor)
        {
          case 0:
            break;
          case 1:
            goto label_6;
          case 2:
            goto label_7;
          default:
            goto label_8;
        }
label_5:
        num3 = 9;
        str2 = "Windows 2000";
        goto label_15;
label_6:
        num3 = 13;
        str2 = "Windows XP";
        goto label_15;
label_7:
        num3 = 17;
        str2 = "Windows Server 2003";
        goto label_15;
label_8:
        num3 = 21;
        str2 = osVersion.ToString();
        goto label_15;
label_9:
        num3 = 25;
label_10:
        num3 = 26;
        if (osVersion.Version.Major != 6)
          goto label_15;
label_11:
        num3 = 27;
        switch (osVersion.Version.Minor)
        {
          case 0:
            break;
          case 1:
            goto label_13;
          default:
            goto label_14;
        }
label_12:
        num3 = 31;
        str2 = "Windows Vista";
        goto label_15;
label_13:
        num3 = 35;
        str2 = "Windows 7";
        goto label_15;
label_14:
        num3 = 39;
        str2 = osVersion.ToString();
label_15:
        num3 = 44;
        osVersion.VersionString.ToString();
label_16:
        num3 = 45;
        string servicePack = osVersion.ServicePack;
label_17:
        num3 = 46;
        str1 = string.Format("{0}, {1}", (object) str2, (object) servicePack);
        goto label_24;
label_19:
        num2 = num3;
        switch (num1 > -2 ? num1 : 1)
        {
          case 1:
            int num4 = num2 + 1;
            num2 = 0;
            switch (num4)
            {
              case 1:
                goto label_0;
              case 2:
                goto label_1;
              case 3:
                goto label_2;
              case 4:
                goto label_3;
              case 5:
                goto label_4;
              case 6:
              case 10:
              case 11:
              case 14:
              case 15:
              case 18:
              case 19:
              case 22:
              case 23:
              case 24:
              case 28:
              case 32:
              case 33:
              case 36:
              case 37:
              case 40:
              case 41:
              case 42:
              case 43:
              case 44:
                goto label_15;
              case 7:
              case 9:
                goto label_5;
              case 12:
              case 13:
                goto label_6;
              case 16:
              case 17:
                goto label_7;
              case 20:
              case 21:
                goto label_8;
              case 25:
                goto label_9;
              case 26:
                goto label_10;
              case 27:
                goto label_11;
              case 29:
              case 31:
                goto label_12;
              case 34:
              case 35:
                goto label_13;
              case 38:
              case 39:
                goto label_14;
              case 45:
                goto label_16;
              case 46:
                goto label_17;
              case 47:
                goto label_24;
            }
            break;
        }
      }
      catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
      {
        ProjectData.SetProjectError(ex);
        goto label_19;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_24:
      string os = str1;
      if (num2 == 0)
        return os;
      ProjectData.ClearProjectError();
      return os;
    }
  }
}
