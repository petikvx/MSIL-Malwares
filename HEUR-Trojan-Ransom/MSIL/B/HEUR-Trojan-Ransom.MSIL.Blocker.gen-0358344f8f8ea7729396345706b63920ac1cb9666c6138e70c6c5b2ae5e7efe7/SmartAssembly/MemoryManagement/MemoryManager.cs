// Decompiled with JetBrains decompiler
// Type: SmartAssembly.MemoryManagement.MemoryManager
// Assembly: 2012, Version=0.0.0.0, Culture=neutral, PublicKeyToken=6bd9dd2807ddb306
// MVID: 60A44901-35B0-4353-8B52-C0C6D76F7330
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0358344f8f8ea7729396345706b63920ac1cb9666c6138e70c6c5b2ae5e7efe7.exe

using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace SmartAssembly.MemoryManagement
{
  public sealed class MemoryManager
  {
    internal static MemoryManager \u0001;
    private long \u0001 = DateTime.Now.Ticks;

    [DllImport("kernel32", EntryPoint = "SetProcessWorkingSetSize")]
    private static extern int \u0001(
      IntPtr process,
      int minimumWorkingSetSize,
      int maximumWorkingSetSize);

    private void \u0001()
    {
      try
      {
        using (Process currentProcess = Process.GetCurrentProcess())
          MemoryManager.\u0001(currentProcess.Handle, -1, -1);
      }
      catch
      {
      }
    }

    private void \u0001(object sender, EventArgs e)
    {
      try
      {
        long ticks = DateTime.Now.Ticks;
        if (ticks - this.\u0001 <= 10000000L)
          return;
        this.\u0001 = ticks;
        this.\u0001();
      }
      catch
      {
      }
    }

    internal MemoryManager()
    {
      Application.Idle += new EventHandler(this.\u0001);
      this.\u0001();
    }
  }
}
