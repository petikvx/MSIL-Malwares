// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Output, Version=1.1.0.0, Culture=neutral, PublicKeyToken=ed61553e989492b3
// MVID: BAAA0E94-9CB2-4361-AD86-CB5008FBF34B
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan-Ransom.Win32.Mbro.fki-0638a076ec9495722c68ad33b29f5e9a4c9f91911ba00f42ec93ab46e642fa74.exe

using \u0002;
using \u0003;
using System;
using System.Reflection;
using System.Reflection.Emit;
using System.Runtime.InteropServices;

namespace \u0006
{
  [\u0003.\u0001]
  [\u0001.\u0001]
  internal static class \u0002
  {
    [\u0003.\u0001]
    [\u0001.\u0001]
    [\u0002.\u0001]
    public static unsafe void \u0001([In] Type obj0)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
      FieldInfo[] fields = obj0.GetFields(BindingFlags.Static | BindingFlags.NonPublic | BindingFlags.GetField);
      *(int*) voidPtr = 0;
      while (*(int*) voidPtr < fields.Length)
      {
        FieldInfo fieldInfo = fields[*(int*) voidPtr];
        try
        {
          if ((object) fieldInfo.FieldType == (object) typeof (\u0007))
          {
            DynamicMethod dynamicMethod = new DynamicMethod(string.Empty, typeof (string), new Type[1]
            {
              typeof (int)
            }, obj0.Module, true);
            ILGenerator ilGenerator = dynamicMethod.GetILGenerator();
            ilGenerator.Emit(OpCodes.Ldarg_0);
            MethodInfo[] methods = typeof (\u0008).GetMethods(BindingFlags.Static | BindingFlags.Public);
            *(int*) ((IntPtr) voidPtr + 4) = 0;
            while (true)
            {
              MethodInfo meth;
              if (*(int*) ((IntPtr) voidPtr + 4) < methods.Length)
                meth = methods[*(int*) ((IntPtr) voidPtr + 4)];
              else
                goto label_9;
label_5:
              if ((object) meth.ReturnType == (object) typeof (string))
              {
                ilGenerator.Emit(OpCodes.Ldc_I4, fieldInfo.MetadataToken & 16777215);
                ilGenerator.Emit(OpCodes.Sub);
                ilGenerator.Emit(OpCodes.Call, meth);
              }
              else
              {
                *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) + 1;
                continue;
              }
label_9:
              ilGenerator.Emit(OpCodes.Ret);
              if (false)
                goto label_5;
              else
                break;
            }
            fieldInfo.SetValue((object) null, (object) dynamicMethod.CreateDelegate(typeof (\u0007)));
            break;
          }
          if (false)
            break;
        }
        catch
        {
        }
        *(int*) voidPtr = *(int*) voidPtr + 1;
      }
    }
  }
}
