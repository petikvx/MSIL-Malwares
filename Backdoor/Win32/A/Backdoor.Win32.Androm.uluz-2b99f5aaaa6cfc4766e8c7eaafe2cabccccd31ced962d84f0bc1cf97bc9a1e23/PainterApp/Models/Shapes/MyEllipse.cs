// Decompiled with JetBrains decompiler
// Type: PainterApp.Models.Shapes.MyEllipse
// Assembly: 太城hضd氏bTنH, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FB883643-FAF4-44BB-B4FC-F1B0FC1059A6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\Backdoor.Win32.Androm.uluz-2b99f5aaaa6cfc4766e8c7eaafe2cabccccd31ced962d84f0bc1cf97bc9a1e23.exe

using System;
using System.Drawing;

namespace PainterApp.Models.Shapes
{
  public class MyEllipse : ShapeBase
  {
    public Point Center
    {
      get
      {
        Point point = this.Start;
        int x1 = point.X;
        point = this.End;
        int x2 = point.X;
        int x3 = (x1 + x2) / 2;
        point = this.Start;
        int y1 = point.Y;
        point = this.End;
        int y2 = point.Y;
        int y3 = (y1 + y2) / 2;
        return new Point(x3, y3);
      }
    }

    public int Width
    {
      get
      {
        Point point = this.End;
        int x1 = point.X;
        point = this.Start;
        int x2 = point.X;
        return Math.Abs(x1 - x2);
      }
    }

    public int Heigth
    {
      get
      {
        Point point = this.End;
        int y1 = point.Y;
        point = this.Start;
        int y2 = point.Y;
        return Math.Abs(y1 - y2);
      }
    }

    public MyEllipse(Point start, Point end, MyColor color, int lineWidth)
      : base(start, end, color, lineWidth)
    {
      this.ChangeCordinates(start, end);
    }

    public MyEllipse(MyColor color, int lineWidth)
      : base(color, lineWidth)
    {
    }

    public override void ChangeCordinates(Point start, Point end)
    {
      base.ChangeCordinates(start, end);
      this.OrderCordinates();
    }
  }
}
