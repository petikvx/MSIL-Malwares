// Decompiled with JetBrains decompiler
// Type: 475310219084.IRichDataType
// Assembly: 190180155270, Version=7.6.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
// MVID: 20B0A582-54C5-4C64-BCB9-2AC73608F590
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Exploit.MSIL.Shellcode.gen-211b9bdeb7639f8b1f0606b7671a4d1fdbf246968b078ff103eac9aa4c2cd108.exe

using \u003463056308027;
using \u003475310219084;
using Microsoft.ProgramSynthesis.Utils;
using System;

namespace \u003475310219084
{
  public interface IRichDataType : IEquatable<IRichDataType>
  {
    Optional<string> Canonicalize(string value);

    \u003547566135655 BaseKind { get; }

    \u003547566135655 Kind { get; }

    bool IsValueOfType(string value);

    bool AddSample(string value);

    void Finish(long numSamples);

    int RejectionCount { get; }

    int SampleCount { get; }

    int AcceptanceCount { get; }

    int NaValueCount { get; }

    bool SuccessOnFinish { get; }

    bool EarlyFailure { get; }

    long MinRequiredSamplesForSuccess { get; }

    bool IsFinalized { get; }

    bool EmptyStringsExpectedInData { get; set; }

    bool NormalizableStringsExpectedInData { get; set; }

    bool NullsExpectedInData { get; set; }
  }
}
