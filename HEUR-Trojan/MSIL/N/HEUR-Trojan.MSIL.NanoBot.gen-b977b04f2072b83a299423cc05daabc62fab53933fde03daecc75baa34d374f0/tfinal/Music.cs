// Decompiled with JetBrains decompiler
// Type: tfinal.Music
// Assembly: Int32ArrayTypeI, Version=1.0.0.6, Culture=neutral, PublicKeyToken=null
// MVID: 0BFC1AC3-7296-4DC2-A225-981B6FDA1974
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.NanoBot.gen-b977b04f2072b83a299423cc05daabc62fab53933fde03daecc75baa34d374f0.exe

using System;
using System.Runtime.Serialization;

namespace tfinal
{
  [Serializable]
  internal class Music : Elemento
  {
    private string artista;
    private string album;

    public string artista_music
    {
      get => this.artista;
      set => this.artista = value;
    }

    public string album_music
    {
      get => this.album;
      set => this.album = value;
    }

    public Music(
      string nome_music_par,
      string loc_music_par,
      string categoria_music_par,
      string artista_music_par,
      string album_music_par)
      : base(nome_music_par, loc_music_par, categoria_music_par)
    {
      this.artista_music = artista_music_par;
      this.album_music = album_music_par;
    }

    public override string mostrar_dados_elemento()
    {
      string str = "ID: " + Convert.ToString(this.cod_elemento) + "\nCategoria: " + this.categoria_do_elemento + "\nData: " + this.data_do_elemento + "\nTitulo: " + this.nome_do_elemento + "\nArtista: " + this.artista_music + "\nAlbum: " + this.album_music + "\nStorage: " + this.loc_do_elemento + "\n\nEstado: Available";
      if (this.estado_emprestimo_do_elemento == 1)
        str = "ID: " + Convert.ToString(this.cod_elemento) + "\nCategoria: " + this.categoria_do_elemento + "\nData: " + this.data_do_elemento + "\nTitulo: " + this.nome_do_elemento + "\nArtista: " + this.artista_music + "\nAlbum: " + this.album_music + "\nStorage: " + this.loc_do_elemento + "\n\nEstado: Emprestado";
      return str;
    }

    public override void GetObjectData(SerializationInfo info, StreamingContext ctxt)
    {
      info.AddValue("MusicaID", this.cod_elemento);
      info.AddValue("DataMusica", (object) this.data_do_elemento);
      info.AddValue("NomeMusica", (object) this.nome_do_elemento);
      info.AddValue("LocMusica", (object) this.loc_do_elemento);
      info.AddValue("CategoriaMusica", (object) this.categoria_do_elemento);
      info.AddValue("EstadoEmpMusica", this.estado_emprestimo_do_elemento);
      info.AddValue("ArtistaMusica", (object) this.artista);
      info.AddValue("AlbumMusica", (object) this.album);
      info.AddValue("total_musicas", Elemento.total_elementos);
    }

    public Music(SerializationInfo info, StreamingContext ctxt)
    {
      this.artista = (string) info.GetValue("ArtistaMusica", typeof (string));
      this.album = (string) info.GetValue("AlbumMusica", typeof (string));
      this.cod_elemento = (int) info.GetValue("MusicaID", typeof (int));
      this.data_do_elemento = (string) info.GetValue("DataMusica", typeof (string));
      this.nome_do_elemento = (string) info.GetValue("NomeMusica", typeof (string));
      this.loc_do_elemento = (string) info.GetValue("LocMusica", typeof (string));
      this.categoria_do_elemento = (string) info.GetValue("CategoriaMusica", typeof (string));
      this.estado_emprestimo_do_elemento = (int) info.GetValue("EstadoEmpMusica", typeof (int));
      Elemento.total_elementos = (int) info.GetValue("total_musicas", typeof (int));
    }
  }
}
