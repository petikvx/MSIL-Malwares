// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.UploadReportLoginService
// Assembly: u1rug, Version=0.0.0.0, Culture=neutral, PublicKeyToken=dbb94034cbd6bbd6
// MVID: C8A082E9-30A2-423A-BCDF-59565BB76FBE
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-Trojan.MSIL.NetWire.gen-baba76d578be903c9d78e3d6417636ba6a8069cafe9ccccdfce2bc19b43fc299.exe

using \u0023jd;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using System;
using System.Net;
using System.Web.Services;
using System.Web.Services.Protocols;

namespace SmartAssembly.SmartExceptionsCore
{
  [WebServiceBinding(Name = "LoginServiceSoap", Namespace = "http://www.smartassembly.com/webservices/UploadReportLogin/")]
  internal sealed class UploadReportLoginService : SoapHttpClientProtocol
  {
    [NonSerialized]
    internal static GetString \u008C;

    public UploadReportLoginService()
    {
      string hd = \u0023id.\u0023hd;
      this.Url = \u0023id.\u0023hd + UploadReportLoginService.\u008C(2039);
      this.Timeout = 30000;
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/UploadReportLogin/GetServerURL")]
    public string GetServerURL(string licenseID) => (string) \u008D.\u0093((object) this, UploadReportLoginService.\u008C(2072), new object[1]
    {
      (object) licenseID
    })[0];

    protected override WebRequest GetWebRequest(Uri uri)
    {
      WebRequest webRequest = \u008E.\u0094((object) this, uri);
      if (webRequest is HttpWebRequest httpWebRequest)
        \u0090.\u007E\u0096((object) \u008F.\u007E\u0095((object) httpWebRequest), false);
      return webRequest;
    }

    static UploadReportLoginService() => Strings.CreateGetStringDelegate(typeof (UploadReportLoginService));
  }
}
