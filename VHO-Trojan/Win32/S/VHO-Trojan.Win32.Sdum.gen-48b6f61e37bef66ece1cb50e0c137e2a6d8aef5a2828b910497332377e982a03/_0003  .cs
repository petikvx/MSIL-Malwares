// Decompiled with JetBrains decompiler
// Type:   
// Assembly: Sdevmxl, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F0B5D56E-2738-4851-005E-7CC3B980D8C1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\VHO-Trojan.Win32.Sdum.gen-48b6f61e37bef66ece1cb50e0c137e2a6d8aef5a2828b910497332377e982a03.exe

using System;

internal sealed class \u0003\u2000\u2000
{
  private readonly \u0005\u2001 \u0002;
  private readonly int \u0003;
  private readonly int \u0005;
  private \u0005\u2001 \u0008;
  private \u0005\u2001 \u0006;
  private readonly byte[] \u000E;
  private readonly byte[] \u000F;

  public \u0003\u2000\u2000()
  {
    \u0005\u2001 obj = new \u0005\u2001();
    if (true)
      goto label_4;
label_1:
    // ISSUE: explicit constructor call
    base.\u002Ector();
    int num1 = this.\u0002.\u0003();
    if (true)
      goto label_5;
label_2:
    int num2 = this.\u0002.\u0002();
    if (true)
      goto label_6;
label_3:
    this.\u000E = new byte[this.\u0005];
    this.\u000F = new byte[this.\u0005 + this.\u0003];
    return;
label_6:
    this.\u0005 = num2;
    goto label_3;
label_5:
    this.\u0003 = num1;
    goto label_2;
label_4:
    this.\u0002 = obj;
    goto label_1;
  }

  public void \u0002(byte[] _param1)
  {
    this.\u0002.\u0003();
    int length1 = _param1.Length;
    if (true)
      goto label_2;
label_1:
    int index;
    if (index > this.\u0005)
    {
      this.\u0002.\u0002(_param1, 0, index);
      this.\u0002.\u0002(this.\u000E, 0);
      int num = this.\u0003;
      if (true)
        index = num;
    }
    else
    {
      byte[] sourceArray = _param1;
      byte[] destinationArray = this.\u000E;
      int length2 = index;
      if (true)
        Array.Copy((Array) sourceArray, 0, (Array) destinationArray, 0, length2);
    }
    Array.Clear((Array) this.\u000E, index, this.\u0005 - index);
    Array.Copy((Array) this.\u000E, 0, (Array) this.\u000F, 0, this.\u0005);
    \u0003\u2000\u2000.\u0002(this.\u000E, this.\u0005, (byte) 54);
    \u0003\u2000\u2000.\u0002(this.\u000F, this.\u0005, (byte) 92);
    this.\u0006 = this.\u0002.\u0002();
    this.\u0006.\u0002(this.\u000F, 0, this.\u0005);
    this.\u0002.\u0002(this.\u000E, 0, this.\u000E.Length);
    this.\u0008 = this.\u0002.\u0002();
    return;
label_2:
    index = length1;
    goto label_1;
  }

  public int \u0002()
  {
    if (true)
      ;
    return this.\u0003;
  }

  public void \u0002(byte[] _param1, int _param2, int _param3)
  {
    if (true)
      ;
    \u0005\u2001 obj = this.\u0002;
    byte[] numArray = _param1;
    if (true)
      ;
    int num1 = _param2;
    if (true)
      ;
    int num2 = _param3;
    obj.\u0002(numArray, num1, num2);
  }

  public int \u0002(byte[] _param1, int _param2)
  {
    this.\u0002.\u0002(this.\u000F, this.\u0005);
    this.\u0002.\u0003(this.\u0006);
    this.\u0002.\u0002(this.\u000F, this.\u0005, this.\u0002.\u0003());
    int num = this.\u0002.\u0002(_param1, _param2);
    byte[] numArray = this.\u000F;
    int index = this.\u0005;
    int length = this.\u0003;
    if (true)
      goto label_2;
label_1:
    this.\u0002.\u0003(this.\u0008);
    return num;
label_2:
    Array.Clear((Array) numArray, index, length);
    goto label_1;
  }

  private static void \u0002(byte[] _param0, int _param1, byte _param2)
  {
    int index;
    if (true)
      index = 0;
    while (index < _param1)
    {
      _param0[index] ^= _param2;
      int num = index + 1;
      if (true)
        index = num;
    }
  }
}
