// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONLazyCreator
// Assembly: CMSCOMSERVERFL, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: BC3392BE-E240-40FB-9209-64A3FA8E63B6
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-1e3d099137ab4d4c152e6605801b6a5ead9837cb142dca1f5e596b75181cb673.exe

namespace SimpleJSON
{
  internal class JSONLazyCreator : JSONNode
  {
    private JSONNode m_Node = (JSONNode) null;
    private string m_Key = (string) null;

    public JSONLazyCreator(JSONNode aNode)
    {
      this.m_Node = aNode;
      this.m_Key = (string) null;
    }

    public JSONLazyCreator(JSONNode aNode, string aKey)
    {
label_1:
      int num1 = -1092223677;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1495876281)) % 6U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_Node = aNode;
            num1 = (int) num2 * -246475142 ^ 2094276950;
            continue;
          case 2:
            num1 = (int) num2 * 1500332235 ^ 1541906039;
            continue;
          case 3:
            this.m_Key = aKey;
            num1 = (int) num2 * 57045013 ^ -941094655;
            continue;
          case 4:
            num1 = (int) num2 * 1154500482 ^ -1459944526;
            continue;
          case 5:
            goto label_3;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    private void Set(JSONNode aVal)
    {
label_1:
      int num1 = -188158743;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -833372314)) % 9U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_Node.Add(aVal);
            num1 = (int) num2 * 1262319312 ^ 1391061439;
            continue;
          case 2:
            num1 = -1087498726;
            continue;
          case 4:
            num1 = (int) num2 * -1508387838 ^ -456367841;
            continue;
          case 5:
            int num3 = !flag ? 221842379 : (num3 = 891842941);
            num1 = num3 ^ (int) num2 * -830321864;
            continue;
          case 6:
            this.m_Node.Add(this.m_Key, aVal);
            num1 = (int) num2 * -1768667476 ^ -1069587696;
            continue;
          case 7:
            flag = this.m_Key == null;
            num1 = (int) num2 * -1297102903 ^ -1972118240;
            continue;
          case 8:
            num1 = (int) num2 * 1233223886 ^ 979366206;
            continue;
          default:
            goto label_10;
        }
      }
label_10:
      this.m_Node = (JSONNode) null;
    }

    public override JSONNode this[int aIndex]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this);
      set
      {
label_1:
        int num1 = 1444080086;
        JSONArray aVal;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1136832620)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              aVal = new JSONArray();
              num1 = (int) num2 * -1701347629 ^ 930135989;
              continue;
            case 3:
              aVal.Add(value);
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 558923335 ^ -1835102304;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
      set
      {
        JSONClass aVal = new JSONClass();
label_1:
        int num1 = -284355039;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1715088403)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * -1966757248 ^ 33966115;
              continue;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1433428459 ^ -178250100;
              continue;
            case 3:
              goto label_3;
            case 4:
              aVal.Add(aKey, value);
              num1 = (int) num2 * 125757936 ^ -1701977375;
              continue;
            default:
              goto label_7;
          }
        }
label_3:
        return;
label_7:;
      }
    }

    public override void Add(JSONNode aItem)
    {
      JSONArray aVal = new JSONArray();
label_1:
      int num1 = 289783349;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1237669628)) % 6U)
        {
          case 0:
            goto label_3;
          case 1:
            aVal.Add(aItem);
            num1 = (int) num2 * -1137943571 ^ 849307192;
            continue;
          case 2:
            this.Set((JSONNode) aVal);
            num1 = (int) num2 * 1630937587 ^ 1945302409;
            continue;
          case 3:
            num1 = (int) num2 * 499906616 ^ -1758268946;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * -1837828577 ^ 2140422105;
            continue;
          default:
            goto label_8;
        }
      }
label_3:
      return;
label_8:;
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      JSONClass aVal = new JSONClass();
      aVal.Add(aKey, aItem);
      this.Set((JSONNode) aVal);
label_1:
      int num1 = -354752883;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -553708355)) % 3U)
        {
          case 0:
            goto label_3;
          case 1:
            num1 = (int) num2 * 1721845070 ^ 1029508918;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public static bool operator ==(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1858072657;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1073492256)) % 6U)
        {
          case 0:
            flag1 = true;
            num1 = (int) num2 * 66223530 ^ 1700126230;
            continue;
          case 1:
            flag2 = b == null;
            num1 = (int) num2 * -1697662309 ^ -358987835;
            continue;
          case 3:
            goto label_1;
          case 4:
            int num3 = !flag2 ? -1845474309 : (num3 = -976583618);
            num1 = num3 ^ (int) num2 * -374820411;
            continue;
          case 5:
            flag1 = (object) a == b;
            num1 = 694259302;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      return flag1;
    }

    public static bool operator !=(JSONLazyCreator a, object b)
    {
label_1:
      int num1 = 1967744973;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1595482168)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            flag = !(a == b);
            num1 = (int) num2 * -1473110129 ^ 173835469;
            continue;
          case 2:
            num1 = (int) num2 * -276231539 ^ 845371245;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override bool Equals(object obj)
    {
      bool flag1 = obj == null;
label_1:
      int num1 = 448454940;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1769715911)) % 6U)
        {
          case 0:
            num1 = (int) num2 * -1539163362 ^ 1339901758;
            continue;
          case 1:
            int num3 = !flag1 ? -1638147916 : (num3 = -837566866);
            num1 = num3 ^ (int) num2 * 1623485821;
            continue;
          case 2:
            flag2 = (object) this == obj;
            num1 = 1989778879;
            continue;
          case 4:
            flag2 = true;
            num1 = (int) num2 * -737091576 ^ -531085026;
            continue;
          case 5:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_7:
      return flag2;
    }

    public override int GetHashCode() => base.GetHashCode();

    public override string ToString()
    {
label_1:
      int num1 = 666577533;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 544104056)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            str = "";
            num1 = (int) num2 * 1301957481 ^ 824985323;
            continue;
          case 2:
            num1 = (int) num2 * -1801923322 ^ 1990178179;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix)
    {
      string str = "";
label_1:
      int num1 = -1325295083;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2003029203)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -943752532 ^ 2022835024;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public override int AsInt
    {
      get
      {
label_1:
        int num1 = -1599952950;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1054293474)) % 5U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -771477444 ^ -807249783;
              continue;
            case 3:
              this.Set((JSONNode) new JSONData(0));
              num1 = (int) num2 * -1266035937 ^ -1102857793;
              continue;
            case 4:
              asInt = 0;
              num1 = (int) num2 * 1809143986 ^ -1745376162;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return asInt;
      }
      set => this.Set((JSONNode) new JSONData(value));
    }

    public override float AsFloat
    {
      get
      {
        JSONData aVal = new JSONData(0.0f);
label_1:
        int num1 = 559307356;
        float asFloat;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1994810181)) % 4U)
          {
            case 0:
              num1 = (int) num2 * -1858923360 ^ 2133661794;
              continue;
            case 1:
              this.Set((JSONNode) aVal);
              asFloat = 0.0f;
              num1 = (int) num2 * -1917777872 ^ 1312822129;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 2068691262;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1367870968)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -566350301 ^ -750355381;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override double AsDouble
    {
      get
      {
        JSONData aVal = new JSONData(0.0);
label_1:
        int num1 = 44907301;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1180242316)) % 5U)
          {
            case 1:
              num1 = (int) num2 * -1777742344 ^ -1567739114;
              continue;
            case 2:
              asDouble = 0.0;
              num1 = (int) num2 * 1154246769 ^ -1684589857;
              continue;
            case 3:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 549023889 ^ -831947785;
              continue;
            case 4:
              goto label_1;
            default:
              goto label_6;
          }
        }
label_6:
        return asDouble;
      }
      set
      {
label_1:
        int num1 = -382929903;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -822027524)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) new JSONData(value));
              num1 = (int) num2 * -138654888 ^ -1158593217;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override bool AsBool
    {
      get
      {
label_1:
        int num1 = 743791627;
        JSONData aVal;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 300614733)) % 6U)
          {
            case 0:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1871297610 ^ -2117590653;
              continue;
            case 2:
              asBool = false;
              num1 = (int) num2 * -854127564 ^ 1899392270;
              continue;
            case 3:
              goto label_1;
            case 4:
              aVal = new JSONData(false);
              num1 = (int) num2 * 1443855731 ^ 2132577571;
              continue;
            case 5:
              num1 = (int) num2 * 71315990 ^ 347823972;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
        JSONData aVal = new JSONData(value);
label_1:
        int num1 = -1678319879;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -97167028)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1886563859 ^ 926258525;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public override JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = -1246590693;
        JSONArray aVal;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -878929702)) % 6U)
          {
            case 0:
              num1 = (int) num2 * 304347637 ^ -2002111197;
              continue;
            case 1:
              aVal = new JSONArray();
              num1 = (int) num2 * -1602376603 ^ -1622528229;
              continue;
            case 2:
              goto label_1;
            case 3:
              asArray = aVal;
              num1 = (int) num2 * -128161285 ^ 89795637;
              continue;
            case 4:
              this.Set((JSONNode) aVal);
              num1 = (int) num2 * 1900747900 ^ -191693253;
              continue;
            default:
              goto label_7;
          }
        }
label_7:
        return asArray;
      }
    }

    public override JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 2110972985;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 899428171)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              JSONClass aVal = new JSONClass();
              this.Set((JSONNode) aVal);
              asObject = aVal;
              num1 = (int) num2 * -123244493 ^ 1292146226;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return asObject;
      }
    }
  }
}
