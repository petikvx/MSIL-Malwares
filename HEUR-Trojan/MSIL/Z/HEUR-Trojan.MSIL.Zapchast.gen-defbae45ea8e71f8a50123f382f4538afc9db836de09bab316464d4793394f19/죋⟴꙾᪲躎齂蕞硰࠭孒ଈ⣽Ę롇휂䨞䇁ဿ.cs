// Decompiled with JetBrains decompiler
// Type: 죋⟴꙾᪲躎齂蕞硰࠭孒ଈ⣽Ę롇휂䨞䇁ဿ
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Zapchast.gen-defbae45ea8e71f8a50123f382f4538afc9db836de09bab316464d4793394f19.exe

using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

public class 죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ : MouseEventArgs
{
  internal 죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ(
    MouseButtons buttons,
    int clicks,
    ㄅ덜ꍗᐒ㥔\uF846卽Ꞷ㕋\uECA8\u24A6詷债뺰齉ቚ略䨳懲帽 point,
    int delta,
    int timestamp,
    bool isMouseKeyDown,
    bool isMouseKeyUp)
    : base(buttons, clicks, point.Ԅ솅\uE2FE숏澷\uF210伄痣ᢲ\u238Aㇺ뎺慦Ⴛ\u2E07縔ﳟㆁὦꚿ, point.\uAA5D呬븅ᴜ릥\uECBD\uF567雱鈅얗蛃藳\u0B52辵닯अㄽפֿㅚ얒, delta)
  {
    this.IsMouseKeyDown = isMouseKeyDown;
    this.IsMouseKeyUp = isMouseKeyUp;
    this.Timestamp = timestamp;
  }

  public bool Handled { get; set; }

  public bool WheelScrolled => this.Delta != 0;

  public bool Clicked => this.Clicks > 0;

  public bool IsMouseKeyDown { get; private set; }

  public bool IsMouseKeyUp { get; private set; }

  public int Timestamp { get; private set; }

  internal ㄅ덜ꍗᐒ㥔\uF846卽Ꞷ㕋\uECA8\u24A6詷债뺰齉ቚ略䨳懲帽 Point => new ㄅ덜ꍗᐒ㥔\uF846卽Ꞷ㕋\uECA8\u24A6詷债뺰齉ቚ略䨳懲帽(this.X, this.Y);

  internal static 죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ ꕡ\uFFFD筬\uEC15佇\u28CE頴\uE650剗\uFFFD璃榧맫亏榿\uE6B0쮈㸳鰈螇(
    \uF194稟訛螕諿\u0DF9캹玎軨䎜ᷙ谢䶏磳輼Ὢ鉷컐쇻䩸 data)
  {
    return 죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ.묀䛒\uFFFD\uEA0A乖巓眿\u0F6E㔝麝ꭙ呵뭠蚭ᙚʯ뇃뢤ᄹ溷(data.WParam, ((癉뎗낱ᾬ楢ﾯ턻辫塤\uE5DE塠鑶泥䚷ޓꈺ㦔㣜\uF10C\u33B2) Marshal.PtrToStructure(data.LParam, typeof (癉뎗낱ᾬ楢ﾯ턻辫塤\uE5DE塠鑶泥䚷ޓꈺ㦔㣜\uF10C\u33B2))).몏妪ᖷ\uF634祢䉿鮌\uE948\uF8DA蕇怳\u25EF总屣ᄨ\uE743鱡剢勰\u0AD5());
  }

  internal static 죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ 껰\uF746\u2908ꉰ쬸ꦼ\uFFFD拋䋴䠛敩\u0FE3\uFFFD韻Ꭹ\uE199㒡侘旐ࠨ(
    \uF194稟訛螕諿\u0DF9캹玎軨䎜ᷙ谢䶏磳輼Ὢ鉷컐쇻䩸 data)
  {
    return 죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ.묀䛒\uFFFD\uEA0A乖巓眿\u0F6E㔝麝ꭙ呵뭠蚭ᙚʯ뇃뢤ᄹ溷(data.WParam, (鍦櫉ⴺ\u0D0D챲͏謏芉ﲉ诖ဈ첓큱\u2EA4뷢쒘䥺ꋨⶣ쿢) Marshal.PtrToStructure(data.LParam, typeof (鍦櫉ⴺ\u0D0D챲͏謏芉ﲉ诖ဈ첓큱\u2EA4뷢쒘䥺ꋨⶣ쿢)));
  }

  private static 죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ 묀䛒\uFFFD\uEA0A乖巓眿\u0F6E㔝麝ꭙ呵뭠蚭ᙚʯ뇃뢤ᄹ溷(
    IntPtr wParam,
    鍦櫉ⴺ\u0D0D챲͏謏芉ﲉ诖ဈ첓큱\u2EA4뷢쒘䥺ꋨⶣ쿢 mouseInfo)
  {
    MouseButtons buttons = MouseButtons.None;
    short delta = 0;
    int clicks = 0;
    bool isMouseKeyDown = false;
    bool isMouseKeyUp = false;
    long num = (long) wParam - 513L;
    if ((ulong) num <= 13UL)
    {
      switch ((uint) num)
      {
        case 0:
          isMouseKeyDown = true;
          buttons = MouseButtons.Left;
          clicks = 1;
          break;
        case 1:
          isMouseKeyUp = true;
          buttons = MouseButtons.Left;
          clicks = 1;
          break;
        case 2:
          isMouseKeyDown = true;
          buttons = MouseButtons.Left;
          clicks = 2;
          break;
        case 3:
          isMouseKeyDown = true;
          buttons = MouseButtons.Right;
          clicks = 1;
          break;
        case 4:
          isMouseKeyUp = true;
          buttons = MouseButtons.Right;
          clicks = 1;
          break;
        case 5:
          isMouseKeyDown = true;
          buttons = MouseButtons.Right;
          clicks = 2;
          break;
        case 6:
          isMouseKeyDown = true;
          buttons = MouseButtons.Middle;
          clicks = 1;
          break;
        case 7:
          isMouseKeyUp = true;
          buttons = MouseButtons.Middle;
          clicks = 1;
          break;
        case 8:
          isMouseKeyDown = true;
          buttons = MouseButtons.Middle;
          clicks = 2;
          break;
        case 9:
          delta = mouseInfo.鄒椛ᐚﲟ뺍긙醟䖇誆Ű檐݆茩洼\u0A11聾폎圓趱\uEEA5;
          break;
        case 10:
          buttons = mouseInfo.鄒椛ᐚﲟ뺍긙醟䖇誆Ű檐݆茩洼\u0A11聾폎圓趱\uEEA5 == (short) 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;
          isMouseKeyDown = true;
          clicks = 1;
          break;
        case 11:
          buttons = mouseInfo.鄒椛ᐚﲟ뺍긙醟䖇誆Ű檐݆茩洼\u0A11聾폎圓趱\uEEA5 == (short) 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;
          isMouseKeyUp = true;
          clicks = 1;
          break;
        case 12:
          isMouseKeyDown = true;
          buttons = mouseInfo.鄒椛ᐚﲟ뺍긙醟䖇誆Ű檐݆茩洼\u0A11聾폎圓趱\uEEA5 == (short) 1 ? MouseButtons.XButton1 : MouseButtons.XButton2;
          clicks = 2;
          break;
        case 13:
          delta = mouseInfo.鄒椛ᐚﲟ뺍긙醟䖇誆Ű檐݆茩洼\u0A11聾폎圓趱\uEEA5;
          break;
      }
    }
    return new 죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ(buttons, clicks, mouseInfo.瞏輠嚩Ⴝ\uFFFD졦뮌ᾎ㖕粹엻\uEB38譱ͼ\uE2A5\u2025䎏铱嫣蟁, (int) delta, mouseInfo.泙䨨Ж툟鴫ꃬ琴\uE7A8\uE4E0摮퉬塇\uF876㩈ⱳ쐺ꏭ珂\uE0C8\u2F57, isMouseKeyDown, isMouseKeyUp);
  }

  internal 죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ \uE7DA憮蔖泿\uE943\u279D婢ᐔ㤬碒릓㐐\u26C8롳辩\u2E30泍\u2A27䵧᥊() => new 죋\u27F4\uA67E\uE7DF᪲躎齂蕞硰࠭孒ଈ\u28FDĘ롇휂\uE63F䨞䇁ဿ(this.Button, 2, this.Point, this.Delta, this.Timestamp, this.IsMouseKeyDown, this.IsMouseKeyUp);
}
