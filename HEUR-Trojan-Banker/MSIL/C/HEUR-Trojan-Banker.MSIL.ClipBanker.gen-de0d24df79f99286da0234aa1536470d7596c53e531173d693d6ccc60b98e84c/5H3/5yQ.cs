// Decompiled with JetBrains decompiler
// Type: 5H3.5yQ
// Assembly: uc5uTlQKZwvBJeUwoIoxWYL1o3uBI8gaMfnT9AO, Version=9.8.6.0, Culture=neutral, PublicKeyToken=null
// MVID: 66B519F9-803D-46C9-8343-EC24850CA08A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan-Banker.MSIL.ClipBanker.gen-de0d24df79f99286da0234aa1536470d7596c53e531173d693d6ccc60b98e84c.exe

using \u0033wQ;
using \u0034ke;
using \u0035H3;
using System;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace \u0035H3
{
  internal sealed class \u0035yQ : Stream
  {
    private \u0035yQ.RwMode Y7z;
    private bool D6T;
    private string l62;
    private string \u0038f7;
    private string \u003323;
    private string \u003137;
    private uint l1F;
    private uint \u003683;
    private long u8X;
    private Stream \u00331Y;
    private bool \u00379h;

    private \u0035yQ() => this.D6T = false;

    public static \u0035yQ k8c([In] string obj0, [In] uint obj1, [In] uint obj2)
    {
      \u0035yQ obj = new \u0035yQ();
      obj.Y7z = \u0035yQ.RwMode.ReadOnly;
      obj.\u0037LH(obj1);
      obj.\u003683 = obj2;
      obj.l62 = obj0;
      obj.\u003241();
      return obj;
    }

    public static \u0035yQ p56([In] string obj0, [In] long obj1)
    {
      \u0035yQ obj2 = new \u0035yQ();
      obj2.Y7z = \u0035yQ.RwMode.Write;
      obj2.\u0037LH(0U);
      obj2.l62 = obj0;
      obj2.u8X = obj1;
      obj2.\u0038f7 = Path.GetDirectoryName(obj0);
      \u0035yQ obj3 = obj2;
      if (obj3.\u0038f7 == "")
        obj3.\u0038f7 = ".";
      obj3.\u0036FB(0U);
      return obj3;
    }

    public static Stream Zz6([In] string obj0, [In] uint obj1) => (Stream) File.Open(string.Format("{0}.z{1:D2}", (object) Path.Combine(Path.GetDirectoryName(obj0), Path.GetFileNameWithoutExtension(obj0)), (object) (uint) ((int) obj1 + 1)), FileMode.Open, FileAccess.ReadWrite, FileShare.None);

    [SpecialName]
    public bool B36() => this.\u00379h;

    [SpecialName]
    public void u61([In] bool obj0) => this.\u00379h = obj0;

    [SpecialName]
    public uint \u0031pq() => this.l1F;

    [SpecialName]
    private void \u0037LH([In] uint obj0)
    {
      this.l1F = obj0;
      this.\u003323 = (string) null;
    }

    [SpecialName]
    public string \u003545()
    {
      if (this.\u003323 == null)
        this.\u003323 = this.\u0032oj(this.\u0031pq());
      return this.\u003323;
    }

    [SpecialName]
    public string \u0037vl() => this.\u003137;

    private string \u0032oj([In] uint obj0) => string.Format("{0}.z{1:D2}", (object) Path.Combine(Path.GetDirectoryName(this.l62), Path.GetFileNameWithoutExtension(this.l62)), (object) (uint) ((int) obj0 + 1));

    public uint \u003763([In] int obj0) => this.\u00331Y.Position + (long) obj0 > this.u8X ? this.\u0031pq() + 1U : this.\u0031pq();

    string object.J78() => string.Format("{0}[{1}][{2}], pos=0x{3:X})", (object) "ZipSegmentedStream", (object) this.\u003545(), (object) this.Y7z.ToString(), (object) ((Stream) this).Position);

    private void \u003241()
    {
      if (this.\u00331Y != null)
        this.\u00331Y.Dispose();
      if ((int) this.\u0031pq() + 1 == (int) this.\u003683)
        this.\u003323 = this.l62;
      this.\u00331Y = (Stream) File.OpenRead(this.\u003545());
    }

    int Stream.\u003633([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      if (this.Y7z != \u0035yQ.RwMode.ReadOnly)
      {
        this.D6T = true;
        throw new InvalidOperationException("Stream Error: Cannot Read.");
      }
      int num1 = this.\u00331Y.Read(obj0, obj1, obj2);
      int num2 = num1;
      while (num2 != obj2)
      {
        if (this.\u00331Y.Position != this.\u00331Y.Length)
        {
          this.D6T = true;
          throw new xZi(string.Format("Read error in file {0}", (object) this.\u003545()));
        }
        if ((int) this.\u0031pq() + 1 == (int) this.\u003683)
          return num1;
        this.\u0037LH(this.\u0031pq() + 1U);
        this.\u003241();
        obj1 += num2;
        obj2 -= num2;
        num2 = this.\u00331Y.Read(obj0, obj1, obj2);
        num1 += num2;
      }
      return num1;
    }

    private void \u0036FB([In] uint obj0)
    {
      if (this.\u00331Y != null)
      {
        this.\u00331Y.Dispose();
        if (File.Exists(this.\u003545()))
          File.Delete(this.\u003545());
        File.Move(this.\u003137, this.\u003545());
      }
      if (obj0 > 0U)
        this.\u0037LH(this.\u0031pq() + obj0);
      To4.\u003234(this.\u0038f7, out this.\u00331Y, out this.\u003137);
      if (this.\u0031pq() != 0U)
        return;
      this.\u00331Y.Write(BitConverter.GetBytes(134695760), 0, 4);
    }

    void Stream.qy9([In] byte[] obj0, [In] int obj1, [In] int obj2)
    {
      if (this.Y7z != \u0035yQ.RwMode.Write)
      {
        this.D6T = true;
        throw new InvalidOperationException("Stream Error: Cannot Write.");
      }
      if (this.B36())
      {
        if (this.\u00331Y.Position + (long) obj2 > this.u8X)
          this.\u0036FB(1U);
      }
      else
      {
        while (this.\u00331Y.Position + (long) obj2 > this.u8X)
        {
          long num = this.u8X - this.\u00331Y.Position;
          int count = num <= (long) obj0.Length ? (int) num : obj0.Length;
          this.\u00331Y.Write(obj0, obj1, count);
          this.\u0036FB(1U);
          obj2 -= count;
          obj1 += count;
        }
      }
      this.\u00331Y.Write(obj0, obj1, obj2);
    }

    public long \u00396u([In] uint obj0, [In] long obj1)
    {
      if (this.Y7z != \u0035yQ.RwMode.Write)
      {
        this.D6T = true;
        throw new xZi("bad state.");
      }
      if ((int) obj0 == (int) this.\u0031pq())
        return this.\u00331Y.Seek(obj1, SeekOrigin.Begin);
      if (this.\u00331Y != null)
      {
        this.\u00331Y.Dispose();
        if (File.Exists(this.\u003137))
          File.Delete(this.\u003137);
      }
      for (uint index = this.\u0031pq() - 1U; index > obj0; --index)
      {
        string path = this.\u0032oj(index);
        if (File.Exists(path))
          File.Delete(path);
      }
      this.\u0037LH(obj0);
      for (int index = 0; index < 3; ++index)
      {
        try
        {
          this.\u003137 = Path.Combine(Path.GetDirectoryName(this.\u003545()), To4.PE5());
          File.Move(this.\u003545(), this.\u003137);
          break;
        }
        catch (IOException ex)
        {
          if (index == 2)
            throw;
        }
      }
      this.\u00331Y = (Stream) new FileStream(this.\u003137, FileMode.Open);
      return this.\u00331Y.Seek(obj1, SeekOrigin.Begin);
    }

    [SpecialName]
    bool Stream.\u0032CN() => this.Y7z == \u0035yQ.RwMode.ReadOnly && this.\u00331Y != null && this.\u00331Y.CanRead;

    [SpecialName]
    bool Stream.rkm() => this.\u00331Y != null && this.\u00331Y.CanSeek;

    [SpecialName]
    bool Stream.Rc6() => this.Y7z == \u0035yQ.RwMode.Write && this.\u00331Y != null && this.\u00331Y.CanWrite;

    void Stream.\u003573() => this.\u00331Y.Flush();

    [SpecialName]
    long Stream.\u0031m5() => this.\u00331Y.Length;

    [SpecialName]
    long Stream.SVM() => this.\u00331Y.Position;

    [SpecialName]
    void Stream.\u0033HS([In] long obj0) => this.\u00331Y.Position = obj0;

    long Stream.\u0036K4([In] long obj0, [In] SeekOrigin obj1) => this.\u00331Y.Seek(obj0, obj1);

    void Stream.\u0038F3([In] long obj0)
    {
      if (this.Y7z != \u0035yQ.RwMode.Write)
      {
        this.D6T = true;
        throw new InvalidOperationException();
      }
      this.\u00331Y.SetLength(obj0);
    }

    void Stream.qSA([In] bool obj0)
    {
      try
      {
        if (this.\u00331Y == null)
          return;
        this.\u00331Y.Dispose();
        if (this.Y7z != \u0035yQ.RwMode.Write)
          return;
        int num = this.D6T ? 1 : 0;
      }
      finally
      {
        // ISSUE: explicit non-virtual call
        __nonvirtual (((Stream) this).Dispose(obj0));
      }
    }

    private enum RwMode
    {
      None,
      ReadOnly,
      Write,
    }
  }
}
