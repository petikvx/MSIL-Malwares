// Decompiled with JetBrains decompiler
// Type: 청瓧곴㩵栯僃䔵텑鏪䏫⺘슔头撤孖䵰傎ȍϯ띂
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Zapchast.gen-defbae45ea8e71f8a50123f382f4538afc9db836de09bab316464d4793394f19.exe

using System;
using System.Management;
using System.Text.RegularExpressions;

public static class 청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂
{
  static 청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂()
  {
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Win32NT = Environment.OSVersion.Platform == PlatformID.Win32NT;
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.XpOrHigher = 청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Win32NT && Environment.OSVersion.Version.Major >= 5;
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.VistaOrHigher = 청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Win32NT && Environment.OSVersion.Version.Major >= 6;
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.SevenOrHigher = 청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Win32NT && Environment.OSVersion.Version >= new Version(6, 1);
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.EightOrHigher = 청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Win32NT && Environment.OSVersion.Version >= new Version(6, 2, 9200);
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.EightPointOneOrHigher = 청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Win32NT && Environment.OSVersion.Version >= new Version(6, 3);
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.TenOrHigher = 청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Win32NT && Environment.OSVersion.Version >= new Version(10, 0);
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.RunningOnMono = Type.GetType("Mono.Runtime") != (Type) null;
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Name = "Unknown OS";
    using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT Caption FROM Win32_OperatingSystem"))
    {
      using (ManagementObjectCollection.ManagementObjectEnumerator enumerator = managementObjectSearcher.Get().GetEnumerator())
      {
        if (enumerator.MoveNext())
          청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Name = enumerator.Current["Caption"].ToString();
      }
    }
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Name = Regex.Replace(청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Name, "^.*(?=Windows)", "").TrimEnd().TrimStart();
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Is64Bit = Environment.Is64BitOperatingSystem;
    청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.FullName = string.Format("{0} {1} Bit", (object) 청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Name, (object) (청瓧곴㩵栯僃䔵텑鏪䏫\u2E98슔头撤孖䵰傎ȍϯ띂.Is64Bit ? 64 : 32));
  }

  public static string FullName { get; private set; }

  public static string Name { get; private set; }

  public static bool Is64Bit { get; private set; }

  public static bool RunningOnMono { get; private set; }

  public static bool Win32NT { get; private set; }

  public static bool XpOrHigher { get; private set; }

  public static bool VistaOrHigher { get; private set; }

  public static bool SevenOrHigher { get; private set; }

  public static bool EightOrHigher { get; private set; }

  public static bool EightPointOneOrHigher { get; private set; }

  public static bool TenOrHigher { get; private set; }
}
