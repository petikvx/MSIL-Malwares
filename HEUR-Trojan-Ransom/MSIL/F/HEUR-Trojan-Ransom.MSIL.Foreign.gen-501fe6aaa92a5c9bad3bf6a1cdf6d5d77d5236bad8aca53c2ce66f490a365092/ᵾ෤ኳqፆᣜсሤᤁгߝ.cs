// Decompiled with JetBrains decompiler
// Type: ᏬĴவߙւ̞ᙘ.ᵾ෤ኳqፆᣜсሤᤁгߝ
// Assembly: java_update, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 557F7238-B13A-4798-94BE-2CA1CC027032
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-501fe6aaa92a5c9bad3bf6a1cdf6d5d77d5236bad8aca53c2ce66f490a365092.exe

using System;
using System.Runtime.InteropServices;

namespace ᏬĴவߙւ̞ᙘ
{
  internal class ᵾ\u0DE4ኳqፆᣜсሤᤁгߝ
  {
    public static string βᗣnݗႍᆀ᩸\u0C29\u0B80ત\u0EA9Ҟ\u0D81ጧ()
    {
      OperatingSystem osVersion = Environment.OSVersion;
      string str = "";
      if (osVersion.Platform.ToString() == "Win32NT")
      {
        switch (ᵾ\u0DE4ኳqፆᣜсሤᤁгߝ.\u17CDἡ\u0ACEᘇܼ͗Լ᳴\u19F7ەᢘᶎ\u0015\u1F17ڳΰा\u0892(osVersion.Version))
        {
          case "4.1.2222":
            str = "Windows 98";
            break;
          case "4.1.2600":
            str = "Windows 98SE";
            break;
          case "4.9.3000":
            str = "Windows ME";
            break;
          case "5.0.2195":
            str = "Windows 2000";
            break;
          case "5.1.2600":
          case "5.2.3790":
            str = "Windows XP";
            break;
          case "6.0.6000":
          case "6.0.6001":
          case "6.0.6002":
          case "6.0.6003":
            str = "Windows Vista";
            break;
          case "6.1.7600":
          case "6.1.7601":
          case "6.1.7602":
          case "6.1.7603":
            str = "Windows 7";
            break;
          default:
            str = "Unknown";
            break;
        }
      }
      string empty = string.Empty;
      ᵾ\u0DE4ኳqፆᣜсሤᤁгߝ.ᑕ\u1CFCᄺע\u16FC\u02F3ᅷေ᪖ᅖኲާऻ ɗ᪁ᡫʖᩨݺਣߠƣᖄ = new ᵾ\u0DE4ኳqፆᣜсሤᤁгߝ.ᑕ\u1CFCᄺע\u16FC\u02F3ᅷေ᪖ᅖኲާऻ();
      ɗ᪁ᡫʖᩨݺਣߠƣᖄ.\u0861ጉȋᢡ॑ཇᶋ = Marshal.SizeOf(typeof (ᵾ\u0DE4ኳqፆᣜсሤᤁгߝ.ᑕ\u1CFCᄺע\u16FC\u02F3ᅷေ᪖ᅖኲާऻ));
      if (ᵾ\u0DE4ኳqፆᣜсሤᤁгߝ.ᤅԗѷᕾŮᗬ(ref ɗ᪁ᡫʖᩨݺਣߠƣᖄ))
      {
        if (ɗ᪁ᡫʖᩨݺਣߠƣᖄ.\u1935Ꮾશᢎᇂࠠᝲᒀମඉ.ToString().Contains("Service Pack 1"))
          str += " SP1";
        if (ɗ᪁ᡫʖᩨݺਣߠƣᖄ.\u1935Ꮾશᢎᇂࠠᝲᒀମඉ.ToString().Contains("Service Pack 2"))
          str += " SP2";
        if (ɗ᪁ᡫʖᩨݺਣߠƣᖄ.\u1935Ꮾશᢎᇂࠠᝲᒀମඉ.ToString().Contains("Service Pack 3"))
          str += " SP3";
        if (ɗ᪁ᡫʖᩨݺਣߠƣᖄ.\u1935Ꮾશᢎᇂࠠᝲᒀମඉ.ToString().Contains("Service Pack 4"))
          str += " SP4";
        if (ɗ᪁ᡫʖᩨݺਣߠƣᖄ.\u1935Ꮾશᢎᇂࠠᝲᒀମඉ.ToString().Contains("Service Pack 5"))
          str += " SP5";
        if (ɗ᪁ᡫʖᩨݺਣߠƣᖄ.\u1935Ꮾશᢎᇂࠠᝲᒀମඉ.ToString().Contains("Service Pack 6"))
          str += " SP6";
        if (ɗ᪁ᡫʖᩨݺਣߠƣᖄ.\u1935Ꮾશᢎᇂࠠᝲᒀମඉ.ToString().Contains("Service Pack 7"))
          str += " SP7";
        if (ɗ᪁ᡫʖᩨݺਣߠƣᖄ.\u1935Ꮾશᢎᇂࠠᝲᒀମඉ.ToString().Contains("Service Pack 8"))
          str += " SP8";
        if (ɗ᪁ᡫʖᩨݺਣߠƣᖄ.\u1935Ꮾશᢎᇂࠠᝲᒀମඉ.ToString().Contains("Service Pack 9"))
          str += " SP9";
        str = !ᵾ\u0DE4ኳqፆᣜсሤᤁгߝ.ɵẢ\u1C8BྦຍᡳẛΘݰᜃഏᎀᤖ\u09D6ᶩဇ\u09F8\u0AA9() ? str + " - x86" : str + " - x64";
      }
      return str;
    }

    private static string \u17CDἡ\u0ACEᘇܼ͗Լ᳴\u19F7ەᢘᶎ\u0015\u1F17ڳΰा\u0892(Version _param0) => _param0.Major.ToString() + "." + _param0.Minor.ToString() + "." + _param0.Build.ToString();

    [DllImport("kernel32.dll", EntryPoint = "GetVersionEx")]
    private static extern bool ᤅԗѷᕾŮᗬ(
      ref ᵾ\u0DE4ኳqፆᣜсሤᤁгߝ.ᑕ\u1CFCᄺע\u16FC\u02F3ᅷေ᪖ᅖኲާऻ ɗ᪁ᡫʖᩨݺਣߠƣᖄ);

    public static bool ɵẢ\u1C8BྦຍᡳẛΘݰᜃഏᎀᤖ\u09D6ᶩဇ\u09F8\u0AA9()
    {
      try
      {
        return !string.IsNullOrEmpty(Environment.GetEnvironmentVariable("ProgramW6432"));
      }
      catch
      {
        return false;
      }
    }

    public struct ᑕ\u1CFCᄺע\u16FC\u02F3ᅷေ᪖ᅖኲާऻ
    {
      public int \u0861ጉȋᢡ॑ཇᶋ;
      public int ăǖ\u1AC5ᴉϳ᭫ཛภỆ᠙\u0FE2\u1DF6\u0BC5ᶙၺ;
      public int \u058Eಲ᱕ࡂЅᆂᏽཛϔཅႵᘍᮝᚥ\u00A6\u1AA2;
      public int ᵼ\u1BF8ཤੜᤲḿᕌÕ\u0C76ᇏ᧘ᜅઅា;
      public int ʎ\u088Bጓᯟሲᕈሓເഘ;
      [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 128)]
      public string \u1935Ꮾશᢎᇂࠠᝲᒀମඉ;
      public short Ė\u0E63\u0B9B\u0DB2\u0708;
      public short ᛏỲᥥពᢎᛎڬ\u137F;
      public short ΒЇ\u086F\u1CBF୨സɋḲἽੑખކ\u19F3ম;
      public byte ʅẖਭ\u0868ŷᥨ;
      public byte อ\u0B29ෛ᪄\u0F0Dዳጔ\u00A6;
    }
  }
}
