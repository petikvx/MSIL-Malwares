// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: ByteTokenEncodi, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 9BCE2B70-1A4C-43FA-BCC8-8DBBEE1C54F3
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-0d4b7a493ffb322f46927f4d290740e9157c549cdb50db1ce746065332ed317c.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
label_1:
        int num1 = 82734653;
        bool flag;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1036745479)) % 6U)
          {
            case 1:
              int num3 = !flag ? 1860687445 : (num3 = 1912652382);
              num1 = num3 ^ (int) num2 * 1337064807;
              continue;
            case 2:
              flag = this.m_Dict.ContainsKey(aKey);
              num1 = (int) num2 * -939589586 ^ 1286090332;
              continue;
            case 3:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = 128679389;
              continue;
            case 4:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -571241378 ^ 2034331597;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return jsonNode;
      }
      set
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = 753514184;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1925443430)) % 7U)
          {
            case 0:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * 1714632907 ^ 384867495;
              continue;
            case 1:
              int num3 = !flag ? -605940117 : (num3 = -1155087245);
              num1 = num3 ^ (int) num2 * -11942041;
              continue;
            case 2:
              num1 = (int) num2 * -2121310111 ^ 1677817203;
              continue;
            case 3:
              goto label_1;
            case 4:
              this.m_Dict.Add(aKey, value);
              num1 = 1527501929;
              continue;
            case 5:
              goto label_3;
            case 6:
              num1 = (int) num2 * -1189096666 ^ 1570080821;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1866642162;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 745785257)) % 9U)
          {
            case 0:
              num1 = (int) num2 * -1756274638 ^ 1764038925;
              continue;
            case 1:
              int num4 = !flag ? -503631798 : (num4 = -94990742);
              num1 = num4 ^ (int) num2 * 1588609723;
              continue;
            case 2:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 4:
              goto label_1;
            case 5:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * 1661019191 ^ -1993836832;
              continue;
            case 6:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * -2247579 ^ 118135082;
              continue;
            case 7:
              num1 = (int) num2 * 920581407 ^ -1485599873;
              continue;
            case 8:
              jsonNode = (JSONNode) null;
              num1 = 797132617;
              continue;
            default:
              goto label_13;
          }
          flag = num3 != 0;
          num1 = 322205304;
        }
label_13:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = -10425613;
label_2:
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -393715488)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              goto label_4;
            case 3:
              num1 = (int) num2 * 2088945965 ^ -2034908243;
              continue;
            case 4:
              int num3 = flag ? -1884688721 : (num3 = -387254078);
              num1 = num3 ^ (int) num2 * 1639038951;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:
        return;
label_4:
        int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
        goto label_6;
label_5:
        num4 = 1;
label_6:
        flag = num4 != 0;
        num1 = -1208920479;
        goto label_2;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 1293692932;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1177437725)) % 4U)
          {
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * -1528553696 ^ -1094511805;
              continue;
            case 2:
              num1 = (int) num2 * 1100398766 ^ 688281409;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 223745992;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 39299101)) % 11U)
        {
          case 0:
            this.m_Dict.Add(aKey, aItem);
            num1 = 1988233910;
            continue;
          case 1:
            flag = !JSONClass.\u200E⁬​⁬‍⁫⁫‌‫⁭‭‌‎‌‎‫‮⁯​‏‏‪‪‌⁬⁬‍⁪‍‭‍⁯⁫⁮‪⁯‌⁯‏‮‮(aKey);
            num1 = (int) num2 * -1147911128 ^ 766498285;
            continue;
          case 2:
            goto label_3;
          case 3:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 2016393951;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * 896591484 ^ -2119576814;
            continue;
          case 6:
            int num3 = flag ? -2007154167 : (num3 = -2080776419);
            num1 = num3 ^ (int) num2 * 1087527519;
            continue;
          case 7:
            num1 = (int) num2 * -1166073007 ^ -640739307;
            continue;
          case 8:
            num1 = 2016393951;
            continue;
          case 9:
            int num4 = !this.m_Dict.ContainsKey(aKey) ? 171841480 : (num4 = 1569200456);
            num1 = num4 ^ (int) num2 * 278224776;
            continue;
          case 10:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * -1018623416 ^ -2028223486;
            continue;
          default:
            goto label_13;
        }
      }
label_3:
      return;
label_13:;
    }

    public override JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 649497010;
      JSONNode jsonNode1;
      JSONNode jsonNode2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1497408401)) % 8U)
        {
          case 0:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1875464636 ^ -247493771;
            continue;
          case 2:
            goto label_1;
          case 3:
            int num3 = this.m_Dict.ContainsKey(aKey) ? -694732719 : (num3 = -891871186);
            num1 = num3 ^ (int) num2 * -387350091;
            continue;
          case 4:
            num1 = (int) num2 * 757701494 ^ -253906344;
            continue;
          case 5:
            this.m_Dict.Remove(aKey);
            num1 = (int) num2 * -477369453 ^ -785518824;
            continue;
          case 6:
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -2015138859 ^ 1234590566;
            continue;
          case 7:
            jsonNode2 = this.m_Dict[aKey];
            num1 = 1105050028;
            continue;
          default:
            goto label_9;
        }
      }
label_9:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -1399299110;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ -1178423423)) % 8U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = -1330822741;
            continue;
          case 2:
            num1 = (int) num2 * -1692334558 ^ -794879447;
            continue;
          case 3:
            if (aIndex < 0)
            {
              num3 = 1;
              break;
            }
            num1 = (int) num2 * 924881030 ^ -25944740;
            continue;
          case 5:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * -297673158 ^ 970500671;
            continue;
          case 6:
            int num4 = flag ? 733966156 : (num4 = 1723547760);
            num1 = num4 ^ (int) num2 * -1718286972;
            continue;
          case 7:
            num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
            break;
          default:
            goto label_12;
        }
        flag = num3 != 0;
        num1 = -521483441;
      }
label_12:
      return jsonNode;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
        jsonNode = (JSONNode) null;
      }
      catch
      {
label_3:
        int num1 = 1481061975;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1002811914)) % 4U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 1330961732 ^ 1312340504;
              continue;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -1509250060 ^ -983537791;
              continue;
            default:
              goto label_7;
          }
        }
      }
label_7:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs => (IEnumerable<JSONNode>) new JSONClass.\u003Cget_Childs\u003Ed__14(-2)
    {
      \u003C\u003E4__this = this
    };

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = 1372553719;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1443585088)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1471308701 ^ 612269121;
            continue;
          case 3:
            str1 = "{";
            num1 = (int) num2 * -1917907650 ^ 1239626063;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_11:
        int num3 = enumerator.MoveNext() ? 351623718 : (num3 = 1255945101);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1443585088)) % 8U)
          {
            case 0:
              int num5 = flag ? 1632155427 : (num5 = 269693385);
              num3 = num5 ^ (int) num4 * 1548763908;
              continue;
            case 1:
              str1 = JSONClass.\u200E‫‎‫⁯‎⁪‭⁮‪⁬⁬‮⁫‎‬⁭⁯⁭⁫‬⁪⁬‬‎⁭‏⁪⁪‌‬‫⁭‌‌⁮‏‎‍⁭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u202A‮‍⁪⁯⁫⁬⁭‏⁯⁭‮⁭⁫‮‮‏​⁯‮⁬‌‭​‪‬‎‍‭‏⁫‬‍‬‍‫⁯‌⁫‍‮((object) current.Value)
              });
              num3 = 1854314783;
              continue;
            case 2:
              num3 = 351623718;
              continue;
            case 3:
              str1 = JSONClass.\u202C‬‍‭‎‬​‭‬‎‭⁯‪⁮⁪‌‏‍⁮⁫⁪⁬⁭⁮‫⁫‮‪‌‏‌⁯‌⁫⁬‏⁭‬⁯⁫‮(str1, ", ");
              num3 = (int) num4 * -789951685 ^ 1606439576;
              continue;
            case 4:
              goto label_11;
            case 6:
              current = enumerator.Current;
              flag = JSONClass.\u200B‮⁮‍‬‮⁯‮‌‫‮‎‍⁯⁪‮⁭‪‭‏​⁪⁫⁫‍‎⁫‍‮‍⁭​⁬​​‪‏‫‬⁪‮(str1) > 2;
              num3 = 528219120;
              continue;
            case 7:
              num3 = (int) num4 * 755275507 ^ -1303536439;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u202C‬‍‭‎‬​‭‬‎‭⁯‪⁮⁪‌‏‍⁮⁫⁪⁬⁭⁮‫⁫‮‪‌‏‌⁯‌⁫⁬‏⁭‬⁯⁫‮(str1, "}");
label_17:
      int num6 = 22007031;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ 1443585088)) % 4U)
        {
          case 0:
            num6 = (int) num7 * -212975612 ^ 874863329;
            continue;
          case 2:
            goto label_17;
          case 3:
            str3 = str2;
            num6 = (int) num7 * 1541069557 ^ 1181380495;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
label_1:
      int num1 = 1794477509;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 636785579)) % 3U)
        {
          case 1:
            str1 = "{ ";
            num1 = (int) num2 * 388059432 ^ -1632544693;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_12:
        int num3 = !enumerator.MoveNext() ? 752997035 : (num3 = 546562469);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 636785579)) % 8U)
          {
            case 1:
              int num5 = !flag ? 390536831 : (num5 = 1737387436);
              num3 = num5 ^ (int) num4 * -1484806685;
              continue;
            case 2:
              flag = JSONClass.\u200B‮⁮‍‬‮⁯‮‌‫‮‎‍⁯⁪‮⁭‪‭‏​⁪⁫⁫‍‎⁫‍‮‍⁭​⁬​​‪‏‫‬⁪‮(str1) > 3;
              num3 = (int) num4 * -1168994565 ^ -363925956;
              continue;
            case 3:
              goto label_12;
            case 4:
              str1 = JSONClass.\u202C‬‍‭‎‬​‭‬‎‭⁯‪⁮⁪‌‏‍⁮⁫⁪⁬⁭⁮‫⁫‮‪‌‏‌⁯‌⁫⁬‏⁭‬⁯⁫‮(str1, ", ");
              num3 = (int) num4 * 1864429424 ^ -2010504148;
              continue;
            case 5:
              num3 = 546562469;
              continue;
            case 6:
              current = enumerator.Current;
              num3 = 2139797657;
              continue;
            case 7:
              str1 = JSONClass.\u206A⁯‎⁯⁯‬‌‬‎‍‏‮‪⁬⁪‌‍‪‬‏‍⁭‭‌‫⁭‍​⁪‭‪⁯⁪‫⁭‍‪⁮‌‮(str1, "\n", aPrefix, "   ");
              str1 = JSONClass.\u200E‫‎‫⁯‎⁪‭⁮‪⁬⁬‮⁫‎‬⁭⁯⁭⁫‬⁪⁬‬‎⁭‏⁪⁪‌‬‫⁭‌‌⁮‏‎‍⁭‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202C‬‍‭‎‬​‭‬‎‭⁯‪⁮⁪‌‏‍⁮⁫⁪⁬⁭⁮‫⁫‮‪‌‏‌⁯‌⁫⁬‏⁭‬⁯⁫‮(aPrefix, "   "))
              });
              num3 = 1623702288;
              continue;
            default:
              goto label_19;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_15:
        int num6 = 1762506121;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 636785579)) % 3U)
          {
            case 0:
              goto label_15;
            case 1:
              num6 = (int) num7 * 1504461157 ^ 801477803;
              continue;
            default:
              goto label_18;
          }
        }
label_18:;
      }
label_19:
      string str2 = JSONClass.\u206A⁯‎⁯⁯‬‌‬‎‍‏‮‪⁬⁪‌‍‪‬‏‍⁭‭‌‫⁭‍​⁪‭‪⁯⁪‫⁭‍‪⁮‌‮(str1, "\n", aPrefix, "}");
label_20:
      int num8 = 1478930796;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 636785579)) % 4U)
        {
          case 0:
            goto label_20;
          case 2:
            num8 = (int) num9 * 665999795 ^ -1649982700;
            continue;
          case 3:
            str3 = str2;
            num8 = (int) num9 * 1248872477 ^ 863764382;
            continue;
          default:
            goto label_24;
        }
      }
label_24:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
      JSONClass.\u206F‬⁬⁯⁫‌‎⁯‍‌‍‬‫⁯⁮​‏⁫⁭⁭⁪⁮‌⁯‍‪⁯⁮⁫‎⁯​​‏‪‮​‎‫‎‮(aWriter, (byte) 2);
label_1:
      int num1 = -529968050;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1398437049)) % 5U)
        {
          case 1:
            num1 = (int) num2 * 1921315471 ^ -1875573112;
            continue;
          case 2:
            num1 = (int) num2 * -2023022980 ^ -1996008720;
            continue;
          case 3:
            JSONClass.\u206C‏⁪‫⁬‍⁮⁮⁮‌‭‌‫⁯‭‭‎​‏⁯‍‮‬‬⁬‪‫⁫⁫⁪‏⁬‍‌⁫‭‎‪‮‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * 773868037 ^ 1438674078;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_16:
        int num3 = !enumerator.MoveNext() ? -1394289322 : (num3 = -1264092742);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1398437049)) % 9U)
          {
            case 0:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * 1243556437 ^ -673761050;
              continue;
            case 1:
              num3 = (int) num4 * 628760347 ^ -1357487715;
              continue;
            case 2:
              goto label_18;
            case 3:
              num3 = (int) num4 * 1879230817 ^ -565410562;
              continue;
            case 4:
              num3 = (int) num4 * -1038123897 ^ -433205663;
              continue;
            case 5:
              num3 = -1264092742;
              continue;
            case 6:
              goto label_16;
            case 7:
              JSONClass.\u202C⁪​‍‏‫‭‫‫⁯⁪​‫‏⁮‮‪⁭⁪‍⁫‎‮‭‫‭‬‎‏‍⁪‭‭⁬‮‌⁬‭⁫‌‮(aWriter, current);
              num3 = (int) num4 * -1430335464 ^ -111144253;
              continue;
            case 8:
              current = enumerator.Current;
              num3 = -1542199574;
              continue;
            default:
              goto label_10;
          }
        }
label_18:
        return;
label_10:;
      }
    }

    static bool \u200E⁬​⁬‍⁫⁫‌‫⁭‭‌‎‌‎‫‮⁯​‏‏‪‪‌⁬⁬‍⁪‍‭‍⁯⁫⁮‪⁯‌⁯‏‮‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200B‮⁮‍‬‮⁯‮‌‫‮‎‍⁯⁪‮⁭‪‭‏​⁪⁫⁫‍‎⁫‍‮‍⁭​⁬​​‪‏‫‬⁪‮([In] string obj0) => obj0.Length;

    static string \u202C‬‍‭‎‬​‭‬‎‭⁯‪⁮⁪‌‏‍⁮⁫⁪⁬⁭⁮‫⁫‮‪‌‏‌⁯‌⁫⁬‏⁭‬⁯⁫‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202A‮‍⁪⁯⁫⁬⁭‏⁯⁭‮⁭⁫‮‮‏​⁯‮⁬‌‭​‪‬‎‍‭‏⁫‬‍‬‍‫⁯‌⁫‍‮([In] object obj0) => obj0.ToString();

    static string \u200E‫‎‫⁯‎⁪‭⁮‪⁬⁬‮⁫‎‬⁭⁯⁭⁫‬⁪⁬‬‎⁭‏⁪⁪‌‬‫⁭‌‌⁮‏‎‍⁭‮([In] string[] obj0) => string.Concat(obj0);

    static string \u206A⁯‎⁯⁯‬‌‬‎‍‏‮‪⁬⁪‌‍‪‬‏‍⁭‭‌‫⁭‍​⁪‭‪⁯⁪‫⁭‍‪⁮‌‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206F‬⁬⁯⁫‌‎⁯‍‌‍‬‫⁯⁮​‏⁫⁭⁭⁪⁮‌⁯‍‪⁯⁮⁫‎⁯​​‏‪‮​‎‫‎‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206C‏⁪‫⁬‍⁮⁮⁮‌‭‌‫⁯‭‭‎​‏⁯‍‮‬‬⁬‪‫⁫⁫⁪‏⁬‍‌⁫‭‎‪‮‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202C⁪​‍‏‫‭‫‫⁯⁪​‫‏⁮‮‪⁭⁪‍⁫‎‮‭‫‭‬‎‏‍⁪‭‭⁬‮‌⁬‭⁫‌‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
