// Decompiled with JetBrains decompiler
// Type: wG.KGc
// Assembly: Type, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 716CE3A9-BAD1-470D-912F-B421D403F66E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee62dc596e4b4fe76f8e015ac250d696a483f656ebb02d02815520b3fd560e30.exe

using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;

namespace wG
{
  public class KGc
  {
    private List<string> H44;
    private static KGc F4f;

    public KGc(string _param1)
    {
      XTG.fvQjdC();
      this.H44 = new List<string>();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.w4e(_param1);
    }

    [CompilerGenerated]
    [SpecialName]
    public string O4A() => this.l4R;

    [CompilerGenerated]
    [SpecialName]
    public void w4e(string _param1) => this.l4R = _param1;

    [SpecialName]
    public List<string> m4F() => this.H44;

    [CompilerGenerated]
    [SpecialName]
    public string s4m() => this.z42;

    [CompilerGenerated]
    [SpecialName]
    public void k4j(string _param1) => this.z42 = _param1;

    public KGc()
    {
      XTG.fvQjdC();
      this.H44 = new List<string>();
      // ISSUE: explicit constructor call
      base.\u002Ector();
      this.k4j(string.Empty);
    }

    public override string ToString()
    {
      int num1 = 3;
label_1:
      int num2 = num1;
      StringBuilder stringBuilder;
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_16;
          case 2:
            goto label_17;
          case 3:
            stringBuilder = new StringBuilder();
            if (KGc.I4j())
            {
              num2 = 2;
              continue;
            }
            goto label_1;
          default:
            goto label_15;
        }
      }
label_4:
      string str1 = stringBuilder.ToString();
      goto label_16;
label_15:
      stringBuilder.AppendLine(this.s4m() + "}");
      goto label_4;
label_16:
      return str1;
label_17:
      if (this.O4A() != null && this.O4A() != string.Empty)
        KGc.i4L((object) stringBuilder, (object) (this.s4m() + "if( " + this.O4A() + " )"));
      if (KGc.M4k((object) this.H44) > 1)
        stringBuilder.AppendLine((string) KGc.A4x((object) this.s4m(), (object) "{"));
      foreach (string str2 in this.H44)
        stringBuilder.AppendLine(this.s4m() + " \t" + str2);
      if (KGc.M4k((object) this.H44) > 1)
        goto label_15;
      else
        goto label_4;
    }

    internal static bool I4j() => KGc.F4f == null;

    internal static KGc s4S() => KGc.F4f;

    internal static object i4L([In] object obj0, [In] object obj1) => (object) ((StringBuilder) obj0).AppendLine((string) obj1);

    internal static int M4k([In] object obj0) => ((List<string>) obj0).Count;

    internal static object A4x([In] object obj0, [In] object obj1) => (object) ((string) obj0 + (string) obj1);
  }
}
