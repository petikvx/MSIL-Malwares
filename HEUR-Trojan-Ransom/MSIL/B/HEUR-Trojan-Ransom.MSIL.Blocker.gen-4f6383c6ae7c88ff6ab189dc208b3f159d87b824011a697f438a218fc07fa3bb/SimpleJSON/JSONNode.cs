// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONNode
// Assembly: DESCUNI, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: AF116ADB-6018-4560-80A5-0C66813DC3F1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-4f6383c6ae7c88ff6ab189dc208b3f159d87b824011a697f438a218fc07fa3bb.exe

using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONNode
  {
    public virtual void Add(string aKey, JSONNode aItem)
    {
    }

    public virtual JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -49278727;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1631227111)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -150724023 ^ -1046703223;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return jsonNode;
      }
      set
      {
      }
    }

    public virtual JSONNode this[string aKey]
    {
      get => (JSONNode) null;
      set
      {
      }
    }

    public virtual string Value
    {
      get
      {
        string str = "";
label_1:
        int num1 = -1982305638;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2058883607)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 1281285540 ^ 51623577;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return str;
      }
      set
      {
      }
    }

    public virtual int Count
    {
      get
      {
label_1:
        int num1 = 1030970118;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 720942761)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              count = 0;
              num1 = (int) num2 * 616838342 ^ 1893772535;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return count;
      }
    }

    public virtual void Add(JSONNode aItem) => this.Add("", aItem);

    public virtual JSONNode Remove(string aKey)
    {
label_1:
      int num1 = 1866121058;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 754460190)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1636354960 ^ -46376993;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = -2016633790;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -347422845)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 1929852278 ^ -1166528153;
            continue;
          case 2:
            num1 = (int) num2 * 641744219 ^ 1620085702;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public virtual JSONNode Remove(JSONNode aNode)
    {
label_1:
      int num1 = -306956880;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1932648158)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = aNode;
            num1 = (int) num2 * -571496852 ^ 1703682245;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public virtual IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONNode.\u003Cget_Childs\u003Ed__17 getChildsD17 = new JSONNode.\u003Cget_Childs\u003Ed__17(-2);
        getChildsD17.\u003C\u003E4__this = this;
label_1:
        int num1 = 1121166951;
        IEnumerable<JSONNode> childs;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 53576494)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs = (IEnumerable<JSONNode>) getChildsD17;
              num1 = (int) num2 * 1613405275 ^ -302611944;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return childs;
      }
    }

    public IEnumerable<JSONNode> DeepChilds
    {
      get
      {
        JSONNode.\u003Cget_DeepChilds\u003Ed__19 getDeepChildsD19 = new JSONNode.\u003Cget_DeepChilds\u003Ed__19(-2);
label_1:
        int num1 = 1009126454;
        IEnumerable<JSONNode> deepChilds;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1325529092)) % 4U)
          {
            case 1:
              deepChilds = (IEnumerable<JSONNode>) getDeepChildsD19;
              num1 = (int) num2 * 1858369577 ^ -1042410143;
              continue;
            case 2:
              getDeepChildsD19.\u003C\u003E4__this = this;
              num1 = (int) num2 * 59751767 ^ -1224212593;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return deepChilds;
      }
    }

    public override string ToString()
    {
label_1:
      int num1 = 2071663434;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1846947036)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            str = nameof (JSONNode);
            num1 = (int) num2 * -1332553425 ^ -813202123;
            continue;
          case 3:
            num1 = (int) num2 * -184238202 ^ -1823345929;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public virtual string ToString(string aPrefix)
    {
      string str = nameof (JSONNode);
label_1:
      int num1 = -342228566;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -191320184)) % 3U)
        {
          case 1:
            num1 = (int) num2 * 1963288683 ^ 278683365;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      return str;
    }

    public virtual int AsInt
    {
      get
      {
label_1:
        int num1 = -771744225;
        int result;
        bool flag;
        int asInt;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -764974329)) % 9U)
          {
            case 0:
              asInt = 0;
              num1 = -1111729369;
              continue;
            case 1:
              num1 = (int) num2 * 1160920597 ^ 913819842;
              continue;
            case 2:
              goto label_1;
            case 3:
              int num3 = flag ? 1235274160 : (num3 = 1404946347);
              num1 = num3 ^ (int) num2 * 2006203754;
              continue;
            case 5:
              num1 = (int) num2 * -1946479635 ^ -2088187045;
              continue;
            case 6:
              asInt = result;
              num1 = (int) num2 * -380332684 ^ 895237726;
              continue;
            case 7:
              result = 0;
              num1 = (int) num2 * -1210282430 ^ -1286774018;
              continue;
            case 8:
              flag = int.TryParse(this.Value, out result);
              num1 = (int) num2 * -273150851 ^ 354519118;
              continue;
            default:
              goto label_10;
          }
        }
label_10:
        return asInt;
      }
      set
      {
        this.Value = value.ToString();
label_1:
        int num1 = -1377576692;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -2040009397)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              num1 = (int) num2 * 460972463 ^ -186229408;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual float AsFloat
    {
      get
      {
label_1:
        int num1 = 612550323;
        float result;
        float asFloat;
        bool flag;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1018696370)) % 8U)
          {
            case 0:
              asFloat = result;
              num1 = (int) num2 * -2112669989 ^ -610829160;
              continue;
            case 1:
              result = 0.0f;
              num1 = (int) num2 * 1200700424 ^ -126137139;
              continue;
            case 3:
              goto label_1;
            case 4:
              asFloat = 0.0f;
              num1 = 1498856788;
              continue;
            case 5:
              int num3 = flag ? 822388111 : (num3 = 70761291);
              num1 = num3 ^ (int) num2 * 1087546009;
              continue;
            case 6:
              num1 = (int) num2 * 1255707558 ^ 1690232396;
              continue;
            case 7:
              flag = float.TryParse(this.Value, NumberStyles.Float, (IFormatProvider) JSONNode.\u206D‪⁭‎‮⁮​⁫‬⁬‍⁬⁭‎⁫‭⁫‏‬‪⁯⁪⁯‌‍‫⁮‭‪⁭‬⁯‌⁯⁭⁬‪‌‬‪‮(), out result);
              num1 = (int) num2 * 887809534 ^ 985013717;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asFloat;
      }
      set
      {
label_1:
        int num1 = 1761734883;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 2140567729)) % 3U)
          {
            case 0:
              goto label_3;
            case 1:
              this.Value = value.ToString();
              num1 = (int) num2 * 1560954312 ^ -1395758283;
              continue;
            case 2:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual double AsDouble
    {
      get
      {
label_1:
        int num1 = -2142941833;
        double result;
        double asDouble;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1503229799)) % 8U)
          {
            case 0:
              asDouble = result;
              num1 = (int) num2 * 428272312 ^ 628715387;
              continue;
            case 1:
              int num3 = double.TryParse(this.Value, out result) ? -1156103063 : (num3 = -103016466);
              num1 = num3 ^ (int) num2 * 778863912;
              continue;
            case 2:
              num1 = (int) num2 * -683954104 ^ -1924214694;
              continue;
            case 4:
              num1 = (int) num2 * -1635238418 ^ 1174481810;
              continue;
            case 5:
              goto label_1;
            case 6:
              result = 0.0;
              num1 = (int) num2 * -1325864693 ^ 639723026;
              continue;
            case 7:
              asDouble = 0.0;
              num1 = -1736933459;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return asDouble;
      }
      set => this.Value = value.ToString();
    }

    public virtual bool AsBool
    {
      get
      {
        bool result = false;
        bool flag = bool.TryParse(this.Value, out result);
label_1:
        int num1 = 1111225095;
        bool asBool;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 303985533)) % 6U)
          {
            case 1:
              num1 = (int) num2 * 1580255127 ^ -506225616;
              continue;
            case 2:
              asBool = !JSONNode.\u206B‌‎‮⁬‎‪‎⁮‫⁮⁯⁮‏​‎⁭‎⁫‫‌⁫‬‫‍‮⁮‪⁮⁬⁪‮‭‮‍⁫⁫⁪⁫⁭‮(this.Value);
              num1 = 1336805974;
              continue;
            case 3:
              asBool = result;
              num1 = (int) num2 * 1346387246 ^ -2071474421;
              continue;
            case 4:
              int num3 = !flag ? -606473453 : (num3 = -1632487542);
              num1 = num3 ^ (int) num2 * 712296589;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_7;
          }
        }
label_7:
        return asBool;
      }
      set
      {
label_1:
        int num1 = -274505982;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1402479324)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              this.Value = value ? "true" : "false";
              num1 = -351014192;
              continue;
            default:
              goto label_5;
          }
        }
label_3:
        return;
label_5:;
      }
    }

    public virtual JSONArray AsArray
    {
      get
      {
label_1:
        int num1 = 1504975384;
        JSONArray asArray;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 921712437)) % 4U)
          {
            case 1:
              asArray = this as JSONArray;
              num1 = (int) num2 * 2049573806 ^ 1203915181;
              continue;
            case 2:
              num1 = (int) num2 * -848418660 ^ -142023279;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return asArray;
      }
    }

    public virtual JSONClass AsObject
    {
      get
      {
label_1:
        int num1 = 409400996;
        JSONClass asObject;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 487646129)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              asObject = this as JSONClass;
              num1 = (int) num2 * -998250905 ^ -658462919;
              continue;
            case 3:
              num1 = (int) num2 * -1908287991 ^ 139549536;
              continue;
            default:
              goto label_5;
          }
        }
label_5:
        return asObject;
      }
    }

    public static implicit operator JSONNode(string s)
    {
label_1:
      int num1 = -1429866570;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -2004609041)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonNode = (JSONNode) new JSONData(s);
            num1 = (int) num2 * -807834604 ^ 813635901;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return jsonNode;
    }

    public static implicit operator string(JSONNode d)
    {
      if (d == (object) null)
        goto label_4;
label_1:
      int num1 = 454854735;
label_2:
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1403533782)) % 4U)
        {
          case 0:
            num1 = (int) num2 * -1611728127 ^ 1106654440;
            continue;
          case 1:
            goto label_3;
          case 3:
            goto label_1;
          default:
            goto label_7;
        }
      }
label_3:
      string str1 = d.Value;
      goto label_5;
label_7:
      string str2;
      return str2;
label_4:
      str1 = (string) null;
label_5:
      str2 = str1;
      num1 = 117933510;
      goto label_2;
    }

    public static bool operator ==(JSONNode a, object b)
    {
      if (b != null)
        goto label_8;
label_1:
      int num1 = 834665057;
label_2:
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 165580574)) % 7U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1501189552 ^ 411582978;
            continue;
          case 2:
            int num3 = flag2 ? 298382157 : (num3 = 585304136);
            num1 = num3 ^ (int) num2 * -1291549869;
            continue;
          case 3:
            flag1 = true;
            num1 = (int) num2 * -1376410029 ^ 2144192796;
            continue;
          case 4:
            flag1 = (object) a == b;
            num1 = 1965492594;
            continue;
          case 5:
            goto label_7;
          default:
            goto label_10;
        }
      }
label_7:
      int num4 = a is JSONLazyCreator ? 1 : 0;
      goto label_9;
label_10:
      return flag1;
label_8:
      num4 = 0;
label_9:
      flag2 = num4 != 0;
      num1 = 1858690270;
      goto label_2;
    }

    public static bool operator !=(JSONNode a, object b)
    {
      bool flag = !(a == b);
label_1:
      int num1 = -591699590;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -411672811)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -1561731101 ^ 639641586;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      return flag;
    }

    public override bool Equals(object obj)
    {
label_1:
      int num1 = 197734247;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1831233333)) % 4U)
        {
          case 1:
            num1 = (int) num2 * 1833898958 ^ 1481883255;
            continue;
          case 2:
            flag = (object) this == obj;
            num1 = (int) num2 * -1907563218 ^ 1851599036;
            continue;
          case 3:
            goto label_1;
          default:
            goto label_5;
        }
      }
label_5:
      return flag;
    }

    public override int GetHashCode() => this.\u206B⁯⁭⁭‎‪⁭⁪⁬‮⁭‌‭​⁪⁭⁪‌⁮‪‫‪‬‪⁯‮‮‪‬⁫⁯‭​‮⁮⁮⁪⁮‏‮‮();

    internal static string Escape(string aText)
    {
label_1:
      int num1 = -324414790;
      string str1;
      int num2;
      char ch1;
      char ch2;
      string str2;
      string str3;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1494006925)) % 31U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num3 * 1026402669 ^ -1990362275;
            continue;
          case 2:
label_18:
            str2 = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str2, "\\f");
            num1 = -1938201755;
            continue;
          case 3:
            num1 = (int) num3 * 737826464 ^ -682042859;
            continue;
          case 4:
label_7:
            str2 = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str2, "\\t");
            num1 = -1116850180;
            continue;
          case 5:
            num2 = 0;
            num1 = (int) num3 * 218235611 ^ 642969789;
            continue;
          case 6:
            int num4;
            num1 = num4 = num2 < JSONNode.\u206A⁪‭⁬⁬‭‭‌⁬‮⁫‪⁬‮⁪‌‫⁮​⁯‪‬‮⁫‏‫⁮‮‮‬‬‌‮⁭⁪⁫‏⁮⁫⁭‮(str1) ? -1979937448 : (num4 = -1406915743);
            continue;
          case 7:
            str2 = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str2, "\\\"");
            num1 = -1763177661;
            continue;
          case 8:
            num1 = (int) num3 * 709648488 ^ -1505202375;
            continue;
          case 9:
            str1 = aText;
            num1 = (int) num3 * 2065994833 ^ -965234946;
            continue;
          case 10:
label_22:
            str2 = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str2, "\\b");
            num1 = -1792395915;
            continue;
          case 11:
            num1 = (int) num3 * 798775795 ^ 365310476;
            continue;
          case 12:
            switch (ch2)
            {
              case '\b':
                goto label_22;
              case '\t':
                goto label_7;
              case '\n':
                goto label_6;
              case '\v':
                goto label_11;
              case '\f':
                goto label_18;
              case '\r':
                goto label_12;
              default:
                num1 = (int) num3 * 152650945 ^ 517126334;
                continue;
            }
          case 13:
            int num5;
            num1 = num5 = ch2 != '"' ? -420122718 : (num5 = -322803706);
            continue;
          case 14:
            str3 = str2;
            num1 = (int) num3 * -432875611 ^ -351178419;
            continue;
          case 15:
            num1 = (int) num3 * -1443486734 ^ -1588640575;
            continue;
          case 16:
            num1 = (int) num3 * -674651974 ^ -2125163405;
            continue;
          case 17:
            num1 = (int) num3 * -1482168139 ^ 473737979;
            continue;
          case 18:
            ++num2;
            num1 = (int) num3 * -735686051 ^ 376251367;
            continue;
          case 19:
            num1 = (int) num3 * 324145083 ^ -846417920;
            continue;
          case 20:
            num1 = (int) num3 * -343186261 ^ -1722692251;
            continue;
          case 21:
            str2 = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str2, "\\\\");
            num1 = -1306942320;
            continue;
          case 23:
label_11:
            str2 = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str2, ch1.ToString());
            num1 = -1792395915;
            continue;
          case 24:
            ch1 = JSONNode.\u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮(str1, num2);
            ch2 = ch1;
            num1 = -1754879802;
            continue;
          case 25:
            num1 = (int) num3 * 1617500831 ^ -1410630175;
            continue;
          case 26:
label_12:
            str2 = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str2, "\\r");
            num1 = -1349817316;
            continue;
          case 27:
            int num6;
            num1 = num6 = ch2 != '\\' ? -1402194253 : (num6 = -1048474555);
            continue;
          case 28:
            str2 = "";
            num1 = (int) num3 * 8120352 ^ -871256991;
            continue;
          case 29:
label_6:
            str2 = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str2, "\\n");
            num1 = -777365829;
            continue;
          case 30:
            num1 = -658263080;
            continue;
          default:
            goto label_33;
        }
      }
label_33:
      return str3;
    }

    public static JSONNode Parse(string aJSON)
    {
      Stack<JSONNode> jsonNodeStack = new Stack<JSONNode>();
      JSONNode jsonNode1 = (JSONNode) null;
label_1:
      int num1 = -1368569258;
      string aItem;
      string aKey;
      bool flag1;
      bool flag2;
      bool flag3;
      bool flag4;
      bool flag5;
      int num2;
      bool flag6;
      char ch1;
      bool flag7;
      bool flag8;
      bool flag9;
      bool flag10;
      bool flag11;
      bool flag12;
      bool flag13;
      char ch2;
      bool flag14;
      bool flag15;
      char ch3;
      char ch4;
      bool flag16;
      bool flag17;
      char ch5;
      bool flag18;
      JSONNode jsonNode2;
      char ch6;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1969413705)) % 156U)
        {
          case 0:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * -1446027504 ^ -1417091419;
            continue;
          case 1:
          case 20:
          case 43:
          case 119:
          case 150:
label_104:
            ++num2;
            num1 = -1157157320;
            continue;
          case 2:
            int num4 = !flag11 ? 1489855186 : (num4 = 2111744149);
            num1 = num4 ^ (int) num3 * 1012157073;
            continue;
          case 3:
            int num5 = flag6 ? 229793723 : (num5 = 2024272017);
            num1 = num5 ^ (int) num3 * -1293120965;
            continue;
          case 4:
            flag5 = num2 < JSONNode.\u206A⁪‭⁬⁬‭‭‌⁬‮⁫‪⁬‮⁪‌‫⁮​⁯‪‬‮⁫‏‫⁮‮‮‬‬‌‮⁭⁪⁫‏⁮⁫⁭‮(aJSON);
            num1 = -561065118;
            continue;
          case 5:
            aKey = JSONNode.\u206E‮⁯‏‫⁭‏‫‌‮⁪‭‭‭⁮‍‮‍‪‎‍​‪​‏‭‍⁬‭⁯‭‎‮⁭‌⁭‫⁪⁯⁫‮(aKey);
            num1 = (int) num3 * 552050482 ^ 1035569989;
            continue;
          case 6:
            switch (ch3)
            {
              case 'r':
                goto label_151;
              case 's':
                goto label_112;
              case 't':
                goto label_12;
              case 'u':
                goto label_128;
              default:
                num1 = -256810936;
                continue;
            }
          case 7:
            num1 = (int) num3 * -1197656820 ^ -1931734902;
            continue;
          case 8:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * 732722909 ^ -886985189;
            continue;
          case 9:
            num1 = (int) num3 * -117454974 ^ 1584336983;
            continue;
          case 10:
label_112:
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(aItem, ch5.ToString());
            num1 = -402407029;
            continue;
          case 11:
            aKey = "";
            flag4 = false;
            num1 = (int) num3 * 1794090784 ^ -89694643;
            continue;
          case 12:
label_97:
            int num6;
            num1 = num6 = !flag4 ? -1186462556 : (num6 = -1728353982);
            continue;
          case 13:
            jsonNodeStack.Push((JSONNode) new JSONArray());
            num1 = -1090220690;
            continue;
          case 14:
            num1 = (int) num3 * -1606682699 ^ -1543599615;
            continue;
          case 15:
            num1 = (int) num3 * 1094951083 ^ -1509007504;
            continue;
          case 16:
            num1 = (int) num3 * 543845909 ^ -2083471572;
            continue;
          case 17:
            string str1 = aItem;
            ch2 = JSONNode.\u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮(aJSON, num2);
            string str2 = ch2.ToString();
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str1, str2);
            num1 = (int) num3 * -1204784348 ^ -105915599;
            continue;
          case 18:
            flag17 = JSONNode.\u202E‭⁪‫⁯​‮​‭⁪‫⁬‬‍⁭‭⁮⁯⁫⁯‎‭‎‬‌‌‍​⁮⁯⁭⁯⁬‮⁫⁬⁪‍​‬‮(aKey, "");
            num1 = -1341370488;
            continue;
          case 19:
label_57:
            flag15 = flag4;
            num1 = -179457023;
            continue;
          case 21:
            num1 = (int) num3 * -1659408842 ^ 2004296733;
            continue;
          case 22:
            string str3 = aItem;
            ch2 = JSONNode.\u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮(aJSON, num2);
            string str4 = ch2.ToString();
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str3, str4);
            num1 = (int) num3 * -291263893 ^ -1276683444;
            continue;
          case 23:
            int num7 = !flag13 ? -2024569362 : (num7 = -280202157);
            num1 = num7 ^ (int) num3 * -1366350659;
            continue;
          case 24:
            int num8 = !flag4 ? -991290939 : (num8 = -1030280589);
            num1 = num8 ^ (int) num3 * -760040283;
            continue;
          case 25:
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(aItem, "\n");
            num1 = -819412685;
            continue;
          case 26:
label_128:
            string s = JSONNode.\u200B​⁪‬⁪‬‮‮‫⁮⁪‭⁬‌⁬‍​⁮‎⁬⁬⁬⁭‌‭‬​⁯‪⁫​⁯‌⁯‎‭‪⁫‬‮‮(aJSON, num2 + 1, 4);
            string str5 = aItem;
            ch2 = (char) int.Parse(s, NumberStyles.AllowHexSpecifier);
            string str6 = ch2.ToString();
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str5, str6);
            num1 = -895239008;
            continue;
          case 27:
            num1 = (int) num3 * 1106415751 ^ -1031081970;
            continue;
          case 28:
            flag8 = jsonNode1 != (object) null;
            num1 = (int) num3 * -61208390 ^ -498067766;
            continue;
          case 29:
            flag3 = flag4;
            num1 = -948931175;
            continue;
          case 30:
            int num9 = !flag3 ? -212122138 : (num9 = -1687993540);
            num1 = num9 ^ (int) num3 * -1423989082;
            continue;
          case 31:
            num1 = (int) num3 * -1344197347 ^ 876433262;
            continue;
          case 32:
            num1 = -803705021;
            continue;
          case 33:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * 1529303364 ^ -204412935;
            continue;
          case 34:
            aKey = "";
            aItem = "";
            num1 = -184250943;
            continue;
          case 35:
label_12:
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(aItem, "\t");
            num1 = -94342063;
            continue;
          case 36:
            flag16 = flag4;
            num1 = (int) num3 * -487211326 ^ 1204937568;
            continue;
          case 37:
            num1 = -34597997;
            continue;
          case 38:
            int num10;
            num1 = num10 = ch1 > ']' ? -949675530 : (num10 = -1532197544);
            continue;
          case 39:
            num1 = (int) num3 * -37316870 ^ 1014446276;
            continue;
          case 40:
            ch5 = JSONNode.\u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮(aJSON, num2);
            num1 = (int) num3 * -1326912397 ^ -125054916;
            continue;
          case 41:
            switch (ch1)
            {
              case '[':
                goto label_63;
              case '\\':
                goto label_64;
              case ']':
                goto label_57;
              default:
                num1 = -1725437458;
                continue;
            }
          case 42:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * -581437770 ^ 106957070;
            continue;
          case 44:
            aKey = "";
            num1 = -1329021927;
            continue;
          case 45:
            num1 = (int) num3 * 1561730368 ^ -764265487;
            continue;
          case 46:
            string str7 = aItem;
            ch2 = JSONNode.\u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮(aJSON, num2);
            string str8 = ch2.ToString();
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str7, str8);
            num1 = (int) num3 * 710925814 ^ 1808487220;
            continue;
          case 47:
            int num11;
            num1 = num11 = JSONNode.\u202E‭⁪‫⁯​‮​‭⁪‫⁬‬‍⁭‭⁮⁯⁫⁯‎‭‎‬‌‌‍​⁮⁯⁭⁯⁬‮⁫⁬⁪‍​‬‮(aKey, "") ? -1100029409 : (num11 = -1432159741);
            continue;
          case 48:
            num1 = -2143046091;
            continue;
          case 49:
            int num12;
            num1 = num12 = ch1 == ',' ? -1103338848 : (num12 = -834100841);
            continue;
          case 50:
            num1 = (int) num3 * 440402863 ^ 702128545;
            continue;
          case 51:
            num1 = (int) num3 * -1885675093 ^ -235261103;
            continue;
          case 52:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * -566854667 ^ 763330865;
            continue;
          case 53:
            int num13 = !flag10 ? -1060555443 : (num13 = -2012727952);
            num1 = num13 ^ (int) num3 * -816721545;
            continue;
          case 54:
            aItem = "";
            num1 = (int) num3 * 1638103409 ^ 1203959288;
            continue;
          case 55:
            flag4 = !flag4;
            num1 = -793505902;
            continue;
          case 56:
            int num14 = flag9 ? 188699133 : (num14 = 1549570755);
            num1 = num14 ^ (int) num3 * 1533955872;
            continue;
          case 57:
            jsonNodeStack.Push((JSONNode) new JSONClass());
            num1 = -856923635;
            continue;
          case 58:
            goto label_1;
          case 59:
            int num15 = flag16 ? 1934845813 : (num15 = 320541598);
            num1 = num15 ^ (int) num3 * 2100115782;
            continue;
          case 60:
            num1 = (int) num3 * -1299352446 ^ 390120135;
            continue;
          case 61:
            num1 = (int) num3 * -934853711 ^ -112543468;
            continue;
          case 62:
            num1 = -1139175727;
            continue;
          case 63:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 550976568 ^ -265115494;
            continue;
          case 64:
            aKey = JSONNode.\u206E‮⁯‏‫⁭‏‫‌‮⁪‭‭‭⁮‍‮‍‪‎‍​‪​‏‭‍⁬‭⁯‭‎‮⁭‌⁭‫⁪⁯⁫‮(aKey);
            num1 = (int) num3 * -694370090 ^ -1675240786;
            continue;
          case 65:
            int num16 = jsonNode1 is JSONArray ? 100083302 : (num16 = 1942478577);
            num1 = num16 ^ (int) num3 * 1790872605;
            continue;
          case 66:
            num1 = (int) num3 * 1829636908 ^ 143852665;
            continue;
          case 67:
            aItem = "";
            num1 = (int) num3 * 1121815033 ^ -465980833;
            continue;
          case 68:
            flag13 = JSONNode.\u202E‭⁪‫⁯​‮​‭⁪‫⁬‬‍⁭‭⁮⁯⁫⁯‎‭‎‬‌‌‍​⁮⁯⁭⁯⁬‮⁫⁬⁪‍​‬‮(aKey, "");
            num1 = -239891812;
            continue;
          case 69:
            jsonNode1.Add(jsonNodeStack.Peek());
            num1 = (int) num3 * 1956125422 ^ 695055182;
            continue;
          case 70:
            aKey = "";
            num1 = -1176949056;
            continue;
          case 71:
            int num17;
            num1 = num17 = !JSONNode.\u202E‭⁪‫⁯​‮​‭⁪‫⁬‬‍⁭‭⁮⁯⁫⁯‎‭‎‬‌‌‍​⁮⁯⁭⁯⁬‮⁫⁬⁪‍​‬‮(aKey, "") ? -1398332201 : (num17 = -1870568846);
            continue;
          case 72:
            int num18 = !(jsonNode1 is JSONArray) ? 1606471009 : (num18 = 1685283862);
            num1 = num18 ^ (int) num3 * 146000270;
            continue;
          case 73:
            int num19 = ch3 != 'b' ? -1905199607 : (num19 = -145143826);
            num1 = num19 ^ (int) num3 * -1807735630;
            continue;
          case 74:
            aKey = aItem;
            aItem = "";
            num1 = -793505902;
            continue;
          case 75:
            int num20 = ch1 != ':' ? -996152492 : (num20 = -1489769306);
            num1 = num20 ^ (int) num3 * -2106754200;
            continue;
          case 77:
            int num21;
            num1 = num21 = ch1 != '{' ? -743405598 : (num21 = -1572847162);
            continue;
          case 78:
            int num22 = !flag14 ? -1804269777 : (num22 = -803671676);
            num1 = num22 ^ (int) num3 * -230527751;
            continue;
          case 79:
            int num23;
            num1 = num23 = ch1 != '"' ? -1242252130 : (num23 = -1421738628);
            continue;
          case 80:
            num1 = -1427653000;
            continue;
          case 81:
            num1 = (int) num3 * 221729896 ^ -561734557;
            continue;
          case 82:
            jsonNodeStack.Pop();
            flag11 = JSONNode.\u202E‭⁪‫⁯​‮​‭⁪‫⁬‬‍⁭‭⁮⁯⁫⁯‎‭‎‬‌‌‍​⁮⁯⁭⁯⁬‮⁫⁬⁪‍​‬‮(aItem, "");
            num1 = -1392418115;
            continue;
          case 83:
            int num24 = ch1 <= ' ' ? 1395091328 : (num24 = 56363757);
            num1 = num24 ^ (int) num3 * 1157236467;
            continue;
          case 84:
            num1 = (int) num3 * 657556504 ^ 1158754968;
            continue;
          case 85:
            int num25 = !flag8 ? -1384937234 : (num25 = -1147110213);
            num1 = num25 ^ (int) num3 * -283518881;
            continue;
          case 86:
            num1 = (int) num3 * 1038362521 ^ -1249315427;
            continue;
          case 87:
            num2 += 4;
            num1 = (int) num3 * 1461757852 ^ -1507793758;
            continue;
          case 88:
            flag14 = jsonNodeStack.Count == 0;
            num1 = -1470736275;
            continue;
          case 89:
            int num26 = !flag2 ? -1777410441 : (num26 = -540819675);
            num1 = num26 ^ (int) num3 * -1247730189;
            continue;
          case 90:
            int num27 = flag15 ? 607165444 : (num27 = 1728977215);
            num1 = num27 ^ (int) num3 * 1724250450;
            continue;
          case 91:
            string str9 = aItem;
            ch2 = JSONNode.\u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮(aJSON, num2);
            string str10 = ch2.ToString();
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str9, str10);
            num1 = (int) num3 * -2089713159 ^ -587822699;
            continue;
          case 92:
            int num28;
            num1 = num28 = ch3 != 'f' ? -681011506 : (num28 = -149066752);
            continue;
          case 93:
            num1 = (int) num3 * 656263820 ^ 94512974;
            continue;
          case 94:
            num1 = (int) num3 * 815838100 ^ 825470917;
            continue;
          case 95:
            num1 = (int) num3 * -42636553 ^ -1086362904;
            continue;
          case 96:
            num1 = (int) num3 * -252376230 ^ -1574402711;
            continue;
          case 97:
            flag7 = flag4;
            num1 = -953391860;
            continue;
          case 98:
            num1 = (int) num3 * -1920988975 ^ 578916685;
            continue;
          case 99:
label_46:
            string str11 = aItem;
            ch2 = JSONNode.\u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮(aJSON, num2);
            string str12 = ch2.ToString();
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str11, str12);
            num1 = -1699508083;
            continue;
          case 100:
            string str13 = aItem;
            ch2 = JSONNode.\u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮(aJSON, num2);
            string str14 = ch2.ToString();
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str13, str14);
            num1 = (int) num3 * 11794276 ^ 1557374290;
            continue;
          case 101:
            num1 = (int) num3 * 1218435582 ^ 248399053;
            continue;
          case 102:
            num1 = (int) num3 * -666871986 ^ -633292226;
            continue;
          case 103:
            int num29 = !flag17 ? 978504392 : (num29 = 767061217);
            num1 = num29 ^ (int) num3 * -1569971515;
            continue;
          case 104:
            int num30 = !flag12 ? -1928834527 : (num30 = -1379579795);
            num1 = num30 ^ (int) num3 * -1069460484;
            continue;
          case 105:
            num1 = (int) num3 * -1715678287 ^ -1626230621;
            continue;
          case 106:
            num1 = (int) num3 * 217589723 ^ 1421718549;
            continue;
          case 107:
            int num31 = !flag7 ? -1098050625 : (num31 = -797954508);
            num1 = num31 ^ (int) num3 * -1627295914;
            continue;
          case 108:
            num1 = (int) num3 * -1490490825 ^ -2115492393;
            continue;
          case 109:
            int num32 = !flag1 ? -1594114497 : (num32 = -815974905);
            num1 = num32 ^ (int) num3 * 1620214512;
            continue;
          case 110:
            num1 = (int) num3 * -1408245093 ^ 983603049;
            continue;
          case 111:
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(aItem, "\f");
            num1 = -433750841;
            continue;
          case 112:
            ch1 = ch4;
            int num33 = ch1 > ',' ? -471228275 : (num33 = -422962204);
            num1 = num33 ^ (int) num3 * 1024722244;
            continue;
          case 113:
            num1 = (int) num3 * 425988542 ^ 1251420822;
            continue;
          case 114:
            int num34;
            num1 = num34 = ch1 != '}' ? -1904633371 : (num34 = -587241168);
            continue;
          case 115:
            jsonNode2 = jsonNode1;
            num1 = -1701843394;
            continue;
          case 116:
            goto label_26;
          case 117:
            jsonNode1.Add(aKey, (JSONNode) aItem);
            num1 = (int) num3 * 1706445454 ^ 586526097;
            continue;
          case 118:
            num1 = (int) num3 * 637882444 ^ 702689675;
            continue;
          case 120:
            num1 = -218897643;
            continue;
          case 121:
            goto label_110;
          case 122:
            switch (ch1)
            {
              case '\t':
                goto label_97;
              case '\n':
              case '\r':
                goto label_104;
              case '\v':
              case '\f':
                goto label_46;
              default:
                num1 = (int) num3 * -1870025624 ^ 48984834;
                continue;
            }
          case 123:
            num1 = (int) num3 * -1895167388 ^ 111819782;
            continue;
          case 124:
            num1 = (int) num3 * -1816749520 ^ -1052773071;
            continue;
          case 125:
            string str15 = aItem;
            ch2 = JSONNode.\u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮(aJSON, num2);
            string str16 = ch2.ToString();
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(str15, str16);
            num1 = (int) num3 * -1985395263 ^ 248253713;
            continue;
          case 126:
            num1 = (int) num3 * 956901744 ^ 559141746;
            continue;
          case (uint) sbyte.MaxValue:
            aItem = "";
            num1 = (int) num3 * -676663658 ^ 287319090;
            continue;
          case 128:
            num1 = (int) num3 * 1984064959 ^ -531984097;
            continue;
          case 129:
            num1 = (int) num3 * 790797010 ^ 2075883976;
            continue;
          case 130:
            int num35;
            num1 = num35 = ch1 != ' ' ? -476129965 : (num35 = -702928549);
            continue;
          case 131:
            jsonNode1.Add(aKey, jsonNodeStack.Peek());
            num1 = (int) num3 * -798757606 ^ -405126801;
            continue;
          case 132:
            ch3 = ch6;
            int num36 = ch3 <= 'f' ? 1296115902 : (num36 = 3248885);
            num1 = num36 ^ (int) num3 * -648309937;
            continue;
          case 133:
            jsonNode1 = jsonNodeStack.Peek();
            num1 = (int) num3 * 1303026361 ^ -233889251;
            continue;
          case 134:
            aKey = JSONNode.\u206E‮⁯‏‫⁭‏‫‌‮⁪‭‭‭⁮‍‮‍‪‎‍​‪​‏‭‍⁬‭⁯‭‎‮⁭‌⁭‫⁪⁯⁫‮(aKey);
            flag18 = jsonNode1 is JSONArray;
            num1 = (int) num3 * 1831092546 ^ -1362269221;
            continue;
          case 135:
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(aItem, "\b");
            num1 = -402407029;
            continue;
          case 136:
label_64:
            ++num2;
            num1 = -1306551161;
            continue;
          case 137:
            num2 = 0;
            num1 = (int) num3 * -1778358405 ^ -1017494217;
            continue;
          case 138:
            num1 = (int) num3 * 1165499488 ^ -277108904;
            continue;
          case 139:
            num1 = (int) num3 * 97255231 ^ 1563577830;
            continue;
          case 140:
            num1 = (int) num3 * 481198797 ^ -1724484805;
            continue;
          case 141:
            num1 = (int) num3 * 698653109 ^ -1304763005;
            continue;
          case 142:
label_151:
            aItem = JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮(aItem, "\r");
            num1 = -135058623;
            continue;
          case 143:
            ch6 = ch5;
            num1 = (int) num3 * 603097631 ^ -695165230;
            continue;
          case 144:
            flag9 = JSONNode.\u202E‭⁪‫⁯​‮​‭⁪‫⁬‬‍⁭‭⁮⁯⁫⁯‎‭‎‬‌‌‍​⁮⁯⁭⁯⁬‮⁫⁬⁪‍​‬‮(aItem, "");
            num1 = -5263877;
            continue;
          case 145:
            flag12 = jsonNode1 != (object) null;
            num1 = (int) num3 * 643737040 ^ -1872236509;
            continue;
          case 146:
            flag6 = jsonNode1 is JSONArray;
            num1 = (int) num3 * -303035124 ^ 433043908;
            continue;
          case 147:
            flag1 = flag4;
            num1 = -2037902242;
            continue;
          case 148:
            int num37 = !flag18 ? -90203509 : (num37 = -733454969);
            num1 = num37 ^ (int) num3 * -1773600815;
            continue;
          case 149:
            jsonNode1.Add((JSONNode) aItem);
            num1 = (int) num3 * -794806601 ^ 272935677;
            continue;
          case 151:
            aKey = "";
            aItem = "";
            flag2 = jsonNodeStack.Count > 0;
            num1 = -676586122;
            continue;
          case 152:
            ch4 = JSONNode.\u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮(aJSON, num2);
            num1 = (int) num3 * -1803910166 ^ 1416789063;
            continue;
          case 153:
            int num38 = flag5 ? 751852048 : (num38 = 1517435677);
            num1 = num38 ^ (int) num3 * -734424482;
            continue;
          case 154:
            int num39;
            num1 = num39 = ch3 != 'n' ? -1494302860 : (num39 = -732528850);
            continue;
          case 155:
label_63:
            flag10 = flag4;
            num1 = -998865098;
            continue;
          default:
            goto label_156;
        }
      }
label_26:
      throw JSONNode.\u202D‪‭⁯‌⁫‏‪⁫​‌​‌⁮⁬​​‫⁫⁪‫​‍​‫​‬⁭⁮‫⁬‏⁪​‭⁭‪​​⁫‮("JSON Parse: Quotation marks seems to be messed up.");
label_110:
      throw JSONNode.\u202D‪‭⁯‌⁫‏‪⁫​‌​‌⁮⁬​​‫⁫⁪‫​‍​‫​‬⁭⁮‫⁬‏⁪​‭⁭‪​​⁫‮("JSON Parse: Too many closing brackets");
label_156:
      return jsonNode2;
    }

    public virtual void Serialize(BinaryWriter aWriter)
    {
    }

    public void SaveToStream(Stream aData)
    {
label_1:
      int num1 = -1093221749;
      BinaryWriter aWriter;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1475240311)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            aWriter = JSONNode.\u206D‬​‌‫⁪‌‏‌⁭​‬⁯​⁪‭⁫⁫‪⁬‌⁪‎‍‪‎⁮​⁫‮​⁪‫‍⁫⁪‏‌‌‮‮(aData);
            num1 = (int) num2 * -2128225600 ^ -1725697190;
            continue;
          case 3:
            this.Serialize(aWriter);
            num1 = (int) num2 * 332660694 ^ -404070554;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public void SaveToCompressedStream(Stream aData) => throw JSONNode.\u202D‪‭⁯‌⁫‏‪⁫​‌​‌⁮⁬​​‫⁫⁪‫​‍​‫​‬⁭⁮‫⁬‏⁪​‭⁭‪​​⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToCompressedFile(string aFileName) => throw JSONNode.\u202D‪‭⁯‌⁫‏‪⁫​‌​‌⁮⁬​​‫⁫⁪‫​‍​‫​‬⁭⁮‫⁬‏⁪​‭⁭‪​​⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public string SaveToCompressedBase64() => throw JSONNode.\u202D‪‭⁯‌⁫‏‪⁫​‌​‌⁮⁬​​‫⁫⁪‫​‍​‫​‬⁭⁮‫⁬‏⁪​‭⁭‪​​⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public void SaveToFile(string aFileName)
    {
      JSONNode.\u206F‬‍‎‪​​⁭‌⁫‬‮‪‍⁪‏⁮‏‫‌‍⁬​‭‎‪⁯‫‍‭‌‌‪‌⁬‬⁬‮⁯⁭‮(JSONNode.\u202E⁮‍‍⁯⁭‪‪⁬​‮‏‌⁭‪⁮‌‬⁫‍⁫‌‮⁫​⁭‮‌‏‬‍⁯⁬‬⁭‏⁮⁬‬⁭‮((FileSystemInfo) JSONNode.\u202D‏‮‎‎‏‪⁯‬‏⁬‎‮‮​​​⁭‌⁫⁬‬‮⁮‮⁪‎‮⁯‬‌⁬‭‌⁬‫‭‍‫⁯‮(JSONNode.\u200C‫​‍‬‫‏​⁪‌‏⁬⁬‌‭⁯‪⁭‍⁭‌⁬⁬‭‎​‬‌‮‫‏⁭⁭‌⁫‭‫‍⁬‬‮(aFileName))));
      FileStream aData = JSONNode.\u206F⁯⁪⁯⁫‬⁯⁫‏‪​‌‬⁮⁯⁭‫⁭⁬‭‎⁭⁫⁮‮‪‫‌‬⁮‪‏​‭‍‪‌‭‎‬‮(aFileName);
      try
      {
        this.SaveToStream((Stream) aData);
label_2:
        int num1 = -2004401693;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1540949527)) % 4U)
          {
            case 0:
              goto label_10;
            case 1:
              num1 = (int) num2 * 842794411 ^ 1535688350;
              continue;
            case 2:
              num1 = (int) num2 * -1868440902 ^ 2103908852;
              continue;
            case 3:
              goto label_2;
            default:
              goto label_6;
          }
        }
label_10:
        return;
label_6:;
      }
      finally
      {
        if (aData != null)
        {
label_8:
          int num3 = -87712300;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -1540949527)) % 4U)
            {
              case 0:
                num3 = (int) num4 * -145932730 ^ 1548584099;
                continue;
              case 1:
                JSONNode.\u200E‮⁮​‍‫‬‏⁯⁮⁬‌⁪‌‭‌‌⁯‬‏​‌‬⁯⁬‌‪‮‬‎‪⁮⁮‏‭⁮‏‫⁫‌‮((IDisposable) aData);
                num3 = (int) num4 * -1602487479 ^ -351557244;
                continue;
              case 3:
                goto label_8;
              default:
                goto label_13;
            }
          }
        }
label_13:;
      }
    }

    public string SaveToBase64()
    {
      MemoryStream aData = JSONNode.\u202B‪⁫‏​⁬‭‏‬⁭‎‫‬‎‌‌​‭‍⁯‏⁭‮‎‭⁫‫‭‏‭‍⁭‫‌‎⁬⁬​‎⁮‮();
      try
      {
label_2:
        int num1 = -1837754674;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -242610016)) % 6U)
          {
            case 0:
              JSONNode.\u200C‭‎‏‮‎​⁪⁪⁪‌‫⁫‮⁪‫‏​‌‫⁮‍⁯⁫⁯‌⁯⁯‍⁯‍‍⁪‏‮​⁫‍⁫‬‮((Stream) aData, 0L);
              num1 = (int) num2 * 1499442755 ^ -126011194;
              continue;
            case 1:
              num1 = (int) num2 * -762450266 ^ 1976213344;
              continue;
            case 2:
              this.SaveToStream((Stream) aData);
              num1 = (int) num2 * -146543870 ^ 1789882601;
              continue;
            case 3:
              goto label_2;
            case 4:
              num1 = (int) num2 * 914219616 ^ 925892009;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return JSONNode.\u202D⁮‭‬​‪⁬‏‭‭‌‬⁫‍⁬‪⁯⁮​‭‬‬⁮‭​‍⁬‪‬‪‍‌‬‮‬‬‏‏‍⁬‮(JSONNode.\u202C⁪‍‍‍‬‏‪‮⁭⁭⁬‍​⁯⁭⁭⁫‭⁭‌​​​⁯‍‎⁪‪⁭‍⁮⁮‎⁪‍⁫‏‪‌‮(aData));
      }
      finally
      {
        if (aData != null)
        {
label_10:
          int num3 = -376008687;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -242610016)) % 4U)
            {
              case 0:
                goto label_10;
              case 1:
                JSONNode.\u200E‮⁮​‍‫‬‏⁯⁮⁬‌⁪‌‭‌‌⁯‬‏​‌‬⁯⁬‌‪‮‬‎‪⁮⁮‏‭⁮‏‫⁫‌‮((IDisposable) aData);
                num3 = (int) num4 * -1077452453 ^ -1624138443;
                continue;
              case 2:
                num3 = (int) num4 * 1839211122 ^ -1357271077;
                continue;
              default:
                goto label_14;
            }
          }
        }
label_14:;
      }
    }

    public static JSONNode Deserialize(BinaryReader aReader)
    {
label_1:
      int num1 = -1758395442;
      int num2;
      JSONBinaryTag jsonBinaryTag;
      JSONNode jsonNode;
      int num3;
      int num4;
      JSONArray jsonArray;
      int num5;
      bool flag;
      string aKey;
      JSONNode aItem;
      JSONClass jsonClass;
      while (true)
      {
        uint num6;
        switch ((num6 = (uint) (num1 ^ -1799925357)) % 33U)
        {
          case 0:
            num1 = (int) num6 * -720241524 ^ -1429991158;
            continue;
          case 1:
label_32:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200F‪​⁯‮‮⁬‬‎⁭‬‍⁫⁪‬‪⁫⁫‏⁫‪⁫‏‏⁭​​‎​‫⁮⁪⁬⁮‏‏‍​‎‬‮(aReader));
            num1 = -1304246546;
            continue;
          case 2:
            num3 = 0;
            num1 = (int) num6 * -352416594 ^ -2013807648;
            continue;
          case 3:
            goto label_1;
          case 4:
            flag = num2 < num5;
            num1 = -646865518;
            continue;
          case 5:
            num1 = (int) num6 * 435222736 ^ 187075611;
            continue;
          case 6:
            jsonNode = (JSONNode) jsonArray;
            num1 = (int) num6 * -487970224 ^ 1888602570;
            continue;
          case 7:
            num4 = JSONNode.\u206C⁮‫‮‌‎⁭⁪‫⁪⁬‏‬‎‬‎⁬‬‌‮‬​‫‎‌⁬‏⁫⁭‍​⁯​⁪‬‍⁯⁪‎‮(aReader);
            jsonArray = new JSONArray();
            num1 = (int) num6 * -2074026032 ^ -105088799;
            continue;
          case 8:
label_26:
            num1 = -951848069;
            continue;
          case 9:
            jsonBinaryTag = (JSONBinaryTag) JSONNode.\u200B⁮⁭‪⁯‌‬‮‪‍⁪⁬​‮‬⁪​‪⁪‭‍⁪⁪​‍⁭‎‫‍⁬‬⁫⁫‭⁬‍⁮⁯⁭‬‮(aReader);
            num1 = (int) num6 * -1549164712 ^ -1908112874;
            continue;
          case 10:
label_23:
            num1 = -1487452456;
            continue;
          case 11:
            num2 = 0;
            num1 = (int) num6 * -1769068766 ^ 867797649;
            continue;
          case 12:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200E⁯‌⁮‭⁫⁫‪‮‫‮‫⁭‎‍⁯⁭‫‮⁪‌⁭​⁮⁯⁮⁭‫⁭⁫‍‫‬‎⁭‎⁮‫‍⁭‮(aReader));
            num1 = (int) num6 * -74453474 ^ 197289667;
            continue;
          case 13:
            goto label_5;
          case 14:
label_16:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u206C⁮‫‮‌‎⁭⁪‫⁪⁬‏‬‎‬‎⁬‬‌‮‬​‫‎‌⁬‏⁫⁭‍​⁯​⁪‬‍⁯⁪‎‮(aReader));
            num1 = -556742662;
            continue;
          case 16:
            switch (jsonBinaryTag)
            {
              case JSONBinaryTag.Array:
                goto label_26;
              case JSONBinaryTag.Class:
                goto label_12;
              case JSONBinaryTag.Value:
                goto label_27;
              case JSONBinaryTag.IntValue:
                goto label_16;
              case JSONBinaryTag.DoubleValue:
                goto label_23;
              case JSONBinaryTag.BoolValue:
                goto label_32;
              case JSONBinaryTag.FloatValue:
                goto label_25;
              default:
                num1 = (int) num6 * -973716170 ^ 61542591;
                continue;
            }
          case 17:
            jsonNode = (JSONNode) jsonClass;
            num1 = (int) num6 * 1508329232 ^ 1347695327;
            continue;
          case 18:
            num1 = (int) num6 * -689399622 ^ 1532233986;
            continue;
          case 19:
            int num7;
            num1 = num7 = num3 >= num4 ? -1381898380 : (num7 = -1668589805);
            continue;
          case 20:
label_27:
            num1 = -280014547;
            continue;
          case 21:
label_12:
            num5 = JSONNode.\u206C⁮‫‮‌‎⁭⁪‫⁪⁬‏‬‎‬‎⁬‬‌‮‬​‫‎‌⁬‏⁫⁭‍​⁯​⁪‬‍⁯⁪‎‮(aReader);
            num1 = -751811133;
            continue;
          case 22:
            jsonArray.Add(JSONNode.Deserialize(aReader));
            ++num3;
            num1 = -389445220;
            continue;
          case 23:
            jsonClass.Add(aKey, aItem);
            num1 = (int) num6 * 1335772106 ^ 1202298955;
            continue;
          case 24:
            num1 = (int) num6 * 933625176 ^ -1836146118;
            continue;
          case 25:
            num1 = (int) num6 * -482677498 ^ -1367178732;
            continue;
          case 26:
            ++num2;
            num1 = (int) num6 * 1879345573 ^ 1999101575;
            continue;
          case 27:
            jsonClass = new JSONClass();
            num1 = (int) num6 * -1898448397 ^ 1299884982;
            continue;
          case 28:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u200B‪⁭⁫‍‬⁪‎‮‎‮‪​‬⁪‮​‪​⁪‪‮‬‭⁬‬‪‫‍‍‭‭‭‎‌‏⁪‌‍‪‮(aReader));
            num1 = (int) num6 * 1753398090 ^ 623919956;
            continue;
          case 29:
            aKey = JSONNode.\u200E⁯‌⁮‭⁫⁫‪‮‫‮‫⁭‎‍⁯⁭‫‮⁪‌⁭​⁮⁯⁮⁭‫⁭⁫‍‫‬‎⁭‎⁮‫‍⁭‮(aReader);
            aItem = JSONNode.Deserialize(aReader);
            num1 = -1012867231;
            continue;
          case 30:
            int num8 = flag ? -1128373431 : (num8 = -1910417504);
            num1 = num8 ^ (int) num6 * 1627796733;
            continue;
          case 31:
            jsonNode = (JSONNode) new JSONData(JSONNode.\u202A‏‭⁫‌‎‌‌⁬‌⁬⁭‪⁬‎‌‎⁭‌​‬‌‮‎⁯‮‮‍⁮⁬⁪⁪⁫‎⁫⁮​⁮‍‌‮(aReader));
            num1 = (int) num6 * 187527860 ^ 1456504683;
            continue;
          case 32:
label_25:
            num1 = -203822569;
            continue;
          default:
            goto label_35;
        }
      }
label_5:
      throw JSONNode.\u202D‪‭⁯‌⁫‏‪⁫​‌​‌⁮⁬​​‫⁫⁪‫​‍​‫​‬⁭⁮‫⁬‏⁪​‭⁭‪​​⁫‮(JSONNode.\u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮("Error deserializing JSON. Unknown tag: ", jsonBinaryTag.ToString()));
label_35:
      return jsonNode;
    }

    public static JSONNode LoadFromCompressedFile(string aFileName) => throw JSONNode.\u202D‪‭⁯‌⁫‏‪⁫​‌​‌⁮⁬​​‫⁫⁪‫​‍​‫​‬⁭⁮‫⁬‏⁪​‭⁭‪​​⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedStream(Stream aData) => throw JSONNode.\u202D‪‭⁯‌⁫‏‪⁫​‌​‌⁮⁬​​‫⁫⁪‫​‍​‫​‬⁭⁮‫⁬‏⁪​‭⁭‪​​⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromCompressedBase64(string aBase64) => throw JSONNode.\u202D‪‭⁯‌⁫‏‪⁫​‌​‌⁮⁬​​‫⁫⁪‫​‍​‫​‬⁭⁮‫⁬‏⁪​‭⁭‪​​⁫‮("Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON");

    public static JSONNode LoadFromStream(Stream aData)
    {
      BinaryReader aReader = JSONNode.\u200F⁯⁫‭⁬‎⁮‭‏⁮⁪⁪⁭⁬‫‭‪⁮⁮⁬‪‬⁬⁯‭‫⁫‏‌⁫⁭‏⁭‍⁪⁯‏‭‎⁯‮(aData);
      try
      {
        return JSONNode.Deserialize(aReader);
      }
      finally
      {
        if (aReader != null)
        {
label_3:
          int num1 = -1344773952;
          while (true)
          {
            uint num2;
            switch ((num2 = (uint) (num1 ^ -423562733)) % 3U)
            {
              case 1:
                JSONNode.\u200E‮⁮​‍‫‬‏⁯⁮⁬‌⁪‌‭‌‌⁯‬‏​‌‬⁯⁬‌‪‮‬‎‪⁮⁮‏‭⁮‏‫⁫‌‮((IDisposable) aReader);
                num1 = (int) num2 * 1692133144 ^ -880476353;
                continue;
              case 2:
                goto label_3;
              default:
                goto label_6;
            }
          }
        }
label_6:;
      }
    }

    public static JSONNode LoadFromFile(string aFileName)
    {
      FileStream aData = JSONNode.\u206F‌‎⁫⁭‮​⁫⁯‪⁮​‌‍‏‌⁫​‎‏⁭⁬‫‫‌‎‭⁬​‬⁮‍‍‫⁪‮⁪‏‬‍‮(aFileName);
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = -1542398832;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -961651536)) % 3U)
          {
            case 1:
              jsonNode = JSONNode.LoadFromStream((Stream) aData);
              num1 = (int) num2 * 1961335709 ^ -576265140;
              continue;
            case 2:
              goto label_2;
            default:
              goto label_11;
          }
        }
      }
      finally
      {
        if (aData != null)
        {
label_6:
          int num3 = -964756211;
          while (true)
          {
            uint num4;
            switch ((num4 = (uint) (num3 ^ -961651536)) % 4U)
            {
              case 0:
                goto label_6;
              case 1:
                JSONNode.\u200E‮⁮​‍‫‬‏⁯⁮⁬‌⁪‌‭‌‌⁯‬‏​‌‬⁯⁬‌‪‮‬‎‪⁮⁮‏‭⁮‏‫⁫‌‮((IDisposable) aData);
                num3 = (int) num4 * 278200499 ^ 1274323468;
                continue;
              case 3:
                num3 = (int) num4 * -1115685582 ^ 364825776;
                continue;
              default:
                goto label_10;
            }
          }
        }
label_10:;
      }
label_11:
      return jsonNode;
    }

    public static JSONNode LoadFromBase64(string aBase64)
    {
label_1:
      int num1 = -2140164086;
      byte[] numArray;
      MemoryStream aData;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1118342970)) % 7U)
        {
          case 1:
            aData = JSONNode.\u206A⁭‮‏‎‌⁬​⁮‪‏‪‎⁮‬⁯‫⁫‎‫‮​⁫⁫⁪‫‎⁯⁭‎⁯⁭⁯⁫‭⁬‏⁮⁮‮‮(numArray);
            JSONNode.\u200C‭‎‏‮‎​⁪⁪⁪‌‫⁫‮⁪‫‏​‌‫⁮‍⁯⁫⁯‌⁯⁯‍⁯‍‍⁪‏‮​⁫‍⁫‬‮((Stream) aData, 0L);
            num1 = (int) num2 * -954637315 ^ 1764245684;
            continue;
          case 2:
            jsonNode = JSONNode.LoadFromStream((Stream) aData);
            num1 = (int) num2 * -778435835 ^ 1373959419;
            continue;
          case 3:
            num1 = (int) num2 * 848880280 ^ 94805873;
            continue;
          case 4:
            numArray = JSONNode.\u200B‪​⁮‫⁪‏‎⁭‮⁭⁮‪‌‌‭⁭‭‍‌‍‭⁭‭⁬⁮⁯‬‮‮⁭⁬‭‍​‌⁬‍‫‫‮(aBase64);
            num1 = (int) num2 * 289414484 ^ -80163088;
            continue;
          case 5:
            num1 = (int) num2 * 2138129306 ^ 1614243943;
            continue;
          case 6:
            goto label_1;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode;
    }

    static CultureInfo \u206D‪⁭‎‮⁮​⁫‬⁬‍⁬⁭‎⁫‭⁫‏‬‪⁯⁪⁯‌‍‫⁮‭‪⁭‬⁯‌⁯⁭⁬‪‌‬‪‮() => CultureInfo.InvariantCulture;

    static bool \u206B‌‎‮⁬‎‪‎⁮‫⁮⁯⁮‏​‎⁭‎⁫‫‌⁫‬‫‍‮⁮‪⁮⁬⁪‮‭‮‍⁫⁫⁪⁫⁭‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    int \u206B⁯⁭⁭‎‪⁭⁪⁬‮⁭‌‭​⁪⁭⁪‌⁮‪‫‪‬‪⁯‮‮‪‬⁫⁯‭​‮⁮⁮⁪⁮‏‮‮() => base.GetHashCode();

    static char \u206E⁫‪⁯‍‫‬⁪‬​‫⁮⁬‫‮‏⁪‏⁭‎‬‬‪⁫‪‍⁮‮‏‭‎‮‬‫⁫‪‪‮‭‪‮([In] string obj0, [In] int obj1) => obj0[obj1];

    static string \u206A‎‪​‌‪‪⁬‫‌⁭‮⁬‭‪‭‍⁫‍​⁯‏‏⁬‫‮⁫‏⁭⁬‌‌‍⁬‭‮‮⁪‏‪‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static int \u206A⁪‭⁬⁬‭‭‌⁬‮⁫‪⁬‮⁪‌‫⁮​⁯‪‬‮⁫‏‫⁮‮‮‬‬‌‮⁭⁪⁫‏⁮⁫⁭‮([In] string obj0) => obj0.Length;

    static string \u206E‮⁯‏‫⁭‏‫‌‮⁪‭‭‭⁮‍‮‍‪‎‍​‪​‏‭‍⁬‭⁯‭‎‮⁭‌⁭‫⁪⁯⁫‮([In] string obj0) => obj0.Trim();

    static bool \u202E‭⁪‫⁯​‮​‭⁪‫⁬‬‍⁭‭⁮⁯⁫⁯‎‭‎‬‌‌‍​⁮⁯⁭⁯⁬‮⁫⁬⁪‍​‬‮([In] string obj0, [In] string obj1) => obj0 != obj1;

    static Exception \u202D‪‭⁯‌⁫‏‪⁫​‌​‌⁮⁬​​‫⁫⁪‫​‍​‫​‬⁭⁮‫⁬‏⁪​‭⁭‪​​⁫‮([In] string obj0) => new Exception(obj0);

    static string \u200B​⁪‬⁪‬‮‮‫⁮⁪‭⁬‌⁬‍​⁮‎⁬⁬⁬⁭‌‭‬​⁯‪⁫​⁯‌⁯‎‭‪⁫‬‮‮([In] string obj0, [In] int obj1, [In] int obj2) => obj0.Substring(obj1, obj2);

    static BinaryWriter \u206D‬​‌‫⁪‌‏‌⁭​‬⁯​⁪‭⁫⁫‪⁬‌⁪‎‍‪‎⁮​⁫‮​⁪‫‍⁫⁪‏‌‌‮‮([In] Stream obj0) => new BinaryWriter(obj0);

    static FileInfo \u200C‫​‍‬‫‏​⁪‌‏⁬⁬‌‭⁯‪⁭‍⁭‌⁬⁬‭‎​‬‌‮‫‏⁭⁭‌⁫‭‫‍⁬‬‮([In] string obj0) => new FileInfo(obj0);

    static DirectoryInfo \u202D‏‮‎‎‏‪⁯‬‏⁬‎‮‮​​​⁭‌⁫⁬‬‮⁮‮⁪‎‮⁯‬‌⁬‭‌⁬‫‭‍‫⁯‮([In] FileInfo obj0) => obj0.Directory;

    static string \u202E⁮‍‍⁯⁭‪‪⁬​‮‏‌⁭‪⁮‌‬⁫‍⁫‌‮⁫​⁭‮‌‏‬‍⁯⁬‬⁭‏⁮⁬‬⁭‮([In] FileSystemInfo obj0) => obj0.FullName;

    static DirectoryInfo \u206F‬‍‎‪​​⁭‌⁫‬‮‪‍⁪‏⁮‏‫‌‍⁬​‭‎‪⁯‫‍‭‌‌‪‌⁬‬⁬‮⁯⁭‮([In] string obj0) => Directory.CreateDirectory(obj0);

    static FileStream \u206F⁯⁪⁯⁫‬⁯⁫‏‪​‌‬⁮⁯⁭‫⁭⁬‭‎⁭⁫⁮‮‪‫‌‬⁮‪‏​‭‍‪‌‭‎‬‮([In] string obj0) => File.OpenWrite(obj0);

    static void \u200E‮⁮​‍‫‬‏⁯⁮⁬‌⁪‌‭‌‌⁯‬‏​‌‬⁯⁬‌‪‮‬‎‪⁮⁮‏‭⁮‏‫⁫‌‮([In] IDisposable obj0) => obj0.Dispose();

    static MemoryStream \u202B‪⁫‏​⁬‭‏‬⁭‎‫‬‎‌‌​‭‍⁯‏⁭‮‎‭⁫‫‭‏‭‍⁭‫‌‎⁬⁬​‎⁮‮() => new MemoryStream();

    static void \u200C‭‎‏‮‎​⁪⁪⁪‌‫⁫‮⁪‫‏​‌‫⁮‍⁯⁫⁯‌⁯⁯‍⁯‍‍⁪‏‮​⁫‍⁫‬‮([In] Stream obj0, [In] long obj1) => obj0.Position = obj1;

    static byte[] \u202C⁪‍‍‍‬‏‪‮⁭⁭⁬‍​⁯⁭⁭⁫‭⁭‌​​​⁯‍‎⁪‪⁭‍⁮⁮‎⁪‍⁫‏‪‌‮([In] MemoryStream obj0) => obj0.ToArray();

    static string \u202D⁮‭‬​‪⁬‏‭‭‌‬⁫‍⁬‪⁯⁮​‭‬‬⁮‭​‍⁬‪‬‪‍‌‬‮‬‬‏‏‍⁬‮([In] byte[] obj0) => Convert.ToBase64String(obj0);

    static byte \u200B⁮⁭‪⁯‌‬‮‪‍⁪⁬​‮‬⁪​‪⁪‭‍⁪⁪​‍⁭‎‫‍⁬‬⁫⁫‭⁬‍⁮⁯⁭‬‮([In] BinaryReader obj0) => obj0.ReadByte();

    static int \u206C⁮‫‮‌‎⁭⁪‫⁪⁬‏‬‎‬‎⁬‬‌‮‬​‫‎‌⁬‏⁫⁭‍​⁯​⁪‬‍⁯⁪‎‮([In] BinaryReader obj0) => obj0.ReadInt32();

    static string \u200E⁯‌⁮‭⁫⁫‪‮‫‮‫⁭‎‍⁯⁭‫‮⁪‌⁭​⁮⁯⁮⁭‫⁭⁫‍‫‬‎⁭‎⁮‫‍⁭‮([In] BinaryReader obj0) => obj0.ReadString();

    static double \u200B‪⁭⁫‍‬⁪‎‮‎‮‪​‬⁪‮​‪​⁪‪‮‬‭⁬‬‪‫‍‍‭‭‭‎‌‏⁪‌‍‪‮([In] BinaryReader obj0) => obj0.ReadDouble();

    static bool \u200F‪​⁯‮‮⁬‬‎⁭‬‍⁫⁪‬‪⁫⁫‏⁫‪⁫‏‏⁭​​‎​‫⁮⁪⁬⁮‏‏‍​‎‬‮([In] BinaryReader obj0) => obj0.ReadBoolean();

    static float \u202A‏‭⁫‌‎‌‌⁬‌⁬⁭‪⁬‎‌‎⁭‌​‬‌‮‎⁯‮‮‍⁮⁬⁪⁪⁫‎⁫⁮​⁮‍‌‮([In] BinaryReader obj0) => obj0.ReadSingle();

    static BinaryReader \u200F⁯⁫‭⁬‎⁮‭‏⁮⁪⁪⁭⁬‫‭‪⁮⁮⁬‪‬⁬⁯‭‫⁫‏‌⁫⁭‏⁭‍⁪⁯‏‭‎⁯‮([In] Stream obj0) => new BinaryReader(obj0);

    static FileStream \u206F‌‎⁫⁭‮​⁫⁯‪⁮​‌‍‏‌⁫​‎‏⁭⁬‫‫‌‎‭⁬​‬⁮‍‍‫⁪‮⁪‏‬‍‮([In] string obj0) => File.OpenRead(obj0);

    static byte[] \u200B‪​⁮‫⁪‏‎⁭‮⁭⁮‪‌‌‭⁭‭‍‌‍‭⁭‭⁬⁮⁯‬‮‮⁭⁬‭‍​‌⁬‍‫‫‮([In] string obj0) => Convert.FromBase64String(obj0);

    static MemoryStream \u206A⁭‮‏‎‌⁬​⁮‪‏‪‎⁮‬⁯‫⁫‎‫‮​⁫⁫⁪‫‎⁯⁭‎⁯⁭⁯⁫‭⁬‏⁮⁮‮‮([In] byte[] obj0) => new MemoryStream(obj0);
  }
}
