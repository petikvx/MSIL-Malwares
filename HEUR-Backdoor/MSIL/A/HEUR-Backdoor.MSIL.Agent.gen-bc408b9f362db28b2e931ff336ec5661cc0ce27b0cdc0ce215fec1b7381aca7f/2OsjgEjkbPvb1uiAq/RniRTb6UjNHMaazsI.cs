// Decompiled with JetBrains decompiler
// Type: 2OsjgEjkbPvb1uiAq.RniRTb6UjNHMaazsI
// Assembly: bouNMGxVgGi4SRgWO, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60
// MVID: 3F6A2AF1-3CCB-4F01-AA36-FA31C2E4CFE8
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Backdoor.MSIL.Agent.gen-bc408b9f362db28b2e931ff336ec5661cc0ce27b0cdc0ce215fec1b7381aca7f.exe

using \u0032fkOaOhZGEepEwpab;
using \u0036U2kfZH5DhrhBSYzv;
using j4DHwrV6JCjgxt2wB;
using LGBFLu7kxvlJd4Peo;
using Microsoft.TemplateEngine.Abstractions;
using Microsoft.TemplateEngine.Utils;
using n0fzGXNEUEYJPQZNk;
using Newtonsoft.Json.Linq;
using System.Collections.Generic;
using WogY6X1aaeLooV5jy;
using xfZKzaSkSLrgpHW2w;
using zjOMGQo4U7RNSpo2h;

namespace \u0032OsjgEjkbPvb1uiAq
{
  internal class RniRTb6UjNHMaazsI
  {
    internal const string tNvJVvrnPAuc8VG3V = "bind";

    public static ISymbolModel xk1GQrUJtuMqWO0rs(
      JObject iFNfePSVpaiiGZFsz,
      IParameterSymbolLocalizationModel GLzH2JYEL8St818dr,
      string QwW80Xnqelx5vbpTf)
    {
      switch (((JToken) iFNfePSVpaiiGZFsz).nVxA6yY1QJJUqxmoF("Type"))
      {
        case "parameter":
          return idfJM0qRwwmLv7zQL.ST7HT1KyMke16ycI8(iFNfePSVpaiiGZFsz, GLzH2JYEL8St818dr, QwW80Xnqelx5vbpTf);
        case "derived":
          return Oielu8W9Wy7GoejSW.HWkTHnG1MDhb2sN0C(iFNfePSVpaiiGZFsz, GLzH2JYEL8St818dr, QwW80Xnqelx5vbpTf);
        case "computed":
          return AyqcuxVcJ8YI7wQd2.z7PX5tzkdE76LSsg8(iFNfePSVpaiiGZFsz);
        case "bind":
        case "generated":
          return (ISymbolModel) BtvoaFSFsAqYXhV68.mkg2tAVIAKOjfv93z(iFNfePSVpaiiGZFsz);
        default:
          return (ISymbolModel) null;
      }
    }

    internal static IReadOnlyList<IReplacementContext> zo3YFHNoA3XOdcvZJ(
      JObject HQzmPaIzoH9j7zYmH)
    {
      JArray jarray = ((JToken) HQzmPaIzoH9j7zYmH).\u0031vBBMQzfHYmTLYt7h<JArray>("onlyIf");
      if (jarray == null)
        return Empty<IReplacementContext>.List.Value;
      List<IReplacementContext> replacementContextList = new List<IReplacementContext>();
      foreach (JToken child in ((JToken) jarray).Children())
      {
        if (child is JObject)
        {
          string before = child.nVxA6yY1QJJUqxmoF("before");
          string after = child.nVxA6yY1QJJUqxmoF("after");
          replacementContextList.Add((IReplacementContext) new QJG4UN20I4CnVMPxO(before, after));
        }
      }
      return (IReadOnlyList<IReplacementContext>) replacementContextList;
    }
  }
}
