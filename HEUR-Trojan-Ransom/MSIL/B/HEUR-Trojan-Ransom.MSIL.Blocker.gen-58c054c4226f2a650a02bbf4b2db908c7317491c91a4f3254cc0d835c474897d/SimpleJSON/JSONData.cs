// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONData
// Assembly: EraIn, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: DF309F35-9A6B-48AA-8FAD-6A916AD051A5
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-58c054c4226f2a650a02bbf4b2db908c7317491c91a4f3254cc0d835c474897d.exe

using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONData : JSONNode
  {
    private string m_Data;

    public override string Value
    {
      get
      {
label_1:
        int num1 = -258055469;
        string data;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -754398352)) % 3U)
          {
            case 0:
              goto label_1;
            case 1:
              data = this.m_Data;
              num1 = (int) num2 * -1231514886 ^ -111567353;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return data;
      }
      set => this.m_Data = value;
    }

    public JSONData(string aData)
    {
label_1:
      int num1 = -1193676541;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -11671880)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 1121409706 ^ 1237464755;
            continue;
          case 3:
            this.m_Data = aData;
            num1 = (int) num2 * -1839794417 ^ 1539208336;
            continue;
          case 4:
            num1 = (int) num2 * -1353976908 ^ 1477294937;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(float aData)
    {
label_1:
      int num1 = -1150029738;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1556063453)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -1923722127 ^ -235369292;
            continue;
          case 3:
            num1 = (int) num2 * -903211706 ^ -625308104;
            continue;
          case 4:
            this.AsFloat = aData;
            num1 = (int) num2 * 880430295 ^ -1675478330;
            continue;
          default:
            goto label_7;
        }
      }
label_3:
      return;
label_7:;
    }

    public JSONData(double aData)
    {
label_1:
      int num1 = -1592889326;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -495937101)) % 4U)
        {
          case 0:
            this.AsDouble = aData;
            num1 = (int) num2 * -1671179205 ^ -1067143928;
            continue;
          case 1:
            num1 = (int) num2 * 2049686803 ^ 1262199732;
            continue;
          case 2:
            goto label_1;
          case 3:
            goto label_3;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    public JSONData(bool aData) => this.AsBool = aData;

    public JSONData(int aData)
    {
label_1:
      int num1 = -2026036466;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -784728091)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -2027578868 ^ 1210925996;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      this.AsInt = aData;
    }

    public override string ToString()
    {
label_1:
      int num1 = -132746260;
      string str;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -615377942)) % 4U)
        {
          case 0:
            goto label_1;
          case 2:
            str = JSONData.\u200B‌⁫⁮⁪‎‪​‏‎‭‌⁫‏‎‮​‎‎‎‫‌‬⁮‬​‎‫‏​‭‮‌⁫⁮⁯‌‏‍⁪‮("\"", JSONNode.Escape(this.m_Data), "\"");
            num1 = (int) num2 * -1254063713 ^ 855431707;
            continue;
          case 3:
            num1 = (int) num2 * 1098797698 ^ -481968455;
            continue;
          default:
            goto label_5;
        }
      }
label_5:
      return str;
    }

    public override string ToString(string aPrefix) => JSONData.\u200B‌⁫⁮⁪‎‪​‏‎‭‌⁫‏‎‮​‎‎‎‫‌‬⁮‬​‎‫‏​‭‮‌⁫⁮⁯‌‏‍⁪‮("\"", JSONNode.Escape(this.m_Data), "\"");

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = 359992431;
      JSONData jsonData;
      bool flag1;
      bool flag2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 434524237)) % 31U)
        {
          case 0:
            goto label_1;
          case 1:
            jsonData.AsBool = this.AsBool;
            num1 = 1232150205;
            continue;
          case 2:
            JSONData.\u206C⁮‫⁬‭⁬‫‭⁭⁬‌‏‏⁭‎‪‬⁮⁪​​‮⁭‭‌⁬​‎⁪‌‪⁯⁯⁯‎‮‮⁪‭‏‮(aWriter, (byte) 7);
            num1 = (int) num2 * -1335439621 ^ 1162105579;
            continue;
          case 3:
            JSONData.\u206C⁮‫⁬‭⁬‫‭⁭⁬‌‏‏⁭‎‪‬⁮⁪​​‮⁭‭‌⁬​‎⁪‌‪⁯⁯⁯‎‮‮⁪‭‏‮(aWriter, (byte) 5);
            num1 = (int) num2 * 292176430 ^ 1777811283;
            continue;
          case 4:
            num1 = (int) num2 * -516593817 ^ 1315737908;
            continue;
          case 5:
            int num3 = !JSONData.\u202B‮⁪⁮⁮⁭‪⁫‌‎⁮⁭⁯​​⁮⁫​⁯‍⁭⁫‪‬⁮‎⁫‎‫‭⁮⁮‫⁮⁫‌⁪‎‏‎‮(jsonData.m_Data, this.m_Data) ? 1614645649 : (num3 = 1961006592);
            num1 = num3 ^ (int) num2 * -932765430;
            continue;
          case 6:
            JSONData.\u202D‫‎‭‌‪​‏‏‍⁫‪‫⁪‍⁪⁬‫‍‮⁬‫‬⁬⁯‌‍⁬‏‏‍‭‌‎⁬⁯‮⁬‬⁯‮(aWriter, this.AsInt);
            num1 = (int) num2 * -1090030078 ^ 1981298514;
            continue;
          case 7:
            goto label_3;
          case 8:
            jsonData.AsInt = this.AsInt;
            num1 = (int) num2 * -1417963230 ^ 2082086358;
            continue;
          case 9:
            num1 = (int) num2 * 893392810 ^ -1805178284;
            continue;
          case 10:
            num1 = (int) num2 * -961047932 ^ -1294779534;
            continue;
          case 11:
            int num4 = !flag2 ? -1814372808 : (num4 = -1063193962);
            num1 = num4 ^ (int) num2 * -1041988118;
            continue;
          case 12:
            JSONData.\u206C⁮‫⁬‭⁬‫‭⁭⁬‌‏‏⁭‎‪‬⁮⁪​​‮⁭‭‌⁬​‎⁪‌‪⁯⁯⁯‎‮‮⁪‭‏‮(aWriter, (byte) 6);
            JSONData.\u206E‫⁯⁭‌⁬‍‍⁫⁮‎‪​‌‬‫‫⁭⁫​‬‭‍⁭⁬‍⁫⁪​⁭‍‍​⁭‍‮⁪⁯‫⁫‮(aWriter, this.AsBool);
            num1 = (int) num2 * -109789759 ^ 1165273536;
            continue;
          case 13:
            num1 = (int) num2 * -1746234688 ^ -976280620;
            continue;
          case 14:
            num1 = (int) num2 * 671756065 ^ -680082594;
            continue;
          case 15:
            JSONData.\u202E‮‍‭⁬‭‪‎⁯⁯⁬​​‪⁪‏⁭‍‎‬‭⁪​⁪⁪⁪‌⁬‍‎‮‭​⁮‌⁮​⁯‪⁪‮(aWriter, this.AsFloat);
            num1 = (int) num2 * -1470339390 ^ -1863023647;
            continue;
          case 16:
            jsonData = new JSONData("");
            num1 = (int) num2 * -491362406 ^ 256079527;
            continue;
          case 17:
            JSONData.\u206C⁮‫⁬‭⁬‫‭⁭⁬‌‏‏⁭‎‪‬⁮⁪​​‮⁭‭‌⁬​‎⁪‌‪⁯⁯⁯‎‮‮⁪‭‏‮(aWriter, (byte) 4);
            num1 = (int) num2 * -583605945 ^ 1314195880;
            continue;
          case 18:
            JSONData.\u200C⁬⁪‏⁮‍‍⁬‏‬‫⁯⁬‪‍⁭⁭‬‬​⁬‪‏‪‭‌​​‮‫⁮⁮‎‮‮⁭⁯⁪⁭‫‮(aWriter, this.AsDouble);
            num1 = (int) num2 * 229695187 ^ -1054550418;
            continue;
          case 19:
            num1 = (int) num2 * 79060570 ^ -501755534;
            continue;
          case 20:
            jsonData.AsFloat = this.AsFloat;
            num1 = 1001137536;
            continue;
          case 21:
            int num5 = !flag1 ? -483581058 : (num5 = -812818455);
            num1 = num5 ^ (int) num2 * -2571872;
            continue;
          case 22:
            flag2 = JSONData.\u202B‮⁪⁮⁮⁭‪⁫‌‎⁮⁭⁯​​⁮⁫​⁯‍⁭⁫‪‬⁮‎⁫‎‫‭⁮⁮‫⁮⁫‌⁪‎‏‎‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 2032735469 ^ 225770627;
            continue;
          case 23:
            num1 = (int) num2 * 2023658022 ^ -296201726;
            continue;
          case 24:
            num1 = (int) num2 * -1010376352 ^ -1594423948;
            continue;
          case 25:
            jsonData.AsDouble = this.AsDouble;
            num1 = 2128637091;
            continue;
          case 26:
            num1 = (int) num2 * 300121878 ^ -1185989118;
            continue;
          case 27:
            int num6 = !JSONData.\u202B‮⁪⁮⁮⁭‪⁫‌‎⁮⁭⁯​​⁮⁫​⁯‍⁭⁫‪‬⁮‎⁫‎‫‭⁮⁮‫⁮⁫‌⁪‎‏‎‮(jsonData.m_Data, this.m_Data) ? 1384072600 : (num6 = 1901993465);
            num1 = num6 ^ (int) num2 * 194328562;
            continue;
          case 28:
            flag1 = JSONData.\u202B‮⁪⁮⁮⁭‪⁫‌‎⁮⁭⁯​​⁮⁫​⁯‍⁭⁫‪‬⁮‎⁫‎‫‭⁮⁮‫⁮⁫‌⁪‎‏‎‮(jsonData.m_Data, this.m_Data);
            num1 = (int) num2 * 124880652 ^ -1779396744;
            continue;
          case 29:
            JSONData.\u206C⁮‫⁬‭⁬‫‭⁭⁬‌‏‏⁭‎‪‬⁮⁪​​‮⁭‭‌⁬​‎⁪‌‪⁯⁯⁯‎‮‮⁪‭‏‮(aWriter, (byte) 3);
            JSONData.\u202D⁪‬⁯⁪‍⁬⁮‌⁯‍⁯‬‭⁯‮‍⁬‍‎‮‎‌‫⁭‍‎⁭‫‏⁬‏‮⁯‫‮‌⁯‍‌‮(aWriter, this.m_Data);
            num1 = 1675475796;
            continue;
          case 30:
            num1 = (int) num2 * -188770810 ^ -1217227938;
            continue;
          default:
            goto label_33;
        }
      }
label_3:
      return;
label_33:;
    }

    static string \u200B‌⁫⁮⁪‎‪​‏‎‭‌⁫‏‎‮​‎‎‎‫‌‬⁮‬​‎‫‏​‭‮‌⁫⁮⁯‌‏‍⁪‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2)
    {
      return obj0 + obj1 + obj2;
    }

    static bool \u202B‮⁪⁮⁮⁭‪⁫‌‎⁮⁭⁯​​⁮⁫​⁯‍⁭⁫‪‬⁮‎⁫‎‫‭⁮⁮‫⁮⁫‌⁪‎‏‎‮([In] string obj0, [In] string obj1) => obj0 == obj1;

    static void \u206C⁮‫⁬‭⁬‫‭⁭⁬‌‏‏⁭‎‪‬⁮⁪​​‮⁭‭‌⁬​‎⁪‌‪⁯⁯⁯‎‮‮⁪‭‏‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u202D‫‎‭‌‪​‏‏‍⁫‪‫⁪‍⁪⁬‫‍‮⁬‫‬⁬⁯‌‍⁬‏‏‍‭‌‎⁬⁯‮⁬‬⁯‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u202E‮‍‭⁬‭‪‎⁯⁯⁬​​‪⁪‏⁭‍‎‬‭⁪​⁪⁪⁪‌⁬‍‎‮‭​⁮‌⁮​⁯‪⁪‮([In] BinaryWriter obj0, [In] float obj1) => obj0.Write(obj1);

    static void \u200C⁬⁪‏⁮‍‍⁬‏‬‫⁯⁬‪‍⁭⁭‬‬​⁬‪‏‪‭‌​​‮‫⁮⁮‎‮‮⁭⁯⁪⁭‫‮([In] BinaryWriter obj0, [In] double obj1) => obj0.Write(obj1);

    static void \u206E‫⁯⁭‌⁬‍‍⁫⁮‎‪​‌‬‫‫⁭⁫​‬‭‍⁭⁬‍⁫⁪​⁭‍‍​⁭‍‮⁪⁯‫⁫‮([In] BinaryWriter obj0, [In] bool obj1) => obj0.Write(obj1);

    static void \u202D⁪‬⁯⁪‍⁬⁮‌⁯‍⁯‬‭⁯‮‍⁬‍‎‮‎‌‫⁭‍‎⁭‫‏⁬‏‮⁯‫‮‌⁯‍‌‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
