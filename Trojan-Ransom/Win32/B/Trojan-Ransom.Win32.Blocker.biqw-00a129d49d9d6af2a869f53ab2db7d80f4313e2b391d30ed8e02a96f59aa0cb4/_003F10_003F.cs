// Decompiled with JetBrains decompiler
// Type: ?10?
// Assembly: wLoader, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 601E9F23-A239-4CA4-BCF6-5BB65F85A0DA
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.biqw-00a129d49d9d6af2a869f53ab2db7d80f4313e2b391d30ed8e02a96f59aa0cb4.exe

using \u003F16\u003F;
using \u003F2\u003F;
using \u003F5\u003F;
using \u003F9\u003F;
using System;
using System.IO;

public sealed class \u003F10\u003F : \u003F8\u003F, \u003F1\u003F
{
  private \u003F6\u003F \u003F1\u003F = new \u003F6\u003F();
  private \u003F15\u003F \u003F2\u003F = new \u003F15\u003F();
  private \u003F13\u003F[] \u003F3\u003F = new \u003F13\u003F[new IntPtr(192)];
  private \u003F13\u003F[] \u003F5\u003F = new \u003F13\u003F[new IntPtr(12)];
  private \u003F13\u003F[] \u003F4\u003F = new \u003F13\u003F[new IntPtr(12)];
  private \u003F13\u003F[] \u003F6\u003F = new \u003F13\u003F[new IntPtr(12)];
  private \u003F13\u003F[] \u003F7\u003F = new \u003F13\u003F[new IntPtr(12)];
  private \u003F13\u003F[] \u003F8\u003F = new \u003F13\u003F[new IntPtr(192)];
  private \u003F14\u003F[] \u003F8\u003F = new \u003F14\u003F[new IntPtr(4)];
  private \u003F13\u003F[] \u003F1\u003F = new \u003F13\u003F[new IntPtr(114)];
  private \u003F14\u003F \u003F8\u003F = new \u003F14\u003F(4);
  private \u003F10\u003F.\u003F1\u003F \u003F8\u003F = new \u003F10\u003F.\u003F1\u003F();
  private \u003F10\u003F.\u003F1\u003F \u003F1\u003F = new \u003F10\u003F.\u003F1\u003F();
  private \u003F10\u003F.\u003F2\u003F \u003F8\u003F = new \u003F10\u003F.\u003F2\u003F();
  private uint \u003F8\u003F;
  private uint \u003F1\u003F;
  private uint \u003F2\u003F;

  public \u003F10\u003F()
  {
    this.\u003F8\u003F = uint.MaxValue;
    for (int index = 0; index < 4; ++index)
      this.\u003F8\u003F[index] = new \u003F14\u003F(6);
  }

  private void \u003F1\u003F(uint _param1)
  {
    if ((int) this.\u003F8\u003F == (int) _param1)
      return;
    this.\u003F8\u003F = _param1;
    this.\u003F1\u003F = Math.Max(this.\u003F8\u003F, 1U);
    uint num1;
    do
    {
      if (true)
        goto label_5;
label_3:
      continue;
label_5:
      int val1 = (int) this.\u003F1\u003F;
      int num2;
      while (true)
      {
        num2 = (int) Math.Max((uint) val1, 4096U);
        if (false)
          val1 = num2;
        else
          break;
      }
      num1 = (uint) num2;
      goto label_3;
    }
    while (false);
    this.\u003F1\u003F.\u003F1\u003F(num1);
  }

  private void \u003F1\u003F(int _param1, int _param2)
  {
    do
    {
      int num = _param1;
      do
      {
        if (true)
          goto label_7;
label_2:
        continue;
label_7:
        if (num <= 8)
        {
          num = _param2;
          goto label_2;
        }
        else
          goto label_3;
      }
      while (false);
      goto label_8;
label_3:
      throw new \u003F8\u003F();
label_8:
      if (num > 8)
        throw new \u003F8\u003F();
      this.\u003F8\u003F.\u003F1\u003F(_param1, _param2);
    }
    while (false);
  }

  private void \u003F1\u003F(int _param1)
  {
label_0:
    int num1 = _param1;
label_1:
    uint num2;
    int num3;
    for (int index = 4; num1 <= index; num1 = num3)
    {
      num3 = 1;
      int num4 = _param1 & 31;
      if (false)
      {
        index = num4;
      }
      else
      {
        int num5 = num3 << num4;
        if (false)
        {
          num1 = num5;
          goto label_1;
        }
        else
        {
          num2 = (uint) num5;
          this.\u003F8\u003F.\u003F1\u003F(num2);
          goto label_6;
        }
      }
    }
    goto label_8;
label_3:
    if (true)
      return;
label_6:
    this.\u003F1\u003F.\u003F1\u003F(num2);
    if (true)
    {
      this.\u003F2\u003F = num2 - 1U;
      goto label_3;
    }
    else
      goto label_0;
label_8:
    if (true)
      throw new \u003F8\u003F();
    goto label_3;
  }

  private void \u003F1\u003F(Stream _param1, Stream _param2)
  {
label_0:
    \u003F15\u003F obj = this.\u003F2\u003F;
    Stream stream = _param1;
    if (true)
      obj.\u003F1\u003F(stream);
    this.\u003F1\u003F.\u003F1\u003F(_param2);
label_1:
    int num1;
    int num2;
    int num3;
    int num4;
    for (uint index1 = 0; index1 < 12U; index1 = (uint) num4)
    {
      uint num5 = 0;
label_4:
      num1 = (int) num5;
      if (true)
      {
        int num6 = (int) this.\u003F2\u003F;
        if ((uint) num1 <= (uint) num6)
          goto label_16;
        else
          goto label_20;
label_5:
        if (true)
        {
          num3 = (int) index1;
          if (true)
          {
            num4 = num3 + 1;
            if (false)
            {
              num2 = num4;
              goto label_12;
            }
            else
              continue;
          }
          else
            goto label_7;
        }
        else
          goto label_1;
label_16:
        uint index2 = (index1 << 4) + num5;
        while (true)
        {
          this.\u003F3\u003F[(IntPtr) index2].\u003F1\u003F();
          if (true)
          {
            this.\u003F8\u003F[(IntPtr) index2].\u003F1\u003F();
            ++num5;
            goto label_4;
          }
        }
        goto label_5;
label_20:
        this.\u003F5\u003F[(IntPtr) index1].\u003F1\u003F();
        this.\u003F4\u003F[(IntPtr) index1].\u003F1\u003F();
        this.\u003F6\u003F[(IntPtr) index1].\u003F1\u003F();
        this.\u003F7\u003F[(IntPtr) index1].\u003F1\u003F();
        goto label_5;
      }
      else
        goto label_11;
    }
    goto label_24;
label_7:
    uint index3 = (uint) num3;
    while (true)
    {
      if (true)
      {
        if (index3 < 4U)
        {
          this.\u003F8\u003F[(IntPtr) index3].\u003F1\u003F();
          ++index3;
        }
        else
          break;
      }
      else
        goto label_0;
    }
    uint index4 = 0;
    goto label_13;
label_11:
    num2 = num1 + 1;
label_12:
    index4 = (uint) num2;
label_13:
    if (index4 < 114U)
    {
      this.\u003F1\u003F[(IntPtr) index4].\u003F1\u003F();
      num1 = (int) index4;
      goto label_11;
    }
    else
    {
      this.\u003F8\u003F.\u003F1\u003F();
      this.\u003F1\u003F.\u003F1\u003F();
      this.\u003F8\u003F.\u003F1\u003F();
      return;
    }
label_24:
    this.\u003F8\u003F.\u003F1\u003F();
    num3 = 0;
    goto label_7;
  }

  public void \u0001(
    Stream _param1,
    Stream _param2,
    long _param3,
    long _param4,
    \u003F8\u003F _param5)
  {
    this.\u003F1\u003F(_param1, _param2);
    \u003F7\u003F.\u003F1\u003F obj = new \u003F7\u003F.\u003F1\u003F();
    obj.\u003F1\u003F();
    uint num1 = 0;
    uint num2 = 0;
    uint num3 = 0;
    uint num4 = 0;
    long num5 = 0;
    while (true)
    {
      if (false)
        goto label_20;
      else
        goto label_23;
label_2:
      ulong num6;
      long num7 = (long) num6;
      ulong num8;
      long num9;
      long num10;
      int num11;
      if ((ulong) num9 < (ulong) num7)
      {
        if (this.\u003F3\u003F[(IntPtr) (obj.\u003F1\u003F << 4)].\u003F1\u003F(this.\u003F2\u003F) == 0U)
        {
          obj.\u003F2\u003F();
          this.\u003F1\u003F.\u003F1\u003F(this.\u003F8\u003F.\u003F1\u003F(this.\u003F2\u003F, 0U, (byte) 0));
          num10 = (long) num8;
          num11 = 1;
          if (num11 != 0)
          {
            long num12 = (long) num11;
            long num13 = num10 + num12;
            if (false)
            {
              num5 = num13;
              continue;
            }
            num8 = (ulong) num13;
            goto label_21;
          }
        }
        else
          goto label_25;
      }
      else
        goto label_21;
label_5:
      long num14 = (long) num11;
      num8 = (ulong) (num10 + num14);
      goto label_21;
label_20:
      num8 = (ulong) num5;
label_21:
      for (; num8 < num6; ++num8)
      {
        uint num15 = (uint) num8 & this.\u003F2\u003F;
        if (this.\u003F3\u003F[(IntPtr) ((obj.\u003F1\u003F << 4) + num15)].\u003F1\u003F(this.\u003F2\u003F) != 0U)
        {
          int num16 = (int) this.\u003F5\u003F[(IntPtr) obj.\u003F1\u003F].\u003F1\u003F(this.\u003F2\u003F);
          uint num17;
          int num18;
          int num19;
          for (int index = 1; num16 != index; num16 = num18)
          {
            num4 = num3;
            num3 = num2;
            num2 = num1;
            num17 = 2U + this.\u003F8\u003F.\u003F1\u003F(this.\u003F2\u003F, num15);
            obj.\u003F3\u003F();
            uint num20 = this.\u003F8\u003F[(IntPtr) \u003F7\u003F.\u003F1\u003F(num17)].\u003F1\u003F(this.\u003F2\u003F);
            if (num20 < 4U)
            {
              num1 = num20;
              goto label_17;
            }
            else
            {
              int num21 = (int) (num20 >> 1) - 1;
              num1 = (uint) ((2 | (int) num20 & 1) << num21);
              if (num20 >= 14U)
              {
                num18 = (int) num1;
                int num22 = (int) this.\u003F2\u003F.\u003F1\u003F(num21 - 4);
                if (false)
                {
                  index = num22;
                }
                else
                {
                  int num23 = num22 << 4;
                  num19 = num18 + num23 + (int) this.\u003F8\u003F.\u003F2\u003F(this.\u003F2\u003F);
                  goto label_15;
                }
              }
              else
              {
                num1 += \u003F14\u003F.\u003F1\u003F(this.\u003F1\u003F, (uint) ((int) num1 - (int) num20 - 1), this.\u003F2\u003F, num21);
                goto label_17;
              }
            }
          }
          goto label_31;
label_15:
          num1 = (uint) num19;
label_17:
          if ((ulong) num1 >= num8 || num1 >= this.\u003F1\u003F)
          {
            if (num1 != uint.MaxValue)
              throw new \u003F1\u003F();
            break;
          }
          this.\u003F1\u003F.\u003F1\u003F(num1, num17);
          num5 = (long) num8 + (long) num17;
          goto label_20;
label_31:
          int num24 = (int) this.\u003F4\u003F[(IntPtr) obj.\u003F1\u003F].\u003F1\u003F(this.\u003F2\u003F);
          if (false)
          {
            num19 = num24;
            goto label_15;
          }
          else
          {
            if (num24 != 0)
            {
              uint num25;
              if (this.\u003F6\u003F[(IntPtr) obj.\u003F1\u003F].\u003F1\u003F(this.\u003F2\u003F) != 0U)
              {
                if (this.\u003F7\u003F[(IntPtr) obj.\u003F1\u003F].\u003F1\u003F(this.\u003F2\u003F) != 0U)
                {
                  num25 = num4;
                  num4 = num3;
                }
                else
                  goto label_36;
label_10:
                num3 = num2;
                goto label_11;
label_36:
                num25 = num3;
                goto label_10;
              }
              else
                goto label_35;
label_11:
              num2 = num1;
              num1 = num25;
              goto label_12;
label_35:
              num25 = num2;
              goto label_11;
            }
            else
              goto label_33;
label_12:
            num17 = this.\u003F1\u003F.\u003F1\u003F(this.\u003F2\u003F, num15) + 2U;
            obj.\u003F5\u003F();
            goto label_17;
label_33:
            if (this.\u003F8\u003F[(IntPtr) ((obj.\u003F1\u003F << 4) + num15)].\u003F1\u003F(this.\u003F2\u003F) == 0U)
            {
              obj.\u003F4\u003F();
              this.\u003F1\u003F.\u003F1\u003F(this.\u003F1\u003F.\u003F1\u003F(num1));
            }
            else
              goto label_12;
          }
        }
        else
        {
          byte num26 = this.\u003F1\u003F.\u003F1\u003F(0U);
          this.\u003F1\u003F.\u003F1\u003F(obj.\u003F1\u003F() ? this.\u003F8\u003F.\u003F1\u003F(this.\u003F2\u003F, (uint) num8, num26) : this.\u003F8\u003F.\u003F1\u003F(this.\u003F2\u003F, (uint) num8, num26, this.\u003F1\u003F.\u003F1\u003F(num1)));
          obj.\u003F2\u003F();
          num9 = (long) num8;
          if (true)
          {
            num11 = 1;
            num10 = num9;
            goto label_5;
          }
          else
            goto label_2;
        }
      }
      break;
label_23:
      num8 = (ulong) num5;
      num6 = (ulong) _param4;
      num9 = (long) num8;
      goto label_2;
    }
    this.\u003F1\u003F.\u003F2\u003F();
    this.\u003F1\u003F.\u003F1\u003F();
    this.\u003F2\u003F.\u003F1\u003F();
    return;
label_25:
    throw new \u003F1\u003F();
  }

  public void \u0001(byte[] _param1)
  {
    int num1 = _param1.Length;
label_1:
    if (false)
      goto label_6;
    else
      goto label_11;
label_2:
    int num2;
    int num3;
    int num4 = num2 / num3;
    if (num4 > 4)
      throw new \u003F8\u003F();
    uint num5 = 0;
    int num6 = 0;
label_5:
    num1 = num6;
label_6:
    int num7;
    int num8;
    int num9;
    int num10;
    if (true)
    {
      if (num1 < 4)
      {
        num5 += (uint) _param1[1 + num6] << num6 * 8;
        num9 = num6;
        num10 = 1;
        if (num10 != 0)
        {
          if (num10 == 0)
          {
            num3 = num10;
            num2 = num9;
            goto label_2;
          }
          else
          {
            num6 = num9 + num10;
            goto label_5;
          }
        }
        else
          goto label_12;
      }
      else
      {
        this.\u003F1\u003F(num5);
        this.\u003F1\u003F(num8, num7);
        this.\u003F1\u003F(num4);
        if (true)
          return;
        goto label_9;
      }
    }
    else
      goto label_1;
label_7:
    throw new \u003F8\u003F();
label_9:
    int num11;
    num8 = num11 % 5;
    if (true)
    {
      num2 = num11;
      num3 = 5;
      goto label_2;
    }
    else
      goto label_7;
label_11:
    int num12 = num1;
    num10 = 5;
    num9 = num12;
label_12:
    if (num9 >= num10)
    {
      num7 = (int) _param1[0] % 9;
      num11 = (int) _param1[0] / 9;
      goto label_9;
    }
    else
      goto label_7;
  }

  private sealed class \u003F1\u003F
  {
    private \u003F13\u003F \u003F1\u003F = new \u003F13\u003F();
    private \u003F13\u003F \u003F2\u003F = new \u003F13\u003F();
    private \u003F14\u003F[] \u003F3\u003F = new \u003F14\u003F[new IntPtr(16)];
    private \u003F14\u003F[] \u003F5\u003F = new \u003F14\u003F[new IntPtr(16)];
    private \u003F14\u003F \u003F4\u003F = new \u003F14\u003F(8);
    private uint \u003F6\u003F;

    public void \u003F1\u003F(uint _param1)
    {
      for (uint index = this.\u003F6\u003F; index < _param1; index++)
      {
        this.\u003F3\u003F[(IntPtr) index] = new \u003F14\u003F(3);
        this.\u003F5\u003F[(IntPtr) index] = new \u003F14\u003F(3);
      }
      this.\u003F6\u003F = _param1;
    }

    public void \u003F1\u003F()
    {
label_0:
      do
      {
        this.\u003F1\u003F.\u003F1\u003F();
        int num1 = 0;
label_2:
        uint index = (uint) num1;
        while (index < this.\u003F6\u003F)
        {
          this.\u003F3\u003F[(IntPtr) index].\u003F1\u003F();
          this.\u003F5\u003F[(IntPtr) index].\u003F1\u003F();
          if (true)
          {
            if (true)
            {
              int num2 = (int) index;
              if (false)
              {
                num1 = num2;
                goto label_2;
              }
              else
              {
                int num3 = num2 + 1;
                if (false)
                {
                  num1 = num3;
                  goto label_2;
                }
                else
                  index = (uint) num3;
              }
            }
          }
          else
            goto label_0;
        }
        this.\u003F2\u003F.\u003F1\u003F();
        this.\u003F4\u003F.\u003F1\u003F();
      }
      while (false);
    }

    public uint \u003F1\u003F(\u003F15\u003F _param1, uint _param2)
    {
      if (true)
        goto label_7;
label_6:
      uint num1;
      return num1;
label_7:
      int num2;
      if (this.\u003F1\u003F.\u003F1\u003F(_param1) != 0U)
      {
        num1 = 8U;
        if (true)
          goto label_9;
label_3:
        int num3 = (int) num1;
label_4:
        int num4 = (int) this.\u003F4\u003F.\u003F1\u003F(_param1);
        num2 = num3 + num4;
        goto label_5;
label_9:
        if (this.\u003F2\u003F.\u003F1\u003F(_param1) != 0U)
        {
          if (true)
          {
            num1 += 8U;
            goto label_3;
          }
          else
            goto label_6;
        }
        else
        {
          int num5 = (int) num1;
          if (false)
          {
            num3 = num5;
            goto label_4;
          }
          else
          {
            int num6 = (int) this.\u003F5\u003F[(IntPtr) _param2].\u003F1\u003F(_param1);
            num1 = (uint) (num5 + num6);
            goto label_6;
          }
        }
      }
      else
        goto label_8;
label_5:
      num1 = (uint) num2;
      goto label_6;
label_8:
      int num7 = (int) this.\u003F3\u003F[(IntPtr) _param2].\u003F1\u003F(_param1);
      if (true)
        return (uint) num7;
      num2 = num7;
      goto label_5;
    }
  }

  private sealed class \u003F2\u003F
  {
    private \u003F10\u003F.\u003F2\u003F.\u003F1\u003F[] \u003F1\u003F;
    private int \u003F2\u003F;
    private int \u003F3\u003F;
    private uint \u003F5\u003F;

    public void \u003F1\u003F(int _param1, int _param2)
    {
      if (this.\u003F1\u003F == null || this.\u003F2\u003F != _param2)
        goto label_10;
      else
        goto label_12;
label_1:
      this.\u003F2\u003F = _param2;
label_2:
      int num1 = this.\u003F2\u003F;
      int num2 = this.\u003F3\u003F;
      if (true)
        goto label_14;
label_3:
      uint length = (uint) (1 << (num1 & num2));
      if (true)
      {
        this.\u003F1\u003F = new \u003F10\u003F.\u003F2\u003F.\u003F1\u003F[(IntPtr) length];
        goto label_4;
      }
      else
        goto label_1;
label_14:
      int num3 = num1 + num2;
      num2 = 31;
      num1 = num3;
      goto label_3;
label_4:
      uint index = 0;
      if (false)
        goto label_2;
      else
        goto label_7;
label_6:
      int num4;
      index = (uint) (num4 + 1);
label_7:
      if (index >= length)
        return;
      this.\u003F1\u003F[(IntPtr) index].\u003F1\u003F();
      if (true)
      {
        num4 = (int) index;
        goto label_6;
      }
      else
        goto label_4;
label_10:
      this.\u003F3\u003F = _param1;
label_11:
      this.\u003F5\u003F = (uint) ((1 << _param1) - 1);
      goto label_1;
label_12:
      if (true)
      {
        int num5 = this.\u003F3\u003F;
        if (false)
        {
          num4 = num5;
          goto label_6;
        }
        else
        {
          int num6 = _param1;
          if (num5 != num6)
            goto label_10;
        }
      }
      else
        goto label_11;
    }

    public void \u003F1\u003F()
    {
label_0:
      int num1 = this.\u003F2\u003F;
      int num2;
      while (true)
      {
        int num3 = this.\u003F3\u003F;
        if (true)
          goto label_7;
label_1:
        num2 = num1 & num3;
        if (false)
        {
          num1 = num2;
          continue;
        }
        break;
label_7:
        int num4 = num1 + num3;
        num3 = 31;
        num1 = num4;
        goto label_1;
      }
      uint num5 = (uint) (1 << num2);
      int num6;
      if (true)
      {
        for (uint index = 0; index < num5; index = (uint) num6)
        {
          this.\u003F1\u003F[(IntPtr) index].\u003F2\u003F();
          int num7 = (int) index;
          while (true)
          {
            num6 = num7 + 1;
            if (false)
              num7 = num6;
            else
              break;
          }
        }
      }
      else
        goto label_0;
    }

    private uint \u003F1\u003F(uint _param1, byte _param2)
    {
      int num1 = (int) _param1;
      int num2 = (int) this.\u003F5\u003F;
      if (true)
        goto label_6;
label_1:
      int num3 = num1 << num2;
      int num4 = (int) _param2;
      int num5 = 8;
label_2:
      if (num5 != 0)
        goto label_5;
label_4:
      int num6 = num4 >> num5;
      return (uint) (num3 + num6);
label_5:
      int num7 = this.\u003F2\u003F;
      if (true)
        goto label_8;
label_3:
      num5 &= num7;
      goto label_4;
label_8:
      int num8 = num5 - num7;
      num7 = 31;
      num5 = num8;
      goto label_3;
label_6:
      int num9 = num1 & num2;
      int num10 = this.\u003F2\u003F;
      int num11 = 31;
      if (num11 == 0)
      {
        num5 = num11;
        num4 = num10;
        num3 = num9;
        goto label_2;
      }
      else
      {
        num2 = num10 & num11;
        num1 = num9;
        goto label_1;
      }
    }

    public byte \u003F1\u003F(\u003F15\u003F _param1, uint _param2, byte _param3) => this.\u003F1\u003F[(IntPtr) this.\u003F1\u003F(_param2, _param3)].\u003F1\u003F(_param1);

    public byte \u003F1\u003F(\u003F15\u003F _param1, uint _param2, byte _param3, byte _param4) => this.\u003F1\u003F[(IntPtr) this.\u003F1\u003F(_param2, _param3)].\u003F1\u003F(_param1, _param4);

    private struct \u003F1\u003F
    {
      private \u003F13\u003F[] \u003F1\u003F;

      public void \u003F1\u003F() => this.\u003F1\u003F = new \u003F13\u003F[768];

      public void \u003F2\u003F()
      {
label_0:
        int num = 0;
        int index;
        if (num == 0 && num == 0)
        {
          index = num;
          goto label_4;
        }
label_3:
        index = num;
label_4:
        while (index >= 768)
        {
          if (true)
          {
            if (true)
              return;
            goto label_0;
          }
        }
        this.\u003F1\u003F[index].\u003F1\u003F();
        num = index + 1;
        goto label_3;
      }

      public byte \u003F1\u003F(\u003F15\u003F _param1)
      {
        if (true)
          goto label_5;
label_3:
        uint index;
        int num1;
        do
        {
          num1 = (int) index;
          if (true)
          {
            int num2 = 1;
            if (num2 != 0)
              goto label_7;
label_1:
            index = (uint) (num1 | num2);
            continue;
label_7:
            int num3 = num1 << num2;
            num2 = (int) this.\u003F1\u003F[(IntPtr) index].\u003F1\u003F(_param1);
            num1 = num3;
            goto label_1;
          }
          else
            goto label_2;
        }
        while (index < 256U);
        goto label_4;
label_2:
        return (byte) num1;
label_4:
        num1 = (int) index;
        goto label_2;
label_5:
        index = 1U;
        goto label_3;
      }

      public byte \u003F1\u003F(\u003F15\u003F _param1, byte _param2)
      {
        int num1 = 1;
        if (num1 != 0)
          goto label_8;
label_4:
        uint index = (uint) num1;
label_5:
        int num2;
        int num3;
        if (true)
        {
          int num4 = (int) index;
          int num5 = 256;
          if (num5 == 0)
          {
            num3 = num5;
            num2 = num4;
            goto label_14;
          }
          else if ((uint) num4 < (uint) num5)
          {
            num1 = (int) index << 1 | (int) this.\u003F1\u003F[(IntPtr) index].\u003F1\u003F(_param1);
            goto label_4;
          }
        }
        else
          goto label_9;
label_7:
        return (byte) index;
label_8:
        index = (uint) num1;
label_9:
        int num6 = (int) _param2 >> 7;
        uint num7;
        uint num8;
        while (true)
        {
          int num9 = 1;
          int num10;
          while (true)
          {
            num8 = (uint) (num6 & num9);
            _param2 <<= 1;
            int num11;
            int num12;
            do
            {
              num7 = this.\u003F1\u003F[(IntPtr) ((uint) (1 + (int) num8 << 8) + index)].\u003F1\u003F(_param1);
              num11 = (int) index << 1;
              num12 = (int) num7;
              if (true)
              {
                num10 = num11 | num12;
                if (true)
                  index = (uint) num10;
                else
                  goto label_18;
              }
              else
                goto label_19;
            }
            while (false);
            goto label_13;
label_19:
            num9 = num12;
            num6 = num11;
          }
label_18:
          num6 = num10;
        }
label_13:
        num2 = (int) num8;
        num3 = (int) num7;
label_14:
        if (num2 == num3)
        {
          if (index < 256U)
            goto label_9;
          else
            goto label_7;
        }
        else
          goto label_5;
      }
    }
  }
}
