// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Qstub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=dd0e6adf76ed4a71
// MVID: 45AE1CDB-6F3F-421C-8CA1-13232795BB5F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00006-msil\Backdoor.Win32.Shiz.hprn-bd496937bfddff0ba948a103ac51e5820ed7be61ee7da4edd77c94fba8824c36.exe

using \u0002;
using System;
using System.Reflection;
using System.Runtime.InteropServices;

namespace \u0002
{
  internal class \u0001
  {
    private static Assembly \u0001 = (Assembly) null;
    private static string[] \u0001 = new string[0];

    internal static void \u0003()
    {
      try
      {
        AppDomain.CurrentDomain.ResourceResolve += new ResolveEventHandler(\u0001.\u0003);
      }
      catch (Exception ex)
      {
      }
    }

    internal static Assembly \u0003([In] object obj0, [In] ResolveEventArgs obj1)
    {
      if ((object) \u0001.\u0001 == null)
      {
        lock (\u0001.\u0001)
        {
          \u0001.\u0001 = Assembly.Load("{649ecff0-8b08-4637-8018-8e9d91d3d542}, PublicKeyToken=3e56350693f7355e");
          if ((object) \u0001.\u0001 != null)
            \u0001.\u0001 = \u0001.\u0001.GetManifestResourceNames();
        }
      }
      string name = obj1.Name;
      for (int index = 0; index < \u0001.\u0001.Length; ++index)
      {
        if (\u0001.\u0001[index] == name)
          return \u0001.\u0001;
      }
      return (Assembly) null;
    }
  }
}
