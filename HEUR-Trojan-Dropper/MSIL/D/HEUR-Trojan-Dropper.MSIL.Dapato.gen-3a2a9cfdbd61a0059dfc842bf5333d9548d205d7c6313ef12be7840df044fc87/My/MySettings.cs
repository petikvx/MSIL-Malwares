// Decompiled with JetBrains decompiler
// Type: AltiumManager.My.MySettings
// Assembly: NtRFufHofqVzZAe, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 66A3465D-1BFC-53F3-99D7-B93CF53E7ECD
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.06-msil\HEUR-Trojan-Dropper.MSIL.Dapato.gen-3a2a9cfdbd61a0059dfc842bf5333d9548d205d7c6313ef12be7840df044fc87.exe

using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Threading;

namespace AltiumManager.My
{
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.0.0.0")]
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings defaultInstance = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool addedHandler;
    private static object addedHandlerLockObject = RuntimeHelpers.GetObjectValue(new object());

    [DebuggerNonUserCode]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    private static void \uF874\uE1CD\uE0AA\uF12B\uF029\uEA88\uEFA8\uF4DD\uF40D\uF1CD\uF5EC\uF8EE(
      object _param0,
      EventArgs _param1)
    {
      if ((!\uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF151\uE2D4\uE328\uF2F5\uF0E9\uF6F9\uECD0\uF1D2\uE69B\uE51C\uEF67\uEEF5.SaveMySettingsOnExit ? 1 : 0) != 0)
        return;
label_6:
      int num1 = 4;
      int num2 = 60;
      while (true)
      {
        switch (num2 ^ 99)
        {
          case 92:
            switch (num1)
            {
              case 100:
                num1 = 5;
                goto label_1;
              case 101:
                // ISSUE: method reference
                RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MySettings.get_\uE0C9\uF225\uF444\uF626\uF7F0\uF1D1\uE5FB\uEB60\uEF32\uE4EB\uF2BB\uEAE1);
                num1 = 7;
                goto label_1;
              case 102:
                \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF261.\uF23F\uE6DE\uE285\uEA00\uF582\uE0B7\uF4D6\uE6D0\uE9CB\uE67B\uEC45\uE85E.Save();
                num1 = 6;
                goto label_1;
              case 103:
                goto label_12;
              default:
                num2 = 62;
                continue;
            }
          case 93:
            goto label_6;
          case 94:
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MySettings.get_AltiumDatabaseConnectionString);
            num2 = 61;
            continue;
          case 95:
label_1:
            num1 ^= 98;
            break;
        }
        num2 = 63;
      }
label_12:;
    }

    public static MySettings \uE0C9\uF225\uF444\uF626\uF7F0\uF1D1\uE5FB\uEB60\uEF32\uE4EB\uF2BB\uEAE1
    {
      get
      {
        if ((MySettings.addedHandler ? 1 : 0) == 0)
        {
          object handlerLockObject = MySettings.addedHandlerLockObject;
          ObjectFlowControl.CheckForSyncLockOnValueType(handlerLockObject);
          bool lockTaken = false;
          try
          {
            Monitor.Enter(handlerLockObject, ref lockTaken);
label_4:
            int num1 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE93(103);
            bool flag;
            while (true)
            {
              switch ((num1 ^ 92) + 98)
              {
                case 0:
                  RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MySettings.\uF874\uE1CD\uE0AA\uF12B\uF029\uEA88\uEFA8\uF4DD\uF40D\uF1CD\uF5EC\uF8EE);
                  num1 = -62;
                  continue;
                case 1:
                  num1 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF484(99);
                  continue;
                case 2:
                  if (flag)
                  {
                    num1 = -2;
                    continue;
                  }
                  goto label_11;
                case 3:
                  flag = !MySettings.addedHandler;
                  num1 = -4;
                  continue;
                case 4:
                  goto label_10;
                default:
                  goto label_4;
              }
            }
label_10:
            int num2 = 0;
            goto label_12;
label_11:
            num2 = 1;
label_12:
            if (num2 == 0)
            {
              \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF151\uE2D4\uE328\uF2F5\uF0E9\uF6F9\uECD0\uF1D2\uE69B\uE51C\uEF67\uEEF5.Shutdown += (ShutdownEventHandler) ((_param0, _param1) =>
              {
                if ((!\uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF151\uE2D4\uE328\uF2F5\uF0E9\uF6F9\uECD0\uF1D2\uE69B\uE51C\uEF67\uEEF5.SaveMySettingsOnExit ? 1 : 0) != 0)
                  return;
label_6:
                int num3 = 4;
                int num4 = 60;
                while (true)
                {
                  switch (num4 ^ 99)
                  {
                    case 92:
                      switch (num3)
                      {
                        case 100:
                          num3 = 5;
                          goto label_1;
                        case 101:
                          RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MySettings.get_\uE0C9\uF225\uF444\uF626\uF7F0\uF1D1\uE5FB\uEB60\uEF32\uE4EB\uF2BB\uEAE1);
                          num3 = 7;
                          goto label_1;
                        case 102:
                          \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF261.\uF23F\uE6DE\uE285\uEA00\uF582\uE0B7\uF4D6\uE6D0\uE9CB\uE67B\uEC45\uE85E.Save();
                          num3 = 6;
                          goto label_1;
                        case 103:
                          goto label_12;
                        default:
                          num4 = 62;
                          continue;
                      }
                    case 93:
                      goto label_6;
                    case 94:
                      RuntimeMethodHandle runtimeMethodHandle3 = __methodref (MySettings.get_AltiumDatabaseConnectionString);
                      num4 = 61;
                      continue;
                    case 95:
label_1:
                      num3 ^= 98;
                      break;
                  }
                  num4 = 63;
                }
label_12:;
              });
label_15:
              int num5 = activeUserClass.\uF1D5\uEE64\uE6F5\uEB6E\uE1AF\uE5A2\uE8F9\uE32F\uF6EE\uF409\uEECB\uEE93(96);
              while (true)
              {
                switch ((num5 ^ 94) + 101)
                {
                  case 0:
                    RuntimeMethodHandle runtimeMethodHandle4 = __methodref (MySettings.get_\uE0C9\uF225\uF444\uF626\uF7F0\uF1D1\uE5FB\uEB60\uEF32\uE4EB\uF2BB\uEAE1);
                    num5 = -59;
                    continue;
                  case 1:
                    num5 = -61;
                    continue;
                  case 2:
                    MySettings.addedHandler = true;
                    num5 = -64;
                    continue;
                  case 3:
                    goto label_22;
                  default:
                    goto label_15;
                }
              }
            }
          }
          finally
          {
            if ((!lockTaken ? 1 : 0) == 0)
              Monitor.Exit(handlerLockObject);
          }
        }
label_22:
        MySettings defaultInstance = MySettings.defaultInstance;
        return defaultInstance;
      }
    }

    [ApplicationScopedSetting]
    [DebuggerNonUserCode]
    [SpecialSetting(SpecialSetting.ConnectionString)]
    [DefaultSettingValue("Data Source=(LocalDB)\\v11.0;AttachDbFilename=|DataDirectory|\\AltiumDatabase.mdf;Integrated Security=True")]
    public string AltiumDatabaseConnectionString
    {
      get
      {
label_7:
        int num1 = 22;
        int num2 = 31;
        string connectionString;
        while (true)
        {
          switch (num2 ^ 115)
          {
            case 105:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MySettings.\u002Ector);
              num2 = 26;
              continue;
            case 106:
              switch (num1)
              {
                case 111:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MySettings.\u002Ector);
                  num1 = 9;
                  goto label_1;
                case 112:
                  connectionString = Conversions.ToString(this[nameof (AltiumDatabaseConnectionString)]);
                  num1 = 23;
                  goto label_1;
                case 113:
                case 114:
                  goto label_10;
                default:
                  num2 = 24;
                  continue;
              }
            case 107:
              goto label_7;
            case 108:
label_1:
              num1 ^= 102;
              break;
          }
          num2 = 25;
        }
label_10:
        return connectionString;
      }
    }

    [ApplicationScopedSetting]
    [DebuggerNonUserCode]
    [SpecialSetting(SpecialSetting.ConnectionString)]
    [DefaultSettingValue("Data Source=(LocalDB)\\v11.0;AttachDbFilename=N:\\Altium\\Database\\AltiumDatabase.mdf;Integrated Security=True;Connect Timeout=30")]
    public string AltiumDatabaseConnectionString1
    {
      get
      {
label_7:
        int num1 = 4;
        int num2 = -6;
        string connectionString1;
        while (true)
        {
          switch ((num2 ^ 106) + 115)
          {
            case 0:
              RuntimeMethodHandle runtimeMethodHandle1 = __methodref (MySettings.get_\uE0C9\uF225\uF444\uF626\uF7F0\uF1D1\uE5FB\uEB60\uEF32\uE4EB\uF2BB\uEAE1);
              num2 = -25;
              continue;
            case 1:
              switch (num1)
              {
                case 108:
                case 111:
                  goto label_10;
                case 109:
                  connectionString1 = Conversions.ToString(this[nameof (AltiumDatabaseConnectionString1)]);
                  num1 = 5;
                  goto label_1;
                case 110:
                  RuntimeMethodHandle runtimeMethodHandle2 = __methodref (MySettings.get_\uE0C9\uF225\uF444\uF626\uF7F0\uF1D1\uE5FB\uEB60\uEF32\uE4EB\uF2BB\uEAE1);
                  num1 = 7;
                  goto label_1;
                default:
                  num2 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF484(122);
                  continue;
              }
            case 2:
              goto label_7;
            case 3:
label_1:
              num1 ^= 105;
              break;
          }
          num2 = \uE2A8\uE14A\uF838\uE66F\uF669\uEE85\uF207\uE4CC\uF601\uE8E4\uE14C\uF260.\uF082\uF12C\uE11A\uE8A0\uE428\uF545\uE4D3\uE1FE\uEE4C\uE9EC\uF5C3\uEFB7.\uEA88\uE10F\uE996\uE661\uF488\uF652\uF8B1\uE5BC\uF339\uE8F4\uF2C0\uF484(114);
        }
label_10:
        return connectionString1;
      }
    }
  }
}
