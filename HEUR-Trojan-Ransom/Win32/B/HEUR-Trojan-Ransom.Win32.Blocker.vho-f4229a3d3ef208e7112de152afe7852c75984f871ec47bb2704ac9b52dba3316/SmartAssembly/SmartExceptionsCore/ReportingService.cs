// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.ReportingService
// Assembly: w, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8101C3F8-A792-4EB9-952B-26F7AB9A4B5A
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00070-msil\HEUR-Trojan-Ransom.Win32.Blocker.vho-f4229a3d3ef208e7112de152afe7852c75984f871ec47bb2704ac9b52dba3316.exe

using \u0004;
using \u0006;
using System;
using System.Net;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace SmartAssembly.SmartExceptionsCore
{
  [WebServiceBinding(Name = "ReportingServiceSoap", Namespace = "http://www.smartassembly.com/webservices/Reporting/")]
  internal class ReportingService : SoapHttpClientProtocol
  {
    [NonSerialized]
    internal static \u0001 \u009A;

    public ReportingService(string serverUrl)
    {
      this.Url = serverUrl + ReportingService.\u009A(6099);
      this.Timeout = 180000;
    }

    [SoapDocumentMethod("http://www.smartassembly.com/webservices/Reporting/UploadReport2")]
    public string UploadReport2(
      string licenseID,
      [XmlElement(DataType = "base64Binary")] byte[] data,
      string email,
      string appFriendlyName,
      string buildFriendlyNumber)
    {
      return (string) \u001F\u0004.\u0010\u0007((object) this, ReportingService.\u009A(6120), new object[5]
      {
        (object) licenseID,
        (object) data,
        (object) email,
        (object) appFriendlyName,
        (object) buildFriendlyNumber
      })[0];
    }

    protected override WebRequest GetWebRequest(Uri uri)
    {
      WebRequest webRequest = \u007F\u0004.\u0011\u0007((object) this, uri);
      if (webRequest is HttpWebRequest httpWebRequest)
        \u0012\u0002.\u007E\u0084\u0004((object) \u0080\u0004.\u007E\u0012\u0007((object) httpWebRequest), false);
      return webRequest;
    }

    static ReportingService() => \u0002.\u0001(typeof (ReportingService));
  }
}
