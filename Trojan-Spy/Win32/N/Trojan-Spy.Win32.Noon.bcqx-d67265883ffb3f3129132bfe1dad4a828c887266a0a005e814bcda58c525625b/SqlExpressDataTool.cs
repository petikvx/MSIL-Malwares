// Decompiled with JetBrains decompiler
// Type: Alero.SqlExpressDataTool
// Assembly: AssemblyCopyrightAttrib, Version=2005.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6DE54395-8B54-4A88-80DE-363C4128FB08
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqx-d67265883ffb3f3129132bfe1dad4a828c887266a0a005e814bcda58c525625b.exe

using System;
using System.Data;
using System.Data.SqlClient;

namespace Alero
{
  public class SqlExpressDataTool : MSSqlDataTool
  {
    private readonly IDbConnection _connection;
    private IDbTransaction _transaction;

    protected override IDbConnection GetConnection() => this._connection;

    protected override IDbTransaction GetTransaction() => this._transaction;

    public SqlExpressDataTool(string dataFile)
    {
      this._connection = (IDbConnection) new SqlConnection(string.Format("Data Source=.\\SQLEXPRESS;AttachDbFilename={0};Integrated Security=True;User Instance=True", (object) dataFile));
      this._connection.Open();
      this._transaction = (IDbTransaction) null;
    }

    protected override void Dispose(bool disposing)
    {
      if (!disposing)
        return;
      if (this._transaction != null)
        this._transaction.Dispose();
      this._connection.Close();
    }

    public override void BeginTransaction() => this._transaction = this._transaction == null ? this.GetConnection().BeginTransaction() : throw new DataToolException("Cannot begin transaction, transaction already started");

    public override void CommitTransaction()
    {
      IDbTransaction dbTransaction = this._transaction != null ? this._transaction : throw new Exception("Cannot commit transaction, transaction was not started");
      this._transaction = (IDbTransaction) null;
      dbTransaction.Commit();
    }

    public override void RollbackTransaction()
    {
      IDbTransaction dbTransaction = this._transaction != null ? this._transaction : throw new Exception("Cannot roll back transaction, transaction was not started");
      this._transaction = (IDbTransaction) null;
      dbTransaction.Rollback();
    }
  }
}
