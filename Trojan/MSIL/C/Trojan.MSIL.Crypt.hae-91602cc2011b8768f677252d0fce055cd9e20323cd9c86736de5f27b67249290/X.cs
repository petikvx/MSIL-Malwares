// Decompiled with JetBrains decompiler
// Type: A.X
// Assembly: N0$Crypter, Version=3.0.7.1, Culture=neutral, PublicKeyToken=null
// MVID: FD276B3A-BCAA-4176-AE7A-13B114112E73
// Assembly location: C:\Users\Administrateur\Desktop\Virusshare-00005-msil\Trojan.MSIL.Crypt.hae-91602cc2011b8768f677252d0fce055cd9e20323cd9c86736de5f27b67249290.exe

using System;
using System.Runtime.CompilerServices;

namespace A
{
  public sealed class X
  {
    private string A;

    public X(string _param1)
    {
      this.A = nameof ();
      this.A(_param1);
    }

    public X()
    {
      this.A = "";
      this.A("");
    }

    [SpecialName]
    public string A() => this.A;

    [SpecialName]
    public void A(string _param1) => this.A = _param1;

    public string A(string _param1) => UI.A((object) SF.A(), this.C(RF.A((object) SF.A(), _param1)));

    public string B(string _param1) => UI.A((object) SF.A(), this.D(RF.A((object) SF.A(), _param1)));

    public byte[] C(byte[] _param1)
    {
      byte[] numArray = new byte[_param1.Length + 1];
      numArray[0] = ON.A(XS.A((object) YS.A(), 1, (int) byte.MaxValue));
      int num = _param1.Length - 1;
      for (int index = 0; index <= num; ++index)
        numArray[index + 1] = this.A(numArray[index], (short) _param1[index]);
label_3:
      switch (7)
      {
        case 0:
          goto label_3;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (X.C);
          }
          return this.A(numArray, RF.A((object) SF.A(), this.A()));
      }
    }

    public byte[] D(byte[] _param1)
    {
      _param1 = this.A(_param1, RF.A((object) SF.A(), this.A()));
      byte[] numArray = new byte[_param1.Length - 2 + 1];
      for (int index = _param1.Length - 1; index >= 1; index += -1)
        numArray[index - 1] = this.A(_param1[index], (short) -_param1[index - 1]);
label_3:
      switch (4)
      {
        case 0:
          goto label_3;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (X.D);
          }
          return numArray;
      }
    }

    private byte A(byte _param1, short _param2)
    {
      while (_param2 < (short) 0)
        _param2 += (short) 256;
label_3:
      switch (6)
      {
        case 0:
          goto label_3;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (X.A);
          }
          return ON.A((int) (short) ((int) _param1 + (int) _param2) % 256);
      }
    }

    private byte[] A(byte[] _param1, byte[] _param2)
    {
      if (_param2.Length != 0)
      {
label_1:
        switch (3)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (X.A);
            }
            int num = _param1.Length - 1;
            for (int index = 0; index <= num; ++index)
              _param1[index] = (byte) ((int) _param1[index] ^ (int) this.A(_param2[index % _param2.Length], (short) _param2[(int) _param2[index % _param2.Length] % _param2.Length]) ^ (int) _param2[(index + index % 7) % _param2.Length % _param2.Length]);
label_7:
            switch (7)
            {
              case 0:
                goto label_7;
            }
            break;
        }
      }
      return _param1;
    }

    public string B(string _param1, string _param2) => UI.A((object) SF.A(), this.A(RF.A((object) SF.A(), _param1), RF.A((object) SF.A(), _param2)));
  }
}
