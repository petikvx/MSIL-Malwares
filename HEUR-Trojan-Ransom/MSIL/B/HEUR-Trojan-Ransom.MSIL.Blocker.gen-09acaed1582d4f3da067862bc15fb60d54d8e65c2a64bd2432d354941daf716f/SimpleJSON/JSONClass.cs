// Decompiled with JetBrains decompiler
// Type: SimpleJSON.JSONClass
// Assembly: PEFileEvidenceFacto, Version=2.0.4.0, Culture=neutral, PublicKeyToken=null
// MVID: 33D8CF26-6BC9-4426-B954-9C7650E72B0A
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-09acaed1582d4f3da067862bc15fb60d54d8e65c2a64bd2432d354941daf716f.exe

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;

namespace SimpleJSON
{
  public class JSONClass : JSONNode, IEnumerable
  {
    private Dictionary<string, JSONNode> m_Dict = new Dictionary<string, JSONNode>();

    public override JSONNode this[string aKey]
    {
      get
      {
        bool flag = this.m_Dict.ContainsKey(aKey);
label_1:
        int num1 = -1843799984;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -530391282)) % 5U)
          {
            case 0:
              goto label_1;
            case 1:
              jsonNode = this.m_Dict[aKey];
              num1 = (int) num2 * -328922741 ^ -1704546769;
              continue;
            case 2:
              jsonNode = (JSONNode) new JSONLazyCreator((JSONNode) this, aKey);
              num1 = -78855848;
              continue;
            case 3:
              int num3 = flag ? 1042970787 : (num3 = 1858496364);
              num1 = num3 ^ (int) num2 * -1515948084;
              continue;
            default:
              goto label_6;
          }
        }
label_6:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 240421260;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1708124956)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -296718502 ^ -1099432746;
              continue;
            case 1:
              int num3 = !this.m_Dict.ContainsKey(aKey) ? -2074806700 : (num3 = -1606906077);
              num1 = num3 ^ (int) num2 * -2086154584;
              continue;
            case 2:
              goto label_1;
            case 3:
              goto label_3;
            case 4:
              this.m_Dict.Add(aKey, value);
              num1 = 234153569;
              continue;
            case 5:
              this.m_Dict[aKey] = value;
              num1 = (int) num2 * -47761549 ^ 1084566130;
              continue;
            case 6:
              num1 = (int) num2 * -1346578163 ^ -1343438749;
              continue;
            default:
              goto label_9;
          }
        }
label_3:
        return;
label_9:;
      }
    }

    public override JSONNode this[int aIndex]
    {
      get
      {
label_1:
        int num1 = -1932602348;
        JSONNode jsonNode;
        while (true)
        {
          uint num2;
          int num3;
          switch ((num2 = (uint) (num1 ^ -826347159)) % 6U)
          {
            case 0:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -170410598 ^ -1488742106;
              continue;
            case 1:
              if (aIndex >= 0)
              {
                num1 = (int) num2 * -733916144 ^ 459239683;
                continue;
              }
              num3 = 1;
              break;
            case 2:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 4:
              goto label_1;
            case 5:
              jsonNode = (JSONNode) null;
              num1 = -1089954978;
              continue;
            default:
              goto label_10;
          }
          int num4;
          num1 = num4 = num3 == 0 ? -841499316 : (num4 = -1918697659);
        }
label_10:
        return jsonNode;
      }
      set
      {
label_1:
        int num1 = 1868759412;
        while (true)
        {
          uint num2;
          bool flag;
          int num3;
          switch ((num2 = (uint) (num1 ^ 1717968206)) % 6U)
          {
            case 0:
              goto label_3;
            case 1:
              num3 = aIndex >= this.m_Dict.Count ? 1 : 0;
              break;
            case 2:
              int num4 = flag ? -778436581 : (num4 = -1262019860);
              num1 = num4 ^ (int) num2 * 853272943;
              continue;
            case 3:
              num1 = (int) num2 * 1551992213 ^ 1774827021;
              continue;
            case 4:
              if (aIndex < 0)
              {
                num3 = 1;
                break;
              }
              num1 = (int) num2 * 41209082 ^ 901654329;
              continue;
            case 5:
              goto label_1;
            default:
              goto label_11;
          }
          flag = num3 != 0;
          num1 = 1858327442;
        }
label_3:
        return;
label_11:;
      }
    }

    public override int Count
    {
      get
      {
label_1:
        int num1 = 1900123324;
        int count;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 611309113)) % 4U)
          {
            case 1:
              count = this.m_Dict.Count;
              num1 = (int) num2 * 64215443 ^ -437688524;
              continue;
            case 2:
              num1 = (int) num2 * 685164443 ^ 2001839747;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return count;
      }
    }

    public override void Add(string aKey, JSONNode aItem)
    {
label_1:
      int num1 = 1684859398;
      bool flag;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1386058911)) % 13U)
        {
          case 0:
            this.m_Dict[aKey] = aItem;
            num1 = (int) num2 * 1616618976 ^ -77422838;
            continue;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 948471661 ^ -2078145611;
            continue;
          case 3:
            int num3 = flag ? -124907151 : (num3 = -2008009856);
            num1 = num3 ^ (int) num2 * -1683057484;
            continue;
          case 4:
            num1 = 237990692;
            continue;
          case 5:
            this.m_Dict.Add(aKey, aItem);
            num1 = 723457934;
            continue;
          case 6:
            num1 = (int) num2 * 1820441172 ^ 813317443;
            continue;
          case 7:
            num1 = (int) num2 * -546288959 ^ -926702069;
            continue;
          case 8:
            int num4 = !this.m_Dict.ContainsKey(aKey) ? 814609425 : (num4 = 1805484194);
            num1 = num4 ^ (int) num2 * 1766640140;
            continue;
          case 9:
            this.m_Dict.Add(Guid.NewGuid().ToString(), aItem);
            num1 = 766357645;
            continue;
          case 10:
            flag = !JSONClass.\u200D‪‏⁭⁪‎‌‬⁪‏⁮⁪⁮‏⁫‬‍‮⁮⁬‫​⁮​​‫‌⁫‭‮⁪‌⁯​‪‫‫⁬⁫⁬‮(aKey);
            num1 = (int) num2 * -636819940 ^ 1865297257;
            continue;
          case 11:
            goto label_1;
          case 12:
            num1 = (int) num2 * 2099884860 ^ -697059358;
            continue;
          default:
            goto label_15;
        }
      }
label_3:
      return;
label_15:;
    }

    public override JSONNode Remove(string aKey)
    {
      bool flag = !this.m_Dict.ContainsKey(aKey);
label_1:
      int num1 = 1298448758;
      JSONNode jsonNode1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 757543643)) % 7U)
        {
          case 1:
            jsonNode1 = (JSONNode) null;
            num1 = (int) num2 * -843043399 ^ -50636097;
            continue;
          case 2:
            num1 = (int) num2 * 1972376177 ^ -1281377250;
            continue;
          case 3:
            int num3 = !flag ? 610186296 : (num3 = 1144823718);
            num1 = num3 ^ (int) num2 * 1293034074;
            continue;
          case 4:
            goto label_1;
          case 5:
            num1 = (int) num2 * -451381126 ^ -208306248;
            continue;
          case 6:
            JSONNode jsonNode2 = this.m_Dict[aKey];
            this.m_Dict.Remove(aKey);
            jsonNode1 = jsonNode2;
            num1 = 672602099;
            continue;
          default:
            goto label_8;
        }
      }
label_8:
      return jsonNode1;
    }

    public override JSONNode Remove(int aIndex)
    {
      if (aIndex < 0)
        goto label_4;
label_1:
      int num1 = 1331033335;
label_2:
      bool flag;
      JSONNode jsonNode;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1446239746)) % 7U)
        {
          case 0:
            jsonNode = (JSONNode) null;
            num1 = (int) num2 * 111972545 ^ -2145763378;
            continue;
          case 1:
            num1 = (int) num2 * -305231274 ^ -117731107;
            continue;
          case 2:
            int num3 = flag ? 449180450 : (num3 = 830735868);
            num1 = num3 ^ (int) num2 * -824390171;
            continue;
          case 3:
            goto label_1;
          case 5:
            goto label_3;
          case 6:
            jsonNode = (JSONNode) null;
            num1 = 1919056087;
            continue;
          default:
            goto label_10;
        }
      }
label_3:
      int num4 = aIndex >= this.m_Dict.Count ? 1 : 0;
      goto label_5;
label_10:
      return jsonNode;
label_4:
      num4 = 1;
label_5:
      flag = num4 != 0;
      num1 = 750608485;
      goto label_2;
    }

    public override JSONNode Remove(JSONNode aNode)
    {
      JSONNode jsonNode;
      try
      {
label_2:
        int num1 = 1327981528;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1903467006)) % 3U)
          {
            case 0:
              goto label_2;
            case 1:
              jsonNode = (JSONNode) null;
              num1 = (int) num2 * -620610430 ^ -1218024500;
              continue;
            default:
              goto label_10;
          }
        }
      }
      catch
      {
label_6:
        int num3 = 1916084441;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 1903467006)) % 3U)
          {
            case 0:
              goto label_6;
            case 1:
              num3 = (int) num4 * 784140656 ^ 1220882748;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        jsonNode = (JSONNode) null;
      }
label_10:
      return jsonNode;
    }

    public override IEnumerable<JSONNode> Childs
    {
      get
      {
        JSONClass.\u003Cget_Childs\u003Ed__14 childs = new JSONClass.\u003Cget_Childs\u003Ed__14(-2);
label_1:
        int num1 = 866129076;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1432363372)) % 3U)
          {
            case 0:
              goto label_1;
            case 2:
              childs.\u003C\u003E4__this = this;
              num1 = (int) num2 * -937935364 ^ -1958246766;
              continue;
            default:
              goto label_4;
          }
        }
label_4:
        return (IEnumerable<JSONNode>) childs;
      }
    }

    public IEnumerator GetEnumerator() => (IEnumerator) new JSONClass.\u003CGetEnumerator\u003Ed__15(0)
    {
      \u003C\u003E4__this = this
    };

    public override string ToString()
    {
label_1:
      int num1 = 30928016;
      string str1;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 247303037)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            str1 = "{";
            num1 = (int) num2 * 104998167 ^ 1243356986;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator();
      try
      {
label_14:
        int num3 = enumerator.MoveNext() ? 585020775 : (num3 = 371291895);
        KeyValuePair<string, JSONNode> current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ 247303037)) % 9U)
          {
            case 0:
              str1 = JSONClass.\u202C⁯‭‫⁬⁯‫‪‍‎‍‍⁬⁯‬‫⁫‏‮⁮‮⁯‍‏⁭‬⁭‏‮⁯‍​‮⁯‮‬⁬⁮‌‮(str1, ", ");
              num3 = (int) num4 * -1274117329 ^ 1333355458;
              continue;
            case 1:
              goto label_14;
            case 2:
              str1 = JSONClass.\u206B⁮‬‎⁯‪⁭‫‍‍⁬⁬‌‌‪‬⁭⁮⁬‮‬‍‎⁭⁪⁫‮‭‫‌‎⁯⁫‌‌⁬‍‮⁬⁬‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\":",
                JSONClass.\u206F‪‫⁮​‮‌⁫‍​‌‍⁬‌​⁯‍‌⁭‌‮‍⁯‭⁯‍⁬‬‬‌‭⁪‫‮‮⁫‍‬‍⁯‮((object) current.Value)
              });
              num3 = 1748586906;
              continue;
            case 3:
              current = enumerator.Current;
              num3 = 784132895;
              continue;
            case 4:
              num3 = 585020775;
              continue;
            case 5:
              num3 = (int) num4 * -744148792 ^ 584243774;
              continue;
            case 6:
              int num5 = JSONClass.\u200F‎‍⁪‪‭‪‮‏⁫⁪⁬⁯⁭‌‮‭‮‮⁭⁭⁪‏⁫‏‬⁭⁯⁪‬⁮‫‫⁪​⁪‎​‍‮‮(str1) <= 2 ? 1298417682 : (num5 = 1225469251);
              num3 = num5 ^ (int) num4 * 849427871;
              continue;
            case 8:
              num3 = (int) num4 * 1866820730 ^ 866256652;
              continue;
            default:
              goto label_20;
          }
        }
      }
      finally
      {
        enumerator.Dispose();
label_16:
        int num6 = 107099090;
        while (true)
        {
          uint num7;
          switch ((num7 = (uint) (num6 ^ 247303037)) % 3U)
          {
            case 0:
              goto label_16;
            case 2:
              num6 = (int) num7 * 1494262770 ^ 530583749;
              continue;
            default:
              goto label_19;
          }
        }
label_19:;
      }
label_20:
      string str2 = JSONClass.\u202C⁯‭‫⁬⁯‫‪‍‎‍‍⁬⁯‬‫⁫‏‮⁮‮⁯‍‏⁭‬⁭‏‮⁯‍​‮⁯‮‬⁬⁮‌‮(str1, "}");
label_21:
      int num8 = 2116179865;
      while (true)
      {
        uint num9;
        switch ((num9 = (uint) (num8 ^ 247303037)) % 3U)
        {
          case 0:
            goto label_21;
          case 2:
            num8 = (int) num9 * 1765446030 ^ -391036213;
            continue;
          default:
            goto label_24;
        }
      }
label_24:
      return str2;
    }

    public override string ToString(string aPrefix)
    {
      string str1 = "{ ";
label_1:
      int num1 = -1594020981;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -357106992)) % 3U)
        {
          case 0:
            goto label_1;
          case 2:
            num1 = (int) num2 * -437657487 ^ -2029866422;
            continue;
          default:
            goto label_4;
        }
      }
label_4:
      using (Dictionary<string, JSONNode>.Enumerator enumerator = this.m_Dict.GetEnumerator())
      {
label_14:
        int num3 = enumerator.MoveNext() ? -370332333 : (num3 = -1910313198);
        KeyValuePair<string, JSONNode> current;
        bool flag;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -357106992)) % 9U)
          {
            case 0:
              num3 = -370332333;
              continue;
            case 2:
              current = enumerator.Current;
              num3 = -1458030914;
              continue;
            case 3:
              str1 = JSONClass.\u202E‌⁯⁬‮⁬‏‎‏⁫‫‬‎‮‪‭⁮‌‫​‬⁫​‪‬⁫‮⁪‎‌‌‪⁮⁫⁪‮‬‍‍⁬‮(str1, "\n", aPrefix, "   ");
              num3 = -1583481309;
              continue;
            case 4:
              str1 = JSONClass.\u202C⁯‭‫⁬⁯‫‪‍‎‍‍⁬⁯‬‫⁫‏‮⁮‮⁯‍‏⁭‬⁭‏‮⁯‍​‮⁯‮‬⁬⁮‌‮(str1, ", ");
              num3 = (int) num4 * -2063185824 ^ 241667219;
              continue;
            case 5:
              str1 = JSONClass.\u206B⁮‬‎⁯‪⁭‫‍‍⁬⁬‌‌‪‬⁭⁮⁬‮‬‍‎⁭⁪⁫‮‭‫‌‎⁯⁫‌‌⁬‍‮⁬⁬‮(new string[5]
              {
                str1,
                "\"",
                JSONNode.Escape(current.Key),
                "\" : ",
                current.Value.ToString(JSONClass.\u202C⁯‭‫⁬⁯‫‪‍‎‍‍⁬⁯‬‫⁫‏‮⁮‮⁯‍‏⁭‬⁭‏‮⁯‍​‮⁯‮‬⁬⁮‌‮(aPrefix, "   "))
              });
              num3 = (int) num4 * -1192275993 ^ -655752208;
              continue;
            case 6:
              flag = JSONClass.\u200F‎‍⁪‪‭‪‮‏⁫⁪⁬⁯⁭‌‮‭‮‮⁭⁭⁪‏⁫‏‬⁭⁯⁪‬⁮‫‫⁪​⁪‎​‍‮‮(str1) > 3;
              num3 = (int) num4 * 1972800771 ^ -1739583534;
              continue;
            case 7:
              goto label_14;
            case 8:
              int num5 = flag ? 2088985351 : (num5 = 1128155035);
              num3 = num5 ^ (int) num4 * 1169327981;
              continue;
            default:
              goto label_16;
          }
        }
      }
label_16:
      string str2 = JSONClass.\u202E‌⁯⁬‮⁬‏‎‏⁫‫‬‎‮‪‭⁮‌‫​‬⁫​‪‬⁫‮⁪‎‌‌‪⁮⁫⁪‮‬‍‍⁬‮(str1, "\n", aPrefix, "}");
label_17:
      int num6 = -589510099;
      string str3;
      while (true)
      {
        uint num7;
        switch ((num7 = (uint) (num6 ^ -357106992)) % 4U)
        {
          case 1:
            str3 = str2;
            num6 = (int) num7 * 1864238860 ^ 769924795;
            continue;
          case 2:
            goto label_17;
          case 3:
            num6 = (int) num7 * -1334399650 ^ -1715340422;
            continue;
          default:
            goto label_21;
        }
      }
label_21:
      return str3;
    }

    public override void Serialize(BinaryWriter aWriter)
    {
label_1:
      int num1 = -493091581;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1189393742)) % 6U)
        {
          case 0:
            num1 = (int) num2 * 1868519888 ^ 250464517;
            continue;
          case 2:
            goto label_1;
          case 3:
            num1 = (int) num2 * -757863363 ^ 1230011249;
            continue;
          case 4:
            JSONClass.\u200C⁮‎‍⁫⁪‬⁭‭‮⁬‭⁮‍‎‭‪‎‎​‫‍‌‮⁪‭‫‏‬‏‏‬‌⁪⁭⁯​‎‪‬‮(aWriter, this.m_Dict.Count);
            num1 = (int) num2 * -1733719618 ^ -373592754;
            continue;
          case 5:
            JSONClass.\u200D‌⁭⁪‭⁮‫⁫⁯‫‭‬⁬⁮‮‫‭⁯⁭⁬⁯‮⁯‮⁭‮‫‍‭‏‪⁬‎⁬‎⁭⁫‎⁪⁭‮(aWriter, (byte) 2);
            num1 = (int) num2 * 394898863 ^ 323185634;
            continue;
          default:
            goto label_7;
        }
      }
label_7:
      using (Dictionary<string, JSONNode>.KeyCollection.Enumerator enumerator = this.m_Dict.Keys.GetEnumerator())
      {
label_16:
        int num3 = enumerator.MoveNext() ? -62822488 : (num3 = -1537990401);
        string current;
        while (true)
        {
          uint num4;
          switch ((num4 = (uint) (num3 ^ -1189393742)) % 8U)
          {
            case 0:
              this.m_Dict[current].Serialize(aWriter);
              num3 = (int) num4 * -2143255570 ^ -780225437;
              continue;
            case 1:
              num3 = (int) num4 * 1709136873 ^ -492803600;
              continue;
            case 2:
              current = enumerator.Current;
              num3 = -1497256378;
              continue;
            case 3:
              num3 = (int) num4 * -496997146 ^ -1002914529;
              continue;
            case 4:
              JSONClass.\u206D‭​⁪⁪‭⁯‏‏⁯⁫‌‪⁫⁬⁯‬‌⁭⁭⁯‮‌⁫‎‎‌⁫‪‮‭‪⁯‪‌⁬⁮‭⁬⁬‮(aWriter, current);
              num3 = (int) num4 * 1636029849 ^ 236750774;
              continue;
            case 5:
              goto label_18;
            case 6:
              num3 = -62822488;
              continue;
            case 7:
              goto label_16;
            default:
              goto label_11;
          }
        }
label_18:
        return;
label_11:;
      }
    }

    static bool \u200D‪‏⁭⁪‎‌‬⁪‏⁮⁪⁮‏⁫‬‍‮⁮⁬‫​⁮​​‫‌⁫‭‮⁪‌⁯​‪‫‫⁬⁫⁬‮([In] string obj0) => string.IsNullOrEmpty(obj0);

    static int \u200F‎‍⁪‪‭‪‮‏⁫⁪⁬⁯⁭‌‮‭‮‮⁭⁭⁪‏⁫‏‬⁭⁯⁪‬⁮‫‫⁪​⁪‎​‍‮‮([In] string obj0) => obj0.Length;

    static string \u202C⁯‭‫⁬⁯‫‪‍‎‍‍⁬⁯‬‫⁫‏‮⁮‮⁯‍‏⁭‬⁭‏‮⁯‍​‮⁯‮‬⁬⁮‌‮([In] string obj0, [In] string obj1) => obj0 + obj1;

    static string \u206F‪‫⁮​‮‌⁫‍​‌‍⁬‌​⁯‍‌⁭‌‮‍⁯‭⁯‍⁬‬‬‌‭⁪‫‮‮⁫‍‬‍⁯‮([In] object obj0) => obj0.ToString();

    static string \u206B⁮‬‎⁯‪⁭‫‍‍⁬⁬‌‌‪‬⁭⁮⁬‮‬‍‎⁭⁪⁫‮‭‫‌‎⁯⁫‌‌⁬‍‮⁬⁬‮([In] string[] obj0) => string.Concat(obj0);

    static string \u202E‌⁯⁬‮⁬‏‎‏⁫‫‬‎‮‪‭⁮‌‫​‬⁫​‪‬⁫‮⁪‎‌‌‪⁮⁫⁪‮‬‍‍⁬‮(
      [In] string obj0,
      [In] string obj1,
      [In] string obj2,
      [In] string obj3)
    {
      return obj0 + obj1 + obj2 + obj3;
    }

    static void \u200D‌⁭⁪‭⁮‫⁫⁯‫‭‬⁬⁮‮‫‭⁯⁭⁬⁯‮⁯‮⁭‮‫‍‭‏‪⁬‎⁬‎⁭⁫‎⁪⁭‮([In] BinaryWriter obj0, [In] byte obj1) => obj0.Write(obj1);

    static void \u200C⁮‎‍⁫⁪‬⁭‭‮⁬‭⁮‍‎‭‪‎‎​‫‍‌‮⁪‭‫‏‬‏‏‬‌⁪⁭⁯​‎‪‬‮([In] BinaryWriter obj0, [In] int obj1) => obj0.Write(obj1);

    static void \u206D‭​⁪⁪‭⁯‏‏⁯⁫‌‪⁫⁬⁯‬‌⁭⁭⁯‮‌⁫‎‎‌⁫‪‮‭‪⁯‪‌⁬⁮‭⁬⁬‮([In] BinaryWriter obj0, [In] string obj1) => obj0.Write(obj1);
  }
}
