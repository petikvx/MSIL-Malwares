// Decompiled with JetBrains decompiler
// Type: RagnarokHUD.Memory
// Assembly: BinaryAssem, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C3D41CFC-8277-4BEE-9AD4-AC67F2756AFC
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.07\UDS-Trojan.Win32.GenericML.xnet-5ba70e2cf6910636ffaf66657996ddfd7bdec1d21ac89015a4935a31825106ae.exe

using System;

namespace RagnarokHUD
{
  internal class Memory
  {
    private static ProcessMemoryReader Reader = new ProcessMemoryReader("RagexeRE");

    public static T Read<T>(IntPtr address) where T : struct => Memory.Reader.Read<T>(new IntPtr(Memory.BaseAddress.ToInt64() + address.ToInt64()));

    public static byte[] ReadBytes(IntPtr address, int len) => Memory.Reader.Read(address, len);

    public static string ReadString(IntPtr address, int maxLen) => Memory.Reader.ReadCString(new IntPtr(Memory.BaseAddress.ToInt64() + address.ToInt64()), maxLen);

    public static IntPtr BaseAddress => Memory.Reader.BaseAddress;
  }
}
