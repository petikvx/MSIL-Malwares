// Decompiled with JetBrains decompiler
// Type: xk7VyJJZ8hsKInK2GHXPG105.SvKHkFFpVaj23LA760
// Assembly: svhost, Version=3.6.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DEE6335A-B15A-4DF3-847B-45C18EC4F808
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00025-msil\HEUR-Trojan-Ransom.MSIL.Foreign.gen-f03aa7913ae02108ed6e6f3961f72f49363cb4183291af7acacdc2460df71224.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections;
using System.Data;
using System.Runtime.InteropServices;
using System.Text;

namespace xk7VyJJZ8hsKInK2GHXPG105
{
  public class SvKHkFFpVaj23LA760
  {
    private const int SQL_OK = 0;
    private const int SQL_ROW = 100;
    private const int SQL_DONE = 101;
    private IntPtr HQRpEh44HnJrIJ5y183;

    public SvKHkFFpVaj23LA760() => this.HQRpEh44HnJrIJ5y183 = IntPtr.Zero;

    public SvKHkFFpVaj23LA760(string baseName) => this.\u0032vZIU1CmNFYCTgq4258(baseName);

    [DllImport("kernel32", EntryPoint = "HeapAlloc")]
    private static extern IntPtr EugE2eHBChQoRw8O239(IntPtr heap, uint flags, uint bytes);

    [DllImport("kernel32", EntryPoint = "GetProcessHeap")]
    private static extern IntPtr WI4HTNKSFLNnuXwk240();

    [DllImport("kernel32", EntryPoint = "lstrlen")]
    private static extern int NRfIPTQEN952Ogyp241(IntPtr str);

    [DllImport("sqlite3", EntryPoint = "sqlite3_open")]
    private static extern int \u0031v6kGTeQKnZhqk6E242(IntPtr fileName, out IntPtr database);

    [DllImport("sqlite3", EntryPoint = "sqlite3_close")]
    private static extern int LvBZgpZ2RqTKIH3o243(IntPtr database);

    [DllImport("sqlite3", EntryPoint = "sqlite3_exec")]
    private static extern int dolZRbEUDpYsUzdt244(
      IntPtr database,
      IntPtr query,
      IntPtr callback,
      IntPtr arguments,
      out IntPtr errorr);

    [DllImport("sqlite3", EntryPoint = "sqlite3_errmsg")]
    private static extern IntPtr \u0032qgiFy8Cw3sg0u72245(IntPtr database);

    [DllImport("sqlite3", EntryPoint = "sqlite3_prepare_v2")]
    private static extern int kA42Y7MARHmQqw8i246(
      IntPtr database,
      IntPtr query,
      int length,
      out IntPtr statement,
      out IntPtr tail);

    [DllImport("sqlite3", EntryPoint = "sqlite3_step")]
    private static extern int dpHhrKIEfItOJoU9247(IntPtr statement);

    [DllImport("sqlite3", EntryPoint = "sqlite3_column_count")]
    private static extern int iW7jvbuVEGrYchbZ248(IntPtr statement);

    [DllImport("sqlite3", EntryPoint = "sqlite3_column_name")]
    private static extern IntPtr Va2AMPAzRpMgDYQt249(IntPtr statement, int columnNumber);

    [DllImport("sqlite3", EntryPoint = "sqlite3_column_type")]
    private static extern int NcyupOM2VMDLjKsX250(IntPtr statement, int columnNumber);

    [DllImport("sqlite3", EntryPoint = "sqlite3_column_int")]
    private static extern int xuSylknslys5oehF251(IntPtr statement, int columnNumber);

    [DllImport("sqlite3", EntryPoint = "sqlite3_column_double")]
    private static extern double PYbZJHz6n0EZcPg7252(IntPtr statement, int columnNumber);

    [DllImport("sqlite3", EntryPoint = "sqlite3_column_text")]
    private static extern IntPtr WPI95i7tP68QmGEH253(IntPtr statement, int columnNumber);

    [DllImport("sqlite3", EntryPoint = "sqlite3_column_blob")]
    private static extern IntPtr vXVlztePUMblFogw254(IntPtr statement, int columnNumber);

    [DllImport("sqlite3", EntryPoint = "sqlite3_column_bytes")]
    private static extern IntPtr il9zv7AxQHaDzIKG255(IntPtr statement, int columnNumber);

    [DllImport("sqlite3", EntryPoint = "sqlite3_column_table_name")]
    private static extern IntPtr mXteUVxtATej6MNq256(IntPtr statement, int columnNumber);

    [DllImport("sqlite3", EntryPoint = "sqlite3_finalize")]
    private static extern int QCy1x5bnnouRiBgb257(IntPtr handle);

    public void \u0032vZIU1CmNFYCTgq4258(string baseName)
    {
      if (SvKHkFFpVaj23LA760.\u0031v6kGTeQKnZhqk6E242(this.xJepxVpTNFO1AbGw265(baseName), out this.HQRpEh44HnJrIJ5y183) != 0)
      {
        this.HQRpEh44HnJrIJ5y183 = IntPtr.Zero;
        throw new Exception("Error with opening database " + baseName + "!");
      }
    }

    public void UJNXaI8hL5RvqFaZ259()
    {
      if (!(this.HQRpEh44HnJrIJ5y183 != IntPtr.Zero))
        return;
      SvKHkFFpVaj23LA760.LvBZgpZ2RqTKIH3o243(this.HQRpEh44HnJrIJ5y183);
    }

    public ArrayList C3hBN5vOZcdR6zu6260()
    {
      DataTable dataTable = this.vYZPZPgOdYXXvhac262("SELECT name FROM sqlite_master WHERE type IN ('table','view') AND name NOT LIKE 'sqlite_%'UNION ALL SELECT name FROM sqlite_temp_master WHERE type IN ('table','view') ORDER BY 1");
      ArrayList arrayList = new ArrayList();
      try
      {
        foreach (DataRow row in dataTable.Rows)
          arrayList.Add((object) row.ItemArray[0].ToString());
      }
      finally
      {
        IEnumerator enumerator;
        if (enumerator is IDisposable)
          (enumerator as IDisposable).Dispose();
      }
      return arrayList;
    }

    public void XqXzOj1jmIWPa6W8261(string query)
    {
      IntPtr errorr;
      SvKHkFFpVaj23LA760.dolZRbEUDpYsUzdt244(this.HQRpEh44HnJrIJ5y183, this.xJepxVpTNFO1AbGw265(query), IntPtr.Zero, IntPtr.Zero, out errorr);
      if (errorr != IntPtr.Zero)
        throw new Exception("Error with executing non-query: \"" + query + "\"!\n" + this.j3HpU2DVDrQzglYX266(SvKHkFFpVaj23LA760.\u0032qgiFy8Cw3sg0u72245(errorr)));
    }

    public DataTable vYZPZPgOdYXXvhac262(string query)
    {
      IntPtr statement;
      SvKHkFFpVaj23LA760.kA42Y7MARHmQqw8i246(this.HQRpEh44HnJrIJ5y183, this.xJepxVpTNFO1AbGw265(query), this.sOvhmoav6iL65PDs268(this.xJepxVpTNFO1AbGw265(query)), out statement, out IntPtr _);
      DataTable table = new DataTable();
      int num = this.AKy0IBbj1Yf48GET263(statement, ref table);
      while (num == 100)
        num = this.g5m7zE7798lPl3O5264(statement, ref table);
      SvKHkFFpVaj23LA760.QCy1x5bnnouRiBgb257(statement);
      return table;
    }

    private int AKy0IBbj1Yf48GET263(IntPtr statement, ref DataTable table)
    {
      table = new DataTable("resultTable");
      if (SvKHkFFpVaj23LA760.dpHhrKIEfItOJoU9247(statement) == 100)
      {
        int num1 = SvKHkFFpVaj23LA760.iW7jvbuVEGrYchbZ248(statement);
        object[] objArray = new object[checked (num1 - 1 + 1)];
        int num2 = checked (num1 - 1);
        int columnNumber = 0;
        while (columnNumber <= num2)
        {
          string columnName = this.j3HpU2DVDrQzglYX266(SvKHkFFpVaj23LA760.Va2AMPAzRpMgDYQt249(statement, columnNumber));
          int num3 = SvKHkFFpVaj23LA760.NcyupOM2VMDLjKsX250(statement, columnNumber);
          if (num3 == Conversion.Fix(1))
          {
            table.Columns.Add(columnName, Type.GetType("System.Int32"));
            objArray[columnNumber] = (object) SvKHkFFpVaj23LA760.xuSylknslys5oehF251(statement, columnNumber);
          }
          else if (num3 == Conversion.Fix(2))
          {
            table.Columns.Add(columnName, Type.GetType("System.Single"));
            objArray[columnNumber] = (object) SvKHkFFpVaj23LA760.PYbZJHz6n0EZcPg7252(statement, columnNumber);
          }
          else if (num3 == Conversion.Fix(3))
          {
            table.Columns.Add(columnName, Type.GetType("System.String"));
            objArray[columnNumber] = (object) this.j3HpU2DVDrQzglYX266(SvKHkFFpVaj23LA760.WPI95i7tP68QmGEH253(statement, columnNumber));
          }
          else if (num3 == Conversion.Fix(4))
          {
            table.Columns.Add(columnName, Type.GetType("System.Array"));
            int siz = (int) SvKHkFFpVaj23LA760.il9zv7AxQHaDzIKG255(statement, columnNumber);
            objArray[columnNumber] = (object) this.\u0039axosfmkFsjTQ5xX267(SvKHkFFpVaj23LA760.vXVlztePUMblFogw254(statement, columnNumber), siz);
          }
          else
          {
            table.Columns.Add(columnName, Type.GetType("System.String"));
            objArray[columnNumber] = (object) "";
          }
          checked { ++columnNumber; }
        }
        table.Rows.Add(objArray);
      }
      return SvKHkFFpVaj23LA760.dpHhrKIEfItOJoU9247(statement);
    }

    private int g5m7zE7798lPl3O5264(IntPtr statement, ref DataTable table)
    {
      int num1;
      try
      {
        int num2 = SvKHkFFpVaj23LA760.iW7jvbuVEGrYchbZ248(statement);
        object[] objArray = new object[checked (num2 - 1 + 1)];
        int num3 = checked (num2 - 1);
        int columnNumber = 0;
        while (columnNumber <= num3)
        {
          int num4 = SvKHkFFpVaj23LA760.NcyupOM2VMDLjKsX250(statement, columnNumber);
          if (num4 == Conversion.Fix(1))
            objArray[columnNumber] = (object) SvKHkFFpVaj23LA760.xuSylknslys5oehF251(statement, columnNumber);
          else if (num4 == Conversion.Fix(2))
            objArray[columnNumber] = (object) SvKHkFFpVaj23LA760.PYbZJHz6n0EZcPg7252(statement, columnNumber);
          else if (num4 == Conversion.Fix(3))
            objArray[columnNumber] = (object) this.j3HpU2DVDrQzglYX266(SvKHkFFpVaj23LA760.WPI95i7tP68QmGEH253(statement, columnNumber));
          else if (num4 == Conversion.Fix(4))
          {
            int siz = (int) SvKHkFFpVaj23LA760.il9zv7AxQHaDzIKG255(statement, columnNumber);
            objArray[columnNumber] = (object) this.\u0039axosfmkFsjTQ5xX267(SvKHkFFpVaj23LA760.vXVlztePUMblFogw254(statement, columnNumber), siz);
          }
          else
            objArray[columnNumber] = (object) "";
          checked { ++columnNumber; }
        }
        table.Rows.Add(objArray);
        num1 = SvKHkFFpVaj23LA760.dpHhrKIEfItOJoU9247(statement);
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        ProjectData.ClearProjectError();
      }
      return num1;
    }

    private IntPtr xJepxVpTNFO1AbGw265(string str)
    {
      if (str == null)
        return IntPtr.Zero;
      byte[] bytes1 = Encoding.UTF8.GetBytes(str);
      int bytes2 = checked (bytes1.Length + 1);
      IntPtr num = SvKHkFFpVaj23LA760.EugE2eHBChQoRw8O239(SvKHkFFpVaj23LA760.WI4HTNKSFLNnuXwk240(), 0U, checked ((uint) bytes2));
      Marshal.Copy(bytes1, 0, num, bytes1.Length);
      Marshal.WriteByte(num, bytes1.Length, (byte) 0);
      return num;
    }

    private string j3HpU2DVDrQzglYX266(IntPtr ptr)
    {
      if (ptr == IntPtr.Zero)
        return (string) null;
      Encoding utF8 = Encoding.UTF8;
      int num = this.sOvhmoav6iL65PDs268(ptr);
      byte[] numArray = new byte[checked (num - 1 + 1)];
      Marshal.Copy(ptr, numArray, 0, num);
      return utF8.GetString(numArray, 0, num);
    }

    private Array \u0039axosfmkFsjTQ5xX267(IntPtr ptr, int siz)
    {
      if (ptr == IntPtr.Zero)
        return (Array) null;
      Encoding utF8 = Encoding.UTF8;
      this.sOvhmoav6iL65PDs268(ptr);
      byte[] destination = new byte[checked (siz - 1 + 1)];
      Marshal.Copy(ptr, destination, 0, siz);
      return (Array) destination;
    }

    private int sOvhmoav6iL65PDs268(IntPtr ptr) => ptr == IntPtr.Zero ? 0 : SvKHkFFpVaj23LA760.NRfIPTQEN952Ogyp241(ptr);

    public enum TS7rPGBLZ2iaufeP61
    {
      INT = 1,
      FLOAT = 2,
      TEXT = 3,
      BLOB = 4,
      NULL = 5,
    }
  }
}
