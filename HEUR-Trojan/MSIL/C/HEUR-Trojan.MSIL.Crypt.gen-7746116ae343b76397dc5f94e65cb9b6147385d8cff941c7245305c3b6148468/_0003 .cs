// Decompiled with JetBrains decompiler
// Type:  
// Assembly: InternalEncoderBestFitFallb, Version=1.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E8766DC3-D5F7-4CA3-C898-3E3E7E9D159B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.MSIL.Crypt.gen-7746116ae343b76397dc5f94e65cb9b6147385d8cff941c7245305c3b6148468.exe

using DomainObjects;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;

[Table(Name = "dbo.Show")]
public sealed class \u0003\u2007 : 
  INotifyPropertyChanging,
  INotifyPropertyChanged,
  IShow,
  \u000E\u2006
{
  private static PropertyChangingEventArgs \u0002 = new PropertyChangingEventArgs(string.Empty);
  private Guid _ShowId;
  private string _VenueName;
  private string _City;
  private string _State;
  private string _Country;
  private DateTime? _ShowDate;
  private Decimal? _TicketPrice;
  private string _Notes;
  private DateTime _CreatedDate;
  private DateTime? _UpdatedDate;
  private DateTime? _DeletedDate;
  private bool _Deleted;
  private int? _Order;
  private string _VenueNotes;
  private string _PhishNetUrl;
  private int? _PhishNetShowId;
  private EntitySet<\u000F\u2006> _Sets;

  public \u0003\u2007() => this._Sets = new EntitySet<\u000F\u2006>(new Action<\u000F\u2006>(this.\u0002), new Action<\u000F\u2006>(this.\u0003));

  [Column(DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true, Storage = "_ShowId")]
  public Guid ShowId
  {
    get => this._ShowId;
    set
    {
      if (!(this._ShowId != value))
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._ShowId = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036462076));
    }
  }

  [Column(DbType = "VarChar(100)", Storage = "_VenueName")]
  public string VenueName
  {
    get => this._VenueName;
    set
    {
      if (!(this._VenueName != value))
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._VenueName = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036461841));
    }
  }

  [Column(DbType = "VarChar(50)", Storage = "_City")]
  public string City
  {
    get => this._City;
    set
    {
      if (!(this._City != value))
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._City = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036465377));
    }
  }

  [Column(DbType = "Char(2)", Storage = "_State")]
  public string State
  {
    get => this._State;
    set
    {
      if (!(this._State != value))
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._State = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036465406));
    }
  }

  [Column(DbType = "NVarChar(50)", Storage = "_Country")]
  public string Country
  {
    get => this._Country;
    set
    {
      if (!(this._Country != value))
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._Country = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036465354));
    }
  }

  [Column(DbType = "Date", Storage = "_ShowDate")]
  public DateTime? ShowDate
  {
    get => this._ShowDate;
    set
    {
      DateTime? showDate = this._ShowDate;
      DateTime? nullable = value;
      if ((showDate.HasValue == nullable.HasValue ? (showDate.HasValue ? (showDate.GetValueOrDefault() != nullable.GetValueOrDefault() ? 1 : 0) : 0) : 1) == 0)
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._ShowDate = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036465372));
    }
  }

  [Column(DbType = "Money", Storage = "_TicketPrice")]
  public Decimal? TicketPrice
  {
    get => this._TicketPrice;
    set
    {
      Decimal? ticketPrice = this._TicketPrice;
      Decimal? nullable = value;
      if (ticketPrice.GetValueOrDefault() == nullable.GetValueOrDefault() & ticketPrice.HasValue == nullable.HasValue)
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._TicketPrice = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036465365));
    }
  }

  [Column(DbType = "NVarChar(MAX)", Storage = "_Notes")]
  public string Notes
  {
    get => this._Notes;
    set
    {
      if (!(this._Notes != value))
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._Notes = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036461612));
    }
  }

  [Column(DbType = "DateTime NOT NULL", Storage = "_CreatedDate")]
  public DateTime CreatedDate
  {
    get => this._CreatedDate;
    set
    {
      if (!(this._CreatedDate != value))
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._CreatedDate = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036461608));
    }
  }

  [Column(DbType = "DateTime", Storage = "_UpdatedDate")]
  public DateTime? UpdatedDate
  {
    get => this._UpdatedDate;
    set
    {
      DateTime? updatedDate = this._UpdatedDate;
      DateTime? nullable = value;
      if ((updatedDate.HasValue == nullable.HasValue ? (updatedDate.HasValue ? (updatedDate.GetValueOrDefault() != nullable.GetValueOrDefault() ? 1 : 0) : 0) : 1) == 0)
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._UpdatedDate = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036461622));
    }
  }

  [Column(DbType = "DateTime", Storage = "_DeletedDate")]
  public DateTime? DeletedDate
  {
    get => this._DeletedDate;
    set
    {
      DateTime? deletedDate = this._DeletedDate;
      DateTime? nullable = value;
      if ((deletedDate.HasValue == nullable.HasValue ? (deletedDate.HasValue ? (deletedDate.GetValueOrDefault() != nullable.GetValueOrDefault() ? 1 : 0) : 0) : 1) == 0)
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._DeletedDate = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036461596));
    }
  }

  [Column(DbType = "Bit NOT NULL", Storage = "_Deleted")]
  public bool Deleted
  {
    get => this._Deleted;
    set
    {
      if (this._Deleted == value)
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._Deleted = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036462058));
    }
  }

  [Column(DbType = "Int", Name = "[Order]", Storage = "_Order")]
  public int? Order
  {
    get => this._Order;
    set
    {
      int? order = this._Order;
      int? nullable = value;
      if (order.GetValueOrDefault() == nullable.GetValueOrDefault() & order.HasValue == nullable.HasValue)
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._Order = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036461977));
    }
  }

  [Column(DbType = "VarChar(MAX)", Storage = "_VenueNotes")]
  public string VenueNotes
  {
    get => this._VenueNotes;
    set
    {
      if (!(this._VenueNotes != value))
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._VenueNotes = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036465339));
    }
  }

  [Column(DbType = "VarChar(200)", Storage = "_PhishNetUrl")]
  public string PhishNetUrl
  {
    get => this._PhishNetUrl;
    set
    {
      if (!(this._PhishNetUrl != value))
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._PhishNetUrl = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036465290));
    }
  }

  [Column(DbType = "Int", Storage = "_PhishNetShowId")]
  public int? PhishNetShowId
  {
    get => this._PhishNetShowId;
    set
    {
      int? phishNetShowId = this._PhishNetShowId;
      int? nullable = value;
      if (phishNetShowId.GetValueOrDefault() == nullable.GetValueOrDefault() & phishNetShowId.HasValue == nullable.HasValue)
        return;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
      this._PhishNetShowId = value;
      this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002(\u0008\u200A.\u0002(-2036465312));
    }
  }

  [Association(Name = "Show_Set", OtherKey = "ShowId", Storage = "_Sets", ThisKey = "ShowId")]
  public EntitySet<\u000F\u2006> Sets
  {
    get => this._Sets;
    set => this._Sets.Assign((IEnumerable<\u000F\u2006>) value);
  }

  public event PropertyChangingEventHandler PropertyChanging;

  public event PropertyChangedEventHandler PropertyChanged;

  protected virtual void \u0003\u2007\u2006\u200A\u2005\u2008\u0002()
  {
    if (this.\u0003 == null)
      return;
    this.\u0003((object) this, \u0003\u2007.\u0002);
  }

  protected virtual void \u0003\u2007\u2006\u200A\u2005\u2008\u0002(string _param1)
  {
    if (this.\u0005 == null)
      return;
    this.\u0005((object) this, new PropertyChangedEventArgs(_param1));
  }

  private void \u0002(\u000F\u2006 _param1)
  {
    this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
    _param1.Show = this;
  }

  private void \u0003(\u000F\u2006 _param1)
  {
    this.\u0003\u2007\u2006\u200A\u2005\u2008\u0002();
    _param1.Show = (\u0003\u2007) null;
  }

  public string GetShowName() => string.Format(\u0008\u200A.\u0002(-2036465251), (object) this.ShowDate.Value.ToString(\u0008\u200A.\u0002(-2036461885)), (object) this.VenueName, (object) this.City, (object) this.State);
}
