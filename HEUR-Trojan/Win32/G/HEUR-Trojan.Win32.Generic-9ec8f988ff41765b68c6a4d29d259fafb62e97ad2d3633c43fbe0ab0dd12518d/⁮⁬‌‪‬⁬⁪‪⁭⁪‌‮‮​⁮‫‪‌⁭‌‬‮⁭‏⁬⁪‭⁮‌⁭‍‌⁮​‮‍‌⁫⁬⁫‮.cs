// Decompiled with JetBrains decompiler
// Type: ⁮⁬‌‪‬⁬⁪‪⁭⁪‌‮‮​⁮‫‪‌⁭‌‬‮⁭‏⁬⁪‭⁮‌⁭‍‌⁮​‮‍‌⁫⁬⁫‮
// Assembly: ReadLineS0SAT, Version=2.0.8.1, Culture=neutral, PublicKeyToken=null
// MVID: 826822DE-6F21-4D67-9238-0DAF50EB618B
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\HEUR-Trojan.Win32.Generic-9ec8f988ff41765b68c6a4d29d259fafb62e97ad2d3633c43fbe0ab0dd12518d.exe

using System;

public class \u206E⁬‌‪‬⁬⁪‪⁭⁪‌‮‮​⁮‫‪‌⁭‌‬‮⁭‏⁬⁪‭⁮‌⁭‍‌⁮​‮‍‌⁫⁬⁫‮ : 
  \u202C‎‬⁮⁬‪⁫⁫⁬‎‪⁪​⁭‪‌⁫‌⁬​‎‮​⁬⁯‌⁯‪‎‪‪⁪⁮⁭‪‮‎‬‭‎‮,
  \u206B⁭⁮‍‪‎‮⁪‎​⁬‭⁪‫‫⁫⁪‬⁬‎​​‬‭‍‌‭‎⁪‫‭‏⁫⁭⁬‪‍‌⁬⁮‮
{
  [Obsolete("Use 'IsoTrailers' instead")]
  public const int \u206F‮‍‍‪⁫⁭‬⁯⁮‌‌⁬⁬⁭⁯‌‬⁭⁬⁯‎‬‏⁮⁪‎‪⁫‮‫‏‬⁬⁪‎‫⁮​‭‮ = 188;
  [Obsolete("Use 'IsoTrailers' instead")]
  public const int \u200E‬​⁯‏‏‏⁮⁬⁯⁯⁭‎‪‎⁯⁪⁪⁬⁯‭‪‫​⁯‫⁮⁮⁭‎‍⁮‏⁮‫⁪⁭​⁫‮ = 12748;
  [Obsolete("Use 'IsoTrailers' instead")]
  public const int \u206A‎‍‬⁬‭⁬‌‫⁯⁬⁬⁪‫‏⁮⁫‪‭​‭⁫⁯‪⁬⁯⁯​⁯‏‫⁯‪‮‭‭​‍‏‮‮ = 13004;
  [Obsolete("Use 'IsoTrailers' instead")]
  public const int \u206D‏‬‌‍⁬‍⁯‫‬‬‎⁯‭‮‌‏⁯⁮‫​​⁬‭‫‮⁫‏‮‏‎‮‭‭⁭​‍⁫⁬⁮‮ = 13260;
  [Obsolete("Use 'IsoTrailers' instead")]
  public const int \u206A‮‏⁭‫⁭‪‏‌‫‫⁪⁯⁮‮‎⁯⁫‍‬⁯⁮‭‌⁭‌‍⁪‮‏‭⁮⁯‏‏‮⁮‪⁫‪‮ = 13516;
  [Obsolete("Use 'IsoTrailers' instead")]
  public const int \u200B⁭​⁬‍​‮⁫⁭‮⁮⁪⁪‮​⁯⁫‮⁭‬⁬‪⁪⁬‎‭⁫​‬⁮⁬‬‭‌⁬‏‮⁭‎‭‮ = 13772;
  [Obsolete("Use 'IsoTrailers' instead")]
  public const int \u206E⁪‫⁮‌⁯‍‭‬‫⁫‭⁬‏‫⁬‍⁬‬⁫⁬‪⁮‎⁯⁮​‬​⁭⁪‬‏‬‏‎⁬⁯‫‍‮ = 14028;
  [Obsolete("Use 'IsoTrailers' instead")]
  public const int \u206F⁭‏‏‌⁭⁯‭‎⁪‎‌‌⁭⁯​⁯⁫‭‌⁫‌‮⁮⁮‌‪‭⁮‌⁭⁮‬⁫‌⁮⁪‮⁪‬‮ = 14284;
  private \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ \u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮;
  private \u200C⁮‏‍⁮⁬⁭⁭​‏⁪⁭⁮⁮‫⁪⁪‬⁭⁯‏‭⁮‪​⁪⁬‫‌‫‏⁯⁫⁬‌‮​‪⁫⁯‮ \u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮;
  private \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮ \u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮;
  private byte[] \u206C‭⁮‎‌⁬​‏⁬‌⁪‏⁯⁭⁫⁮‏⁫⁫‫‏‌‬‎‫‍⁫‬‍‌‌‪‮⁪⁭‎⁫⁯⁭‎‮;
  private int \u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮;
  private int \u206D⁫⁫⁬⁯‬⁮‎‬‪‬‭‫‏​⁪‎‎⁮‮⁯⁪‪‍‫‭‌‎‏⁮⁫‮‌​‏‎‏‬⁫‭‮;
  private int \u202E⁬⁬​⁪⁬⁮‫⁮⁪​‮‮⁮‏‍​​‪‭⁫⁮⁪⁮​‎‮⁮⁬⁬‭⁬‭⁪‮⁬‪‍‍⁫‮;
  private byte[] \u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮;
  private byte[] \u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮;
  private int \u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮;
  private readonly int \u200C‭‪‍​⁫‍⁮‬⁬‌‬⁭‪‮⁬​⁪‭⁮⁮‏⁫‍⁫⁬‫⁯‭⁯​‬‪​‬‪‏‏‫‏‮;
  private bool \u206D‎‪‮‬‭‍‍⁭⁮‏​⁬‍‏‍‍‪‎‭⁬⁫‬‍⁮⁪‬‎⁫‌⁫⁫⁭‌‬‏⁯‬​‎‮;
  private byte[] \u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮;
  private byte[] \u200B‪⁭​⁫‭​‎‍⁮⁭‌‌‍‏⁮⁮‮⁯⁮‍‮⁬‌‎‮‮⁮⁬⁪​⁪‎‬⁫‮‮‍⁪‮‮;
  private byte[] \u206C‭‬‬‮⁮‭⁬⁬‏⁬⁭⁯‏‭‪‮⁭‎​‭⁫‮‭‎⁪‍‏‭‭‬‎⁬‏‪‎⁫‬​‏‮;
  private int \u200E‌‪⁮⁪⁮⁮‮‍‬‎⁭‏‬⁫‏‌‫‭‪⁫‌‭‏‭‌‏⁪⁫‎⁫​‏⁪⁮‍⁪⁬‎⁫‮;
  private int \u206B‪‮‎⁯‏‌⁪‫‏⁭‬⁯‭‫⁪‭‮‏‭⁪‭‮‭‫‪⁮‏‎‍⁮‪⁮⁫​‮‎⁫‏⁯‮;

  public byte[] \u206F‮⁮‫⁬⁫‮⁫⁮⁫⁫⁭⁪​‪‭‎‍⁭⁯‮‬‬⁮⁮‭‪‫⁪⁪‬​‎​⁮⁯​⁭‫‬‮() => this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮;

  public \u206E⁬‌‪‬⁬⁪‪⁭⁪‌‮‮​⁮‫‪‌⁭‌‬‮⁭‏⁬⁪‭⁮‌⁭‍‌⁮​‮‍‌⁫⁬⁫‮(
    \u200C⁮‏‍⁮⁬⁭⁭​‏⁪⁭⁮⁮‫⁪⁪‬⁭⁯‏‭⁮‪​⁪⁬‫‌‫‏⁯⁫⁬‌‮​‪⁫⁯‮ _param1,
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ _param2,
    int _param3,
    bool _param4)
  {
    this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮ = _param1;
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮ = _param2;
    this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮ = _param2.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮();
    this.\u200C‭‪‍​⁫‍⁮‬⁬‌‬⁭‪‮⁬​⁪‭⁮⁮‏⁫‍⁫⁬‫⁯‭⁯​‬‪​‬‪‏‏‫‏‮ = _param3;
    if (_param4)
      this.\u206D⁫⁫⁬⁯‬⁮‎‬‪‬‭‫‏​⁪‎‎⁮‮⁯⁪‪‍‫‭‌‎‏⁮⁫‮‌​‏‎‏‬⁫‭‮ = 188;
    else
      this.\u206D⁫⁫⁬⁯‬⁮‎‬‪‬‭‫‏​⁪‎‎⁮‮⁯⁪‪‍‫‭‌‎‏⁮⁫‮‌​‏‎‏‬⁫‭‮ = !\u200F‎⁯‏⁭‮‭‭⁯⁬‬⁪‌⁭⁭‮‏⁭⁫‭‏⁬⁭‫‌‪​⁭⁬‭⁮⁭⁮⁯‬‌⁮⁫‬‫‮.\u206E⁭‪⁮‪‍‌‮‮‏⁪‎⁫‌‌⁫⁫⁫⁫⁭‎⁪⁯⁪⁭‭⁪⁫⁬⁬‮​‮⁯⁪⁯⁪⁫⁯‭‮(_param2) ? \u200F‎⁯‏⁭‮‭‭⁯⁬‬⁪‌⁭⁭‮‏⁭⁫‭‏⁬⁭‫‌‪​⁭⁬‭⁮⁭⁮⁯‬‌⁮⁫‬‫‮.\u206B‮⁭‭⁬‎‫‎⁯⁮‌‬‪⁯‏‎​⁪‏‬‮⁬⁪‮‎‭‪⁬⁪⁫⁬‎‌‫‬​‬‭⁪‫‮(_param2) : throw new ArgumentException("no valid trailer", "digest");
  }

  public \u206E⁬‌‪‬⁬⁪‪⁭⁪‌‮‮​⁮‫‪‌⁭‌‬‮⁭‏⁬⁪‭⁮‌⁭‍‌⁮​‮‍‌⁫⁬⁫‮(
    \u200C⁮‏‍⁮⁬⁭⁭​‏⁪⁭⁮⁮‫⁪⁪‬⁭⁯‏‭⁮‪​⁪⁬‫‌‫‏⁯⁫⁬‌‮​‪⁫⁯‮ _param1,
    \u206E‏‏⁮⁫‭⁮‌‏‎⁬⁪‍⁪‎‎‏‎‬‫​⁪‬⁭⁭‬​​‎⁪‌‍⁬⁬⁯‍‌‬‫‭‮ _param2,
    int _param3)
    : this(_param1, _param2, _param3, false)
  {
  }

  public virtual string \u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ => this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206B‪⁭‪⁮‍⁮‪⁭⁪‪​⁮‭‭⁬⁯‍‎⁮⁬‫‍‏‌⁬⁯⁯‮⁪‪‬‫⁯‬⁪‌‍‮‎‮ + "withISO9796-2S2";

  public virtual void \u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(
    bool _param1,
    \u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮ _param2)
  {
    \u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮ obj1;
    switch (_param2)
    {
      case \u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮ _:
        \u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮ obj2 = (\u206A‍‫‫‪⁮‏‪‫⁫‎⁮‭⁭⁮​‬⁬⁮‫‮‎⁮⁫⁯‫‏⁯⁭⁬⁯⁪‬⁬‫⁪​‫⁪‌‮) _param2;
        obj1 = (\u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮) obj2.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮;
        if (_param1)
        {
          this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮ = obj2.\u206A‫⁯‭⁯⁭‫‌‍​⁭‬‮‪⁭⁭⁬⁯‍​‌‮‪⁪‬⁮⁭‬‌⁬⁬⁬‌‭‏‏⁭⁬​‏‮;
          break;
        }
        break;
      case \u200B⁪‮⁫‏‎‌‍‍‭​‭‬‭‎‬‏​⁪⁮‭‪‭⁫‍‫⁫⁮⁬‫‌‫⁫‫⁯‭‬‍⁭⁪‮ _:
        if (!_param1)
          throw new ArgumentException("ParametersWithSalt only valid for signing", "parameters");
        \u200B⁪‮⁫‏‎‌‍‍‭​‭‬‭‎‬‏​⁪⁮‭‪‭⁫‍‫⁫⁮⁬‫‌‫⁫‫⁯‭‬‍⁭⁪‮ obj3 = (\u200B⁪‮⁫‏‎‌‍‍‭​‭‬‭‎‬‏​⁪⁮‭‪‭⁫‍‫⁫⁮⁬‫‌‫⁫‫⁯‭‬‍⁭⁪‮) _param2;
        obj1 = (\u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮) obj3.\u202C⁬⁮⁮‮⁮​‫⁪⁬⁬⁬​‎‍⁭⁫‍⁯‬⁪‬⁮⁪‬‬⁭⁭⁫⁫‏‭⁪‬​‮​‫‫⁫‮;
        this.\u206C‭⁮‎‌⁬​‏⁬‌⁪‏⁯⁭⁫⁮‏⁫⁫‫‏‌‬‎‫‍⁫‬‍‌‌‪‮⁪⁭‎⁫⁯⁭‎‮ = obj3.\u200F⁫‏‍‍⁭‌⁬‪‬‍⁪⁯⁪‌⁫⁫⁯⁬⁯‏⁯⁮‫⁪⁫⁬​‏⁭‍‌‪⁪‬​‎⁯​‌‮();
        if (this.\u206C‭⁮‎‌⁬​‏⁬‌⁪‏⁯⁭⁫⁮‏⁫⁫‫‏‌‬‎‫‍⁫‬‍‌‌‪‮⁪⁭‎⁫⁯⁭‎‮.Length != this.\u200C‭‪‍​⁫‍⁮‬⁬‌‬⁭‪‮⁬​⁪‭⁮⁮‏⁫‍⁫⁬‫⁯‭⁯​‬‪​‬‪‏‏‫‏‮)
          throw new ArgumentException("Fixed salt is of wrong length");
        break;
      default:
        obj1 = (\u202A⁫‎⁯‎⁪‫‬​⁪⁫‭⁪‎‬‪‎⁬⁭⁪​⁬⁪⁪‫‪⁯‏⁪⁬⁫‪​‬‮‫⁬‌⁬‎‮) _param2;
        if (_param1)
        {
          this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮ = new \u200D​⁪‮​‫⁯⁮‪‫‪‍⁪⁮⁫‮​⁯⁪⁫⁫‬‮‎‫‎⁪⁮‮‎‌⁬‮‫⁫‬‮‌⁪‭‮();
          break;
        }
        break;
    }
    this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206A⁭⁫‪‫‬⁪‎​⁯‎‪⁬⁭​‍⁪⁫‌⁪‫⁯​⁪⁫⁫‪‬⁬‏‫‮⁬‬⁭⁬⁫‍⁮‮(_param1, (\u202B⁭⁮‬‎⁪‬⁪‬⁮⁪‮‬‍‎⁮‎⁫‎​‌⁫⁪‭‬‮‏‮​⁮‌‌‬‌⁯‮⁫‮‬⁫‮) obj1);
    this.\u202E⁬⁬​⁪⁬⁮‫⁮⁪​‮‮⁮‏‍​​‪‭⁫⁮⁪⁮​‎‮⁮⁬⁬‭⁬‭⁪‮⁬‪‍‍⁫‮ = obj1.\u200D‌⁯‍‭‪‍⁭⁪​‭‮⁬‌⁯⁮⁮‏⁬⁯‪‪‏⁪‏⁬‍​‌‎⁮‬⁬‍‭‎‫‪‮‏‮.\u200B‌⁮⁫‪‎⁬⁮​⁯⁬⁪‭⁯‌‌⁪‪⁬⁬‭‏⁮‬‬‏⁫‬‫‏⁭⁭‫‫⁪‬‏⁯⁬‮;
    this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮ = new byte[(this.\u202E⁬⁬​⁪⁬⁮‫⁮⁪​‮‮⁮‏‍​​‪‭⁫⁮⁪⁮​‎‮⁮⁬⁬‭⁬‭⁪‮⁬‪‍‍⁫‮ + 7) / 8];
    this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮ = this.\u206D⁫⁫⁬⁯‬⁮‎‬‪‬‭‫‏​⁪‎‎⁮‮⁯⁪‪‍‫‭‌‎‏⁮⁫‮‌​‏‎‏‬⁫‭‮ != 188 ? new byte[this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮.Length - this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮() - this.\u200C‭‪‍​⁫‍⁮‬⁬‌‬⁭‪‮⁬​⁪‭⁮⁮‏⁫‍⁫⁬‫⁯‭⁯​‬‪​‬‪‏‏‫‏‮ - 1 - 2] : new byte[this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮.Length - this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮() - this.\u200C‭‪‍​⁫‍⁮‬⁬‌‬⁭‪‮⁬​⁪‭⁮⁮‏⁫‍⁫⁬‫⁯‭⁯​‬‪​‬‪‏‏‫‏‮ - 1 - 1];
    this.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
  }

  private bool \u206B⁫​⁯‍‎‫⁬‌⁭‌⁯‭⁭⁬‭‭⁭‍⁯‏‌‬⁮⁮⁮‌‍‌⁬⁮⁪‪​‪‮‍‭​⁮‮(byte[] _param1, byte[] _param2)
  {
    if (this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ != _param2.Length)
      return false;
    bool flag = true;
    for (int index = 0; index != _param2.Length; ++index)
    {
      if ((int) _param1[index] != (int) _param2[index])
        flag = false;
    }
    return flag;
  }

  private void \u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(byte[] _param1) => Array.Clear((Array) _param1, 0, _param1.Length);

  public virtual void \u202C​⁯‮‭⁮⁬‮‏‏‌⁬⁬‫⁯⁮‪⁮⁭⁬‪‎⁬⁬​⁬‌‍⁯⁬⁯‮‬⁪⁯‬⁬​‌⁬‮(byte[] _param1)
  {
    byte[] sourceArray = this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(_param1, 0, _param1.Length);
    if (sourceArray.Length < (this.\u202E⁬⁬​⁪⁬⁮‫⁮⁪​‮‮⁮‏‍​​‪‭⁫⁮⁪⁮​‎‮⁮⁬⁬‭⁬‭⁪‮⁬‪‍‍⁫‮ + 7) / 8)
    {
      byte[] destinationArray = new byte[(this.\u202E⁬⁬​⁪⁬⁮‫⁮⁪​‮‮⁮‏‍​​‪‭⁫⁮⁪⁮​‎‮⁮⁬⁬‭⁬‭⁪‮⁬‪‍‍⁫‮ + 7) / 8];
      Array.Copy((Array) sourceArray, 0, (Array) destinationArray, destinationArray.Length - sourceArray.Length, sourceArray.Length);
      this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(sourceArray);
      sourceArray = destinationArray;
    }
    int num1;
    if (((int) sourceArray[sourceArray.Length - 1] & (int) byte.MaxValue ^ 188) == 0)
    {
      num1 = 1;
    }
    else
    {
      int num2 = ((int) sourceArray[sourceArray.Length - 2] & (int) byte.MaxValue) << 8 | (int) sourceArray[sourceArray.Length - 1] & (int) byte.MaxValue;
      if (\u200F‎⁯‏⁭‮‭‭⁯⁬‬⁪‌⁭⁭‮‏⁭⁫‭‏⁬⁭‫‌‪​⁭⁬‭⁮⁭⁮⁯‬‌⁮⁫‬‫‮.\u206E⁭‪⁮‪‍‌‮‮‏⁪‎⁫‌‌⁫⁫⁫⁫⁭‎⁪⁯⁪⁭‭⁪⁫⁬⁬‮​‮⁯⁪⁯⁪⁫⁯‭‮(this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮))
        throw new ArgumentException("unrecognised hash in signature");
      if (num2 != \u200F‎⁯‏⁭‮‭‭⁯⁬‬⁪‌⁭⁭‮‏⁭⁫‭‏⁬⁭‫‌‪​⁭⁬‭⁮⁭⁮⁯‬‌⁮⁫‬‫‮.\u206B‮⁭‭⁬‎‫‎⁯⁮‌‬‪⁯‏‎​⁪‏‬‮⁬⁪‮‎‭‪⁬⁪⁫⁬‎‌‫‬​‬‭⁪‫‮(this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮))
        throw new InvalidOperationException("signer initialised with wrong digest for trailer " + num2.ToString());
      num1 = 2;
    }
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(new byte[this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮], 0);
    byte[] numArray = this.\u206E⁯‪‍‪‌‮‎⁮‫⁬⁮‮‎‪​‬‮⁯‪‪⁭⁪‪‎⁭⁪⁭‭‪‪⁭⁪⁮‭‎‮⁭⁪‮(sourceArray, sourceArray.Length - this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮ - num1, this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮, sourceArray.Length - this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮ - num1);
    for (int index = 0; index != numArray.Length; ++index)
      sourceArray[index] ^= numArray[index];
    sourceArray[0] &= (byte) 127;
    int sourceIndex = 0;
    do
      ;
    while (sourceIndex < sourceArray.Length && sourceArray[sourceIndex++] != (byte) 1);
    if (sourceIndex >= sourceArray.Length)
      this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(sourceArray);
    this.\u206D‎‪‮‬‭‍‍⁭⁮‏​⁬‍‏‍‍‪‎‭⁬⁫‬‍⁮⁪‬‎⁫‌⁫⁫⁭‌‬‏⁯‬​‎‮ = sourceIndex > 1;
    this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮ = new byte[numArray.Length - sourceIndex - this.\u200C‭‪‍​⁫‍⁮‬⁬‌‬⁭‪‮⁬​⁪‭⁮⁮‏⁫‍⁫⁬‫⁯‭⁯​‬‪​‬‪‏‏‫‏‮];
    Array.Copy((Array) sourceArray, sourceIndex, (Array) this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮, 0, this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮.Length);
    this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮.CopyTo((Array) this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮, 0);
    this.\u200B‪⁭​⁫‭​‎‍⁮⁭‌‌‍‏⁮⁮‮⁯⁮‍‮⁬‌‎‮‮⁮⁬⁪​⁪‎‬⁫‮‮‍⁪‮‮ = _param1;
    this.\u206C‭‬‬‮⁮‭⁬⁬‏⁬⁭⁯‏‭‪‮⁭‎​‭⁫‮‭‎⁪‍‏‭‭‬‎⁬‏‪‎⁫‬​‏‮ = sourceArray;
    this.\u200E‌‪⁮⁪⁮⁮‮‍‬‎⁭‏‬⁫‏‌‫‭‪⁫‌‭‏‭‌‏⁪⁫‎⁫​‏⁪⁮‍⁪⁬‎⁫‮ = sourceIndex;
    this.\u206B‪‮‎⁯‏‌⁪‫‏⁭‬⁯‭‫⁪‭‮‏‭⁪‭‮‭‫‪⁮‏‎‍⁮‪⁮⁫​‮‎⁫‏⁯‮ = num1;
  }

  public virtual void \u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮(byte _param1)
  {
    if (this.\u200B‪⁭​⁫‭​‎‍⁮⁭‌‌‍‏⁮⁮‮⁯⁮‍‮⁬‌‎‮‮⁮⁬⁪​⁪‎‬⁫‮‮‍⁪‮‮ == null && this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ < this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮.Length)
      this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮[this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮++] = _param1;
    else
      this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮(_param1);
  }

  public virtual void \u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(
    byte[] _param1,
    int _param2,
    int _param3)
  {
    if (this.\u200B‪⁭​⁫‭​‎‍⁮⁭‌‌‍‏⁮⁮‮⁯⁮‍‮⁬‌‎‮‮⁮⁬⁪​⁪‎‬⁫‮‮‍⁪‮‮ == null)
    {
      for (; _param3 > 0 && this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ < this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮.Length; --_param3)
      {
        this.\u200E‍⁬‍‮‍⁮⁮​‭‪⁫‬⁭​⁯‭⁯‪‬⁮‬‏​⁪⁫‎‮​⁬⁮‪‎‮⁭​‏⁯‬⁮‮(_param1[_param2]);
        ++_param2;
      }
    }
    if (_param3 <= 0)
      return;
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param1, _param2, _param3);
  }

  public virtual void \u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮()
  {
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ = 0;
    if (this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮ != null)
      this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮);
    if (this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮ != null)
    {
      this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮);
      this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮ = (byte[]) null;
    }
    this.\u206D‎‪‮‬‭‍‍⁭⁮‏​⁬‍‏‍‍‪‎‭⁬⁫‬‍⁮⁪‬‎⁫‌⁫⁫⁭‌‬‏⁯‬​‎‮ = false;
    if (this.\u200B‪⁭​⁫‭​‎‍⁮⁭‌‌‍‏⁮⁮‮⁯⁮‍‮⁬‌‎‮‮⁮⁬⁪​⁪‎‬⁫‮‮‍⁪‮‮ == null)
      return;
    this.\u200B‪⁭​⁫‭​‎‍⁮⁭‌‌‍‏⁮⁮‮⁯⁮‍‮⁬‌‎‮‮⁮⁬⁪​⁪‎‬⁫‮‮‍⁪‮‮ = (byte[]) null;
    this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(this.\u206C‭‬‬‮⁮‭⁬⁬‏⁬⁭⁯‏‭‪‮⁭‎​‭⁫‮‭‎⁪‍‏‭‭‬‎⁬‏‪‎⁫‬​‏‮);
    this.\u206C‭‬‬‮⁮‭⁬⁬‏⁬⁭⁯‏‭‪‮⁭‎​‭⁫‮‭‎⁪‍‏‭‭‬‎⁬‏‪‎⁫‬​‏‮ = (byte[]) null;
  }

  public virtual byte[] \u202B‌‮‫⁬‏⁫‍⁯‎‍⁪⁮​⁭⁪⁮⁮‮⁭​⁯‭‍‫‍‏⁮‬‏⁭‫⁮⁬‍‪‬⁬‫‪‮()
  {
    byte[] numArray1 = new byte[this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray1, 0);
    byte[] numArray2 = new byte[8];
    this.\u202C‬‭‮‬⁪‏⁪‭‫⁮⁯‎‎‭⁮⁫‪⁪‭‮‎‪⁯‪‪‍‫‏‮⁮‫‫‮⁯⁬‭‍​‭‮((long) (this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ * 8), numArray2);
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray2, 0, numArray2.Length);
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮, 0, this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮);
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray1, 0, numArray1.Length);
    byte[] numArray3;
    if (this.\u206C‭⁮‎‌⁬​‏⁬‌⁪‏⁯⁭⁫⁮‏⁫⁫‫‏‌‬‎‫‍⁫‬‍‌‌‪‮⁪⁭‎⁫⁯⁭‎‮ != null)
    {
      numArray3 = this.\u206C‭⁮‎‌⁬​‏⁬‌⁪‏⁯⁭⁫⁮‏⁫⁫‫‏‌‬‎‫‍⁫‬‍‌‌‪‮⁪⁭‎⁫⁯⁭‎‮;
    }
    else
    {
      numArray3 = new byte[this.\u200C‭‪‍​⁫‍⁮‬⁬‌‬⁭‪‮⁬​⁪‭⁮⁮‏⁫‍⁫⁬‫⁯‭⁯​‬‪​‬‪‏‏‫‏‮];
      ((Random) this.\u202C⁪‎⁫⁭‌⁯⁪‫‮​⁪‬⁯‍‌‭⁭⁬​⁬⁪‬⁪‪⁪‪‏‫‌‎‌⁭‌‪‎⁯‮⁭⁫‮).NextBytes(numArray3);
    }
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray3, 0, numArray3.Length);
    byte[] sourceArray = new byte[this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(sourceArray, 0);
    int num = 2;
    if (this.\u206D⁫⁫⁬⁯‬⁮‎‬‪‬‭‫‏​⁪‎‎⁮‮⁯⁪‪‍‫‭‌‎‏⁮⁫‮‌​‏‎‏‬⁫‭‮ == 188)
      num = 1;
    int index1 = this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮.Length - this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ - numArray3.Length - this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮ - num - 1;
    this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮[index1] = (byte) 1;
    Array.Copy((Array) this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮, 0, (Array) this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮, index1 + 1, this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮);
    Array.Copy((Array) numArray3, 0, (Array) this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮, index1 + 1 + this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮, numArray3.Length);
    byte[] numArray4 = this.\u206E⁯‪‍‪‌‮‎⁮‫⁬⁮‮‎‪​‬‮⁯‪‪⁭⁪‪‎⁭⁪⁭‭‪‪⁭⁪⁮‭‎‮⁭⁪‮(sourceArray, 0, sourceArray.Length, this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮.Length - this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮ - num);
    for (int index2 = 0; index2 != numArray4.Length; ++index2)
      this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮[index2] ^= numArray4[index2];
    Array.Copy((Array) sourceArray, 0, (Array) this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮, this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮.Length - this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮ - num, this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮);
    if (this.\u206D⁫⁫⁬⁯‬⁮‎‬‪‬‭‫‏​⁪‎‎⁮‮⁯⁪‪‍‫‭‌‎‏⁮⁫‮‌​‏‎‏‬⁫‭‮ == 188)
    {
      this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮[this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮.Length - 1] = (byte) 188;
    }
    else
    {
      this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮[this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮.Length - 2] = (byte) ((uint) this.\u206D⁫⁫⁬⁯‬⁮‎‬‪‬‭‫‏​⁪‎‎⁮‮⁯⁪‪‍‫‭‌‎‏⁮⁫‮‌​‏‎‏‬⁫‭‮ >> 8);
      this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮[this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮.Length - 1] = (byte) this.\u206D⁫⁫⁬⁯‬⁮‎‬‪‬‭‫‏​⁪‎‎⁮‮⁯⁪‪‍‫‭‌‎‏⁮⁫‮‌​‏‎‏‬⁫‭‮;
    }
    this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮[0] &= (byte) 127;
    byte[] numArray5 = this.\u200F⁫‭⁫‪⁪‬‮⁪⁬​‌‫‌‭‮⁮⁯​‏‫‪‬⁮⁪‬⁬⁪⁭⁭‌⁮⁯​‬​⁪‍‮⁯‮.\u206D‌‍‪⁮⁮⁮⁯‭⁪‍‬‭‏‍⁬⁭⁯‪‏‍‭‬‮‬⁮​⁫⁭⁯‭‫‌​‫‍⁭‬⁯‍‮(this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮, 0, this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮.Length);
    this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮);
    this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(this.\u202B⁪‪‏⁬⁮‌⁮⁯‏⁪⁪⁮⁮‭⁯‏‍​‮⁭⁮‌‪‭⁭‬‍‪⁪⁯⁭‍⁯‌‫‪⁮⁯‌‮);
    this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ = 0;
    return numArray5;
  }

  public virtual bool \u202C⁯‫‪‬⁪‮‌⁫‮‬‍⁬⁬⁪‏⁫‌⁭‭‍‪‎‮​‏‮‍⁬⁮‏⁭⁮‪‭‍​‫‍⁪‮(byte[] _param1)
  {
    byte[] numArray1 = new byte[this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮];
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray1, 0);
    if (this.\u200B‪⁭​⁫‭​‎‍⁮⁭‌‌‍‏⁮⁮‮⁯⁮‍‮⁬‌‎‮‮⁮⁬⁪​⁪‎‬⁫‮‮‍⁪‮‮ == null)
    {
      try
      {
        this.\u202C​⁯‮‭⁮⁬‮‏‏‌⁬⁬‫⁯⁮‪⁮⁭⁬‪‎⁬⁬​⁬‌‍⁯⁬⁯‮‬⁪⁯‬⁬​‌⁬‮(_param1);
      }
      catch (Exception ex)
      {
        return false;
      }
    }
    else if (!\u206D‭‎‏⁪⁫‌⁫⁫‮‮​‮‫⁯‎​⁮‭‍⁬⁫⁭⁬‎⁭‫‮‫⁬⁫‬‮⁪‌⁮⁬⁭⁬‪‮.\u200D‮‫‏⁮‮‪‎⁬‪‌⁮‏⁬⁫⁪‮‎⁪‫‬⁫‌‎​‏⁪⁫‎‎‫⁬‌⁭‫⁯⁭‪⁫‏‮(this.\u200B‪⁭​⁫‭​‎‍⁮⁭‌‌‍‏⁮⁮‮⁯⁮‍‮⁬‌‎‮‮⁮⁬⁪​⁪‎‬⁫‮‮‍⁪‮‮, _param1))
      throw new InvalidOperationException("UpdateWithRecoveredMessage called on different signature");
    byte[] numArray2 = this.\u206C‭‬‬‮⁮‭⁬⁬‏⁬⁭⁯‏‭‪‮⁭‎​‭⁫‮‭‎⁪‍‏‭‭‬‎⁬‏‪‎⁫‬​‏‮;
    int num1 = this.\u200E‌‪⁮⁪⁮⁮‮‍‬‎⁭‏‬⁫‏‌‫‭‪⁫‌‭‏‭‌‏⁪⁫‎⁫​‏⁪⁮‍⁪⁬‎⁫‮;
    int num2 = this.\u206B‪‮‎⁯‏‌⁪‫‏⁭‬⁯‭‫⁪‭‮‏‭⁪‭‮‭‫‪⁮‏‎‍⁮‪⁮⁫​‮‎⁫‏⁯‮;
    this.\u200B‪⁭​⁫‭​‎‍⁮⁭‌‌‍‏⁮⁮‮⁯⁮‍‮⁬‌‎‮‮⁮⁬⁪​⁪‎‬⁫‮‮‍⁪‮‮ = (byte[]) null;
    this.\u206C‭‬‬‮⁮‭⁬⁬‏⁬⁭⁯‏‭‪‮⁭‎​‭⁫‮‭‎⁪‍‏‭‭‬‎⁬‏‪‎⁫‬​‏‮ = (byte[]) null;
    byte[] numArray3 = new byte[8];
    this.\u202C‬‭‮‬⁪‏⁪‭‫⁮⁯‎‎‭⁮⁫‪⁪‭‮‎‪⁯‪‪‍‫‏‮⁮‫‫‮⁯⁬‭‍​‭‮((long) (this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮.Length * 8), numArray3);
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray3, 0, numArray3.Length);
    if (this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮.Length != 0)
      this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮, 0, this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮.Length);
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray1, 0, numArray1.Length);
    if (this.\u206C‭⁮‎‌⁬​‏⁬‌⁪‏⁯⁭⁫⁮‏⁫⁫‫‏‌‬‎‫‍⁫‬‍‌‌‪‮⁪⁭‎⁫⁯⁭‎‮ != null)
      this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(this.\u206C‭⁮‎‌⁬​‏⁬‌⁪‏⁯⁭⁫⁮‏⁫⁫‫‏‌‬‎‫‍⁫‬‍‌‌‪‮⁪⁭‎⁫⁯⁭‎‮, 0, this.\u206C‭⁮‎‌⁬​‏⁬‌⁪‏⁯⁭⁫⁮‏⁫⁫‫‏‌‬‎‫‍⁫‬‍‌‌‪‮⁪⁭‎⁫⁯⁭‎‮.Length);
    else
      this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray2, num1 + this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮.Length, this.\u200C‭‪‍​⁫‍⁮‬⁬‌‬⁭‪‮⁬​⁪‭⁮⁮‏⁫‍⁫⁬‫⁯‭⁯​‬‪​‬‪‏‏‫‏‮);
    byte[] numArray4 = new byte[this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202D‏‬‪⁬‪‌⁭‌​‪‍‭‮‪‫‌⁫‌​⁭‫⁭‫‍⁫⁪⁪‫‮‌⁮⁭⁪‭​‫‍‌‭‮()];
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(numArray4, 0);
    int num3 = numArray2.Length - num2 - numArray4.Length;
    bool flag = true;
    for (int index = 0; index != numArray4.Length; ++index)
    {
      if ((int) numArray4[index] != (int) numArray2[num3 + index])
        flag = false;
    }
    this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(numArray2);
    this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(numArray4);
    if (!flag)
    {
      this.\u206D‎‪‮‬‭‍‍⁭⁮‏​⁬‍‏‍‍‪‎‭⁬⁫‬‍⁮⁪‬‎⁫‌⁫⁫⁭‌‬‏⁯‬​‎‮ = false;
      this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ = 0;
      this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮);
      return false;
    }
    if (this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ != 0 && !this.\u206B⁫​⁯‍‎‫⁬‌⁭‌⁯‭⁭⁬‭‭⁭‍⁯‏‌‬⁮⁮⁮‌‍‌⁬⁮⁪‪​‪‮‍‭​⁮‮(this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮, this.\u206F‌⁭‪⁫‫⁭​‪‭‭‎⁯‪‎⁮‬‍‬‌‭‪‬⁮‬‬‍⁮⁬‎‭⁫‪‎‎‎‪‬⁯⁫‮))
    {
      this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ = 0;
      this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮);
      return false;
    }
    this.\u200C⁬‪‪‌⁫‏⁭⁭‭‭‫‮​⁭⁭⁪‍‬⁪‍‫‎‎‭⁭‏​‮⁯⁯‌‍⁫⁮⁬⁯​⁫⁮‮ = 0;
    this.\u200C‭‎⁮‬‮⁫‬‫‎‬‪‮‮​‌⁯⁯‪‪⁭⁫​​​⁫‬‪‌‍⁯⁫⁭⁪⁭⁪⁭⁭‎‭‮(this.\u202E‍‪‭‫⁯‮‎‏⁫⁮‮⁫‍⁫‎‍‮⁯‮⁫‏‮‬‎‍⁪‎‬‮‎‏⁮⁫⁫‪‍‏⁫‏‮);
    return true;
  }

  public virtual bool \u202B‬​⁯⁪⁭‍⁪‭‬‮⁬‮⁬⁮‌⁪⁮⁪⁮‪‫‮⁪⁯‌⁮‮⁭⁫⁮‍⁮‌‏‍‬​⁮‌‮() => this.\u206D‎‪‮‬‭‍‍⁭⁮‏​⁬‍‏‍‍‪‎‭⁬⁫‬‍⁮⁪‬‎⁫‌⁫⁫⁭‌‬‏⁯‬​‎‮;

  private void \u202C⁬‪‏‍⁮⁫‮‪⁯‏‏⁭‫‫‌‭​‌⁯⁯‮‬⁪‌‫‎⁭‏⁮⁫‌⁯‌‫⁭‮‎‮⁭‮(int _param1, byte[] _param2)
  {
    _param2[0] = (byte) ((uint) _param1 >> 24);
    _param2[1] = (byte) ((uint) _param1 >> 16);
    _param2[2] = (byte) ((uint) _param1 >> 8);
    _param2[3] = (byte) _param1;
  }

  private void \u202C‬‭‮‬⁪‏⁪‭‫⁮⁯‎‎‭⁮⁫‪⁪‭‮‎‪⁯‪‪‍‫‏‮⁮‫‫‮⁯⁬‭‍​‭‮(long _param1, byte[] _param2)
  {
    _param2[0] = (byte) ((ulong) _param1 >> 56);
    _param2[1] = (byte) ((ulong) _param1 >> 48);
    _param2[2] = (byte) ((ulong) _param1 >> 40);
    _param2[3] = (byte) ((ulong) _param1 >> 32);
    _param2[4] = (byte) ((ulong) _param1 >> 24);
    _param2[5] = (byte) ((ulong) _param1 >> 16);
    _param2[6] = (byte) ((ulong) _param1 >> 8);
    _param2[7] = (byte) _param1;
  }

  private byte[] \u206E⁯‪‍‪‌‮‎⁮‫⁬⁮‮‎‪​‬‮⁯‪‪⁭⁪‪‎⁭⁪⁭‭‪‪⁭⁪⁮‭‎‮⁭⁪‮(
    byte[] _param1,
    int _param2,
    int _param3,
    int _param4)
  {
    byte[] destinationArray = new byte[_param4];
    byte[] sourceArray = new byte[this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮];
    byte[] numArray = new byte[4];
    int num = 0;
    this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u202C‬‎⁪​​‌‎‍⁯⁯​‮‪‮​⁭‬‭​⁮‬‍⁬⁬⁫‭​‎‌⁪⁬‬‮⁬⁫‮⁮‪‪‮();
    do
    {
      this.\u202C⁬‪‏‍⁮⁫‮‪⁯‏‏⁭‫‫‌‭​‌⁯⁯‮‬⁪‌‫‎⁭‏⁮⁫‌⁯‌‫⁭‮‎‮⁭‮(num, numArray);
      this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param1, _param2, _param3);
      this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray, 0, numArray.Length);
      this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(sourceArray, 0);
      Array.Copy((Array) sourceArray, 0, (Array) destinationArray, num * this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮, this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮);
    }
    while (++num < _param4 / this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮);
    if (num * this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮ < _param4)
    {
      this.\u202C⁬‪‏‍⁮⁫‮‪⁯‏‏⁭‫‫‌‭​‌⁯⁯‮‬⁪‌‫‎⁭‏⁮⁫‌⁯‌‫⁭‮‎‮⁭‮(num, numArray);
      this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(_param1, _param2, _param3);
      this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u206F⁮⁪‎‭‍‎​‎⁬⁮‍‏⁫‭​‫⁬‌⁭​‏​‫‬⁯​⁫​⁬‎⁯⁫‮‍⁯‮‌⁪⁭‮(numArray, 0, numArray.Length);
      this.\u200C‮⁮‫‭‬‪⁭‮‏‌‎⁫​⁪‬‪‪⁬‭‍‪⁯‫⁪⁬⁯⁯⁫⁪‭⁪⁯⁫⁭‍‬⁪‌‎‮.\u200F‏‏‬‫​⁮‬⁫‌‌⁮⁬‏⁭‭‌⁯⁪​‍​⁮⁫‮‫⁮‌‎‪⁬⁯⁪‪⁬‫⁫⁮‪⁭‮(sourceArray, 0);
      Array.Copy((Array) sourceArray, 0, (Array) destinationArray, num * this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮, destinationArray.Length - num * this.\u202E⁬‮‬‪⁯‪‍‌⁭‫⁭‬⁮‭⁮‬‮‭⁬‪⁮‭‭​⁬⁬‪‎‪‍⁬‭‮​‍‏‮‌‌‮);
    }
    return destinationArray;
  }
}
