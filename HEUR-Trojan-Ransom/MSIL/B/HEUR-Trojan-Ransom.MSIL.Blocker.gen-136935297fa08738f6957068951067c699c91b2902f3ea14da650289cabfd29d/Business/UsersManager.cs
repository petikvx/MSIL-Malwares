// Decompiled with JetBrains decompiler
// Type: Coache.Business.UsersManager
// Assembly: IsCopyConstruc, Version=5.6.2.1, Culture=neutral, PublicKeyToken=null
// MVID: 1DA50973-FF9A-4563-8B8F-74E2573677DF
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.02-msil\HEUR-Trojan-Ransom.MSIL.Blocker.gen-136935297fa08738f6957068951067c699c91b2902f3ea14da650289cabfd29d.exe

using Coache.Common;
using Data;
using System.Configuration;
using System.Data.SqlClient;
using System.Security.Cryptography;

namespace Coache.Business
{
  public class UsersManager
  {
    public void DeleteAccount(User user) => SqlDataAccess.ExecuteNonQuery(ConfigurationManager.ConnectionStrings["GrouponConnectionString"].ToString(), "GRUPO_N.DeleteUser", SqlDataAccessArgs.CreateWith("@User_ID", (object) user.UserID).Arguments);

    public int CreateAccount(User user, string password)
    {
      string hash = new LoginService().ComputeHash(password, (HashAlgorithm) new SHA256CryptoServiceProvider());
      return SqlDataAccess.ExecuteScalarQuery<int>(ConfigurationManager.ConnectionStrings["GrouponConnectionString"].ToString(), "GRUPO_N.InsertUser", SqlDataAccessArgs.CreateWith("@UserName", (object) user.UserName).And("@Password", (object) hash).And("@ID_Rol", (object) user.RoleID).Arguments);
    }

    public int CreateProfileAccount(User user, Profile profile, string password)
    {
      SqlTransaction transaction = SessionData.Contains("Transaction") ? SessionData.Get<SqlTransaction>("Transaction") : (SqlTransaction) null;
      string hash = new LoginService().ComputeHash(password, (HashAlgorithm) new SHA256CryptoServiceProvider());
      return transaction == null ? SqlDataAccess.ExecuteScalarQuery<int>(ConfigurationManager.ConnectionStrings["GrouponConnectionString"].ToString(), "GRUPO_N.InsertProfileUser", SqlDataAccessArgs.CreateWith("@UserName", (object) user.UserName).And("@Password", (object) hash).And("@ProfileName", (object) profile.ToString()).Arguments) : SqlDataAccess.ExecuteScalarQuery<int>("GRUPO_N.InsertProfileUser", SqlDataAccessArgs.CreateWith("@UserName", (object) user.UserName).And("@Password", (object) hash).And("@ProfileName", (object) profile.ToString()).Arguments, transaction);
    }
  }
}
