// Decompiled with JetBrains decompiler
// Type: Stub.My.MySettings
// Assembly: Stub, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: DB99E870-B2C0-4DEE-B8D6-45FBAAB984C0
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00007-msil\Trojan.RAR.Starter.d-8153be35fa093bd9a6c340611fb0f3cc5efaf4ceba14efb505ec8bfc68eb4d19.exe

using GsJoe1HkkVICoiDy1C;
using Microsoft.VisualBasic.ApplicationServices;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using VyNJgCigyMfw8R3yCY;

namespace Stub.My
{
  [EditorBrowsable(EditorBrowsableState.Advanced)]
  [CompilerGenerated]
  [GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
  internal sealed class MySettings : ApplicationSettingsBase
  {
    private static MySettings UJwy3PtD7 = (MySettings) SettingsBase.Synchronized((SettingsBase) new MySettings());
    private static bool \u0032ds0oUOEN;
    private static object bi1WekxhF = RuntimeHelpers.GetObjectValue(new object());

    [MethodImpl(MethodImplOptions.NoInlining)]
    static MySettings()
    {
    }

    [DebuggerNonUserCode]
    [MethodImpl(MethodImplOptions.NoInlining)]
    public MySettings()
    {
    }

    [DebuggerNonUserCode]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void qYXewhTkt([In] object obj0, [In] EventArgs obj1)
    {
      if (!RBeJrPFUFydoZCe4vp.bceXITl9q.SaveMySettingsOnExit)
        return;
      ayj1trT4F82JogvF7i.V0jyIxlyZ.Save();
    }

    public static MySettings Default
    {
      [MethodImpl(MethodImplOptions.NoInlining)] get
      {
        if (!MySettings.\u0032ds0oUOEN)
        {
          object bi1WekxhF = MySettings.bi1WekxhF;
          ObjectFlowControl.CheckForSyncLockOnValueType(bi1WekxhF);
          Monitor.Enter(bi1WekxhF);
          try
          {
            if (!MySettings.\u0032ds0oUOEN)
            {
              RBeJrPFUFydoZCe4vp.bceXITl9q.Shutdown += (ShutdownEventHandler) delegate
              {
                if (!RBeJrPFUFydoZCe4vp.bceXITl9q.SaveMySettingsOnExit)
                  return;
                ayj1trT4F82JogvF7i.V0jyIxlyZ.Save();
              };
              MySettings.\u0032ds0oUOEN = true;
            }
          }
          finally
          {
            Monitor.Exit(bi1WekxhF);
          }
        }
        return MySettings.UJwy3PtD7;
      }
    }
  }
}
