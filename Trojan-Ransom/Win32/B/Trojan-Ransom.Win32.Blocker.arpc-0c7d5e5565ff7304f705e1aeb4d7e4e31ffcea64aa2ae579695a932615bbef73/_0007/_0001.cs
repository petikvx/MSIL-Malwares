// Decompiled with JetBrains decompiler
// Type: .
// Assembly: 5555, Version=0.0.0.0, Culture=neutral, PublicKeyToken=f1fbbd7db53bfdb4
// MVID: 0D11B329-2752-44F3-ACE5-4122455C2392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00040-msil\Trojan-Ransom.Win32.Blocker.arpc-0c7d5e5565ff7304f705e1aeb4d7e4e31ffcea64aa2ae579695a932615bbef73.exe

using \u0007;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;

namespace \u0007
{
  internal sealed class \u0001
  {
    public static string \u0001;

    public static byte[] \u0002([In] byte[] obj0, [In] string obj1)
    {
      if (obj1.StartsWith("{"))
      {
        \u0001.\u0001 = "ERR 2006: This template was not properly processed by SmartAssembly";
        return (byte[]) null;
      }
      if (true)
        goto label_41;
label_3:
      if (true)
        goto label_42;
label_4:
      MemoryStream memoryStream;
      do
      {
        if (true)
          goto label_43;
label_5:
        continue;
label_43:
        memoryStream = (MemoryStream) null;
        goto label_5;
      }
      while (false);
      if (true)
        goto label_44;
label_7:
      RijndaelManaged rijndaelManaged1;
      RSACryptoServiceProvider cryptoServiceProvider1;
      CryptoStream cryptoStream;
      try
      {
        if (true)
        {
          if (true)
          {
            do
            {
              RijndaelManaged rijndaelManaged2 = new RijndaelManaged();
              if (true)
                rijndaelManaged1 = rijndaelManaged2;
              else
                break;
            }
            while (false);
            goto label_25;
          }
        }
        else
          goto label_25;
label_21:
        \u0018\u0003.\u007E\u0001\u0007((object) cryptoStream);
        return \u0092\u0004.\u007E\u0086\u0006((object) memoryStream);
label_25:
        do
        {
          RSACryptoServiceProvider cryptoServiceProvider2 = new RSACryptoServiceProvider();
          if (true)
            cryptoServiceProvider1 = cryptoServiceProvider2;
          cryptoServiceProvider1.FromXmlString(obj1);
          rijndaelManaged1.GenerateKey();
          \u0018\u0003.\u007E\u0007\u0007((object) rijndaelManaged1);
          do
          {
            byte[] numArray1 = new byte[48];
            \u0013\u0003.\u008C\u0002((Array) \u0092\u0004.\u007E\u0004\u0007((object) rijndaelManaged1), 0, (Array) numArray1, 0, 32);
            \u0013\u0003.\u008C\u0002((Array) \u0092\u0004.\u007E\u0003\u0007((object) rijndaelManaged1), 0, (Array) numArray1, 32, 16);
            memoryStream = new MemoryStream();
            try
            {
              if (false)
                goto label_12;
label_11:
              byte[] numArray2 = \u0088\u0005.\u007E\u0010\u0007((object) cryptoServiceProvider1, numArray1, false);
              \u0014\u0005.\u007E\u001B\u0006((object) memoryStream, (byte) 1);
label_12:
              \u0014\u0005.\u007E\u001B\u0006((object) memoryStream, \u009C\u0003.\u0090\u0002(numArray2.Length / 8));
              \u0013\u0005.\u007E\u001A\u0006((object) memoryStream, numArray2, 0, numArray2.Length);
              if (false)
                goto label_11;
            }
            catch (CryptographicException ex1)
            {
              try
              {
                byte[] numArray3 = new byte[16];
                byte[] numArray4 = new byte[16];
                \u0013\u0003.\u008C\u0002((Array) \u0092\u0004.\u007E\u0004\u0007((object) rijndaelManaged1), 0, (Array) numArray3, 0, 16);
                \u0013\u0003.\u008C\u0002((Array) \u0092\u0004.\u007E\u0004\u0007((object) rijndaelManaged1), 16, (Array) numArray4, 0, 16);
                byte[] numArray5 = \u0088\u0005.\u007E\u0010\u0007((object) cryptoServiceProvider1, numArray3, false);
                byte[] numArray6 = \u0088\u0005.\u007E\u0010\u0007((object) cryptoServiceProvider1, numArray4, false);
                byte[] numArray7 = \u0088\u0005.\u007E\u0010\u0007((object) cryptoServiceProvider1, \u0092\u0004.\u007E\u0003\u0007((object) rijndaelManaged1), false);
                \u0014\u0005.\u007E\u001B\u0006((object) memoryStream, (byte) 2);
                \u0014\u0005.\u007E\u001B\u0006((object) memoryStream, \u009C\u0003.\u0090\u0002(numArray5.Length / 8));
                \u0013\u0005.\u007E\u001A\u0006((object) memoryStream, numArray5, 0, numArray5.Length);
                \u0013\u0005.\u007E\u001A\u0006((object) memoryStream, numArray6, 0, numArray6.Length);
                \u0013\u0005.\u007E\u001A\u0006((object) memoryStream, numArray7, 0, numArray7.Length);
              }
              catch (CryptographicException ex2)
              {
                do
                {
                  \u0001.\u0001 = "ERR 2005: The 128-bit encryption is not available on this computer. You need to install the High Encryption Pack in order to use the reporting feature.";
                }
                while (false);
                return (byte[]) null;
              }
            }
          }
          while (false);
        }
        while (false);
        cryptoStream = new CryptoStream((Stream) memoryStream, \u0086\u0005.\u007E\u0005\u0007((object) rijndaelManaged1), CryptoStreamMode.Write);
        \u0013\u0005.\u007E\u001A\u0006((object) cryptoStream, obj0, 0, obj0.Length);
        goto label_21;
      }
      catch (Exception ex)
      {
        if (true)
          \u0001.\u0001 = \u0088\u0003.\u009D("ERR 2004: ", \u0008\u0003.\u007E\u0007\u0002((object) ex));
        return (byte[]) null;
      }
      finally
      {
        if (rijndaelManaged1 != null)
          \u0018\u0003.\u007E\u0002\u0007((object) rijndaelManaged1);
        if (cryptoServiceProvider1 != null)
          \u0018\u0003.\u007E\u009D\u0006((object) cryptoServiceProvider1);
        if (true)
        {
          if (memoryStream != null)
            \u0018\u0003.\u007E\u0015\u0006((object) memoryStream);
          if (cryptoStream == null)
            goto label_40;
        }
        if (true)
          \u0018\u0003.\u007E\u0015\u0006((object) cryptoStream);
label_40:;
      }
label_44:
      cryptoStream = (CryptoStream) null;
      goto label_7;
label_42:
      cryptoServiceProvider1 = (RSACryptoServiceProvider) null;
      goto label_4;
label_41:
      rijndaelManaged1 = (RijndaelManaged) null;
      goto label_3;
    }
  }
}
