// Decompiled with JetBrains decompiler
// Type: Dark_RAT.iniAPI
// Assembly: Dark RAT, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 3C824395-872F-43D5-A237-CC243F82B456
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-HackTool.MSIL.Flooder.gen-66512a2c31adfe77fb66c2c824e55509ba2cce70d158e850f0e56e3dc664f420.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Dark_RAT
{
  public class iniAPI
  {
    [DebuggerNonUserCode]
    public iniAPI()
    {
    }

    [DllImport("kernel32", EntryPoint = "WritePrivateProfileStringW", CharSet = CharSet.Unicode, SetLastError = true)]
    private static extern int WritePrivateProfileString(
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpApplicationName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpKeyName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpString,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpFileName);

    [DllImport("kernel32", EntryPoint = "GetPrivateProfileStringW", CharSet = CharSet.Unicode, SetLastError = true)]
    private static extern int GetPrivateProfileString(
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpApplicationName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpKeyName,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpDefault,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpReturnedString,
      int nSize,
      [MarshalAs(UnmanagedType.VBByRefStr)] ref string lpFileName);

    public string INIRead(string INIPath, string SectionName, string KeyName, string DefaultValue)
    {
      string lpReturnedString = Strings.Space(1024);
      int privateProfileString = iniAPI.GetPrivateProfileString(ref SectionName, ref KeyName, ref DefaultValue, ref lpReturnedString, lpReturnedString.Length, ref INIPath);
      return privateProfileString <= 0 ? "" : lpReturnedString.Substring(0, privateProfileString);
    }

    public string INIRead(string INIPath, string SectionName, string KeyName) => this.INIRead(INIPath, SectionName, KeyName, "");

    public string INIRead(string INIPath, string SectionName) => this.INIRead(INIPath, SectionName, (string) null, "");

    public string INIRead(string INIPath) => this.INIRead(INIPath, (string) null, (string) null, "");

    public void INIWrite(string INIPath, string SectionName, string KeyName, string TheValue) => iniAPI.WritePrivateProfileString(ref SectionName, ref KeyName, ref TheValue, ref INIPath);

    public object setdetails(string username, string password)
    {
      object obj;
      try
      {
        this.INIWrite(Application.StartupPath + "\\settings.ini", "login", nameof (username), username);
        this.INIWrite(Application.StartupPath + "\\settings.ini", "login", nameof (password), Encryption.RijndaelSimple.RijndaelEncrypt(password, "DarkRAT HWID"));
        obj = (object) Encryption.RijndaelSimple.RijndaelEncrypt("OK", "DarkRAT HWID");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) Encryption.RijndaelSimple.RijndaelEncrypt("Error", "DarkRAT HWID");
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    public object GetUsername() => (object) this.INIRead(Application.StartupPath + "\\settings.ini", "login", "username");

    public object GetPassword()
    {
      string password = this.INIRead(Application.StartupPath + "\\settings.ini", "login", "password");
      if (Operators.CompareString(password, "", false) != 0)
        password = Encryption.RijndaelSimple.RijndaelDecrypt(password, "DarkRAT HWID");
      return (object) password;
    }

    public object WriteSettings(string section, string name, string value)
    {
      object obj;
      try
      {
        this.INIWrite(Application.StartupPath + "\\settings.ini", section, name, value);
        obj = (object) Encryption.RijndaelSimple.RijndaelEncrypt("OK", "DarkRAT HWID");
      }
      catch (Exception ex)
      {
        ProjectData.SetProjectError(ex);
        obj = (object) Encryption.RijndaelSimple.RijndaelEncrypt("Error", "DarkRAT HWID");
        ProjectData.ClearProjectError();
      }
      return obj;
    }

    public object ReadSettings(string section, string name) => (object) this.INIRead(Application.StartupPath + "\\settings.ini", section, name);
  }
}
