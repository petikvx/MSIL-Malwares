// Decompiled with JetBrains decompiler
// Type: dotXMLToolsWPF.Point
// Assembly: LeaseMana, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 529A6AA6-AEB5-47F3-B86B-C5E3C5F9FA62
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan.MSIL.PowerShell.gen-7e41c997a103e91b3815e9269a2d8806e5474c05620f8ff0ca591a586eae2f80.exe

using System;

namespace dotXMLToolsWPF
{
  public struct Point : IEquatable<Point>
  {
    public Point(long x, long y)
      : this()
    {
      this.X = x;
      this.Y = y;
    }

    public long X { get; private set; }

    public long Y { get; private set; }

    public static bool operator ==(Point a, Point b) => object.Equals((object) a, (object) b);

    public static bool operator !=(Point a, Point b) => !object.Equals((object) a, (object) b);

    public static Point Zero => new Point(0L, 0L);

    public bool Equals(Point other) => this.X == other.X && this.Y == other.Y;

    public override bool Equals(object obj) => obj is Point other && this.Equals(other);

    public override int GetHashCode() => (17 * 23 + this.X.GetHashCode()) * 23 + this.Y.GetHashCode();

    public override string ToString() => string.Format("({0}, {1})", (object) this.X, (object) this.Y);
  }
}
