// Decompiled with JetBrains decompiler
// Type: SmartAssembly.SmartExceptionsCore.UI.WaitSendingReportControl1
// Assembly: o4tdggb3, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: FA0844EB-EF82-404C-B76C-C092ABDB9392
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00090-msil\Trojan-Ransom.Win32.Blocker.bzqq-b74e3dc76fae79b75c26f27ecb85aae1eae4082a42bfa080f7805f32dedc9d67.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.Windows.Forms;

namespace SmartAssembly.SmartExceptionsCore.UI
{
  [DesignerCategory("Code")]
  public class WaitSendingReportControl1 : Control
  {
    private int m_Step = 99;
    private readonly Bitmap m_DataImage = Resources.GetBitmap("data");
    private readonly Bitmap m_NetworkImage = Resources.GetBitmap("network");
    private readonly Timer m_Timer = new Timer();
    private float m_Dx = 1f;
    private float m_Dy = 1f;

    protected override void OnVisibleChanged(EventArgs e)
    {
      base.OnVisibleChanged(e);
      if (this.DesignMode)
        return;
      this.Init(this.Visible);
    }

    private void Init(bool run)
    {
      this.m_Timer.Enabled = run;
      this.m_Step = 0;
      this.Refresh();
    }

    protected override void OnResize(EventArgs e)
    {
      this.Size = new Size(Convert.ToInt32(250f * this.m_Dx), Convert.ToInt32(42f * this.m_Dy));
      base.OnResize(e);
    }

    protected override void ScaleCore(float dx, float dy)
    {
      this.m_Dx = dx;
      this.m_Dy = dy;
      base.ScaleCore(dx, dy);
      this.OnResize(EventArgs.Empty);
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing)
      {
        if (this.m_DataImage != null)
          this.m_DataImage.Dispose();
        this.m_Timer.Dispose();
      }
      base.Dispose(disposing);
    }

    protected override void OnPaint(PaintEventArgs e)
    {
      base.OnPaint(e);
      if (this.m_NetworkImage != null)
        e.Graphics.DrawImage((Image) this.m_NetworkImage, new Rectangle(0, 0, Convert.ToInt32(250f * this.m_Dx), Convert.ToInt32(42f * this.m_Dy)), new Rectangle(0, 0, 250, 42), GraphicsUnit.Pixel);
      if (this.m_DataImage == null || this.m_Step <= 0)
        return;
      e.Graphics.SetClip(new Rectangle(Convert.ToInt32(46f * this.m_Dx), 0, Convert.ToInt32(165f * this.m_Dx), Convert.ToInt32(34f * this.m_Dy)));
      e.Graphics.DrawImage((Image) this.m_DataImage, new Rectangle(Convert.ToInt32((float) (this.m_Step - 6) * this.m_Dx), Convert.ToInt32(16f * this.m_Dy), Convert.ToInt32(40f * this.m_Dx), Convert.ToInt32(12f * this.m_Dy)), 0, 0, 40, 12, GraphicsUnit.Pixel);
    }

    private void OnTimerTick(object sender, EventArgs e)
    {
      this.m_Step += 11;
      if (this.m_Step > 198)
        this.m_Step = 0;
      this.Refresh();
    }

    public WaitSendingReportControl1()
    {
      this.m_Timer.Interval = 85;
      this.m_Timer.Tick += new EventHandler(this.OnTimerTick);
      this.Size = new Size(250, 42);
      this.TabStop = false;
      this.SetStyle(ControlStyles.UserPaint | ControlStyles.ResizeRedraw | ControlStyles.SupportsTransparentBackColor | ControlStyles.AllPaintingInWmPaint | ControlStyles.DoubleBuffer, true);
    }
  }
}
