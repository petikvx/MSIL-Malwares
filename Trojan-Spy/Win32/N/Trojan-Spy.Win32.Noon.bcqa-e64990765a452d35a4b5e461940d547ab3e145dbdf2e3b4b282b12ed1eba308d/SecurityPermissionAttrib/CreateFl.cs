// Decompiled with JetBrains decompiler
// Type: SecurityPermissionAttrib.CreateFl
// Assembly: UInt32ArrayTypeI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 2F94D963-B282-4BF6-A540-85D019D8F975
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqa-e64990765a452d35a4b5e461940d547ab3e145dbdf2e3b4b282b12ed1eba308d.exe

namespace SecurityPermissionAttrib
{
  public class CreateFl
  {
    public CreateFl()
    {
    }

    public CreateFl(string id, string UserName)
    {
label_1:
      int num1 = -1809526603;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ -1441571847)) % 5U)
        {
          case 1:
            num1 = (int) num2 * 1567922379 ^ 1045925798;
            continue;
          case 2:
            num1 = (int) num2 * -593464133 ^ 449994011;
            continue;
          case 3:
            this.Id = id;
            num1 = (int) num2 * -667104360 ^ 1561301147;
            continue;
          case 4:
            goto label_1;
          default:
            goto label_6;
        }
      }
label_6:
      this.Name = UserName;
      this.Balance = this.Winstreak = this.WinCount = this.LoseCount = this.Owing = 0;
    }

    public CreateFl(
      string id,
      string UserName,
      int Balance,
      int WinStreak,
      int WinCount,
      int LoseCount,
      int Games,
      int Owing,
      double AvgBet,
      int MaxBet,
      int MinBet,
      string LastPlay,
      int CurrentStreak)
    {
label_1:
      int num1 = 1836528122;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 822894505)) % 19U)
        {
          case 0:
            this.LastPlay = LastPlay;
            this.CurrentStreak = CurrentStreak;
            num1 = (int) num2 * 620558647 ^ 55992435;
            continue;
          case 1:
            this.Id = id;
            this.Name = UserName;
            num1 = (int) num2 * -1581854538 ^ 1211227190;
            continue;
          case 2:
            this.AverageBet = AvgBet;
            num1 = (int) num2 * 1786013282 ^ 1878570971;
            continue;
          case 3:
            this.MaxBet = MaxBet;
            this.MinBet = MinBet;
            num1 = (int) num2 * 173612686 ^ 975104699;
            continue;
          case 4:
            num1 = (int) num2 * 1654433980 ^ -1875201852;
            continue;
          case 5:
            num1 = (int) num2 * 370221386 ^ -1250488128;
            continue;
          case 6:
            this.Winstreak = WinStreak;
            num1 = (int) num2 * 859450313 ^ 794713523;
            continue;
          case 7:
            goto label_3;
          case 8:
            this.Games = Games;
            num1 = (int) num2 * -159609628 ^ -2044468596;
            continue;
          case 9:
            this.Balance = Balance;
            num1 = (int) num2 * 1948077835 ^ -823190765;
            continue;
          case 10:
            num1 = (int) num2 * 1253414361 ^ -1571945718;
            continue;
          case 11:
            goto label_1;
          case 12:
            this.WinCount = WinCount;
            num1 = (int) num2 * -783360076 ^ 1906874895;
            continue;
          case 13:
            this.Owing = Owing;
            num1 = (int) num2 * -1803726980 ^ -1008910917;
            continue;
          case 14:
            num1 = (int) num2 * -2044918663 ^ -1667988258;
            continue;
          case 15:
            this.LoseCount = LoseCount;
            num1 = (int) num2 * 1493369374 ^ 1456075717;
            continue;
          case 16:
            num1 = (int) num2 * -568200253 ^ 210061115;
            continue;
          case 17:
            num1 = (int) num2 * 241796619 ^ -484859680;
            continue;
          case 18:
            num1 = (int) num2 * 72114310 ^ -28940498;
            continue;
          default:
            goto label_21;
        }
      }
label_3:
      return;
label_21:;
    }

    public string Id { get; set; }

    public string Name { get; set; }

    public int Balance { get; set; }

    public int Winstreak { get; set; }

    public int WinCount { get; set; }

    public int LoseCount { get; set; }

    public int Games { get; set; }

    public int Owing { get; set; }

    public double AverageBet { get; set; }

    public int MaxBet { get; set; }

    public int MinBet { get; set; }

    public string LastPlay { get; set; }

    public int CurrentStreak { get; set; }
  }
}
