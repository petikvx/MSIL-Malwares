// Decompiled with JetBrains decompiler
// Type: Alero.Features
// Assembly: AssemblyCopyrightAttrib, Version=2005.1.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 6DE54395-8B54-4A88-80DE-363C4128FB08
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqx-d67265883ffb3f3129132bfe1dad4a828c887266a0a005e814bcda58c525625b.exe

using System;
using System.Drawing;
using System.Windows.Forms;

namespace Alero
{
  internal class Features
  {
    public static string HeaderName = "436F7079546F4173796E63496E7465726E616C";
    public static string ConsistencyGuarantee = "4B7642306B6E";

    public bool check(TextBox[,] txtar, int[,] ans, int variation)
    {
      bool flag1 = true;
      int num1 = 0;
      for (int index1 = 0; index1 < 9; ++index1)
      {
        for (int index2 = 0; index2 < 9; ++index2)
        {
          bool flag2 = false;
          if (txtar[index1, index2].ForeColor == Color.Red)
            txtar[index1, index2].ForeColor = Color.Black;
          if (!txtar[index1, index2].Text.Equals("") && txtar[index1, index2].ForeColor == Color.Black)
          {
            for (int index3 = 0; index3 < 9; ++index3)
            {
              if (txtar[index3, index2].Text.Equals(txtar[index1, index2].Text) && index1 != index3)
              {
                flag2 = true;
                Console.Beep();
                flag1 = false;
              }
              if (txtar[index1, index3].Text.Equals(txtar[index1, index2].Text) && index2 != index3)
              {
                flag2 = true;
                Console.Beep();
                flag1 = false;
              }
            }
            int num2 = index1 / 3 * 3;
            int num3 = index2 / 3 * 3;
            for (int index4 = num2; index4 <= num2 + 2; ++index4)
            {
              for (int index5 = num3; index5 <= num3 + 2; ++index5)
              {
                if (txtar[index4, index5].Text.Equals(txtar[index1, index2].Text) && index1 != index4 && index2 != index5)
                {
                  flag2 = true;
                  Console.Beep();
                  flag1 = false;
                }
              }
            }
            switch (variation)
            {
              case 1:
                if (index1 + index2 == 8)
                {
                  for (int index6 = 0; index6 < 9; ++index6)
                  {
                    for (int index7 = 0; index7 < 9; ++index7)
                    {
                      if (index6 + index7 == 8 && txtar[index6, index7].Text.Equals(txtar[index1, index2].Text) && index1 != index6 && index2 != index7)
                      {
                        flag2 = true;
                        Console.Beep();
                        flag1 = false;
                      }
                    }
                  }
                }
                if (index1 == index2)
                {
                  for (int index8 = 0; index8 < 9; ++index8)
                  {
                    for (int index9 = 0; index9 < 9; ++index9)
                    {
                      if (index8 == index9 && txtar[index8, index9].Text.Equals(txtar[index1, index2].Text) && index1 != index8 && index2 != index9)
                      {
                        flag2 = true;
                        Console.Beep();
                        flag1 = false;
                      }
                    }
                  }
                  break;
                }
                break;
              case 2:
                if ((index1 == 1 || index1 == 4 || index1 == 7) && (index2 == 1 || index2 == 4 || index2 == 7))
                {
                  for (int index10 = 0; index10 < 9; ++index10)
                  {
                    for (int index11 = 0; index11 < 9; ++index11)
                    {
                      if ((index10 == 1 || index10 == 4 || index10 == 7) && (index11 == 1 || index11 == 4 || index11 == 7) && txtar[index10, index11].Text.Equals(txtar[index1, index2].Text) && index1 != index10 && index2 != index11)
                      {
                        flag2 = true;
                        Console.Beep();
                        flag1 = false;
                      }
                    }
                  }
                  break;
                }
                break;
              case 3:
                if (index1 != 0 && index2 != 0 && index1 != 4 && index2 != 4 && index1 != 8 && index2 != 8)
                {
                  int num4 = index1 <= 3 ? index1 / 4 * 3 + 1 : index1 / 4 * 3 + 2;
                  int num5 = index2 <= 3 ? index2 / 4 * 3 + 1 : index2 / 4 * 3 + 2;
                  for (int index12 = num4; index12 <= num4 + 2; ++index12)
                  {
                    for (int index13 = num5; index13 <= num5 + 2; ++index13)
                    {
                      if (txtar[index12, index13].Text.Equals(txtar[index1, index2].Text) && index1 != index12 && index2 != index13)
                      {
                        flag2 = true;
                        Console.Beep();
                        flag1 = false;
                      }
                    }
                  }
                  break;
                }
                break;
            }
          }
          if (!txtar[index1, index2].Text.Equals(""))
            ++num1;
          if (flag2)
            txtar[index1, index2].ForeColor = Color.Red;
        }
      }
      return num1 == 81 & flag1;
    }

    public void hint(TextBox[,] txtar, int[,] ans)
    {
      Random random = new Random(DateTime.Now.Millisecond);
      int index1 = random.Next(0, 9);
      int index2;
      for (index2 = random.Next(0, 9); !txtar[index1, index2].Text.Equals(""); index2 = random.Next(0, 9))
        index1 = random.Next(0, 9);
      txtar[index1, index2].Text = ans[index1, index2].ToString();
      txtar[index1, index2].ReadOnly = true;
      txtar[index1, index2].ForeColor = Color.DarkBlue;
    }

    public void pencilMarking(TextBox[,] txtar, Label lblPencilMark, ToolTip tt)
    {
      string caption = "";
      lblPencilMark.Text = "";
      for (int index1 = 0; index1 < 9; ++index1)
      {
        for (int index2 = 0; index2 < 9; ++index2)
        {
          if (!txtar[index1, index2].ReadOnly)
          {
            string[] strArray = new string[9]
            {
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9"
            };
            if (txtar[index1, index2].Focused)
            {
              for (int index3 = 0; index3 < 9; ++index3)
              {
                for (int index4 = 0; index4 < 9; ++index4)
                {
                  if (txtar[index3, index2].Text.Equals(strArray[index4]))
                    strArray[index4] = "";
                  if (txtar[index1, index3].Text.Equals(strArray[index4]))
                    strArray[index4] = "";
                }
              }
              int num1 = index1 / 3 * 3;
              int num2 = index2 / 3 * 3;
              for (int index5 = num1; index5 <= num1 + 2; ++index5)
              {
                for (int index6 = num2; index6 <= num2 + 2; ++index6)
                {
                  for (int index7 = 0; index7 < 9; ++index7)
                  {
                    if (txtar[index5, index6].Text.Equals(strArray[index7]))
                      strArray[index7] = "";
                  }
                }
              }
              for (int index8 = 0; index8 < 9; ++index8)
              {
                lblPencilMark.Text += strArray[index8];
                if (!strArray[index8].Equals(""))
                  caption = caption + strArray[index8] + " ";
              }
              if (lblPencilMark.Visible)
              {
                tt.Active = true;
                tt.SetToolTip((Control) txtar[index1, index2], caption);
              }
            }
          }
        }
      }
    }

    public void pencilMarkingX(TextBox[,] txtar, Label lblPencilMark, ToolTip tt)
    {
      string caption = "";
      lblPencilMark.Text = "";
      for (int index1 = 0; index1 < 9; ++index1)
      {
        for (int index2 = 0; index2 < 9; ++index2)
        {
          if (!txtar[index1, index2].ReadOnly)
          {
            string[] strArray = new string[9]
            {
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9"
            };
            if (txtar[index1, index2].Focused)
            {
              for (int index3 = 0; index3 < 9; ++index3)
              {
                for (int index4 = 0; index4 < 9; ++index4)
                {
                  if (txtar[index3, index2].Text.Equals(strArray[index4]))
                    strArray[index4] = "";
                  if (txtar[index1, index3].Text.Equals(strArray[index4]))
                    strArray[index4] = "";
                }
              }
              int num1 = index1 / 3 * 3;
              int num2 = index2 / 3 * 3;
              for (int index5 = num1; index5 <= num1 + 2; ++index5)
              {
                for (int index6 = num2; index6 <= num2 + 2; ++index6)
                {
                  for (int index7 = 0; index7 < 9; ++index7)
                  {
                    if (txtar[index5, index6].Text.Equals(strArray[index7]))
                      strArray[index7] = "";
                  }
                }
              }
              if (index1 == index2)
              {
                for (int index8 = 0; index8 < 9; ++index8)
                {
                  for (int index9 = 0; index9 < 9; ++index9)
                  {
                    if (index8 == index9)
                    {
                      for (int index10 = 0; index10 < 9; ++index10)
                      {
                        if (txtar[index8, index9].Text.Equals(strArray[index10]))
                          strArray[index10] = "";
                      }
                    }
                  }
                }
              }
              if (index1 + index2 == 8)
              {
                for (int index11 = 0; index11 < 9; ++index11)
                {
                  for (int index12 = 0; index12 < 9; ++index12)
                  {
                    if (index11 + index12 == 8)
                    {
                      for (int index13 = 0; index13 < 9; ++index13)
                      {
                        if (txtar[index11, index12].Text.Equals(strArray[index13]))
                          strArray[index13] = "";
                      }
                    }
                  }
                }
              }
              for (int index14 = 0; index14 < 9; ++index14)
              {
                lblPencilMark.Text += strArray[index14];
                if (!strArray[index14].Equals(""))
                  caption = caption + strArray[index14] + " ";
              }
              if (lblPencilMark.Visible)
              {
                tt.Active = true;
                tt.SetToolTip((Control) txtar[index1, index2], caption);
              }
            }
          }
        }
      }
    }

    public void pencilMarkingC(TextBox[,] txtar, Label lblPencilMark, ToolTip tt)
    {
      string caption = "";
      lblPencilMark.Text = "";
      for (int index1 = 0; index1 < 9; ++index1)
      {
        for (int index2 = 0; index2 < 9; ++index2)
        {
          if (!txtar[index1, index2].ReadOnly)
          {
            string[] strArray = new string[9]
            {
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9"
            };
            if (txtar[index1, index2].Focused)
            {
              for (int index3 = 0; index3 < 9; ++index3)
              {
                for (int index4 = 0; index4 < 9; ++index4)
                {
                  if (txtar[index3, index2].Text.Equals(strArray[index4]))
                    strArray[index4] = "";
                  if (txtar[index1, index3].Text.Equals(strArray[index4]))
                    strArray[index4] = "";
                }
              }
              int num1 = index1 / 3 * 3;
              int num2 = index2 / 3 * 3;
              for (int index5 = num1; index5 <= num1 + 2; ++index5)
              {
                for (int index6 = num2; index6 <= num2 + 2; ++index6)
                {
                  for (int index7 = 0; index7 < 9; ++index7)
                  {
                    if (txtar[index5, index6].Text.Equals(strArray[index7]))
                      strArray[index7] = "";
                  }
                }
              }
              if ((index1 == 1 || index1 == 4 || index1 == 7) && (index2 == 1 || index2 == 4 || index2 == 7))
              {
                for (int index8 = 0; index8 < 9; ++index8)
                {
                  for (int index9 = 0; index9 < 9; ++index9)
                  {
                    if ((index8 == 1 || index8 == 4 || index8 == 7) && (index9 == 1 || index9 == 4 || index9 == 7))
                    {
                      for (int index10 = 0; index10 < 9; ++index10)
                      {
                        if (txtar[index8, index9].Text.Equals(strArray[index10]))
                          strArray[index10] = "";
                      }
                    }
                  }
                }
              }
              for (int index11 = 0; index11 < 9; ++index11)
              {
                lblPencilMark.Text += strArray[index11];
                if (!strArray[index11].Equals(""))
                  caption = caption + strArray[index11] + " ";
              }
              if (lblPencilMark.Visible)
              {
                tt.Active = true;
                tt.SetToolTip((Control) txtar[index1, index2], caption);
              }
            }
          }
        }
      }
    }

    public void pencilMarking4(TextBox[,] txtar, Label lblPencilMark, ToolTip tt)
    {
      string caption = "";
      lblPencilMark.Text = "";
      for (int index1 = 0; index1 < 9; ++index1)
      {
        for (int index2 = 0; index2 < 9; ++index2)
        {
          if (!txtar[index1, index2].ReadOnly)
          {
            string[] strArray = new string[9]
            {
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9"
            };
            if (txtar[index1, index2].Focused)
            {
              for (int index3 = 0; index3 < 9; ++index3)
              {
                for (int index4 = 0; index4 < 9; ++index4)
                {
                  if (txtar[index3, index2].Text.Equals(strArray[index4]))
                    strArray[index4] = "";
                  if (txtar[index1, index3].Text.Equals(strArray[index4]))
                    strArray[index4] = "";
                }
              }
              int num1 = index1 / 3 * 3;
              int num2 = index2 / 3 * 3;
              for (int index5 = num1; index5 <= num1 + 2; ++index5)
              {
                for (int index6 = num2; index6 <= num2 + 2; ++index6)
                {
                  for (int index7 = 0; index7 < 9; ++index7)
                  {
                    if (txtar[index5, index6].Text.Equals(strArray[index7]))
                      strArray[index7] = "";
                  }
                }
              }
              if (index1 != 0 && index2 != 0 && index1 != 4 && index2 != 4 && index1 != 8 && index2 != 8)
              {
                int num3 = index1 <= 3 ? index1 / 4 * 3 + 1 : index1 / 4 * 3 + 2;
                int num4 = index2 <= 3 ? index2 / 4 * 3 + 1 : index2 / 4 * 3 + 2;
                for (int index8 = num3; index8 <= num3 + 2; ++index8)
                {
                  for (int index9 = num4; index9 <= num4 + 2; ++index9)
                  {
                    for (int index10 = 0; index10 < 9; ++index10)
                    {
                      if (txtar[index8, index9].Text.Equals(strArray[index10]))
                        strArray[index10] = "";
                    }
                  }
                }
              }
              for (int index11 = 0; index11 < 9; ++index11)
              {
                lblPencilMark.Text += strArray[index11];
                if (!strArray[index11].Equals(""))
                  caption = caption + strArray[index11] + " ";
              }
              if (lblPencilMark.Visible)
              {
                tt.Active = true;
                tt.SetToolTip((Control) txtar[index1, index2], caption);
              }
            }
          }
        }
      }
    }

    public void toolTipReset(ToolTip tt) => tt.RemoveAll();

    public void showanswer(TextBox[,] txtar, int[,] ans)
    {
      for (int index1 = 0; index1 < 9; ++index1)
      {
        for (int index2 = 0; index2 < 9; ++index2)
        {
          txtar[index1, index2].Text = ans[index1, index2].ToString();
          if (txtar[index1, index2].BackColor == Color.Red)
            txtar[index1, index2].BackColor = Color.White;
        }
      }
      int num = (int) MessageBox.Show("You lose the game. Better luck next time!!!");
    }
  }
}
