// Decompiled with JetBrains decompiler
// Type: System.Data.SQLite.SQLiteFactory
// Assembly: sysrt, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: F2102D52-57B0-4622-A1CB-9DE0B00E107F
// Assembly location: C:\Users\Administrateur\Downloads\Virusshare.00100-msil\Trojan-Ransom.Win32.Blocker.hehh-e9e3600777f319c90d3c06bee4af8f501eba42a876d1d5ed7d3de045ff7cba31.exe

using System.Data.Common;
using System.Reflection;
using System.Security.Permissions;

namespace System.Data.SQLite
{
  public sealed class SQLiteFactory : DbProviderFactory, IServiceProvider
  {
    public static readonly SQLiteFactory Instance = new SQLiteFactory();
    private static Type _dbProviderServicesType = Type.GetType("System.Data.Common.DbProviderServices, System.Data.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089", false);
    private static object _sqliteServices;

    public override DbCommand CreateCommand() => (DbCommand) new SQLiteCommand();

    public override DbCommandBuilder CreateCommandBuilder() => (DbCommandBuilder) new SQLiteCommandBuilder();

    public override DbConnection CreateConnection() => (DbConnection) new SQLiteConnection();

    public override DbConnectionStringBuilder CreateConnectionStringBuilder() => (DbConnectionStringBuilder) new SQLiteConnectionStringBuilder();

    public override DbDataAdapter CreateDataAdapter() => (DbDataAdapter) new SQLiteDataAdapter();

    public override DbParameter CreateParameter() => (DbParameter) new SQLiteParameter();

    object IServiceProvider.GetService(Type serviceType) => (object) serviceType == (object) typeof (ISQLiteSchemaExtensions) || (object) SQLiteFactory._dbProviderServicesType != null && (object) serviceType == (object) SQLiteFactory._dbProviderServicesType ? this.GetSQLiteProviderServicesInstance() : (object) null;

    [ReflectionPermission(SecurityAction.Assert, MemberAccess = true)]
    private object GetSQLiteProviderServicesInstance()
    {
      if (SQLiteFactory._sqliteServices == null)
      {
        Type type = Type.GetType("System.Data.SQLite.SQLiteProviderServices, System.Data.SQLite.Linq, Version=2.0.38.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139", false);
        if ((object) type != null)
          SQLiteFactory._sqliteServices = type.GetField("Instance", BindingFlags.Instance | BindingFlags.Static | BindingFlags.NonPublic).GetValue((object) null);
      }
      return SQLiteFactory._sqliteServices;
    }
  }
}
