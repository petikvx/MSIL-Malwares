// Decompiled with JetBrains decompiler
// Type: mmxAH.Retainer
// Assembly: PermissionTokenFact, Version=1.0.2.2, Culture=neutral, PublicKeyToken=null
// MVID: 0E8B010F-DA1B-42FA-9C31-C1DCAF557A03
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\Trojan-Spy.Win32.Noon.bcqm-2f77bf5e4f961cc5be052ad8dc7fd08c90151230df1a0324df453d4e1d3a2056.exe

using System;
using System.IO;

namespace mmxAH
{
  public class Retainer : SpecialCard
  {
    public Retainer(GameEngine eng)
    {
      this.en = eng;
      this.CodeName = nameof (Retainer);
      this.text = this.en.scTexts[3];
    }

    public override void Init(Investigator invest, bool isWrite = true)
    {
      this.isFirstTurn = true;
      base.Init(invest, isWrite);
      this.InitTriger();
    }

    public override void Discard(bool isPrint)
    {
      this.inv.myTrigers.RemoveTriger(this.CodeName);
      base.Discard(isPrint);
    }

    protected override void Tick()
    {
      this.en.io.PrintToLog(this.text.Title + ":", isBold: true);
      this.inv.GainMoney((byte) 2);
      if (this.isFirstTurn)
      {
        this.isFirstTurn = false;
      }
      else
      {
        this.en.io.PrintToLog("   ");
        if (new DiceRoller(this.en).RollOneDice() == (byte) 1)
          this.Discard(true);
        this.en.io.PrintToLog(Environment.NewLine);
      }
    }

    public override void WriteToSave(BinaryWriter wr)
    {
      wr.Write((byte) 3);
      wr.Write(this.isFirstTurn);
    }

    public override void ReadFromSaveIndivid(BinaryReader rd) => this.isFirstTurn = rd.ReadBoolean();
  }
}
