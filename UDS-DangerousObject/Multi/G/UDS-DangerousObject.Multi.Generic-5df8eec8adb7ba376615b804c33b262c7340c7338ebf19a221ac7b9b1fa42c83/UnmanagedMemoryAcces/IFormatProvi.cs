// Decompiled with JetBrains decompiler
// Type: UnmanagedMemoryAcces.IFormatProvi
// Assembly: MLangDeco, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D34ABCAF-3D3D-474A-ADE2-5EA28A14A8A1
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.03\UDS-DangerousObject.Multi.Generic-5df8eec8adb7ba376615b804c33b262c7340c7338ebf19a221ac7b9b1fa42c83.exe

using System;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Reflection;
using System.Windows.Forms;

namespace UnmanagedMemoryAcces
{
  internal class IFormatProvi : Form
  {
    private IContainer components = (IContainer) null;
    private TableLayoutPanel tableLayoutPanel;
    private PictureBox logoPictureBox;
    private Label labelProductName;
    private Label labelVersion;
    private Label labelCopyright;
    private Label labelCompanyName;
    private TextBox textBoxDescription;
    private Button okButton;

    public IFormatProvi()
    {
      this.InitializeComponent();
      this.Text = string.Format("About {0}", (object) this.AssemblyTitle);
      this.labelProductName.Text = this.AssemblyProduct;
      this.labelVersion.Text = string.Format("Version {0}", (object) this.AssemblyVersion);
      this.labelCopyright.Text = this.AssemblyCopyright;
      this.labelCompanyName.Text = this.AssemblyCompany;
      this.textBoxDescription.Text = this.AssemblyDescription;
    }

    public string AssemblyTitle
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyTitleAttribute), false);
        bool flag1 = customAttributes.Length != 0;
label_1:
        int num1 = 75942215;
        AssemblyTitleAttribute assemblyTitleAttribute;
        bool flag2;
        string assemblyTitle;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1128230700)) % 11U)
          {
            case 0:
              goto label_1;
            case 1:
              flag2 = assemblyTitleAttribute.Title != "";
              num1 = (int) num2 * 277324737 ^ 1902522572;
              continue;
            case 2:
              assemblyTitle = Path.GetFileNameWithoutExtension(Assembly.GetExecutingAssembly().CodeBase);
              num1 = 794540045;
              continue;
            case 3:
              num1 = 709447225;
              continue;
            case 4:
              assemblyTitleAttribute = (AssemblyTitleAttribute) customAttributes[0];
              num1 = (int) num2 * 316917497 ^ 1175094852;
              continue;
            case 5:
              assemblyTitle = assemblyTitleAttribute.Title;
              num1 = (int) num2 * -1933589123 ^ 1022318208;
              continue;
            case 7:
              int num3 = !flag1 ? -1708124310 : (num3 = -2026775942);
              num1 = num3 ^ (int) num2 * -262552903;
              continue;
            case 8:
              num1 = (int) num2 * 751741209 ^ -304300718;
              continue;
            case 9:
              int num4 = !flag2 ? 2109707874 : (num4 = 1709627540);
              num1 = num4 ^ (int) num2 * -22418815;
              continue;
            case 10:
              num1 = (int) num2 * -1923282587 ^ -454809686;
              continue;
            default:
              goto label_12;
          }
        }
label_12:
        return assemblyTitle;
      }
    }

    public string AssemblyVersion
    {
      get
      {
label_1:
        int num1 = 1452219371;
        string assemblyVersion;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 605502186)) % 4U)
          {
            case 1:
              assemblyVersion = Assembly.GetExecutingAssembly().GetName().Version.ToString();
              num1 = (int) num2 * -129140743 ^ 1284942785;
              continue;
            case 2:
              num1 = (int) num2 * 794628264 ^ 125739342;
              continue;
            case 3:
              goto label_1;
            default:
              goto label_5;
          }
        }
label_5:
        return assemblyVersion;
      }
    }

    public string AssemblyDescription
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyDescriptionAttribute), false);
label_1:
        int num1 = 1837666778;
        string assemblyDescription;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 1464172729)) % 8U)
          {
            case 0:
              goto label_1;
            case 2:
              num1 = (int) num2 * -1806222468 ^ -840176936;
              continue;
            case 3:
              int num3 = customAttributes.Length == 0 ? -1906286756 : (num3 = -799255379);
              num1 = num3 ^ (int) num2 * -1993816701;
              continue;
            case 4:
              num1 = (int) num2 * 551305758 ^ -886357570;
              continue;
            case 5:
              assemblyDescription = ((AssemblyDescriptionAttribute) customAttributes[0]).Description;
              num1 = 1898012343;
              continue;
            case 6:
              num1 = (int) num2 * 839366832 ^ -1633125824;
              continue;
            case 7:
              assemblyDescription = "";
              num1 = (int) num2 * -2120262021 ^ -2134677474;
              continue;
            default:
              goto label_9;
          }
        }
label_9:
        return assemblyDescription;
      }
    }

    public string AssemblyProduct
    {
      get
      {
label_1:
        int num1 = -1846998608;
        object[] customAttributes;
        bool flag;
        string assemblyProduct;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1058459333)) % 9U)
          {
            case 1:
              num1 = (int) num2 * -2052194191 ^ 1438842334;
              continue;
            case 2:
              flag = customAttributes.Length == 0;
              num1 = (int) num2 * -166474777 ^ 1433047319;
              continue;
            case 3:
              customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyProductAttribute), false);
              num1 = (int) num2 * 1893248573 ^ 200966676;
              continue;
            case 4:
              int num3 = !flag ? -1860935842 : (num3 = -778042474);
              num1 = num3 ^ (int) num2 * -631384378;
              continue;
            case 5:
              assemblyProduct = ((AssemblyProductAttribute) customAttributes[0]).Product;
              num1 = -1585572962;
              continue;
            case 6:
              num1 = (int) num2 * -1866310404 ^ -344106515;
              continue;
            case 7:
              assemblyProduct = "";
              num1 = (int) num2 * -2009655884 ^ 1258206064;
              continue;
            case 8:
              goto label_1;
            default:
              goto label_10;
          }
        }
label_10:
        return assemblyProduct;
      }
    }

    public string AssemblyCopyright
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyCopyrightAttribute), false);
label_1:
        int num1 = 550256997;
        string assemblyCopyright;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ 262361041)) % 7U)
          {
            case 0:
              assemblyCopyright = ((AssemblyCopyrightAttribute) customAttributes[0]).Copyright;
              num1 = 1021213176;
              continue;
            case 1:
              int num3 = customAttributes.Length != 0 ? -599404134 : (num3 = -1759942983);
              num1 = num3 ^ (int) num2 * -276992377;
              continue;
            case 2:
              num1 = (int) num2 * 541220820 ^ -1867774055;
              continue;
            case 3:
              goto label_1;
            case 5:
              num1 = (int) num2 * 189480340 ^ 1438047293;
              continue;
            case 6:
              assemblyCopyright = "";
              num1 = (int) num2 * 1277957203 ^ -1756091351;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return assemblyCopyright;
      }
    }

    public string AssemblyCompany
    {
      get
      {
        object[] customAttributes = Assembly.GetExecutingAssembly().GetCustomAttributes(typeof (AssemblyCompanyAttribute), false);
        bool flag = customAttributes.Length == 0;
label_1:
        int num1 = -1014781989;
        string assemblyCompany;
        while (true)
        {
          uint num2;
          switch ((num2 = (uint) (num1 ^ -1662359175)) % 7U)
          {
            case 0:
              num1 = (int) num2 * -1334478283 ^ -138775085;
              continue;
            case 1:
              assemblyCompany = ((AssemblyCompanyAttribute) customAttributes[0]).Company;
              num1 = -1590722187;
              continue;
            case 3:
              int num3 = !flag ? 288865658 : (num3 = 2097411584);
              num1 = num3 ^ (int) num2 * 807347674;
              continue;
            case 4:
              goto label_1;
            case 5:
              num1 = (int) num2 * 273871674 ^ 1412166408;
              continue;
            case 6:
              assemblyCompany = "";
              num1 = (int) num2 * -1262144052 ^ 516561107;
              continue;
            default:
              goto label_8;
          }
        }
label_8:
        return assemblyCompany;
      }
    }

    private void AboutBox1_Load(object sender, EventArgs e)
    {
    }

    private void okButton_Click(object sender, EventArgs e)
    {
label_1:
      int num1 = 1042643742;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 1545362993)) % 4U)
        {
          case 0:
            goto label_1;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * -1781046905 ^ -265678634;
            continue;
          case 3:
            this.Close();
            num1 = (int) num2 * 527076411 ^ -655629234;
            continue;
          default:
            goto label_6;
        }
      }
label_3:
      return;
label_6:;
    }

    protected override void Dispose(bool disposing)
    {
label_1:
      int num1 = -886881115;
      while (true)
      {
        uint num2;
        int num3;
        switch ((num2 = (uint) (num1 ^ -673392338)) % 9U)
        {
          case 0:
            base.Dispose(disposing);
            num1 = -2023434207;
            continue;
          case 1:
            goto label_3;
          case 2:
            num1 = (int) num2 * 962754197 ^ 718042558;
            continue;
          case 3:
            num3 = this.components != null ? 1 : 0;
            break;
          case 4:
            num1 = (int) num2 * -460509836 ^ 22839686;
            continue;
          case 5:
            goto label_1;
          case 6:
            if (!disposing)
            {
              num3 = 0;
              break;
            }
            num1 = (int) num2 * -304475370 ^ -18015712;
            continue;
          case 7:
            this.components.Dispose();
            num1 = (int) num2 * 1240473264 ^ -73145998;
            continue;
          case 8:
            num1 = (int) num2 * 1298077905 ^ 577259453;
            continue;
          default:
            goto label_14;
        }
        int num4;
        num1 = num4 = num3 != 0 ? -654042999 : (num4 = -2076573114);
      }
label_3:
      return;
label_14:;
    }

    private void InitializeComponent()
    {
label_1:
      int num1 = 1069935846;
      ComponentResourceManager componentResourceManager;
      while (true)
      {
        uint num2;
        switch ((num2 = (uint) (num1 ^ 937822302)) % 146U)
        {
          case 0:
            this.labelVersion.Text = "Version: 1.0";
            num1 = (int) num2 * -1620200066 ^ 1180834010;
            continue;
          case 1:
            this.labelCompanyName.Text = "Company Name:  Sasha Risner";
            num1 = (int) num2 * 1001988791 ^ 1130035424;
            continue;
          case 2:
            num1 = (int) num2 * -1549036807 ^ -1785373347;
            continue;
          case 3:
            num1 = (int) num2 * 1879599043 ^ 20768378;
            continue;
          case 4:
            this.labelVersion.Size = new Size(271, 17);
            num1 = (int) num2 * -1327625476 ^ 994837777;
            continue;
          case 5:
            num1 = (int) num2 * 1617266352 ^ 1745482364;
            continue;
          case 6:
            this.labelProductName.Name = "labelProductName";
            num1 = (int) num2 * -1099252816 ^ 220386612;
            continue;
          case 7:
            this.labelCopyright = new Label();
            num1 = (int) num2 * 2025963713 ^ 500361203;
            continue;
          case 8:
            this.okButton.DialogResult = DialogResult.Cancel;
            num1 = (int) num2 * 1217571204 ^ 2116087113;
            continue;
          case 9:
            this.labelCompanyName.Location = new Point(143, 78);
            this.labelCompanyName.Margin = new Padding(6, 0, 3, 0);
            num1 = (int) num2 * -526931535 ^ -922811969;
            continue;
          case 10:
            num1 = (int) num2 * -1509734167 ^ 1920472797;
            continue;
          case 11:
            this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 10f));
            this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 10f));
            num1 = (int) num2 * 1578694947 ^ -314043085;
            continue;
          case 12:
            num1 = (int) num2 * 1152028933 ^ 1692720106;
            continue;
          case 13:
            this.okButton.Name = "okButton";
            this.okButton.Size = new Size(75, 23);
            num1 = (int) num2 * -1359905716 ^ 1560092719;
            continue;
          case 14:
            num1 = (int) num2 * -537094694 ^ -243190977;
            continue;
          case 15:
            this.labelCopyright.TabIndex = 21;
            num1 = (int) num2 * -1983726973 ^ -1843321398;
            continue;
          case 16:
            num1 = (int) num2 * 2048250911 ^ 769064881;
            continue;
          case 17:
            num1 = (int) num2 * 995100698 ^ 1652551339;
            continue;
          case 18:
            this.labelCompanyName = new Label();
            this.textBoxDescription = new TextBox();
            this.okButton = new Button();
            num1 = (int) num2 * -2004112682 ^ -1205143875;
            continue;
          case 19:
            num1 = (int) num2 * 1755815335 ^ -1863405262;
            continue;
          case 20:
            this.AutoScaleMode = AutoScaleMode.Font;
            num1 = (int) num2 * 1159088498 ^ 795573451;
            continue;
          case 21:
            this.ClientSize = new Size(435, 283);
            num1 = (int) num2 * -813655733 ^ 242327717;
            continue;
          case 22:
            this.labelCopyright.Margin = new Padding(6, 0, 3, 0);
            num1 = (int) num2 * 945153547 ^ -2027367297;
            continue;
          case 23:
            this.labelProductName.Dock = DockStyle.Fill;
            num1 = (int) num2 * -23419903 ^ 471141703;
            continue;
          case 24:
            num1 = (int) num2 * 1183303558 ^ -1934480006;
            continue;
          case 25:
            goto label_3;
          case 26:
            this.tableLayoutPanel.Controls.Add((Control) this.labelVersion, 1, 1);
            num1 = (int) num2 * -902159392 ^ 1253958120;
            continue;
          case 27:
            this.tableLayoutPanel.Controls.Add((Control) this.labelProductName, 1, 0);
            num1 = (int) num2 * 845041376 ^ -709281446;
            continue;
          case 28:
            this.labelProductName.Location = new Point(143, 0);
            num1 = (int) num2 * -294175389 ^ -2067449566;
            continue;
          case 29:
            this.okButton.TabIndex = 24;
            num1 = (int) num2 * -639391638 ^ -841664617;
            continue;
          case 30:
            this.logoPictureBox.Size = new Size(131, 259);
            num1 = (int) num2 * 2014661859 ^ 622092260;
            continue;
          case 31:
            this.logoPictureBox.TabIndex = 12;
            num1 = (int) num2 * -1682289610 ^ 1909980080;
            continue;
          case 32:
            ((ISupportInitialize) this.logoPictureBox).EndInit();
            num1 = (int) num2 * -783060017 ^ -692566044;
            continue;
          case 33:
            this.logoPictureBox.Location = new Point(3, 3);
            num1 = (int) num2 * 417161619 ^ -1467227276;
            continue;
          case 34:
            componentResourceManager = new ComponentResourceManager(typeof (IFormatProvi));
            num1 = (int) num2 * 337132227 ^ 1001768353;
            continue;
          case 35:
            this.tableLayoutPanel.Controls.Add((Control) this.okButton, 1, 5);
            num1 = (int) num2 * 1305374810 ^ 455434575;
            continue;
          case 36:
            this.Load += new EventHandler(this.AboutBox1_Load);
            this.tableLayoutPanel.ResumeLayout(false);
            this.tableLayoutPanel.PerformLayout();
            num1 = (int) num2 * 548027499 ^ -74276906;
            continue;
          case 37:
            this.labelVersion.Margin = new Padding(6, 0, 3, 0);
            num1 = (int) num2 * -440769107 ^ 1366265745;
            continue;
          case 38:
            this.logoPictureBox.TabStop = false;
            num1 = (int) num2 * 1977989093 ^ -1653409899;
            continue;
          case 39:
            this.textBoxDescription.TabStop = false;
            this.textBoxDescription.Text = "Description";
            num1 = (int) num2 * 768447236 ^ 2133204921;
            continue;
          case 40:
            this.tableLayoutPanel.SetRowSpan((Control) this.logoPictureBox, 6);
            num1 = (int) num2 * -164777522 ^ -500271404;
            continue;
          case 41:
            this.labelCompanyName.TextAlign = ContentAlignment.MiddleLeft;
            num1 = (int) num2 * -622319608 ^ 1996503448;
            continue;
          case 42:
            this.textBoxDescription.TabIndex = 23;
            num1 = (int) num2 * 554777428 ^ -473079033;
            continue;
          case 43:
            this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 50f));
            this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 10f));
            num1 = (int) num2 * -2007196447 ^ -915726179;
            continue;
          case 44:
            num1 = (int) num2 * -1490687977 ^ 885929500;
            continue;
          case 45:
            this.okButton.Anchor = AnchorStyles.Bottom | AnchorStyles.Right;
            num1 = (int) num2 * 17778104 ^ 378880277;
            continue;
          case 46:
            this.labelVersion.Location = new Point(143, 26);
            num1 = (int) num2 * -1168283865 ^ 1832764555;
            continue;
          case 47:
            this.tableLayoutPanel.Name = "tableLayoutPanel";
            num1 = (int) num2 * -2100417360 ^ 1721945275;
            continue;
          case 48:
            num1 = (int) num2 * 1796052446 ^ 645202102;
            continue;
          case 49:
            ((ISupportInitialize) this.logoPictureBox).BeginInit();
            num1 = (int) num2 * 1008646215 ^ -1853447538;
            continue;
          case 50:
            num1 = (int) num2 * -488159010 ^ 1108411574;
            continue;
          case 51:
            this.logoPictureBox.Image = (Image) componentResourceManager.GetObject("logoPictureBox.Image");
            num1 = (int) num2 * -1996914190 ^ 793838900;
            continue;
          case 52:
            this.labelCompanyName.TabIndex = 22;
            num1 = (int) num2 * -596227360 ^ -961520905;
            continue;
          case 53:
            num1 = (int) num2 * 2072476 ^ -797095845;
            continue;
          case 54:
            this.tableLayoutPanel.ColumnCount = 2;
            num1 = (int) num2 * 1094861514 ^ 163480221;
            continue;
          case 55:
            this.labelCompanyName.MaximumSize = new Size(0, 17);
            num1 = (int) num2 * 1061790089 ^ -480543849;
            continue;
          case 56:
            this.labelVersion.MaximumSize = new Size(0, 17);
            num1 = (int) num2 * 1076629392 ^ 284087802;
            continue;
          case 57:
            num1 = (int) num2 * 1864779906 ^ 1463806633;
            continue;
          case 58:
            num1 = (int) num2 * -674535512 ^ -20266197;
            continue;
          case 59:
            this.labelVersion.TextAlign = ContentAlignment.MiddleLeft;
            num1 = (int) num2 * 1339064683 ^ -1266185607;
            continue;
          case 60:
            num1 = (int) num2 * 816382685 ^ -1037917736;
            continue;
          case 61:
            this.tableLayoutPanel.RowCount = 6;
            num1 = (int) num2 * -1433873654 ^ 151307018;
            continue;
          case 62:
            this.labelCompanyName.Dock = DockStyle.Fill;
            num1 = (int) num2 * -552356203 ^ 1558597157;
            continue;
          case 63:
            num1 = (int) num2 * 901927003 ^ -939209988;
            continue;
          case 64:
            this.logoPictureBox.SizeMode = PictureBoxSizeMode.StretchImage;
            num1 = (int) num2 * -959602220 ^ -1989909953;
            continue;
          case 65:
            num1 = (int) num2 * 1574011050 ^ -276391359;
            continue;
          case 66:
            this.tableLayoutPanel.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 67f));
            this.tableLayoutPanel.Controls.Add((Control) this.logoPictureBox, 0, 0);
            num1 = (int) num2 * -651862250 ^ -295269625;
            continue;
          case 67:
            this.ShowIcon = false;
            num1 = (int) num2 * -1704913571 ^ 651419938;
            continue;
          case 68:
            this.textBoxDescription.Location = new Point(143, 107);
            num1 = (int) num2 * 900073876 ^ -470863541;
            continue;
          case 69:
            this.labelCopyright.Location = new Point(143, 52);
            num1 = (int) num2 * 687912738 ^ -1931042427;
            continue;
          case 70:
            num1 = (int) num2 * -717262147 ^ 1852626389;
            continue;
          case 71:
            this.tableLayoutPanel = new TableLayoutPanel();
            num1 = (int) num2 * -2072534318 ^ -2042657607;
            continue;
          case 72:
            this.labelProductName = new Label();
            this.labelVersion = new Label();
            num1 = (int) num2 * 463564916 ^ -1395108711;
            continue;
          case 73:
            num1 = (int) num2 * 1341857235 ^ 1079288767;
            continue;
          case 74:
            num1 = (int) num2 * 2143754984 ^ -1537389981;
            continue;
          case 75:
            this.MaximizeBox = false;
            num1 = (int) num2 * -1265221354 ^ -1480677522;
            continue;
          case 76:
            this.labelCopyright.TextAlign = ContentAlignment.MiddleLeft;
            num1 = (int) num2 * 597470414 ^ 703628800;
            continue;
          case 77:
            num1 = (int) num2 * 195671148 ^ -1295390872;
            continue;
          case 78:
            this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 10f));
            num1 = (int) num2 * -204273850 ^ -1687564055;
            continue;
          case 79:
            num1 = (int) num2 * 618322133 ^ 1448638222;
            continue;
          case 80:
            num1 = (int) num2 * 1965766280 ^ -997445135;
            continue;
          case 81:
            num1 = (int) num2 * 47352903 ^ 84086182;
            continue;
          case 82:
            num1 = (int) num2 * -259866941 ^ -1192945011;
            continue;
          case 83:
            this.textBoxDescription.Dock = DockStyle.Fill;
            num1 = (int) num2 * 677517516 ^ 1272473082;
            continue;
          case 84:
            num1 = (int) num2 * 1141204285 ^ -1106403451;
            continue;
          case 85:
            num1 = (int) num2 * 1702417241 ^ 1491714743;
            continue;
          case 86:
            num1 = (int) num2 * 2010147441 ^ 1939374062;
            continue;
          case 87:
            this.okButton.Location = new Point(339, 239);
            num1 = (int) num2 * -105489195 ^ -1290759377;
            continue;
          case 88:
            this.okButton.Click += new EventHandler(this.okButton_Click);
            num1 = (int) num2 * -1492099535 ^ 1694125174;
            continue;
          case 89:
            num1 = (int) num2 * 523393325 ^ 1709682759;
            continue;
          case 90:
            num1 = (int) num2 * -28482871 ^ 907777962;
            continue;
          case 91:
            this.logoPictureBox.Name = "logoPictureBox";
            num1 = (int) num2 * 1561291122 ^ -1203201426;
            continue;
          case 92:
            this.AcceptButton = (IButtonControl) this.okButton;
            num1 = (int) num2 * -937533037 ^ -462030852;
            continue;
          case 93:
            this.labelProductName.MaximumSize = new Size(0, 17);
            num1 = (int) num2 * 1971214253 ^ -1165202683;
            continue;
          case 94:
            num1 = (int) num2 * 41926116 ^ 1899729291;
            continue;
          case 95:
            goto label_1;
          case 96:
            this.labelCompanyName.Name = "labelCompanyName";
            num1 = (int) num2 * -693430116 ^ 571578773;
            continue;
          case 97:
            this.MinimizeBox = false;
            num1 = (int) num2 * 228565995 ^ -1138820838;
            continue;
          case 98:
            num1 = (int) num2 * 1150561566 ^ -159375985;
            continue;
          case 99:
            this.labelCopyright.MaximumSize = new Size(0, 17);
            num1 = (int) num2 * 407702573 ^ -202204182;
            continue;
          case 100:
            this.AutoScaleDimensions = new SizeF(6f, 13f);
            num1 = (int) num2 * 924861803 ^ 721010990;
            continue;
          case 101:
            this.logoPictureBox.Dock = DockStyle.Fill;
            num1 = (int) num2 * -949659775 ^ -1920232882;
            continue;
          case 102:
            this.tableLayoutPanel.ColumnStyles.Add(new ColumnStyle(SizeType.Percent, 33f));
            num1 = (int) num2 * 1703936609 ^ 1393594898;
            continue;
          case 103:
            this.tableLayoutPanel.Controls.Add((Control) this.textBoxDescription, 1, 4);
            num1 = (int) num2 * 290061922 ^ -1551323208;
            continue;
          case 104:
            this.labelCopyright.Dock = DockStyle.Fill;
            num1 = (int) num2 * 1051301665 ^ 629464185;
            continue;
          case 105:
            this.textBoxDescription.ReadOnly = true;
            this.textBoxDescription.ScrollBars = ScrollBars.Both;
            num1 = (int) num2 * -1375865425 ^ -1054036528;
            continue;
          case 106:
            num1 = (int) num2 * 1127646588 ^ -1213108541;
            continue;
          case 107:
            this.tableLayoutPanel.SuspendLayout();
            num1 = (int) num2 * 388160878 ^ -1858576416;
            continue;
          case 108:
            this.tableLayoutPanel.Controls.Add((Control) this.labelCopyright, 1, 2);
            num1 = (int) num2 * 1047151426 ^ -2048196472;
            continue;
          case 109:
            this.logoPictureBox = new PictureBox();
            num1 = (int) num2 * 1162457634 ^ -874444798;
            continue;
          case 110:
            this.labelVersion.Name = "labelVersion";
            num1 = (int) num2 * 1731937534 ^ 1974814694;
            continue;
          case 111:
            num1 = (int) num2 * -464828692 ^ -1725323611;
            continue;
          case 112:
            this.textBoxDescription.Size = new Size(271, 126);
            num1 = (int) num2 * -1736651343 ^ -1852581590;
            continue;
          case 113:
            this.labelCompanyName.Size = new Size(271, 17);
            num1 = (int) num2 * -89521044 ^ -1294266832;
            continue;
          case 114:
            this.tableLayoutPanel.Location = new Point(9, 9);
            num1 = (int) num2 * 1621136689 ^ 1814648852;
            continue;
          case 115:
            this.labelCopyright.Text = "Copyright: 2012";
            num1 = (int) num2 * 1413883127 ^ -637760295;
            continue;
          case 116:
            this.labelProductName.Text = "Product Name:  Questionnaire Wizard";
            num1 = (int) num2 * -1502421535 ^ -706824162;
            continue;
          case 117:
            this.textBoxDescription.Margin = new Padding(6, 3, 3, 3);
            this.textBoxDescription.Multiline = true;
            num1 = (int) num2 * 1926220047 ^ 36745404;
            continue;
          case 118:
            this.Padding = new Padding(9);
            num1 = (int) num2 * 1408272077 ^ -2137540531;
            continue;
          case 119:
            this.Controls.Add((Control) this.tableLayoutPanel);
            num1 = (int) num2 * -2124033824 ^ -890161630;
            continue;
          case 120:
            this.labelCopyright.Size = new Size(271, 17);
            num1 = (int) num2 * -1319644175 ^ -627889128;
            continue;
          case 121:
            this.ResumeLayout(false);
            num1 = (int) num2 * -1805549799 ^ 1946201956;
            continue;
          case 122:
            num1 = (int) num2 * 1758947357 ^ 110003083;
            continue;
          case 123:
            num1 = (int) num2 * -453382047 ^ 924978136;
            continue;
          case 124:
            this.labelProductName.Margin = new Padding(6, 0, 3, 0);
            num1 = (int) num2 * 479882941 ^ 102771248;
            continue;
          case 125:
            this.textBoxDescription.Name = "textBoxDescription";
            num1 = (int) num2 * 1349507345 ^ 1293416034;
            continue;
          case 126:
            this.tableLayoutPanel.TabIndex = 0;
            num1 = (int) num2 * 527359582 ^ 982186415;
            continue;
          case (uint) sbyte.MaxValue:
            this.labelVersion.Dock = DockStyle.Fill;
            num1 = (int) num2 * 391282083 ^ 983356943;
            continue;
          case 128:
            num1 = (int) num2 * 638188751 ^ 546281132;
            continue;
          case 129:
            this.tableLayoutPanel.RowStyles.Add(new RowStyle(SizeType.Percent, 10f));
            num1 = (int) num2 * 1538024174 ^ 1428830013;
            continue;
          case 130:
            this.labelProductName.TextAlign = ContentAlignment.MiddleLeft;
            num1 = (int) num2 * 1350525413 ^ 487155777;
            continue;
          case 131:
            this.okButton.Text = "&OK";
            num1 = (int) num2 * -1595850546 ^ -50360016;
            continue;
          case 132:
            this.tableLayoutPanel.Size = new Size(417, 265);
            num1 = (int) num2 * -1253816219 ^ -1523856228;
            continue;
          case 133:
            this.labelVersion.TabIndex = 0;
            num1 = (int) num2 * -536761864 ^ -1845339858;
            continue;
          case 134:
            this.labelProductName.Size = new Size(271, 17);
            this.labelProductName.TabIndex = 19;
            num1 = (int) num2 * 852526264 ^ -311120162;
            continue;
          case 135:
            num1 = (int) num2 * 973932032 ^ -1075627739;
            continue;
          case 136:
            num1 = (int) num2 * 431635092 ^ -559993775;
            continue;
          case 137:
            num1 = (int) num2 * -451262339 ^ -1086108561;
            continue;
          case 138:
            this.ShowInTaskbar = false;
            this.StartPosition = FormStartPosition.CenterParent;
            this.Text = "AboutBox1";
            num1 = (int) num2 * 810779868 ^ -968943266;
            continue;
          case 139:
            this.FormBorderStyle = FormBorderStyle.FixedDialog;
            num1 = (int) num2 * 627635421 ^ 703287070;
            continue;
          case 140:
            num1 = (int) num2 * 1860129752 ^ -2120546082;
            continue;
          case 141:
            this.tableLayoutPanel.Dock = DockStyle.Fill;
            num1 = (int) num2 * -1962404416 ^ -1257176650;
            continue;
          case 142:
            this.tableLayoutPanel.Controls.Add((Control) this.labelCompanyName, 1, 3);
            num1 = (int) num2 * 1315450073 ^ 1017288089;
            continue;
          case 143:
            this.Name = "AboutBox1";
            num1 = (int) num2 * 405048942 ^ 2059924230;
            continue;
          case 144:
            this.SuspendLayout();
            num1 = (int) num2 * -1266310067 ^ 1284244408;
            continue;
          case 145:
            this.labelCopyright.Name = "labelCopyright";
            num1 = (int) num2 * -1340538833 ^ -1622012121;
            continue;
          default:
            goto label_148;
        }
      }
label_3:
      return;
label_148:;
    }
  }
}
