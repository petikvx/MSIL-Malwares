// Decompiled with JetBrains decompiler
// Type: Fw02.q6YK
// Assembly: k3F4, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EF2862A8-7088-4F2B-ADD5-AFDC446098D9
// Assembly location: C:\Users\Administrateur\Downloads\Bazaar.2022.04\HEUR-Trojan-PSW.MSIL.Stealer.gen-ee71029a7b3d9d85e7a6c7c0ecc35d93ee37514713ba5033d491a0d7506e947b.exe

using An9;
using f9J8;
using m5F8;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Linq;
using System.Drawing;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using System.Windows.Forms.Automation;
using x3J;
using x7X;
using z0R5;
using Zq0t;

namespace Fw02
{
  [DesignerGenerated]
  public class q6YK : Form
  {
    private IContainer ႷႳ;
    [AccessedThroughProperty("Ⴈ")]
    private ComboBox ႷႥ;
    [AccessedThroughProperty("Ⴍ")]
    private TextBox ႷႤ;
    [AccessedThroughProperty("ႠႣ")]
    private DataGridView ႷႼ;
    [AccessedThroughProperty("ႠႷ")]
    private Label ႥႥ;
    [AccessedThroughProperty("ႠႳ")]
    private Label ႥႰ;
    [AccessedThroughProperty("ႠႭ")]
    private Button ႥႣ;
    internal static n2DY Ⴃ;
    internal static int[] Ⴐ;
    private Ct7d.Sc6f Ⴄ = new Ct7d.Sc6f();

    public q6YK()
    {
      this.Load += new EventHandler(this.x9C0);
      this.Shown += new EventHandler(this.r1PX);
      this.k9D6();
    }

    protected virtual void x1RE([In] bool obj0)
    {
      try
      {
        if (!obj0 || this.ႷႳ == null)
          return;
        this.ႷႳ.Dispose();
      }
      finally
      {
        this.Dispose(obj0);
      }
    }

    private void k9D6()
    {
      this.Ⴀ = new ComboBox();
      this.Ⴈ = new ComboBox();
      this.Ⴗ = new Label();
      this.Ⴓ = new Label();
      this.Ⴅ = new Label();
      this.Ⴍ = new TextBox();
      this.Ⴄ = new TextBox();
      this.Ⴜ = new Label();
      this.ႠႣ = new DataGridView();
      this.ႠႠ = new Label();
      this.ႠႨ = new Label();
      this.ႠႷ = new Label();
      this.ႠႳ = new Label();
      this.ႠႥ = new Label();
      this.ႠႭ = new Button();
      ((ISupportInitialize) this.ႠႣ).BeginInit();
      this.SuspendLayout();
      this.Ⴀ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.Ⴀ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴀ.FormattingEnabled = true;
      this.Ⴀ.Items.AddRange(new object[3]
      {
        (object) "All",
        (object) "Male",
        (object) "Female"
      });
      this.Ⴀ.Location = new Point(779, 74);
      this.Ⴀ.Name = "cboGender";
      this.Ⴀ.Size = new Size(109, 28);
      this.Ⴀ.TabIndex = 4;
      this.Ⴈ.DropDownStyle = ComboBoxStyle.DropDownList;
      this.Ⴈ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴈ.FormattingEnabled = true;
      this.Ⴈ.Items.AddRange(new object[5]
      {
        (object) "All",
        (object) "IT Dept.",
        (object) "HR Dept.",
        (object) "Accounting Dept.",
        (object) "Marketing Dept."
      });
      this.Ⴈ.Location = new Point(536, 76);
      this.Ⴈ.Name = "cboDepart";
      this.Ⴈ.Size = new Size(149, 28);
      this.Ⴈ.TabIndex = 3;
      this.Ⴗ.AutoSize = true;
      this.Ⴗ.BackColor = SystemColors.GradientActiveCaption;
      this.Ⴗ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴗ.Location = new Point(694, 81);
      this.Ⴗ.Name = "Label4";
      this.Ⴗ.Size = new Size(79, 20);
      this.Ⴗ.TabIndex = 62;
      this.Ⴗ.Text = "Gender :";
      this.Ⴓ.AutoSize = true;
      this.Ⴓ.BackColor = SystemColors.GradientActiveCaption;
      this.Ⴓ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴓ.Location = new Point(416, 82);
      this.Ⴓ.Name = "Label3";
      this.Ⴓ.Size = new Size(114, 20);
      this.Ⴓ.TabIndex = 61;
      this.Ⴓ.Text = "Department :";
      this.Ⴅ.AutoSize = true;
      this.Ⴅ.BackColor = SystemColors.GradientActiveCaption;
      this.Ⴅ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴅ.Location = new Point(232, 82);
      this.Ⴅ.Name = "Label2";
      this.Ⴅ.Size = new Size(70, 20);
      this.Ⴅ.TabIndex = 60;
      this.Ⴅ.Text = "Name : ";
      this.Ⴍ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴍ.Location = new Point(310, 76);
      this.Ⴍ.Name = "txtName";
      this.Ⴍ.Size = new Size(100, 26);
      this.Ⴍ.TabIndex = 2;
      this.Ⴄ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴄ.Location = new Point(103, 76);
      this.Ⴄ.Name = "txtStaffid";
      this.Ⴄ.Size = new Size(123, 26);
      this.Ⴄ.TabIndex = 1;
      this.Ⴜ.AutoSize = true;
      this.Ⴜ.BackColor = SystemColors.GradientActiveCaption;
      this.Ⴜ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.Ⴜ.Location = new Point(14, 81);
      this.Ⴜ.Name = "Label1";
      this.Ⴜ.Size = new Size(83, 20);
      this.Ⴜ.TabIndex = 57;
      this.Ⴜ.Text = "Staff ID :";
      this.ႠႣ.AllowUserToAddRows = false;
      this.ႠႣ.AllowUserToDeleteRows = false;
      this.ႠႣ.Anchor = AnchorStyles.Top | AnchorStyles.Bottom | AnchorStyles.Left | AnchorStyles.Right;
      this.ႠႣ.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells;
      this.ႠႣ.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.AllCells;
      this.ႠႣ.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
      this.ႠႣ.Location = new Point(18, 121);
      this.ႠႣ.Name = "dgv";
      this.ႠႣ.ReadOnly = true;
      this.ႠႣ.RowTemplate.Height = 28;
      this.ႠႣ.SelectionMode = DataGridViewSelectionMode.FullRowSelect;
      this.ႠႣ.Size = new Size(870, 322);
      this.ႠႣ.TabIndex = 56;
      this.ႠႠ.Font = new Font("Microsoft Sans Serif", 11f, FontStyle.Bold | FontStyle.Underline, GraphicsUnit.Point, (byte) 0);
      this.ႠႠ.Location = new Point(18, 9);
      this.ႠႠ.Name = "Label11";
      this.ႠႠ.Size = new Size(249, 67);
      this.ႠႠ.TabIndex = 55;
      this.ႠႠ.Text = "Select a Staff to Update or Delete";
      this.ႠႨ.AutoSize = true;
      this.ႠႨ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႠႨ.Location = new Point(273, 22);
      this.ႠႨ.Name = "Label9";
      this.ႠႨ.Size = new Size(128, 20);
      this.ႠႨ.TabIndex = 78;
      this.ႠႨ.Text = "Welcome ! HR ";
      this.ႠႷ.BackColor = SystemColors.ActiveCaption;
      this.ႠႷ.BorderStyle = BorderStyle.FixedSingle;
      this.ႠႷ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႠႷ.Location = new Point(564, 21);
      this.ႠႷ.Name = "lblHRname";
      this.ႠႷ.Size = new Size(125, 30);
      this.ႠႷ.TabIndex = 77;
      this.ႠႳ.BackColor = SystemColors.ActiveCaption;
      this.ႠႳ.BorderStyle = BorderStyle.FixedSingle;
      this.ႠႳ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႠႳ.Location = new Point(433, 21);
      this.ႠႳ.Name = "lblHRid";
      this.ႠႳ.Size = new Size(125, 30);
      this.ႠႳ.TabIndex = 76;
      this.ႠႥ.Anchor = AnchorStyles.Bottom | AnchorStyles.Left;
      this.ႠႥ.AutoSize = true;
      this.ႠႥ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႠႥ.Location = new Point(24, 449);
      this.ႠႥ.Name = "lblCount";
      this.ႠႥ.Size = new Size(98, 20);
      this.ႠႥ.TabIndex = 80;
      this.ႠႥ.Text = "X record(s)";
      this.ႠႭ.BackColor = Color.IndianRed;
      this.ႠႭ.Cursor = Cursors.Hand;
      this.ႠႭ.DialogResult = DialogResult.Cancel;
      this.ႠႭ.Font = new Font("Microsoft Sans Serif", 8f, FontStyle.Bold, GraphicsUnit.Point, (byte) 0);
      this.ႠႭ.ForeColor = SystemColors.ControlLightLight;
      this.ႠႭ.Location = new Point(763, 21);
      this.ႠႭ.Name = "btnHome";
      this.ႠႭ.Size = new Size(125, 40);
      this.ႠႭ.TabIndex = 5;
      this.ႠႭ.Text = "&HomePage";
      this.ႠႭ.UseVisualStyleBackColor = false;
      this.AutoScaleDimensions = new SizeF(9f, 20f);
      this.AutoScaleMode = AutoScaleMode.Font;
      this.BackColor = SystemColors.GradientActiveCaption;
      this.ClientSize = new Size(914, 478);
      this.Controls.Add((Control) this.ႠႭ);
      this.Controls.Add((Control) this.ႠႥ);
      this.Controls.Add((Control) this.ႠႨ);
      this.Controls.Add((Control) this.ႠႷ);
      this.Controls.Add((Control) this.ႠႳ);
      this.Controls.Add((Control) this.Ⴀ);
      this.Controls.Add((Control) this.Ⴈ);
      this.Controls.Add((Control) this.Ⴗ);
      this.Controls.Add((Control) this.Ⴓ);
      this.Controls.Add((Control) this.Ⴅ);
      this.Controls.Add((Control) this.Ⴍ);
      this.Controls.Add((Control) this.Ⴄ);
      this.Controls.Add((Control) this.Ⴜ);
      this.Controls.Add((Control) this.ႠႣ);
      this.Controls.Add((Control) this.ႠႠ);
      this.FormBorderStyle = FormBorderStyle.None;
      this.Name = "ႳႰ";
      this.Text = "UpdateStaffDetail";
      ((ISupportInitialize) this.ႠႣ).EndInit();
      this.ResumeLayout(false);
      this.PerformLayout();
    }

    internal virtual ComboBox Ⴀ
    {
      get => this.Ⴄ.Ⴄ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.Jo03);
        object ⴄ1 = (object) this.Ⴄ.Ⴄ;
        if (ⴄ1 is ComboBox)
          ((ComboBox) ⴄ1).SelectedIndexChanged -= obj as EventHandler;
        this.Ⴄ.Ⴄ = value;
        object ⴄ2 = (object) this.Ⴄ.Ⴄ;
        if (!(ⴄ2 is ComboBox))
          return;
        ((ComboBox) ⴄ2).SelectedIndexChanged += obj as EventHandler;
      }
    }

    internal virtual ComboBox Ⴈ
    {
      get => this.ႷႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new EventHandler(this.Wn0i);
        ListControl ⴗⴅ1 = (ListControl) this.ႷႥ;
        if ((ComboBox) ⴗⴅ1 != null)
          (ⴗⴅ1 as ComboBox).SelectedIndexChanged -= (EventHandler) multicastDelegate;
        this.ႷႥ = value;
        ListControl ⴗⴅ2 = (ListControl) this.ႷႥ;
        if (!(ⴗⴅ2 is ComboBox))
          return;
        (ⴗⴅ2 as ComboBox).SelectedIndexChanged += (EventHandler) multicastDelegate;
      }
    }

    internal virtual Label Ⴗ
    {
      get => this.Ⴄ.Ⴃ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴃ = (object) value as Label;
    }

    internal virtual Label Ⴓ
    {
      get => this.Ⴄ.Ⴐ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴐ = value;
    }

    internal virtual Label Ⴅ
    {
      get => this.Ⴄ.Ⴗ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴗ = (IAutomationLiveRegion) value as Label;
    }

    internal virtual TextBox Ⴍ
    {
      get => this.ႷႤ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.m6J4);
        object ⴗⴄ1 = (object) this.ႷႤ;
        if ((TextBox) ⴗⴄ1 != null)
          ((Control) ⴗⴄ1).TextChanged -= obj as EventHandler;
        this.ႷႤ = value;
        object ⴗⴄ2 = (object) this.ႷႤ;
        if ((TextBox) ⴗⴄ2 == null)
          return;
        (ⴗⴄ2 as TextBox).TextChanged += obj as EventHandler;
      }
    }

    internal virtual TextBox Ⴄ
    {
      get => this.Ⴄ.Ⴅ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.j2HM);
        object ⴅ1 = (object) this.Ⴄ.Ⴅ;
        if ((TextBox) ⴅ1 != null)
          (ⴅ1 as TextBox).TextChanged -= obj as EventHandler;
        this.Ⴄ.Ⴅ = value;
        object ⴅ2 = (object) this.Ⴄ.Ⴅ;
        if (!(ⴅ2 is TextBox))
          return;
        (ⴅ2 as TextBox).TextChanged += obj as EventHandler;
      }
    }

    internal virtual Label Ⴜ
    {
      get => this.Ⴄ.Ⴈ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴈ = (Control) value as Label;
    }

    internal virtual DataGridView ႠႣ
    {
      get => this.ႷႼ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        MulticastDelegate multicastDelegate = (MulticastDelegate) new DataGridViewCellEventHandler(this.Wc9e);
        ISupportInitialize ⴗⴜ1 = (ISupportInitialize) this.ႷႼ;
        if ((DataGridView) ⴗⴜ1 != null)
          ((DataGridView) ⴗⴜ1).CellDoubleClick -= multicastDelegate as DataGridViewCellEventHandler;
        this.ႷႼ = value;
        ISupportInitialize ⴗⴜ2 = (ISupportInitialize) this.ႷႼ;
        if (!(ⴗⴜ2 is DataGridView))
          return;
        (ⴗⴜ2 as DataGridView).CellDoubleClick += multicastDelegate as DataGridViewCellEventHandler;
      }
    }

    internal virtual Label ႠႠ
    {
      get => this.Ⴄ.Ⴀ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴀ = value;
    }

    internal virtual Label ႠႨ
    {
      get => this.Ⴄ.Ⴓ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴓ = (object) value as Label;
    }

    internal virtual Label ႠႷ
    {
      get => this.ႥႥ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႥႥ = value;
    }

    internal virtual Label ႠႳ
    {
      get => this.ႥႰ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.ႥႰ = value;
    }

    internal virtual Label ႠႥ
    {
      get => this.Ⴄ.Ⴍ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set => this.Ⴄ.Ⴍ = value;
    }

    internal virtual Button ႠႭ
    {
      get => this.ႥႣ;
      [MethodImpl(MethodImplOptions.Synchronized)] [param: In] set
      {
        object obj = (object) new EventHandler(this.d0S9);
        IButtonControl ⴅⴃ1 = (IButtonControl) this.ႥႣ;
        if (ⴅⴃ1 is Button)
          ((Control) ⴅⴃ1).Click -= (EventHandler) obj;
        this.ႥႣ = value;
        IButtonControl ⴅⴃ2 = (IButtonControl) this.ႥႣ;
        if ((Button) ⴅⴃ2 == null)
          return;
        ((Control) ⴅⴃ2).Click += obj as EventHandler;
      }
    }

    private void x9C0([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴀ.Text = "All";
      this.Ⴈ.Text = "All";
      this.Mk4w();
      this.ႠႷ.Text = Ec63.Ⴀ;
      this.ႠႳ.Text = Ec63.Ⴅ;
      this.Ⴄ.Focus();
      En6.Ⴈ.Ⴓ.Ⴜ.Enabled = true;
      En6.Ⴈ.Ⴓ.ႠႥ.Enabled = false;
      En6.Ⴈ.Ⴓ.Text = "Human Resource Management System (HR)- Update staff details";
    }

    private void r1PX([In] object obj0, [In] EventArgs obj1)
    {
      this.Ⴀ.Text = "All";
      this.Ⴈ.Text = "All";
      this.Mk4w();
      this.ႠႷ.Text = Ec63.Ⴀ;
      this.ႠႳ.Text = Ec63.Ⴅ;
      this.Ⴄ.Focus();
      En6.Ⴈ.Ⴓ.Ⴜ.Enabled = true;
      En6.Ⴈ.Ⴓ.ႠႥ.Enabled = false;
    }

    private void Mk4w()
    {
      object obj = (object) new q6YK.Hy4p();
      (obj as q6YK.Hy4p).Ⴀ = this.Ⴄ.Text;
      ((q6YK.Hy4p) obj).Ⴗ = this.Ⴍ.Text;
      (obj as q6YK.Hy4p).Ⴃ = this.Ⴈ.Text;
      ((q6YK.Hy4p) obj).Ⴓ = this.Ⴀ.Text;
      (obj as q6YK.Hy4p).Ⴍ = "Staff";
      Table<Af03> ⴃ = ((DataContext) new Tt1() as Tt1).Ⴃ;
      Expression expression1 = (Expression) Expression.Parameter(typeof (Af03), "a");
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: field reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: field reference
      Expression<Func<Af03, bool>> predicate = Expression.Lambda<Func<Af03, bool>>((Expression) Expression.And((Expression) Expression.And((Expression) Expression.And((Expression) Expression.And((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) (expression1 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.f5CG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj as q6YK.Hy4p), typeof (q6YK.Hy4p)), FieldInfo.GetFieldFromHandle(__fieldref (q6YK.Hy4p.Ⴍ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Call((Expression) Expression.Property(expression1, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (string.Contains)), (Expression) Expression.Field((Expression) Expression.Constant((object) (q6YK.Hy4p) obj, typeof (q6YK.Hy4p)), FieldInfo.GetFieldFromHandle(__fieldref (q6YK.Hy4p.Ⴀ))))), (Expression) Expression.Call((Expression) Expression.Property((Expression) (expression1 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.Fi02))), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (string.Contains)), (Expression) Expression.Field((Expression) Expression.Constant((object) (obj as q6YK.Hy4p), typeof (q6YK.Hy4p)), FieldInfo.GetFieldFromHandle(__fieldref (q6YK.Hy4p.Ⴗ))))), (Expression) Expression.Or((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Field((Expression) Expression.Constant((object) (q6YK.Hy4p) obj, typeof (q6YK.Hy4p)), FieldInfo.GetFieldFromHandle(__fieldref (q6YK.Hy4p.Ⴃ))),
        (Expression) Expression.Constant((object) "All", typeof (string)),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property(expression1, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.a4KG))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj as q6YK.Hy4p), typeof (q6YK.Hy4p)), FieldInfo.GetFieldFromHandle(__fieldref (q6YK.Hy4p.Ⴃ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null))), (Expression) Expression.Or((Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj as q6YK.Hy4p), typeof (q6YK.Hy4p)), FieldInfo.GetFieldFromHandle(__fieldref (q6YK.Hy4p.Ⴓ))),
        (Expression) Expression.Constant((object) "All", typeof (string)),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null), (Expression) Expression.Equal((Expression) Expression.Call((Expression) null, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Operators.CompareString)), new Expression[3]
      {
        (Expression) Expression.Property((Expression) (expression1 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.Xr81))),
        (Expression) Expression.Field((Expression) Expression.Constant((object) (obj as q6YK.Hy4p), typeof (q6YK.Hy4p)), FieldInfo.GetFieldFromHandle(__fieldref (q6YK.Hy4p.Ⴓ))),
        (Expression) Expression.Constant((object) false, typeof (bool))
      }), (Expression) Expression.Constant((object) 0, typeof (int)), false, (MethodInfo) null))), (ParameterExpression) expression1);
      IQueryable<Af03> source1 = ⴃ.Where<Af03>(predicate);
      Expression expression2 = (Expression) Expression.Parameter(typeof (Af03), "a");
      // ISSUE: method reference
      // ISSUE: type reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: method reference
      // ISSUE: type reference
      // ISSUE: method reference
      // ISSUE: type reference
      // ISSUE: method reference
      // ISSUE: type reference
      // ISSUE: method reference
      // ISSUE: type reference
      Expression<Func<Af03, c1H<string, string, string, string>>> selector = Expression.Lambda<Func<Af03, c1H<string, string, string, string>>>((Expression) Expression.New((ConstructorInfo) MethodBase.GetMethodFromHandle(__methodref (c1H<string, string, string, string>.\u002Ector), __typeref (c1H<string, string, string, string>)), (IEnumerable<Expression>) new Expression[4]
      {
        (Expression) Expression.Property(expression2, (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.i0KG))),
        (Expression) Expression.Property((Expression) (expression2 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.Fi02))),
        (Expression) Expression.Property((Expression) (expression2 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.a4KG))),
        (Expression) Expression.Property((Expression) (expression2 as ParameterExpression), (MethodInfo) MethodBase.GetMethodFromHandle(__methodref (Af03.Xr81)))
      }, (MemberInfo) MethodBase.GetMethodFromHandle(__methodref (c1H<string, string, string, string>.Ⴃ), __typeref (c1H<string, string, string, string>)), (MemberInfo) MethodBase.GetMethodFromHandle(__methodref (c1H<string, string, string, string>.Ⴓ), __typeref (c1H<string, string, string, string>)), (MemberInfo) MethodBase.GetMethodFromHandle(__methodref (c1H<string, string, string, string>.Ⴐ), __typeref (c1H<string, string, string, string>)), (MemberInfo) MethodBase.GetMethodFromHandle(__methodref (c1H<string, string, string, string>.Ⴄ), __typeref (c1H<string, string, string, string>))), (ParameterExpression) expression2);
      object source2 = (object) source1.Select<Af03, c1H<string, string, string, string>>(selector);
      this.ႠႣ.DataSource = (object) (IQueryable<c1H<string, string, string, string>>) source2;
      this.ႠႥ.Text = (source2 as IQueryable<c1H<string, string, string, string>>).Count<c1H<string, string, string, string>>().ToString("0 record(s)");
    }

    private void j2HM([In] object obj0, [In] EventArgs obj1) => this.Mk4w();

    private void m6J4([In] object obj0, [In] EventArgs obj1) => this.Mk4w();

    private void Wn0i([In] object obj0, [In] EventArgs obj1) => this.Mk4w();

    private void Jo03([In] object obj0, [In] EventArgs obj1) => this.Mk4w();

    private void Wc9e([In] object obj0, [In] DataGridViewCellEventArgs obj1)
    {
      int rowIndex = obj1.RowIndex;
      if (rowIndex <= -1)
        return;
      En6.Ⴈ.Ⴄ.ႠႨ = Conversions.ToString(this.ႠႣ.Rows[rowIndex].Cells[0].Value);
      int num = (int) En6.Ⴈ.Ⴄ.ShowDialog((IWin32Window) this);
      this.Mk4w();
    }

    private void d0S9([In] object obj0, [In] EventArgs obj1) => En6.Ⴈ.Ⴓ.Pg6f((Form) En6.Ⴈ.Ⴗ);

    internal sealed class Hy4p
    {
      public string Ⴍ;
      public string Ⴀ;
      public string Ⴗ;
      public string Ⴃ;
      public string Ⴓ;
    }
  }
}
