// Decompiled with JetBrains decompiler
// Type: .
// Assembly: Crypter, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: B731B599-442F-4A0A-B652-36FDF3199CF1
// Assembly location: C:\Users\Administrateur\Downloads\VirusShare_CryptoRansom_20160715-msil\Trojan.MSIL.Zapchast.ctbt-4d7f60f5f9cd63e753868459d0468b2925cdad0dc9dd53f889e662aa428efebf.exe

using \u0007;
using SmartAssembly.Delegates;
using SmartAssembly.HouseOfCards;
using SmartAssembly.SmartExceptionsCore;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace \u0007
{
  internal sealed class \u0003
  {
    [NonSerialized]
    internal static GetString \u0010;

    public static void \u0001([In] Exception obj0) => \u0003.\u0001(obj0, new object[0]);

    public static void \u0001([In] Exception obj0, [In] object obj1)
    {
      do
      {
        if (true)
          goto label_3;
label_2:
        continue;
label_3:
        \u0003.\u0001(obj0, new object[1]{ obj1 });
        goto label_2;
      }
      while (false);
    }

    public static void \u0001([In] Exception obj0, [In] object obj1, [In] object obj2) => \u0003.\u0001(obj0, new object[2]
    {
      obj1,
      obj2
    });

    public static void \u0001([In] Exception obj0, [In] object obj1, [In] object obj2, [In] object obj3)
    {
      do
      {
        if (true)
          goto label_3;
label_2:
        continue;
label_3:
        \u0003.\u0001(obj0, new object[3]
        {
          obj1,
          obj2,
          obj3
        });
        goto label_2;
      }
      while (false);
    }

    public static void \u0001([In] Exception obj0, [In] object obj1, [In] object obj2, [In] object obj3, [In] object obj4) => \u0003.\u0001(obj0, new object[4]
    {
      obj1,
      obj2,
      obj3,
      obj4
    });

    public static void \u0001(
      [In] Exception obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3,
      [In] object obj4,
      [In] object obj5)
    {
      \u0003.\u0001(obj0, new object[5]
      {
        obj1,
        obj2,
        obj3,
        obj4,
        obj5
      });
    }

    public static void \u0001(
      [In] Exception obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3,
      [In] object obj4,
      [In] object obj5,
      [In] object obj6)
    {
      \u0003.\u0001(obj0, new object[6]
      {
        obj1,
        obj2,
        obj3,
        obj4,
        obj5,
        obj6
      });
    }

    public static void \u0001(
      [In] Exception obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3,
      [In] object obj4,
      [In] object obj5,
      [In] object obj6,
      [In] object obj7)
    {
      if (false)
        return;
      \u0003.\u0001(obj0, new object[7]
      {
        obj1,
        obj2,
        obj3,
        obj4,
        obj5,
        obj6,
        obj7
      });
    }

    public static void \u0001(
      [In] Exception obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3,
      [In] object obj4,
      [In] object obj5,
      [In] object obj6,
      [In] object obj7,
      [In] object obj8)
    {
      \u0003.\u0001(obj0, new object[8]
      {
        obj1,
        obj2,
        obj3,
        obj4,
        obj5,
        obj6,
        obj7,
        obj8
      });
    }

    public static void \u0001(
      [In] Exception obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3,
      [In] object obj4,
      [In] object obj5,
      [In] object obj6,
      [In] object obj7,
      [In] object obj8,
      [In] object obj9)
    {
      \u0003.\u0001(obj0, new object[9]
      {
        obj1,
        obj2,
        obj3,
        obj4,
        obj5,
        obj6,
        obj7,
        obj8,
        obj9
      });
    }

    public static void \u0001(
      [In] Exception obj0,
      [In] object obj1,
      [In] object obj2,
      [In] object obj3,
      [In] object obj4,
      [In] object obj5,
      [In] object obj6,
      [In] object obj7,
      [In] object obj8,
      [In] object obj9,
      [In] object obj10)
    {
      \u0003.\u0001(obj0, new object[10]
      {
        obj1,
        obj2,
        obj3,
        obj4,
        obj5,
        obj6,
        obj7,
        obj8,
        obj9,
        obj10
      });
    }

    public static void \u0001([In] Exception obj0, [In] object[] obj1)
    {
      int num1 = -1;
      int num2 = -1;
      int num3 = 0;
      StackTrace stackTrace = new StackTrace(obj0);
      try
      {
        switch (\u008F.\u007E\u008B\u0002((object) obj0))
        {
          case null:
            break;
          default:
            string[] strArray1 = \u0018\u0002.\u007E\u008B\u0003((object) \u008F.\u007E\u008B\u0002((object) obj0), new char[2]
            {
              '\r',
              '\n'
            });
            if (true)
            {
              string[] strArray2 = strArray1;
              int index = 0;
              while (true)
              {
                int num4 = index;
                int num5 = strArray2.Length;
                int num6;
                int num7;
                while (true)
                {
                  int num8 = num5;
                  if (num4 < num8)
                  {
                    string str = strArray2[index];
                    if (\u001C.\u007E\u009C((object) str) > 0)
                    {
                      num6 = num3;
                      num7 = 1;
                      if (num7 == 0)
                      {
                        num5 = num7;
                        num4 = num6;
                      }
                      else
                        break;
                    }
                    else
                      goto label_7;
                  }
                  else
                    goto label_11;
                }
                num3 = num6 + num7;
label_7:
                ++index;
              }
            }
            else
              break;
        }
      }
      catch
      {
        num3 = -1;
      }
label_11:
      try
      {
        if (\u001C.\u007E\u0002\u0002((object) stackTrace) > 0)
        {
          StackFrame stackFrame = \u0080\u0002.\u007E\u0094\u0003((object) stackTrace, \u001C.\u007E\u0002\u0002((object) stackTrace) - 1);
          num1 = (\u001C.\u007E\u009D((object) \u0086\u0002.\u007E\u0099\u0003((object) stackFrame)) & 16777215) - 1;
          num2 = \u001C.\u007E\u0003\u0002((object) stackFrame);
        }
      }
      catch
      {
      }
      try
      {
        SmartStackFrame smartStackFrame = new SmartStackFrame(num1, obj1, num2, num3);
        LinkedList<object> linkedList;
        if (!\u0013\u0002.\u007E\u0083\u0003((object) \u0012\u0002.\u007E\u0082\u0003((object) obj0), (object) \u0003.\u0010(2209)))
        {
          linkedList = new LinkedList<object>();
          \u0087\u0002.\u007E\u009A\u0003((object) \u0012\u0002.\u007E\u0082\u0003((object) obj0), (object) \u0003.\u0010(2209), (object) linkedList);
        }
        else
          linkedList = (LinkedList<object>) \u0014\u0002.\u007E\u0084\u0003((object) \u0012\u0002.\u007E\u0082\u0003((object) obj0), (object) \u0003.\u0010(2209));
        linkedList.AddLast((object) smartStackFrame);
      }
      catch
      {
      }
    }

    static \u0003() => Strings.CreateGetStringDelegate(typeof (\u0003));
  }
}
